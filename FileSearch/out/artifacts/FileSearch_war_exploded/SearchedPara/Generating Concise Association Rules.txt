 Association rule mining has made many achievements in the area of knowledge discovery. However, the quality of the extracted association rules is a big concern. One problem with the quality of the extracted association rules is the huge size of the extracted rule set. As a matter of fact, very often tens of thousands of association rules are extracted among which many are redundant thus useless. Mining non-redundant rules is a promising approach to solve this prob-lem. The Min-max exact basis proposed by Pasquier et al [Pasquier05] has showed exciting results by generating only non-redundant rules. In this paper, we first propose a re-laxing definition for redundancy under which the Min-max exact basis still contains redundant rules; then we propose a condensed representation called Reliable exact basis for exact association rules. The rules in the Reliable exact ba-sis are not only non-redundant but also more succinct than the rules in Min-max exact basis. We prove that the re-dundancy eliminated by the Reliable exact basis does not reduce the belief to the Reliable exact basis. The size of the Reliable exact basis is much smaller than that of the Min-max exact basis. Moreover, we prove that all exact as-sociation rules can be deduced from the Reliable exact basis. Therefore the Reliable exact basis is a lossless representation of exact association rules. Experimental results show that the Reliable exact basis significantly reduces the number of non-redundant rules.
 H2.8 [ Database Management ]: Database application -Data mining Algorithms Redundant association rules, closed itemsets, generators
Association rule mining, firstly stated in [1], has become one of the most important data mining techniques. It aims to extract interesting correlations and associations among sets of items in large datasets. Traditionally, two phases are involved in mining association rules: extracting frequent itemsets and generating association rules from the frequent itemsets with the constraints of minimal support and min-imal confidence. The rules whose confidence is larger than a user-specified minimum confidence threshold are consid-ered interesting or useful. This is known as frequent itemset based approach. Various models have been proposed, most of them are focused on developing novel algorithms and data structures to aid efficient computation of such rules [2, 3, 6, 9, 13, 22], especially on improving the efficiency of generat-ing frequent itemsets. However, the quality of the mined association rules hasn X  X  drawn adequate attention. As a matter of fact, very often the resulting rule base can easily contain several thousands of rules among which are many re-dundancies and thus useless in practice. Many efforts have been made on solving this problem including defining var-ious interest measures, incorporating constraints into min-ing process, or designing specific templates to mine for re-stricted rules [5, 6, 8, 12, 18]. Especially, from late 90s X  a new trend emerges which adopts frequent closed itemsets to extract association rules. The notion of closed frequent itemset has its origins in the mathematical theory of Formal Concept Analysis (FCA) introduced in the early 80s X  X 7, 19]. FCA has over the years grown to a powerful theory for data analysis, information retrieval, and knowledge discovery. Its adaptation to the association rule mining has been studied since late of 90s X  [14, 16, 20]. The use of frequent closed itemsets presents a clear promise to reduce the number of extracted rules and also provides a concise and lossless rep-resentation of association rules such as the non-redundant association rules discussed in [15, 21] and the representative association rules discussed in [10]. However, the redundancy still remains in the extracted rules using the closure based approaches.

In this paper, we propose a condensed association rule basis from which more concise non-redundant rules can be extracted. We adopt a similar definition of non-redundant association rules that have minimal antecedents and maxi-mal consequents as defined by Pasquier et al. [15]. However, our definition relaxes the requirements to redundancy, thus more redundant rules can be eliminated. The certainty fac-tor (CF) is an important and popular used measure of belief to inference rules [17]. We prove that the redundant rules eliminated by our approach have less or equal CF belief val-ues than that of their corresponding non-redundant rules which are extracted, and thus the elimination of such rules will not reduce the belief to the extracted rules. Moreover, we prove that the Reliable exact basis is a lossless represen-tation of exact association rules since all exact association rules can be deduced from the Reliable exact basis.
The paper is organized as follows. Section 2 briefly dis-cusses some related work. The basic concepts of association rule mining are given in Section 3. In Section 4, we firstly propose a definition to redundancy and then introduce a concise association rule basis for extracting non-redundant rules. Experimental results are given in Section 5. Finally, Section 6 concludes the paper.
One approach on addressing the quality of association rules is to apply constraints to generate only those asso-ciation rules that are interesting to users based on some constraints. [12] and [18] proposed some algorithms that in-corporate item constraints to the process of generating fre-quent itemsets. Also some works have been done on mea-suring association rules with interestingness parameters [6]. These approaches focus on pruning the association rules to get more general or informative association rules based on interestingness parameters. The approach proposed in [4] integrates various constraints into mining process including consequent constraint and minimal improvement constraint as well. The consequent constraint is used to restrict rules with certain consequent specified by the user, while minimal improvement constraint is used to simplify the antecedents of rules based on item X  X  contribution to the confidence and therefore prune association rules that have more specific an-tecedent but do not make more contribution to the confi-dence. Another approach is to use a taxonomy of items to extract generalized association rules [8], i.e., to generate rules between itemsets that belong to different abstract lev-els in the taxonomy, especially between high abstract levels aiming at reducing the number of extracted rules.
The approaches mentioned above aim at reducing the num-ber of extracted rules and also improving the X  X sefulness X  of the rules, but eliminating redundancy of rules is not a focus. The approaches proposed in [20] and [15] focus on extract-ing non-redundant rules. Both of them make use of the clo-sure of the Galois connection [7] to extract non-redundant rules from frequent closed itemsets instead of from frequent itemsets. One difference between the two approaches is the definition of redundancy. The approach proposed in [20] extracts the rules with shorter antecedent and shorter con-sequent as well among rules which have the same confidence, while the method proposed in [15] defines that the non-redundant rules are those which have minimal antecedents and maximal consequents. Our definition to non-redundant rules is similar to that of [15]. However, the requirement to redundancy is relaxed, and the less requirement makes more rules to be considered redundant and thus eliminated. Most importantly, we prove that the elimination of such re-dundant rules does not reduce the belief to the extracted rules. The classical definition of association rules was firstly given 1-itemsets 2-itemsets 3-itemsets 4-itemsets be a transaction that contains a set of items such that t  X  I , T be a database containing different identifiable transac-tions. An association rule is an implication in the form of X  X  Y , where X, Y  X  I are sets of items called itemsets, and X sequent, the rule means that X implies Y . Various metrics describe the utility of an association rule. The most com-mon ones are the percentage of all transactions containing X  X  Y which is called the support, and the percentage of transactions containing X  X  Y among transactions contain-ing X which is called confidence of the rule. Association rule mining is to find out association rules that satisfy the predefined minimum support and confidence from a given database. The problem is usually decomposed into two sub-problems. One is to find those itemsets whose occurrences exceed a predefined threshold in the database, those item-sets are called frequent itemsets. The second subproblem is to generate association rules from those frequent itemsets with the constraints of minimal confidence and support. The frequent itemsets shown in Table 2 are generated from the simple dataset depicted in Table 1 which is the example dataset used in [15]. Table 3 displays all the 50 associa-tion rules extracted from these frequent itemsets with the minimum confidence and support being set to 2/6.
The definition of closed itemsets comes from the closure operation of the Galois connection [7]. Let I denote the set of items and T denote the set of transactions, 2 I and 2
T are the power set of I and T , respectively.  X  i  X  I and  X  t  X  T , if item i appears in transaction t , then i and t has a binary relation  X  denoted as i X t . The Galois connection of the binary relation is defined by the following mappings where X  X  I , Y  X  T :  X  ( X ) represents a set of transactions each of which contains X .  X  ( X ) is called the transaction mapping of X .  X  ( Y ) represents a set of items which are the common items among the transactions in Y .  X  ( Y ) is called the item mapping of Y . Table 3: Association rules with support and confi-dence Table 4: Closed Itemsets and Minimal Generators The composition  X   X   X  is called closure operator on itemsets.  X   X   X  ( X ), which is called the closure of X , gives the common items among the transactions each of which contains X .
Definition 1. (Frequent Closed Itemsets) Let X be a sub-set of I . X is a frequent closed itemset iff  X   X   X  ( X ) = X and X is a frequent itemset.

Definition 2. (Generators) An itemset g  X  2 I is a genera-g is said a minimal generator of the closed itemset set c if 6 X  g 0  X  g such that  X   X   X  ( g 0 ) = c .

Definition 3. (Supports) The support of an itemset X , denoted as supp ( X ), is the size of  X  ( X ), i.e., supp ( X ) = |  X  ( X ) | .

For the example dataset given in Table 1, the closed item-sets and their minimal generators (conf = 2/6) are given in Table 4. From Definition 2, we can get that g  X  c is true for any generator g and its closed itemset c . The Galois connection satisfies the following properties[7]. Property 1. Let X , c  X  2 I . If c is the closed itemset of X , then supp ( X ) = supp ( c ) , Property 2. Let X , X 1 , X 2  X  2 I and Y , Y 1 , Y 2  X  2 1. X 1  X  X 2 =  X   X  ( X 1 )  X   X  ( X 2 ) 2. Y 1  X  Y 2 =  X   X  ( Y 1 )  X   X  ( Y 2 ) 3. X  X   X   X   X  ( X ) and Y  X   X   X   X  ( Y ) 4.  X  ( X 1  X  X 2 ) =  X  ( X 1 )  X   X  ( X 2 ) 5.  X  ( X 1  X  X 2 ) =  X  ( X 1 )  X   X  ( X 2 )
Property 3. If X  X  I is a minimal generator of a closed itemset, then all subsets of X are minimal generators.
The basic principles of the certainty factor theory were first introduced in MYCIN [17], an expert system for the di-agnosis and therapy of blood infections, to express how accu-rate and truthful a rule is and how reliable the antecedent of the rule is. The certainty factor theory is based on two func-tions: measure of belief MB ( X, Y ) and measure of disbelief MD ( X, Y ) for a rule X  X  Y . These functions indicate, respectively, the degree of the belief that the consequent Y would be increased if antecedent X was observed, and the degree of the disbelief that the consequent Y would be in-creased by observing the same antecedent X . In this paper, the following measurements [11] are adopted to measure be-lief and disbelief: where, in the context of association rules, P ( Y/X ) and P ( Y ) are the confidence of the rule and the support of the consequent, respectively. The values of MB ( X, Y ) and MD ( X, Y ) range between 0 and 1 measuring the strength of belief or disbelief in consequent Y given antecedent X . MB ( X, Y ) weighs how much the antecedent X increases the possibility of Y occurring. If the antecedent is very weak to P ( Y ), then P ( Y/X )  X  P ( Y ) is almost zero, and the uncertainty of Y remains about the same. On the other hand, if the antecedent completely support the consequent, then P ( Y/X )  X  P ( Y ) will equal 1 thus MB ( X, Y ) will be 1. MD ( X, Y )=1 indicates that the antecedent completely denies the consequent thus the disbelief in the rule reaches its highest value. The total strength of belief or disbelief in the association captured by the rule is measured by the certainty factor which is defined as follows:
The value of a certainty factor is between 1 and -1. Neg-ative values represent cases where the antecedent is against the consequent; positive values represent that the antecedent supports the consequent; while CF =0 means that the an-tecedent does not influence the belief to Y . Obviously, as-sociation rules with high CF values are more useful and important since they represent strong positive associations between antecedents and consequents. Indeed, the essential aim of association rule mining is to discover strong posi-tive associations from large amount of data. Therefore, we propose in this paper that the certainty factors can be con-sidered in determining useful association rules.
It is widely recognized that frequent itemset based asso-ciation rule mining suffers from the generation of very large number of association rules. Recent studies have shown that all the information contained in frequent itemsets can be suf-ficiently captured by a set of closed itemsets with a much smaller size [15, 20]. Using closed itemsets and generators to extract association rules can greatly reduce the number of extracted rules without losing the information captured in the original rules. However, redundancy still exists in the extracted association rules using the closed itemsets based approach. In this section, we first discuss the redundancy in association rules and then describe a condensed association rule basis by which more concise non-redundant association rules can be derived.
The rules in Table 3 are considered useful based on the predefined minimum support and confidence. However, some of the rules actually do not contribute new information to the rule set. For example, rules 1, 13, 14, and 15 can be derived from rule 37 and all these rules have the same con-fidence. Therefore, removing rules 1, 13, 14, and 15 won X  X  change the power of the rule set. All these rules have the same antecedent and identical confidence, while rule 37 has the longest consequent which is a superset of the consequent of other rules and thus brings more information than the other rules do. Therefore, rules 1, 13, 14, and 15 are con-sidered redundant to rule 37. On the other hand, the conse-quent of rules 25, 32, and 47 is the same as the consequent of rule 6, which means that these rules can conclude the same result. However, rules 25, 32, and 47 have a larger antecedent to be satisfied than the antecedent that rule 6 has. That means, rules 25, 32, and 47 do not bring more information but require more in order to be fired. In this case, rules 25, 32, and 47 are considered redundant to rule 6. The following definition defines such kind of redundant rules.
 Definition 4. (Redundant rules) Let X  X  Y and X 0  X  Y 0 be two association rules which have the same confidence. X  X  Y is said a redundant rule to X 0  X  Y 0 if X 0  X  X and Y  X  Y 0 .
 Based on Definition 4, for an association rule X  X  Y , if there does not exist any other rule X 0  X  Y 0 such that the confidence of X 0  X  Y 0 is the same as the confidence of X  X  Y , X 0  X  X and Y  X  Y 0 , then X  X  Y is non-redundant. Definition 4 is similar to Pasquier X  X  definition of min-max association rules [15], but has less requirement to redundancy. In [15], a rule is redundant to another rule if the rule has longer antecedent, shorter consequent, identical confidence and identical support with the other rule, while Definition 4 requires only identical confidence. Theorem 1 below states that the CF value of a redundant rule defined by Definition 4 must be less than the CF value of its corre-sponding non-redundant rules no matter what their support values are.

Theorem 1. Let X  X  Y and X 0  X  Y 0 be two associa-tion rules. If Y 0  X  Y , and P ( Y/X ) = P ( Y 0 /X 0 ) (i.e., they have the same confidence), then CF ( X, Y )  X  CF ( X 0 , Y Proof. From Equation (5) we have CF ( X, Y ) -CF ( X 0 , Y 0 ) = MB ( X, Y )-MB ( X 0 , Y 0 )+ MD ( X 0 , Y 0 )-MD ( X, Y ) 1. Assuming that P ( Y/X )  X  P ( Y ). In this case, MD ( X 2. Assuming that P ( Y/X )  X  P ( Y ). In this case, MB ( X, Y )-According to Theorem 1, the CF value of a redundant rule defined by Definition 4 is not higher than that of its cor-responding non-redundant rule and thus the elimination of such redundant rules won X  X  reduce the belief to the extracted non-redundant rules.
The use of frequent closed itemsets to generate association rules greatly reduces the number of extracted rules. How-ever, redundancy still exits. Pasquier et al. [15] proposed two condensed association bases to represent non-redundant association rules, which are defined as follows:
Definition 5. (Min-max Approximate Basis) Let C be the set of frequent closed itemsets and G be the set of minimal generators of the frequent closed itemsets in C . The min-max approximate basis is: MinMaxApprox = { g  X  ( c \ g ) | c  X  C, g  X  G,  X   X   X  ( g )  X  c }
Definition 6. (Min-max Exact Basis) Let C be the set of frequent closed itemsets. For each frequent closed itemset c , let G c be the set of minimal generators of c . The min-max exact basis is: Table 5: Non-redundant Exact Rules Extracted From Min-max Exact Basis Table 6: Non-redundant Approximate Rules Ex-tracted From Min-max Approximate Basis
The non-redundant association rules with confidence less than 1 can be derived from the Min-max approximate ba-sis and the non-redundant association rules with confidence equal to 1 can be derived from the Min-max exact basis. Table 5 and Table 6 display the rules extracted from the min-max bases. These rules are considered non-redundant in terms of the redundancy definition given in [15]. However, under Definition 4, some rules extracted from the min-max exact basis are redundant such as rules 32 and 35 in Table 5. Rule 32 is redundant to rule 6 and rule 35 is redundant to rule 11. We propose a more concise exact association rule basis called Reliable exact basis as defined in Definition 7. Using the Reliable exact basis, more useless rules can be eliminated.

Definition 7. (Reliable Exact Basis) Let C be the set of frequent closed itemsets. For each frequent closed itemset c , let G c be the set of minimal generators of c . The Reliable exact basis is: The correctness of the above definition can be proved by the following theorems and properties.

Lemma 1. Let C be the set of frequent closed itemsets, c  X  C be a frequent closed itemset, G c be the set of c 0 minimal generators. If  X  c 0  X  C ,  X  g 0  X  G c 0 , c 6 X  c g  X  (( c \ c 0 )  X  g 0 ) , then g  X  c \ g is redundant to g Proof. Let A = c \ c 0 so that c  X  A  X  c 0 and A  X  c 0 =  X  . Therefore, we have c \ (( c \ c 0 )  X  g 0 )  X  ( A  X  c 0 ) \ ( A  X  g g  X  c 0 and A  X  c 0 =  X  , then A  X  g 0 =  X  . So, c \ (( c \ c 0 )  X  g 0 )  X  ( A  X  c 0 ) \ ( A  X  g 0 ) = (( A  X  c That is, c \ (( c \ c 0 )  X  g 0 )  X  c 0 \ g 0 . Because g  X  (( c \ c have c \ g  X  c \ (( c \ c 0 )  X  g 0 )  X  c 0 \ g 0 , hence, c \ g  X  c g  X  (( c \ c 0 )  X  g 0 ) , c \ c 0 6 =  X  , and ( c \ c 0 )  X  g g  X  g 0 . From c \ g  X  c 0 \ g 0 and g  X  g 0 , we can conclude that g  X  c \ g is redundant to g 0  X  c 0 \ g 0 .
 According to Modus tolen inference rule, i.e., if the conse-quent of an implication is false, the antecedent of the rule must be false, from Lemma 1, we get the following corollary:
Corollary 1. Let C be the set of frequent closed item-sets, c  X  C be a frequent itemset, G c be the set of c 0 s min-imal generators. If g  X  c \ g is a non-redundant rule, then  X  c 0  X  C ,  X  g 0  X  G c 0 , we have  X  ( g  X  (( c \ c 0 )  X  g 0
Theorem 2. Let C be the set of frequent closed itemsets, c  X  C be a frequent closed itemset, G c be the set of c 0 minimal generators. g  X  c \ g is a non-redundant rule iff  X  c 0  X  C ,  X  g 0  X  G c 0 ,  X  ( g  X  (( c \ c 0 )  X  g 0 )) .
Proof. 1. =  X  . The proof follows the conclusion of Corollary 1. 2.  X  = . From  X  ( g  X  (( c \ c 0 )  X  g 0 )) , we get g  X  ( c \ c
The following property states that the generator of a closed itemset won X  X  be larger than or equal to the generator of its super closed itemset. Therefore, the rules generated from a closed itemset won X  X  be redundant to the rules generated Table 7: Non-redundant Exact Rules Extracted From Reliable Exact Basis from its super closed itemset. Thus when calculating non-redundant exact rules from a closed itemset c using the Re-liable Exact Basis, only sub closed itemsets of c need to be checked. This property is reflected in the definition of Reliable Exact Basis where only subsets c 0  X  c are checked.
Property 4. Let g and g 0 be minimal generators of c and c 0 , respectively, c and c 0 be closed itemsets, then c  X  c  X  X  ( g  X  g 0 ) .
 Proof. Assume that g  X  g 0 . From Property 2-(1) and Property 2-(2), we get g  X  g 0  X  c  X  c 0 .
 Negating both sides of the above implication by using Modus tolen inference rule, we have  X  ( c  X  c 0 )  X   X  ( g  X  g 0 is, ( c  X  c 0 )  X  ( c  X  c 0 =  X  )  X  (( c  X  c 0 6 =  X  )  X  ( c 6 X  c g ). Because ( c  X  c 0 ), c  X  c 0 =  X  , and ( c  X  c 0 6 =  X  )  X  ( c 6 X  c ) are exclusive events, they can X  X  be true simultaneously. Therefore we have ( c  X  c 0 )  X  X  ( g  X  g 0 ).

The generic representation resulting from coupling the Re-liable Exact Basis with the Min-max Approximate Basis de-fines a more concise set of association rules which are non-redundant, sound and lossless. The algorithm to extract non-redundant exact rules based on the Reliable Exact Ba-sis is given below (some notations are explained in Table 8): Algorithm 1. ReliableExactRule( Closure ) Input: Closure : a set of frequent closed itemsets
Output: A set of non-redundant exact rules. 1. exactRules :=  X  2. for each c  X  Closure 3. for each g  X  G.c 4. if  X  c 0  X  Closure such that c 0  X  c and  X  g 0  X  G.c 0 5. we have  X  ( g  X  (( c \ c 0 )  X  g 0 )) 6. then exactRules := exactRules  X  X  g  X  ( c \ g ) } 7. end 8. end 9. Return exactRules
For the example mentioned in Section 3, the non-redundant exact rules extracted from the Reliable exact basis are given in Table 7. Even rules 32 and 35 have a larger antecedent than the antecedent of rule 6 and rule 11, respectively, they are still considered non-redundant using the Min-max exact basis proposed in [15] because their supports are different. However, the two rules, 32 and 35, are considered redundant to rules 6 and 11 respectively based on our Reliable exact basis and thus eliminated.
Pasquier et al. have proved that all exact association rules can be deduced from the Min-max exact basis [15]. The
X.closure closed itemset of X algorithm to deduce all exact rules from the Min-max exact basis is described below in Algorithm 2. In this section, we provide a modified algorithm that can deduce all exact rules from the Reliable exact basis. This means that the Reliable exact basis is also a lossless representation of exact association rules.
 Algorithm 2. DeduceFromMinMax ( MinMaxExact ) Input: MinMaxExact : Min-max exact basis
Output: AllExact : A set of all exact association rules 1. AllExact :=  X  2. for each rule ( r 1 : a 1  X  c 1 , r 1 .supp )  X  MinMaxExact 3. for each subset c 2  X  c 1 4. AllExact := AllExact  X  X  ( r 2 : a 1  X  c 2 , r 1 .supp ) } 5. if ( r 3 : a 1  X  c 2  X  c 1 \ c 2 , r 1 .supp ) 6 X  AllExact 6. then AllExact := AllExact  X  X  r 3 } 7. end 8.end 9.return AllExact As discussed in Section 4.2, the Min-max exact basis is a super set of the Reliable exact basis. Under the redundancy definition given in Definition 4, the Min-max exact basis can still contain redundancy. Based on the definitions 6 and 7, the Min-max exact basis can be described as: MinMaxExact = { g  X  ( c \ g ) | c  X  C, g  X  G c , g 6 = c } Let NonReliableExact = { g  X  ( c \ g ) | c  X  C, g  X  G c , We have MinMaxExact = ReliableExact  X  NonReliableExact (7)
The equation 7 shows that the Reliable exact basis is a subset of the Min-max exact basis. Given ReliableExact , if we can deduce NonReliableExact from ReliableExact , then by applying the algorithm DeriveRuleMinMax to ReliableExact and NonReliableExact , we would be able to deduce all exact association rules. The following theorem al-low us to generate all NonReliable rules from ReliableExact . Theorem 3. Let C be the set of frequent closed itemsets. For rules r 1 : g 1  X  c 1 \ g 1 and r 2 : g 2  X  c 2 \ g 2 c  X  C , g 1  X  G c 1 and g 2  X  Gc 2 , r 1 is a NonReliable exact rule iff c 1  X  c 2 and ( g 1  X  ( c 1 \ c 2 )  X  g 2 ) .
Proof. 1. =  X  2.  X  =
According to Theorem 3, for r 2 : g 2  X  c 2 \ g 2 where c is a closed itemset and g 2 is a generator (i.e., r 2 is a rule in MinMaxExact ), if we can find a super set c 1  X  c 2 , and ( g 1  X  ( c 1 \ c 2 )  X  g 2 ), then we can deduce: r 1 c \ g 1 is a NonReliable basis rule. This means, from a rule in MinMaxExact , we might deduce a NonReliable basis rule. Algorithm 3 given below is a modification of Algo-rithm 2 which takes ReliableExat as the initial value for MinMaxExact and generates all NonReliable basis rules from it so that MinMaxExact will be completed progres-sively during the course. Theorem 3 ensures that we can deduce all NonReliable basis rules. On completion of exe-cuting Algorithm 3, MinMaxExact will contains all ReliableExat basis rules and all NonReliable basis rules as well.
 with ReliableExact . Steps 3-7 generate exact association rules from a basis rule in current MinMaxExact , which performs the same task as what the algorithm 2 does. Steps 8 to 13 deduce possible NonReliable basis rules and add them into the current MinMaxExact .
 Algorithm 3. DeduceFromReliable ( ReliableExact ) Input: ReliableExact : reliable exact basis
Output: AllExact : A set of all exact association rules 1. AllExact :=  X  , MinMaxExact := ReliableExact 2. for each rule ( r 1 : a 1  X  c 1 , r 1 .supp )  X  MinMaxExact 3. for each subset c 2  X  c 1 4. AllExact := AllExact  X  X  ( r 2 : a 1  X  c 2 , r 1 .supp ) } 5. if ( r 3 : a 1  X  c 2  X  c 1 \ c 2 , r 1 .supp ) 6 X  AllExact 6. then AllExact := AllExact  X  X  r 3 } 7. end 8. for each super set c 3  X  ( c 1  X  a 1 ) and 9. for each a 3  X  G c 3 10. if a 3  X  (( c 3 \ ( c 1  X  a 1 ))  X  a 1 ) 11. then MinMaxExact := MinMaxExact  X  12. end 13. end 14.end 15.return AllExact
We have conducted experiments to evaluate the effective-ness of the proposed Reliable exact basis. This section presents the experimental results.
We used the following three datasets from UCI KDD Archive (http://kdd.ics.uci.edu/). The Mushrooms dataset contains 8,124 records each of which describes the characteristics of one mushroom object. Each mushroom object has 23 at-tributes some of which are multiple value attributes. After converting the multiple value attributes to binary ones, the number of attributes of each object becomes 126. The An-nealing dataset contains 898 annealing instances (objects), each has 38 attributes. After converting multiple value at-tributes to binary ones, each object has 276 attributes. The Flare2 dataset contains 1,066 solar flare instances each of which represents captured features for one active region on the sun. Each flare instance has 50 attributes after the mul-tiple value attributes are converted to binary attributes. The experiment is to find the associations among attributes for the three datasets.
The purpose of the experiment is to evaluate how effective the proposed Reliable exact basis eliminates the redundancy. We have proved in Section 4.2 that ReliableExact basis is more concise than MinMaxExact basis and thus should contain less number of basis rules (i.e., the non-redundant rules produced by the basis). We have also proved in Section 4.3 that, from ReliableExact basis, we can deduce all exact association rules. In this experiment, firstly we confirmed that both MinMaxExact basis and ReliableExact basis can deduce all exact rules. For example, when Minsupp is 0.3, both bases produce 2,142 exact rules for the Mush-room dataset as showed in Table 9. Secondly, we tested the reduction ratio between the size of the MinMaxExact basis and the size of the ReliableExact basis for different Minsupp settings. For all tests, the minconf was set to 0.5. Table 9, Table 10, and Table 11 present the test results for the three datasets, respectively.

We surprisingly found that the reduction ratio is very high. For instance, when Minsupp was set to 0.5, the MinMax basis contains 44 basis rules for the Annealing dataset as showed in Table 10, while the Reliable basis con-tains only 7 basis rules, the reduction ratio is 84% which is a very significant reduction. In this case, 104 exact rules can be deduced either from MinMax basis or from Reliable basis. After having taken a close check of the rules in each of the bases, we found that there indeed exist a great amount of redundancy in the MinMax basis for each of the tests we have conducted. For example, in the case of Minsupp = 0 . 5 for the Annealing dataset, for the rule carbon-00  X  product-type-C in Reliable Basis, we found that the following 13 rules in MinMax basis are redundant to carbon-00  X  product-type-C : carbon-00,hardness-00  X  product-type-C carbon-00,strength-000  X  product-type-C carbon-00,bore-0000  X  product-type-C carbon-00,class-3  X  product-type-C carbon-00,hardness-00,strength-000  X  product-type-C carbon-00,hardness-00,bore-0000  X  product-type-C Table 9: Number of exact rules (Mushroom dataset) Table 10: Number of exact rules (Annealing dataset) carbon-00,hardness-00,class-3  X  product-type-C carbon-00,strength-000,bore-0000  X  product-type-C carbon-00,strength-000,class-3  X  product-type-C carbon-00,bore-0000,class-3  X  product-type-C carbon-00,hardness-00,strength-000,bore-0000  X  carbon-00,hardness-00,bore-0000,class-3  X  product-type-C carbon-00,strength-000,bore-0000,class-3  X  product-type-C
The 13 rules listed above have the same consequent but a larger antecedent than that of the rule carbon-00  X  product-type-C , their support values are different, but they have ex-actly the same confidence and the same CF value. In real world problem solving, if we know that carbon-00 is true, by applying the rule carbon-00  X  product-type-C , we can con-clude that product-type-C is true. We don X  X  have to know hardness-00 , strength-000 , or bore-0000 , etc. in order to reach this conclusion. That means, all the 13 rules are use-less if we have the rule carbon-00  X  product-type-C at hand. By eliminating the redundant rules, the size of the Reliable basis is much smaller than that of the MinMax basis, but the capacity of solving problems remains the same. This reduction provides a great potential to improve the effec-tiveness of using the extracted association rules.
One challenge problem with association rule mining is the redundancy in association rules which greatly affects the use of the extracted rules in solving real world problems. The work presented in this paper aims at improving the quality of association rules by eliminating redundancy. In this pa-per, we proposed a relaxed definition of redundancy and a concise representation of association rules. We theoretically proved and experimentally confirmed that the proposed Re-Table 11: Number of exact rules (Flare2 dataset) liable exact basis can dramatically eliminate considerable amount of redundancy. Based on certainty factor theory, we also proved that the elimination of the redundancy using the proposed Reliable exact basis does not affect the belief to the extracted rules. Similar to the Min-max exact basis, the Reliable exact basis is not only a concise but also a lossless representation of exact association rules. From the Reli-able exact basis, all exact association rules can be deduced. The work presented here can be extended to approximate rules. The Reliable exact basis is a concise representation for exact rules only. We have found that there is similar re-dundancy existing in the approximate basis. Our next work is to extend the Reliable exact basis to further eliminate redundancy from approximate rules.
This paper was partially supported by Grant DP0556455 from the Australian Research Council. [1] R. Agrawal, T. Imielinski, and A. N. Swami. Mining [2] R. Agrawal and R. Srikant. Fast algorithms for mining [3] R. J. Bayardo. Efficiently mining long patterns from [4] R. J. Bayardo, R. Agrawal, and D. Gunopulos. [5] M. J. A. Berry and G. S. Linoff. Data Mining [6] S. Brin, R. Motwani, J. D. Ullman, and S. Tsur. [7] B. Ganter and R. Wille. Formal Concept Analysis: [8] J. Han and Y. Fu. Mining multiple-level association [9] J. Han and J. Pei. Mining frequent patterns by [10] M. Kryszkiewicz, H. Rybinski, and M. Gajek. Dataless [11] K. Ng and B. Abramson. Uncertainty management in [12] R. T. Ng, V. Lakshmanan, J. Han, and A. Pang. [13] N. Pasquier, Y. Bastide, R. Taouil, and L. Lakhal. [14] N. Pasquier, Y. Bastide, R. Taouil, and L. Lakhal. [15] N. Pasquier, R. Taouil, Y. Bastide, G. Stumme, and [16] J. Pei, J. Han, and R. Mao. Closet: An efficient [17] E. H. Shortliffe and B. G. Buchanan. A model of [18] R. Srikant, Q. Vu, and R. Agrawal. Mining association [19] R. Wille. Restructuring lattices theory: An approach [20] M. J. Zaki. Generating non-redundent association [21] M. J. Zaki. Mining non-redundant association rules. [22] M. J. Zaki, S. Parthasarathy, M. Ogihara, and W. Li.
