 1. Introduction
Intellectual content containing valuable knowledge is usually codified in an explicit form to facilitate reuse ( Bolloju, Khalifa, &amp; Turban, 2002; Markus, 2001; Nonaka, 1994 ). A repository of structured and explicit knowledge, especially in document form, is a codified strategy for managing knowledge ( Davenport &amp; Prusak, 1998; Zack, 1999 ). Empirical findings indicate that codifying intellectual content into a knowledge repository helps workers exploit existing organizational resources effectively ( Gray, 2001 ). However, with the growing amount of information in organizational memories, as well as the increasing complexity of executing tasks in a knowledge-intensive working environment, knowledge workers are suffering increasingly from informa-tion overload.

Information filtering with a similarity-based approach is often used to locate knowledge items relevant to the task-at-hand. The relevance of a knowledge item is determined by analyzing the similarity between the concept terms of the item and the current task ( Baeza-Yates &amp; Ribeiro-Neto, 1999; Holz, Maus, Bernardi, organizes desktop documents and proactively delivers task-specific information. The effectiveness of this approach depends on the accuracy of the concept terms of the task-at-hand, which are extracted from the task name and associated relevant documents. However, because of the nature of knowledge-intensive work tasks, such as research projects in academic institutions and product development in R&amp;D departments, it is difficult to provide task-relevant knowledge based solely on static descriptions of the information, e.g., the task X  X  title, goal, and participants, during a task X  X  execution. This is because a knowledge-intensive work task usually con-sists of levels of progressively smaller sub-tasks, so it can take a long time to complete the task. In addition, workers X  task-needs usually vary according to the task-stage of the long-term project. Therefore, providing knowledge to meet those task-needs is a long-term knowledge support issue.

IF systems are often personalized to support the long-term information needs of a particular user or a group of users ( Mostafa, Mukhopadhyay, Lam, &amp; Palakal, 1997; Widyantoro, Ioerger, &amp; Yen, 2001 ). Var-ious methods for learning users X  interests or preferences from text documents or web pages have been pro-posed for real-world applications based on recommender systems, for example, adaptive web page recommendation services ( Balabanovi X  X , 1997 ), e-mail-filtering systems ( Mostafa et al., 1997 ), personalized online newspapers ( Billsus &amp; Pazzani, 1997 ), and on-line recommendation of academic research papers ( Mid-dleton, Shadbolt, &amp; De Roure, 2004 ). These approaches rely on learning algorithms that modify users X  profiles to reflect users X  interests or preferences. In Information Retrieval or Information Theory, several well-known methods are employed to model users X  constantly changing information needs; for example, Rocchio X  X  algorithm, information gain theory, Bayesian classifiers, and the k -Nearest Neighbor algorithm.
The above learning techniques incorporate relevance feedback mechanisms that learn workers X  dynamic information needs based on explicit feedback (where the system collects users X  linguistic ratings) or implicit feedback (where the system monitors users X  access behavior). Contemporary IF systems that rely on user models (e.g., user profiles) provide an effective means of modeling a worker X  X  dynamic information needs based on explicit or implicit relevance feedback techniques ( Kelly, 2004; Ruthven, Lalmas, &amp; van Rijsbergen, 2003; White &amp; Kelly, 2006; Widyantoro et al., 2001 ). However, as mentioned previously, such systems are limited because they cannot fully reflect the workers X  current task-needs. Thus, a knowledge support model that considers the specific task-stage and the worker X  X  explicit and implicit task-needs should be incorporated into the traditional IF model.

Several empirical studies have analyzed the growth in students X  or scholars X  understanding of their assigned tasks while conducting an actual research project ( Kuhlthau, 1993; Vakkari, 2000; Vakkari, Pennanen, &amp;
Serola, 2003; Wang &amp; Soergel, 1998; Wang &amp; White, 1999 ). The Vakkari studies, which focus on a user X  X  information seeking activities during a task X  X  performance (e.g., writing a proposal, or executing a project), show that information needs vary according to different task stages ( Vakkari, 2000 ). Vakkari classified the stages of the search process according to Kuhlthau X  X  (1993) search process model, namely, the pre-focus, focus formulation , and post-focus stages . In each stage, the type of information needed may vary from general to specific data, and the choice of search terms may range from broad to specific terms. The stage features defined by previous pilot studies allow us to identify a worker X  X  task stages ( Kuhlthau, 1993; Vakkari, 2000 ). The importance of identifying stages or milestones has gained increasing attention in the KMS field in recent years.
For example, Ahn, Lee, Cho, and Park (2005) presented a virtual workgroup support system (VWSS) com-bined with a knowledge context model (KC-V) to support a project X  X  (task X  X ) execution. The concept of the evolutionary accumulation of knowledge combined with collaborative activities during the long period of a project X  X  execution forms the basis of the KC-V model. Each project has several decision points, i.e., mile-stones or project status points, which are defined so that task-associated knowledge items can be stored at spe-cific points of the project. In a previous work, we proposed a knowledge support model for a task-based working environment ( Liu,
Wu, &amp; Yang, 2005 ). Based on that model, we have developed a digitalized task-based workplace. Prelimin-ary investigations demonstrate the effectiveness of the proposed model and workplace. In this paper, we pro-pose an IF technique with task-stage identification that extends the traditional IF technique by adding the worker X  X  task-stage. Notably, our task definition is closer to a genuine work-task, which requires problem and task solving knowledge and search task solving knowledge to execute complex, long-term tasks ( Ingwersen &amp;Ja  X  rvelin, 2005 ). That is, the worker knows the seeking and retrieval strategies and methods, and he/she requires task and domain information acquisition for long-term task performance. Therefore, we observed the worker X  X  search behavior, i.e., a series of explicit and implicit feedback behavior patterns related to doc-uments needed to complete the task at hand. In this work, we integrate a task-stage identification technique with a long-term document support process to fit the worker X  X  task-needs more precisely. To evaluate the effectiveness of the proposed knowledge support model, we conducted a 1-year empirical investigation of its application in our problem domain. The study showed that a worker has different information needs as a task progresses, which confirms the observations in the Vakkari studies. Each stage has certain charac-teristics and patterns that enable us to identify the worker X  X  task needs. Thus, we propose a task-stage knowledge support model that provides efficient knowledge support by identifying a worker X  X  current task-stage and task-relevant topics. We also propose a method for analyzing the similarity of task-need pat-terns. A correlation value is used to identify a worker X  X  task-stage, and a task-based domain ontology, i.e., a topic taxonomy, is employed for task-relevant topic identification and pattern analysis. The task-related topic taxonomy in our application domain is a multi-level structure in which each node represents a research topic. Thus, based on the topic taxonomy, a worker X  X  access behavior and changing search patterns can be analyzed. Correlation analysis is then used to identify the change points of stages according to the results of pattern analysis.

The remainder of the paper is organized as follows. Section 2 contains a literature review. Section 3 gives an overview of the task-stage knowledge support model. Section 4 provides details of usage pattern modeling, i.e.,
IF with a task-stage identification technique. The method of document support based on the worker X  X  task-stage is also described in this section. The experiment X  X  objectives, procedures, results, and implications are given in Sections 5 and 6 . Finally, in Section 7 , we present our conclusions and discuss the direction of our future work. 2. Literature reviews
In this section, we discuss related work and the contributions of the present study. 2.1. Task-based knowledge management
Historical codified knowledge, i.e., experiences and know-how extracted from previously executed tasks, provides valuable knowledge that can help in the performance of new tasks. For example, effective project management can benefit from KMS by referring to similar past projects to obtain information about best practices, lessons learned, and knowledge resources. In the research field, task innovation is generally based on previous research achievements.

In recent years, task-based knowledge management has emphasized the organization of all possible task-specific knowledge by supporting context-aware knowledge access and retrieval ( Abecker, Bernardi, Hinkel-1995; Kwan &amp; Balasubramanian, 2003 ). Information retrieval (IR) techniques coupled with workflow man-agement systems (WFMS) are used to support proactive delivery of task-specific knowledge according to the context of tasks in a process ( Abecker et al., 2000; Fenstermacher, 2002 ). Furthermore, a process meta-model that places the knowledge in context is integrated into workflow systems to capture and retrieve knowledge within a process context ( Kwan &amp; Balasubramanian, 2003 ). Alvarado et al. (2004) proposed organizing corporate memory from the perspective of role/job positions, whereby organizational memory, modeled by adopting UML/XML, is used to specify ontologies for the organization X  X  positions, tasks, and application domains. Although there are subtle differences between the above works, overall, they provide an appropriate perspective because they specify the process-context of a task to support context-aware knowledge retrieval. That is, context is seen as an important component that can be utilized to improve the understanding of relevant knowledge about a business task within the KMS. However, without a proper model of the associated process to capture the specific work-task context, it is difficult to achieve effective knowledge management. Additionally, it is hard to use simple and static processes to describe all aspects of knowledge-intensive tasks.

Task-based knowledge delivery combined with an information filtering technique is well-suited to knowl-edge-intensive tasks because of its ability to model worker X  X  dynamic task-needs. Furthermore, a profiling technique is appropriate for knowledge-intensive and non-routine tasks because of its learning capability.
In this type of framework, information filtering techniques and an intelligent agent-based architecture are usu-ally adopted to streamline knowledge delivery from internal and external knowledge repositories ( Spies, Clay-ton, &amp; Noormohammadian, 2005; Ye &amp; Fischer, 2002 ). De Bra et al. (1997) proposed a cooperative agent architecture to achieve task-based information filtering within the work process. In this model, three types of cooperating agents: process agents, document warehouse agents, and retrieval agents are used to determine if retrieved documents are relevant to the worker X  X  task at hand. Subsequently, a CodeBroker system was pro-above approaches provide knowledge support by exploiting a task X  X  characteristics and employing user mod-eling techniques. 2.2. Long-term document support for knowledge-intensive work tasks
Information filtering (IF) systems are usually personalized to support the long-term information needs of a particular user or a group of users ( Mostafa et al., 1997; Widyantoro et al., 2001 ). IF systems are similar to conventional information retrieval (IR) systems that support a user X  X  short-term information needs, e.g., general information needs expressed in a single search session. However, although the IF system relies on the support of the kernel technology of IR, it emphasizes methods that learn and maintain user profiles to support long-term information services ( Baeza-Yates &amp; Ribeiro-Neto, 1999; Belkin &amp; Croft, 1992; Widy-antoro et al., 2001 ). IF techniques have been incorporated into many real-world applications ( Balabanovi X  X , 1997; Billsus &amp; Pazzani, 1997; Middleton et al., 2004; Mostafa et al., 1997 ) and filtering technology is acknowledged as an effective way to reduce information overload and provide personalized information ( Hanani, Shapira, &amp; Shoval, 2001; Hoashi, Matsumoto, Inoue, &amp; Hashimoto, 2000 ). Although IF systems provide proper profiling methods to learn a user X  X  dynamic information needs and interests, most existing systems do not integrate those needs with the characteristics of the relevant task-stage as the execution of the task progresses.

Generally, a worker uses documents to understand a task and solve a specific problem. Thus, when a worker begins a task, he/she may search the organization X  X  knowledge repository for information that will help solve the problem at hand. The worker X  X  search behavior results from the fact that there is a gap between his/her knowledge about the task and the perceived requirements of the task. The gap is called the information retrieval activities. Several empirical studies have focused on discovering and analyzing the growth in students X  or scholars X  understanding of their assigned tasks during actual research projects ( Kuhlthau, 1993; Vakkari, 2000; Vakkari et al., 2003; Wang &amp; Soergel, 1998; Wang &amp; White, 1999 ). These works analyze how documents are selected and used by workers during a task X  X  execution. Kuhlthau X  X  (1993) search process model is a lon-gitudinal study of library users seeking information for the completion of an assigned project. Vakkari X  X  model, which is based on Kuhlthau X  X  search process model, classifies researchers X  information seeking activ-ities into pre-focus, focus-forming, and post-focus stages. Both studies show that a worker X  X  information needs and information-seeking behavior depend on the progress of the task, or task stages. In addition, the concept of an exploratory search system to support online searches has been widely discussed in recent years ( White, knowledge from the tremendous amount of data available on the Web. A user may only have a general idea about a topic and may be uncertain about what information is required for the task at hand. ( Jansen, 2005;
White, Jose, &amp; Ruthven, 2003; White &amp; Kelly, 2006 ).
In this work, the concept that information seeking behavior is related to task stages is adopted to enhance traditional IF techniques and provide effective knowledge support. That is, we try to identify the worker X  X  task-stage and incorporate the result into the profile modeling process so that the system can deliver task-rel-evant documents, and thereby provide effective long-term knowledge support. 3. Overview of task-stage knowledge support study
Because workers have dynamic information needs in different task stages, we propose a method that can identify those needs. Section 3.1 introduces the main modules that streamline the operation of task-stage knowledge support, and Section 3.2 describes the task-based domain ontology, i.e., the task-based topic taxonomy. 3.1. Main modules of task-stage knowledge support
As Fig. 1 illustrates, providing relevant task-stage knowledge involves three phases: data pre-processing , task-needs discovery ,and adaptive task-stage knowledge support , Note that the task-needs discovery phase is the kernel of the system because it analyzes the worker X  X  task-relevant topics and task-stages.
Two types of valuable information, content data and usage data, are acquired during the data pre-process-ing phase . The text pre-processing module extracts information from unstructured or semi-structured data.
The user behavior tracker is an on-line module that tracks a user X  X  interaction with the system. The user X  X  task-related behavior, including access to the task-based domain ontology and relevance feedback on knowl-edge items, can be captured and recorded in his/her profile. The profile handler uses an adaptive task-based profiling approach to adjust workers X  profiles based on their dynamic behavior. The task-needs discovery phase is the kernel of the system. In the task-needs discovery phase, the task-stage identifier determines the worker X  X  task-stage based on a variety of profiles, while the task-relevant topics analyzer analyzes task-relevant topics:
Task-stage identifier: The task-stage identifier is responsible for determining and analyzing the worker X  X  task-stage based on changes in the task-needs pattern over time.

Task-relevant topics analyzer: This mechanism determines the worker X  X  task-needs in terms of topics in the domain ontology (DO), as shown in Fig. 2 , by tracking the worker X  X  access behavior over a period of time.
The behavior is then analyzed based on the DO to discover task-relevant topics for the worker. Accord-ingly, a worker X  X  current task-needs can be expressed as a set of topics with their degrees of relevance, i.e., a task-needs pattern.

We employ a profiling technique to model a worker X  X  task-needs for a specific task. Profiling has been used in recommender systems and KMSs to enhance knowledge access and promote knowledge sharing among 1992 ). As a result, the IF strategy can provide stage-relevant knowledge based on the analysis in the task-needs discovery phase. The adaptive task-oriented knowledge router provides workers with pertinent task-relevant codified knowledge based on his/her task profile and task-stage. 3.2. Task-based domain ontology
The domain ontology (DO), which is a shared conceptualization of a specific domain, is often used to spec-ify an organization X  X  working domain ( Park &amp; Hunting, 2003 ). Organizing knowledge items into an ontolog-ical structure based on the domain ontology is an effective way to support knowledge retrieval in business environments. In this work, we consider the DO as a classification structure of tasks stored in the knowledge repository. Accordingly, the proposed task-based DO is a simple topic taxonomy that is structured in four lev-els: categories, fields, tasks, and knowledge items , as shown in Fig. 2 . The task-based DO is used to organize codified knowledge around specific organizational tasks.

Specifically, in this work, we refer to each node in the task level of the proposed DO as a topic i.e., there a one-to-one relationship between a task and a topic. Thus, a topic is also referred to as a task topic. Each task topic has a task corpus (topic profile) that is extracted from set of task-related documents. The corpus describes the key features of tasks and can be constructed by extracting key content from textual data gathered during a task X  X  execution. More details can be obtained from our previous work ( Liu et al., 2005 ). The task-based DO is used to organize codified knowledge around specific organizational tasks. In addition, the worker X  X  current task needs can be expressed as a feature vector of weighted keywords and a set of topics with associated weights. The relevance of topics is shown in the field or task level of the DO. Obviously, a task topic name to represent the topic in this work, as shown in Appendix B . In this work, we focus on changes in a worker X  X  behavior in the task-level; therefore, we only consider topics in the task level. 4. Data preprocessing and task-needs discovery
The data pre-processing phase, which is the most important and time-consuming step of the knowledge dis-covery process, is discussed in Section 4.1 . Section 4.2 describes the modeling of a worker X  X  usage pattern based on the analysis of a variety of task profiles. In Section 4.3 , we propose a task-needs pattern similarity analysis method based on a correlation value to identify changes in a worker X  X  task stages. Then, the profile adaptation method based on the task-stages is described in Section 4.4 . 4.1. Data pre-processing
In this sub-section, we consider two valuable information sources for knowledge acquisition: content data and usage data. 4.1.1. Content data
Information indexed by appropriate concepts and categories can provide knowledge workers with mean-ingful access to their organization X  X  intellectual content. Rather than simply adopt a document index server to provide document retrieval services, the proposed model analyzes and organizes an organization X  X  previous tasks (existing tasks) from the perspective of each previous task unit. The text pre-processing module is respon-sible for term transformation and term weighting tasks. The key content of a codified knowledge item (doc-ument) is represented as a feature vector of weighted terms in n -dimensional space, using a term weighting approach that considers term frequency, inverse document frequency, and normalization factors ( Salton &amp;
Buckley, 1988 ). The term transformation steps, i.e., case folding, stemming, and stop word removal, are per-formed during text pre-processing ( Porter, 1980; Witten, Moffat, &amp; Bell, 1999 ). Then, term weighting is employed to extract the most discriminating terms. Thus, each document d selection engine and a task categorization engine, deal with knowledge items for each task. A centroid approach is used to derive the feature vector of a task by averaging the feature vectors of documents gener-ated/accessed during the search. Let D tr denote the set of documents generated/accessed by task t corpus (feature vector) of task t r is defined as the centroid vector ~ t of documents in D tr . Eq. (1) defines the centroid vector ~ t w ( k
An associated task-based repository that preserves the content and structure of knowledge is established to store task-relevant data in the database. 4.1.2. Usage data
The user behavior tracker is an on-line module that captures workers X  information seeking behavior. A task transaction , denoted by T trans , is used to analyze a worker X  X  implicit and explicit feedback behavior. The log-parsing engine in the user behavior tracker analyzes log-files that track the user X  X  interaction with the system.
Each log record is analyzed to extract important information, such as the user X  X  name, request type, docID and the time of the request. The user X  X  login data, such as his position and TaskID, is combined with the log record and stored in the log database. In the database, each record is represented as a record h user name,-role type,TaskID,DocID,request type,system time i . In summary, the log-parsing engine collects and manages task-relevant information by tracking a user X  X  document access behavior for a specific task.
 4.2. Usage pattern modeling
The worker X  X  temporal task-needs, i.e., information needs for a task over a period of time, are expressed as a temporal task profile and represented by a feature vector of weighted keywords. In addition, the task-rele-vance analyzer determines the degree of relevance between the task profile and the topics profile in the task-based domain ontology (DO). Thus, a worker X  X  temporal task-needs pattern can be expressed as a set of topics and associated relevance degrees.

Next, we define a session and a task transaction , which are used to analyze workers X  implicit and explicit feedback on codified knowledge items. The user behavior tracker performs the analysis by monitoring the worker X  X  access behavior over a period of time. Fig. 3 shows a snapshot of the monitoring process:
A session is defined as a sequence of user feedback actions related to knowledge items (e.g., reading, down-loading, or rating an item of information) during a single visit to the system.

A task transaction records the worker X  X  access to the knowledge repository over a number of sessions. The time interval between two consecutive upload events (i.e., documents the worker wants to share in the pre-sented system) is defined as the task-transaction in our investigated domain. In the context of our research domain, a worker who uploads documents indicates that he/she has recently explored the related topics and will give a presentation in the laboratory X  X  regular meeting. A session is a smaller unit than a task transac-tion . During the period of a task transaction, the worker also engages in some search behavior in the pro-posed system, such as reading and rating articles. Accordingly, a worker X  X  task transaction comprises n sessions, where n &gt;0. 4.2.1. Feedback analysis
The temporal profile of a worker X  X  sessions or transactions is generated according to the tracking results of his/her sessions or transactions over a period of time. In addition, the system analyzes the relevance of task topics in the domain ontology (DO) to the session/transaction temporal profile. Consequently, a worker X  X  task-needs pattern is expressed as a set of topics that are task-level nodes in the DO. We use a real example to explain how to detect and track a worker X  X  access behavior and conduct task-needs pattern modeling. 4.2.2. Example 1 (ref. Fig. 3 ) of the  X  X  ITIL-based Context-aware Knowledge Recommendation  X  task. The task is a research project. As mentioned previously, in our research application domain, the time interval between two consecutive upload events is defined as a task transaction . In the given example, the third transaction comprises six sessions. The transaction started from 2003/10/22 and ended at 2003/11/11. After conducting data preprocessing in phase one, a set of the worker X  X  access behavior patterns across sessions, Trans knowledge items, O ={ I 1 , I 2 , ... , I m }, are defined. Herein, knowledge items denote the documents or Power-below the Trans i are sessions which records the time when the P.T. Chou log into the system (as denoted by circle two). As we have defined, a transaction comprises n sessions, where n &gt;= 0. Notably, the circle three in
Fig. 3 denotes the P.T. Chou accessed a document, D0000000368 (i.e., I
Session 2 of Transaction 3. Furthermore, he accessed the I 2 in the Transaction 3, i.e. set of stemmed keywords with associated weights. Accordingly, a sequence of knowledge items accessed in each session of a transaction, i , are identified as follows: access behavior pattern includes implicit feedback behavior and explicit feedback behavior. In this work, im-plicit feedback behavior refers to instances when the user  X  X  X ploaded or download documents  X  or  X  X  X ead the documents on-line  X  , whereas explicit feedback behavior refers to when the user  X  X  X ated the documents  X  . In this  X  X  X ow  X  , and  X  X  X ery Low  X  via the feedback bar provided in the proposed system. The above pattern of the gi-ven example indicates that the implicit and explicit behavior related to knowledge item I times in the same session. 4.2.3. Temporal profile generation
The temporal profile is derived from the feature vectors of documents accessed by a worker, u , over a spe-cific time period, as shown in the Eq. (2) ; Trans S l i terms) derived from the documents accessed in session l of transaction i . The profile is generated by the profile handler to represent a worker X  X  current information needs for the target task: transaction i ; and A ( d j ) is derived from a worker X  X  linguistic ratings on the relevance of document d target task and then transformed into a crisp value. The transformation process follows the fuzzy linguistic approach in order to approximate human perception and provide easier assess to qualitative problems (Zadeh, 1975). The reason is that we found the linguistic rating is a more natural and therefore easier method of rel-evance assessment for knowledge workers, while the fuzzy number is used in the back-end of the system to facilitate numerical computation of the relevance ratings. D loaded or read, but not rated, by the worker during session l of transaction i . A linguistic rating  X  X  X igh  X  is given by default to represent the relevance degree of unrated documents (implicit feedback). CV  X  a  X  X  X igh relevance rating  X  X  of a worker u and is also transformed into a corresponding crisp value. Since our system shows the description of a document, we assume that a worker will read the description first to decide if the document is relevant, and then read the document in detail.
 4.2.4. Task-need patterns
The task-relevant topic analyzer calculates the similarity (e.g., the cosine measure) between the temporal profile Trans S l i posed domain ontology (DO). Accordingly, the pattern of a worker X  X  task needs can be expressed as a set of topics and associated relevance degrees, as shown in Table 1 . The task-needs pattern of a session l in trans-action i , denoted by Patt s l Trans
Notably, Appendix B lists topics in the domain. 4.3. Task-stage identification based on usage pattern modeling
In this section, we describe a task-needs pattern similarity analysis method based on the correlation value to identify changes in a worker X  X  task-stages. The objective of task-stage identification is to deliver task-relevant knowledge according to the worker X  X  task-needs based on different task-stages. From previous pilot studies ( Kuhlthau, 1993; Vakkari, 2000 ), we identify three task stages: the pre-focus, focus formulation, and post-focus_stages, which_differentiate a worker X  X  three types of information needs during a task X  X  execution. 4.3.1. Stage identification process
The on-line task-stage identifier analyzes and determines a worker X  X  task-stage based on his/her access pat-tern. The task temporal profile in each timeframe is the basis for identifying the worker X  X  task-stage. A change of task-stage is inferred by analyzing the correlation of the task X  X  temporal profile of the worker X  X  consecutive transactions. Three steps are executed to analyze and determine the worker X  X  task-stage:
Step 1. Task-need pattern calculation: As noted in Section 4.2 , a worker X  X  task-need pattern can be expressed as a set of topics and associated relevance degrees. The task-need pattern of a session l in transaction i , of a topic j , rd j , is derived by the cosine measure sim  X  Trans used as the similarity measure.

Similarity measure: The cosine formula is a similarity measure that is widely used to assess the degree of similarity between two items, x and y . It computes the cosine of the angle between the items X  corresponding 1.0: session l of transaction i . Table 1 shows an example of Patt ated in a similar manner by considering the whole transaction.

Step 2. Correlation calculation: Once the task-needs pattern has been derived, the correlation of the work-er X  X  task-needs pattern across transactions can be calculated by Pearson X  X  correlation coefficient . It is reason-able to assume that a worker X  X  task-needs will not change dramatically during consecutive sessions of the same transaction, but they may change significantly between two different transactions. Thus, we calculate the cor-relation between the previous transaction, Trans i 1 , and the start session of the current transaction, Trans shown in Eq. (4) :
Let A represent Patt Trans respectively.

Step 3. Changes in task stages: Changes in a worker X  X  task stages are based on the correlation values between task-needs patterns. The rationale behind the proposed correlation analysis method is that we can identify a worker X  X  task-stage based on the changes in the task-needs for topics, i.e., the task-need pattern in our work. In other words, some task-relevant topics in the task-based topics taxonomy may have a high degree of relevance to the temporal profile of the previous transaction; however, they may have a low degree of relevance to the temporal profile at the beginning of the current transaction. Because the correlation values are within the range [ 1,1], it is easy to track the worker X  X  access pattern based on the correlation value between transactions. Using a correlation analysis method, we took around one year to observe the behavior of workers when they accessed the knowledge repository in the presented task-based workspace. Based on the results of our sample analysis, we set a three-part correlation range:  X  X  X ow  X  ,  X  X  X oderate X  X , and  X  X  X igh  X  .
Low correlation: If a worker is in the early stages of executing a task, the correlation value between trans-actions will be within the interval [ 1,0.2), which indicates that he/she is in the task pre-focus stage and is uncertain about the perceived task.

Moderate correlation: If a worker has decided the research area, but feels uncertain about the research topic of a specific area, the correlation value between transactions will be within the interval [0.2,0.6], which indi-cates that he/she is approaching or is in the task focus formulation stage.

High correlation: Once a worker has focused on a specific topic, the correlation value between transactions will be within the interval [0.6,1.0], which indicates the worker has defined his/her task-needs for a specific topic. In other words, the worker accessed and read documents belonging to the related topics. Hence, the worker is in the task post-focus stage.

The time point for deciding the worker X  X  task-stage is the first session of the current transaction, Trans
Assuming we know the worker X  X  task-stage in the previous transaction, Trans task-stage based on the correlation value and the worker X  X  previous task-stage. Table 2 shows the task-stage determination rule. 4.3.2. Sample analysis Example 2: There are 35 task-level topics (historical task corpora) in our domain, as shown in Appendix B . Continuing with Example 1, we analyze the four transactions in the access behavior of the executor  X  X  X oTsun  X  .
Trans 2 , Trans 3 , Trans 4 and Trans 5 are sampled to explain how the worker X  X  task-stage can be determined, as shown in Fig. 4 : (1) Trans 2 and Trans 3 : The correlation between Trans 2 (2) Trans 3 and Trans 4 : The correlation between Trans 3 (3) Trans 4 and Trans 5 : The correlation between Trans 4 4.4. Knowledge support based on task-stages In this section, we explain how the system provides document support based on the worker X  X  task-stage.
Specifically, the system considers the worker X  X  task-stage and task-relevant topics of that stage to adjust the task profiles. The new task profile of the target task, denoted as equation formula defined in Eq. (5) . The equation considers the worker X  X  task stage and the task-relevant top-ics of each stage. The parameter k is used to adjust the relative importance of task-relevant topics and the tem-poral profile. As the task progresses, the content of the temporal profile becomes more important than that of the task-relevant topics. That is, the value of k decreases and the influence of the temporal profile increase as the task progresses. Thus, we predefine the k based on the changes in the task-stage. As shown below, we set k at 0.8, in the task pre-focus stage, and at 0.5, in the task formulation stage. Finally, while a worker is in the post-focus stage, we set k = 0.2; that is, the content of the worker X  X  access document is more important than that of the domain topics. Note that, since we adopt the vector space model from the field of information retrieval ( Baeza-Yates and
Ribeiro-Neto, 1999 ), the notations with a superscript arrow denote the feature vectors of keyword terms. Each term represents a dimension in the space, i.e., the vector space model, where of the target task at time p and p + 1, respectively. The new task profile of the target task, denoted as generated by the task profile before time p + 1, the relevant feature vector of from the task corpora (i.e., the bag-of-words used to describe each task topic) of relevant task topics, and the temporal profile, Trans resents the set of task-relevant topics. Trans i derived from the documents accessed in transaction i , as described in Section 4.2 . The parameter a is set to 1, or the correlation value of task-needs patterns between time p and time p +1.

The generated task profile is the system kernel that streamlines knowledge retrieval activities to further real-ize task-stage knowledge support. A task profile specifies the key subjects of the task at hand, and models the information needs of knowledge workers based on the task-stages. Fig. 8 in Appendix C shows the interface of knowledge support based on task-stages in our system. 5. Experiment setup
To evaluate the effectiveness of the proposed knowledge support model, we conducted an empirical inves-tigation of its application to our problem domain. Section 5.1 reviews the experiments X  objectives and proce-dures. We then describe the data set, provide information about the participants, and discuss the evaluation metrics. 5.1. Experimental objective and procedure
Experiments were performed to determine if the proposed task-stage identification technique can provide effective knowledge support. The technique was compared with the traditional relevance feedback (RF) tech-nique used in IF systems (discussed in Sections 1 and 2 ). To evaluate the effectiveness of the proposed method, we follow the procedure of the standard relevance feedback (RF) technique in the IF area. The RF technique is widely adopted in IF studies to learn users dynamic interests, preferences or information needs. Generally, most studies in this area adopt the Rocchio method as the baseline to compare the performance of a proposed method ( Salton and Buckley, 1990 ; Widyantoro and Yen, 2005; Yang, Yoo, Zhang, and Kisiel, 2005; Zhan, 2004 ). Accordingly, we use the well-known classical relevance feedback methods proposed by Rocchio (1971) and Ide (1971) for query reformulation/expansion, as listed in the (A1) and (A2) of the Appendix A . The Lin-ear-0 method is similar to the Rocchio method, except that the irrelevant feedback part of the equation is removed. The reason is that most studies suggest that information about relevant documents is more impor-tant than the content of irrelevant documents ( Salton and McGill, 1983; Salton and Buckley, 1990; Yu, Luk, and Cheung, 1976 ).

Furthermore, we incorporate the characteristics of the long-term project/task domain into the classical rel-evance feedback equation to fit our problem domain. Accordingly, we designed an experiment to evaluate the effectiveness of providing knowledge support based on task-relevant topics, the worker X  X  task-stage, and the correlation values between stages. The related parameters are incorporated into the given profile adaptation equation, i.e., Eq. (5) . Consequently, the Linear-0.5 , Stage , and Stage-C methods are compared with the base-line Linear-0 method. Table 3 lists the four methods compared in this work: one is the baseline method and others are based on the proposed technique. Note that there are two variants in Eq. (5) . One is a , which is used to incorporate the vector of the profile accumulated from the initial time to time p into the final profile time p + 1, where p is the time previous to the current time p + 1. Based on the basic RF technique, it is effec-tation process, we set a to the correlation value between the transactions in the proposed technique. The second vector constructed by averaging the document vector of feedback on the documents and the vector of each relevant topic X  X  profile. Thus, if we set k to 0, it indicates that we only consider the document vector of work-ers X  implicit or explicit feedback on documents. This is the same as the basic RF technique. Otherwise, it will consider the proportion of relevant topics X  profile based on task-stage.

We compare four methods in this work: the Linear-0 method (i.e., the baseline method) and three others based on the proposed technique, namely, the Linear-0.5 , Stage , and Stage-Correlation methods. The Lin-ear-0 (baseline) method is an incremental learning process that learns a user X  X  current information needs from feedback about the recommended information (i.e., documents), and updates the user model for future infor-mation filtering. The method only considers a worker X  X  feedback on documents. In contrast, the Linear-0.5 method considers a worker X  X  feedback on documents and task-relevant topics; that is, two kinds of information, the feature sets derived from documents and the topic profiles, are equally important in profile adaptation. Both methods update the worker X  X  task profile using the RF technique X  X  incremental learning process.

Learning methods based on incremental learning techniques consider a worker X  X  feedback without consid-ering his/her current task-stage. In this work, however, changes in a worker X  X  task-stage and the task-relevant topics are incorporated into the traditional RF technique. Thus, the proposed system considers a worker X  X  feedback, the task-stage, and the task-relevant topics for each stage in order to provide more effective infor-mation filtering. We designed two methods based on the IF technique with task-stage identification: the Stage method, and the Stage-Correlation ( Stage-C ) method. Technically, the worker X  X  task-stage will influence the parameter k in Eq. (5) . The Stage method considers the worker X  X  current task-stage to adjust the relative importance of task-relevant topics and his/her feedback on documents, i.e., the temporal profile discussed in Section 4.2 . The Stage-C method, which is based on the Stage method, not only considers the worker X  X  cur-rent task-stage to adjust the relative importance of task-relevant topics and his/her feedback on documents, but also incorporates the correlation value into the profile adaptation equation, i.e., Eq. (5) . Specifically, the parameter a is set to the value of the correlation value between transactions, instead of being set to 1, as in the other methods.
 5.2. Study design, procedure and evaluation metric
Knowledge workers usually require a substantial amount of time (e.g., a year) to accomplish knowledge-intensive work tasks. The application domain and the characteristics of the knowledge-intensive work task restrict the size of the data sample and the number of participants in the experiments. 5.2.1. Study design
The subjects were twelve graduate students in the Department of Information Management who were engaged in different tasks, such as a survey of information technology service management, text analysis for business intelligence, product recommendation, and deployment of knowledge management systems.
The types of tasks include system development, thesis writing, and project surveys, which are knowledge-intensive tasks. To accomplish such tasks, knowledge workers usually require a great deal of task-relevant information. In addition, a new task in the laboratory or a project team X  X  task generally has some degree of similarity with the previous tasks. As observed in our previous study, both experienced workers and novices in the work environment benefit from previous tasks ( Liu and Wu, 2008 ). Thus, reusing knowledge about pre-vious tasks (i.e., executed tasks in this work) is the key to providing effective knowledge support when workers perform new tasks.

In this work, we observed the worker X  X  long-term document access behavior patterns in the presented sys-tem after they were assigned a new task. In our design, when the worker wants to access or share documents in the presented system, he/she needs to select one task from the current task set. Then, the system records his/ her search behavior for the specific task; therefore, the system can distinguish users X  search behavior for dif-worker is not repeating the previous task. For example, if a worker is assigned a  X  X  ITIL-based Context-aware
Knowledge Recommendation  X  task, he will reference previous tasks about the  X  X  X oncept of context-aware is, the system traces and records their search behavior and then delivers documents based on their feedback words) based on users X  feedback behavior and provides knowledge support (i.e., document recommendations) based on their profiles and task-stage. 5.2.2. Study procedure
Since executing a task takes a long time, we chose the subjects according to the task-stage they were in, i.e., the pre-focus, focus formulation, or post-focus task stages. To evaluate the effectiveness of the task-stage knowledge support model, we selected four evaluation subjects who were in the same stage, but performing different current tasks . Specifically, we selected four subjects who were in the pre-focus stage, four subjects who were in the focus formulation stage, and four subjects who were in the post-focus stage. Accordingly, there are 12 subjects in this experiment, i.e., we conducted four evaluations for each task-stage. Table 4 details the subjects X  information, including the task-stages they were in, and the length of the evaluation period.
Note that subjects may stay a long time in a stage if they encounter problem with the task-at-hand. The effectiveness of knowledge support is measured in terms of the precision and recall rates, as in information retrieval research ( Rijsbergen, 1979; Riloff and Lehnert, 1994 ). For each evaluating task, the precision rate is the percentage of retrieved items (tasks or documents) that are relevant compared to the total number of retrieved documents. The recall rate is the percentage of the total number of relevant documents retrieved to the total number of relevant documents, specified by experts.
For each evaluation task, we asked domain experts and experienced workers to manually label the documents our answer set for evaluating each task. Finally, on average, 40 X 60 documents were labeled as relevant by the domain experts and experienced workers for each evaluation task. The experiment results summarize the observations based on task-stages and various levels of top-N document support. 5.2.3. Data and participants
Task-relevant codified knowledge consists of documents in an organization X  X  knowledge repository that have been accessed via the executed task set, i.e., historical tasks. In this work, the tasks are related to writing research papers or conducting research projects, so we selected evaluation subjects who were engaged in a current task. A task denotes either an executed task or a current task .An executed task is a historical task already accomplished within the organization, whereas a current task is a task at hand. More details are given in the Liu and Wu (2008) . We selected approximately 600 documents from the 35 executed task sets in our laboratory for the period 2002 X 2006. Each document contained an average of 90 distinct terms after information extraction, and document pre-processing (i.e., case folding, stemming, and stop word removal). Note that a large number of documents are accessed and generated during a task X  X  execution. After completing a task, the task-related experts and knowledge workers identify key documents. As a result, the task repository only preserves around 15 X 20 key documents, which are selected from the set of documents for each task . 6. Experiment results and implications
We conducted the experiment to evaluate the effectiveness of the proposed IF technique with task-stage iden-tification using the four methods described in Section 5.1 . As described in Section 3 , changes in a worker X  X  task-stages are determined by the proposed correlation of task-needs pattern analysis. The result of stage iden-tification influences the parameters a and k in profile adaptation, as shown in Table 3 . 6.1. Experiment results
In this experiment, we compare the Linear-0 , Linear-0.5 , Stage , and Stage-C methods. The Linear-0 is based on the traditional incremental learning technique . The Linear-0.5 method is similar to traditional incremental learning technique ; it also considers a worker X  X  feedback on task-relevant topics. The Stage and
Stage-C Methods is based on the IF technique with task-stage identification . Moreover, for the Stage-C method, the correlation value of the worker X  X  task-need patterns across transactions is incorporated into the technique. 6.1.1. Document support: observations based on task-stages
Fig. 5 shows the performance of the three methods in terms of precision, and recall. In addition, Fig. 6 shows the result of knowledge support for document-retrieval based on the three task stages. The top-30 retrieved documents are used to evaluate the performance of each method:
Observation 1: Fig. 5 shows that the average values of the precision and recall of the Stage-C method are
Observation 2: Taking a further look of the experiment, we evaluate the performance of the four methods for
Discussions: The experimental result indicates that a worker X  X  topic requirements may vary in the early 6.1.2. Document support: observations on various levels of top-N support
Fig. 7 shows the precision of the three methods obtained by averaging the three task stages for various lev-els of top-N retrieved document support. In addition, Table 5 shows the results of task-relevant document sup-port based on the three stages for various levels of top-N retrieved document support:
Observations 1: Fig. 7 shows the average precision values of each evaluation case in each stage under various
Observations 2: Table 5 shows that the average values of precision and recall of the Stage-C method under 6.2. Implications
Overall, the experiment results demonstrate that the proposed long-term document support model for task-stages is effective. Since the Stage-C method achieves the best performance in each evaluation case, the proposed task-stage identification technique can provide more task-relevant documents than the incremen-tal learning technique . In addition, the smaller the number of support documents, the higher the precision rate of each method will be; that is, the system has a better retrieval capability with fewer supporting doc-uments. On the other hand, the fewer number of support documents, the lower recall rate for each method under various task stages. The reason is we asked domain experts and experienced workers to manually label documents as relevant or irrelevant to the task. On average 40 X 60 were labeled as relevant for each evalua-tion task, as mentioned in Section 5.2 . One of the evaluation cases even with 30 relevant documents which are labeled by the experts. Therefore, it is not easy to achieve high recall value. Due to the higher precision rate performance based on the experimental result, the system is suitable for adopting in a work environment in which workers are under pressure to find task-relevant documents and do not have time to review a large number of retrieved documents. Moreover, with the designed relevance feedback technique in the presented system, the problem of low recall rate could be resolved by adjust the worker X  X  profile based on his/her expli-cit and implicit feedback behaviors. Furthermore, the results are in accordance with our preliminary assump-tions that we could build an interactive knowledge support system to retrieve task-relevant documents based on the proposed techniques to perform more precise information filtering. In the future, we would like to conduct on-line evaluations to explore the issues of interactive information seeking behavior according to the proposed ideas. 7. Conclusion and future work
Information systems that rely on traditional IR technology and user models (e.g., user profiles) to sup-port workers X  long-term information needs raise some fundamental and challenging issues. The most impor-tant issue is that it is difficult to model a worker X  X  long-term information needs based on his/her feedback without considering the working context. To provide more effective long-term document support, we incor-porated a task-stage identification technique into the document support process in each task-stage. Based on Vakkari X  X  study (2000) , we observed the changes in laboratory workers X  task-stages over a 1-year period.
Using a task-needs pattern similarity analysis method, we identified three stages, namely, the pre-focus, focus formulation, and post-focus task-stages. The experiment results show that in the pre-focus task-stage, there is a low or negative correlation between search sessions and transactions, whereas there is at least a moderate correlation between these two factors in the task formulation and post-focus stages. Based on this finding, we have proposed a task-stage knowledge support model that adjusts a worker X  X  task profile according to task-relevant topics and the specific task-stage. Preliminary experiments were conducted to compare methods that deliver task-relevant documents based on task-stages and the traditional information filtering (IF) incremental learning technique. The results confirm that incorporating a worker X  X  task-stages into the traditional IF incremental learning technique can effectively support the worker X  X  long-term infor-mation needs.

A number of issues still need to be addressed. First, context-based knowledge support that considers the con-text of activities, roles, and work-related skills when providing context-aware knowledge access and retrieval is an important issue that requires further research. Contemporary KMS increasingly emphasize the organization of all possible task-specific knowledge by supporting context-aware knowledge access and retrieval ( Ahn et al., 2005; Alvarado et al., 2004; Kwan and Balasubramanian, 2003 ). Future studies could extend the proposed approach to support context-aware or process-aware delivery of task-relevant knowledge. Second, more task-stage features should be considered to refine the adaptation of the task profile during the task X  X  perfor-mance. As Vakkari X  X  studies show, information search terms and relevance judgments vary according to the task-stage. Some of the above features may be crucial for enhancing the task-stage knowledge support model; therefore, we will conduct further investigations by considering the features of each stage. Moreover, reusing knowledge assets extracted from historical tasks is important in providing effective knowledge support for tasks. In our ongoing work, we are developing a mining technique for discovering task-stage needs from his-torical tasks. The proposed method uses information retrieval techniques and a modified hierarchical agglom-erative clustering algorithm to identify task-stage needs by analyzing codified knowledge (documents) accessed or generated during a task X  X  execution ( Liu, Wu, and Chen, 2006 ). We are also developing a method to identify variations in topic-needs across task-stages based on the Vakkari (2000) and Vakkari et al. (2003) information seeking theory. The objective is to determine the influence of broad and specific topics in different task-stages.
Finally, we should acknowledge the limitations of this study. It was an exploratory longitudinal study, and we implement them in real-world settings, i.e., a laboratory in which multiple projects were executed by dif-ferent workers. As a result, it was difficult to choose proper tasks and subjects as our investigation targets.
Using filtering rules devised by experts, a few tasks and researchers were chosen as test subjects. Although the sample size in this type of research is limited ( Hansen and Ja  X  rvelin, 2005; Jansen, 2005; Vakkari et al., 2003 ), the experiment results motivate us to conduct further research on long-term document support in dif-ferent task-stages. In addition, with regard to the selection of tasks (i.e., evaluation cases), we need to empha-size that the tasks should be in the same research domain. They cannot relate to topics outside the task-based domain ontology because we focus on the effective reuse of knowledge about previous tasks (i.e., historical tasks in this work) to support the execution of new tasks. In our future work, we will consider knowledge support for innovation tasks, as it is beyond the scope of this study. Moreover, Kelly and Fu X  X  (2007) rele-vance feedback study shows that eliciting a user X  X  information needs based on his/her feedback can improve retrieval performance significantly. We will refine the experiment procedure to further evaluate the effective-ness of the proposed techniques for real-time and interactive document delivery. Ideally, we would like to conduct on-line evaluations to explore issues related to interactive information seeking based on the proposed task-stage technique and identify workers X  task-needs with the aid of an interactive process for exploring spe-cific topics.
 Acknowledgements
This research was supported by the National Science Council of Taiwan government under the Grant NSC 95-2416-H-009-002 &amp; NSC 95-2416-H-030-012. Appendix A. Relevance feedback techniques
Relevance feedback improves search effectiveness through query reformulation ( Rocchio, 1971 ). Various studies have demonstrated that relevance feedback applied in the vector model is an effective technique for information retrieval ( Rocchio, 1971; Salton and Buckley, 1990 ). Eqs. (A1) and (A2) illustrate two classical relevance feedback methods designed by Rocchio (1971) and Ide (1971) , respectively. A modified query vector ~ q is derived using the relevance of documents (as feedback) to adjust the query vector ~ q ( Baeza-Yates and Ribeiro-Neto, 1999 ): where D r denotes the set of relevant documents and D n represents the set of irrelevant documents according to user judgment. | D r | and | D n | represent the number of documents in the sets D tuning constants. The function of max irrelevant returns the most irrelevant document. The two methods pro-duce similar results ( Baeza-Yates and Ribeiro-Neto, 1999 ).
 Appendix B. Task topics in the research domain Herein, we listed the 35 task topics in this research domain Topic ID Topics (previously executed tasks) T0000000001 Role-based intranet information service T0000000002 Automatic classification for video data T0000000003 Agent-based internet search for goods information T0000000004 A study on internet healthcare commerce: integration of healthcare EDI and SET T0000000005 A flexible architecture for intermediary based electronic commerce
T0000000006 The development of task-oriented intranet information service systems integrating with T0000000007 Workflow modeling based on XML and rules T0000000008 A case study of introducing ERP systems in enterprises T0000000009 Research on personalized merchandise information filtering in electronic catalog systems T0000000010 Design and implementation of XML based electronic catalogs
T0000000011 Designing authorization rules to achieve separation of duty in task-based access control T0000000012 An implementation of authorization management in task-based access control models T0000000013 An implementation of multidimensional transaction analysis systems for e-brokers T0000000014 Mining association rules from three-level e-catalogs T0000000015 Deploying a data warehouse system for computer integrated manufacturing T0000000016 Mining association rules for information recommendation in enterprises T0000000017 Integrating data warehousing and data mining for web logs analysis T0000000018 Designing composite e-service platform with recommendation capability T0000000019 Multi-criteria task assignment in workflow management systems T0000000020 Coordinating inter-organizational workflows based on process-views T0000000021 Workflow modeling for virtual processes: an order-preserving process-view approach T0000000022 Towards a framework for discovering project-based knowledge maps
T0000000023 A integrated framework for recommending composite e-services based on mining and Appendix B ( continued ) Topic ID Topics (previously executed tasks) T0000000024 A study of topic maps for composite e-services T0000000025 A implementation and comparison of collaborative filtering for recommendations T0000000026 A study of applying feature-weighting clustering to recommender system T0000000027 Event detection and tracking based on event hierarchy T0000000029 Mining the changes of news events for supporting decision making T0000000030 Discovery and support of problem-solving knowledge in e-business T0000000031 A collaborative relevance feedback approach to task-driven recommendation
T0000000038 Applying second-degree neighborhood to alleviate the sparsity problem in collaborative T0000000043 Applying topic maps and data mining to deploy composite e-service platform T0000000047 Implementation of task-based knowledge support system T0000000048 Implementation of personalized recommendations for composite e-services T0000000050 Business-to-business workflow interoperation based on process-views Appendix C. K -Support revised interface See Fig. 8 .
 References
