 Rank order correlation has been used extensively when the data is non-parametric or when the relationship between two variables is nonlinear and monotonic. In such cases, linear correlation measures, such as the product-moment coeffi-cient, are inadequate and fail to detect correlative relations. We present a polyhedral indexing technique for rank order correlation queries for time series data. We use an interest-ing geometry interpretation of rank order correlation which lends itself to indexing by spatial indexes such as R-trees. Our experimental results indicate one to two orders of mag-nitudes improvement over sequential scan  X  the only alter-native solution.
 Categories and Subject Descriptors: H.3.3 [Informa-tion Storage and Retrieval]: Information Search and Re-trieval  X  Query formulation; Search Process.
 General Terms: Algorithms, Experimentation, Perform-ance.
 Keywords: Time series data, correlation analysis, multi-resolution index, dimensionality reduction.
Time series data are often too large for analysis by hu-man beings. Powerful statistical packages have been devel-oped and used for this purpose. Correlation analysis, often supported in such tools, measures the quality of the rela-tionship between two time series. The well-known Pearson X  X  product-moment correlation coefficient has been successfully indexed in [2, 6]. Rank order correlation on the other hand is a nonparametric and nonlinear measure which can detect nonlinear, monotonic relationships two sequences. In this work, we propose a technique for indexing time series data for rank order correlation queries. To the best of our knowl-edge, this has not been done before. Rank order correlation, denoted by  X  , was introduced by Spearman [7]. Similar to Pearson X  X  product-moment coeffi-cient,  X  is obtained by first converting the two sequences to rankings before the coefficient is calculated. Let X and Y
The model makes it possible to map a d-dimensional query ( Y ) and data points ( X ) to a polyhedral solution space which can then be handled by spatial indexes. For this, we have adapted the underlying construction and insertion algorithms for the Compact Multi-Resolution Index (CMRI) [3]. Using this as the index, we propose a novel technique for rank order correlation queries.
Before indexing a time series data, we transform it into its rank space. This generates points in Euclidean space that can be indexed by a spatial data structure. We in-dex common sliding (or disjoint) windows. Since high di-mensional window lengths do not empirically perform well on R-tree based indexes, we reduce the dimensionality of the data to d = 8, using Piecewise Aggregate Approxima-tion (PAA) [1]. The resulting polyhedral solution space has 8! = 40,320 nodes which is large enough in our experi-ments to spread out the transformed data in rank space for distance based queries to be significant. Furthermore, let R be the PAA representation of R X and R Y . Then, the fol-lowing inequality follows from the lower bounding property of PAA: D 2 ( R X ,R Y )  X  D 2 ( R X PAA ,R Y PAA ). This ensures that there will be no false negatives in query results, al-though we may have false positives. When ties occur, since U, V  X  0, by definition of tied rank order correlation, we have that D 2 ( R X ,R Y )+ U + V  X  D 2 ( R X PAA ,R Y PAA ). This ensures a lower bounding property of distance measures over the PAA rank space values.
Rank order correlation is a function of the Euclidean dis-tance between rank vectors. Highly correlated rank vectors are close to each other in polyhedral space, whereas uncor-related rank vectors are far from each other. The distance between rank vectors expressed as a function of correlation is given by: D 2 = We can map a rank order query to a range query using e  X 
Algorithm 1 shows steps of insertion into an R-tree based, multi-resolution index, for which we used CMRI [3]. Algorithm 1 Insertion into CMRI index Input: Aset T i of CMRI R-trees with resolutions ranging Output: Updated CMRI index. 1: for i = a to b do 3: x 1 ,...,x d = PA A ( R 2 i ) 4: INSERT ( x 1 ,..., x d ) in T i 5: end for
Algorithm 2 illustrates query processing steps for rank or-der correlations based on range queries.

