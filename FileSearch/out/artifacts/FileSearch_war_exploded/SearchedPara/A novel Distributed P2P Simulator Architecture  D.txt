 In this paper we introduce a novel distributed simulation en -vironment with GUI for P2P simulations (D-P2P-Sim). The key aim is to provide the appropriate integrated set of tools in a single software solution to evaluate the performance of various protocols. The basic architecture of the distribut ed P2P simulator is based on a multi-threading, asynchronous, message passing and distributed environment with graphi-cal user interface to facilitate ease of use by both research ers and programmers.
 H.4 [ Information Systems Applications ]: Miscellaneous Algorithms, Experimentation P2P simulator, distributed simulator In this section details concerning the developed distribut ed P2P simulation environment are discussed. There is a num-ber of P2P simulation tools already presented in the exten-sive P2P simulators survey of S. Naicken et al [1]. According to the survey, the majority of the cases studied included spe -cially created simulation tools for the evaluation of the pr o-tocols and algorithms presented. There are cases that the former simulators are reused by the research groups and af-filiated ones. Even if one takes the latter into consideratio n, the survey finds that the custom made simulators far out-numbers the use of known ones. As a result, comparison and replication of evaluation results is difficult besides the du -plication of effort to develop again the same protocols once more from the beginning. A main outcome of the survey is that  X  X he poor state of existing P2P simulators is the reason that much published research makes use of custom built sim-ulators X . The main drawbacks of the simulation mechanisms found were i) no systematic mechanism to gather statistics of the simulation executions, and ii) absence of graphical user interface support to support user friendliness.
We present a novel distributed P2P simulation environ-ment (Java based), which is an integrated tool to overcome previous drawbacks in P2P simulators and includes several features which are for the first time to the best authors X  knowledge all together in a single integrated P2P distribut ed simulator. In the following, the architectural features of the distributed P2P simulator proposed are discussed.
Unbiased . The first key feature of the proposed sim-ulator is the unbiased and independent from the protocol implemented mechanism to collect performance data. The mechanism is based on the observation and the filtering of special fields in the message. These fields are controlled by the simulator and are by default inaccessible from the protocol X  X  processes. This alternative way to collect perf or-mance data, in conjunction with the realistic execution en-vironment yields to more accurate performance evaluation. Statistics are integrated for lookup, insert, delete, load bal-ance and routing table length evaluation.

Realism . A simulation model is considered reliable when at least a) it depicts real life execution environment param -eters on the simulation, b) it is unbiased and c) it is im-plemented as close as possible to an application level P2P software (e.g. single PC torrent client software). The exe-cution model of the simulator is asynchronous/event driven and multi threading. These two features are fundamental for a real life P2P application. Although event based simulator s have already been presented (e.g. peersim), when it comes to a simulation of large number of nodes then the  X  X roduce and consume X  model is adopted. We apply a pooling tech-nique to achieve thousands/millions of nodes using the even t driven approach which is more realistic. Furthermore, the proposed simulator can be executed as a single P2P network peer per node, behaving as a real life P2P application tak-ing advantage of all the evaluation tools available under th e most realist possible conditions.

Distributed . D-P2P-Sim is a distributed simulator that may take advantage of multiple computer systems intercon-nected with network and of course clusters. As a result this allows conducting experimental simulations including ver y large number of peers, overcoming any limitations posed by a single stand alone computer system. This profit comes at the expense of the communication and coordination pro-cesses (  X  10% overhead) introduced by the additional func-tionality.

Pluggable and Extensible . The D-P2P-Sim simulator is available on the Internet and facilitates the developmen t of additional P2P protocols for evaluation. The extensibil ity is based on the plug in mechanism of Java. An API has been defined and it is available for further development. However , in order to make it easier for researchers and testers to de-velop a new protocol for the simulator, D-P2P-Sim includes a sample dummy implementation with all code and details for the basic design of a P2P protocol with its message trans-action mechanism, routing management and architectural outline.

Efficient . The D-P2P-Sim is practical and efficient as it is supported by an integrated Graphical User Interface and it includes graphical Statistics functionality. Furtherm ore, the D-P2P-Sim simulator is extremely efficient delivering &gt; 400,000 peers in a single computer system. While, when it acts in a distributed environment with multiple computer systems with network connection delivers multiple times th e former population of peers.
Throughout this section the functional specifications and the overall architecture design of the D-P2P-Sim simulator are described.

The GUI is organized in such a way that can guide some-one easily through the simulation process with no need for any prior knowledge about the simulator. One may select the overlay protocol and enter the number of peers that con-stitute the overlay network and its key capacity. It is possi -ble to perform step-by-step execution of the lookup and up-date operations-algorithms, and verify the algorithm X  X  co r-rectness and proper functionality by observing the message s that are being displayed at real time.

Moreover, the user may design, in batch mode, multiple experiment scenarios to evaluate the protocol X  X  efficiency. For each experiment it should be supplied the number of queries that will be performed and the distribution of the keys chosen for the experiments. After the termination of the experiments the user has available statistical chart s which are automatically generated. Additional performanc e statistics such as the average path length of the lookup, in-sert and delete algorithms, as the average size of the peers X  routing table and the total number of operations that have been conducted at that time, are displayed.

Several options affecting the simulator X  X  behavior are pro-vided for certain tunable parameters concerning three main categories: the application nodes, the distributions and t he execution environment. The first set of parameters specifies the applications nodes that constitute the cluster and the percentage of overlay peers that will be managed by each one. The second set specifies the parameters of Beta X  X  and Power Law X  X  distribution functions which affect their skwe-ness, as well as the seed of the random engines. Finally, the third set specifies the number of threads created by the simulator, the debug level and the directories/files that ar e used by the simulator.

D-P2P-Sim simulator is delivered with code organized care-fully in software packages achieving low coupling and high cohesion , allowing in this way a great degree of modular-ity and a full understanding of its sophisticated design. In figure 1 are depicted with different colors the simulator X  X  Figure 1: Overview of D-P2P-Sim X  X  architectural modules. architectural modules and the packages that constitute eac h one. Four modules are distinguished a) the message passing environment, b) the overlay network, c) the remote services and d) the simulator X  X  utilities.

Even if the packages X  names are self-explanatory some of them arouse our interest and merits a greater degree of de-tail.

The Network , where the Messages are being stored, is con-tinuously observed by the Network Monitor notifying the appropriate peer every time it encounters a message des-tined to it. Furthermore, a copy of that message is filtered by the Network Filter in order to get extracted useful sta-tistical data, that will be further processed by the Overlay Monitor . Moreover, the Overlay is responsible to create and manage the dynamic loaded Peers that implement user de-fined protocols.

If the simulator acts in a distributed environment, mes-sages which are destined to overlay peers residing to a re-mote application node, are being passed to the appropriate node using the Network Pipe service. The statistical data collected from each application node are passed to the main node using the Data collector service, while the AppNode Barrier service synchronizes the cluster X  X  execution.
Due to space limitation additional technical details, ar-chitectural blueprints and multiple snapshots are availab le online at the simulator X  X  website.
 URL: http://students.ceid.upatras.gr/~papalukg
The demostration includes two parts a) an introductory multimedia presentation that will show off the ease of use of the simulator and its efficiency and b) an interactive  X  X ive X  event where multiple instances of the simulator will be setu p and experiments will be executed for different protocols in a distributed environment over a network cluster using typic al laptops and PC. The interactive demo will provide users the chance to execute their own experiments with the protocols available over a distributed network, find out technical de-tails on how to execute simulations using D-P2P-Sim and enjoy the ease of use and statistical output of the proposed environment. [1] S. Naicken, B. Livingston, A. Basu, S. Rodhetbhai,
