 Nuance Communications, Inc.
 Oregon Health &amp; Science University University ofNe wHampshire
The ongoing task is a poker game in which conversants need to assemble a poker hand, and the to understand the mechanisms that people use in managing these complex interactions. First, we examine task interruptions: switching from the ongoing task to a real-time task. We find that generally conversants tend to interrupt at a less disruptive context in the ongoing task when possible. We also find that the discourse markers oh and wait occur in initiating a task completing an interrupting real-time task. We find that conversants might simply resume the 1. Introduction
Existing speech interfaces have mostly been used to perform a single task, where the user finishes with one task before moving on to the next. We envision that next-generation speech interfaces will be able to work with the user on multiple tasks at the same time, which is especially useful for real-time tasks. For instance, a driver in a car might use a speech interface to catch up on e-mails, while occasionally checking upcoming traffic conditions, and receiving navigation instructions; or a police officer might need to be alerted to a nearby accident while accessing a database during a routine traffic stop.
 Traum and Rickel 2002; Kun, Miller, and Lenharth 2004; Lemon and Gruenstein 2004;
Larsson 2003). However, it is unclear that the mechanisms of managing multiple ver-bal tasks in these systems resemble human conventions or do the best to help users with task switching. For complex domains, the user might be confused about which task the interface is talking about, or might be confused about where they left off in a task.
 determine a set of conventions that the user and interface can follo win task s witching.
We propose to start with conventions that are actually used in human X  X uman speech conversations, which are natural for users to follow and probably efficient in problem-solving.Onceweunderstandthehumanconventions,wecantrytoimplementthemin adialoguemanagerandrunuserstudiestoverifytheeffectivenessofsuchconventions in human X  X omputer dialogue.
 multiple tasks. Multi-tasking dialogues, where multiple independent topics overlap with each other in time, regularly arise in human X  X uman conversation: For example, a driver and a passenger in a car might be talking about their summer plans, while occasionally interjecting road directions or conversation about what music to listen to.
However,littleisknownabouthowpeoplemanagemulti-taskingdialogues.Giventhe scenario where a real-time task with a time constraint arises during the course of an ongoingtask,wearespeciallyinterestedintwoswitchingbehaviors: task interruption , which is to suspend the ongoing task and switch to a waiting real-time task, and task resumption , which is to return to the interrupted ongoing task after completing a real-time task.

Intuitively if the real-time task is very urgent (e.g., the driver is about to miss a turn), the passenger might want to immediately cut off the ongoing conversation, and notify the driver of the turn. However, if the real-time task is less urgent, for example, the driver does not like the music and wants the passenger to load another CD, do conver-santsstillimmediatelyinterrupttheongoingconversation?Ifconversantsdovaryhow quickly they interrupt, are there any regularities of where conversants switch from the ongoing task to the real-time task? We hypothesize that, given the choice, conversants interrupt the ongoing task where the interruption is less disruptive to the ongoing task.
 researchshowedthatconversantssignalthestartofanewtopicinsingle-taskingspeech (monologueanddialogue)withdiscoursemarkersandprosodiccues.Wethushypothe-sizethatconversantsalsousethesecuestosignaltaskinterruptions.Wealsoinvestigate whether conversants vary the intensity of the cues, andunder what circumstances. ongoing task. Switching to a real-time task causes the ongoing task to be temporarily suspended. On completing the real-time task and returning to the ongoing task, do conversantssimplycontinueonfromwheretheywereinterrupted?Wehypothesizethat 76 conversants might sometimes perform certain actions to recover from the interruption.
For example, it is imaginable that conversants might ask where were we at for summer plans , and then review what was discussed before the interruption.
 of human X  X uman dialogues where pairs of conversants have multiple overlapping verbal tasks to perform. In our research, we keep things relatively simple by having conversants talk to each other to play two games on computers. The first game, the ongoing task, is a poker game in which conversants need to assemble a poker hand, which usually takes a relatively long time to complete. The second game, the real-time task, is a picture game in which conversants need to find out whether they have a certain picture on their displays, which can be done in a couple of turns but has a time constraint. In Section 3, we describe the task setup and corpus collection. In Section 4, we examine when and where conversants suspend the ongoing task and switch to the real-time task. In Section 5, we examine how conversants signal task interruptions. In Section 6, we examine the behavior ofcontext restoration in task resumptions. learning to automatically recognize task interruptions. Recognizing task interruptions is an important component in building speech interfaces that support multi-tasking dialogue.Forexample,thespeechinterfacecanaccordinglyswitchthelanguagemodel when it detects that the user has switched to another task, which should improve speech recognition performance (Iyer and Ostendorf 1999) and utterance understand-ing, leading to higher user satisfaction (Walker, Passonneau, and Boland 2001). We run machine learning experiments to determine how well we can automatically recognize task interruptions and to understand the utility of the features that we found in our corpus studies. Finally, we conclude the paper in Section 8. This paper includes and extends Heeman et al. (2005), Yang, Heeman, and Kun (2008), and Yang and Heeman (2009) with more corpus data, more robust statistical analysis, more machine learning experiments, and more comprehensive discussions. 2. Related Research 2.1 Existing Systems for Multi-Tasking Dialogues
There is some initial research effort in building speech interfaces to support multi-taskingdialogue.Kun,Miller,andLenharth(2004)developedasystemcalledProject54, which allowed a user to interact with multiple devices in a police cruiser using speech. The architecture of Project54 allowed for handling multiple tasks overlapped in time.
Forexample,whenpullingoveravehicle,anofficercouldfirstissueaspokencommand to turn on the lights and siren, then issue spoken commands to initiate a data query, go back to interacting with the lights and siren (perhaps to change the pattern after the vehicle has been pulled over), and finally receive the spoken results of the data query. This example shows that system responses related to different tasks could be interleaved:Thesystemrespondedtothedataqueryaftertheuserhadalreadyswitched back tointeracting withthelights and siren.

They built a speech interface for a human operator to direct a robotic helicopter on executingmultipletasks,suchassearchingforacarandflyingtoatower.Theinterface keptanorderedsetofactivedialoguetasks,andinterpretedtheuserutteranceinterms of the most active task for which the utterance made sense. Conversely, during the interface X  X  turn of speaking, it could produce an utterance for any of the dialogue tasks and thus intermixed utterances fromdifferent tasks.
 did not explicitly signal tasks switching, either for task interruptions or for task re-sumptions, but instead relied on semantic interpretation to determine which task an utterance belonged to. Larsson (2003) built the GoDis system which hard-coded two typesofsignalswhenresuminganinterruptedconversation.Thefirsttypeofsignalwas tousethediscoursemarker so toimplicitlysignalatopicresumption.Thesecondtypeof signal was to use the phrase returning to the issue of to explicitly resume an interrupted topic. For example, when searching for the price of an air ticket with GoDis, the user couldsuspendthesystem X  X question when do you want to travel byinterjectingaquestion do I need a visa . The system, after a short dialogue answering the user X  X  question about avisa, would resume the ticket booking by returning to the issue of price .
Mission Rehearsal Exercise system in which the user and virtual humans collaborated on multiple tasks that could interrupt each other. They created a scenario in which a lieutenant (the user) was sent to a village for an Army peacekeeping task. However, on his way, he encountered an auto accident in which his platoon X  X  vehicle crashed into a civilian vehicle, injuring a local boy. The boy X  X  mother and an Army medic were hunched over him, and a sergeant approached the lieutenant to brief him on the situ-ation. These multiple virtual humans could interrupt or be involved in conversations with the lieutenant. The authors proposed and partially implemented a multi-level dialoguemanager,withlevelsforturn-taking,initiative,grounding,topicmanagement, negotiation, and rhetorical structure. In their view, topic management included where one topic is started before an old one is completed. They described ho wtopic shifts in general can be signaled with cue phrases, such as now and anyways , and with non-verbal cues.
 handle multiple tasks, and promote a thorough examination of multi-tasking dialogue.
Inthisarticleweexaminetheconventionsoftaskswitchinginhuman X  X umandialogue asthefirststeptowardsunderstanding thepracticeofmanagingtaskingswitchingina computer dialogue system. 2.2 Insights from Non-Verbal Task Switching
Research in cognitive science suggests that task interruptions and resumptions are complicated behavior and warrant investigation. There is extensive research on the disruptivenessofinterruptions,inwhichindividualsswitchbetweenmultiplemanual-visual tasks. For example, Gillie and Broadbent (1989) found that the length (in time) of an interruption is not an important factor, but that the real-time task X  X  complexity and similarity to the ongoing task contribute to the disruptiveness. On the other hand, in their study of checklists, Linde and Goguen (1987) found that it is not the number of interruptions but the length of interruptions that affects the disruptiveness. Cutrell,
Czerwinski, and Hovitz (2001) examined the influence of instant messaging on users performing ongoing computing tasks, and found that interruptions unrelated to the ongoingtaskresultedinlongertaskresumptions.Althoughtheseresultsdonotappear to always converge on the same conclusions, they suggest that task switching can be disruptive tousers.
 in human X  X omputer interaction. McFarlane (1999) explored four alternatives for when 78 tosuspendtheongoingtaskandswitchtotheinterruption,namely,immediate,negoti-ated,mediated,andscheduled,andfoundmixedresults.Renaud(2000)arguedfor,and built,aprototype ofavisualization tool tohelp usersrestore the context ofthe ongoing task when returning from an interruption. Hess and Detweiler (1994) and Gopher,
Greenshpan,andArmony(1996)foundthatthedisruptiveeffectsarereducedaspeople gain more experience with interruptions. These studies suggest that it is worthwhile to investigate ho wa computer dialogue system should manage task s witching. 2.3 Insights from Discourse Structure Research
Research in discourse structure also sheds light on task switching. It is important to understand the conventions that people use to manage discourse structure as these might also be used for managing multiple tasks. According to Grosz and Sidner (1986), thestructureofadiscourseisacombinationoflinguisticstructure,intentionalstructure, and attentional state. The linguistic structure is a hierarchical segmentation of the dialogue. Each segment has a purpose, which is established by the conversant who initiates the segment. The purposes come together to form the intentional structure.
The attentional state contains the objects, properties, and relations that are most salient at any point in the dialogue. The attentional state is claimed to work like a stack. When a ne wsegment is started, a ne wfocus space is created on top of the attentional stack.
When the segment completes, the focus space ispopped off. ary of related discourse segments that contribute to the achievement of a discourse purpose. Two types of cues have been identified. The first type is discourse markers (GroszandSidner1986;Schiffrin1987;MoserandMoore1995;PassonneauandLitman 1997; Bangerter and Clark 2003). Discourse markers can be used to signal the start of a ne wdiscourse segment and its relation to other discourse segments. For example, now mightsignalmovingontothenexttopic,and well mightsignalanegativeorunexpected response.
 studied broadcast news and found that pause length is the most important factor that indicates a ne wdiscourse segment. Ayers (1992) found that pitch range appears to cor-relatemorecloselywithhierarchicaltopicstructureinreadspeechthaninspontaneous speech. In spontaneous monologue, Butterworth (1972) found that the beginning of a discourse segment exhibits slower speaking rate; Swerts (1995) and Passonneau and Litman (1997) found that pause length correlates with discourse segment boundaries;
HirschbergandNakatani(1996)foundthatthebeginningofadiscoursesegmentcorre-lateswithhigherpitch.Inhuman X  X umandialogue,similarbehaviorhasbeenobserved: Thepitch value tends tobe higher for starting ane wdiscourse segment (Nakajima and
Allen 1993). In human X  X omputer dialogue, Swerts and Ostendorf (1995) found that the first utterance of a discourse segment correlates with slower speaking rate and longer preceding pause. Thus, we are interested in whether discourse markers and prosodic cues are also used in signaling task interruptions in multi-tasking dialogue. 3. The MTD Corpus In order to better understand multi-tasking human X  X uman dialogue, we collected the
MTDcorpus, in which pairs of players perform overlapping verbal tasks. 3.1 Design of Tasks
For the MTD corpus, we decided to have players complete two types of tasks via conversation: an ongoing task and real-time tasks. The ongoing task needs to build up significant context that players have to keep in mind. On task resumption, this context is needed to finish the task, and so might need to be re-established. The task should also encourage both players to equally participate as we believe that mixed-initiative will be the conversational mode in future speech interfaces. The real-time task can be kept simple: It does not build up much context and can be finished in a couple turns. However, we vary the urgency of this task.
 hands as possible, where a poker hand consists of a full house, flush, straight, or four of a kind. Each player initially has three cards in hand, which the other cannot see.
Players take turns drawing an extra card and then discarding one, until they find a valid poker hand, for which they earn 50 points; they then start over to form another poker hand. To discourage players from rifling through the cards to look for a specific onewithouttalking,onepointisdeductedforeachpicked-upcard,andtenpointsfora missed or incorrect poker hand. To complete this game, players converse to share card information, and explore and establish strategies based on the combined cards in their hands (Toh, Yang, and Heeman 2006). The poker game is played on computers. The game display, which each player sees, is shown in Figure 1. The player with four cards can click on a card to discard it. The card disappears from the screen, and a ne wcard is automatically dealt to the other player. Once they find a poker hand the player with four cards clicks the Done Poker Hand button tostart ane wgame.
 of theplayers todetermine whether the other has acertain picture on thebottom ofthe display.Thepicturetaskhasatimeconstraintof10,25,or40seconds,whichis(pseudo) randomly determined. Two solid bars above and below the player X  X  cards flash when thereisapendingpicturegame.Thisshouldalerttheplayertoapendingpicturegame without taking the attention away from the poker game. The color of the flashing bars dependsonhowmuchtimeremains:greenfor26 X 40seconds,yellowfor11 X 25seconds, andredfor0 X 10seconds.Theplayercanseetheexactamountoftimeleftintheheading of the picture game. In Figure 1, the player needs to find out whether the other player has a blue circle, with 6 seconds left. The players get 5 points if the correct answer is given in time. Theoverall goal of the players istoearn asmany pointsas possible from the twotasks. 3.2 Corpus Collection
We recruited six pairs of players, who each received US $10 for completing the data collection. All players were native American English speakers, and had a bachelor X  X  degreeorhigherincomputerscienceorelectricalengineering.Noneoftheplayerswere inourresearchlab,andtherewasnoevidencethatanyplayerknewaboutourresearch program before they participated. 80 separated so that they could not see each other and they talked to each other through headsets. After a short orientation, the players played the poker game for about 5 minutes to become familiar with the rules. They then had a practice conversation with boththepokergameandthepicturegameforabout15minutes,sothattheygotusedto managing both tasks. Finally, they had two more conversations, each lasting for about 15minutes.Ineachconversation,ninepicturegames,threeforeachurgencylevel,were prompted for each player. In this research, we analyze the last two conversations, but not the practice one. Thus we have a total of about 180 minutes of conversation from the six pairs of players.
 created a log file. The log file contains all the events of the computer dealer and the
GUI actions of the two players for each task with time-stamps. For the poker game, it contains information of when a card is dealt or discarded, and information of when a poker hand is achieved or missed; for the real-time task, it contains each question, the time it isgenerated, the answer, and the time it isanswered.
 ing questions: (1) Did you ever play poker before you participated in this experiment? (2) Did you always immediately notice the flashing that signaled a new picture task? (3) Did you ever purposefully ignore a picture task? (4) Ho wdid you make use of the different urgency levels (40, 25, or 10 seconds)? (5) Ho wdid the picture task affect the pokergame?(6)Doyouhaveanyothercomments?Allplayershadatleastsomepoker experience. All players reported that they always noticed the bars immediately when they started to flash, and that they never ignored a real-time task on purpose. Some players also mentioned that they enjoyed the games. 3.3 Dialogue Segmentation Wesegmentedeachdialogueintoutterancesusingconsensusannotations(seeYangand
Heeman[2010]formoredetails),followingtheguidelinesoftheTrainscorpus(Heeman and Allen 1995). We also annotated each utterance as to whether or not it is a trivial utterance. We define trivial utterances as those that are just a stall (such as uh and um ) or a simple acknowledgement (such as okay , uh-huh ,and alright ). According to Strayer,
Heeman, and Yang (2003), annotators reached high inter-coder agreement on a similar annotation scheme. 2 There are in total about 4,300 non-trivial utterances in playing the poker game.
 theplayerssuccessfullycompleteapokerhand.Eachpokergamecanbefurtherdivided into a sequence of card segments, in which players discuss which card to discard, or players identify a poker hand. In total, there are 120 game segments and 781 card segments in the corpus. We also group the utterances involved in each picture game into a segment. Of the 216 prompted picture games, 8 were never started, although players reported that they never ignored a picture game. Hence we have 208 picture games. Table 1shows the statistics for each pair of players (R1, R2, ...,R6). is a game segment in which players get a poker hand of a flush; and b8, b10, b11, b12, and b14, inside of b7, are card segments. Also embedded in b7 are b9 and b13, each of whichisasegmentforapicturegame.Ascanbeseen,playersswitchfromtheongoing poker-playing to a picture game. After the picture game is completed, the conversation on the poker-playing resumes.
 the time a ne whand is dealt is usually the start of a ne wgame segment; the time a ne wcard is dealt is usually the start of a ne wcard segment. We then manually fixed anymistakes.Forexample,amis-generatedsegmentisremovedwhereaplayersimply discarded a card without any discussion; and a segment boundary is moved if an utterance about the card being discarded, typically an acknowledgment, is said after the ne wcard isdealt. 82 conversantsattempttocompleteadomaintask,thatofwinningthecardgame,deciding what card to discard, or identifying a picture. Thus they follow Grosz and Sidner X  X  (1986) definition of discourse segments. 3.4 Discourse Context
We define discourse context on the task level. We distinguish three types of discourse context where a player suspends the poker playing and switches to a pending picture game: (G) immediately after completing a poker game (at the end of a game), (C) immediatelyafterdiscardingacard(attheendofacarddiscussion),and(E)embedded in a card discussion, where players are deciding which card to discard. Corresponding to our dialogue segmentations, an interruption at the end of a game is thus a picture game segment between two poker game segments; an interruption at the end of a card is a picture segment between two card segments; and an interruption embedded in a carddiscussionisapicturesegmentembeddedinacardsegment.AsshowninFigure2, both b9and b13 are interruptions at the end ofa card discussion. 4. Where to Interrupt
In this section, we examine whether players wait for certain discourse contexts in the poker playing tointerrupt with apicture game. 4.1 Response Delay
Duringpoker playing, ifapicture game isprompted, thebars around thecards flash in different colors depending on the amount of time left. It is up to the player to decide when to start the picture game (by asking the other player whether there is a certain picture at the bottom of the display). The players can start the picture game as soon as they notice it, for example, within one second; or they can delay the picture game, forexample,for35seconds,ifthetimeconstraintallows.Wethusexaminethe response delay ,definedasthetimeintervalbetweenwhenapicturegameispromptedandwhen theplayerstartsit,tounderstandhowsoonaplayerrespondstoapicturegame.Weare particularly interested in ho wplayers respond to different urgency levels, i.e., whether players wait longer when theyare given more time.
 10 sec (black), 25 sec (gray), and 40 sec (white), with the actual values displayed in the columns below. There are certainly individual differences. Player 5A seems to respond to a real-time task as soon as the bars start flashing, regardless of the urgency levels.
In fact, in 17 out of the 18 picture games, 5A has less than three seconds of response delay;andthelongestresponsedelayisonly3.22seconds.Player4Balsohasinteresting behavior: He waits a significant amount of time under the urgency level of 25 sec, but promptly responds under the urgency level of 40 sec. However, overall the response delay under the urgency levels of 40 sec ( M = 12.5 sec) or 25 sec ( M = 9.7 sec) is much higherthanundertheurgencylevelof10sec( M =2.8sec).Theresponsedelayfor40sec issignificantlyhigherthanfor10sec,t(11)=4.2,p &lt; 0.001;asisfor25secversus10sec, t(11)=6.36,p &lt; 0.001.Infact,forquestion(4) how did you make use of the different urgency levels (40, 25, or 10 seconds) in the post-experiment survey, all players but 5A answered that they waited to initiate the picture game when they were given 25 sec or 40 sec (5A answered X  X otreally. X )The10securgencylevelrequiresplayerstostartapicturegame very quickly in order to complete it in time. On the other hand, when given 25 sec or 40 sec, players are in less of ahurry toswitch. 4.2 Urgency Level and Discourse Context
The results on response delay sho wthat players do not al ways start the real-time picturegameassoonasthebarsstartflashing,especiallywhenplayersaregiven25sec or 40 sec. Of course there are individual differences: Some players wait longer, some players wait less time, and one does not even wait. The more interesting question, however,isifplayersdonotimmediatelystartthepicturegame,whatisthepurposeof delaying the switch to this real-time task? Are players delaying the switch just because they feel that they have time and thus do not need to rush, or because they want to interrupt at acertain point in the ongoing task? 84 players interrupt the ongoing task and switch to the real-time task. Because we do not find a statistically significant difference of response delay under the urgency levels of 25 sec and 40 sec, t(11) = 1.51, p = 0.16, we combine these two urgency levels in this analysis. 3 urgencylevels.Overallthepercentageofembeddedinterruptionsforthe10securgency level ( M = 76%) is significantly higher than for 25/40 sec ( M = 47%), t(11) = 4.46, p &lt; 0.001.Infact,allplayersexcept4Ahaveahigherpercentageofembeddedinterruptions for 10 sec than for 25/40 sec. The percentage of interruptions at the end of a game for 10 sec ( M = 3%) is significantly lower than for 25/40 sec ( M = 20%), t(11) = 4.16, p &lt; 0.001. In fact, all players have a higher or equal percentage of interruptions at the end ofagamefor25/40secthanfor10sec.Theseresultssuggestananswertoourquestion about why players delay switching to the ongoing task. When players are given more time, that is, when the picture game is less urgent, players often utilize the additional time to delay the switch to the real-time task such that this switch would happen at the end ofa game or a card rather than in the middle of acard discussion. 4.3 Response Delay and Discourse Context
InSection4.2,wefindthatplayerstendtointerruptmoreoftenattheendofacardora poker game when they are given more time. However, players do not necessarily wait for more time when the picture game is less urgent. For example, player 5A seems to always start a picture game as soon as the bars start flashing, regardless of how urgent the picture game is. To better understand the rationale of delaying a prompted picture game, we next examine the correlation between response delay and the discourse context where the switch tothe real-time task occurs.
 players intend to start the picture game as soon as possible; we also assume that if the responsedelayislongerthansomeothertime,say t 2 ,playersintendtodelaythepicture game. For the window between t 1 and t 2 , it is unclear as to what players are doing due toindividual differences.Inthisarticle,weset t 1 to3secondsand t listening to the dialogues, it seems to us that when players interrupt within 3 seconds, they intend to do so right away, and when players wait at least 6 seconds, they do not.
These two time points are also consistent with human performance in task switching (Meiran,Chorev,andSapir2000).Thisgivesus77casesofinterruptionswitharesponse delay of less than 3 seconds, 88 cases greater than 6 seconds, and 43 cases in between. We have also examined other time thresholds, and findsimilar results.
 regarding the response delay. Because 5A always starts a picture game as soon as the bars start flashing, we do not have data for when he waits for more than 6 seconds. We thus exclude 5A from this analysis. The percentage of embedded interruptions for less than 3 sec response delay ( M = 71%) is significantly higher than for more than 6 sec responsedelay( M = 41%),t(10)=3.54,p=0.002.Thepercentageofinterruptionsatthe end of a game for less than 3 sec response delay ( M = 5%) is significantly lower than for more than 6 sec response delay ( M = 23%), t(11) = 3.49, p = 0.003. Compared with immediately starting a picture game, if players wait for a certain amount of time, they are more likely to suspend the ongoing task at the end of a poker game or a card than tosuspend the ongoing task in the middle ofa card discussion.
 86 4.4 Discussion
In our research, we define task-level discourse contexts, and investigate the discourse contexts where task interruptions of different urgency occur. We first examine the responsedelay,andfindthatplayersdonotalwaysinterruptthepokerplayingassoon as a picture game starts flashing, but instead they tend to wait longer for less urgent picturegames.Wethenexaminethecorrelationbetweendiscoursecontextandurgency level,andfindthatwhengivenmoretimeplayerstendtoswitchmoreoftentoapicture gameattheendofa(poker)gameoracard.Wefinallyexaminethecorrelationbetween discourse context and response delay, and find that if players wait for at least a certain amountoftime,theytendtoswitchmoreoftentoapicturegameattheendofa(poker) game or a card. These results suggest that players prefer to interrupt at the end of a gameoracardratherthaninterruptinthemiddleofacarddiscussion.Infact,afterthe practicesession,playerpairR3explicitlydecidedthattheyshouldtrytodelayapicture gameuntiltheendofapokergame.Inotherwork,Shyrokov,Kun,andHeeman(2007) examined the correlation between task interruption and conversational-level discourse context. Similarly, they found that conversants try to avoid interrupting adjacency pairs.
 switch tasks. We observed that sometimes players had time but still chose to interrupt insideacarddiscussion;orthatsometimesplayerswaitedpastacardsegmentandthen interrupted inside the ne wcard discussion. One guess is that at certain points in a card discussion, players have less cognitive load and so switch tasks. Another guess is that at certain points during poker playing, players get frustrated and decide to switch to a pending picture game. However, these analyses are beyond the scope of this article. 5. Signaling Task Interruption
Inthissection,weexaminehowplayerssignalthattheyareswitchingfromtheongoing tasktoareal-timetask.InSection2.3,wediscussedhowpeopleusecertaincues,suchas discourse markers and prosody, to signal discourse structure in single-tasking speech.
Thissuggeststhatpeoplemightalsosignaltaskinterruptionsinmulti-taskingdialogues and might even use similar cues. 5.1 Discourse Markers
First, we examine whether discourse markers co-occur with task interruptions. For this exploratory study, we treat any word that can serve as a discourse maker and that precedes a task interruption as a discourse marker, even though their roles in dialogue are sometimes ambiguous, such as and , now ,and okay (Gravano et al. 2007). We also includethefillers uh and um ,whichwereshowntosometimeshaveadiscoursefunction (Swerts1998).
 accountsfor36.5%.WelistthesediscoursemarkersinTable2groupedbytheirdiscourse function.Fortheiruseintaskinterruptions,column2showsthenumberofoccurrences of each group and column 3 shows the number of players who use them. The first group consists of oh and wait , which are usually used to signal a sudden or urgent event (Heritage 1984; Schiffrin 1987; Byron and Heeman 1997). This group has the mostfrequentlyuttereddiscoursemarkersintaskinterruptionwith27occurrences,and seven players utter them at least once. The second group consists of the fillers uh and um . This group is uttered by the most players with 23 occurrences. The third group consists of now , okay ,and alright , which can signal the end of the current topic and moving on to the next (Hirschberg and Litman 1987; Gravano et al. 2007). This group has 13 occurrences by eight players. The word and is uttered 10 times by five players.
Finally there is one occurrence of so ,oneof but ,andoneof hey . Interestingly, there are also two cases of calling the name of the other player, such as Gary do you have a blue triangle? because this group co-occurs most frequently with task interruptions, and because task interruptionsinvolvestartinganewandurgenttask,whichfitstheirdiscoursefunction. Verifying whether oh and wait are being used as discourse markers is straightforward.
We manually verified that all 27 instances of oh and wait that initiated a picture game arediscourse markers,andwealsoidentifiedallusagesof oh and wait inpokerplaying that are discourse markers. For each player, we calculated the rate of task interruptions initiated with an oh or wait , and compared it with two baselines: (1) the rate of non-trivial utterances in poker playing that are initiated with an oh or wait , and (2) the rate of card segments that are initiated with an oh or wait . The rate of task interruptions initiatedwithan oh or wait ( M = 12 . 7%)issignificantlyhigherthantherateofutterances initiatedwithan oh or wait ( M = 5 . 7%),t(11)=1.80,p=0.05.Itisalsohigherthantherate ofcardsegmentsinitiatedwithan oh or wait ( M = 7 . 1%),whichismarginallysignificant t(11) = 1.66, p = 0.06. These results suggest that the discourse markers oh and wait are sometimes used in signaling task interruptions. 5.2 Prosody
Tounderstandtheprosodiccuesininitiatingatopic,traditionallyresearcherscompared theprosodyofthefirstutteranceineachtopicwithotherutterances(e.g.,Nakajimaand
Allen 1993; Hirschberg and Nakatani 1996). For example, they calculated the average pitch in the utterance or the first part of the utterance that initiates a topic and found that it is higher than the other utterances in the topic. This approach encounters two problems here. First, the words in an utterance might affect the prosody. For example, thedurationandenergyof bat areusuallylargerthan bit .Thusalargeamountofdataare required to balance out these differences. Second, in the MTD corpus, players typically switch to a picture game by using a yes X  X o question, such as do you have a blue circle , whereasmostnon-trivialutterancesintheongoingtaskarestatementsorproposals.As questionshaveverydifferentprosodythanstatementsorproposals,adirectcomparison isfurther biased.
 initiated by do you have ... with optional discourse markers at the beginning. While in 88 thepokergame,playersuse do you have ... 115timestoaskwhethertheotherhascertain cards, such as do you have a queen? This abundance of utterances with identical initial-wording and speech-act-type inspired us to compare the prosody of the phrase do you have in switching to a picture game and during poker-playing. prosody of different words or of different types of utterances.
 of each case of do you have . We aggregate on each individual player and calculate the averagevalues.Figure6showstheaveragepitchofthephrase do you have intaskinter-ruption(INT)andpoker-playing(PKR)ofeachplayer,withtheactualvaluesdisplayed in the columns below. For task interruption, players X  average pitch is significantly higher than poker-playing, t(11) = 4.82, p &lt; 0.001. In fact, for each of the 12 players, the average pitch of do you have in task interruption is higher than in poker-playing. These results sho wa strong correlation bet ween task interruption and higher pitch. task interruption and poker-playing. However, we do not find a statistically significant difference in energy, t(11)= 1.53, p =0.16, or in duration t(11) =1.67, p = 0.12. 5.3 Intensity of Cues
Tobetterunderstandhowpitchisusedinsignalingtaskinterruptions,wenextexamine whether it correlates with the discourse context of interruptions, namely, interrupting at the end of a game, at the end of a card discussion, or embedded in a card discussion.
Becausetherearerelativelyfewerdataforinterruptingattheendofagame,wecombine interruptions at the end of agame and at the end ofa card discussion (G/C). embedded in a card discussion, at the end of a game or card discussion, and during poker-playing(i.e.,notaskswitchinginvolved),withtheactualvaluesdisplayedinthe columnsbelow.Thedifferencebetweenthesethreeconditionsisstatisticallysignificant,
F (2,11) = 21 . 60, p &lt; 0.001. Interruptions embedded in a card discussion has a signifi-cantly higher pitch than at the end of a game or card discussion, t(11) = 5.74, p &lt; 0.001, which in turn has a significantly higher pitch than during poker-playing, t(11) = 3.56, p = 0.002. These results suggest a statistical correlation between discourse context of task interruption and intensity of cues. 5 5.4 Discussion
We find that discourse markers are sometimes used to mark task interruptions, but for less than 40%. For the discourse markers oh and wait , we find a statistical correlation between their use and task interruptions. This result should not be surprising as task interruptionsinvolveasuddenchangeoftheconversationtopic,andpreviousresearch found that conversants use oh to mark a change of state in orientation or awareness. wait is used to mark a discontinuity in the ongoing topic, which is also required by task switching. Thus, it seems natural for people to use these discourse markers to signal switching to a real-time task. The use of the other discourse markers is less clear, but we have some speculations about their use with task interruptions. The discourse markers now , okay ,and alright tend to start a ne wtopic in single-tasking speech, which is consistent with initiating a task interruption. The fillers um and uh might be used to hold the floor giving the player who initiates the picture game extra time to mentally switch tasks; or they might be used to help mark the switch itself, similar to how they sometimes mark topic shifts (Swerts 1998). Calling the name of the other player or saying hey might be used toalert the other player of the task switching. outtobethemostprominentfeature.Notonlydowefindastrongcorrelationbetween higher pitch and task interruption, but we also find a correlation between pitch and the discourse context of the interruption. Switching embedded in a card segment has a higher pitch than switching at the end of a card segment or a game, which in turn has a higher pitch than non-switching (poker-playing). We speculate that pitch, as well as discourse markers and calling the name of the other player, is used to disengage the hearer from the ongoing task, signaling an unexpected event (see Section 8.1 for more discussion). 90 energy and task interruption, or between speaking rate and task interruption. It would be interesting to understand why pitch is used yet not other prosodic cues. In another study, in which we examined initiative conflicts, where both conversants speak at the same time trying to steer the conversation in different directions, we found that energy is the dominant device for resolving who wins the conflict (Yang and Heeman 2010).
Probablyconversantsusedifferentprosodicdevices,suchaspitch,energy,andspeaking rate, for different conversational functions. Further research is needed to explore this hypothesis.
 real-time task. In our task setup, besides the urgency level, which is the time (10 sec, 25 sec, or 40 sec) initially given to the players to complete a picture game, a more important factor that defines urgency is the remaining time, which is the time left to complete a picture game when players switch to it. Intuitively, when players start a picture game, the more time that is remaining to finish the task, the less hurried they need to be. However, we were not able to find a statistical correlation between urgencylevelandpitch,orbetweenremainingtimeandpitch.Norwasthereastatistical correlation with volume or speaking rate. Our explanation is that our task setup might not be complicated enough. It only takes a couple utterances to finish a picture game, and players were able to start the picture task far enough ahead that remaining time was rarely afactor. 6. Context Restoration
On completing an interrupting picture game, players resume poker playing. Due to our task setup, players tend to mutually know when a picture game ends. Thus we do not examine ho wplayers signal task resumption, but instead we focus on ho wplayers restorethecontextoftheongoingtask,thatis,howplayersre-establishtheconversation onpokerplayingafterbeinginterruptedbyapicturegame.Weusethesamedistinction of discourse contexts as we use in examining task interruptions: (1) restoration in the middle of a card discussion, which corresponds to the players interrupting embedded inacarddiscussion;(2)restorationatthebeginningofacard,whichcorrespondstothe players interrupting after a card discussion, and then resuming to poker playing with one of the players having a ne wcard; and (3) restoration at the beginning of a game, which corresponds to the players interrupting at the end of a poker game, and then resuming topoker playing with the beginning of another poker game. 6.1 Restoration in the Middle of a Card Discussion
Westartbyinvestigatingcontextrestorationinthemiddleofacarddiscussion,because thesehavethemostcontext.Weexploredthecorpustolookforsignsofcontextrestora-tionbehaviorafteranembeddedinterruption,byexamininginformationalredundancy (Walker 1996) of the first non-trivial utterance after completing apicture game. pleted in a couple turns, we find that after completing an embedded picture game playersusuallycontinuepokerplayingwithoutaclearindicationofcontextrestoration.
AsshowninExample(1),Bsuspendshisownquestioninpokerplayingandinterrupts with a picture game. After the completion of the picture game, A gives the answer to
B X  X  original question right away: The dialogue on poker playing continues as if the interruption never happened. Example 1 (Continuation) are informationally redundant (Walker 1996), as listed here.

Utterance Restatement: The first non-trivial utterance after the interruption is a re-
Card Review: Theplayerre-communicates whatcardsareinhand,asshowninExam-92 self-repetitions, 4 other-repetitions, and 10 clarifications) and 9 cases of card review. Figure 8 shows the rate ofeach category, aggregated on each pair of players (R1-R6). ruptions that are followed by an utterance restatement divided by the total number of embedded interruptions, ranges from 22% to 37% among the player pairs. To make sense of these numbers, we annotate each non-trivial utterance in the poker games to mark whether it is a restatement of the immediate previous one within a card segment, andcalculatethebaselineastherateofperformingutterancerestatementwithoutbeing interruptedbyapicturegame.FromFigure8,weseethatforallsixpairsofplayers,the rateofutterancerestatementafteranembeddedinterruptionishigherthanthebaseline, and it is statistically significant, t(5) = 13.52, p &lt; 0.001. This suggests that utterance restatement after an embedded interruption is not a random behavior, but it is part of the resumption tothe ongoing task.
 player pairs. The pairs R1, R4, and R6 never performed it in resuming poker playing, and R2 only performed it once. The pairs with the highest rates are R5 and R3, with 26% (6/23) and 17% (2/12), respectively. Interestingly, these two pairs have the lowest rates of performing utterance restatement, with 22% and 27%, respectively. This might suggest that card revie wmight be complementary to utterance restatement for context restoration, although more data are needed tovalidate thishypothesis. 6.2 Restoration at the Beginning of a Card Segment
For restoration at the beginning of a card segment, we find that players mostly just continue poker playing without a clear indication of being affected by the interruption, asillustratedbycardsegmentsb10andb14inFigure2.Someplayersmightperforman act similar to card review, in that they communicate all of the cards in his or her hand.
However, the version here differs as it includes the new card just picked up, which has not been communicated before. Thuswe refer tothis act as card review + new card . eachpair,respectively.Thebaselineistherateofperformingthisactionatthebeginning of a card segment (excluding the first card segment of a poker game) not following an interruption of a picture game. Player pairs R1 and R5 never performed this action at all. R3 and R4 performed this action only once after interruptions at the end of a card discussion and have a very lo woverall rate of performing this action during poker playing. However, for player pairs that have a high overall rate of using this action (R2 and R6), they have an even higher rate of using this action after an interruption. For R6 inparticular,therateofperformingthisactionafteraninterruptionattheendofacard segment is significantly higher than the baseline,  X  2 (1) = 6 . 81, p = 0.01. This suggests that if players use card review + new card in conversation, they tend to use it more often after an interruption at the end ofa card segment probably for context restoration. 6.3 Restoration at the Beginning of a Game
For interruptions at the beginning of a poker game, we do not find any behavior associated with context restoration. This is not surprising because there is really no context that needs tobe carried over tothe next game. 6.4 Discussion
In this section, we examine the behavior of context restoration when players complete aninterruptingpicturegameandresumepokerplaying.Probablyduetothesimplicity of the picture game, we find that players mostly just have a smooth continuation as if the interruption did not happen. However, we do find that players sometimes make two types of context restorations X  X tterance restatements and card reviews X  X nd we find that players have a higher rate of performing these when returning to the ongoing task.
 task, while utterance restatement is refreshing the last utterance. Both types of restora-tion behavior are similar to the informationally redundant units that Walker (1996) studied. In Walker X  X  work, she posited a limited memory model in which information will eventually fade away. This might be the explanation here as well. On resuming to a task that was discussed several utterances ago, the conversant might feel that some of the critical information might have been forgotten, and so might use card revie wto refreshtheinformation.Conversely,theconversantmightfeelthatjustthelastutterance needstoberefreshed.Dependingonwhetheritisthesameconversantwhoresumesthe ongoing task and who says the last utterance before the interruption, it takes the form explanation for card revie wand utterance restatement is consistent with the results of our post-experiment survey, in which some players reported that they had difficulties 94 remembering the context of poker playing when they were interrupted by a picture game.
 more frequently when returning to an interrupted task (Gillie and Broadbent 1989;
Villing2010),andmightuseevenhigher-levelsummarizationbeyondutterancerestate-ment and information review, such as reviewing the agreements or decisions that have been made so far in the conversation. 7. Recognizing Task Interruption: A Machine Learning Approach
Recognizing task switching is important for a speech interface; for example, the speech interface can accordingly switch the language model when it detects that the user has switchedtoanothertask.Inthissection,wedescribetwomachinelearningexperiments ofrecognizingtaskinterruptionsusingprosody,discoursecontext,anddiscoursemark-ers. The purpose of the first experiment is to understand ho wthese features contribute to the automatic identification of task interruptions; here, we only include utterances that start with do you have for better extracting prosodic features. The purpose of the second experiment is to investigate how well interruptions can be identified without using lexical features, as could be used in an actual system. 7.1 Recognizing Task Interruptions on DoYouHave Utterances
In the previous sections, we examined players X  behavior of task switching in the MTD corpus. We found that players favor certain discourse contexts in the ongoing task for taskinterruptions,andthattheysignaltaskinterruptionswithprosodiccuesandsome-timeswithcertaindiscoursemarkers( oh and wait ).Wethusconductamachinelearning experiment to understand ho wthese features contribute to the automatic identification of task interruptions. In this experiment, we focus on the 285 cases of do you have , 170 fortaskinterruptionand115forpokerplaying.AswearguedinSection5.2,thisallows ustobetter extract andunderstand prosodic features oftask interruptions. do you have is the end of a poker game, the end of a card segment, or in the middle of a card segment; 2) oh/wait: whether the discourse marker oh / wait precedes do you have ; 3)normalizedpitch:thepitchof do you have dividedbytheaveragepitchofthespeaker during the dialogue. We refer to these features as the core feature set, which we found tobecorrelatedwithtaskinterruptions(Section4and5).Wealsoinclude thefollowing additional features: 4) discourse markers: whether a discourse marker precedes do you have ; 5) normalized energy: the energy of do you have divided by the average energy of the speaker during the dialogue; and 6) duration: the duration of do you have . playing (Quinlan 1986). C4.5 builds a decision tree by using a top X  X own, greedy pro-cedure to (locally) optimize mutual information, and prunes the tree with a confidence level (of 25%). We use C4.5 because its output is interpretable and we have found its performance comparable toother discriminative classifiers for this task. ing, which we refer to as general-leave-one-out, speaker-leave-one-out, and leave-one-speaker-out. In the general leave-one-out method, each data point is tested with the decision tree trained on all other data points. This approach allows decision trees to be built with as much training data as possible, which in our case is 284 data points.
In the speaker-leave-one-out method, each data point is tested with the decision tree trained on the other data points of the same player. This approach is a speaker-specific modelthatevaluatestheperformanceoftrainingadecisiontreeandtestingonthesame speaker. In the leave-one-speaker-out method, each player X  X  data are tested with the decision tree trained on the other 11 players. This approach is a speaker-independent model that evaluates the performance ofa learned decision tree on ane wspeaker. learning with the core feature set obtains an accuracy of 81.4% in recognizing whether a do you have initiates a task interruption or belongs to poker playing; and the recall, precision, and F-score for task interruption are 89.4%, 81.3%, and 85.2%, respectively.
For comparison, we use a naive baseline that assumes that all cases of do you have are taskinterruptions,whichhasanaccuracyof59.6%.Thusweachieve54.0%relativeerror reduction in comparison to the baseline. These results sho wthat our machine learning approach substantially improves the recognition oftask interruptions.
 namely, discourse markers, energy and duration, or all of them. This suggests that these features are not adding more information to this discrimination task, which is notsurprisingaswedidnotfindthemstronglycorrelatedwithtaskinterruptioninour corpus study.
 speaker-leave-one-out, and the leave-one-speaker-out, using the core feature set. 96
Overall, all the three reach an accuracy of about 80%, which is much higher than the baseline performance. The performance with the leave-one-speaker-out ( M = 79 . 2%), whichisaspeaker-independent model, isparticulary encouraging, because inbuilding a speech interface, it is not always possible to collect speaker-specific data. On the other hand, we see that the performance with the speaker-leave-one-out ( M = 78 . 3%) is slightly lower than the leave-one-speaker-out ( M = 79 . 2%). Although this could be interpreted as that interruption recognition is a speaker-independent task, we think that a more viable explanation is that for some players, we do not have enough data to build speaker-specific decision trees. The general-leave-one-out ( M = 81 . 8%), which uses the most data for training, out-performs the leave-one-speaker-out and the speaker-leave-one-out. In fact, the general-leave-one-out can also be viewed as a naive speaker-adaptive model by simply combining speaker-independent data and speaker-specificdatatogetherfortraining.Wespeculatethatmoreimprovementcanbe achieved by interpolating a speaker-independent model with a speaker-specific model, which we leave for future work.
 single tree from all 285 cases of do you have withthecorefeatureset,showninFigure9. otherwise it queries about oh / wait . If the utterance starts with a oh or wait ,itisfortask interruptions,otherwiseitqueriesaboutdiscoursecontext.Ifthediscoursecontextisat the end of a game or a card discussion, it is for task interruption, otherwise it queries pitch again. If pitch is lower than a threshold it is for poker playing, otherwise it is for task interruptions. The structure of the learned tree and its performance confirm that discourse context, the discourse markers oh and wait , and normalized pitch are useful features for recognizing task interruptions.
 7.2 Recognizing Task Interruptions on All Utterances
Thepreviousexperimenthelpedusdeterminewhichfeaturesareusefulforrecognizing task interruptions. However, the experiment was based only on utterances that start with do you have , yet not all task interruptions are initiated with do you have .We thus conduct a further machine learning experiment on recognizing task interruptions involving any utterances. We extend our feature set to help make up for not limiting ourselves to do you have utterances. We purposely do not use any lexical features of the current utterance so that our approach can be applied before speech recognition is performed.
 whether the previous utterance is the end of a poker game, the end of a card segment, orinthemiddleofacardsegment; 6 2)overlap:whethertheutteranceoverlapswiththe previous non-trivial utterances; 3) duration: the length in time of the utterance; 4) nor-malized pitch: the average normalized pitch of the first 100 msec/200 msec/500 msec and the whole utterance (four features); 5) normalized energy: the average normalized energyofthefirst100msec/200msec/500msecandthewholeutterance(fourfeatures); and 6) pitch range: the pitch range of the first 100 msec/200 msec/500 msec and the whole utterance (four features). In total we have 15 features.
 but more than 4,000 non-interrupting utterances. We thus perform down-sampling so that both classes have the same number of data points. In the first down-sampling, whichwerefertoas general down-sampling ,weuseall208casesoftaskinterruptions, and we randomly select 208 non-interrupting utterances. A concern with the general down-sampling is that 82% of the task interruptions are do you have questions, and do you have questions are only about 2.5% of the non-interrupting utterances. It is unclear whether a classifier trained from such a data set discriminates task interruptions or discriminates do you have utterances. Thus in the second down-sampling, which we refer to as DYH down-sampling ,weuseall208casesoftaskinterruptions,andwealso use all 105 cases of non-interrupting do you have utterances, then finally we randomly select 103 other non-interrupting utterances. The DYH down-sampling, however, still has imbalanced do you have utterances in the two classes. Thus we further introduce the Balanced-DYH down-sampling , in which we use all 105 do you have utterances in the poker playing and 38 other (i.e., non do you have ) utterances in task interrup-tions, and randomly select 105 do you have utterances from task interruptions and 38 other utterances from poker playing. We run the experiments with decision tree learning (C4.5) (Quinlan 1986) and support vector machine (SVM) (Chang and Lin 2001).
 down-sampling and general-leave-one-out is repeated 10 times, and then we calculate the average performance. Note that in our evaluation, the distribution of task inter-ruption(whichis50%)isdifferentfromthetruedistributioninthecorpus(whichisless than 5%). We adopt some metrics from medical diagnostic tests that do not involve which, in our case, is the recall of task interruptions. It measures the percentage of task interruptions that the classifier correctly identifies as such. Specificity is 98 defined as TrueNegative / ( TrueNegative + FalsePositive ), which, in our case, is the re-call of non-interruptions. It measures the percentage of non-interruptions that the classifier correctly identifies as such. These two metrics can then be combined using the likelihood ratio , which provides a direct estimate of how much a prediction will change the odds. The likelihood ratio for a positive result (LR+) is defined as
LR+ = sensitivity / (1  X  specificity ). It tells us ho wmuch the odds of a task interruption increase when the classifier predicts positive (task interruption). The likelihood ratio for a negative result (LR  X  ) is defined as LR  X  = specificity / (1 howmuchtheoddsofataskinterruptiondecreasewhentheclassifierpredictsnegative (non-interruption).
 sensitivity and specificity are both 50%, and LR+ and LR  X  down-sampling settings, SVM performs slightly better than C4.5, and both are much better than the baseline. The result for SVM with general down-sampling shows how well we can recognize task interruptions for our MTD domain, for which we achieve a sensitivity of 78 . 6% and a specificity of 76 . 9%. For the Balanced-DYH down-sampling, in which we have the same number of do you have utterances in both the classes, SVM cannot make use of the features that distinguish do you have from other utterances.
Hence, its result might be more indicative of performance in other domains, where task interruptions might not be marked by the same introductory words. Even here, weobtainasensitivityof75 . 3%,aspecificityof75 . 8%,and3 . 11inLR+and3 . 07inLR which ismore than a50% relative error reduction over the baseline.
 task interruptions. Because the features used in our machine learning experiments do not require the lexical information of the current utterance, we can make use of the identification of task interruptions to benefit automatic speech recognition (ASR). For example, we can build two language models, one for the ongoing task, and one for the real-timetask.Foreachutterance,wecancalculatethelikelihoodoftheutterancebeing a task interruption, using the decision tree classifier or the SVM classifier. We can then use this likelihood to dynamically interpolate the two language models in the speech decoding. This should be able to improve the accuracy of ASR, which we leave for future work. 8. Conclusion
In this article we describe a series of empirical studies of human X  X uman multi-tasking dialogues, where people perform multiple verbal tasks overlapped in time. We first examined the discourse context of task interruptions, that is, where conversants sus-pend the ongoing task and switch to a real-time task. Our analysis shows that people are more likely to wait until the end of a card or game segment for task switching.
We then examined the cues that people use to signal task interruptions. We find that task interruptions correlate with certain discourse markers and prosodic variations.
More interestingly, the intensity of pitch depends on the discourse context of the task interruption. We next conducted an exploratory study on context restoration in task resumption.Wefindthatwhenreturningtoaninterruptedtask,conversantssometimes re-synchronize the interrupted ongoing conversation by either restating a previous utterance or summarizing the critical information. Finally, our machine learning ex-periments sho wthat discourse context, pitch, and the discourse markers oh and wait are useful featurestoreliably recognize taskinterruptions; and, more importantly, with non-lexicalfeaturesonecanimprovetheperformanceofrecognizingtaskinterruptions with more than a50% relative error reduction over the baseline. 8.1 Disruptiveness of Task Interruption
In our study on multi-tasking dialogues, we distinguish three types of discourse con-texts where players suspend the poker player and switch to a picture game. We claim thatthesediscoursecontextsdifferintermsofplayers X  X ngagementandmemoryloadin theongoingtask.First,wefeelthatplayersaremoreengagedintheongoingtaskduring card discussion. In the middle of a card discussion, players actively share information, explore different (potential) poker hands, and decide what to discard if no poker hand is found. Second, we feel that players also have a higher memory load in the middle of a card discussion. Across poker games, players do not have to remember anything; acrosscardsegments,playersneedtorememberwhatcardseachotherhas;whileinside of a card discussion, players need to also remember what card is being discussed, and ho wfar theyare into deciding which card to discard.
 foundinSection5,whenplayersinterruptinthemiddleofacarddiscussion,theyusea higher pitch than in the case when they interrupt at the end of a game or a card, which is also marked with a higher pitch than non-task-switching (during poker playing).
According to Miyata and Norman (1986), a more intrusive signal is needed to attract the attention of people heavily engaged in an ongoing task. Sussman, Winkler, and
Schr  X  oger(2003)foundthathigherpitchcanserveasamoreintrusivesignal.Thuswhen interrupting in the middle of a card discussion, the speaker uses higher pitch probably because the hearer is more engaged in the ongoing task.
 wefoundinSection6,afterapicturegamethatisattheendofagame,playerssmoothly start a ne wpoker game as if nothing happened; after a picture game that is at the end of a card segment, players might sometimes use information summary to remind each other of what cards they have in hand; and after a picture game that is in the middle of a card segment, players might even repeat or clarify the previous utterance that has been said before the interruption. These observations are consistent with the memory load of discourse contexts. If players are interrupted in a discourse context where the memory load is high, because of the limited working memory, players would need to spend extra effort torecover the memory after completing the interruptions. of task interruptions. According to Miyata and Norman (1986), interruptions where 100 people are deeply engaged in the ongoing task, or where people have a high memory load, should be disruptive. Thus interruptions at the end of a card game are the least disruptive, with those at the end of a card discussion being more disruptive, and those embedded inside of a card discussion being the most disruptive. A more disruptive interruptiontendstohaveahighercosttotheongoingtask.Thedisruptivenessofinter-ruptions thus explains players X  behavior of delaying the picture game. For task inter-ruptions, players do not always switch to a real-time task when it is prompted, but instead they take into account the discourse context of the ongoing task. They strive to switchtoapicturegameattheendofa(poker)gameoracardwhenpossible.According to Clark and Wilkes-Gibbs (1986), players would try to minimize their collaborative effort in dialogue. The reason that players try to avoid interrupting in the middle of a carddiscussionprobablyisbecausesuchinterruptionshaveahighercosttotheongoing task, i.e. these interruptions are more disruptive. Delaying the switch to the real-time task isthusused asatool toreduce the disruptiveness of the switch.
 where the cost of interruption is low, but if they interrupt in a more intensive context theyuse stronger cues tomark the more disruptive interruption. 8.2 Implication for Speech Interface Design
By understanding people X  X  conventions in task interruptions and context restoration, we can implement these conventions into a speech interface to allow natural and smoothtaskswitchinginhuman-computerdialogue.Basedonourfindings,wepropose the following principles for building a speech interface that supports multi-tasking dialogue: 8.3 Future Work
There are obviously a lot of open questions regarding multi-tasking dialogue that are notsolvedinthisarticle.Inthisresearch,weonlyexaminedadomainwhereanongoing task, rich in context, is interrupted by real-time tasks, which are short and simple in nature. Psychological research showed that the complexity of the real-time task and its similarity to the ongoing task play an important role in the disruptiveness of interrup-tions(GillieandBroadbent1989);thuswecanvarythesefactorsinfutureresearch.First, we can vary the complexity of the real-time tasks; for example, for some interruptions, theplayerneedstofindoutwhethertheotherplayerhasacombinationofpictures,such as a black square but not a white triangle (  X  X  ). This will allow us to examine the correlation between the length of interruptions andcontext restoration. Second, we can use real-time tasks that are less structured, so that people do not mutually kno w when itends.Thiswillallowustoexaminewhetherandhowpeoplesignaltaskresumptions.
Third,wecanintroduceambiguitybetweentheongoingtaskandthereal-timetask:for example, to put the card suits (  X  X  X  X  X  X  ) into the picture game, where an utterance such as do you have a heart? can belong to either task. This will allow us to see a wider range of task switching behavior.
 would be affected by a manual-visual task, such as driving. This is an important ques-tion, because for hands-busy, eyes-busy situations such as driving, speech interfaces may provide a human X  X omputer interaction modality that interferes the least with the execution of the manual X  X isual task (Weng et al. 2006; Villing et al. 2008). We expect that the presence of the manual X  X isual task will even further necessitate a good under-standingofthenaturalandefficienthumanconventionsformanagingmulti-taskingso as not to adversely affect the manual X  X isual task.
 human X  X uman dialogue X  X hat is, people might change their behavior when talking to a computer (Doran et al. 2001). It will thus be useful to build an actual speech interface for multi-tasking dialogue, or perhaps first simulate such a system with Wizard of Oz experiments, and to examine whether following the principles that we derived from human X  X uman dialogue does lead to improvements.
 Acknowledgments References 102
