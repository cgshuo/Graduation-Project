 Social microblogs such as Twitter and Weibo are experiencing an explosive growth with billions of global users sharing their daily ob-servations and thoughts. Beyond public interests (e.g., sports, mu-sic), microblogs can provide highly detailed information for those interested in public health, homeland security, and fi nancial anal-ysis. However, the language used in Twitter is heavily informal, ungrammatical, and dynamic. Existing data mining algorithms re-quire extensive manually labeling to build and maintain a supervised system. This paper presents STED, a semi-supervised system that helps users to automatically detect and interactively visualize events of a targeted type from twitter, such as crimes, civil unrests, and disease outbreaks. Our model fi rst applies transfer learning and label propagation to automatically generate labeled data, then learns a cus-tomized text classi fi er based on mini-clustering, and fi nally applies fast spatial scan statistics to estimate the locations of events. We demonstrate STED X  X  usage and bene fi ts using twitter data collected from Latin America countries, and show how our system helps to detect and track example events such as civil unrests and crimes. H.3.3 [ INFORMATION STORAGE AND RETRIEVAL ]: Infor-mation Search and Retrieval Algorithms Event Detection, Text Mining
Microblogs (e.g., Twitter and Weibo) have emerged as a disruptive platform for people to share their daily activities and sentiments on ongoing events. The rich up-to-date sensing information allows dis-covering and tracking important events even earlier than news, with important applications such as public health and emergency manage-ment. Although identifying events from newspaper reports has been well studied, analyzing messages in Twitter requires more sophisti-cated techniques. Twitter messages are irregular, contain misspelled or non-standard acronyms, and are written in informal style. Ad-ditionally, tweets are fi lled with trivial events discussing daily life. Twitter X  X  noisy nature challenges traditional text-based event detec-tion methods and therefore speci fi cally designed event detection ap-proaches are needed for Twitter text analysis.

Most previous work on Twitter event detection has focused on general and large-scale (breaking news) events, such as the Virginia Tech shooting and the Southern Califorinia wild fi res. Unsupervised learning techniques, such as clustering, topic modeling, and burst de-tection, are mainly utilized. However, they have limited capabilities to detect small-scale events, such as city-level or even street-level protests or strikes. Recently, new attention has been paid to event detection of a targeted topic (e.g., civil unrests, disease outbreaks, or crimes). Supervised learning techniques are primarily applied, such as support vector machines and random forest classi fi ers. Although this work can detect small-scale events of the targeted topic, the re-quirements of expensive manual data labeling limits its ef fi ciency and scalability. How to determine whether a tweet is interest-related or not is far more than simple keyword fi ltering. For example, if tweets related to shooting crimes are required, feedback from Twit-ter for the query word  X  X hooting X  are motley: tweets like  X 2 shot to death, 1 wounded: A shooting erupted at Mexico City airport X  are indeed related to shooting crime, but tweets like  X  X hooting a music video X  in fact have nothing to do with gun fi re.

In this demo, we propose a novel approach, semi-supervised targeted-interest event detection (STED), which takes users X  speci fi c interests as input, retrieves related tweets and summarizes events X  spatial and temporal features into visualization results. The major contributions are as follows:
As shown in Figure 1, the architecture of STED can be divided into these parts. Using the Extracting and Label-Generating mod-ules, we transfer labels from news to Twitter to generate initial label data. Module Label Propagating utilizes Twitter social features to obtain extended label data. Graph-Partition module clusters initial single tweets into mini-tweet-cluster, and then training module build a Support Vector Machine(SVM) text classi fi er to identify targeted topic related tweets. Finally, Spatial Scan and Location Propagating modules further group target topic related tweets into speci fi cevents according to location.
In this step, we fi rst automatically transfer labels from news de-scriptions to Tweets and further expand the initial label data by uti-lizing Twitter social ties like Retweet(RT) , Hashtag(#) ,and Mention-s(@) .

Term Extracting and Label Generating: We fi rst collect domain speci fi c news descriptions, such as news about crime, from public media. Though news reports are quite different from tweets in struc-ture and expression style, elements that can specify an event remain the same: Named Entity and Action Word .ByusingNLTK 1 ,we extract Named Entity(noun) and Action Words(verb) from news de-scription as candidate query word set for tweets. Given a query set as input, label generating module investigates Twitter data and selects tweets containing at least one Named Entity and one Action Word as positive label data.

Label Propagating: Social-ties terms appear between tweets in the form of Mentions(@) , Retweets(RT) ,and Hashtag(#) . Tweet-s sharing common terms are more likely to discuss the same topic. We use social-ties terms to expand initial labeled dataset L obtained. http://nltk.org/ First, we identify social-ties terms from labeled tweets, build Term-Tweet heterogeneous network S 1 , and remove less popular terms. As shown in Figure 2(a), node degrees are approximately distributed in power law where most tweets are connected to few terms with high degree. These terms are expected to be more related to the event, while those low degree terms on the border are trivial. Then, we use the remaining popular terms as query to retrieve tweets, build Term-Tweet heterogeneous network S 2 ,and fi lter away terms with low a-bility to denote a speci fi c event. Figure 2(b) illustrates an example of S 2 , a Hashtag-Tweet heterogeneous network, where the core ter-m of the central cluster is hashtag  X #mexico X , surrounded with more newly found tweets (orange nodes) than initial labeled tweets (blue nodes). These terms should be fi ltered away by our system, since they are popular but shared by too many topics to represent speci fi c interests. Finally, we build Term-Tweet network with fi ltered term set connected to new found label tweets S 3 , as shown in Figure 2(c). Iterate process above, until no new tweet satisfying the condition-s can be found. Through Label Propagating module, we obtain an extended label dataset for further processing.
In this part, we fi rst apply graph partitioning methods [5] to ob-tain event-related words groups and generate tweet mini-clusters, and then use support vector machine for text classi fi cation.
Graph Partitioning: Given word w ,we fi rst build its wavelet signal represented by the following sequence. where f w ( T i ) is the TF-IDF score of word w during the period T this paper, to capture daily event emergence, we set duration of T be one hour and number of segment n to be 24. Then, we compute the auto correlation A w for each word w and fi lter away trivial word-s(appearing evenly day by day). From above, we get subset  X  of rare and note worthy words. Next, we calculate cross-correlation X each word-pair in  X  and construct a correlation matrix  X  containing all word pairs. This correlation matrix  X  can be viewed as a graph and related-word clustering becomes a graph partition problem: We apply graph partitioning [4] on correlation matrix  X  to obtain sub-graphs that words within one subgraph are highly similar in form of high cross correlation, while words in different subgraphs have low cross correlation. Finally, tweet clusters are generated by obtained (a) Term-Tweet Heterogeneous Network of
Label Tweets S 1 . word groups: tweet containing at least two items of word group G can be considered as an item of tweet cluster C i .

Classi fi er Training: The most important part for classi fi er train-ing is feature selection. Words appear less than threshold  X  are fi rst fi ltered out. Next, we calculate TF-IDF scores for words and fi lter out trivial words such as  X  X eople X ,  X  X ove X , which appear more fre-quently in total Twitter space than labelled tweets space. Besides, to avoid over fi tting problem, most words from the Named Entity set E should be removed, since they enjoy high TF-IDF scores and will potentially be assigned heavy weights in the SVM classi fi er, but only represent one speci fi cevent.
 Figure 3: Example of Tweet Location Clusters. Red nodes denote the highest density of tweets of locations.
To estimate event locations, we fi rst identify spatial clusters using fast spatial scan methods [3] However, only 2% of tweets contain such geographic information. To make best use of the minority of tweets with geo-labels as well as the majority without labels, we further propagate geo-labels within each cluster to amplify spatial signal capabilities.

Spatial Scan: Geo-locations of tweets about a certain event are likely around the event X  X  occurring location. We apply spatial scan statistics to detect signi fi cant spatial clusters, as shown in Figure 3. Speci fi cally, we aggregate the count of event related tweets in city level and de fi ne the base of each city as the total count of the original tweets. Then we apply fast subset scan [3] to identify a set of H candidate clusters with the largest Kulldorff X  X  statistics [2], which is de fi ned as where C a and B a refer to the total count and base in the country, respectively; and C r and B r refer to the count and base in the spatial region r , which is a set of neighbor cities. The empirical p-value of each candidate cluster is estimated by random permutation testing, and the clusters with empirical p-values smaller than a threshold  X  (e.g.  X  = 0 . 05), are returned as signi fi cant clusters. The parameter H is usually set greater than the maximum number of potential clusters that may exist, and the insigni fi cant clusters can be fi ltered out later by randomization testing.

Location Label Propagating: Within each cluster, we further la-bel tweets that lack geo information using social ties. Tweets contain common terms such as hashtag and mention are more likely to occur in the same location. We fi rst compute a score  X  ij = m ij with geo-labels to denote the relativity of term i and location j ,where m ij is number of tweets contain term i as well as location j ,and M is the count of tweets contain term i .
Then, using Equation 3, we estimate location l t of unlabelled tweet t , which contains a set  X  t of terms. We fi rst compute the relativity between tweet t and each location j from location set  X  ,andthen pick up the biggest value as this tweet X  X  estimated location.
We showcase STED system using Twitter data from Latin Amer-ica as the example application. The considered database is more than 400GB in size, from June, 2012 to Jan, 2013. With application to civil unrest event detection, STED achieved 72% in precision of and 74% in recall, with a lead time of 2.42 days ahead of traditional media (e.g., news sources). We implemented the STED interface in Python which provides users with the following capilities:
Figure 4 shows a screenshot of the STED interface. With STED, a user can search for events pertaining to their speci fi c interests and an-alyze their spatial and temporal features. A targeted-interest includes time, location, topic and keywords. Users are allowed to choose date and topic as well as typing in keywords, in the right part of inter-face. As an ongoing project, we have applied our method to detect interests of crime and unrest. As shown in the screenshot, the user-s X  interest is in detecting events about type  X  X ivil Unrest X  in country  X  X exico X  , with keyword  X  X rotest X  , from date  X 2012-07-06 X  to  X 2012-07-07 X  . After users click on the  X  X earch X  button, STED will return corresponding event clusters of targeted-interest, shown as balloons. By clicking on one of the balloons, users can fi nd detailed informa-tion of corresponding event from left part of the interface: tweets ranked by their relativity to users X  interests and word cloud event summary denoting terms X  relative importance. System feedback of given interest shown in the screenshot reveals that there was a march (Spanish word  X  X archa X  in word cloud) held by YoSoy132 to protest president election results, which is also reported by public media [1].
It is also possible to study targeted interested events spatially and temporally, by using the historical statistics analysis interface. Giv-en a city and historical period range, users can track interest-related event trend of this city. In the bottom of Figure 5, we show interest-related event summary of given city  X  X exico City X  , from historical date  X 2012,July X  to  X 2012,December X  . Users can also compare spa-tial features of interested event. In the upper part of Figure 5, we list top-10 cities in given country  X  X exico X  with restrict to historical event number. This work is supported by the Intelligence Advanced Research Projects Activity(IARPA) via Department of Interior National Busi-ness Center (DoI/NBC) contract number D12PC000337. US Gov-ernment is authorized to reproduce and distribute reprints for Gov-ernmental purposes notwithstanding any copyright annotation there-on. Disclaimer: The views and conclusions contained herein are those of the authors and should not be interpreted as necessarily rep-resenting the of fi cial policies or endorsements, either expressed or implied, of IARPA, DoI/NBC, or the US Government. [1] L. Diaz, G. Stargardter, I. Grillo, and P. Cooney. Protesters [2] M. Kulldorff. Spatial scan statistics: models, calculations, and [3] D. B. Neill. Fast subset scan for spatial pattern detection. Wiley [4] M. E. Newman. Fast algorithm for detecting community [5] J. Weng and B. Lee. Event detection in twitter. In ICWSM X 11 ,
