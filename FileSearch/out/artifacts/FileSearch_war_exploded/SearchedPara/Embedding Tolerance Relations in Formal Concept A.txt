 This paper shows how to embed a similarity relation between complex descriptions in concept lattices. We formalize sim-ilarity by a tolerance relation: objects are grouped within a same concept when having similar descriptions, extending the ability of FCA to deal with complex data. We propose two different approaches. A first classical manner defines a discretization procedure. A second way consists in repre-senting data by pattern structures, from which a pattern concept lattice can be constructed directly. In this case, considering a tolerance relation can be mathematically de-fined by a projection in a meet-semi-lattice. This allows to use concept lattices for their knowledge representation and reasoning abilities without transforming data. We show fi-nally that resulting lattices are useful for solving information fusion problems.
 I.2 [ Artificial Intelligence ]: Knowledge Representation Formalisms and Methods; I.5.3 [ Clustering ]: Similarity measures Theory, Management, Experimentation
In this paper, we are interested in analyzing complex real-world data. Data can be analyzed with knowledge discovery methods s.t. Formal Concept Analysis (FCA) [3], a mathe-matically well founded classification framework allowing to derive implicit relationships from a set of objects and their attributes. The main structure which is built is a concept lattice, that can be represented by a diagram where classes of objects and ordering relations between classes can be drawn and interpreted and used for knowledge management, data  X 
See [5] for an extended version and supplementary mate-rial. The last author was supported by the project of the Russian Foundation for Basic Research, grant no. 08-07-92497-NTsNIL a.
 mining, etc. To handle complex data with FCA one requires scaling (discretization), which transforms many-valued at-tributes to binary attributes. A scaling is a way of data interpretation, different scaling may result in different con-cept lattices.

We propose a classification approach based on FCA and an appropriate scaling that can be applied to real-world ob-jects described by numerical attributes and taking into ac-count similarity between attribute values. The mathemati-cal formalization of similarity relies on a tolerance relation which is reflexive and symmetric. A tolerance relation can be used for building tolerance classes of similar objects that are reused to properly define a scaling for initial numeri-cal data allowing FCA to be applied. Besides scaling, it is possible to directly process complex data using the so-called pattern structure approach. This extension of FCA is re-called here and applied to intervals. Contrasting the large body of work on discretization for numerical classification methods [8], this paper introduces and explains relation-ships between standard FCA, scaling, pattern structures, and similarity.

The paper is organized as follows. Section 2 presents pre-liminaries on FCA and scaling procedures. Section 3 intro-duces tolerance relations, the way how scales can be designed from numerical data, and how numerical concept lattices are built. Section 4 describes pattern structures in FCA and the use of tolerance relations in this framework. Section 5 describes a real-world experiment in agronomy, where the resulting lattice materializes information fusion and can be rather easily interpreted by agronomy experts.
 Table 1: Numerical data.
FCA starts with a formal context , which is a triple ( G, M, I ), where G denotes a set of objects, M a set of at-tributes, and I  X  G  X  M a binary relation between G and M . The statement ( g,m )  X  I is interpreted as  X  X he object g has attribute m  X  (Table 2). The two derivation operators (  X  define a Galois connection between the powersets (2 G ,  X  and (2 M ,  X  ). A = { m  X  M | X  g  X  A : gIm } ,for A  X  G , and B = { g  X  G | X  m  X  B : gIm } for B  X  M .For A  X  G , B  X  M ,apair( A, B ), such that A = B and B = A , is called a (formal) concept ,e.g. ( { g 3 ,g 4 ,g 5 } ,
Figure 1: Concept lattice associated with Table 2. ( A, B ), the set A is called the extent and the set B the intent of the concept ( A, B ). Concepts are partially or-dered by ( A 1 ,B 1 )  X  ( A 2 ,B 2 )  X  A 1  X  A 2 (  X  B 2  X  B ), e.g. the concept ( { g 3 } , { m 1 ,m 3 } ) is a sub-concept of ( { g 3 ,g 4 ,g 5 } , { m 1 } ). With respect to this partial order, the set of all formal concepts forms a complete lattice called the concept lattice of the formal context ( G, M, I ). Figure 1 shows the concept lattice associated with Table 2. On the diagram, each node denotes a concept while a line denotes an order relation between two concepts. Due to reduced la-beling , the extent of a concept has to be considered as com-posed of all objects lying in the extents of its sub-concepts. Dually, the intent of a concept is composed of all attributes in the intents of its super-concepts.

Non-binary data (Table 1) are described by a many-valued context ( G, M, W, I ), where W denotes a set of attribute val-ues, such that ( g,m,w )  X  I . The fact that attribute m takes value w for object g is denoted by m ( g )= w . A standard approach in FCA for constructing a concept lattice from a many-valued context ( G, M, W, I ) consists in applying con-ceptual scaling, where a scale for a many-valued attribute is given by a transformation of attribute-value pairs into a set of binary attributes. For example, Table 1 can be transformed into Table 2 where the scale for m 1 is given by { m 1  X  10 } ,resp. { m 2  X  6 } and { m 3  X  5 } for m 2 and m 3 . The choice of a scale is arbitrary and usually leads to loss of information (links and closeness between values) and border problems, but it remains an important technique for binarizing complex data [3, 8].
Introduction and definitions. Similarity has been stud-ied from many points of view in artificial intelligence and pattern recognition [7]. For example, considering documents described by their attributes, e.g. keywords, similarity of documents x and y can be defined by non-emptiness of the set of their common attributes, x  X  y =  X  . The similarity is reflexive and symmetric, but not necessarily transitive. Following this idea, a tolerance relation captures the char-acteristics of a similarity [6].

Definition 3.1. For a set G ,abinaryrelation T  X  G  X  G is cal led tolerance if: Let us consider now a set of objects G , a tolerance relation T , and a formal context ( G, G, T ). First, some objects, say g and g 2 , are observed to be similar, i.e. g 1 Tg 2 .Thenpairs of the tolerance relation lead to a class of similar objects or  X  X lass of similarity X . Moreover, among the classes of similar-ity, some classes are maximal meaning that the class is not includedinanylargerclass.

Definition 3.2. Given a set G , a subset K  X  G ,anda tolerance relation T on G , K is a class of tolerance if: An arbitrary subset of a class of tolerance is a preclass . Now, let us consider the classes of tolerance associated with the formal context ( G, G, T ). The class of tolerance of an object g has to be considered along two dimensions: (i) the class is defined as the set of all objects which are tolerant with g , (ii) the class is maximal in the sense that objects in the class are pairwise similar, and adding any other object in the class results in some pairs of non tolerant objects. A class of tolerance may be given a name which can be further used as an  X  X ttribute name X  that describes the object. The result is a formal context ( G, M, I )where I associates any object in G with its classes of tolerance m  X  M .

Let us return to objects and numerical attributes of Ta-ble 1. Intuitively, two objects g 1 and g 2 are similar for a set of attributes if the values for each attribute are  X  X imi-lar X . Similarity (or closeness) of two numerical values can be measured by the difference of these two values: | m 1 ( g m 1 ( g 2 ) | . Then, two numerical values are similar when their difference is lower than a similarity threshold  X  expressing the maximal variation allowed between two similar values. More precisely, given two numbers a, b  X  R and a similarity threshold  X  , a similarity relation  X  is defined as: This similarity relation  X  is reflexive and symmetric but not necessarily transitive, e.g. 1 2 3, 3 2 5, but 1 2 5.
The same holds when attributes are interval-valued by defining a similarity  X  as follows, with a, b, c, d  X  R : provided that | a  X  b | X   X  and that | c  X  d | X   X  .Inother words, two numerical intervals are  X  -similar if the length of their  X  X onvex hull X  is not larger than a threshold  X  .
Classes of tolerance for numerical attributes. Let us consider a numerical many-valued context ( G, M, W, I ) where the range W m of an attribute m is such that W m  X  W  X  R . Each attribute has a different range and different similarities and thresholds  X  have to be defined. However, data can be normalized leading to a single threshold.
Given an attribute m  X  M , let us consider the formal context ( W m ,W m ,  X  ). Similar objects in W m are related w.r.t.  X  . For example, given  X  =5and m 1 in Table 1, the formal context ( W m 1 ,W m 1 , 5 ) can be read in Figure 2 (left). As 5 is symmetric and reflexive, ( W m 1 ,W m 1 , contains a diagonal of crosses and the associated concept lattice (see Figure 2 (right)) is also symmetric.

Proposition 3.1. Given a context ( W m ,W m ,  X  ) and the associated lattice, any concept ( A, B ) is such that either A  X  B , B  X  A ,or A = B . For each concept ( A, B ) ,the pair ( B,A ) is also a concept.
 For example, the upper right concept on Figure 2 (right) consequence of the above proposition is that the concept lattice can be separated in two parts w.r.t. the mapping ( A, B )  X  ( B,A ). In [3], such a mapping is called a polarity , i.e. an order-reversing bijection inverse of itself, and the resulting concept lattice is a polarity lattice . Then, the set of all concepts ( A, B ) such that A = B forms an axis of polarity of the concept lattice.

Concepts ( { 6 , 8 , 11 } , { 6 , 8 , 11 } ), ( { 16 , 17 ( { 11 , 16 } , { 11 , 16 } ) , form the axis of polarity of the lattice on Figure 2 (right). The set of all concepts ( C,D ) such that ( A, B )  X  ( C, D ), denoted by U , forms the upper part of the concept lattice. Dually, the set of all concepts ( E,F )such that ( E,F )  X  ( A, B ), denoted by L ,formsthelowerpart of the concept lattice. If ( A, B )  X  U then ( B,A )  X  L and B  X  A . Dually, if ( A, B )  X  L then ( B,A )  X  U and A  X  B . m 1 6 8 11 16 17 6  X  X  X  8  X  X  X  11  X  X  X   X  16  X  X  X  17  X  X  Figure 2: Symmetric context formalizing a tolerance relation (left) and its concept lattice (right).

Proposition 3.2. Let ( A, B ) be a concept of the axis of polarity, i.e. A = B .Then, A (or B )isasetofmax-imal pairwise similar values, i.e. A determines a class of tolerance. Let ( C,D ) a concept in U but not in the axis of polarity, i.e. D  X  C . D is a preclass of tolerance and C is the set of all values similar to values in D .
 The intents of the concepts in the upper part of the lattice  X  X r dually the extents in the lower part X  are partially or-dered and determine sets of similar values. Among these intents, the intents in the axis of polarity are maximal and are classes of tolerance, and the other intents are only pre-classes of tolerance. For example, taking  X  =5and m 1 in Table 1, there are 5 intents, namely { 16 } , { 11 } , { 16 , 17 { 11 , 16 } ,and { 6 , 8 , 11 } , where the three last intents are tol-erance classes. When there is no ambiguity, we use the term of  X  X lass of similarity X  for a class or a  X  X reclass of tolerance X .
We have made precise how a partially ordered set of classes of similarity can be built from a many-valued context. Now, classes of similarity have to be named before being used as attribute names for scaling the original many-valued con-text. Actually, the name of the elements of the scale can be related to the semantic content of the corresponding class of similarity and to the name of the original attribute that is scaled. Here, an element of the scale is named by a pair associating the name of the original attribute and either the content of the class of similarity or their convex hull, e.g { 16 , 17 } or [16 , 17] for m 1 .
 Table 3: Formal context obtained from Table 1 han-dling classes of tolerance of attributes m 1 and m 2 .
Building a  X  X umerical concept lattice X . Consider the numerical context ( G, W, M, I ) in Table 1. Three sets of classes of similarity (one for each attribute) are computed thanks to three tolerance relations relying on three different similarities  X  , and extracted from the symmetric concept lattices associated with each tolerance relation. The trans-formation of the original context ( G, W, M, I ) into the de-rived context ( G, N, J )with G is the set of original objects, N = m  X  M ( { m } X  C m )with C m is the set of all classes of similarity of attribute m ,and( g, ( m, C m ))  X  J means that the value of object g in the many-valued context, i.e. m ( g ), belongs to class C m . The derived binary context associated with Table 1 is given in Table 3 for attributes m 1 and m where the thresholds are  X  =5for m 1 and  X  =4for m 2 (and  X  =5for m 3 ).
The preceding work takes place in standard FCA with scaling. An extension consists on working directly on com-plex data, without scaling. For this, a pattern structure is a generalization of a formal context for complex data [2]. First a similarity operation is defined on object descriptions. This operation is idempotent, commutative and associative, which allows for defining a natural partial order on D .
Formally, let G be a set of objects, ( D, ) be a meet-semi-lattice of object descriptions and  X  : G  X  D a mapping asso-ciating an object with its description. Then ( G, ( D, ) , X  )is called a pattern structure .Elementsof D are called patterns and are ordered by the subsumption relation :given c, d  X  D , c d  X  c d = c . A pattern structure ( G, ( D, ) , X  )gives rise to the following derivation operators (  X  ) ,given A and d  X  ( D, ): A = g  X  A  X  ( g )and d = { g  X  G | d  X  ( g ) } . These operators form a Galois connection between (2
G ,  X  )and( D, ). (Pattern) concepts of ( G, ( D, ) , X  )are pairs of the form ( A, d ), A  X  G , d  X  ( D, ), s.t. A = d and A = d . For a pattern concept ( A, d ), d is called intent and is a description of all objects in A , called extent . Partially ordered by ( A 1 ,d 1 )  X  ( A 2 ,d 2 )  X  A 1  X  A 2 (  X  d 2 set of all concepts forms a so-called pattern concept lattice .
Interval pattern structures [4]. A numerical dataset is represented by a many-valued context ( G, M, W, I ). Ob-jects are described by numbers or intervals, each one standing for a given attribute, and hence interval vec-tors are introduced as patterns. When c and d are in-terval vectors, we write c = [ a i ,b i ] i  X  [1 , | M | ] [ c i ,d i ] i  X  [1 , | M | ] . Interval vectors may be partially ordered within a meet-semi-lattice as follows. Given two interval c d = [ min ( a i ,c i ) ,max ( b i ,d i )] i  X  X  1 ,..., | a  X  X onvexification X  of intervals on each vector dimension is operated. The meet operator induces the following subsumption relation on interval patterns [ a i ,b i ] [ c i ,d i ]  X  [ a i ,b i ]  X  [ c i ,d i ] ,  X  i  X  X  1 , ..., | ( { g 1 ,g 2 ,g 3 } , [6 , 11] , [0 , 8] , [1 , 5] ) a pattern concept.
Tolerance relation in pattern structures. Given a , b , c , d  X  R ,aparameter  X   X  R ,wesaythattwodescrip-tions (intervals) [ a, b ]and[ c, d ] are similar if: max ( b, d ) min ( a, c )  X   X  , i.e. size of [ a, b ] [ c, d ] does not exceed  X  .
Then, though each interval from a semi-lattice ( D, )de-scribes a preclass of tolerance, some intervals may not be  X  X aximal X , i.e. not describing classes of tolerance. Below, we show how to replace any interval by its  X  X aximal X  inter-val with a projection in a meet-semi-lattice.

First, consider the meet-semi-lattice ( D, )ofintervalval-ues for a given attribute. Then, for any interval x  X  D ,we define the ball B ( x,  X  )asthesetofintervalsin D similar to x as follows: B ( x,  X  )= { y  X  D | y  X  x } .Thisballwith center x and diameter  X  contains all intervals y such that x and y are similar .

Now, we remove from B ( x,  X  ) any pair of intervals that are not pairwise similar, and build an interval with the left bor-der (resp. right border) as the minimum (resp. maximum) of all intervals. This can be done by replacing any x of the meet-semi-lattice of intervals by the meet of all intervals y from the ball B ( x,  X  )thatarenotdissimilarwithanother element y of this ball:  X  ( x,  X  ):= { y  X  B ( x,  X  ) | X  y [ y  X  B ( x,  X  )  X  y  X   X  maps any x  X  D to a representation of its class of tol-erance, i.e. the associated maximal set of pairwise simi-lar elements. For example, with attribute m 3 ,wehave  X  ([2 , 5] , 5) = [1 , 5] and [1 , 5] is the similarity (in the sense of operation ) of all elements of the class of tolerance con-taining [2 , 5], i.e. the class { [1 , 2] , [2 , 5] , [4 , 5] size of an interval exceeds  X  , the ball of similar patterns is empty.  X  is a mapping that takes any x  X  D to an element  X  ( x )  X  ( D, ) such that  X  ( x ) x , meaning that  X  is con-tractive. In sense of [2],  X  is a projection in the semi-lattice ( D, ) as also monotone and idempotent. Moreover, any projection of a complete semi-lattice ( D, )is -preserving, i.e. for any x, y  X  D ,  X  ( x y )=  X  ( x )  X  ( y ) [2]. Thereby, the projection may be computed in advance, replacing each pat-tern by a  X  X eaker X  or  X  X ore general X  pattern. It comes with a loss of information, e.g in previous example [2 , 5] replaced by [1 , 5] which is more imprecise. However, this loss of infor-mation is controlled by  X  : the projected pattern structure preserves the similarity between descriptions in the original pattern structure, and keeps the same representation for-malism while embedding a tolerance relation.
Agronomists compute indicators for evaluating the impact of agricultural practices on the environment. The risk level for a pesticide to reach groundwater is computed by the indi-cator I gro in [1]. Based on the value of I gro , agronomists try to make a diagnosis of agronomic know-how w.r.t. the use of pesticides. Pesticide characteristics depend on the chemical characteristics of the product while pesticide period applica-tion and field characteristics depend on domain knowledge. This knowledge lies in information sources such as books, databases, and expert knowledge in agronomy. Moreover, values for some characteristics may vary w.r.t. information sources. Here, we are interested in the analysis of practices through the use of glyphosate in different countries w.r.t. farmers habits. Below, three characteristics of glyphosate, namely DT 50, koc ,and ADI (detailed in [5]), are given in Table 4 (simplified data), according to 12 different infor-mation sources, but the latter are not always in agreement. Then, it can be interesting for experts in agronomy to anal-yse such a table from the point of view of information fusion: which are the sources being in agreement and at which level? We apply our framework on similarity and scaling to build a concept lattice from Table 4. Three thresholds are defined according to experts [5]:  X  = 100 for DT 50,  X  = 2200 for koc , and  X  =0for ADI . The resulting lattice (Figure 3) shows an interesting classification of information sources w.r.t. in-formation fusion. Each concept in the lattice is composed of an extent with a maximal set of sources in agreement w.r.t. the interval of values in the intent. According to experts in agronomy, the lattice on Figure 3 is a good witness of the diversity of practices and of the agreement degree between sources (see [5]).
This paper shows how to build concept lattices from com-plex data, where concepts are sets of similar objects, (i) with Table 4: Characteristics of pesticide glyphosate . an appropriate scaling and classical FCA, (ii) by projecting a meet-semi-lattice of patterns. (ii) allows to use FCA for knowledge representation and reasoning without transform-ing data and can be generalised to any structured data for which a similarity measure can be defined. Finally, we show that the resulting lattice can characterize subsets of sources with similar and precise information for fusion issues. It remains to carry out a deep analysis on links between dis-cretization methods and projections of semi-lattices, while an interesting perspective concerns association rules, e.g. ( ADI =0 . 05  X  koc = 167)  X  ( DT 50  X  [18 , 66]) with confi-dence 100% can be read in Figure 3. [1] C. Bockstaller, P. Girardin, and H. Van der Werf. Use [2] B. Ganter and S. O. Kuznetsov. Pattern structures and [3] B. Ganter and R. Wille. Formal Concept Analysis . [4] M. Kaytoue, S. Duplessis, S. Kuznetsov, and A. Napoli. [5] M. Kaytoue, S. O. Kuznetsov, Z. Assaghir, and [6] S. Kuznetsov. Galois Connections in Data Analysis: [7] A. Tversky. Features of Similarity. Psychological [8] Y. Yang, G. I. Webb, and X. Wu. Discretization
