 Grid is the extension of traditional distributed computing technology with a goal to share the resource (CPU, memory, etc) among virtual organizations. For the large-scale, geography-dispersed, and dynamic-changed resource in the Grid system, it is crucial to construct a monitoring and management system with high scalability and flexibility. Most Gird monitoring systems are implemented based on the Grid Monitoring Architecture (GMA[1]) recommended by Global Grid Forum (GGF), however, there has been no standard monitoring method.
The GMA is based on simple consumer/producer architecture with an in-tegrated system registry. To date, there have been several implementations of Grid monitoring system according to GMA, such as Monitoring and Discovery Service(MDS4[2] [3]), Relational Grid Monitoring Architecture (R-GMA [4]), Hawkeye [5] and GridRM [6]. But these systems do not meet the scalability and flexibility requirements of Grid monitoring, owing to the tight coupling model that GMA imposes on the parties exchanging information. Mobile Agent, with its mobility, automatons and reactivity, meets these needs perfectly. Bandwidth saving and network reduction can also be brought in by Mobile Agent by mov-ing the  X  X ethod X  to the data. Although Orazio Tomarchio and Lorenzo Vita [7] realized this converge of interests their architecture focused mainly on the former resource-based Grid, and didn X  X  take full advantage of the mobility of agent. Grid Mobile Service [8] [9] conception yet hasn X  X  been fulfilled into a spe-cific service, like monitoring service. In contrast, we propose a flexible, dynamic and extensible Grid monitoring system named MAGMS, which makes good use of the mobile agent characteristics to give QoS guarantee to Grid Services. In this paper we present the design of MAGMS, as well as some key technology of implementation details. Since OGSA models all the resources in Grid as Grid Services, the monitored object in our design is the Grid Service, and the main monitoring goal is to ensure the Quality of Grid Service.
 The rest of the paper is organized as follows. In Section2, the design of MAGMS is described, while the critica l factors on system design are given in Section 3. Section 4 introduces the implementation of the prototype system. Finally, conclusions are presented together with directions for future work in Section 5. Our system merges the intelligence, mobility characteristic of mobile agent into current OGSA, constructing a more dynamic and extensible monitoring system to ensure the Quality of Grid Service.

Fig.1 shows the framework of MAGMS. Components of the framework can be divided into three groups: Services providers, Storages and SOAP-oriented Agents.
 2.1 Service Providers In OGSA, any kind of host with resources and abilities is called a service provider. It models all of its resources and abilities to Grid Services, which provide a set of well-defined interfaces and conform to specific conventions.
 All of the Grid Services in Grid enviro nment should register itself in Grid Service Register Centre (mentioned in section 2.2), and any change happens to the Grid Service should be updated in the Centre. In addition, the Grid Service in MAGMS should be binded with the Classes of Service quality it can support, and specify the details about different classes.

Management Service is a special Grid Se rvice, which manipulates the real-time data gathered by the sensors all over the resource to get useful information and offers it to MAs through the Management Interface. 2.2 Storages There are three basic storages in MAGMS: Grid Service Register Centre manages all the Grid Services, Monitoring Task Patterns Centre provides a series of basic monitoring behaviors and Mobile Agent Management Centre keeps a record of all the Mobile Agents.

Grid Service Register Centre stores information about all the Grid Services that are being provided in Grid. When a new Grid Service is going to be supplied, it should be registered in this Centre firstly, and update the register informa-tion whenever changes happen. Besides, MAGMS requires the special attribute, namely Classes of Services to be register ed too. The service name and its class compose the key of a record, and each en try indexes to a specific file depicting this class of the service, especially ab out the conditions for Quality of Service guarantee. A simplifi ed structure of these files is shown in Fig. 1
Monitoring Task Patterns Centre has two libraries: System Monitoring Li-brary and Custom Monitoring Library. Monitoring tasks modules from these two libraries can be integrated into a mor e complex and concrete task carried by MAs. Since users can customize some monitoring modules through this Custom Monitoring Library dynamically, it increases the flexibility and extensibility of MAGMS.
 Mobile Agent Register Cen tre keeps the records of all the agents in MAGMS. When a MA is created out from the Agent Factory, it is required to be registered in this centre with the information of what Grid Service and which class of the Grid Service the MA will be monitoring. When a MA gets instantiated in an Agent Executing Environment, the location of this MA instance will also be recorded and updated in this Centre. 2.3 Soap-Oriented Agents Distinguished from most of the other Mobile Agent-based platforms, in MAGMS the transport and communication mechanism of Mobile Agent are both based on the SOAP (Simple Object Access Proto col) message, neither Agent Transfer Protocol (ATP) nor Agent Communication Language (ACL). This design well merges the MA into the OGSA.
 According to the specific files about t he Grid Service with a certain class, Agent Factory extracts the objects and goals that the monitoring for Grid Ser-vice guarantee requires, finds the corresponding modules for these monitoring requirements in Monitoring Task Patterns Centre, and integrates them into the process logic of a MA. Finally, attached with some routines and the destina-tion where it heads for, a MA is made out, whose transmission, migration, and interaction will all be realized by SOAP.

Another characteristic of MAGMS  X  age nt executing environment, which is a basic element of Mobile Agent Platform (MAP [10]) now is embedded in our Grid monitoring system. Mobile Agent e xecuting environment provides MA a place to run itself, namely execute the monitoring tasks and realize its life circle. 3.1 Agent Transmission In this system, the agent code is encaps ulated in the SOAP message and trans-ferred from one host to another. The SOAP is realized through the XML tech-nologies by which an extensible message framework is defined. However, some characters in the agent code cannot be supported by the XML. In Base64 coding, a 65-character subset of US-ASCII supported by the XML is used, enabling 6 bits to be represented per printable character. Therefore, we use Base64 coding to encode agent code, which might increase the length of the original agent code string. Luckily, the size of the agent code usually is not too big in MAGMS, so the length of the encoded agent is acceptable. 3.2 SLA-Based Grid Service Management Service level agreement (SLA) has been wi dely used in web service literature for QoS management. WSLA [11] and WSOL [12] have made considerable achieve-ments in this field. Grid Service, which is based on web service and Grid tech-nique, will by its very nature use SLA for QoS specification and management.
In our architecture, we use Class of Service for QoS specification and manage-ment. Here Class of Service refers to a var iety of services that one same service provider offers but with different QoS support, like service offering in WSOL. In this case, consumers cannot negotiate with service providers to make a SLA, in-stead, consumers will choose among Classe s of Services. In fact, Class of Service is a special kind of SLA.

As Fig. 1 and section 2.2 depict, in our architecture, every Grid Service will register itself as well as the Classes of Service quality it can support in Grid Register Centre. The user will inquir e Grid Register Centre to get the appro-priate Grid Service and service class with required function and QoS support. Prior to this, some important management information will be retrieved from the specification of the class of service.
 4.1 Introduction of the Developing Tools In the system, we use JDK1.4.2, Eclipse3.0, Apache SOAP2.3.1, Tomcat5.0.28 and some support packages including JavaMail1.3.2, JAF1.0.2, and Xerces 2.5.0. Eclipse is used to develop Mobile Agents, Management Service and Grid Services. JDK is used to support the Eclipse. Tomcat is used as web server. Apache SOAP and support packages are used to realize the SOAP message encapsulation. 4.2 Running of the Prototype System Firstly, the agent code is sent with the user X  X  requirement. The agent is made out from the Agent Factory according to the monitoring tasks and sent to the provider host of the Grid Service that the user is consuming. All the messages between the Agent Factory and hosts are encapsulated in the SOAP messages binding with HTTP.

Secondly, the server receives and saves the agent code to the local stor-age. Then the agent execution environment instantiates this agent (suppose the classes agent needs are all local ones) and runs it.
 Lastly, while the agent is executing the logic operation, it interacts with the Management Service to get the information that is needed for its computing and gets the result whether the current condition of this Grid Service meets the user X  X  requirements, namely appointed Class of Service. In this paper, we propose a Mobile Agent-based Grid Monitoring System (MAGMS). The main purpose of this system is to offer the Quality of Service monitoring and guarantee of Grid Services. MAGMS well meets the distrib-ution and flexibility requirements of the giant Grid environment because the monitoring modules can be customized and reused in many monitoring tasks that are carried out by MAs. MAGMS also takes good advantage of the mobil-ity and intelligence of MAs, which are encapsulated in a SOAP message along with its monitoring task, migrating among the hosts that need them. With the MAGMS, each Service under consuming will be monitored by a corresponding MA to guarantee the quality of the service, namely, the class of the service the user has chosen.

Now MAGMS is in its primary phase. There are many jobs left to promote efficiency and scalability of the system, such as all kinds of task modules that are suited for different conditions, the dispersal repository for the Mobile Agent and Grid Service registrations. Appropriate authentication, authorization and delegation in MAGMS are also important parts of our future work.
 This work is supported by National Natural Science Foundation of China (NSFC) under Grant NO. 60403029.
