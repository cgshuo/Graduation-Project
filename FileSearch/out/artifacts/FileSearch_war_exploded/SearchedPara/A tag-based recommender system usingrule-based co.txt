 Department of Computer Engineering, Faculty of Engineering, University of Isfahan, Isfahan, Iran 1. Introduction Web 2.0 technologies have revolutionized user sharing information, communication and collaboration. Social media sites have rapidly expanded as central hubs for storing big volumes of rich social data that are generated as a result of these transformations. The new norm of exponential growth in available data accessible to the average user  X  due to information overload [1]  X  has made the searching process for relevant content an expanding field of research. In response to the challenges facing average users during their daily web surfing activities, Recommender Systems are constantly being improved in order to dis-seminate  X  X tems of interest X  [2 X 5] to particular users and communities. Successful user recommendation involves information related to user needs, preferences, and habits  X  referred to as  X  X ser Profile X   X  and item characteristics  X  referred to as  X  X tem Profile X  [2,6].

Constructing accurate item and user profiles is crucial to the success of recommender systems. The dynamics of user  X  X ord-of-mouth X  communication in spreading information is employed by successful systems in order to enhance automated recommenda tions through a process called Collaborative Filter-ing (CF) [7 X 9]. A typical CF domain is initiated by collecting rating information mapped as user-item pairs on a set of numerical values and forming sets which act as representatives of user profiles at cer-tain given times within the system. Besides rating, a number of modern services allow users to annotate items with tags, a process known as social tagging. Consequently, a user profile can also profit from these tags. In the last few years, a number of studies have tried to combine recommender systems with social tagging in a manner that can be highly beneficial in both areas [10 X 12]. Hybrid systems, employ-ing this combination, are able to generate automated recommendations while retaining the flexibility of tags incorporating human-perceptive content [13]. Though the effectiveness of user/item annotation is highly dependent on the media type (i.e. text, images, audio, videos, etc.), the aggregated tag-sets are sufficiently information-dense for characterization purposes [14 X 16].

In this article, a new method for building user and item profiles that can represent user and item char-acteristics and preferences, and a new recommender system based on similarity among these profiles are introduced. To build an individual user/item profile, the frequently used user/item tag patterns are dis-covered and the basic user/item profiles are built through these patterns. These basic user/item profiles are enriched in two separate phases. In the first phase, user/item profiles are extended through associa-tion rules discovered in the association rule mining process. In the second phase, user/item profiles are collaboratively enriched by analysing nearest neighbour profiles.

To mitigate the cold start and overspecialization issues, the enrichment of user profiles can be ap-plied. The cold start issue refers to the fact that when a new user joins the system there is not enough information about him, and therefore, the system is generally unable to make high quality recommenda-tions [17]. In this case, a low quality recommendation is provided for the user and this may lead him to underestimate and eventually exit the system. In this regard, enrichment of user profiles is of necessity in order to make high quality recommendations for the new users.

The overspecialization issue deals with situations where the user profile is formed based on the avail-able exclusive information about the user. Here, it is difficult to recommend fresh items other than the ones experienced by the user [2]. Enriching the user profile through collaboration with other similar user profiles contributes to recommending new items.

The key contributions of this study on resource recommendation in social tagging systems can be summarized as follows: 1. A new approach for building user and item profiles based on frequent tag patterns is presented. 2. Two methods for enriching user and item profiles are proposed here. In the first method, profiles are 3. A new similarity metric, referred to as the pattern-base similarity metric, is presented for measuring 4. A new recommendation system is presented to recommend a ranked list of items relevant to user
The rest of this article is organized as follows: in the next section recent studies in exploiting social tagging into recommender systems are reviewed. In Section 3, the proposed approach is presented which includes three Subsections 3.1 building and enriching the user profile, 3.2 building and enriching the item profile, 3.3 recommending a ranked list of items relevant to user needs based on the similarity between item profiles and the profile of the target user. In the following section, the performance analysis and the experimental evaluations are presented. Finally in Section 5, the conclusion and suggestion for future works are presented.
 2. Related works
User-generated tags have gained more practical popularity; this contributes to obtaining useful infor-mation for better comprehension of user characteristics and preferences, which would assist the con-struction of better user models. Up to now, various features of the user-generated tags have been applied in constructing user models in several studies. In the following, we briefly review some of these studies and make a comparison between them and the proposed approach.

Guy et al. aggregate correlational information among users, tags, and items across different social me-dia services within the enterprise application environment [19]. Based on these aggregated correlations, a user model is constructed which contains a set of related users and a set of related tags.
Wetzker et al. proposed a user-centric tag model which allows deriving mappings between personal tag vocabularies and the corresponding folksonomies, referred to as personomies [14]. These mappings infer the meaning of user-assigned tags and can predict choices of tags a user may want to assign to new items.

Wang et al. have introduced a framework for the personalization of social tagging systems [20]. They proposed a ranking model for three user tasks: collaborative tagging, collaborative browsing and collab-orative search.

In the above mentioned studies [14,19,20], correlational information among users, tags and items is collected across different sources. This leads to problems such as tag inconsistency, synonymous tags or multilingualism; c onsequently, in the above mentioned studi es, the authors shoul d also address these issues. However, since in the proposed approach information is collected from only one source, we do not have to deal with such problems. On the other hand, while in these studies there is not any enrich-ment phase after constructing models, in the proposed approach, the constructed models are enriched in two different phases. Analogous to our work, Yeung et al. present user multiple interests as a user model based on a set of frequent tag patterns [21]. In the same manner, Li et al. have proposed a social interest discovery approach based on frequent co-occurrence tag patterns [15]. The authors have devel-oped an Internet Social Interest Discovery system to discover common user interests and cluster users and their saved URLs by different interest topics. They have used frequent co-occurrence tag patterns to characterize and capture common user interests, something applied in this work. The main difference of our work and the aforementioned two works is that here after detecting the frequent tag patterns, they are enriched by means of association rules (rule-based enrichment) and also in collaboration with other similar users (collaborative enrichment).

Carmagnola et al. have proposed a framework for improving recommender systems through exploiting user tagging activity [22]. The authors build and enrich a user model based on the meaning of the tags and the users X  tagging behaviour. A prototype of their framework, referred to as iCITY, is implemented in the cultural heritage domain, and by exploiting the user model into this prototype, the personalized manners of navigating and tagging content as well as recommending content to users are supported. Similar to the proposed approach, in this study, the authors enrich user model after construction. However, unlike the proposed approach, they utilize the meaning of the tags, which contribute significantly to dealing with problems such as tag ambiguity. On the other hand, unlike this study, in the proposed approach we employ association rules in the enrichment phase, which leads to unearth the hidden relationships among tags.

Recently, the studies on resource recommendation in social tagging systems are on the rise. Below, we review some of these studies and make a comparison between them and the proposed approach.
Bogers et al. investigated using the CiteULike data to recommend scientific articles [23]. The authors have compared three different CF algorithms and found that the user-based CF algorithm performs the best.

Nakamoto et al. modified the user-based CF algorithm in order to incorporate tagging information in each step [24]; they proposed the Reasonable Tag-based CF (RCF) where the tags are clustered into topics by using an expectation-maximization (EM) algorithm; the feature vectors of topics and items for each user, referred to as topic domain vectors, are then developed in order to find similar users and to recommend items in terms of topic domains.

Tso-Sutteret et al. have reduced three types of objects (users, items and tags) in tagging data to two types by treating tags either as users or as items and then applied traditional item-based or user-based CF algorithms [25]. They apply the scores computed by CF algorithms using a linear interpolation to generate the final recommendation.

De Gemmiset et al. used tagging data to augment content-based recommender systems by treating the user who applies tags as an additional content of the documents [26]. Zhen et al. used correlation regularized matrix factorization and proposed the TagiCoFi, which integrates the tagging information into a model-based CF [27].

Sen et al. have generated item recommendations by inferring a user X  X  tag preferences first and then calculating the item preferences based on tag preferences [13]. Nevertheless, their method requires var-ious information in addition to ta gging information, such as clickt hrough and rating i nformation. The clickthrough information may be hard to obtain and the rating information is usually non-existent in social tagging data.

Siersdorfer et al. have proposed a formal model to characterize users, items, and tags in social tag-ging environments [28]. This model is based on vector space and represents the multi-dimensional social environment of a given user. They proposed the recommendation mechanisms for content sharing frame-works based on this model. Liang et al. have proposed an approach to profile users X  preferences based on tags and have made personalized item recommendations [29]. They made use of all the possible combinations among items, users and tags.

The above mentioned studies [13,23 X 29] differ fundamentally from the proposed approach in a way that in the proposed approach the basic building blocks of user models are frequent tag sets while in these studies user models are constructed based on single tags. This results in more differences in the subsequent steps such as model enrichment and item recommendation.

Beldjoudi et al. propose a method to analyse user profiles according to their tags in order to personalize the recommendation of resources [30]. The authors extract association rules from folksonomies and use them to recommend supplementary resources associated to the tags involved in these rules. They reduce tag ambiguity in their recommendation process by tak ing into account social simi larities calculated on folksonomies. While this work is similar to our work in some aspects, there are still many differences; the main difference is that Beldjoudi et al. apply association rules in the main recommendation process, whereas in our work, association rules, along with the other enrichment method, are employed in order to extend user and item profiles, and then these profiles are utilized in a novel recommendation process.
Kim et al. proposed a new collaborative approach to user modelling by employing user-generated tags as preference indicators [31]. They discovered the relevant and irrelevant topics for each user, and then enriched an individual user model in collaboration with the other similar users. The authors applied their user modelling approach in a recommender system that obtains promising results. The approach proposed by Kim at al. is rather similar to the proposed approach in that they both build user model based on frequent tags sets and enrich it in collaboration with the other users. However, they noticeably differ in several respects. Unlike the proposed approach, Kim at al. make difference between relevant and irrelevant topics; on the other hand, we exploit association rules to further enrich user and item models. Besides, Kim at al. recommend items via probabilistic approach, while we use a new item recommendation based on the similarity between user and item profiles. 3. The proposed approach
In this approach, we consider a set of users, tags, items, and their transactions among them as an input for predicting which items would be more relevant to a specific user. In this context, the transactions among user u ,tag t and item i determine the assignment of tag t to item i by user u . In order to describe the specific phases of this approach, the notations and definitions required for the precise comprehension of this approach are presented.
 T be a three-dimensional binary matrix that represents the user-tag-item correlations where Q u,t,i is set to 1ifuser u  X  U assigns tag t  X  T to item i  X  I , otherwise it is set to 0.

We denote a set of tags assigned by a certain user u as T u = { t  X  T | X  i  X  I : Q u,t,i =1 } and a set of tags assigned to a certain item i as T i = { t  X  T | X  u  X  U : Q u,t,i =1 } . Also, a set of tags assigned annotate item i such that U i = { u  X  U | X  t  X  T : Q u,t,i =1 } .

This proposed approach is organized as follows: in the first step, the basic profiles for users and items are constructed based on frequent tag patterns. The next step is the user/item profile enrichment; this step is divided into two phases referred to as the rule-based enrichment phase and the collaborative enrichment phase. In the rule-based enrichment phase profiles are enriched by means of association rules which are discovered by the association rule mining techniques and in the collaborative enrichment phase profiles are enriched via analysing nearest neighbour profiles.

Finally, the most relevant items are recommended to the target user. In this regard, the similarity be-closeness between the target user and the items. Subsequently, the top-N closest items are recommended to the target user. 3.1. User profile
While the incentives for using tags in user modelling are diverse, the motivation behind this decision profiles are built based on tags generated by the users. The presented method for creating a user profile is characterized by two main steps: generating a basic user profile and extending the basic user profile through rule-based and collaborative-based enrichment. 3.1.1. The basic user profile
When several items are frequently annotated together by a user with the same group of tags, these tags introduce an association and show user interests in that particular association; for example, if a user annotates several web pages frequently with the same set of tags such as  X  X nix X ,  X  X ile_system X , and  X  X rogramming X , it can be inferred that the user is interested in file system programming in Unix. Hence, this article proposes generating user profiles based on patterns of frequently associated tags which are discovered by data mining techniques.

Due to the variety of user choices of items, a distinct dataset is selected for every user during the mining process; therefore, the frequent tag patterns for each user are extracted from the set of items that is annotated by him. Research literatures in data mining generally define frequent patterns as patterns that occur at least as frequently as prescribed by a predetermined threshold, commonly referred to as the user uses frequently together, beyond a certain threshold, to annotate a set of items. In order to discover the aforementioned tag patterns, frequent-pattern mining techniques such as Apriori and FP-growth are applied. The basic user profile (BUP) is defined as follows: where, BUP u refers to the basic user profile of user u and is a set of patterns where each pattern is a set the pre-determined threshold which is referred to as the minimum pattern support ,  X  . Supp u ( P ) is the ratio of items in set I u which are annotated by user u with all tags in P . The support of each pattern P for user u is measured by the following equation:
In order to determine user interests in various patterns, each pattern should be weighted. The weight of each pattern P in the profile of user u ,referredtoas W u ( P ) , is equal to Supp u ( P ) . 3.1.2. Rule-based user profile enrichment
Before clarifying the motivation behind using the association rules, these rules are defined in this context and their use for pattern extension is described. 3.1.2.1. Association rules
An association rule r is in the form of P r  X  c r where P r is referred to as the premise tag set and c r is the conclusion tag such that P r  X  T , c r  X  T and c r /  X  P r . An association rule P r  X  c r refers to the fact that when users assign tags from the premise tag set P r to some items, they probably assign the support and confidence . Support of a rule r , written as Supp ( r ) is the number of user-item pairs where a user annotates an item with all tags in P r and tag c r collectively. The Supp ( r ) is calculated through Eq. (3) as follows:
The support for each rule must be greater than the pre-determined threshold which is referred to as the minimum rule support .
 an item with all tags in P r .Inotherwords, Conf ( r ) is equal to Supp ( r ) divided by the number of user-item pairs where a user annotates an item with all tags in P r . The confidence of rule r is measured by the following equation:
The confidence for each rule should be greater than the predetermined threshold, referred to as the minimum rule confidence .
 In order to discover association rules, we make use of association rule mining techniques such as Apriori . In this regard, all the available data is employed in the mining process. The rules discovered in the process are used for both user and item profile enrichment.

In this study, the frequent patterns, defined in Section 3.1.1, are extended via association rules. A frequent pattern P can be extended by rule r provided that the rule premise tag set P r is a subset of P ( P r  X  P ) and the rule conclusion tag does not belong to P ( C r /  X  P ). The extended result pattern, denoted by P , contains all tags in P as well as the conclusion tag c r ( P = P  X  X  C r } ). The weight of the extended pattern P is measured by the following equation: 3.1.2.2. The motivation for applying association rules
To clarify rule-based enrichment motivation and explain the use of association rules, we exploit data mining techniques to extract these rules from our dataset. The dataset is collected from the popular social bookmarking system known as  X  X el.ico.us X  which is a server-based system and allows users to organize and share bookmarks on the internet as well as annotate them with user-generated tags.

Table 1 presents some of the rules discovered though the mining process with the minimum rule support of 500 and minimum rule confidence of 0.9. These rules illustrate various correlations between tags such as synonyms, generality/specificity, different word forms, translation, etc. For instance, in the rule  X  X ow-to X   X   X  X utorial X ,  X  X ow-to X  and  X  X utorial X  are synonyms; the rule  X  X hp-programming X   X   X  X rogramming X  is an example of the generality/specificity relation since php-programing is the specific type of programing. The rule  X  X esigner X   X   X  X esign X  illustrates different word forms and, in the rule  X  X isenoweb X   X   X  X ebdesign X , disenoweb is the Spanish translation of webdesign. However, some rules demonstrate deeper correlations such as  X  X eb X   X   X  X 3c X  where w3c is the consortium that develops web standards.

Employing association rules can improve the quality of recommendations. For instance, suppose that a given user profile includes the tag pattern { X  X utorial X ,  X  X esigner X ,  X  X eb X  X  and a certain item (a URL) profile contains the tag pattern { X  X ow-to X ,  X  X esign X ,  X  X ebsite X  X ; for the sake of simplicity, it is assumed that each profile has only one tag pattern. Despite the fact that these patterns present a similar concept, the mentioned item is not nominated for recommendation, because these patterns do not contain any tags in common and the recommendation is based on common tags. Now, suppose the following rules are discovered as a result of the mining process: 1.  X  X ow-to X   X   X  X utorial X . 2.  X  X esigner X   X   X  X esign X . 3.  X  X ebsite X   X   X  X eb X .

If user and item patterns are expanded by these rules, the  X  X esign X  tag is added to the user pattern (through the second rule), so the user pattern is expanded to the { X  X utorial X ,  X  X esigner X ,  X  X eb X ,  X  X esign X  X  pattern. Similarly,  X  X utorial X  and  X  X eb X  tags are added to the item pattern (through rules number 2 and 3); therefore, the item pattern is expanded to the { X  X ow-to X ,  X  X esign X ,  X  X ebsite X ,  X  X utorial X ,  X  X eb X  X  pattern. By expanding user and item patterns in this way, the user pattern has three tags out of four in common with the item pattern. Therefore, the probability of selecting this item for recommendation is rather high.

Moreover, as the rule-based profile enrichment improves the accuracy of computing item-to-user sim-ilarity, it can also improve the accuracy of computing item-to-item and user-to-user similarity. In the following sections also, where item-to-item and user-to-user similarity need to be calculated, the rule-based profile enrichment enhances computational accuracy. 3.1.2.3. Rule-based user profile enrichment
In this section, the basic user profile patterns are enriched via the discovered rules in the mining process. The rule-based enriched user profile for a given user u ,writtenasREUP u , is generated from the patterns in BUP are extended whenever possible and in the subsequent iterations only the patterns that have been extended from the previous iteration are extended again, if possible. At the end of each iteration, the extended patterns are added to the REUP which is initially set with the patterns in BUP. This process continues until the last iteration in which there is no more possible extension. The algorithm for computing REUP is shown in Algorithm 1.
 Algorithm 1. Association rule based user profile augmentation algorithm Input: total user list U; set of all discovered rules R; basic user profile BUP
Output: Rule-based enriched user profile REUP computingRuleEnrichedUserProfile (U, BUP, R) for each u  X  U end for 3.1.3. Collaborative user profile enrichment
In collaborative user profile enrichment, first, the k most similar users to the target user are selected as its nearest neighbours, and subsequently the target user profile is enriched through analysing neighbour profiles.

Before entering this process, the formation of the  X  X earest neighbours X  for the target user is of neces-sity. For this purpose, target user similarity to other users is computed and the k most similar users to the target user are selected as the nearest neighbours.

Typical collaborative filtering runs into serious limitations in identifying user neighbourhoods. During typical collaborative filtering similarity between users is measured based on their rating of the same items. In practice even when users are very active the set of rated items is only a small proportion of the total number of the items. In this situation it is normal for a pair of users to share nothing in common; therefore, a similarity computation is impossible [33]. Even when the similarity computation is possible, it may not be valid due to lack of information. Consequently, the latest studies present similarities among users as being calculated through user-generated tags instead of user ratings [24,27 X 29,34,35]. In this study also, we identify the nearest neighbours based on tags assigned to items.

In the following sections, we refer to the set of the  X  nearest neighbour users  X  X s X  neighbour users  X  and their profiles as  X  neighbour profiles  X . After determining the neighbour users, the target user profile is enriched through the analysis of neighbouring profiles. In the following sections the two phases of the collaborative enrichment is studied in more detail. 3.1.3.1. Identifying t he nearest neighbours
In this study, the similarity between two particular users is calculated based on the similarity between their profiles. In this regard, a new similarity metric, referred to as the pattern-base similarity metric , is presented here for measuring the similarity between two profiles. This new metric is based on the amount of overlap between their patterns, and it is the extension of the Jaccard similarity metric, a well-known simple metric for measuring the similarity between two sets [18]. The pattern-base similarity metric measures the similarity between two sets where each member of each set is a set of its own. The initial equation for measuring the similarity between user u and u X  is as follows: profile and each pattern in the second user profile is computed; the similarity between two patterns is computed via the Jaccard similarity metric. In order to normalize the final result, the computed sum in the numerator is divided by the production of the number of patterns in each user profile. The calculated similarity is a value between 0 and 1; this value is 0 for the pair of users with no overlapping between their profiles patterns, and has maximum value for the pair of users with identical profiles.
In the initial equation for computin g user similarity, the amount of user interest in each pattern (the and u 3 have only one equal pattern P in their profiles, and the weight of this pattern in their profiles is more interested in pattern P than user u 3 ,souser u 1 and u 2 are more similar than u 1 and u 3 or u 2 and u the weight of the patterns in the user profile should be involved in the similarity calculation. The final equation for measuring the similarity between user u and u is: The similarities between the target user and other users are computed by the proposed pattern-base similarity metric, and the top k most similar users to the target user are selected as the nearest neighbour users, written as KNN u . In the next section, the nearest neighbour user profiles are analysed in order to enrich the target user profile. 3.1.3.2. Enriching a user profile through analysing his neighbour profiles. Here the patterns in the target user profile are compared with those in the neighbour profiles. If a pattern in the target user profile is the subset of a pattern in the neighbour profile, the pattern in the neighbour profile is added to the target user profile. To put it more precisely, a pattern P in the neighbour profile is added to the target user profile if two conditions are met: (1) there is a pattern P in the target user profile such that P is a subset of P and (2) the weight of P in the neighbour profile is greater than the weight of P in the target user profile. The weight of pattern P in the target user profile is calculated as follows: where, u and u refer to the target user and neighbour user, respectively. We refer to the set of enriched patterns achieved by collaborative enrichment as the collaboratively enriched user profile, written as CEUP . The algorithm for enriching the target user profile through the neighbour profile is described in Algorithm 2.
 Algorithm 2. Collaborative user profile enrichment algorithm Input: total user list U; rule enriched user profile REUP; set of k nearest neighbours KNN
Output: Collaboratively enriched user profile CEUP computingCollaborativeEnrichedUserProfile (U, REUP, KNN) for each u  X  U end for 3.2. Item profile
Similar to the user profile, the presented method for creating an item profile is characterized by two main steps: generating a basic item profile and extending it through rule-based and collaborative-based enrichment. 3.2.1. Basic item profile
As mentioned before, if several users frequently annotate an item with the same group of tags, these tags introduce a particular association which present the content of the item at a higher level of ab-straction. n. For example, if a web page is frequently annotated with  X  X PF X ,  X .net X ,  X  X rogramming X , and  X  X uide X  tags together, it can be concluded that the mentioned web page is about training WPF program-ming in a.net framework. Therefore, similar to the user profile, the item profile is based on its frequent tag patterns as well. Here, frequent-pattern mining techniques are employed to extract tag patterns that occur in high frequency for the basic item profile, similar to the case of the basic user profile. A set of U of pattern P for item i is measured by the following equation: to determine the importance of each pattern in the item profile. The weight of each pattern P in the item 3.2.2. Rule-based item profile enrichment
As mentioned in the rule-based user profile enrichment section, rules discovered in the association mining process are used in both the user and item profile enrichment process. Rule-based item profile enrichment is similar to rule-based user profile enrichment in the sense that: in order to enrich pattern P pattern P plus the conclusion tag c r ( P = P  X  X  c r } ). The Weight of enriched pattern P is computed through the following equation: For each item i , the patterns in the basic item profile (BIP i ) are enriched through the discovered rules. We refer to the set of rule-based enriched patterns for item i as the rule-based enriched item profile, REIP is described in Algorithm 3 in the Appendix. 3.2.3. Collaborative item profile enrichment
Collaborative item profile enrichment is similar to collaborative user profile enrichment and imple-mented in two phases: in the first phase the similarity between the target item (the item whose profile we intend to enrich) and the other items are computed; the k most similar items to the target item are then selected as the nearest neighbours, referred to as the neighbour items. In the second phase, the target item profile is enriched through the analysis of neighbour item profiles.

To compute the similarity among items, the pattern-base similarity metric, presented in Section 3.1.3, is applied; that is, the similarity between two items is computed through the following equation: as its nearest neighbour items, written as KNN i . For the sake of simplicity, the target item profile is referred to as the target profile and the profile of its nearest neighbours, the neighbour profile.
After identifying the neighbour items, the target profile is enriched through analysing neighbour pro-files. Here, a pattern P in the neighbour profile is added to the target profile if two conditions are met: (1) there is a pattern P in the target profile such that P is a subset of P and (2) the weight of P in the neighbour profile is greater than the weight of P in the target profile. The weight of P in the target profile is computed through the following equation: where, i and i refer to the target item and the neighbour item, respectively. We refer to the set of the enriched pattern achieved by collaborative enrichment as the collaboratively enriched item profile, written as CEIP . The algorithm for generating CEIP is described in Algorithm 4 in the Appendix. 3.3. Recommendation via pattern based similarity
In the final step, the top-N items that would interest the user the most are recommended to him. For this purpose, the amount of user interest in all items is calculated and the top-N items with the most user interest are recommended.

The more the user profile patterns and item profile patterns overlap, the more the user interest in the item. In this study, the pattern-based similarity metric is applied to calculate the amount of user interest in a certain item. The amount of user u interest in the item i is measured by the following equation: ( IP i = CEIP i ).

In Eq. (14), in addition to the amount of overlap between patterns, the difference between pattern weights is considered as well. For example, suppose that the patterns in the profiles of item i and i have the same amount of overlap with the patterns in the target user profile. In this case the item with the closest pattern weight to the corresponding target user pattern weight is recommended first.
Finally, the set of top-N most interested items are recommended to the target user. Obviously, the items that the target user has had previous interaction with are not included in the top-N recommendation list. Formally, the list of top-N ordered items that are recommended to the target user is identified by Eq. (15). 4. Experimental evaluation 4.1. The experimental setup
The proposed recommendation method is evaluated empirically with the real data, and its performance is compared against the performance of benchmark methods. The system prototype is implemented using. Net framework 4 and Microsoft SQL server 8.0, and the experiments are performed on a PC with an Intel Core i7 1.73 GHz processor and 6 GB RAM running a Windows7.

The publicly available Delicious dataset is used as the experimental data [36]. This dataset is collected from The Del. icio. us website, a well-known social bookmark service supporting collaborative tagging, and contains 1,867 users, 38,581 items (principal URLs), 53,388 tags and 437,593 tag assignments. The experiments are designed to answer the following questions: Is the rule-based enrichment process effective in improving the recommendation quality? Is the collaborative enrichment process effective in improving the quality of recommendations? Can the recommendation quality of the proposed method compete with the benchmark methods?
To evaluate the recommendation quality, we divide the experimental data into two separate sets: 80%, (350,074 bookmarks) is used as the training set and 20%, (87,519 bookmarks) is used as the test set. To ensure that the results are not sensitive to the specific training or test set, the experiments are repeated ten times with each set, and the average results of ten runs is reported in the subsequent sections. In addition, the minimum pattern support , minimum rule support ,and minimum rule confidence in the mining process are set to 0.2 (20%), 750 and 0.9 (90%) respectively. 4.2. Evaluation metrics
The metrics commonly used in evaluating prediction quality are the Root Mean Square Error (RMSE) and Mean Absolute Error (MAE), which are limited to measuring the quality of the top-N recommenda-tions directly [37,38]. In order to address this issue, we use precision and ranking accuracy at top-N as the metrics of evaluation.

The first metric used for evaluation is precision at top-N which can determine how relevant a set of ranked recommendations is for users. This is calculated by taking the ratio between the items in a list of top-N recommendations contained in the test set to the total number of recommended items [39]. It is notable that precision in this sense underestimates true precision because it is assumed that the non-existing items in the test set are unrelated [38]. Precision at top-N for a given user u is measured as follows: recommended to user u. The average precision of all users is considered as the global precision.
Ranking accuracy in the top-N recommended items is the second metric employed in this study. Preci-sion is an effective metric, but it does not consider item rank in the top-N recommended items. Precision treats the item with the top rank in the top-N recommended items as equal to the item in the nth rank. Therefore, the ranking accuracy metric introduced by [40] is applied here. The ranking accuracy for a given user u in the test set is measured as follows: where, rank ( i ) , 1 rank ( i ) N , is the recommended rank of item i in the top-N recommendation list are given higher weight than the ones appearing later. The higher the ranking accuracy is, the more the accuracy of the items ranking within the top-N recommendation list. The overall users X  average ranking accuracy is known as the global ranking accuracy . 4.3. The effect of rule-based enrichment
Here, the improvement of rule-based enrichment in relation to the quality of recommendation is inves-tigated in terms of precision and ranking accuracy. For this reason, the proposed approach is evaluated with and without the rule-based enrichment, and the results are compared. In addition, the following different thresholds are used for minimum rule support: 100, 250, 500, 750, 1000, 2000 and 3000.
Figures 1 and 2 illustrate the results of evaluation with the rule-based enrichment  X  X ithRE X  and with-out the rule-based enrichment  X  X ithoutRE X  in terms of precision and ranking accuracy. As the minimum rule support increases, the rule-based enrichment improves both the precision and the ranking accuracy; while under the lower thresholds, the rule-based enrichment has a negative effect on the quality of the results. In general, the lower thresholds lead to the generation of many low quality rules, and in turn, applying these rules can lead to the adding of irrelevant tags to the user/item profiles, and finally, these irrelevant tags act as noise in the recommendation process and lower the quality of recommendation. On the other hand, the higher thresholds lead to discovering very few rules or no rules, and this decreases the effect of the rule-based enrichment.

Overall, the rule-based enrichment process can improve the quality of recommendation provided that a proper threshold for the minimum rule support is selected. For instance, when the minimum support is 750, the rule-based enrichment achieves 7.25% improvement in terms of precision. With respect to ranking accuracy, similar results are demonstrated in Fig. 2. Considering both ranking accuracy and precision, the threshold for minimum rule support is set to 750 in subsequent experiments. 4.4. The effect of collaborative enrichment by the rule-based enrichment along with collaborative enrichment are compared with the results obtained by rule-based enrichment only. Furthermore, for inspecting the influence of neighbourhood size ( k )on the collaborative enrichment, the following different numbers of k were applied: 10, 20, 30, 40, 50 and 60.

Figures 3 and 4 illustrate the results of the experiment in terms of precision and ranking accuracy, respectively. The results demonstrate how collaborative enrichment improves the quality of recommen-dation. Furthermore, it can be observed that both precision and ranking accuracy improved as the neigh-bourhood size ( k ) increased from 10 to 40. Above this value, any further increases in k did not lead to statistically significant improvement; in other words, selecting high values for neighbourhood size does why k should be selected within a reasonable range.

All in all, when the neighbourhood size is 40, rule-based enrichment, along with collaborative enrich-ment, achieves an 11.14% improvement rate over rule-based enrichment only in terms of precision at top 10. More importantly, with respect to ranking accuracy, collaborative enrichment shows an 18.34% improvement with the neighbourhood size of 40. 4.5. Comparisons with other methods
In this section of the experiment, the performance of this proposed method is evaluated in comparison with other similar methods. For this purpose, we select the following benchmark methods: (i) a CF based on user-to-user similarity UserCF [8], (ii) a CF based on an item-to-item similarity ItemCF [40] and (iii) a CF based on collaborative tagging TagCF [41]. Then, our method with rule-based collaborative enrichment RCE is compared with the benchmark methods in top-N recommendations.

The neighbourhood size for UserCF and ItemCF is set to 50 and 70 respectively as a result of data collected from the parameter tuning experiment. In order to score ranking, we use the non-normalized weighted sum of ratings with the cosine similarity between two users (for UserCF) or two items (for ItemCF) as the weight, since using predicted ratings as the score ranking directly may not recommend items accurately [37,38].
 TagCF is a method that provides an enhanced recommendation quality derived from user-created tags. In the TagCF, the similarities between users are determined through user-generated tags. Furthermore, the latent tags for each user, collectively called the Candidate Tag Set, are identified and applied to the item recommendation process. In this experiment, the neighbourhood size and model size (the size of candidate tag set) of TagCF are set to 50 and 60, respectively.

In order to compare the quality of recommendation in the stated methods experimentally, the precision and ranking accuracy of each method are measured. The number of recommended items N varies from 1 to 10 and the precision and ranking accuracy of the methods are calculated.

Figure 5 illustrates the results of precision as the number of recommended items N increases, demon-strating how the RCE outperforms the baseline methods. The curves in the graph indicate that as the number of recommended items N increases, the precision values tend to decrease. According to the results obtained by RCE and benchmark methods, regarding precision, RCE was found to be more ac-curate in comparison with the benchmark methods on all variations of N . TagCF ranks second and outperforms UserCF and ItemCF. This is based on the fact that TagCF employs user-generated tagging, while UserCF and ItemCF operate independently of user-generated tags. In all cases, RCE outperforms TagCF, UserCF and ItemCF by 6.95%, 11.13% and 12.13% on average, respectively.

Figure 6 demonstrates the results obtained by RCE and the baseline methods, and it supports the observation that RCE outperforms the other methods in all instances; for example, when N is 10, RCE ranking accuracy is 0.86 while TagCF, UserCF and ItemCF obtain a ranking accuracy of 0.78, 0.75, and 0.73, respectively. The obtained result confirms that RCE recommends more appropriate items with a higher rank in the top-N recommended items than that of the other methods, and subsequently it is able to make convincing recommendations. Similar to precision, the ranking accuracy of TagCF is still in second place compared with the others. This is also due to the fact that TagCF employs user-generated tags while UserCF and ItemCF are independent of user-generated tags. However, on average, with regard to ranking accuracy, RCE outperforms TagCF, UserCF and ItemCF by 9.8%, 13.7% and 17.3%, respectively.

We further investigate the recommendation performance of the proposed approach in the face of the cold start problem. For this purpose, we analyse the recommendation performance for the cold start users, i.e. users who assigned less than 20 tags. For these users we calculate precision and ranking accuracy obtained by the proposed approach and the benchmark methods.

Figures 7 and 8 depict the result obtained from cold start users with regard to the precision and ranking accuracy, respectively. As we can see from the graphs, the results of the benchmark methods confirm that the values of the two metrics for the cold start users are significantly low in comparison with the result achieved from all users. However, the proposed approach provides almost the same results achieved from all users. This is caused by the fact that the benchmark methods can scarcely identify preferences of the cold start users because they did not have enough information. On the contrary, the proposed approach can appropriately identify cold start user preferences by enriching initial user profile in two phases. Comparing the results obtained by the proposed approach and the benchmark methods, for the cold start users, precision and ranking values of the former was found to be superior to the benchmark methods. For instance, RCE achieves 18%, 17% and 20% improvement for precision compared to TagCF, UserCF and ItemCF, respectively. Moreover, it is obvious that RCE surpassed the benchmark methods in regard to the ranking accuracy. This result confirms that the proposed approach can indeed be a remedy for the problem of the cold start users and hence improving the quality of recommendations. 5. Conclusions and extensions Social recommender systems with user-generated tags are an important technique for the future of the Social Web and are widely used in improving the accuracy of recommendations. In this study, a recom-mender system is presented based on the similarity between user and item profiles. These profiles are initially built on frequent tag patterns, and then enriched during separate phases. In the first phase, pro-files are enriched by means of discovered association rules referred to as rule-based enrichment. In the second phase, the profiles are further enriched based on the nearest neighbours referred to as collabora-tive enrichment. The effect of each enrichment phase on the quality of recommendation is investigated. With the appropriate parameter setup, both phases demonstrate promising results. The recommendation technique with rule-based collaborative enrichment empirically outperforms benchmark methods.
While the results obtained by the proposed approach are promising, various interesting research paths are still open. As a general problem in collaborative free-text tagging systems, users commonly use vague and synonymous tags [42]. The semantics of tags can address this problem by incorporating well-defined concepts. By connecting tags to well-defined concepts, a better understanding of user-generated tags is developed. New systems such as Faviki and Zigtag support semantic tagging by using well-defined concepts in their annotation process.
 References Appendix Algorithm 3. Association rule based item profile enrichment algorithm Input: total item list I; set of all discovered rules R; basic item profile BIP
Output: Rule enriched item profile REIP computingRuleEnrichedItemProfile (I,BIP,R) for each i  X  I end for Algorithm 4. Collaborative item profile enrichment algorithm Input: total item list I; rule enriched item profile REIP; set of k nearest neighbours KNN
Output: Collaboratively enriched item profile CEIP computingCollaborativeEnrichedItemProfile (I, REIP, KNN)
