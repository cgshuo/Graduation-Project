 Given a piece of text, sentiment classification aims to determine whether the semantic orientation of the text is positive, negative or neutral. Machine learn-ing approaches to this problem ( ? ; ? ; ? ; ? ; ? ; ? ) typ-ically assume that classification models are trained and tested using data drawn from some fixed distri-bution. However, in many practical cases, we may have plentiful labeled examples in the source do-main, but very few or no labeled examples in the target domain with a different distribution. For ex-ample, we may have many labeled books reviews, but we are interested in detecting the polarity of electronics reviews. Reviews for different produces might have widely different vocabularies, thus clas-sifiers trained on one domain often fail to produce satisfactory results when shifting to another do-main. This has motivated much research on sen-timent transfer learning which transfers knowledge from a source task or domain to a different but re-lated task or domain ( ? ; ? ; ? ; ? ).

Joint sentiment-topic (JST) model ( ? ; ? ) was ex-tended from the latent Dirichlet allocation (LDA) model ( ? ) to detect sentiment and topic simultane-ously from text. The only supervision required by JST learning is domain-independent polarity word prior information. With prior polarity words ex-tracted from both the MPQA subjectivity lexicon 1 and the appraisal lexicon 2 , the JST model achieves a sentiment classification accuracy of 74% on the movie review data 3 and 71% on the multi-domain sentiment dataset 4 . Moreover, it is also able to ex-tract coherent and informative topics grouped under different sentiment. The fact that the JST model does not required any labeled documents for training makes it desirable for domain adaptation in senti-ment classification. Many existing approaches solve the sentiment transfer problem by associating words from different domains which indicate the same sen-timent ( ? ; ? ). Such an association mapping problem can be naturally solved by the posterior inference in the JST model. Indeed, the polarity-bearing topics extracted by JST essentially capture sentiment asso-ciations among words from different domains which effectively overcome the data distribution difference between source and target domains.

The previously proposed JST model uses the sen-timent prior information in the Gibbs sampling in-ference step that a sentiment label will only be sam-pled if the current word token has no prior sentiment as defined in a sentiment lexicon. This in fact im-plies a different generative process where many of the word prior sentiment labels are observed. The model is no longer  X  X atent X . We propose an alter-native approach by incorporating word prior polar-ity information through modifying the topic-word Dirichlet priors. This essentially creates an informed prior distribution for the sentiment labels and would allow the model to actually be latent and would be consistent with the generative story.

We study the polarity-bearing topics extracted by the JST model and show that by augmenting the original feature space with polarity-bearing topics, the performance of in-domain supervised classifiers learned from augmented feature representation im-proves substantially, reaching the state-of-the-art re-sults of 95% on the movie review data and an aver-age of 90% on the multi-domain sentiment dataset. Furthermore, using simple feature augmentation, our proposed approach outperforms the structural correspondence learning (SCL) ( ? ) algorithm and achieves comparable results to the recently proposed spectral feature alignment (SFA) method ( ? ). Never-theless, our approach is much simpler and does not require difficult parameter tuning.

We proceed with a review of related work on sentiment domain adaptation. We then briefly de-scribe the JST model and present another approach to incorporate word prior polarity information into JST learning. We subsequently show that words from different domains can indeed be grouped un-der the same polarity-bearing topic through an illus-tration of example topic words extracted by JST be-fore proposing a domain adaptation approach based on JST. We verify our proposed approach by con-ducting experiments on both the movie review data and the multi-domain sentiment dataset. Finally, we conclude our work and outline future directions. There has been significant amount of work on algo-rithms for domain adaptation in NLP. Earlier work treats the source domain data as  X  X rior knowledge X  and uses maximum a posterior (MAP) estimation to learn a model for the target domain data under this prior distribution ( ? ). Chelba and Acero ( ? ) also uses the source domain data to estimate prior dis-tribution but in the context of a maximum entropy (ME) model. The ME model has later been studied in ( ? ) for domain adaptation where a mixture model is defined to learn differences between domains.
Other approaches rely on unlabeled data in the target domain to overcome feature distribution dif-ferences between domains. Motivated by the alter-nating structural optimization (ASO) algorithm ( ? ) for multi-task learning, Blitzer et al. ( ? ) proposed structural correspondence learning (SCL) for do-main adaptation in sentiment classification. Given labeled data from a source domain and unlabeled data from target domain, SCL selects a set of pivot features to link the source and target domains where pivots are selected based on their common frequency in both domains and also their mutual information with the source labels.

There has also been research in exploring care-ful structuring of features for domain adaptation. Daum  X  e ( ? ) proposed a kernel-mapping function which maps both source and target domains data to a high-dimensional feature space so that data points from the same domain are twice as similar as those from different domains. Dai et al.( ? ) proposed trans-lated learning which uses a language model to link the class labels to the features in the source spaces, which in turn is translated to the features in the target spaces. Dai et al. ( ? ) further proposed us-ing spectral learning theory to learn an eigen fea-ture representation from a task graph representing features, instances and class labels. In a similar vein, Pan et al. ( ? ) proposed the spectral feature alignment (SFA) algorithm where some domain-independent words are used as a bridge to con-struct a bipartite graph to model the co-occurrence relationship between domain-specific words and domain-independent words. Feature clusters are generated by co-align domain-specific and domain-independent words.

Graph-based approach has also been studied in ( ? ) where a graph is built with nodes denoting documents and edges denoting content similarity between documents. The sentiment score of each unlabeled documents is recursively calculated until convergence from its neighbors the actual labels of source domain documents and pseudo-labels of tar-get document documents. This approach was later extended by simultaneously considering relations between documents and words from both source and target domains ( ? ).

More recently, Seah et al. ( ? ) addressed the issue when the predictive distribution of class label given input data of the domains differs and proposed Pre-dictive Distribution Matching SVM learn a robust classifier in the target domain by leveraging the la-beled data from only the relevant regions of multiple sources. Assume that we have a corpus with a collection of D documents denoted by C = { d 1 ,d 2 ,...,d D } ; each document in the corpus is a sequence of N d words denoted by d = ( w 1 ,w 2 ,...,w N in the document is an item from a vocabulary index with V distinct terms denoted by { 1 , 2 ,...,V } . Also, let S be the number of distinct sentiment labels, and T be the total number of topics. The generative process in JST which corresponds to the graphical model shown in Figure ?? (a) is as follows:  X  For each document d , choose a distribution  X  For each sentiment label l under document d ,  X  For each word w i in document d
Gibbs sampling was used to estimate the posterior distribution by sequentially sampling each variable of interest, z t and l t here, from the distribution over that variable given the current values of all other variables and data. Letting the superscript  X  t de-note a quantity that excludes data from t th position, the conditional posterior for z t and l t by marginaliz-ing out the random variables  X  ,  X  , and  X  is P ( z t = j,l t = k | w , z  X  t , l  X  t , X , X , X  )  X  where N w peared in topic j and with sentiment label k , N j,k is the number of times words assigned to topic j and sentiment label k , N j,k,d is the number of times a word from document d has been associated with topic j and sentiment label k , N k,d is the number of times sentiment label k has been assigned to some word tokens in document d , and N d is the total num-ber of words in the document collection.

In the modified JST model as shown in Fig-ure ?? (b), we add an additional dependency link of  X  on the matrix  X  of size S  X  V which we use to en-code word prior sentiment information into the JST model. For each word w  X  X  1 ,...,V } , if w is found in the sentiment lexicon, for each l  X  X  1 ,...,S } , the element  X  lw is updated as follows where the function S ( w ) returns the prior sentiment label of w in a sentiment lexicon, i.e. neutral, posi-tive or negative.

The matrix  X  can be considered as a transforma-tion matrix which modifies the Dirichlet priors  X  of size S  X  T  X  V , so that the word prior polarity can be captured. For example, the word  X  excellent  X  with index i in the vocabulary has a positive polarity. The corresponding row vector in  X  is [0 , 1 , 0] with its el-ements representing neutral, positive, and negative. For each topic j , multiplying  X  li with  X  lji , only the value of  X  l are set to 0. Thus, the word  X  excellent  X  can only be drawn from the positive topic word distributions generated from a Dirichlet distribution with param-eter  X  l The JST model allows clustering different terms which share similar sentiment. In this section, we study the polarity-bearing topics extracted by JST. We combined reviews from the source and target domains and discarded document labels in both do-mains. There are a total of six different combi-nations. We then run JST on the combined data sets and listed some of the topic words extracted as shown in Table ?? . Words in each cell are grouped under one topic and the upper half of the table shows topic words under the positive sentiment label while the lower half shows topic words under the negative sentiment label.

We can see that JST appears to better capture sen-timent association distribution in the source and tar-get domains. For example, in the DVD+Elec. set, words from the DVD domain describe a rock con-cert DVD while words from the Electronics domain are likely relevant to stereo amplifiers and receivers, and yet they are grouped under the same topic by the JST model. Checking the word coverage in each do-main reveals that for example  X  X ass X  seldom appears in the DVD domain, but appears more often in the Electronics domain. Likewise, in the Book+Kitch. set,  X  X tainless X  rarely appears in the Book domain and  X  X nterest X  does not occur often in the Kitchen domain and they are grouped under the same topic. These observations motivate us to explore polarity-bearing topics extracted by JST for cross-domain sentiment classification since grouping words from different domains but bearing similar sentiment has the effect of overcoming the data distribution differ-ence of two domains. Given input data x and a class label y , labeled pat-terns of one domain can be drawn from the joint distribution P ( x,y ) = P ( y | x ) P ( x ) . Domain adap-tation usually assume that data distribution are dif-ferent in source and target domains, i.e., P s ( x ) 6 = P ( x ) . The task of domain adaptation is to predict the label y t i corresponding to x t i in the target domain.
We assume that we are given two sets of training data, D s and D t , the source domain and target do-main data sets, respectively. In the multiclass clas-sification problem, the source domain data consist of labeled instances, D s = { ( x s n ; y s n )  X  X  X Y : 1  X  n  X  N s } , where X is the input space and Y is a finite set of class labels. No class label is given in the target domain, D t = { x t n  X  X : 1  X  n  X  N t ,N t N s } . Algorithm ?? shows how to per-form domain adaptation using the JST model. The source and target domain data are first merged with document labels discarded. A JST model is then learned from the merged corpus to generate polarity-bearing topics for each document. The original doc-uments in the source domain are augmented with those polarity-bearing topics as shown in Step 4 of Algorithm ?? , where l i z i denotes a combination of sentiment label l i and topic z i for word w i . Finally, feature selection is performed according to the infor-mation gain criteria and a classifier is then trained from the source domain using the new document representations. The target domain documents are also encoded in a similar way with polarity-bearing topics added into their feature representations. Algorithm 1 Domain adaptation using JST.

As discussed in Section ?? that the JST model di-rectly models P ( l | d ) , the probability of sentiment label given document, and hence document polar-ity can be classified accordingly. Since JST model learning does not require the availability of docu-ment labels, it is possible to augment the source do-main data by adding most confident pseudo-labeled documents from the target domain by the JST model as shown in Algorithm ?? . We evaluate our proposed approach on the two datasets, the movie review (MR) data and the multi-domain sentiment (MDS) dataset. The movie re-view data consist of 1000 positive and 1000 neg-ative movie reviews drawn from the IMDB movie archive while the multi-domain sentiment dataset contains four different types of product reviews ex-tracted from Amazon.com including Book, DVD, Electronics and Kitchen appliances. Each category Algorithm 2 Adding pseudo-labeled documents. Input: The target domain data, D t = { x t n  X  X : Output: A labeled document pool B 1: Train a JST model parameterized by  X  on D t 2: for each document x t n  X  X  t do 3: Infer its sentiment class label from JST as 4: if P ( l n | x t n ;  X ) &gt;  X  then 5: Add labeled sample ( x t n ,l n ) into a docu-6: end if 7: end for of product reviews comprises of 1000 positive and 1000 negative reviews and is considered as a do-main. Preprocessing was performed on both of the datasets by removing punctuation, numbers, non-alphabet characters and stopwords. The MPQA sub-jectivity lexicon is used as a sentiment lexicon in our experiments. 6.1 Experimental Setup While the original JST model can produce reason-able results with a simple symmetric Dirichlet prior, here we use asymmetric prior  X  over the topic pro-portions which is learned directly from data using a fixed-point iteration method ( ? ).

In our experiment,  X  was updated every 25 itera-tions during the Gibbs sampling procedure. In terms of other priors, we set symmetric prior  X  = 0 . 01 and  X  = (0 . 05  X  L ) /S , where L is the average document length, and the value of 0.05 on average allocates 5% of probability mass for mixing. 6.2 Supervised Sentiment Classification We performed 5-fold cross validation for the per-formance evaluation of supervised sentiment clas-sification. Results reported in this section are av-eraged over 10 such runs. We have tested several classifiers including Na  X   X ve Bayes (NB) and support vector machines (SVMs) from W EKA 5 , and maxi-mum entropy (ME) from M ALLET 6 . All parameters are set to their default values except the Gaussian prior variance is set to 0.1 for the ME model train-ing. The results show that ME consistently outper-forms NB and SVM on average. Thus, we only re-port results from ME trained on document vectors with each term weighted according to its frequency.
The only parameter we need to set is the number of topics T . It has to be noted that the actual num-ber of feature clusters is 3  X  T . For example, when T is set to 5, there are 5 topic groups under each of the positive, negative, or neutral sentiment labels and hence there are altogether 15 feature clusters. The generated topics for each document from the JST model were simply added into its bag-of-words (BOW) feature representation prior to model train-ing. Figure ?? shows the classification results on the five different domains by varying the number of top-ics from 1 to 200. It can be observed that the best classification accuracy is obtained when the number of topics is set to 1 (or 3 feature clusters). Increas-ing the number of topics results in the decrease of accuracy though it stabilizes after 15 topics. Never-theless, when the number of topics is set to 15, us-ing JST feature augmentation still outperforms ME without feature augmentation (the baseline model) in all of the domains. It is worth pointing out that the JST model with single topic becomes the stan-dard LDA model with only three sentiment topics. Nevertheless, we have proposed an effective way to incorporate domain-independent word polarity prior information into model learning. As will be shown later in Table ?? that the JST model with word po-larity priors incorporated performs significantly bet-ter than the LDA model without incorporating such prior information.

For comparison purpose, we also run the LDA model and augmented the BOW features with the Method MR Baseline 82.53 79.96 81.32 83.61 85.82 LDA 83.76 84.32 85.62 85.4 87.68
JST 94.98 89.95 91.7 88.25 89.85 [ YE10 ] 91.78 82.75 82.85 84.55 87.9 [ LI10 ] -79.49 81.65 83.64 85.65 generated topics in a similar way. The best accu-racy was obtained when the number of topics is set to 15 in the LDA model. Table ?? shows the clas-sification accuracy results with or without feature augmentation. We have performed significance test and found that LDA performs statistically signifi-cant better than Baseline according to a paired t -test with p &lt; 0 . 005 for the Kitchen domain and with p &lt; 0 . 001 for all the other domains. JST performs statistically significant better than both Baseline and LDA with p &lt; 0 . 001 .

We also compare our method with other recently proposed approaches. Yessenalina et al. ( ? ) ex-plored different methods to automatically generate annotator rationales to improve sentiment classifica-tion accuracy. Our method using JST feature aug-mentation consistently performs better than their ap-proach (denoted as [ YE10 ] in Table ?? ). They fur-ther proposed a two-level structured model ( ? ) for document-level sentiment classification. The best accuracy obtained on the MR data is 93.22% with the model being initialized with sentence-level hu-man annotations, which is still worse than ours. Li et al. ( ? ) adopted a two-stage process by first clas-sifying sentences as personal views and impersonal views and then using an ensemble method to per-form sentiment classification. Their method (de-noted as [ LI10 ] in Table ?? ) performs worse than ei-ther LDA or JST feature augmentation. To the best of our knowledge, the results achieved using JST feature augmentation are the state-of-the-art for both the MR and the MDS datasets. 6.3 Domain Adaptation We conducted domain adaptation experiments on the MDS dataset comprising of four different do-mains, Book (B), DVD (D), Electronics (E), and Kitchen appliances (K). We randomly split each do-main data into a training set of 1,600 instances and a test set of 400 instances. A classifier trained on the training set of one domain is tested on the test set of a different domain. We preformed 5 random splits and report the results averaged over 5 such runs. Comparison with Baseline Models
We compare our proposed approaches with two baseline models. The first one (denoted as  X  X ase X  in Table ?? ) is an ME classifier trained without adapta-tion. LDA results were generated from an ME clas-sifier trained on document vectors augmented with topics generated from the LDA model. The number of topics was set to 15. JST results were obtained in a similar way except that we used the polarity-bearing topics generated from the JST model. We also tested with adding pseudo-labeled examples from the JST model into the source domain for ME classifier training (following Algorithm ?? ), denoted as  X  X ST-PL X  in Table ?? . The document sentiment classification probability threshold  X  was set to 0.8. Finally, we performed feature selection by selecting the top 2000 features according to the information gain criteria ( X  X ST-IG X ) 7 .

There are altogether 12 cross-domain sentiment classification tasks. We showed the adaptation loss results in Table ?? where the result for each domain and for each method is averaged over all three pos-sible adaptation tasks by varying the source domain. The adaptation loss is calculated with respect to the in-domain gold standard classification result. For example, the in-domain goal standard for the Book domain is 79.96%. For adapting from DVD to Book, baseline achieves 72.25% and JST gives 76.45%. The adaptation loss is 7.71 for baseline and 3.51 for JST.

It can be observed from Table ?? that LDA only improves slightly compared to the baseline with an error reduction of 11%. JST further reduces the er-ror due to transfer by 27%. Adding pseudo-labeled examples gives a slightly better performance com-pared to JST with an error reduction of 36%. With feature selection, JST-IG outperforms all the other approaches with a relative error reduction of 53%. Domain Base LDA JST JST-PL JST-IG Book 10.8 9.4 7.2 6.3 5.2 DVD 8.3 6.1 4.8 4.4 2.9 Electr. 7.9 7.7 6.3 5.4 3.9 Kitch. 7.6 7.6 6.9 6.1 4.4 Average 8.6 7.7 6.3 5.5 4.1 Parameter Sensitivity There is only one parameters to be set in the JST-IG approach, the number of topics. We plot the clas-sification accuracy versus different topic numbers in Figure ?? with the number of topics varying between 1 and 200, corresponding to feature clusters varying between 3 and 600. It can be observed that for the relatively larger Book and DVD data sets, the accu-racies peaked at topic number 10, whereas for the relatively smaller Electronics and Kitchen data sets, the best performance was obtained at topic number 50. Increasing topic numbers results in the decrease of classification accuracy. Manually examining the extracted polarity topics from JST reveals that when the topic number is small, each topic cluster contains well-mixed words from different domains. How-ever, when the topic number is large, words under each topic cluster tend to be dominated by a single domain.
 Comparison with Existing Approaches
We compare in Figure ?? our proposed approach with two other domain adaptation algorithms for sentiment classification, SCL and SFA. Each set of bars represent a cross-domain sentiment classifica-tion task. The thick horizontal lines are in-domain sentiment classification accuracies. It is worth not-ing that our in-domain results are slightly different from those reported in ( ? ; ? ) due to different ran-dom splits. Our proposed JST-IG approach outper-forms SCL in average and achieves comparable re-sults to SFA. While SCL requires the construction of a reasonable number of auxiliary tasks that are use-ful to model  X  X ivots X  and  X  X on-pivots X , SFA relies on a good selection of domain-independent features for the construction of bipartite feature graph before running spectral clustering to derive feature clusters. On the contrary, our proposed approach based on the JST model is much simpler and yet still achieves comparable results. In this paper, we have studied polarity-bearing top-ics generated from the JST model and shown that by augmenting the original feature space with polarity-bearing topics, the in-domain supervised classi-fiers learned from augmented feature representation achieve the state-of-the-art performance on both the movie review data and the multi-domain sentiment dataset. Furthermore, using feature augmentation and selection according to the information gain cri-teria for cross-domain sentiment classification, our proposed approach outperforms SCL and gives sim-ilar results as SFA. Nevertheless, our approach is much simpler and does not require difficult parame-ter tuning.

There are several directions we would like to ex-plore in the future. First, polarity-bearing topics generated by the JST model were simply added into the original feature space of documents, it is worth investigating attaching different weight to each topic maybe in proportional to the posterior probability of sentiment label and topic given a word estimated by the JST model. Second, it might be interesting to study the effect of introducing a tradeoff parameter to balance the effect of original and new features. Finally, our experimental results show that adding pseudo-labeled examples by the JST model does not appear to be effective. We could possibly explore in-stance weight strategies ( ? ) on both pseudo-labeled examples and source domain training examples in order to improve the adaptation performance. This work was supported in part by the EC-FP7 projects ROBUST (grant number 257859).

