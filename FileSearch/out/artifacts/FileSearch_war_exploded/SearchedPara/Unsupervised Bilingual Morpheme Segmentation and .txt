 An enduring problem in statistical machine trans-lation is sparsity. The word alignment models of modern MT systems attempt to capture p ( e i | f j ) , the probability that token e i is a translation of f Underlying these models is the assumption that the word-based tokenization of each sentence is, if not optimal, at least appropriate for specifying a concep-tual mapping between the two languages.

However, when translating between unrelated lan-guages  X  a common task  X  disparate morphological systems can place an asymmetric conceptual bur-den on words, making the lexicon of one language much more coarse. This intensifies the problem of sparsity as the large number of word forms created through morphologically productive processes hin-ders attempts to find concise mappings between con-cepts.

For instance, Bulgarian adjectives may contain markings for gender, number, and definiteness. The following tree illustrates nine realized forms of the Bulgarian word for red , with each leaf listing the definite and indefinite markings.

Contrast this with English, in which this informa-tion is marked either on the modified word or by sep-arate function words.

In comparison to a language which isn X  X  mor-phologically productive on adjectives, the alignment model must observe nine times as much data (as-suming uniform distribution of the inflected forms) to yield a comparable statistic. In an area of research where the amount of data available plays a large role in a system X  X  overall performance, this sparsity can be extremely problematic. Further complications are created when lexical sparsity is compounded with the desire to build up alignments over increasingly larger contiguous phrases.

To address this issue we propose an alternative to word alignment: morpheme alignment , an align-ment that operates over the smallest meaningful sub-sequences of words. By striving to keep a direct 1-to-1 mapping between corresponding semantic units across languages, we hope to find better estimates for the alignment statistics. Our results show that this improves alignment quality.

In the following sections we describe an un-supervised dynamic graphical model approach to monolingual morphological segmentation and bilin-gual morpheme alignment using a linguistically mo-tivated statistical model. In a bilingual setting, the model relies on morpho-syntactic and lexical source-side information (part-of-speech, morpho-logical segmentation, dependency analysis) while learning a morpheme segmentation over the tar-get language. In a monolingual setting we intro-duce effective use of context by feature-rich mod-eling of the probabilities of morphemes, morpheme-transitions, and word boundaries. These additional sources of information provide powerful bias for un-supervised learning, without increasing the asymp-totic running time of the inference algorithm.
Used as a monolingual model, our system sig-nificantly improves the state-of-the-art segmenta-tion performance on three Arabic and Hebrew data-sets. Used as a bilingual model, our system out-performs the state-of-the-art WDHMM (He, 2007) word alignment model as measured by alignment er-ror rate (AER).

In agreement with some previous work on to-kenization/morpheme segmentation for alignment (Chung and Gildea, 2009; Habash and Sadat, 2006), we find that the best segmentation for alignment does not coincide with the gold-standard segmenta-tion and our bilingual model does not outperform our monolingual model in segmentation F-Measure. Our model defines the probability of a target lan-guage sequence of words (each consisting of a se-quence of morphemes), and alignment from target to source morphemes, given a source language se-quence of words (each consisting of a sequence of morphemes).

An example morpheme segmentation and align-ment of phrases in English-Arabic and English-Bulgarian is shown in Figure 1. In our task setting, the words of the source and target language as well as the morpheme segmentation of the source (En-glish) language are given. The morpheme segmen-tation of the target language and the alignments be-tween source and target morphemes are hidden. The source-side input, which we assume to be English, is processed with a gold morphological segmentation, part-of-speech, and dependency tree analysis. While these tools are unavailable in resource-poor languages, they are often available for at least one of the modeled languages in common translation tasks. This additional information then provides a source of features and conditioning infor-mation for the translation model.

Our model is derived from the hidden-markov model for word alignment (Vogel et al., 1996; Och and Ney, 2000). Based on it, we define a dynamic graphical model which lets us encode more lin-guistic intuition about morpheme segmentation and alignment: ( i ) we extend it to a hidden semi-markov model to account for hidden target morpheme seg-mentation; ( ii ) we introduce an additional observa-tion layer to model observed word boundaries and thus truly represent target sentences as words com-posed of morphemes, instead of just a sequence of tokens; ( iii ) we employ hierarchically smoothed models and log-linear models to capture broader context and to better represent the morpho-syntactic mapping between source and target languages. ( iv ) we enrich the hidden state space of the model to en-code morpheme types { prefix , suffix , stem } , in ad-dition to morpheme alignment and segmentation in-formation.

Before defining our model formally, we introduce some notation. Each possible morphological seg-mentation and alignment for a given sentence pair can be described by the following random variables:
Let  X  1  X  2 ... X  I denote I morphemes in the seg-mentation of the target sentence. For the Example in Figure 1 (a) I =5 and  X  1 = cherven ,  X  2 = i ... , and  X  = ia . Let b 1 ,b 2 ,...b I denote Bernoulli variables indicating whether there is a word boundary after morpheme  X  i . For our example, b 3 = 1 , b 5 = 1 , and the other b i are 0. Let c 1 ,c 2 ,...,c T denote the non-space characters in the target string, and wb 1 ,...,wb T denote Bernoulli variables indicating whether there is a word boundary after the corre-sponding target character. For our example, T = 14 (for the Cyrillic version) and the only wb variables that are on are wb 9 and wb 14 . The c and wb vari-ables are observed. Let s 1 s 2 ...s T denote Bernoulli segmentation variables indicating whether there is a morpheme boundary after the corresponding char-acter. The values of the hidden segmentation vari-ables s together with the values of the observed c and wb variables uniquely define the values of the morpheme variables  X  i and the word boundary vari-ables b i . Naturally we enforce the constraint that a given word boundary wb t = 1 entails a segmen-tation boundary s t = 1 . If we use bold letters to indicate a vector of corresponding variables, we have that c , wb , s =  X , b . We will define the assumed parametric form of the learned distribution using the  X , b but the inference algorithms are implemented in terms of the s and wb variables.

We denote the observed source language mor-phemes by e 1 ...e J . Our model makes use of ad-ditional information from the source which we will mention when necessary.

The last part of the hidden model state repre-sents the alignment between target and source mor-phemes and the type of target morphemes. Let ta i = [ a i ,t i ] , i = 1 ...I indicate a factored state where a i represents one of the J source words (or NULL) and t i represents one of the three morpheme types { prefix , suffix , stem } . a i is the source mor-pheme aligned to  X  i and t i is the type of  X  i .
We are finally ready to define the desired proba-bility of target morphemes, morpheme types, align-ments, and word boundaries given source: P (  X , ta , b | e ) =
We now describe each of the factors used by our model in more detail. The formulation makes ex-plicit the full extent of dependencies we have ex-plored in this work. By simplifying the factors we can recover several previously used models for monolingual segmentation and bilingual joint seg-mentation and alignment. We discuss the relation-ship of this model to prior work and study the impact of the novel components in our experiments.

When the source sentence is assumed to be empty (and thus contains no morphemes to align to) our model turns into a monolingual morpheme segmen-tation model, which we show exceeds the perfor-mance of previous state-of-the-art models. When we remove the word boundary component, reduce the order of the alignment transition, omit the morpho-logical type component of the state space, and retain only minimal dependencies in the morpheme trans-lation model, we recover the joint tokenization and alignment model based on IBM Model-1 proposed by (Chung and Gildea, 2009). 2.1 Morpheme Translation Model In the model equation, P T denotes the morpheme translation probability. The standard dependence on the aligned source morpheme is represented as a de-pendence on the state ta i and the whole annotated source sentence e . We experimented with multiple options for the amount of conditioning context to be included. When most context is used, there is a bi-gram dependency of target language morphemes as well as dependence on two previous boundary vari-ables and dependence on the aligned source mor-pheme e a
When multiple conditioning variables are used we assume a special linearly interpolated backoff form of the model, similar to models routinely used in lan-guage modeling.

As an example, suppose we estimate the mor-pheme translation probability as P T (  X  i | e a estimate this in the M-step, given expected joint counts c (  X  i ,e a from these as follows:
The lower order distributions are estimated recur-sively in a similar way:
For P 0 we used a unigram character language model. This hierarchical smoothing can be seen as an approximation to hierarchical Dirichlet priors with maximum aposteriori estimation.

Note how our explicit treatment of word bound-ary variables b i allows us to use a higher order de-pendence on these variables. If word boundaries are treated as morphemes on their own, we would need to have a four-gram model on target morphemes to represent this dependency which we are now repre-senting using only a bigram model on hidden mor-phemes. 2.2 Word Boundary Generation Model The P B distribution denotes the probability of gen-erating word boundaries. As a sequence model of sentences the basic hidden semi-markov model com-pletely ignores word boundaries. However, they can be powerful predictors of morpheme segments (by for example, indicating that common prefixes fol-low word boundaries, or that common suffixes pre-cede them). The log-linear model of (Poon et al., 2009) uses word boundaries as observed left and right context features, and Morfessor (Creutz and Lagus, 2007) includes boundaries as special bound-ary symbols which can inform about the morpheme state of a morpheme (but not its identity).

Our model includes a special generative process for boundaries which is conditioned not only on the previous morpheme state but also the previous two morphemes and other boundaries. Due to the fact that boundaries are observed their inclusion in the model does not increase the complexity of inference.
The inclusion of this distribution lets us estimate the likelihood of a word consisting of one,two,three, or more morphemes. It also allows the estimation of likelihood that particular morphemes are in the be-ginning/middle/end of words. Through the included factored state variable ta i word boundaries can also inform about the likelihood of a morpheme aligned to a source word of a particular pos tag to end a word. We discuss the particular conditioning con-text for this distribution we found most helpful in our experiments.

Similarly to the P T distribution, we make use of multiple context vectors by hierarchical smoothing of distributions of different granularities. 2.3 Distortion Model P
D indicates the distortion modeling distribution we use. 1 Traditional distortion models represent P ( a j | a j  X  1 , e ) , the probability of an alignment given the previous alignment, to bias the model away from placing large distances between the aligned tokens of consecutively sequenced tokens. In addition to modeling a larger state space to also predict mor-pheme types, we extend this model by using a spe-cial log-linear model form which allows the integra-tion of rich morpho-syntactic context. Log-linear models have been previously used in unsupervised learning for local multinomial distributions like this one in e.g. (Berg-Kirkpatrick et al., 2010), and for global distributions in (Poon et al., 2009).
The special log-linear form allows the inclusion of features targeted at learning the transitions among morpheme types and the transitions between corre-sponding source morphemes. The set of features with example values for this model is depicted in Table 3. The example is focussed on the features firing for the transition from the Bulgarian suffix te aligned to the first English morpheme  X  i  X  1 = te , t i  X  1 = suffix , a i  X  1 =1, to the Bulgarian root tsvet aligned to the third English morpheme  X  i = tsvet , t = root , a i =3. The first feature is the absolute dif-ference between a i and a i  X  1 + 1 and is similar to information used in other HMM word alignment models (Och and Ney, 2000) as well as phrase-translation models (Koehn, 2004). The alignment positions a i are defined as indices of the aligned source morphemes. We additionally compute distor-tion in terms of distance in number of source words that are skipped. This distance corresponds to the feature name WORD DISTANCE . Looking at both kinds of distance is useful to capture the intuition that consecutive morphemes in the same target word should prefer to have a higher proximity of their aligned source words, as compared to consecutive morphemes which are not part of the same target word. The binned distances look at the sign of the distortion and bin the jumps into 5 bins, pooling the distances greater than 2 together. The feature SAME TARGET WORD indicates whether the two consecu-tive morphemes are part of the same word. In this case, they are not. This feature is not useful on its own because it does not distinguish between differ-ent alignment possibilities for ta i , but is useful in conjunction with other features to differentiate the transition behaviors within and across target words. The DEP RELATION feature indicates the direct de-pendency relation between the source words con-taining the aligned source morphemes, if such rela-tionship exists. We also represent alignments to null and have one null for each source word, similarly to (Och and Ney, 2000) and have a feature to indicate null . Additionally, we make use of several feature conjunctions involving the null , same target word, and distance features. 2.4 Length Penalty Following (Chung and Gildea, 2009) and (Liang and Klein, 2009) we use an exponential length penalty on morpheme lengths to bias the model away from the maximum likelihood under-segmentation solu-tion. The form of the penalty is:
LP ( |  X  i | ) = 1
Here lp is a hyper-parameter indicating the power that the morpheme length is raised to. We fit this pa-rameter using an annotated development set, to op-timize morpheme-segmentation F1. The model is extremely sensitive to this value and performs quite poorly if such penalty is not used. 2.5 Inference We perform inference by EM training on the aligned sentence pairs. In the E-step we compute expected counts of all hidden variable configurations that are relevant for our model. In the M-step we re-estimate the model parameters (using LBFGS in the M-step for the distortion model and using count interpola-tion for the translation and word-boundary models).
The computation of expectations in the E-step is of the same order as an order two semi-markov chain model using hidden state labels of cardinality ( J  X  3 = number of source morphemes times num-ber of target morpheme types). The running time of the forward and backward dynamic programming passes is T  X  l 2  X  (3 J ) 2 , where T is the length of the target sentence in characters, J is the number of source morphemes, and l is the maximum mor-pheme length. Space does not permit the complete listing of the dynamic programming solution but it is not hard to derive by starting from the dynamic program for the IBM-1 like tokenization model of (Chung and Gildea, 2009) and extending it to ac-count for the higher order on morphemes and the factored alignment state space.

Even though the inference algorithm is low poly-nomial it is still much more expensive than the infer-ence for an HMM model for word-alignment with-out segmentation. To reduce the running time of the model we limit the space of considered morpheme boundaries as follows:
Given the target side of the corpus, we derive a list of K most frequent prefixes and suffixes using a simple trie-based method proposed by (Schone and Jurafsky, 2000). 2 After we determine a list of al-lowed prefixes and suffixes we restrict our model to allow only segmentations of the form : (( p *) r ( s *))+ where p and s belong to the allowed prefixes and suffixes and r can match any substring.

We determine the number of prefixes and suffixes to consider using the maximum recall achievable by limiting the segmentation points in this way. Re-stricting the allowable segmentations in this way not only improves the speed of inference but also leads to improvements in segmentation accuracy. For a majority of our testing we borrow the paral-lel phrases corpus used in previous work (Snyder and Barzilay, 2008), which we refer to as S&amp;B. The corpus consists of 6,139 short phrases drawn from English, Hebrew, and Arabic translations of the Bible. We use an unmodified version of this corpus for the purpose of comparing morphological segmentation accuracy. For evaluating morpheme alignment accuracy, we have also augmented the En-glish/Arabic subset of the corpus with a gold stan-dard alignment between morphemes. Here mor-phological segmentations were obtained using the previously-annotated gold standard Arabic morpho-logical segmentation, while the English was prepro-cessed with a morphological analyzer and then fur-ther hand annotated with corrections by two native speakers. Morphological alignments were manually annotated. Additionally, we evaluate monolingual segmentation models on the full Arabic Treebank (ATB), also used for unsupervised morpheme seg-mentation in (Poon et al., 2009). 4.1 Morpheme Segmentation We begin by evaluating a series of models which are simplifications of our complete model, to assess the impact of individual modeling decisions. We focus first on a monolingual setting, where the source sen-tence aligned to each target sentence is empty. Unigram Model with Length Penalty
The first model we study is the unigram mono-lingual segmentation model using an exponential length penalty as proposed by (Liang and Klein, 2009; Chung and Gildea, 2009), which has been shown to be quite accurate. We refer to this model as Model-UP (for unigram with penalty). It defines the probability of a target morpheme sequence as fol-lows: (  X  1 ... X  I ) = (1  X   X  ) Q I i =1  X P T (  X  i ) LP ( |  X 
This model can be (almost) recovered as a spe-cial case of our full model, if we drop the transition and word boundary probabilities, do not model mor-pheme types, and use no conditioning for the mor-pheme translation model. The only parameter not present in our model is the probability  X  of gener-ating a morpheme as opposed to stopping to gener-ate morphemes (with probability 1  X   X  ). We exper-imented with this additional parameter, but found it had no significant impact on performance, and so we do not report results including it.

We select the value of the length penalty power by a gird search in the range 1.1 to 2.0, using .1 in-crements and choosing the values resulting in best performance on a development set containing 500 phrase pairs for each language. We also select the optimal number of prefixes/suffixes to consider by measuring performance on the development set. 3 Morpheme Type Models
The next model we consider is similar to the un-igram model with penalty, but introduces the use of the hidden ta states which indicate only mor-pheme types in the monolingual setting. We use the ta states and test different configurations to de-rive the best set of features that can be used in the distortion model utilizing these states, and the mor-pheme translation model. We consider two vari-ants: (1) Model-HMMP -basic (for HMM model with length penalty), which includes the hidden states but uses them with a simple uniform transition matrix P ( ta i | ta i  X  1 ,b i  X  1 ) (uniform over allowable transitions but forbidding the prefixes from transi-tioning directly to suffixes, and preventing suffixes from immediately following a word boundary), and (2) a richer model Model-HMMP which is allowed to learn a log-linear distortion model and a feature rich translation model as detailed in the model defi-nition. This model is allowed to use word boundary information for conditioning (because word bound-aries are observed), but does not include the P B pre-dictive word boundary distribution.
 Full Model with Word Boundaries
Finally we consider our full monolingual model which also includes the distribution predicting word boundary variables b i . We term this model Model-FullMono . We detail the best context features for the conditional P D distribution for each language. We initialize this model with the morpheme trans-lation unigram distribution of Model HMMP -basic, trained for 5 iterations.

Table 4 details the test set results of the different model configurations, as well as previously reported results on these datasets. For our main results we use the automatically derived list of prefixes and suffixes to limit segmentation points. The names of models that use such limited lists are prefixed by Dict in the Table. For comparison, we also report the results achieved by models that do not limit the segmenta-tion points in this way.
 As we can see the unigram model with penalty, Dict-Model-UP , is already very strong, especially on the S&amp;B Arabic dataset. When the segmenta-tion points are not limited, its performance is much worse. The introduction of hidden morpheme states in Dict-HMMP-basic gives substantial improvement on Arabic and does not change results much on the other datasets. A small improvement is observed for the unconstrained models. 4 When our model in-cludes all components except word boundary pre-diction, Dict-Model-HMMP , the results are substan-tially improved on all languages. Model-HMMP is also the first unconstrained model in our sequence to approach or surpass previous state-of-the-art seg-mentation performance.

Finally, when the full model Dict-MonoFull is used, we achieve a substantial improvement over the previous state-of-the-art results on all three cor-pora, a 6.5 point improvement on Arabic, 6.2 point improvement on Hebrew, and a 9.3 point improve-ment on ATB. The best configuration of this model uses the same distortion model for all languages: us-ing the morph state transition and boundary features. The translation models used only t i for Hebrew and ATB and t i and  X  i  X  1 for Arabic. Word bound-ary was predicted using t i in Arabic and Hebrew, and additionally using b i  X  1 and b i  X  2 for ATB. The unconstrained models without affix dictionaries are also very strong, outperforming previous state-of-the-art models. For ATB, the unconstrained model slightly outperforms the constrained one.

The segmentation errors made by this system shed light on how it might be improved. We find the dis-tributions over the frequencies of particular errors follow a Zipfian skew across both S&amp;B datasets, with the Arabic being more pronounced (the most frequent error being made 27 times, with 627 er-rors being made just once) in comparison with the Hebrew (with the most frequent error being made 19 times, and with 856 isolated errors). However, in both the Arabic and Hebrew S&amp;B tasks we find that a tendency to over-segment certain characters off of their correct morphemes and on to other fre-quently occurring, yet incorrect, particles is actually the cause of many of these isolated errors. In Ara-bic the system tends to over segment the character aleph (totally about 300 errors combined). In He-brew the source of error is not as overwhelmingly directed at a single character, but yod and he , the latter functioning quite similarly to the problematic Arabic character and frequently turn up in the corre-sponding places of cognate words in Biblical texts.
We should note that our models select a large number of hyper-parameters on an annotated devel-opment set, including length penalty, hierarchical smoothing parameters  X  , and the subset of variables to use in each of three component sub-models. This might in part explain their advantage over previous-state-of-the-art models, which might use fewer (e.g. (Poon et al., 2009) and (Snyder and Barzilay, 2008)) or no specifically tuned for these datasets hyper-parameters (Morfessor (Creutz and Lagus, 2007)). 4.2 Alignment Next we evaluate our full bilingual model and a sim-pler variant on the task of word alignment. We use the morpheme-level annotation of the S&amp;B English-Arabic dataset and project the morpheme alignments to word alignments. We can thus compare align-ment performance of the results of different segmen-tations. Additionally, we evaluate against a state-of-the-art word alignment system WDHMM (He, 2007), which performs comparably or better than IBM-Model4. The table in Figure 5 presents the re-sults. In addition to reporting alignment error rate for different segmentation models, we report their morphological segmentation F1.

The word-alignment WDHMM model performs best when aligning English words to Arabic words (using Arabic as source). In this direction it is able to capture the many-to-one correspondence be-tween English words and arabic morphemes. When we combine alignments in both directions using the standard grow-diag-final method, the error goes up.
We compare the (Chung and Gildea, 2009) model (termed Model-1) to our full bilingual model. We can recover Model-1 similarly to Model-UP , except now every morpheme is conditioned on an aligned source morpheme. Our full bilingual model outper-forms Model-1 in both AER and segmentation F1. The specific form of the full model was selected as in the previous experiments, by choosing the model with best segmentations of the development set.
For Arabic, the best model conditions target mor-phemes on source morphemes only, uses the bound-ary model with conditioning on number of mor-phemes in the word, aligned source part-of-speech, and type of target morpheme. The distortion model uses both morpheme and word-based absolute dis-tortion, binned distortion, morpheme types of states, and aligned source-part-of-speech tags. Our best model for Arabic outperforms WDHMM in word alignment error rate. For Hebrew, the best model uses a similar boundary model configuration but a simpler uniform transition distortion distribution.
Note that the bilingual models perform worse than the monolingual ones in segmentation F1. This finding is in line with previous work showing that the best segmentation for MT does not necessarily agree with a particular linguistic convention about what morphemes should contain (Chung and Gildea, 2009; Habash and Sadat, 2006), but contradicts other results (Snyder and Barzilay, 2008). Further experimentation is required to make a general claim.
We should note that the Arabic dataset used for word-alignment evaluation is unconventionally small and noisy (the sentences are very short phrases, automatically extracted using GIZA++). Thus the phrases might not be really translations, and the sentence length is much smaller than in stan-dard parallel corpora. This warrants further model evaluation in a large-scale alignment setting. This work is most closely related to the unsupervised tokenization and alignment models of Chung and Gildea (2009), Xu et al. (2008), Snyder and Barzilay (2008), and Nguyen et al. (2010).

Chung &amp; Gildea (2009) introduce a unigram model of tokenization based on IBM Model-1,which is a special case of our model. Snyder and Barzi-lay (2008) proposes a hierarchical Bayesian model that combines the learning of monolingual segmen-tations and a cross-lingual alignment; their model is very different from ours.
 Incorporating morphological information into MT has received reasonable attention. For exam-ple, Goldwater &amp; McClosky (2005) show improve-ments when preprocessing Czech input to reflect a morphological decomposition using combinations of lemmatization, pseudowords, and morphemes. Yeniterzi and Oflazer (2010) bridge the morpholog-ical disparity between languages in a unique way by effectively aligning English syntactic elements (function words connected by dependency relations) to Turkish morphemes, using rule-based postpro-cessing of standard word alignment. Our work is partly inspired by that work and attempts to auto-mate both the morpho-syntactic alignment and mor-phological analysis tasks. We have described an unsupervised model for mor-pheme segmentation and alignment based on Hid-den Semi-Markov Models. Our model makes use of linguistic information to improve alignment qual-ity. On the task of monolingual morphological seg-mentation it produces a new state-of-the-art level on three datasets. The model shows quantitative im-provements in both word segmentation and word alignment, but its true potential lies in its finer-grained interpretation of word alignment, which will hopefully yield improvements in translation quality. Acknowledgements
We thank the ACL reviewers for their valuable comments on earlier versions of this paper, and Michael J. Burling for his contributions as a corpus annotator and to the Arabic aspects of this paper.
