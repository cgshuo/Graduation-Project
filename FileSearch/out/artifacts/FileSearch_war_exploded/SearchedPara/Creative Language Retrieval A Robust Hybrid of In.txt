 Words should not always be taken at face value. Figurative devices like metaphor can communicate far richer meanings than are evident from a super-ficial  X  and perhaps literally nonsensical  X  reading. Figurative Language Processing (FLP) thus uses a variety of special mechanisms and representations, to assign non-literal meanings not just to meta-phors, but to similes, analogies, epithets, puns and other creative uses of language (see Martin, 1990; Fass, 1991; Way, 1991; Indurkhya, 1992; Fass, 1997; Barnden, 2006; Veale and Butnariu, 2010). solutions to the procedural and representational challenges of metaphor, and FLP more generally, ranging from flexible representations (e.g. the preference semantics of Wilks (1978) and the col-lative semantics of Fass (1991, 1997)) to processes of cross-domain structure alignment (e.g. structure mapping theory ; see Gentner (1983) and Falken -hainer et al. 1989) and even structural inversion (Veale, 2006). Though thematically related, each approach to FLP is broadly distinct, giving com-putational form to different cognitive demands of creative language: thus, some focus on inter-domain mappings (e.g. Gentner, 1983) while oth-ers focus more on intra-domain inference (e.g. Ba-rnden, 2006). However, while computationally interesting, none has yet achieved the scalability or robustness needed to make a significant practical impact outside the laboratory. Moreover, such systems tend to be developed in isolation, and are rarely designed to cohere as part of a larger frame-work of creative reasoning (e.g. Boden, 1994).
 scalable and robust, and its results translate easily from the laboratory into practical applications (e.g. see Salton, 1968; Van Rijsbergen, 1979). Whereas FLP derives its utility and its fragility from its a t-tempts to identify deeper meanings beneath the surface, the widespread applicability of IR stems directly from its superficial treatment of language and meaning. IR does not distinguish between creative and conventional uses of language, or between literal and non-literal meanings. IR is also remarkably modular: its components are designed to work together interchangeably, from stemmers and indexers to heuristics for query expansion and document ranking. Yet, because IR treats all la n-guage as literal language, it relies on literal matching between queries and the texts that they retrieve. Documents are retrieved precisely be-cause they contain stretches of text that literally resemble the query. This works well in the main, but it means that IR falls flat when the goal of re -trieval is not to identify relevant documents but to retrieve new and creative ways of expressing a given idea. To retrieve creative language, and to be potentially surprised or inspired by the results, one needs to facilitate a non-literal relationship be-tween queries and the texts that they match.
 productive hybrid of both paradigms. If the most robust elements of FLP are used to provide new non-literal query operators for IR, then IR can be used to retrieve potentially new and creative ways of speaking about a topic from a large text collec-tion. In return, IR can provide a stable, robust and extensible platform on which to use these oper a-tors to build FLP systems that exhibit linguistic creativity. In the next section we consider the re-lated work on which the current realization of these ideas is founded, before presenting a specific trio of new semantic query operators in section 3. We describe three simple but practical applications of this creative IR paradigm in section 4. Empirical support for the FLP intuitions that underpin our new operators is provided in section 5. The paper concludes with some closing observations about future goals and developments in section 6. IR works on the premise that a user can turn an information need into an effective query by antic i-pating the language that is used to talk about a given topic in a target collection. If the collection uses creative language in speaking about a topic, then a query must also contain the seeds of this creative language. Veale (2004) introduces the idea of creative information retrieval to explore how an IR system can itself provide a degree of creative anticipation, acting as a mediator between the li t-eral specification of a meaning and the retrieval of creative articulations of this meaning. This antici -pation ranges from simple re-articulation (e.g. a text may implicitly evoke  X  Qur X  X n  X  even if it only contains  X  Muslim bible  X ) to playful allusions and epithets (e.g. the CEO of a rubber company may be punningly described as a  X  rubber baron  X ). A crea-tive IR system may even anticipate out-of-dictionary words, like chocoholic and sexoholic . expansion techniques to automatically bolster a user X  X  query with additional keywords or weights, to permit the retrieval of relevant texts it might not otherwise match (e.g. Vernimb, 1977; Voorhees, 1994). Techniques vary, from the use of stemmers and morphological analysis to the use of thesauri (such as WordNet; see Fellbaum, 1998; Voorhees, 1998) to pad a query with synonyms, to the use of statistical analysis to identify more appropriate context-sensitive associations and near-synonyms (e.g. Xu and Croft, 1996). While some techniques may suggest conventional metaphors that have be-come lexicalized in a language, they are unlikely to identify relatively novel expressions. Crucially, expansion improves recall at the expense of overall precision, making automatic techniques even more dangerous when the goal is to retrieve results that are creative and relevant. Creative IR must balance a need for fine user control with the statistical breadth and convenience of automatic expan sion. vious area of overlap for IR and FLP. Distribu -tional analyses of large corpora have been shown to produce nuanced models of lexical similarity (e.g. Weeds and Weir, 2005) as well as context-sensitive thesauri for a given domain (Lin, 1998). Hearst (1992) shows how a pattern like  X  Xs and other Ys  X  can be used to construct more fluid, context-specific taxonomies than those provided by WordNet (e.g.  X  athletes and other celebrities  X  suggests a context in which athletes are viewed as stars). Mason (2004) shows how statistical analysis can automatically detect and extract conventional metaphors from corpora, though creative meta-phors still remain a tantalizing challenge. Hanks (2005) shows how the  X  Xs like A, B and C  X  con -struction allows us to derive flexible ad-hoc cate-gories from corpora, while Hanks (2006) argues for a gradable conception of metaphoricity based on word-sense distributions in corpora.  X  as X as Y  X  to harvest a great many common similes and their underlying stereotypes from the web (e.g.  X  X s hot as an oven X ), while Veale and Hao (2010) show that the pattern  X  about as X as Y  X  retrieves an equally large collection of creative (if mostly ironic) comparisons. These authors demo n-strate that a large vocabulary of stereotypical ideas (over 4000 nouns) and their salient properties (over 2000 adjectives) can be harvested from the web. of new semantic operators, that use corpus-derived knowledge to support finely controlled non-literal matching and automatic query expansion. In language, creativity is always a matter of co n-strual. While conventional IR queries articulate a need for information, creative IR queries articulate a need for expressions to convey the same meaning in a fresh or unusual way. A query and a matching phrase can be figuratively construed to have the same meaning if there is a non-literal mapping between the elements of the query and the ele-ments of the phrase. In creative IR, this non-literal mapping is facilitated by the query X  X  explicit use of semantic wildcards (e.g. see Mihalcea, 2002).
 The wildcard * is a boon for power-users of the Google search engine, precisely because it allows users to focus on the retrieval of matching phrases rather than relevant documents. For instance, * can be used to find alternate ways of instantiating a culturally-established linguistic pattern, or  X  X no w-clone X : thus, the Google queries  X  In * no one can hear you scream  X  (from Alien ),  X  Reader, I * him  X  (from Jane Eyre ) and  X  This is your brain on *  X  (from a famous TV advert) find new ways in which old patterns have been instantiated for hu-morous effect on the Web. On a larger scale, Veale and Hao (2007) used the * wildcard to harvest web similes, but reported that harvesting cultural data with wildcards is not a straightforward process. Google and other engines are designed to maxi -mize document relevance and to rank results ac-cordingly. They are not designed to maximize the diversity of results, or to find the largest set of wildcard bindings. Nor are they designed to find the most common place bindings for wildcards.

Following Guilford X  X  (1950) pioneering work, diversity is widely considered a key component in the psychology of creativity. By focusing on the phrase level rather than the document level, and by returning phrase sets rather than document sets, creative IR maximizes diversity by finding as many bindings for its wildcards as a text collection will support. But we need more flexible and pre-cise wildcards than *. We now consider three va-rieties of semantic wildcards that build on insights from corpus-linguistic approaches to FLP. 3.1 The Neighborhood Wildcard ?X Semantic query expansion replaces a query term X with a set {X, X 1 , X 2 , ..., X n } where each X related to X by a prescribed lexico-semantic rela-tionship, such as synonymy, hyponymy or meronymy. A generic, lightweight resource like WordNet can provide these relations, or a richer ontology can be used if one is available (e.g. see Navigli and Velardi, 2003). Intuitively, each query term suggests other terms from its semantic neig h-borhood, yet there are practical limits to this intu i-tion. X i may not be an obvious or natural substitute for X. A neighborhood can be drawn too small, impacting recall, or too large, impacting precision. both semantic and pragmatic. As noted in Hanks (2005), languages provide constructions for buil d-ing ad-hoc sets of items that can be considered comparable in a given context. For instance, a c o-ordination of bare plurals suggests that two ideas are related at a generic level, as in  X  priests and imams  X  or  X  mosques and synagogues  X . More gen -erally, consider the pattern  X  X and Y  X , where X and Y are proper-names (e.g.,  X  Zeus and Hera  X ), or X and Y are inflected nouns or verbs with the same inflection (e.g., the plurals  X  cats and dogs  X  or the verb forms  X  kicking and screaming  X ). Millions of matches for this pattern can be found in the Google 3-grams (Brants and Franz, 2006), allowing us to build a map of comparable terms by linking the root-forms of X and Y with a similarity score o b-tained via a WordNet-based measure (e.g. see Bu-danitsky and Hirst (2006) for a good selection). defined as {X, X 1 , X 2 , ..., X n }, so that for each X , the Google 3-grams contain  X  X+inf and X +inf  X  or  X  X+inf and X i +inf  X . The boundaries of neighborhoods are thus set by usage patterns: if ?X denotes the neighborhood of X, then ?artist matches not just artist , composer and poet , but studio , portfolio and gallery, and many other terms that are semantically dissimilar but prag-matically linked to artist . Since each X i  X  ?X is ranked by similarity to X , query matches can also be ranked by similarity.
 element of {X, X i , X 2 , ..., X n }, where each X pragmatically reinforces X, and X pragmatically reinforces each X i . To ensure X and X i really are mutually reinforcing adjectives, we use the double-ground simile pattern  X  as X and X i as  X  to harvest {X 1 , ..., X n } for each X. Moreover, to maximize recall, we use the Google API (rather than Google ngrams) to harvest suitable bindings for X and X i from the web. For example, @witty = { charming, clever, intelli gent, entertaining, ..., edgy, fun }. 3.2 The Cultural Stereotype Wildcard @X Dickens claims in A Christmas Carol that  X  X he wisdom of a people is in the simile X . Similes e x-ploit familiar stereotypes to describe a less familiar concept, so one can learn a great deal about a cul -ture and its language from the similes that have the most currency (Taylor, 1954). The wildcard @X builds on the results of Veale and Hao (2007) to allow creative IR queries to retrieve matches on the basis of cultural expectations. This foundation provides a large set of adjectival features (over 2000) for a larger set of nouns (over 4000) deno t-ing stereotypes for which these features are salient. of the set {A 1 , A 2 , ..., A n }, where each A adjective denoting a stereotypical property of N. For example, @diamond matches any element of { transparent, immutable, beautiful, tough, expe n-sive, valuable, shiny, bright, lasting, desirable, strong, ..., hard } . If A is an adjective, then @A matches any element of the set {N 1 , N 2 , ..., N where each N i is a noun denoting a stereotype for which A is a culturally established property. For example, @tall matches any element of { giraffe, skyscraper, tree, redwood, tower, sunflower, ligh t-house, beanstalk, rocket, ..., super model }.
 so one can argue that stereotypes and clich X s are little or no use to a creative IR system. Yet, as demonstrated in Fishlov (1992), creative language is replete with stereotypes, not in their clich X d guises, but in novel and often incongruous comb i-nations. The creative value of a stereotype lies in how it is used, as we X  X l show later in section 4. 3.3 The Ad-Hoc Category Wildcard ^X Barsalou (1983) introduced the notion of an ad-hoc category , a cross-cutting collection of often disparate elements that cohere in the context of a specific task or goal. The ad-hoc nature of these categories is reflected in the difficulty we have in naming them concisely: the cumbersome  X  X hings to take on a camping trip X  is Barsalou X  X  most cited example. But ad-hoc categories do not replace natural kinds; rather, they supplement an existing system of more-or-less rigid categories, such as the categories found in WordNet.
 element of {C 1 , C 2 , ..., C n }, where each C member of the category named by C. ^C can de-note a fixed category in a resource like WordNet or even Wikipedia; thus, ^fruit matches any member of { apple, orange, pear, ..., lemon } and ^animal any member of {dog, cat, mouse, ..., deer, fox} .
Ad-hoc categories arise in creative IR when the results of a query  X  or more specifically, the bin d-ings for a query wildcard  X  are funneled into a new user-defined category. For instance, the query  X  ^fruit juice  X  matches any phrase in a text collec-tion that denotes a named fruit juice, from  X  lemon juice  X  to  X  pawpaw juice  X . A user can now funnel the bindings for ^fruit in this query into an ad-hoc category juicefruit , to gather together those fruits that are used for their juice. Elements of ^juicefruit are ranked by the corpus frequencies discovered by the original query; low-frequency juicefruit mem-bers in the Google ngrams include coffee , raisin , almond , carob and soybean . Ad-hoc categories allow users of IR to remake a category system in their own image, and create a new vocabulary of categories to serve their own goals and interests, as when  X  ^food pizza  X  is used to suggest disparate members for the ad-hoc category pizzatopping . elements it can funnel into an ad-hoc category. We now consider how basic semantic wildcards can be combined to generate even more diverse results. 3.4 Compound Operators Each wildcard maps a query term onto a set of e x-pansion terms. The compositional semantics of a wildcard combination can thus be understood in set-theoretic terms. The most obvious and useful combinations of ? , @ and ^ are described below: ?? Neighbor-of-a-neighbor : if ?X matches any element of {X, X 1 , X 2 , ..., X n } then ??X matches any of ?X  X  ?X 1  X  ...  X  ?X n , where the ranking of X ij in ??X is a function of the ranking of X ?X and the ranking of X ij in ?X i . Thus, ??artist matches far more terms than ?artist , yielding more diversity, more noise, and more creative potential. @@ Stereotype-of-a-stereotype : if @X matches any element of {X 1 , X 2 , ..., X n } then @@X matches any of @X 1  X  @X 2  X  ...  X  @X n . For instance, @@diamond matches any stereotype that shares a salient property with diamond , and @@sharp matches any salient property of any noun for which sharp is a stereotypical property. ?@ Neighborhood-of-a-stereotype : if @X matches any element of {X 1 , X 2 , ..., X n } then ?@X matches any of ?X 1  X  ?X 2  X  ...  X  ?X n . Thus, ?@cunning matches any term in the pragmatic neighborhood of a stereotype for cunning , while ?@knife matches any property that mutually rei n-forces any stereotypical property of knife @? Stereotypes-in-a-neighborhood : if ?X matches any of {X, X 1 , X 2 , ..., X n } then @?X matches any of @X  X  @X 1  X  ...  X  @X n . Thus, @?corpse matches any salient property of any stereotype in the neighborhood of corpse , while @?fast matches any stereotype noun with a salient property that is similar to, and reinforced by, fast . ?^ Neighborhood-of-a-category : if ^C matches any of {C, C 1 , C 2 , ..., C n } then ?^C matches any of ?C  X  ?C 1  X  ...  X  ?C n . ^? Categories-in-a-neighborhood : if ?X matches any of {X, X 1 , X 2 , ..., X n } then ^?X matches any of ^X  X  ^X 1  X  ...  X  ^X n . @^ Stereotypes-in-a-category : if ^C matches any of {C, C 1 , C 2 , ..., C n } then @^C matches any of @C  X  @C 1  X  ...  X  @C n . ^@ Members-of-a-stereotype-category : if @X matches any element of {X 1 , X 2 , ..., X n } then ^@X matches any of ^X 1  X  ^X 2  X  ...  X  ^X n . So ^@strong matches any member of a category (such as warrior ) that is stereotypically strong . The Google ngrams comprise a vast array of ex -tracts from English web texts, of 1 to 5 words in length (Brants and Franz, 2006). Many extracts are well-formed phrases that give lexical form to many different ideas. But an even greater number of ngrams are not linguistically well-formed. The Google ngrams can be seen as a lexicalized idea space , embedded within a larger sea of noise. Creative IR can be used to explore this idea space. space of lexicalized ideas that is implied by a large corpus, with each successive match leading the user deeper into the space. By turning matches into queries, a user can perform a creative exploration of the space of phrases and ideas (see Boden, 1994) while purposefully sidestepping the noise of the Google ngrams. Consider the pleonastic query  X  Catholic ?pope  X . Retrieved phrases include, in descending order of lexical similarity,  X  Catholic president  X ,  X  Catholic politician  X ,  X  Catholic king  X ,  X  Catholic emperor  X  and  X  Catholic patriarch  X . Suppose a user selects  X  Catholic king  X : the new query  X  Catholic ?king  X  now retrieves  X  Catholic queen  X ,  X  Catholic court  X ,  X  Catholic knight  X ,  X  Catholic kingdom  X  and  X  Catholic throne  X . The subsequent query  X  Catholic ?kingdom  X  in turn retrieves  X  Catholic dynasty  X  and  X  Catholic army  X , among others. In this way, creative IR allows a user to explore the text-supported ramifications of a metaphor like Popes are Kings (e.g., if popes are kings, they too might have queens, command ar-mies, found dynasties, or sit on thrones).
 their own explorations of language. The more wildcards a query contains, the more degrees of freedom it offers to the explorer. Thus, the query  X  ?scientist  X  X  ?laboratory  X  uncovers a plethora of analogies for the relationship between scientists and their labs: matches in the Google 3-grams in -clude  X  technician X  X  workshop  X ,  X  artist X  X  studio  X ,  X  chef X  X  kitchen  X  and  X  gardener X  X  green house  X . 4.1 Metaphors with Aristotle For a term X, the wildcard ?X suggests those other terms that writers have considered to be compara-ble to X, while ??X extrapolates beyond the co r-pus evidence to suggest an even larger space of potential comparisons. A meaningful metaphor can be constructed for X by framing X with any stereotype to which it is pragmatically comparable, that is, any stereotype in ?X . Collectively, these stereotypes can impart the properties @?X to X. the property P to X. The set @P contains those stereotypes for which P is culturally salient. Thus, close metaphors for X (what MacCormac (1985) dubs epiphors ) in the context of P are suggested by ?X  X  @P . More distant metaphors (MacCormac dubs these diaphors ) are suggested by ??X  X  @P . For instance, to describe a scholar as wise , one can use poet , yogi , philosopher or rabbi as compari -sons. Yet even a simple metaphor will impart other features to a topic. If ^P S denotes the ad-hoc set of additional properties that may be inferred for X when a stereotype S is used to convey property P, then ^P S = ?P  X  @@P . The query  X  ^P S X  X  now finds corpus-attested elements of ^P S that can meaningfully be used to modify X.
 online metaphor generator, to generate targeted metaphors that highlight a property P in a topic X. Aristotle uses the Google ngrams to supply values for ?X , ??X , ?P and ^P S . The system can be ac-cessed at: www.educatedinsolence.com/aristotle 4.2 Expressing Attitude with Idiom Savant Our retrieval goals in IR are often affective in na-ture: we want to find a way of speaking about a topic that expresses a particular sentiment and car-ries a certain tone. However, affective categories are amongst the most cross-cutting structures in language. Words for disparate ideas are grouped according to the sentiments in which they are ge n-erally held. We respect judges but dislike critics ; we respect heroes but dislike killers ; we respect sharpshooters but dislike snipers ; and respect r e-bels but dislike insurgents . It seems therefore that the particulars of sentiment are best captured by a set of culture-specific ad-hoc categories.
 ^posword and ^negword , to hold the most obvi-ously positive or negative words in Whissell X  X  (1989) Dictionary of Affect . We then grow these categories to include additional reinforcing ele-ments from their pragmatic neighborhoods, ?^posword and ?^negword . As these categories grow, so too do their neighborhoods, allowing a simple semi-automated bootstrapping process to significantly grow the categories over several it -erations. We construct two phrasal equivalents of these categories, ^posphrase and ^negphrase , using the queries  X  ^posword -^pastpart  X  (e.g., matching  X  high-minded  X  and  X  sharp-eyed  X ) and  X  ^negword -^pastpart  X  (e.g., matching  X  flat-footed  X  and  X  dead-eyed  X ) to mine affective phrases from the Google 3-grams. The resulting ad-hoc categories (of ~600 elements each) are manually edited to fix any obvious mis-categorizations.
 ^posphrase and ^negphrase to suggest flattering and insulting epithets for a given topic. The query  X  ^posphrase ?X  X  retrieves phrases for a topic X that put a positive spin on a related topic to which X is sometimes compared, while  X  ^negphrase ?X  X  conversely imparts a negative spin. Thus, for politician , the Google 4-grams provide the flatter-ing epithets  X  much-needed leader  X ,  X  awe-inspiring leader  X ,  X  hands-on boss  X  and  X  far-sighted states -man  X , as well as insults like  X  power-mad leader  X ,  X  back-stabbing boss  X ,  X  ice-cold technocrat  X  and  X  self-promoting hack  X . Riskier diaphors can be retrieved via  X  ^posphrase ??X  X  and  X  ^negphrase ??X  X . Idiom Savant is accessible online at: www.educatedinsolence.com/idiom-savant/ 4.3 Poetic Similes with The Jigsaw Bard The well-formed phrases of a large corpus can be viewed as the linguistic equivalent of objets trou-v X s in art: readymade or  X  X ound X  objects that might take on fresh meanings in a creative context. The phrase  X  robot fish  X , for instance, denotes a more-or-less literal object in the context of autonomous robotic submersibles, but can also be used to co n-vey a figurative meaning as part of a creative com-parison (e.g.,  X  he was as cold as a robot fish  X ). are most resonant when they combine mutually-reinforcing (if distant) ideas, to create memorable images and evoke nuanced feelings. Building on Fishlov X  X  argument, creative IR can be used to turn the readymade phrases of the Google ngrams into vehicles for creative comparison. For a topic X and a property P, simple similes of the form  X  X is as P as S  X  are easily generated, where S  X  @P  X  ??X . (NPS). However, the query  X  ?P @P  X  will retrieve corpus-attested elaborations of stereotypes in @P to suggest similes of the form  X  X is as P as P 1 where P 1  X  ?P . These similes exhibit elements of what Fishlov dubs poetic similes (PS). Why say  X  as cold as a fish  X  when you can say  X  as cold as a wet fish  X ,  X  a dead haddock  X ,  X  a wet January  X ,  X  a frozen corpse  X , or  X  a heartless robot  X ? Complex queries can retrieve more creative combinations, so  X  @P @P  X  (e.g.  X  robot fish  X  or  X  snow storm  X  for cold ),  X  ?P @P @P  X  (e.g.  X  creamy chocolate mousse  X  for rich ) and  X  @P -^pastpart @P  X  (e.g.  X  snow-covered graveyard  X  and  X  bullet-riddled corpse  X  for cold ) each retrieve ngrams that blend two different but overlapping stereo types.
 similes of the form  X  as P and ?P as S  X , where S @P  X  @?P . While one can be  X  as rich as a fat king  X , something can be  X  as rich and enticing as a chocolate truffle  X ,  X  a chocolate brownie  X ,  X  a chocolate fruitcake  X , and even  X  a chocolate king  X . harnesses the readymades of the Google ngrams to formulate novel similes from existing phrases. By mapping blended properties to ngram phrases that combine multiple stereotypes, the Bard expands its generative scope considerably, allowing this appli -cation to generate hundreds of thousands of evoca-tive comparisons. The Bard can be accessed online at: www.educatedinsolence.com/jigsaw/ Though ^ is the most overtly categorical of our wildcards, all three wildcards  X  ? , @ and ^  X  are categorical in nature. Each has a semantic or pragmatic membership function that maps a term onto an expansion set of related members. The membership functions for specific uses of ^ are created in an ad-hoc fashion by the users that e x-ploit it; in contrast, the membership functions for uses of @ and ? are derived automatically, via pattern-matching and corpus analysis. Nonetheless, ad-hoc categories in creative IR are often popu-lated with the bindings produced by uses of @ and ? and combinations thereof. In a sense, ?X and @X and their variations are themselves ad-hoc categories. But how well do they serve as catego -ries? Are they large, but noisy? Or too small, with limited coverage? We can evaluate the effective-ness of ? and @ , and indirectly that of ^ too, by comparing the use of ? and @ as category builders to a hand-crafted gold standard like WordNet.
 as a gold standard for categorization experiments, and we replicate here the experimental set-up of Almuhareb and Poesio (2004, 2005), which is de-signed to measure the effectiveness of web-acquired conceptual descriptions. Almuhareb and Poesio choose 214 English nouns from 13 of WordNet X  X  upper-level semantic categories, and proceed to harvest property values for these con-cepts from the web using the Hearst-like pattern  X  a|an|the * C is|was  X . This pattern yields a com-bined total of 51,045 values for all 214 nouns; these values are primarily adjectives, such as hot and black for coffee , but noun-modifiers of C are also allowed, such as fruit for cake . They also har-vest 8934 attribute nouns, such as temperature and color , using the query  X  the * of the C is|was  X . These values and attributes are then used as the basis of a clustering algorithm to partition the 214 nouns back into their original 13 categories. Com-paring these clusters with the original WordNet-based groupings, Almuhareb and Poesio report a cluster accuracy of 71.96% using just values like hot and black (51,045 values), an accuracy of 64.02% using just attributes like temperature and color (8,934 attributes), and an accuracy of 85.5% using both together (a combined 59,979 features). scribe a noun X for purposes of categorization? Let ^AP denote the set of 214 WordNet nouns used by Almuhareb and Poesio. Then @^AP denotes a set of 2,209 adjectival properties; this should be con-trasted with the space of 51,045 adjectival values used by Almuhareb and Poesio. Using the same clustering algorithm over this feature set, @X achieves a clustering accuracy (as measured via cluster purity) of 70.2% , compared to 71.96% for Almuhareb and Poesio. However, when @X is used to harvest a further set of attribute nouns for X, via web queries of the form  X  the P * of X  X  (where P  X  @X ), then @X augmented with this additional set of attributes (like hands for surgeon) produces a larger space of 7,183 features. This in turn yields a cluster accuracy of 90.2% which contrasts with Almuhareb and Poesio X  X  85.5% for 59,979 features. In either case, @X produces com-parable clustering quality to Almuhareb and Poe-sio, with just a small fraction of the features. scribe a noun X for purposes of categorization? While @X denotes a set of salient adjectives, ?X denotes a set of comparable nouns. So this time, ?^AP denotes a set of 8,300 nouns in total, to act as a feature space for the 214 nouns of Almuhareb and Poesio. Remember, the contents of each ?X , and of ?^AP overall, are determined entirely by the contents of the Google 3-grams; the elements of ?X are not ranked in any way, and all are treated as equals. When the 8,300 features in ?^AP are clustered into 13 categories, the resulting clusters have a purity of 93.4% relative to WordNet. The pragmatic neighborhood of X, ?X , appears to be an accurate and concise proxy for the meaning of X. sio X  X  set of 214 words does not contain adjectives, and besides, WordNet does not impose a category structure on its adjectives. In any case, the role of adjectives in the applications of section 4 is largely an affective one: if X is a noun, then one must have confidence that the adjectives in @X are con -sonant with our understanding of X, and if P is a property, that the adjectives in ?P evoke much the same mood and sentiment as P. Our evaluation of @X and ?P should thus be an affective one.
 our sentiments about a noun X? Well enough to estimate the pleasantness of X from the adjectives in @X , perhaps? Whissell X  X  (1989) dictionary of affect provides pleasantness ratings for a sizeable number of adjectives and nouns (over 8,000 words in total), allowing us to estimate the pleasantness of X as a weighted average of the pleasantness of each X i in @X (the weights here are web frequen-cies for the similes that underpin @ in section 3.2). We thus estimate the affect of all stereotype nouns for which Whissell also records a score. A two-tailed Pearson test (p &lt; 0.05) shows a positive cor-relation of 0.5 between these estimates and the pleasantness scores assigned by Whissell. In con-trast, estimates based on the pleasantness of adjec-tives found in corresponding WordNet glosses show a positive correlation of just 0.278 .
 sentiments toward an adjective P? After all, we hypothesize that the adjectives in ?P are highly suggestive of P, and vice versa. Aristotle and the Jigsaw Bard each rely on ?P to suggest adjectives that evoke an unstated property in a metaphor or simile, or to suggest coherent blends of properties. When we estimate the pleasantness of each adjec-tive P in Whissell X  X  dictionary via the weighted mean of the pleasantness of adjectives in ?P (again using web frequencies as weights), a two-tailed Pearson test (p &lt; 0.05) shows a correlation of 0.7 between estimates and actual scores. It seems ?P does a rather good job of capturing the feel of P. Creative information retrieval is not a single appl i-cation, but a paradigm that allows us to conceive of many different kinds of application for crea-tively manipulating text. It is also a tool-kit for implementing such an application, as shown here in the cases of Aristotle , Idiom Savant and Jigsaw Bard .
 mulate their own task-specific ontologies of ad-hoc categories. In a fully automated application, they provide developers with a simple but powerful v o-cabulary for describing the range and relationships of the words, phrases and ideas to be manipulated. expect other aspects of figurative language to be incorporated into the framework whenever they prove robust enough for use in an IR context. In this respect, we aim to position Creative IR as an open, modular platform in which diverse results in FLP, from diverse researchers, can be meaning-fully integrated. One can imagine wildcards for matching potential puns, portmanteau words and other novel forms, as well as wildcards for figura-tive processes like metonymy, synecdoche, hyper-bolae and even irony. Ultimately, it is hoped that creative IR can serve as a textual bridge between high-level creativity and the low-level creative potentials that are implicit in a large corpus. This work was funded in part by Science Founda-tion Ireland (SFI), via the Centre for Next Genera-tion Localization. (CNGL).
