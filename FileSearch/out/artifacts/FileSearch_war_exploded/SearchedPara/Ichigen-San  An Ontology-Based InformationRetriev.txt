 Searching for landmarks is one of the most frequent and repeated operations carried out by keyword-bas ed search engines, who play mediators between users and information providers on the Internet. The information providers habitu-ally design web pages that express the precise features of their facility. For instance, a hotel owner pro vides detailed price list;  X  X  single room is offered at $79 per night including breakfast. X  On the other hand, users of the search engines usually have roughcast feature requirements;  X  X  X  X  looking for a sin-gle room at price under $100. X  By typing i n  X  X ingle room X ,  X  X nder $100 X  to keyword-based search engines, howev er, user fails to find a hotel that offers a room at $79. This is because the search engines X  lack of semantic understanding of user X  X  price requirement. Thus, users are forced to use  X  X eyword tips X  such as using words like  X  X heap X  as keywords to express their roughcast requirement; as a result probability of finding a best hotel using keyword-based search engines lessens.

By using services which provide sort ing of hotels by the prices (e.g. hotel.com , priceline.com ), users can search without being plagued by this problem. This is because these services have a semantic understanding of prices implemented within their systems. Corre spondingly, services like Google Local and Yahoo! Local provide map services based on semantic understandings of location.
There are, however, many words that desc ribe features and characteristics of landmarks other than prices and location have semantic relationships. Compared to designing a new service that has semantic relationships of certain words im-plemented, it would be more practical to provide a machine understandable rep-resentation. This is a basic concept of semantic web [1]; to realize this scenario, OWL was proposed as a language to represent semantic relationships between concepts. The semantic web also implies the potential of coordination between two or more services based on the semantic understanding of information.
Based on the notion of semantic web, we propose our information retrieval system,  X  X chigen-san. X  Ichigen-san has OWL-written database about landmark information, where landmarks are classified into categories such as restaurants and stations. Information providers can define what features and characteris-tics the categories have, and also the semantics of the information; for instance, price is a value and values can be compared. When users search for a landmark that belongs to a certain category, system displays the features and character-istics that the category has. Expressing detailed requirements according to the datatypes of the features and character istics, users can find their best match. The name of our information retrieval system is  X  X chigen-san X , a Japanese word meaning  X  X  visitor who is visiting places for the first time; X  in a broad sense it means strangers. In the old times, misunderstandings between Ichigen-sans and local facilities occurred due to Ichigen-sans X  lack of local information and facilities X  insufficient advertisement. Our system dispel the misunderstanding by providing the followings: (1) a method to retrieve information that can describe users X  requirements in detail, (2) a method to transmit information that can de-scribe what the places afford. Our system supports people who are not familiar with places by answering queries about l andmarks with multiple requirements. Inside the system, a database stores landmark information schema and indi-vidual landmark data that are both written in OWL (Web Ontology Language [3]). Writing information in OWL enables us to do partial addition and dele-tion of information, meaning that the visited places can provide just and all the information they want to. The demo system utilizes landmark datasets of Kyoto.

Figure 1, 2 shows a screenshot and a simp le overview of the Ichigen-san. The system has 4 user interfaces; question d efinition interface, map interface, RDQL input interface, and test output interface. A user can define queries by pressing buttons and filling in dialog boxes in the query definition interface. When a user defines a query using the interface, th e Ichigen-san translates the query to RDQL [4]. RDQL is a query language that can query OWL written data. Skilled users can write a RDQL query directly to the RDQL input interface. The RDQL query is then passed forward to a RDQL reasoning engine  X  X ellet [5] X . The Pellet queries the landmark information database and returns the answer to an output handler. Finally the output is displayed in a text output interface and a map interface (using Google Maps [6]).

In the landmark information database, landmarks are classified into categories like  X  X estaurants X  and  X  X ourist sites X  (Figure 3). Each category has attributes that describe their characteristics. S ome categories have more specific sub-categories that inherit original category X  X  attribute and also has its own attribute. Thus, the categories have a hierarchical relationships. For instance,  X  X estaurant X  is a sub-category of  X  X andmark X  and it inherits attributes like longitude and latitude, and has its original attribute  X  X verage budget. X  Individual restaurant information will have the value of the each attribute.
 The Ichigen-san enables users to search and re-search for landmarks. Displaying the features and characteristics of the landmarks. The hier-archical category list of landmarks are p resented to users. When users select one of the categories, the system displays the features and characteristics that the category has. If a user chooses restaurant category, characteristics such as the name of the restaurant, longitude, latitude, and average budget are displayed. In addition, the datatypes of the characteristics are displayed; names are char-acter strings, and the others are values. According to the datatypes, possible restrictions of the character istics are displayed on thei r side; for instance, aver-age budget has a uppermost limit and a lowermost limit.
 Search for landmarks with multiple requirements. Users can inform of specific requirements that the landmark s hould meet; for instance,  X  X  restaurant where the average budget is less than $20 X ). User can describe this query by adding restrictions  X $20 X  to uppermost limit of the average budget.
 Secondary search for landmarks. The system supports a user query that emerges after viewing the answer of the p revious query. After the system answers the query, a user may want to query other landmarks. For instance, after finding a fine restaurant, a user may want to search for a train station that is near the restaurant. Ichigen-san supports a query about what is near the landmark. We proposed our information retrieval system  X  X chigen-san X  based on semantic web technologies. OWL written landmark information enables users to realize the information that is provided by the landmark owners. The semantic mean-ing such as features and characteristics of landmarks enabled users to query landmarks with roughcast feature requirements.

In the current version of Ichigen-san, landmark information is assumed to be provided by the landmark owners. However, evaluation of the landmarks by the users of the landmark is another important information that should be brought into discussion. In addition, only the users who are familiar with RDQL can define complex requirements that involve relationships of more than two characteristic (e.g.  X  X  would like to find a hotel with a single room within $100, but I am willing to pay $120 if it is within 1km from the station) using RDQL input interface. Creating an interactive interface to support other users to define complex requirements would be one solution.

