 Relevance of search-results is a key factor for any search engine. In order to return and rank the Web-pages that are most relevant to the query, contemporary search en-gines use complex ranking functions that depend on hun-dreds of features . For example, presence or absence of the query keywords on the page, their proximity, frequencies, HTML markup are just a few to name. Additional features might include fonts, tags, hyperlinks, metadata, and parts of the Web-page description. All this information is used by the search-engine to rank HTML Web pages returned to the user, but is unfortunately absent in free text that has no HTML markup, tags, hyperlinks, and any other metadata, except implicit natural language structure.

Here we demonstrate one of the rst Big text search en-gines that leverages hidden structure of the natural language sentences in order to process user queries and return more relevant search-results than a standard keyword-search. It provides a structured index extracted from the text using Natural Language Processing (NLP) that can be used to browse and query free text.
 H.4 [ Information Systems Applications ]: General; H.3 [ Information Storage and Retrieval ]: Information Search and Retrieval; H.2 [ Database Management ]: Heteroge-neous Databases Search; Data Integration; Natural Language Processing (NLP); Information Retrieval; Structure Extraction
Natural language has a rich structure that implicitly en-codes information about objects and their relationships. All this information is challenging to extract with high precision and recall, therefore keyword-search and its modi cations corpora via a structured index used to facilitate structured browsing and search. Figure 1 shows the index automati-cally extracted by R ead F ast (RF) from a 500-page book on Biomedical Informatics about state-of-the art Biomedi-cal information retrieval systems. Without even opening the book the user can see in the index what are its main terms and therefore conclude the book`s major themes. If a text corpus is new, the user can rst explore the index, select the entities, its related actions and query the corpus with the structural queries generated by the system. We evaluate this approach and justify that on average it provides signif-icantly more relevant search results than keyword-search on a certain class of queries.

We plan to partially demonstrate the information extrac-tion pipeline followed by the user queries and browsing of Big text corpus. The interface in Figure 1 contains the edit boxes for structural search, keyword-search, and the browser in the left frame. Some of the algorithms and evaluations that served as a foundation for this system are described in more detail in [6, 9, 7, 8].
The R ead F ast components are in Figure 2. The system provides structural access to any natural language text cor-pus. First, Big text corpus is split into chunks and each sen-tence is parsed using a distributed parser [14] that produces a set of the main entities from the text and their actions as well as converts the text corpus into a semi-structured for-mat, indexed for structural search. The entities and actions are then composed into a search-index that is shown to the user in the interface (e.g. left frame in Figure 1) and used th e selected terms in the index, executes it against the text corpus, and returns search-results in the right frame. We use UFOs [6] to store different entity representations behind a standardized search interface shown to the user. Search: A sample R ead F ast user interface is shown in Figure 1. Similar to browsing described above, it supports structural search. A user can rst select the corpus and then type in a structural query in the corresponding edit box in the right frame. The engine executes the structural query based against the text corpus, and returns search-results in the right frame.

Storage: R ead F ast uses a sharded semi-structured stor-age to store the Big text corpora and a parallel relational storage engine for indexes and optimized query processing.
Evaluation of R ead F ast search-results relevance was done similar to how it is usually done for contemporary Web-search engines. The biggest difference is that the Web-search result set is composed of ordered links to the Web-pages rel-evant to the query, whereas here the result set is a set of natural language sentences from the corpus ordered by rele-vance to the user query. We used NDCG -Normalized Dis-counted Cumulative Gain as relevance metric as it combines precision and recall and also is one of the standard metrics for evaluating search results in Information Retrieval [1]. We designed a several experiments to measure relevance gain of R ead F ast compared to keyword-search on several Big text corpora. On average, R ead F ast NDCG was 20-30%, which is a signi cant improvement. Interested reader is referred to [7] for a more detailed description of the evaluation method-ology.
Much of the current research in Data Management, Infor-mation Retrieval, and Search is devoted to the Web, social networks, personal resources, and unfortunately does not apply directly to text. The most recent relevant research by Dong et al [5] lays foundations for generic selective informa-tion integration critical in search. Another signi cant work in [4] sheds light on controversial decision making process in large-scale data fusion. Halevy in [12] describes research ef-forts in a structural realm of large-scale information fusion. Gupta in [11] gives a partial overview of recent structured data research related to Web search. Many recent venues keep highlighting text as an area of growing interest to Data Management communities [19, 6, 3, 20, 18, 17, 15, 10, 16, 13].

R ead F ast is more general in that it intentionally avoids any speci c format, corpus, language, or other algorithmic restrictions to provide a general structural search founda-tions applicable to any text corpus.
Here we demonstrate one of the rst systems for advanced access to Big text. This system is based on generic algo-rithms to extract and leverage additional information from the linguistic structure of the sentences to enhance search over free text. We evaluated relevance gain compared to keyword-search using NDCG and on average observed 20-30% improvement in relevance of search results. We demon-strated and justi ed two main use cases of the system -
