 Online social networks such as Facebook and Twitter are becoming an impor-tant medium for fast and widespread dissemination of ideas, innovations and products [6, 7]. Substantial attention has been gained to investigating the infor-mation spreading in these networks [1 X 4]. One interesting problem with practical importance, which is formally referred to as influence maximization , is to find a small set of influential nodes (seed nodes) properly, through which the informa-tion can be spread to as many nodes as possible under a cascade adoption in the network. Kempe et al. [1] first formulated the influence maximization problem by modeling the information diffusion as a discrete stochastic process. They further show that the influence spreading process has the properties of monotonicity and submodularity (i.e. having a diminishing marginal return property). Due to such properties, the greedy algorithm based on a hill-climbing strategy can achieve (1  X  1 /e ) of the optimal solution.

However, in many real world scenarios, there may be competing relationships between multiple pieces of information i n the social network, such as the com-petition between iPhone vs. Android, Chrome vs. Firefox vs. IE, etc .Forsuch competing pieces of information, one n ode usually accepts only one of them and discards all the others. In most cases, a node will accept the information which comes first. But when different pieces of information reach a node at almost the same time, the node needs to choose one of the competing information according to personal preference.

In deciding which information to adopt, several adoption models have been proposed to simulate such process when c ompetitive information reaches a node simultaneously, with respect to differe nt scenarios. For instance, Borodin et al. [14] consider that a node will choose uniformly at random one of the incoming in-formation; Budak et al. [9] assume that the  X  X ood X  information always beats the misinformation, while Xinran He et al. [13] address that people are more likely to believe the negative information. In contrast to all these works, in this paper, we present a generalized model for competitive information diffusion, where the preferences of nodes are characterized explicitly by a probability distribution and the information to be adopted is determined according to the distribution. As will be mentioned later, our model gen eralizes the adoptio nmodelsproposed in [9, 13, 14].

Based on this generalized model, we pr esent a comprehensive study of the competitive influence maximization problem [10]. In the presence of adversary information, the goal is to choose a set of seed nodes such that our information can be spread to as many nodes as possible. We show that, under this model, the influence spreading process is no longer submodular, which implies that the typical greedy algorithm cannot guarant ee the worst-case performance anymore. Rather than applying the greedy approach, we propose a simple heuristic algo-rithm using a properly designed random walk on the social network. In this algorithm, by postulating that the specified information has been spread to ev-ery node in the network, we identify the most influential nodes by tracing the information back based on the random walk to find where it is most likely from. Extensive experiments are conducted to evaluate the performance and scalabil-ity of our algorithm on real social networks with high-clustering and scale-free properties. As shown by the results, our algorithm outperforms many other algo-rithms in most cases. Besides, compared with the greedy algorithm which is still effective, our algorithm achieves a com parable performance but is much more scalable due to its much less running time.

The rest of this paper is organized as follows: In Section 2, we show previous works on information diffusion processes in social networks. In Section 3, we introduce our generalized model and formalize the competitive influence maxi-mization problem. The main algorithm is presented in Section 4. In Section 5, we compare the performance and scalability of our algorithm with some other heuristics. Section 6 concludes this paper.
 Extensive researches have studied the problem of influence maximization .Itis the problem of identifying a small number of nodes as seed set so that the infor-mation spreading is maximized. Kempe et al. [1] first formulated influence max-imization as a discrete optimization problem with Independent Cascade Model (ICM) and Linear Threshold Model (LTM). Both models have the properties of monotonicity and submodularity. With such properties, greedy algorithm us-ing hill-climbing strategies can achieve (1  X  1 /e ) of the optimal. However, this algorithm needs Monte Carlo method to simulate the network massive times so is computationally expensive. Many following works have been proposed to improve the efficiency of this algorithm [2 X 5], but scalability remains a key chal-lenge. Moreover, they ignore the effects of competing information.

Recent researches show that there exis ts competing campaigns in real social networks. A lot of them have focused on deciding which information to choose when competing innovations or products reach at the same time. Barathi et al. [10] studied a similar problem where there are multiple players spreading their information to compete in one so cial network. How would each player choose the set of early adopters to begin the competing campaign? The authors augmented ICM by adding continuous time for each edge so information will not compete on the nodes. They also assumed that diffusion probability for different players is the same and show that the influence spreading process is submodular for the last player .Borodin et al. [14] considered the competitive information diffusion under threshold models. In their model, a node will choose randomly uniformly one of the incoming information to adopt. Budak et al. [9] investigated the problem of limiting misinformation in a social network. In the presence of misinformation, which k nodes should be chosen as  X  X ood X  information adopters to limit the spreading of misinformation. In their diffusion model, the good information always beats the misinformation when they reach a person at the same time. The problem is submodular when the limiting campaign information is accepted by users with probability 1. Xinran He et al. [13] also studied the limiting problem but they thought misinformation always wins because people are more likely to believe negative opinions. This problem is submodular under LTM. Most of previous works try to give special cases of the diffusion model and prove the influence spreading process is submodular. However, in our generalized model, the competing influence maximization might not have such property and the general cases remain unexplored. In this section, we first present our genera lized model for competitive information diffusion. Then we will formulate the competitive influence maximization as a discrete optimization problem. 3.1 Diffusion Models The social network is often represented as a directed graph G =( V,E )where nodes represent individuals and edges represent social relationships between them. We use Independent Cascade Model (ICM) as the basic model for in-formation diffusion. In a information cascade, we say that a node is active if it adopts the information, otherwise it is called inactive . Initially, only the seed nodes in S are active. The diffusion process starts from the set S and unfolds in discrete steps as follows: In each step t , the newly active nodes in S t try to activate their neighbors with probability p e independently, where p e is an acti-vation probability associated with each edge e  X  E . The newly activated nodes are added into S t +1 . This process continues until no more nodes are activated at some step t , i.e. S t =  X  .

We augment the ICM to present a generalized model called Weighted Compet-itive Independent Cascade Model (WCICM). In this model, competing informa-tion cascades start from disjoint seed sets S 1 ,S 2 ,...,S r andspreadinthesocial network to compete. We say a node is in color i if it adopts the i th information. Initially, the nodes in S i are in color i and there is no color for the inactive nodes. The process unfolds in discrete steps as follows: at step t , a node u in S i tries to activate each of its inactive outgoing edge with probability p edge ( u,v ) is activated, it is colored as c uv = i at diffusion step T uv = t .Ifthere is no other incoming edge to v at this step, then v will be colored as c v = i at diffusion step T v = t . But if multiple processes reach v at the same step, v chooses one of them to adopt. In deciding which information to choose, users X  decision is characterized explicitly by a probability distribution. By assigning aweight  X  ( i ) for information with color i , v adopts color i with probability color i is determined by the weight of color i versus the total weight of incoming information. If the weights are the same, v will choose uniformly at random one of the information. Or if the weight is positive for one information and 0 for others, this information will always win. So our model can generalize previous models introduced in [9, 13, 14]. 3.2 Problem Formulation Consider the problem when r players compete in a social network G .Eachof them selects a disjoint set of seed nodes S i to start the competing campaign sequentially. The information is spread in the network under the WCICM de-scribed above. Suppose the first r  X  1 players X  strategies have been fixed, namely we have the knowledge of S 1 ,S 2 ,...,S r  X  1 . We need to identify a seed set S r of size k for the last player . The goal is to maximize the expected number of nodes in color r after information cascade. This competitive influence maximization problem can be formulated as: where  X  ( S i ) is the expected number of nodes in color i when all information diffusion processes stop. In this section, we first show the NP-hardness of the problem and prove it does not exhibit the submodular property. Then we will present a heuristic using properly designed random walk on the social network to find the influential nodes. 4.1 Hardness of Competitive Influence Maximization Consider a special case of the competitive influence maximization problem when there are no competing adversaries. Then it is exactly the problem of influence maximization problem under the ICM, which can be reduced from the NP-complete Set Cover problem in [1].
 Theorem 1. The competitive influence maximization problem is NP-hard under the WCICM.
 Influence spreading of single seed set is monotone and submodular under the  X  ( S )  X   X  ( T  X  X  v } )  X   X  ( T ) for all elements v when S  X  T . With this property, the greedy algorithm using hill-climbing method can achieve near optimal solution with performance guarantee. However, in a competing campaign, the influence spreading process is not submodular.
 Claim. There exists counter example which is not submodular in the competitive influence maximization under the WCICM.
 Proof. Figure 1 shows a counter example: Adversary information starts from node S 1 with color 1. Define S =  X  and T = { w } with color 2. We use identical weight for each information, so a node will choose uniformly if two precesses reach itatthesametime.Theedgeincolor i means the probability of information diffusion of S i on this edge is 1. Initially, we have  X  ( S )=0and  X  ( T )=2 . 5 before adding v .Whennode v is set as color 2, we have  X  ( S  X  X  v } )=1and that the process does not exhibit the property of submodularity. 4.2 Random Walk to Find Influential Nodes Since the influence spreading process under WCICM does not exhibit submod-ular property, the greedy algorithm does not have performance guarantee. We propose a heuristic using a properly designed random walk to find the influen-tials. In this algorithm, we assume an ideal situation where all initially inactive nodes have been influenced by our information with color r . Under this postu-lation, the information on each node traces back to find where it most likely to be from. The nodes aggregating most information can be identified as our seed nodes. To trace back, information random walks in the reverse direction of where it was propagated from. The tran sfer probability of the information walking from node u to node v is: where w vu is the weight of directed edge ( v,u ). So P uv is the weighted proportion of edge ( v,u ) among all incoming edges of u . It is easy to see that v P uv =1, and the transition probability of node u is only dependent on its current state. So this is a Markov process with transition matrix P .

Specifically, if we define w uv as 1 for any u and v , then this process is Pagerank [15] with reverse directions. However, P agerank neglects the impacts of compet-ing information. In this work, the weight of each edge is determined by how much v can influence u . Generally, if moving the information on u to v can increase the probability of v influencing u , then the edge ( v,u ) has higher weight. So we define the weight of ( v,u )as: This means that the weight of ( v,u ) can be represented as the probability that v can influence u given that v is a seed node. In a competing campaign, if v is a seed node: a) , the information from v can reach u first of all, Pr [ vactivatesu ]=1; b) , the information from v will reach u with adversary information at the same time; c) , the information from v won X  X  reach u or the information will reach u after some adversary information, Pr [ vactivatesu ] = 0. Above all three cases, the probability depends on when will adversary information reach u . However, it is hard to estimate the diffusion step of adversary information in a stochastic diffusion process.

One possible solution is to simulate the network massive times to get deter-ministic graphs each time. We can view the information diffusion on edges and nodes as the results of coin flip with bias. In a deterministic graph, the diffu-sion step of adversary information can be obtained using a BFS linear scan of the graph. The result is the average information value after convergence of each outcomes of deterministic graphs. However, simulating the graph still takes too much time. To get the influential nodes more efficiently, we follow the idea of Shortest Path Model (SPM) introduced in [16]. In this model, a node can only be activated through the shortest path between the initially active seed set. So the diffusion step of each node is the shortest path between the node and the seed nodes.
 Claim. Assume the inactive node can only be influenced by the nearest seed node, a node w will be colored as i if  X  v  X  S i such that  X  u  X  S j ( j = i  X  j  X  { from node v to node w .
 Figure 2 presents one example of the diffusion process. The nodes 0 and 9 are adversary seed nodes. The diffusion step is labeled in the brackets above each node. The value is the length of shortest path from the seed nodes. The nodes that are unreachable from seed nodes have step  X  , they are nodes 4 and 5.
When multiple pieces of information reach u at the same time, the informa-tion from v would compete with adversary information to influence u .Since the information diffusion process is probabilistic, we need to get the propaga-tion probability of the edge. In most cases, the activation probability p is often not uniformly distributed, and there might be multiple edges between a pair of nodes. Suppose the edges between node v and u are ( v,u ) 1 , ( v,u ) 2 ,... , each with probability p i vu to be activated independently. Then the propagation probability of edge ( u,v )is Suppose v is a seed node with color r , and the adversary information from node w will reach u at diffusion step T wu , then the probability of v can influence u is
Pr [ vactivatesu | v  X  S r ]= which is the weight of directed edge ( v,u ): w vu . For a large scale-free social network, it is almost impossible that the transition matrix P is periodic. The random walk will converge to a stationary distribution. In the experiment, we show that the distribution converges very fast. The detail of this algorithm is presented in Algorithm 1. We call this algorithm CompeteRank .
 Algorithm 1. CompeteRank ( G,S [ r  X  1] ,k,p,max iterations,min delta ) 5.1 Experiment Setup We use 3 social network data sets from [17] to evaluate our algorithms. The first one is ca-GrQc: an academic collaboration network from scientific collabo-rations between authors X  papers submitted to General Relativity and Quantum Cosmology category with 5242 nodes and 28980 edges. The nodes in the network represent authors and the edges indicate coauthor relationships. Each coauthor paper is represented as a single chance for one author to influence another. The second one is ca-HepTh: a collaboration network from papers submitted to High Energy Physics with 9877 nodes and 51971 edges. The third one is ca-CondMat: also a collaboration network from papers submitted to Condense Matter cate-gory with 23133 nodes and 186936 edges. All of them are scale-free networks with high clustering. Without loss of generality, we use identical activation probabil-ity for the edges as 0 . 1or0 . 01. In CompeteRank , max iterations = 1000 and min delta =0 . 00001 are considered to be reasonable threshold values. Since the influence spreading is a stochastic process, we use Monte-Carlo method to simulate the graph for R = 1000 times to get the average influence value of the competing seed sets under the WCICM. The algorithms compared to Com-peteRank are:  X  Greedy : This algorithm uses a hill-climbing strategy to greedily find the  X  Degree Centrality : The heuristic identifies th e nodes with highest degree.  X  Early Infectees : It chooses seeds that are expected to be infected first.  X  Largest Infectees : This heuristic chooses seeds that are expected to the 5.2 Competitive Influence Spreading We first evaluate the influence spreading of different algorithms on the data sets. The adversary seed nodes are chosen using Degree Centrality with fixed size as 100. Since we do not care the influence spreading of adversary nodes, they can be assumed from single player. Figure 3 presents the results of our experiments.
Figure 3(a) and Figure 3(b) are the results of ca-GrQc and ca-HepTh data set with p =0 . 1. We use identical weight for different information, so when multiple pieces of information reach a node at the same time, it will choose randomly uni-formly one of them. In this case, Greedy , Largest and CompeteRank all perform very well. Even the influence spreading function is not submodular, Greedy is still effective. This might be the reason that counter examples rarely exist. Early performs very poor in both experiments. So blocking the influence spreading of adversary nodes does not help much in the spreading of our information. Com-peteRank outperforms the Degree over about 50% sometimes. The gap is even larger than influence maximization of single set. This is because Degree neglects the effect of adversary information.

Figure 3(c) is the result of ca-CondMat data set with p =0 . 01. We do not include the Greedy algorithm in this experiment since it takes too much time. When p is small, the effect of competing nodes also becomes smaller. So Largest is not effective as before while Degree achieves much better performance. Clearly, our CompeteRank performs the best of all.

In Figure 3(d), we show the results of ca-HepTh with p =0 . 01. We have  X  (1) = 1and  X  (2) = 0, so adversary information always beats our information when they reach a node at the same time. In this case, CompeteRank performs even better than the Greedy algorithm. And both of them significantly outperform others heuristics. 5.3 Convergence and Scalability In Figure 4(a) we show the iterations for our algorithm to converge. We use I v = 1 for the each of the node initially. The algorithm can converge to a reasonable tolerance in about 50 iterations in all three cases. Generally, the social networks are expander-like graphs. The random walk on an expander which has an eigenvalue separation is rapidly-mixing.

Figure 4(b) presents the running time of our algorithms. In this experiment, we use identical p =0 . 01 for all the data sets to select 100 seed nodes. It is evident that Greedy takes too much time. What is worse, some improvements like the  X  X ELF X  proposed by Leskovec et al. [2] does not work here, because the influence spreading process is not submodular. Degree is the most efficient of all. The running time of CompeteRank , Largest and Early are similar with an acceptable running time. Moreover, the time of CompeteRank does not grow much with the increase size of data sets. In this work, we studied the problem of competitive influence maximization in a social network. We introduced a generalized model called WCICM for com-petitive information diffusion which could characterize users X  preference for each information explicitly. In this model, the influence spreading process is no longer submodular, so greedy approach does not have performance guarantee. We pro-posed a simple yet effective heuristic algorithm called CompeteRank .Inthis algorithm, the influential nodes can be identified by tracing the information back according to a properly designed random walk on the network, based on the postulation that all the nodes have been influenced. Extensive exper-iments on different data sets were conducted. The results revealed that even without submodular property, the greed y algorithm can still be effective. How-ever, the computation cost is too expensive. Our algorithm is very comparable to the greedy approach and outperforms o ther well-known heuristics in most cases. Some of them, like Largest and Degree , only perform well in certain cir-cumstances. We also analyzed the convergence and scalability of our algorithm. The results showed that CompeteRank can converge very fast with low running time.
 Acknowledgment. The authors would like to thank Bin Tang for his in-sightful remarks. This work is partially supported by the National Natural Science Foundation of China under Grant No. 61073028, 61021062, 61202113, 61003213; the National Basic Research Program of China (973) under Grant No. 2009CB320705; Jiangsu Natural Science Foundation under Grant No. BK2011510.
