 Segmentation of words, clitics, and affixes is essen-tial for a number of natural language processing (NLP) applications, including machine translation, parsing, and speech recognition (Chang et al., 2008; Tsarfaty, 2006; Kurimo et al., 2006). Segmentation is a common practice in Arabic NLP due to the lan-guage X  X  morphological richness. Specifically, clitic separation has been shown to improve performance on Arabic parsing (Green and Manning, 2010) and Arabic-English machine translation (Habash and Sadat, 2006). However, the variety of Arabic di-alects presents challenges in Arabic NLP. Dialectal Arabic contains non-standard orthography, vocab-ulary, morphology, and syntax. Tools that depend on corpora or grammatical properties that only con-sider formal Modern Standard Arabic (MSA) do not perform well when confronted with these differ-ences. The creation of annotated corpora in dialec-tal Arabic (Maamouri et al., 2006) has promoted the development of new systems that support di-alectal Arabic, but these systems tend to be tailored to specific dialects and require separate efforts for Egyptian Arabic, Levantine Arabic, Maghrebi Ara-bic, etc.

We present a single clitic segmentation model that is accurate on both MSA and informal Arabic. The model is an extension of the character-level conditional random field (CRF) model of Green and DeNero (2012). Our work goes beyond theirs in three aspects. First, we handle two Arabic ortho-graphic normalization rules that commonly require rewriting of tokens after segmentation. Second, we add new features that improve segmentation ac-curacy. Third, we show that dialectal data can be handled in the framework of domain adaptation . Specifically, we show that even simple feature space augmentation (Daum X , 2007) yields significant im-provements in task accuracy.
 We compare our work to the original Green and DeNero model and two other Arabic segmenta-tion systems: the MADA+TOKAN toolkit v. 3.1 (Habash et al., 2009) and its Egyptian dialect vari-ant, MADA-ARZ v. 0.4 (Habash et al., 2013). We demonstrate that our system achieves better perfor-mance across the board, beating all three systems on MSA newswire, informal broadcast news, and Egyptian dialect. Our segmenter achieves a 95.1% F 1 segmentation score evaluated against a gold stan-dard on Egyptian dialect data, compared to 90.8% for MADA-ARZ and 92.9% for Green and DeN-ero. In addition, our model decodes input an order of magnitude faster than either version of MADA. Like the Green and DeNero system, but unlike MADA and MADA-ARZ, our system does not rely on a morphological analyzer, and can be applied directly to any dialect for which segmented training data is available. The source code is available in the latest public release of the Stanford Word Seg-A CRF model (Lafferty et al., 2001) defines a distri-bution p ( Y | X ;  X  ) , where X = { x 1 ,...,x N } is the observed input sequence and Y = { y 1 ,...,y N } is the sequence of labels we seek to predict. Green and DeNero use a linear-chain model with X as the sequence of input characters , and Y  X  chosen according to the decision rule Y  X  = arg max where  X  is the feature map defined in Section 2.1. Their model classifies each y i as one of I (contin-uation of a segment), O (whitespace outside any segment), B (beginning of a segment), or F (pre-grouped foreign characters).

Our segmenter expands this label space in order to handle two Arabic-specific orthographic rules. In our model, each y i can take on one of the six values { I , O , B , F , RewAl , RewTa } :  X  RewAl indicates that the current character,  X  RewTa indicates that the current character, 2.1 Features The model of Green and DeNero is a third-order (i.e., 4-gram) Markov CRF, employing the follow-ing indicator features:  X  a five-character window around the current  X  n -grams consisting of the current character  X  whether the current character is punctuation  X  whether the current character is a digit  X  the Unicode block of the current character  X  the Unicode character class of the current char-In addition to these, we include two other types of features motivated by specific errors the original system made on Egyptian dialect development data:  X  Word length and position within a word: for  X  First and last two characters of the current A notable property of this feature set is that it re-mains highly dialect-agnostic, even though our ad-ditional features were chosen in response to errors made on text in Egyptian dialect. In particular, it does not depend on the existence of a dialect-specific lexicon or morphological analyzer. As a result, we expect this model to perform similarly well when applied to other Arabic dialects. 2.2 Domain adaptation In this work, we train our model to segment Arabic text drawn from three domains: newswire, which consists of formal text in MSA; broadcast news, which contains scripted, formal MSA as well as extemporaneous dialogue in a mix of MSA and di-alect; and discussion forum posts written primarily in Egyptian dialect.
F 1 (%) TEDEval (%)
The approach to domain adaptation we use is that of feature space augmentation (Daum X , 2007). Each indicator feature from the model described in Section 2.1 is replaced by N + 1 features in the augmented model, where N is the number of domains from which the data is drawn (here, N = 3 ). These N + 1 features consist of the original feature and N  X  X omain-specific X  features, one for each of the N domains, each of which is active only when both the original feature is present and the current text comes from its assigned domain. We train and evaluate on three corpora: parts 1 X 3 of of the BOLT Phase 1 Egyptian Arabic Treebank mains in section 2.2. We target the segmentation scheme used by these corpora (leaving morphologi-cal affixes and the definite article attached). For the ATB, we use the same split as Chiang et al. (2006). For each of the other two corpora, we split the data into 80% training, 10% development, and 10% test Green and DeNero model and our improvements using L-BFGS with L 2 regularization. 3.1 Evaluation metrics We use two evaluation metrics in our experiments. The first is an F 1 precision-recall measure, ignoring orthographic rewrites. F 1 scores provide a more informative assessment of performance than word-level or character-level accuracy scores, as over 80% of tokens in the development sets consist of only one segment, with an average of one segmentation every 4.7 tokens (or one every 20.4 characters).
The second metric we use is the TEDEval met-ric (Tsarfaty et al., 2012). TEDEval was devel-in Hebrew, which requires a greater variety of or-thographic rewrites than those possible in Arabic. Its edit distance-based scoring algorithm is robust enough to handle the rewrites produced by both MADA and our segmenter.

We measure the statistical significance of differ-ences in these metrics with an approximate ran-domization test (Yeh, 2000; Pad X , 2006), with R = 10,000 samples. 3.2 Results Table 1 contains results on the development set for the model of Green and DeNero and our im-provements. Using domain adaptation alone helps performance on two of the three datasets (with a sta-tistically insignificant decrease on broadcast news), and that our additional features further improve (%) TEDEval (%) times reported here are for single-threaded runs. segmentation on all datasets. Table 2 shows the segmentation scores our model achieves when eval-uated on the three test sets, as well as the results for MADA and MADA-ARZ. Our segmenter achieves higher scores than MADA and MADA-ARZ on all datasets under both evaluation metrics. In addi-tion, our segmenter is faster than MADA. Table 3 compares the running times of the three systems. Our segmenter achieves a 7x or more speedup over MADA and MADA-ARZ on all datasets. We sampled 100 errors randomly from all errors made by our final model (trained on all three datasets with domain adaptation and additional fea-tures) on the ARZ development set; see Table 4. These errors fall into three general categories:  X  typographical errors and annotation inconsis- X  errors that can be fixed with a fuller analysis  X  errors that would require additional context or 4.1 Typographical errors and annotation Of the 100 errors we sampled, 33 are due to typo-graphical errors or inconsistencies in the gold data. We classify 7 as typos and 26 as annotation incon-sistencies, although the distinction between the two is murky: typos are intentionally preserved in the treebank data, but segmentation of typos varies de-pending on how well they can be reconciled with standard Arabic orthography. Four of the seven typos are the result of a missing space, such as: The first example is segmented in the Egyptian tree-bank but is left unsegmented by our system; the second is left as a single token in the treebank but is split into the above three segments by our system.
Of the annotation inconsistencies that do not in-volve typographical errors, a handful are segmen-tation mistakes; however, in the majority of these cases, the annotator chose not to segment a word for justifiable but arbitrary reasons. In particular, a few colloquial  X  X iller X  expressions are sometimes not segmented, despite being compound Arabic words that are segmented elsewhere in the data. These include A J K . P rabbin  X  a  X  X our] Lord X  (oath); k  X  X eep X / X  X tay X . Also, tokens containing foreign words are sometimes not segmented, despite car-rying Arabic affixes. An example of this is Table 4: Counts of error categories (out of 100 randomly sampled ARZ development set errors). wamistur  X  X nd Mister [English] X , which could be segmented as  X  wa -+ 4.2 Features too local In 36 of the 100 sampled errors, we conjecture that the presence of the error indicates a shortcoming of the feature set, resulting in segmentations that make sense locally but are not plausible given the full token. Two examples of these are: 4.3 Context-sensitive segmentations and In the remaining 31 of 100 errors, external context is needed. In many of these, it is not clear how to address the error without sophisticated semantic reasoning about the surrounding sentence.

One token accounts for five of these errors: B X  wl  X  a , which in Egyptian dialect can be analyzed as wa -+ B l  X  a  X  X nd [do/does] not X  or as B  X  wall  X  a  X  X r X . In a few cases, either is syntactically correct, and the meaning must be inferred from context.
Two other ambiguities are a frequent cause of error and seem to require sophisticated disambigua-tion. The first is A J -n  X  a , which is both a first person plural object pronoun and a first person plural past tense ending. The former is segmented, while the latter is not. An example of this is the pair A J X  X  X  , ilmun  X  a  X  X ur knowledge X  (  X  X  sus A J X  X  X  , alimn  X  a  X  X e knew X  (one segment). The other is  X  -y , which is both a first person singular possessive pronoun and the nisba adjective ending (which turns a noun into an adjective meaning  X  X f or related to X ); only the former is segmented. One example of this distinction that appeared in the de-velopment set is the pair  X   X   X   X  X  X  maw d .  X  u ,  X   X   X  X y mawd .  X  u ,  X   X y  X  X opical X ,  X  X bjective X . In this paper we demonstrate substantial gains on Arabic clitic segmentation for both formal and dialectal text using a single model with dialect-independent features and a simple domain adap-tation strategy. We present a new Arabic segmenter which performs better than tools employing sophis-ticated linguistic analysis, while also giving im-pressive speed improvements. We evaluated our segmenter on broadcast news and Egyptian Arabic due to the current availability of annotated data in these domains. However, as data for other Arabic di-alects and genres becomes available, we expect that the model X  X  simplicity and the domain adaptation method we use will allow the system to be applied to these dialects with minimal effort and without a loss of performance in the original domains. We thank the three anonymous reviewers, and Reut Tsarfaty for valuable correspondence regard-ing TEDEval. The second author is supported by a National Science Foundation Graduate Re-search Fellowship. This work was supported by the Defense Advanced Research Projects Agency (DARPA) Broad Operational Language Transla-tion (BOLT) program through IBM. Any opinions, findings, and conclusions or recommendations ex-pressed in this material are those of the author(s) and do not necessarily reflect the view of DARPA or the US government.
