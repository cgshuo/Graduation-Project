 1. Introduction Difficulties in designing an ABS may be classified as follows. First, the vehicle braking-dynamics are nonlinear. Second, there are many unknown environmental parameters, like road coefficient of friction which may be wet, snowy or dry. Finally, parameter changes due to mechanical wear and aging. Recently, a great deal of research has been performed on the antilock brake system (ABS) ( Assadin, 2001; Nouilllant et al., 2002; von Altrock Nov., 1997; Choi et al., 2002 ). Currently, most commercial ABSs are based on look-up tabular approach ( Chih-Min Lin and Hsu March, 2003 ). These tables are calibrated through iterative laboratory experiments and engineering field tests.

The conventional PID controller for automated machines is widely accepted by industry. According to a survey reported in Yu (1999) , more than 90% of control loops used in an industry use PID. This is because PID controllers are easy to understand (has clear physical meanings i.e. present, past and predictive), easy to explain to others, and easy to implement. Unfortunately, many of the PID loops that are in operation are in continual need of monitoring and adjustment since they can easily become improperly tuned ( Passino and Yurkovich, 1998 ). Generally speaking, in order to meet the demands of real time operation, self-tuning is necessary.

Motivated by the success of fuzzy controllers in controlling nonlinear, complex, time-varying dynamic processes in real logic has been made by Visioli January (2001) . In his work, several PID control schemes have been simulated for linear systems.
Although in most cases, the controllers showed superior perfor-mance for linear processes, they could only reduce the peak overshoot at the expense of increasing rise time, and the degradation becomes more and more significant with increasing time delay. This restricted the overall acceptance as a good controller mechanism ( Bhattacharya et al., 2003 ).
 Referring to aforementioned works, one may conclude that
Z X  X  method has been widely accepted as a base for tuning PID controllers off-and on-line. This may be referred to the ability of the method to preserve good load disturbance attenuation. Most of these studies however have transformed the tuning problem from using the Z X  X  tuning parameters to other author-defined para-meters and use fuzzy logic as the tuning-tool for the new et al., 2003; Visioli, 1999; Macvicar-Whelan, 1976 ), [others]. This indicates the lack of a generalized approach which can be followed for linear and nonlinear plants. Furthermore, the suitability and Nomenclature a x the vehicle body acceleration, m/s 2 a A area ABS antilock braking system B , B 2 fuzzy sets c center of Gaussian membership function c , c 2 scaling factors C 1 the maximum value of friction curve C 2 the friction curve shape C 3 the friction curve difference between the maximum C 4 the wetness characteristic value e ( t ) error of the closed-loop system F objective function F IAE objective function that uses the stopping distance and F ITAE objective function that uses the stopping distance and F N the normal force, N FSW PID controller using fuzzy set-point weighting G number of generations GA genetic algorithm G-PID PID controller in which the three parameters are H number of iterations IFE incremental fuzzy expert PID control IAE integrated absolute error ITAE integrated time multiplied by the absolute error J ITAE performance index J
IAE performance index which uses IAE and the stopping J
ITAE performance index which uses ITAE and the stopping J w the wheel inertia, kg m 2 k , k 2 , k 3 constant parameters K d the derivative gain K i the integral gain K p is the proportional gain K u ultimate gain m the quarter vehicle mass, kg requested by the driver. With this approach, the PID controller can be automatically adjusted to meet the system uncertainties and achieve satisfactory response. Robustness against road conditions is examined via numerical tests and results are compared with previous works.

This paper is organized as follows. Section 2 presents the mathematical model of an ABS based on a quarter car model. Section 3 introduces previous works in the area of tuning PID controllers. Section 4 demonstrates the proposed PID self-tuning scheme based on first order T X  X  fuzzy system. Learning of the fuzzy systems X  database is achieved via optimal performance indices (fitness functions), using a modified genetic algorithm. Simulation results and discussions are given in Section 5. Section 6 offers our concluding remarks. 2. Modeling of an antilock braking system 2.1. The quarter vehicle dynamic model
To verify the control performance, this section demonstrates a simplified model for the quarter vehicle dynamic motion. It was 2002 ); Fig. 1. The nonlinear dynamics can be described as follows. The force balance in the longitudinal direction ma
The slip ratio is defined by l  X  V x o R V Summing torques about the wheel center J a w  X  u  X  m r RF N  X  3  X  using Eqs. (1) and (2) and rearranging for _ l yields _
Eq. (4) clearly shows that, during braking, the slip ratio is dependent on the input torque u and the vehicle velocity V x .In where S x is the stopping distance. The state space equations are _ x  X  x 2 _ x  X  _ x  X  3. PID tuning with fuzzy logic
In the early 1940s, after extensive manual experimentation by the way of trial and error, Ziegler and Nichols invented the well-known Z X  X  formula for off-line tuning ( Ziegler and Nichols, 1942 ). In time domain for example, the method yielded PID coefficients directly from the three important parameters of a stable plant to be controlled, namely the plant gain, time-constant and transport delay. These parameters can be easily obtained graphically from a step response of the open loop plant. The concept of fuzzy systems instead may be used to emulate human expertise and on-line tune the control gains using Z X  X  formula.
The coming sub-sections demonstrate some of the previous works in this area. They are used in later sections for comparison purposes. 3.1. Standard and nonlinear PID controllers
There are many types of PID controllers, e.g., PID plus gravity compensator, PID plus friction compensator, PID plus disturbance observer, etc. ( Astrom, 1996 ). Here, we shall consider the basic forms for PID controller which is placed in a unity feedback control system. A typical PID control law in its standard form is u  X  t  X  X  K p e  X  t  X  X  T d de  X  t  X  dt  X  1 T error (difference between the demand input l d and the system output, l ), K p is the proportional gain, T d the derivative time constant and T i is the integral time constant. Eq. (7) can be rewritten as u  X  t  X  X  K p e  X  t  X  X  K i
K  X  K p T d the derivative gain and K i  X  K p / T i the integral gain.
In the design and tuning of a PID controller, the P, I and D actions need to be coordinated. This is not a trivial process, since coefficients of these three actions interact mutually and cannot be 0.2 0.4 0.6 0.8 the control law can be written as u  X  t  X  X  K p b  X  t  X  l d  X  t  X  l  X  t  X   X  K d de  X  t  X  d  X  t  X   X  K i b  X  t  X  X  w  X  f  X  t  X  X  12  X  the output of the fuzzy inference system, which consists of five triangular membership functions for each of the two inputs e ( t ) The fuzzy rules are based on the Macvicar-Whelan matrix ( Macvicar-Whelan, 1976 ), as shown in Table 2. The linguistic variables are negative small NS, negative big NB, negative very big NVB, zero Z, positive small PS, positive big PB, and positive very big, PVB.

The method however, is not a straightforward one and large number of arithmetic operations is needed for on-line tuning. 3.4. Incremental fuzzy expert PID control (IFE)
Tzafestas and Papanikolopoulos ( Tzafestas and Papanikolo-poulos, 1990 ), introduced a procedure for scaling the values of the three control parameters (initially determined by the Ziegler X  X ichols formula) during the transient period based on the system error and its rate. In other words, the current values of the proportional, integral and derivative gains are increased or decreased by means of a fuzzy inference system according to the following relations: K  X  K p  X  FS  X  c 1 e  X  t  X  , c 2 _ e  X  t  X  k 1 K  X  K i  X  FS  X  c 1 e  X  t  X  , c 2 _ e  X  t  X  k 2 K  X  K d  X  FS  X  c 1 e  X  t  X  , c 2 _ e  X  t  X  k 3  X  13  X  where the basic tuning method is that of the Ziegler X  X ichols; Macvicar-Whelan fuzzy rule matrix ( Macvicar-Whelan, 1976 ) (see Table 2), which reflects the typical action of a human control. For example, the integral action has to be increased at the beginning of the transient response to decrease the rise time, and then has to be decreased when the system error is negative to reduce the overshoot. The range of the input membership functions is normalized between 1 and 1. Finally, c 1 , c 2 are scaling factors and k i , i  X  1,2,3 are constant parameters that determine the range of variation of each term. The whole fuzzy system involve 14 quantization levels for both e and _ e . Similar approach has been followed in Bhattacharya et al. (2003) , where the authors have to rely on trial and error procedure in order to identify parameters of the fuzzy systems.

However, tuning the three parameters k i and the two scaling user, and it is not clear how these parameters influence the performance of the overall controller. is not properly tuned and then seeks to adjust it to obtain improved performance. In such a way, each fuzzy system can be looked at as gain scheduler (module). T X  X  type fuzzy systems are used to synthesize each of the self-tuning systems.

The T X  X  fuzzy system (also known as functional fuzzy system ( Passino and Yurkovich, 1998 )) was proposed in an effort to develop a systematic approach to generating fuzzy rules from a given input X  X utput data set; ( Takagi and Sugeno, 1985; Jang et al., 1997 ). A typical rule has the following form
IF x
IS B 1 AND x 2 IS B 2 THEN z  X  f  X  x 1 , x 2  X  is a crisp function in the consequent. With this form, the fuzzy system can be characterized as two input one output fuzzy systems.
 but it can be any function as long as it can appropriately describe the output of the model within the fuzzy region specified by the antecedent of the rule. Although there are no restrictions on the form of the input membership functions, Gaussians are used in the premise through out this work. A Gaussian membership function is specified by two parameters ( c , s )  X  x
 X  X  gaussian  X  x j ; c , s  X  X  exp where m is the membership grade, c represents the membership function X  X  center, s determines its spread; B is the membership which represents a linguistic variable, i  X  1,2, y , n is the rule number, j  X  1,2 is subscript of the input variables.

In the proposed self-tuner, the inputs e and _ e are normalized using three Gaussian membership functions; negative N, zero Z, and positive P. So that nine rules constitute the rule-base for each module. For simplicity, the consequent part has been chosen to be a first order function of e and _ e . So that the rules have the following form:
Rule where both B 1 and B 2 are positive (P), zero (Z) or negative (N), constants, and j  X  1,2, y , 9 is the rule number.

Fig. 6 shows the fuzzy reasoning procedure for a first order T X  X  model. The fuzzy part is only in its antecedent. Each rule has a crisp output and the overall output is obtained via weighted average. This fuzzy procedure avoids the time-consuming process of defuzzification required in a Mamdani fuzzy model. The weighted sum has been also used in Jang et al. (1997) to further reduce computations.

With the above structure, the data-base of each module consists of 27 free parameters (coefficients of the first order  X   X 
The following two closed-loop performance indices have been examined. The first uses the stopping distance and the integrated absolute error (IAE). The second uses the stopping distance and the integrated time multiplied by the absolute error (ITAE). These two performance indices are defined as follows: J J l ( k ) is the current slip ratio and D t is the time step. M is the are the weighting factors to emphasize the relative importance of the associated terms.

Because GA endeavors to maximize the fitness function, the fitness function of each gene is calculated as follows: F  X  1 1  X  J  X  19  X  where J is the performance index and 1 is introduced at the denominator to prevent the fitness function from becoming infinitely large. The overall training procedure is shown in Fig. 8.
To simplify the presentation, let us denote F in Eq. (19) as F IAE when J  X  J IAE and F ITAE when J  X  J ITAE . With this notation, the controller is called PID-IAE when the performance index is calculated by Eq. (17) and PID-ITAE when the performance index is given by Eq. (18).

Coding of the parameters to be adjusted can be stated as follows: c where a certain number of binary bits stands for each parameter. The combined string composes a gene (possible solution) in a 5. Numerical tests 5.1. Simulation data
Several numerical tests have been performed using the example data presented in Chih-Min Lin and Hsu March (2003) . and vehicle velocity are nearly zero at the end of braking time, the magnitude of slip tends to infinity. Therefore, simulations are conducted up to the point when the vehicle is slowed to 0.5 m/s.
The following case study deals with braking on dry asphalt, then after 1 s, the road changed to be a snowy one. The initial speed V  X  27.78 m/s, i.e. 100 km/h. These conditions have been considered, in order to examine robustness against road conditions.
To verify the full potentialities of the investigated PID level u s  X  7 4000 N m has been imposed to test the controllers in the presence of typical process nonlinearity. Genetic training has been performed using the parameter settings listed in Table 3.
The tuning procedure has been initialized using the membership functions shown in Fig. 9. After training, the obtained membership functions using F ITAE and F IAE are depicted in Fig. 10 and 11, respectively. The corresponding controllers are denoted PID-Fuzzy (before training), PID-IAE and PID-ITAE, respectively. The output displaying the membership functions within this range is to fully of discourse of _ e .

Referring to Fig. 10 and 11, it is shown that the negative (N) membership functions of both e and _ e are widely spread through the whole universe of discourses. It means that they have the largest impact in the computed control signal. This may explain why the PID-IAE and PID-IAE controllers exhibit faster conver-gence relative to PID-fuzzy controller, as will be shown in Section 5.3. To some extent, this can be attributed to that the closed-loop 0.2 leading to a negative overshoot at the transient period. This negative overshoot ( e ) invokes large control signal which counter-attacks this error, resulting in a faster convergence of the error relative to the PID-fuzzy controller.

For the other investigated methodologies (SSP and FSW described in Section 3), the control parameters have been this number ( H  X  V G ) represents the number of evaluated points inside the search space, which may be used as a reference for similar optimization problems. The wining gene (optimal solution) is the best of stochastically competitive 15,000 genes. Referring to
Eq. (20), with 32 bits for each variable, each possible solution (gene) has the length of 2976 bits. Performing the learning process using Matlab-7, M-file under Windows XP on a PC Pentium IV, 2800 Hz speed, requires about one and half hour. Due to the investigated controllers. Larger overshoot can be noticed by Z X  X  and an SSP with respect to PID-IAE.
 Time-history of the PID-IAE modules is depicted in Fig. 16. Unlike constant gain schemes (e.g. Z X  X ), their values are continuously changing during the braking period, which is imposed by the fuzzy modules, in order to counter attack the error and change in error. After one second, smooth transition on their values has taken place, in order to meet the new road demands. This behavior resulted in a relatively smoother torque, faster convergence of the slip ratio to the desired value and minimum stopping distance.

Because the input saturation level is significantly high, it may be interesting for the study to investigate the response when no saturation is imposed. Fig. 17 shows the response of 4 PID schemes. It comes out that fuzzy logic is more useful if saturations are significant in the process. This remark strengthens the fact that the performance of the classic PID can be improved using time-varying parameters ( Astrom 1996 ). Fig. 18 depicts the PID-IAE gains when saturation is not imposed. Higher variations can be noticed at the beginning of the braking. Table 5 gives the performance measures of the investigated seven controllers. PID-IAE exhibits the shortest stopping distance although it exhibits much higher overshoot than the case when saturation is imposed. As a performance measure, the percent overshoot when input saturation is and is not imposed is depicted in Fig. 19. schemes, i.e. Z X  X  and G-PID. On the other hand, PID-IAE and PID-Fuzzy have been greatly influenced.

Finally, one should consider the case of manual tuning of the controllers i.e. the fuzzy module X  X  parameters, since in practical possible only if a good process model (or experimental data) is available. It emerges that for the fuzzy-logic-based tuning methods for which a technique for the selection of the parameters of the fuzzy logic has not been considered, it might be difficult to perform this task effectively. For example, for the IFE method (Sub-Section 3.4), the choice of parameter k 3 is critical since its value has to be kept very low, otherwise the overall control system is destabilized. Also, the SSP control structure is very response and, when it succeeds the selected rules is very difficult References
