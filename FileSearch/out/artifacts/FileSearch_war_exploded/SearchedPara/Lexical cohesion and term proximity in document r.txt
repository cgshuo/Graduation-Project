 1. Introduction
In this paper, we present two new methods that rank documents on the basis of information on lexical cohesive relationships between query terms. The methods presented are grounded on the linguistic theory that cohesion is a characteristic of all well-formed natural language texts, which is achieved by means of various lexical and grammatical resources available to natural languages. Cohesion maintains continuity between parts of text, and distinguishes it from unconnected sequences of sentences. The importance of the presented methods is that they are founded on a firm linguistics theory of text cohesion ( Halliday &amp; Hasan, 1976; Hoey, 1991, 2005 ), which is shown to be applicable to text retrieval by Vechtomova, Karamuftuoglu, and Robertson (2006) . We provide further evidence in this paper that lexical cohesion property of natural language texts could be used to improve effectiveness of retrieval systems. Unlike various feedback-based methods, such as blind feedback or local context analysis, the presented methods do not involve feedback or query expan-sion, and rely solely on the lexical cohesion information inherent in text.

The work described in this paper extends the research reported by Vechtomova et al. (2006) in two impor-tant ways: it combines short (proximity) and long-distance lexical cohesive relationship information in ranking documents, and natural language sentence boundaries instead of arbitrary windows around query terms are used in the calculations, which is arguably a more reliable way of identifying cohesive relationships between query terms.

The results of evaluation experiments on four TREC collections we report give further support to the hypoth-esis put forward in Vechtomova et al. (2006) that lexical environments of distinct query terms in relevant docu-ments are more strongly linked to each other, and thus are more cohesive, than in non-relevant documents. The paper describes in detail how lexical cohesion between query terms in documents could be used in document rank-ing, and points to the potential of the cohesion theory in improving effectiveness of retrieval systems.
The rest of the paper is organised as follows: in the next section we present the concept of lexical cohesion and its application in information (document) retrieval, as well as a review of term proximity and related retrieval methods; in the subsequent section, the document ranking methods we have developed on the basis of lexical cohesion analysis of documents are presented; Section 4 presents the results and analysis of the experiments conducted to evaluate the effectiveness of the developed methods; the final section summarises the experimental results and provides suggestions for future work. 2. Lexical cohesion
Cohesion is a characteristic of text, which is achieved through semantic connectedness between words in text. Halliday and Hasan (1976) suggested that semantic connectedness or cohesion of text is realised through text-forming resources of the language. They identified two major types of cohesion: (1) grammatical, realised through grammatical structures, and consisting of reference, substitution, ellipsis and conjunction; and (2) lex-ical, realised through lexis. Lexical cohesion, in turn, is analysed in terms of two broad categories: reiteration and collocation. Reiteration refers to a range of relations between a lexical item and another one in text, where the second lexical item can be an exact repetition of the first, a general word, its synonym or near-synonym or its superordinate. Halliday and Hasan understood collocation as a relationship between lexical items that occur in the same environment, but they did not formulate a precise definition. Collocation is used by others to refer to phrases and idiomatic expressions, whose meaning cannot be completely derived from the meaning of their elements. For example Manning and Schu  X  tze (1999) defined collocation as grammatically bound ele-ments occurring in a certain order which are characterised by limited compositionality, i.e., the impossibility of deriving the meaning of the total from the meanings of its parts.

In this study, we investigate the relationship between document relevance and the level of lexical cohesion among query terms in a document based on two types of relationships:
Reiteration of the words in the contexts of distinct query terms. In other words, long-span transitive col-location relationship between query terms.
 Collocation, that is proximity or short-span relationship between query terms.

The latter covers not only idiomatic expressions, but also phrasal structures that exhibit a degree of flexi-bility in their composition (i.e., allow intervening words, change of word order, etc.), and words related by syntactical relationships within the sentence, e.g., subject X  X bject (cf. Section 3 ). 2.1. Lexical links and bonds
A single instance of a lexical cohesive relationship between two words is usually referred to as a lexical link sequences of linked words  X  lexical chains. The term  X  X hain X  was first introduced by Halliday and Hasan (1976) to denote a relation where an element refers to another element, which in turn refers to another element and so on. Morris and Hirst (1991) define lexical chains as sequences of related words in text.

Hoey (1991) pointed that text cohesion is formed not only by links between words, but also by semantic relationships between sentences. A cohesive relation between sentences was named by Hoey as a lexical bond. A lexical bond exists between two sentences when they are connected by a certain number of lexical links.
Hoey argues that an empirical method for estimating a minimum number of links the sentences should have to form a bond must rely on the proportion of sentence pairs that form bonds in text. Usually, two or three links are considered sufficient to constitute a bond between a pair of sentences. It is notable that in Hoey X  X  experiments, only 20% of bonded sentences were adjacent pairs. 2.2. Long-span lexical cohesive relationships in IR Long-span lexical cohesive relationships remain a relatively unexplored topic in information retrieval.
Stairmand(1997) mapped the lexical contents of documents into WordNet synsets, identifying in each docu-ment lexical clusters and lexical chains. At search time, each query term, mapped into a WordNet synset, is matched against the weighted synsets representing the documents. The results demonstrated improved perfor-mance for some queries only.

Ellman and Tait (1998) applied lexical chains to re-rank Web pages retrieved by a commercial search engine. Both the Web pages and the exemplar text used to retrieve them were represented by lexical chains.
Each Web page retrieved was then compared to the exemplar text taking into account the strength of every link in every chain used in representing the texts. The documents were then re-ranked based on their similarity to the query (exemplar text). Although inconclusive, the evaluation experiments suggested that there is some benefit in ranking documents in this way.

A detailed analysis of the use of lexical cohesion in IR is reported by Vechtomova et al. (2006) . They hypothesised that in a relevant document all query terms are likely to be used in related contexts, which tend to share many semantically-related words. In a non-relevant document, query terms are less likely to occur in related contexts, and hence they co-occur with fewer common words. It is, therefore, hypothesised that rele-vant documents tend to have a higher level of lexical cohesion between different query terms X  contexts than non-relevant documents. It is experimentally demonstrated in the same work that this hypothesis holds true.
The same work also reports a document ranking method based on the above arguments. The results of the evaluation experiments with TREC collections demonstrated that the lexical cohesion-based method per-formed better than a baseline IR system. 2.3. Term proximity-based methods in IR
A wide range of document ranking methods that use term proximity have been developed. They are based on the following two intuitions: (1) the closer the terms are in a document, the more likely it is that they are related, and (2) the closer the query terms are in a document, the more likely it is that the document is relevant to the query. Some of these methods attempt to capture phrases or multi-word units in text ( Fagan, 1989; Hull et al., 1997; Mitra, Buckley, Singhal, &amp; Cardie, 1997 ), while others rank documents by proximity between query terms within certain text units, e.g., windows of varying sizes, sentences, paragraphs or even entire doc-Tao &amp; Zhai, 2007 ).

A phrase is a general term referring to a wide variety of lexical associations with various degrees of idio-maticity or compositionality, such as proper nouns ( X  X elson Mandela X ,  X  X nited Nations X ), nominal com-pounds ( X  X musement park X ,  X  X ree kick X ,  X  X nimal protection X ) and phrasal verbs ( X  X each out X ,  X  X ign in X ).
Phrases received much attention in information retrieval research. This interest can be partially attributed to the fact that phrases tend to have a higher information content and specificity than single words, and there-fore represent the concepts expressed in text more accurately. Many leading statistical IR models, such as of single terms and are based on strong term independence assumptions. Experimentally these models have consistently demonstrated high performance results with a variety of large test collections in the evaluation exercises such as TREC ( Voorhees &amp; Buckland, 2004 ). Nevertheless, many attempts have been made to intro-duce phrases into the retrieval process, but so far with mixed and inconclusive results.

One of the most comprehensive early evaluations of phrases in IR was undertaken by Fagan (1989) . The main focus of his experiments was systematic evaluation of statistical phrases under different parameter set-tings, such as distance between their constituents and their frequency values. The evaluation results showed that performance of statistical phrases was in general similar to that of linguistically-derived (syntactic) phrases and better than performance of single terms. Fagan X  X  experiments were later replicated by Hull et al. (1997) , leading to only marginal performance gains from using syntactic phrases.

Mitra et al. (1997) conducted a large-scale evaluation of both syntactic and statistical phrases. By statistical phrases they understood contiguous bigrams of non-stopwords which occur in at least 25 documents. Syntac-tic phrases were defined in their experiments as specific Part-of-Speech sequences (e.g. Noun X  X oun, Adjec-tive X  X oun). Their studies demonstrate that overall both statistical and syntactic phrases have very little effect on performance.
 Clarke et al. (2000) proposed a technique of scoring documents based on query term proximity and density. They introduced the notion of cover, which is the shortest span of text containing instances of all query terms.
Document score is calculated based on two assumptions: (1) the shorter the cover, the more likely the corre-sponding document is relevant, and (2) the more covers are in a document, the more likely the document is relevant. The evaluation on a TREC data set showed the effectiveness of the method. A similar technique was proposed by Hawking and Thistlewaite (1996) , which also demonstrated promising results on a TREC data set.

There has also been some research directed towards modelling term dependencies within the language mod-elling framework. For example, Metzler and Croft(2005) proposed a method for modelling term dependencies via Markov random fields. The results showed significant improvements, particularly on large document collections.

Rasolofo and Savoy (2003) modified the BM25 weighting scheme to take into account proximity between pairs of query terms. For each possible pair of query terms they calculated term pair instance weight, which increases as the two terms occur closer to each other. The results of the evaluation on TREC ad-hoc collec-tions show small improvements in average precision and larger improvements in precision at 5, 10 and 20 doc-uments on some collections. Bu  X  ttcher et al. (2006) proposed another method of using term proximity in conjunction with the BM25 weighting scheme, which shares some intuitions with our term proximity-based weighting method (cf. Section 3.1 ). Their evaluation on TREC Terabyte track collections showed that proximity-based method increased precision at 10 and 20 documents. Their experiments also showed that proximity has a greater effect on performance as the collection size gets larger.

Vechtomova (2006) proposed a method of matching and weighting phrases in documents, which specifically addressed the problem of weighting non-contiguous and incomplete phrase matches in documents. The exper-iments showed small improvements over a baseline system on a TREC collection.

Some query expansion (QE) techniques rely on term proximity to extract terms from top-ranked documents (blind feedback) for addition to the user X  X  query. For example, in local context analysis (LCA) ( Xu &amp; Croft, 1996 ) noun groups that are collocated with query terms are extracted from the retrieved N top-ranked pas-sages of fixed size, and ranked by the significance of their association with all query terms. Top-ranked noun phrases are then used in query expansion. Some other approaches that make use of delimited document parts (e.g., best passages and windows) following blind feedback include ( Buckley &amp; Waltz, 2000; Cormack, Clarke,
Palmer, &amp; Kisman, 2000; Ishikawa, Satoh, &amp; Okumura, 1998; Strzalkowski et al., 2000 ). 3. Methodology
We propose new methods of using two types of lexical cohesive relationships between query terms in doc-ument ranking: short-distance relationship, i.e., collocation in the same grammatical-syntactic construct, which we consider as the sentence ( Fig. 1 )and long-distance relationship, determined by collocation with other words ( Fig. 2 ).

The method of using short-distance collocation (proximity) relationship between query terms in document ranking is described in Section 3.1 . We hypothesise that collocation of two different query terms in the same sentence helps predict the relevance of the document to the query. We also hypothesise that the closer the two query terms are to each other in a sentence, the more strongly they are related, and hence, the more evidence there is to the document X  X  relevance to the query.
The method of using long-distance relationship between query terms A and B is described in Section 3.2 .If distinct query terms A and B occur in two different sentences, but both of them co-occur at least with the same n terms, the two query terms are considered to be related by transitive collocation, and the two sentences by a lexical bond . The method of document ranking we propose in Section 3.2 uses the number of lexical bonds formed between a sentence containing a query term and all other sentences that contain a different query term in calculating a document score. The above two types of lexical cohesive relationships co-exist in texts, and therefore both should be taken into account in document ranking. In Section 3.3 we propose a method for combining them. 3.1. Term proximity weighting
Our approach to proximity-based weighting of query term occurrences in the document consists of mod-ifying the term frequency (tf) calculation in BM25. Instead of counting the actual frequency of a term X  X  occur-rence in the document to get tf, we introduce a pseudo-frequency (pf) value, calculated according to Eqs. (1) and (2) . The closer the occurrence of a query term t i is to another distinct query term X  X  occurrence within the same sentence, the more it will contribute to the term X  X  pf in the document. If a sentence contains only instance(s) of one query term, then each instance will contribute 1 to pf, which is equivalent to the standard tf score. The idea of using pseudo-frequency weights (Eqs. (1) and (2) ) was inspired by a work on weighting terms occurring in documents with multiple fields ( Robertson, Zaragoza, &amp; Taylor, 2004 ), which proposes a method for weighting term frequencies based on the importance of the document field in which they occur. where c ( t i )  X  contribution of the i instance of the query term t occurring in sentence s to pf; span( t tance in number of non-stop words (stems) between the i th instance of the query term t and the nearest occur-rence of any other term q , which belongs to the same query (Q) , and is not the same term as t ; p  X  tuning constant, moderating the effect of the span size between two terms. The following parameters of p were eval-uated (see Section 4 ): 0.1, 0.25, 0.5, 0.75, 1. where N  X  the number of instances of query term t in the document.
After pf is calculated for a query term, its Term Weight (TW) in the document is calculated in the same way as in the BM25 formula ( Spa  X  rck Jones et al., 1998 ), with pf used instead of tf (Eq. (3) ): where k 1 is the term frequency normalisation factor, which moderates the contribution of the weight of fre-quent terms. If k 1 = 0, pf has no effect on the term weight, while the higher the value of k pf has on the term weight. In the evaluation described in Section 4 the following values of k 0, 0.25, 0.5, 0.75, 1, 1.2, 1.5, 2, 2.5. NF is the document length normalisation factor, and is calculated in the same way as in the BM25 document ranking function, as expressed in Eq. (4) .
 where b is a tuning constant, DL is the document length in word counts; AVDL is the average document length in the document collection. In the evaluation described in Section 4 the following values of b were eval-uated: 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.75, 1.

The document matching score is calculated in the standard way as the sum of the weights of all query terms found in the document (Eq. (5) ).
 where j Q j is the number of terms in the query. 3.2. Lexical bonds in document retrieval
Hoey (1991) stated that existence of a lexical bond between two sentences in a document suggests that they discuss the same topic. We hypothesise that by calculating lexical bonds between sentences containing different query terms, we can determine whether these terms are used in related contexts, and hence whether they dis-cuss the same topic. For instance, consider a query from the HARD track of TREC 2005  X  X  X uman smuggling  X  : a matching non-relevant document may discuss two independent topics such as  X  X  X muggling of drugs  X  and  X  X  X uman rights violations  X  in different contexts. While it is possible in the above example that sentences con-taining the query terms may have some words in common (such as discourse-forming words) that form lexical bonds, we hypothesise that there will be fewer bonds between these sentences compared to a relevant docu-ment which discusses  X  X  X uman smuggling  X  , mentioning both words (together or separately) several times throughout the text in related contexts. Our method aims to reward documents of the second type: i.e., those that contain different query terms in related contexts.

Initially, for each sentence s containing a query term, we calculate the number of lexical bonds formed between s and other sentences containing different query terms. More formally the number of bonds for sen-tence s is calculated as follows: For each sentence r 2 Document d (where r 6  X  s ) End For
In the reported experiments we only considered lexical links formed by simple lexical repetition, i.e., a lex-ical link is considered to exist between two instances of the same lexeme, but with possible morphological vari-ations, such as past tense forms of verbs, plural forms of nouns, etc. This is done by stemming the document representation in advance and calculating lexical links using stemmed terms. method to consider other types of lexical links, e.g., formed by synonymy and hyponymy, however, experi-ments by Vechtomova et al. (2006) showed that lexical links formed using WordNet relationships did not yield significant improvement over links formed by simple lexical repetition in a document ranking task. This, how-ever, could be due to the limitations of WordNet.

BondThreshold in the above algorithm is the number of links that must exist between two sentences in order for them to form a bond. We experimented with different values (1 X 3), with BondThreshold = 1 giving the best results.

In computing lexical bonds score, we follow the same principle of calculating the pseudo-frequency weights as applied to term proximity weighting (Section 3.1 ). After the number of bonds between sentence s and other sentences containing different query terms is determined, the contribution to pseudo-frequency of the i instance of query term t occurring in sentence s is calculated as follows: where Bonds(s)  X  number of bonds sentence s has with other sentences containing different query terms; n  X  normalisation factor (0 6 n 6 1); AveBonds  X  average number of bonds between sentences in the document, calculated as follows: where TotalBonds  X  total number of lexical bonds formed between all sentences in the document; NumSent  X  total number of sentences in the document.

The pseudo-frequency weight (pf), term weight (TW) and document matching score (MS) are then calcu-lated in the same way as described in Section 3.1 above. 3.3. Combining the proximity and bond scores
In addition to ranking documents based on lexical bonds and term proximity separately, we propose to use the combination of the two factors in calculating the pseudo-frequency weight:
The pseudo-frequency weight (pf), term weight (TW) and document matching score (MS) are then calculated in the same way as described in Section 3.1 above. In the following section, we highlight differences between the methods presented here and two related methods previously developed. 3.4. Comparison with phrase-based and lexical links-based document ranking
In Vechtomova (2006) , a proximity-based ranking method is described. In this method all terms in the  X  X  X itle  X  field of a TREC topic are treated as a single phrase (referred to henceforth as query phrase). For the query phrase, all possible contiguous and non-contiguous subphrases, including the original query phrase, are recorded in a list ranked in descending order of their length. For each subphrase in the list, we extract the minimal matching strings 2 in the document containing all the words of the subphrase in any order. Each time a minimal matching string is found, it is recorded and removed from the document representation, and the procedure is repeated with the same subphrase until no matching string is found, in which case the program attempts to match the next subphrase in the list, and so on. Matching strings containing query phrases are referred to as windows. The sets of windows in the document containing exactly the same phrase words, but possibly within different spans and in different order, are grouped into bins. All windows in each bin receive the same weight BinWindowWeight , which is calculated as the sum of idf values of all words constitut-ing the query phrase instance in the window. Matching Score for a document, MS, is calculated as where wf n is the window frequency in the bin n (Eq. (10) ); BinWindowWeight bin n ; k 1 is the window frequency normalisation factor, which moderates the contribution of the weight of frequent windows; NF is the document length normalisation factor (calculated in the same way as in the
BM25 document ranking function (Eq. (4) )). where span=pos(l) pos(f) , pos(l)  X  position number of the last query term in the window w , and pos(f)  X  posi-tion number of the first query term in the window w ; p is a tuning parameter to adjust the effect of span on wf. The new method proposed in this paper (Section 3.2 ) has the following advantages over the above method:
In the new method, we only count proximity between distinct query terms within the same sentence. In the old method, the entire document constitutes the context within which term proximity is calculated. Argu-ably, within-sentence co-occurrence is a more reliable indication of terms X  relatedness than within-docu-ment co-occurrence.

In the old method there is a problem of inconsistent window frequency computation, as the same query term may be part of different subphrases and therefore allocated to different bins. To illustrate the problem, con-sider the query  X  X  X ubble Telescope Achievement  X  . Two of the bins could be  X  X  X ubble Telescope  X  and  X  X  X ele-scope Achievement  X  with corresponding window frequencies (wf) of 3 and 3 in document A, and 5 and 1 in document B. Due to the non-linear window frequency normalisation factor ( k1 ), each window containing  X  X  X ubble Telescope  X  in document B would contribute less to wf than each window with  X  X  X ubble Telescope  X  in document A. This problem is avoided in the new method as the pseudo-frequency (pf) in Eq. (2) is calculated for each query term based on all its occurrences in a document, rather than separately for each bin.
Vechtomova et al. (2006) present a method, which calculates lexical cohesion between the contexts of dis-tinct query terms. The context of a query term in the document is understood as all non-stopwords extracted from fixed-size windows surrounding every instance of the term in the document. The number of lexical links is counted between the contexts of each pair of distinct query terms, and is normalised to give the document X  X  lexical cohesion score (LCS links ) as follows: where L  X  the total number of lexical links in a document; V  X  the size (in non-stopwords) of all merged win-dows in a document.

The document matching score (COMB-LCS) is calculated by linearly combining BM25 document matching score with LCS as follows: where x is a tuning constant which regulates the effect of LCS.

The method proposed in this paper (Section 3.1 ) has three important improvements over the old method presented above:
Lexical cohesion between distinct query terms is estimated by calculating lexical bonds between sentences containing distinct query terms, instead of arbitrary windows.

The old method has a disadvantage of random attribution of collocates to query terms: if the windows of two distinct query terms a and b overlap, we cannot attribute the words in these windows to both terms, because in this case each word would form a link with itself and artificially boost the link count. It is often not possible to determine whether collocates in the overlapping parts of two windows belong to a or b , therefore they are attributed to one of them randomly. In the new method all words occurring in the sen-tence containing both query terms a and b are considered as collocates of both, however, this does not pose a problem because we do not calculate the bond of the sentence with itself.

Improved normalisation. The number of lexical bonds formed between sentence s containing a query term and other sentences containing different query terms is normalised by the average number of bonds formed between any sentences in the document. The rationale is that we should not reward documents which have higher overall lexical cohesion, but only those documents, whose query-containing sentences are more cohesive compared to the overall document.

To compare the new proximity-and bonds-based methods proposed in this paper to the methods presented in Vechtomova (2006) and Vechtomova et al. (2006) , we have tested them on HARD 2004 and HARD 2005 collections. The results given in Tables 1 and 2 show that the new methods outperform the old ones in both collections in most measures. The b and k 1 parameters of BM25 runs shown in the tables are those yielding the highest performance in Precision at 10 retrieved documents (P10) in the corresponding collections. The details of the evaluation experiments are reported in the next section. 4. Evaluation and discussion of results
In this section we present the evaluation of the methods proposed in this paper. Evaluation was conducted using the data from four TREC collections summarised in Table 3 .

One of the baselines used in our evaluation experiments was the well-known BM25 document ranking func-tion implemented in the Wumpus IR system 3 ( Bu  X  ttcher et al., 2006 ). Before commencing the experiments, we evaluated BM25 with different values for k 1 and b (default values are 1.2 and 0.75, respectively) on all four collections. Values giving the highest performance in Mean Average Precision (MAP) and P10 are summarised in Tables 4 and 5 . As it is seen in these tables, different values of the parameters k performance in different collections. Therefore, we compared the experimental runs to the BM25 run with the best performing b and k 1 values in each collection.

As a second baseline we have used the method (BM25tp) reported in ( Bu  X  ttcher et al., 2006 ) and also imple-mented in Wumpus. We have selected this method because it is a proximity-based method, hence comparable to the methods reported in this paper, and it is shown to have yielded a good performance in an experiment using the TREC collections. Similarly, we have evaluated this method in different collections, and results sug-gest that different values of b and k 1 yielded the best performance in different collections ( Tables 4 and 5 ).
To construct the queries, all terms from the Title field of TREC topics were used in all runs.  X  X  X roximity  X  runs given in Table 6 were conducted by using the proximity method (Section 3.1 ).  X  X  X onds  X  runs shown used the method described in Section 3.2 , and  X  X  X ombined  X  runs used the method described in Section 3.3 . Top 2000 documents were retrieved using BM25 implemented in Wumpus with the best b and k in Table 5 ) for each collection and re-ranked using each of the experimental methods, which were implemented as a set of Perl scripts. Because there was a slight variation in stemming and stopword use between our system and Wumpus, we also report the performance of our implementation of BM25 (referred to as BM25-u in
Tables 6 and A1 ).  X  X  X roximity  X  ,  X  X  X onds  X  and  X  X  X ombined  X  runs were conducted using the same Perl scripts as  X  X  X M25-u  X  , which, therefore, can be considered as a more appropriate baseline than BM25 implemented in Wumpus. Comparison to BM25-u allows us to isolate the effect of proximity and bonds methods on per-formance from other factors, such as stemming and stopwords.
 The standard performance measures were calculated for the top 1000 re-ranked documents. In Table A1 in
Appendix we show all the runs which achieved the highest performance in MAP and P10 in at least one col-lection. For the purpose of comparison, we report the results of these runs in all other collections. For easy reference we present an extract from Table A1 showing only the runs which yielded the highest P10 in each collection ( Table 6 ). The results are reported in MAP, P10, R-Precision, and Binary Preference (Bpref). As can be seen from Table 6 , many of the experimental runs improved performance over the baselines.
Table 6 shows that in some collections the bonds-based, in others the proximity-based method yielded better significance levels, respectively, compared to BM25-u. It is also worth emphasising that the methods reported in this study do not involve query expansion. Although, some of the methods found in the literature reported to have achieved higher performance in the Robust 2005 track, terms derived either from external sources or the test collection ( Voorhees, 2006 ).

It may be useful to look at the terms that form bonds between sentences (link-terms) in relevant and non-relevant documents. For instance, in topic 407  X  X  X himpanzee Language Ability  X  ( HARD 2004 ), the following terms form bonds between sentences in relevant documents (excluding the query terms and in decreasing fre-quency of occurrence):  X  X  X iew, situation, primate, hear, different, challenge, animal, human  X  . In non-relevant documents, the terms that form bonds, on the other hand, are the following:  X  X  X hina, england/english, micro-soft, spain/spanish, speak, human, java, univision  X  . Terms such as  X  X  X rimate  X  ,  X  X  X nimal  X  and  X  X  X uman  X  that form bonds in relevant documents have an obvious relation to the subject matter of topic 407. In non-relevant documents there seems to be a number of off-topic link terms such as  X  X  X icrosoft  X  ,  X  X  X ava  X  , and  X  univision  X  .
The first two terms seem to refer to computer technology and programming languages, and the last term refers to a Spanish-language TV station in the US. As another example consider topic 428 ( HARD 2004 )  X  X  X nterna-tional organ traffickers  X  . The following are the link-terms in relevant and non-relevant documents, respec-tively:  X  X  X uman, south africa, kidney, brazil/brazilian, federal, durban, syndicate  X  ,  X  drug, police, federal, child/children, USA/united states, report, afghanistan  X  . Two of the link-terms in non-relevant documents, namely,  X  drug  X  and  X  X  X fghanistan  X  are most likely off-topic and related to drug rather that organ trafficking.
Another interesting example is topic 651  X  X  X S ethnic population  X  ( HARD 2005 ). The link-terms in relevant documents are:  X  X  X opulation, hispanic, USA/united states, minorities, ethnic, american/america, group, black, catholic, latino  X  , while link-terms in non-relevant documents are:  X  X  X thnic, albanian, kosovo, USA/united states, population, minorities, serb, china, group, yugoslavia  X  . Clearly, terms such as  X  X  X ugoslavia  X  ,  X  X  X lba-nian  X  and  X  X  X osovo  X  are related to the subject of ethnic minorities, but not in the US. It may be possible to improve performance of the Bonds method further if one counts only links between a subset of terms, such as those identified using the blind feedback process.

As expected in many topics link-terms in relevant and non-relevant documents seem to be on-topic, and it may be difficult to know which ones are better without looking at the actual context in which they are used.
The following are the link-terms in relevant and non-relevant documents for topic 427 in HARD 2004  X  X  X ra-zilian Landless Workers Movement  X  :  X  X  X razil/brazilian, lula, squatter, sao, paulo, reform  X  ,  X  brazil/brazilian, silva, party, USA/united states, lula, farm  X  .

The combination of the proximity matching score with the lexical bonds score led to noticeably better per-formance than either method only in HARD 2005 (3.4% in MAP, 2.6% in P10). There are smaller perfor-mance improvements in other collections in both MAP and P10. Figs. 3 X 6 in Appendix show the differences in
Average Precision and P10 from the best baseline runs (BM25-u) of the three methods per topic in HARD 2004 and HARD 2005 . The results given in these figures show that in a considerable number of cases either the proximity-, or the bonds-based methods yielded the most gain in performance. It can also be observed that only in a number of topics the combination of these two methods yielded performance gains. This suggests that there is a room for improvement in the formula given in Eq. (8) used for combining the proximity-and bonds-based methods (see discussion in Section 5 ).

An example of the topic which benefited from the use of the Proximity method is Topic 341 in HARD 2005 ,  X  X  X irport Security  X  , where Average Precision increased from 0.1037 in the baseline run (BM25-u) to 0.1351 in the Proximity run, but only to 0.1182 in the Bonds runs. The query is comprised of  X  X  X irport Security  X  a stable phrase. It can be reasoned that queries that consist of stable phrases benefit better from the Proximity method than the Bonds method. An example of the topic which was improved by the Bonds method is topic 419 in
HARD 2005 :  X  X  X ecycle, automobile tires  X  : Average Precision in this topic increased from 0.0863 in the baseline run (BM25-u) to 0.1012 in the Bonds run, while it dropped to 0.0806 in the Proximity run. A relevant docu-ment on this topic may not contain the words, such as  X  X  X ecycle  X  and  X  X  X utomobile  X  in the same sentence as they are not a stable idiomatic phrase. However, the method based on lexical bonds would reward those documents in which the two words occur in similar contexts in different sentences, i.e., their sentences have lexical bonds. Further research is needed to understand the effect of the two methods on different types of queries. 5. Conclusions and future work
In this work we investigated the effect of two types of lexical cohesive relationships on document ranking: the short-span collocation relationship (proximity) between query terms, and the long-span transitive colloca-tion relationship (lexical bonds), established by the co-occurrence of the query terms with the same words. We developed two novel document scoring methods by considering these two types of relationships, both of which extend the well-known BM25 term weighting function. Both the proximity and lexical bonds methods showed some performance improvements over the baselines  X  BM25 and BM25tp. The combination of both methods achieved further gains in performance in some topics.

Our analysis shows that there is a number of topics that are improved by only one of the methods. This prompts the next line of research to determine, based on some characteristics of the query, which method is more likely to perform better with a particular query. One possible idea is to investigate the use of various collocation measures to determine how stable the co-occurrence of query terms is. It may then be possible to adjust the relative contribution of the proximity and bonds to the pseudo-frequency component of the combined document score. For example, if they are more likely to occur as a stable expression, the contribution of the Proximity score to the overall document score could be boosted. Alternatively, if they are more likely to occur separately in text, the effect of the Bonds method could be increased. For example, documents containing the query terms  X  X  X musement park  X  in adjacent positions are more likely to be relevant, therefore we can place more weight on the proximity factor, rather than the lexical bonds factor. On the other hand, query terms  X  X  X S, investment, Africa  X  are not a nominal compound as  X  X  X muse-ment park  X  , and relevant documents may not necessarily contain these words in the same sentence. Queries of this type may benefit from increasing the weight of the lexical bonds factor in the combined document score.

Another possible way to improve the lexical cohesion model proposed in this paper is by means of query structuring, so that proximity and bonds are considered only between certain query terms. We did a preliminary analysis of some of the queries from the HARD 2005 track collection, which demon-strate promising results. Consider, for example, topic 310  X  Radio Waves and Brain Cancer  X  . Intuitively, one expects that bonds should be calculated between pairs of sentences that contain different phrases  X  either  X  X  X rain cancer  X  , or  X  X  X adio waves  X  . We tested this hypothesis by manually structuring the query as follows: 1. (brain AND cancer) BOND (radio AND waves) 2. (brain OR cancer) BOND (radio OR waves)
In the first query structure bonds are calculated between only those sentences, one of which contains both  X  X  X rain  X  and  X  X  X ancer  X  and the other  X  X  X adio  X  and  X  X  X aves  X  . The second structure has more relaxed con-straints: one of the sentences must contain  X  X  X rain  X  or  X  X  X ancer  X  , while the other  X  X  X adio  X  or  X  X  X aves  X  . The results for this topic showed that the second structure outperforms the Bonds method reported in the paper.
The main research question here is how to automatically determine the optimal query structure. We are cur-rently investigating different methods, such as mutual information, for building such query structures automatically. References
