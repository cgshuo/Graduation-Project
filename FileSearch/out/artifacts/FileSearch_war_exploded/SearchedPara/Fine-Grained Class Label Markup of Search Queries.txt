 Search queries are generally short and rarely contain much explicit syntax, making query understanding a purely semantic endeavor. Furthermore, as in noun-phrase understanding, shallow lexical semantics is often irrelevant or misleading; e.g., the query [ trop-ical breeze cleaners ] has little to do with island va-cations, nor are desert birds relevant to [ 1970 road runner ], which refers to a car model.

This paper introduces class-label correlation (
CLC ), a novel unsupervised approach to extract-ing shallow semantic content that combines class-based semantic markup (e.g., road runner is a car model ) with a latent variable model for capturing weakly compositional interactions between query constituents. Constituents are tagged with IsA class labels from a large, automatically extracted lexicon, using a probabilistic context free grammar (PCFG). Correlations between the resulting label  X  term dis-tributions are captured using a set of latent produc-tion rules specified by a hierarchical Dirichlet Pro-cess (Teh et al., 2006) with latent data groupings.
Concretely, the IsA tags capture the inventory of potential meanings (e.g., jaguar can be labeled as european car or large cat ) and relevant con-stituent spans, while the latent variable model per-forms sense and theme disambiguation (e.g., [ jaguar habitat ] would lend evidence for the large cat la-bel). In addition to broad sense disambiguation, CLC can distinguish closely related usages, e.g., the use of dell in [ dell motherboard replacement ] and [ dell stock price ]. 1 Furthermore, by employing IsA class labeling as a preliminary step, CLC can account for common non-compositional phrases, such as big ap-ple unlike systems relying purely on lexical seman-tics. Additional examples can be found later, in Fig-ure 5.

In addition to improving query understanding, po-tential applications of CLC include: (1) relation ex-traction (Baeza-Yates and Tiberi, 2007), (2) query substitutions or broad matching (Jones et al., 2006), and (3) classifying other short textual fragments such as SMS messages or tweets.

We implement a parallel inference procedure for CLC and evaluate it on a sample of 500M search queries along two dimensions: (1) query constituent chunking precision (i.e., how accurate are the in-ferred spans breaks; cf., Bergsma and Wang (2007); Tan and Peng (2008)), and (2) class label assign-ment precision (i.e., given the query intent, how rel-evant are the inferred class labels), paying particu-lar attention to cases where queries contain ambigu-ous constituents. CLC compares favorably to sev-eral simpler submodels, with gains in performance stemming from coarse-graining related class labels and increasing the number of clusters used to cap-ture between-label correlations. ( Paper organization ): Section 2 discusses relevant background, Section 3 introduces the CLC model, Section 4 describes the experimental setup em-ployed, Section 5 details results, Section 6 intro-duces areas for future work and Section 7 concludes. Query understanding has been studied extensively in previous literature. Li (2010) defines the se-mantic structure of noun-phrase queries as intent heads (attributes) coupled with some number of in-tent modifiers (attribute values), e.g., the query [ al-ice in wonderland 2010 cast ] is comprised of an in-tent head cast and two intent modifiers alice in won-derland and 2010 . In this work we focus on seman-tic class markup of query constituents, but our ap-proach could be easily extended to account for query structure as well.

Popescu et al. (2010) describe a similar class-label-based approach for query interpretation, ex-plicitly modeling the importance of each label for a given entity. However, details of their implemen-tation were not publicly available, as of publication of this paper.

For simplicity, we extract class labels using the seed-based approach proposed by Van Durme and Pas  X ca (2008) (in particular Pas  X ca (2010)) which gen-eralizes Hearst (1992). Talukdar and Pereira (2010) use graph-based semi-supervised learning to acquire class-instance labels; Wang et al. (2009) introduce a similar CRF-based approach but only apply it to a small number of verticals (i.e., Computing and Elec-tronics or Clothing and Shoes ). Snow et al. (2006) describe a learning approach for automatically ac-quiring patterns indicative of hypernym (IsA) rela-tions. Semantic class label lexicons derived from any of these approaches can be used as input to CLC .
Several authors have studied query clustering in the context of information retrieval (e.g., Beeferman and Berger, 2000). Our approach is novel in this regard, as we cluster queries in order to capture cor-relations between span labels, rather than explicitly for query understanding.

Tratz and Hovy (2010) propose a taxonomy for classifying and interpreting noun-compounds, fo-cusing specifically on the relationships holding be-tween constituents. Our approach yields similar top-ical decompositions of noun-phrases in queries and is completely unsupervised.

Jones et al. (2006) propose an automatic method for query substitution , i.e., replacing a given query with another query with the similar meaning, over-coming issues with poor paraphrase coverage in tail queries. Correlations mined by our approach are readily useful for downstream query substitution.
Bergsma and Wang (2007) develop a super-vised approach to query chunking using 500 hand-segmented queries from the AOL corpus. Tan and Peng (2008) develop a generative model of query segmentation that makes use of a language model and concepts derived from Wikipedia article titles. CLC differs fundamentally in that it learns con-cept label markup in addition to segmentation and uses in-domain concepts derived from queries them-selves. This work also differs from both of these studies significantly in scope, training on 500M queries instead of just 500.

At the level of class-label markup, our model is related to Bayesian PCFGs (Liang et al., 2007; John-son et al., 2007b), and is a particular realization of an Adaptor Grammar (Johnson et al., 2007a; Johnson, 2010).

Szpektor et al. (2008) introduce a model of con-textual preferences , generalizing the notion of selec-tional preference (cf. Ritter et al., 2010) to arbitrary terms, allowing for context-sensitive inference. Our approach differs in its use of class-instance labels for generalizing terms, a necessary step for dealing with the lack of syntactic information in queries. Figure 1: Overview of CLC markup generation for the query [ brighton vinyl windows ]. Arrows denote multinomial distributions. Input to CLC consists of raw search queries and a partial grammar mapping class labels to query spans (e.g., building materials  X  vinyl windows). CLC in-fers two additional latent productions types on top of these class labels: (1) a potentially infinite set of label clusters  X  L l productions V , and (2) a finite set of query clusters  X  Figure 1 for an overview.

Operationally, CLC is implemented as a Hierar-chical Dirichlet Process (HDP; Teh et al., 2006) with latent groups coupled with a Probabilistic Context Free Grammar (PCFG) likelihood function (Figure 2). We motivate our use of an HDP latent class model instead of a full PCFG with binary produc-tions by the fact that the space of possible binary rule combinations is prohibitively large (561K base labels; 314B binary rules). The next sections discuss the three main components of CLC :  X  3.1 the raw IsA class labels,  X  3.2 the PCFG likelihood, and  X  3.3 the HDP with latent groupings. 3.1 IsA Label Extraction IsA class labels (hypernyms) V are extracted from a large corpus of raw Web text using the method proposed by Van Durme and Pas  X ca (2008) and ex-tended by Pas  X ca (2010). Manually specified patterns are used to extract a seed set of class labels and the resulting label lists are reranked using cluster purity measures. 561K labels for base noun phrases are collected. Table 1 shows an example set of class labels extracted for several common noun phrases. Similar repositories of IsA labels, extracted using other methods, are available for experimental pur-Table 1: Example production rules collected using the semi-supervised approach of Van Durme and Pas  X ca (2008). poses (Talukdar and Pereira, 2010). In addition to extracted rules, the CLC grammar is augmented with a set of null rules , one per unigram, ensuring that every query has a valid parse. 3.2 Class-Label PCFG In addition to the observed class-label production rules, CLC incorporates two sets of latent produc-tion rules coupled via an HDP (Figure 1). Class label  X  query span productions extracted from raw text are clustered into a set of latent label produc-tion clusters L = { l 1 ,...,l  X  } . Each label pro-duction cluster l k defines a multinomial distribution over class labels V parametrized by  X  L l ally,  X  L l productions that are found in similar queries, for ex-ample the class labels states, northeast states, u.s. states, state areas, eastern states, and certain states might be included in the same coarse-grained cluster due to similarities in their productions.

Each query q  X  Q is assigned to a latent query cluster c q  X  C{ c 1 ,...,c  X  } , which defines a dis-tribution over label production clusters L , denoted  X  tween label production clusters and are necessary for performing sense disambiguation and capturing se-lectional preference. Query clusters and label pro-duction clusters are linked using a single HDP, al-lowing the number of label clusters to vary over the course of Gibbs sampling, based on the variance of the underlying data (Section 3.3). Viewed as a gram-mar, CLC only contains unary rules mapping labels to query spans; production correlations are captured directly by the query cluster, unlike in HDP-PCFG (Liang et al., 2007), as branching parses over the en-Figure 2: Generative process and graphical model for CLC . The top section of the model is the standard tire label sparse are intractably large.

Given a query q , a query cluster assignment c q and a set of label production clusters L , we define a parse of q to be a sequence of productions t q forming a parse tree consuming all the tokens in q . As with Bayesian PCFGs (Johnson, 2010), the probability of a tree t q is the product of the probabilities of the production rules used to construct it where R q is the set of production rules used to de-rive t q , P ( r |  X  L l cluster assignment l r , and P ( l r |  X  C c ity of label cluster l r in query cluster c .
The probability of a query q is the sum of the probabilities of the parse trees that can generate it, where { t | y ( t ) = q } is the set of trees with q as their yield (i.e., generate the string of tokens in q ). 3.3 Hierarchical Dirichlet Process with Latent We complete the Bayesian generative specification of CLC with an HDP prior linking  X  C and  X  L . The HDP is a Bayesian generative model of shared struc-ture for grouped data (Teh et al., 2006). A set of base clusters  X   X  GEM (  X  ) is drawn from a Dirich-let Process with base measure  X  using the stick-breaking construction, and clusters for each group k ,  X  k  X  DP (  X  ) , are drawn from a separate Dirichlet Process with base measure  X  , defined over the space of label clusters. Data in each group k are condi-tionally independent given  X  . Intuitively,  X  defines a common  X  X enu X  of label clusters, and each query cluster  X  C k defines a separate distribution over the label clusters.

In order to account for variable query-cluster as-signment, we extend the HDP model with latent groupings  X  q  X  Dir (  X  ) for each query. The re-sulting Hierarchical Dirichlet Process with Latent Groups ( HDP -LG ) can be used to define a set of query clusters over a set of (potentially infinite) base label clusters (Figure 2). Each query cluster  X  C (la-tent group) assigns weight to different subsets of the available label clusters  X  L , capturing correlations between them at the query level. Each query q main-tains a distribution over query clusters  X  q , capturing its affinity for each latent group. The full generative specification of CLC is shown in Figure 2; hyperpa-rameters are shown in Table 2.

In addition to the full joint CLC model, we evalu-ate several simpler models: 1. CLC -BASE  X  no query clusters, one label per 2. CLC -DPMM  X  no query clusters, DPMM (  X  C ) 3. CLC -HDP -LG  X  full HDP -LG model with | C | as well as various hyperparameter settings. 3.4 Parallel Approximate Gibbs Sampler We perform inference in CLC via Gibbs sampling, leveraging Multinomial-Dirichlet conjugacy to inte-grate out  X  ,  X  C and  X  L (Teh et al., 2006; Johnson et al., 2007b). The remaining indicator variables c , z and l are sampled iteratively, conditional on all other variable assignments. Although there are an expo-nential number of parse trees for a given query, this space can be sampled efficiently using dynamic pro-gramming (Finkel et al., 2006; Johnson et al., 2007b)
In order to apply CLC to Web-scale data, we implement an efficient parallel approximate Gibbs sampler in the MapReduce framework Dean and Ghemawat (2004). Each Gibbs iteration consists of a single MapReduce step for sampling, followed by an additional MapReduce step for computing marginal counts. 2 Relevant assignments c , z and l are stored locally with each query and are dis-tributed across compute nodes. Each node is respon-sible only for resampling assignments for its local set of queries. Marginals are fetched opportunisti-cally from a separate distributed hash server as they are needed by the sampler. Each Map step computes a single Gibbs step for 10% of the available data, us-ing the marginals computed at the previous step. By resampling only 10% of the available data each it-eration, we minimize the potentially negative effects of using the previous step X  X  marginal distribution. 4.1 Query Corpus Our dataset consists of a sample of 450M En-glish queries submitted by anonymous Web users to Figure 3: Distribution in the query corpus, bro-ken down by query length (red/solid=all queries; blue/dashed=queries with ambiguous spans); most queries contain between 2-6 tokens.
 Google. The queries have an average of 3.81 tokens per query (1.7B tokens). Single token queries are re-moved as the model is incapable of using context to disambiguate their meaning. Figure 3 shows the dis-tribution of remaining queries. During training, we include 10 copies of each query (4.5B queries total), allowing an estimate of the Bayes average posterior from a single Gibbs sample. 4.2 Evaluations Query markup is evaluated for phrase-chunking pre-cision (Section 5.1) and label precision (Section 5.2) by human raters across two different samples: (1) an unbiased sample from the original corpus, and (2) a biased sample of queries containing ambigu-ous spans.

Two raters scored a total of 10K labels from 800 spans across 300 queries. Span labels were marked as incorrect (0.0), badspan (0.0), ambiguous (0.5), or correct (1.0), with numeric scores for label pre-cision as indicated. Chunking precision is measured as the percentage of labels not marked as badspan .
We report two sets of precision scores depend-ing on how null labels are handled: Strict evaluation treats null-labeled spans as incorrect, while Normal evaluation removes null-labeled spans from the pre-cision calculation. Normal evaluation was included since the simpler models (e.g., CLC -BASE ) tend to produce a significantly higher number of null assign-ments.

Model evaluations were broken down into max-imum a posteriori (MAP) and Bayes average esti-mates. MAP estimates are calculated as the single most likely label/cluster assignment across all query copies; all assignments in the sample are averaged Figure 4: Convergence rates of CLC -BASE (red/solid), CLC -HDP -LG 100 C , 40 L (green/dashed), CLC -HDP -LG 1000 C , 40 L (blue/dotted) in terms of % of query cluster swaps, label cluster swaps and null rule assignments. to obtain the Bayes average precision estimate. 3 A total of five variants of CLC were evaluated with different combinations of | C | and HDP prior con-centration  X  C (controlling the effective number of label clusters). Referring to models in terms of their parametrizations is potentially confusing. There-fore, we will make use of the fact that models with  X 
C = 1 yielded roughly 40 label clusters on aver-age, and models with  X  C = 0 . 1 yielded roughly 200 label clusters, naming model variants simply by the number of query and label clusters: (1) CLC -BASE , (2) CLC -DPMM 1C-40L, (3) CLC -HDP -LG 100C-40L, (4) CLC -HDP -LG 1000C-40L, and (5) CLC -HDP -LG 1000C-200L. Figure 4 shows the model convergence for CLC -BASE , CLC -HDP -LG 100C-40L, and CLC -HDP -LG 1000C-40L. 5.1 Chunking Precision Chunking precision scores for each model are shown in Table 3 (average % of labels not marked badspan ). CLC -HDP -LG 1000C-40L has the high-est precision across both MAP and Bayes esti-mates (  X  93% accuracy), followed by CLC -HDP -LG 1000C-200L (  X  90% accuracy) and CLC -DPMM 1C-40L (  X  85%). CLC -BASE performed the worst by a significant margin (  X  78%), indicating that label coarse-graining is more important than query clus-tering for chunking accuracy. No significant dif-ferences in label chunking accuracy were found be-tween Bayes and MAP inference. 5.2 Predicting Span Labels The full CLC -HDP -LG model variants obtain higher label precision than the simpler models, with CLC -HDP -LG 1000C-40L achieving the highest precision of the three (  X  63% accuracy). Increasing the num-ber of label clusters too high, however, significantly reduces precision: CLC -HDP -LG 1000C-200L ob-tains only  X  51% accuracy. However, comparing to
CLC -DPMM 1C-40L and CLC -BASE demonstrates that the addition of label clusters and query clusters both lead to gains in label precision. These relative rankings are robust across strict and normal evalua-tion regimes.

The breakdown over MAP and Bayes posterior estimation is less clear when considering label pre-cision: the simpler models CLC -BASE and CLC -DPMM 1C-40L perform significantly worse than Bayes when using MAP estimation, while in CLC -HDP -LG the reverse holds.

There is little evidence for correlation between precision and query length (weak, not statistically significant negative correlation using Spearman X  X   X  ). This result is interesting as the relative prevalence of natural language queries increases with query length, potentially degrading performance. How-ever, we did find a strong positive correlation be-tween precision and the number of labels produc-tions applicable to a query, i.e., production rule fer-tility is a potential indicator of semantic quality.
Finally, the histogram column in Table 3 shows the distribution of rater responses for each model. In general, the more precise models tend to have a significantly lower proportion of missing spans (blue/second bar; due to null rule assignment) in ad-ditional to more correct (green/first) and fewer in-correct (red/fourth) spans. 5.3 High Polysemy Subset We repeat the analysis of label precision on a subset of queries containing one of the manually-selected polysemous spans shown in Table 4. The CLC -HDP -LG -based models still significantly outper-form the simpler models, but unlike in the broader setting, CLC -HDP -LG 100C-40L significantly out-performs CLC -HDP -LG 1000C-40L, indicating that lower query cluster granularity helps address poly-semy (Table 3). 5.4 Error Analysis Figure 5 gives examples of both high-precision and low-precision queries markups inferred by CLC -HDP -LG . In general, CLC performs well on queries with clear intent head / intent modifier structure (Li, Table 4: Samples from a list of 90 manually se-lected ambiguous spans used to evaluate model per-formance under polysemy. 2010). More complex queries, such as [ never know until you try quotes ] or [ how old do you have to be a bartender in new york ] do not fit this model; how-ever, expanding the set of extracted labels to also cover instances such as never know until you try would mitigate this problem, motivating the use of n-gram language models with semantic markup.
A large number of mistakes made by CLC are due to named-entity categories with weak seman-tics such as rock bands or businesses (e.g., [ tropi-cal breeze cleaners ], [ cosmic railroad band ] or [ so-pranos cigars ]). When the named entity is common enough, it is detected by the rule set, but for the long tail of named entities this is not the case. One poten-tial solution is to use a stronger notion of selectional preference and slot-filling, rather than just relying on correlation between labels.

Other examples of common errors include inter-preting weymouth in [ weymouth train time table ] as a town in Massachusetts instead of a town in the UK (lack of domain knowledge), and using lower qual-ity semantic labels (e.g., neighboring countries for france , or great retailers for target ). Adding both latent label clusters (DPMM) and la-tent query clusters (extending to HDP-LG) improve chunking and label precision over the baseline CLC -BASE system. The label clusters are important be-cause they capture intra-group correlations between class labels, while the query clusters are important for capturing inter-group correlations. However, the algorithm is sensitive to the relative number of clus-ters in each case: Too many labels/label clusters rel-ative to the number of query clusters make it difficult to learn correlations ( O ( n 2 ) query clusters are re-quired to capture pairwise interactions). Too many query clusters, on the other hand, make the model intractable computationally. The HDP automates se-lecting the number of clusters, but still requires man-ual hyperparameter setting. ( Future Work ) Many query slots have weak se-mantics and hence are misleading for CLC . For example [ pacific breeze cleaners ] or [ dale hartley subaru ] should be parsed such that the type of the leading slot is determined not by its direct content, but by its context; seeing subaru or cleaners after a noun-phrase slot is a strong indicator of its type ( dealership or shop name ). The current CLC model only couples these slots through their correlations in query clusters, not directly through relative position or context. Binary productions in the PCFG or a dis-criminative learning model would help address this.
Finally, we did not measure label coverage with respect to a human evaluation set; coverage is use-ful as it indicates whether our inferred semantics are biased with respect to human norms. We introduced CLC , a set of latent variable PCFG models for semantic analysis of short textual seg-ments. CLC captures semantic information in the form of interactions between clusters of automati-cally extracted class-labels, e.g., finding that place-names commonly co-occur with business-names. We applied CLC to a corpus containing 500M search queries, demonstrating its scalability and straight-forward parallel implementation using frameworks like MapReduce or Hadoop. CLC was able to chunk queries into spans more accurately and infer more precise labels than several sub-models even across a highly ambiguous query subset. The key to obtain-ing these results was coarse-graining the input class-label set and using a latent variable model to capture interactions between coarse-grained labels.

