 SMT systems have difficulties translating between distant language pairs such as Chinese and En-glish. The reason for this is that there are great differences in their word orders. Reordering there-fore becomes a key issue in SMT systems between distant language pairs.

Previous work has shown that the approaches tackling the problem by introducing a pre-ordering procedure into phrase-based SMT (PBSMT) were effective. These pre-ordering approaches first parse the source language sentences to create parse trees. Then, syntactic reordering rules are ap-plied to these parse trees with the goal of re-ordering the source language sentences into the word order of the target language. Syntax-based pre-ordering by employing constituent parsing have demonstrated effectiveness in many language pairs, such as English-French (Xia and McCord, 2004), German-English (Collins et al., 2005), Chinese-English (Wang et al., 2007; Zhang et al., 2008), and English-Japanese (Lee et al., 2010). As a kind of constituent structure, HPSG (Pol-lard and Sag, 1994) parsing-based pre-ordering showed improvements in SVO-SOV translations, such as English-Japanese (Isozaki et al., 2010; Wu et al., 2011) and Chinese-Japanese (Han et al., 2012). Since dependency parsing is more concise than constituent parsing in describing sentences, some research has used dependency parsing in pre-ordering approaches for language pairs such as Arabic-English (Habash, 2007), and English-SOV languages (Xu et al., 2009; Katz-Brown et al., 2011). The pre-ordering rules can be made manually (Collins et al., 2005; Wang et al., 2007; Han et al., 2012) or extracted automatically from a parallel corpus (Xia and McCord, 2004; Habash, 2007; Zhang et al., 2007; Wu et al., 2011).

The purpose of this paper is to introduce a novel dependency-based pre-ordering approach through creating a pre-ordering rule set and applying it to the Chinese-English PBSMT system. Experiment results showed that our pre-ordering rule set im-proved the BLEU score on the NIST 2006 evalua-tion data by 1.61. Moreover, this rule set substan-tially decreased the total times of rule application about 60%, compared with a constituent-based ap-proach (Wang et al., 2007). We also conducted hu-man evaluations in order to assess its accuracy. To our knowledge, our manually created pre-ordering rule set is the first Chinese-English dependency-based pre-ordering rule set.
 The most similar work to this paper is that of Wang et al. (2007). They created a set of pre-ordering rules for constituent parsers for Chinese-English PBSMT. In contrast, we propose a set of pre-ordering rules for dependency parsers. We argue that even though the rules by Wang et al. (2007) exist, it is almost impossible to automati-cally convert their rules into rules that are appli-cable to dependency parsers. In fact, we aban-doned our initial attempts to automatically convert their rules into rules for dependency parsers, and Figure 1: A constituent parse tree and its cor-responding Stanford typed dependency parse tree for the same Chinese sentence. spent more than two months discovering the rules introduced in this paper. By applying our rules and Wang et al. X  X  rules, one can use both depen-dency and constituency parsers for pre-ordering in Chinese-English PBSMT.

This is especially important on the point of the system combination of PBSMT systems, because the diversity of outputs from machine translation systems is important for system combination (Cer et al., 2013). By using both our rules and Wang et al. X  X  rules, one can obtain diverse machine trans-lation results because the pre-ordering results of these two rule sets are generally different. Another similar work is that of (Xu et al., 2009). They created a pre-ordering rule set for depen-dency parsers from English to several SOV lan-guages. In contrast, our rule set is for Chinese-English PBSMT. That is, the direction of transla-tion is opposite. Because there are a lot of lan-guage specific decisions that reflect specific as-pects of the source language and the language pair combination, our rule set provides a valuable re-source for pre-ordering in Chinese-English PB-SMT. Figure 1 shows a constituent parse tree and its Stanford typed dependency parse tree for the same Figure 2: An example of a preposition phrase with a plmod structure. The phrase translates into  X  X n front of the US embassy X .
 Chinese sentence. As shown in the figure, the number of nodes in the dependency parse tree (i.e. 9) is much fewer than that in its correspond-ing constituent parse tree (i.e. 17). Because de-pendency parse trees are generally more concise than the constituent ones, they can conduct long-distance reorderings in a finer way. Thus, we at-tempted to conduct pre-ordering based on depen-dency parsing. There are two widely-used de-pendency systems  X  Stanford typed dependencies and CoNLL typed dependencies. For Chinese, there are 45 types of grammatical relations for Stanford typed dependencies (Chang et al., 2009) and 25 for CoNLL typed dependencies. As we thought that Stanford typed dependencies could describe language phenomena more meticulously owing to more types of grammatical relations, we preferred to use it for searching candidate pre-ordering rules.

We designed two types of formats in our dependency-based pre-ordering rules. They are:
Here, both x and y are dependency relations (e.g., plmod or lobj in Figure 2). We define the dependency structure of a dependency relation as the structure containing the dependent word (e.g., the word directly indicated by plmod, or  X   X   X  in Figure 2) and the whole subtree under the depen-dency relation (all of the words that directly or indirectly depend on the dependent word, or the words under  X   X   X  in Figure 2). Further, we define X and Y as the corresponding dependency struc-tures of the dependency relations x and y , respec-tively. We define X \ Y as structure X except Y . For example, in Figure 2, let x and y denote plmod and lobj dependency relations, then X represents  X   X   X  and all words under  X   X   X , Y represents  X   X   X   X   X  and all words under  X   X   X   X   X , and X \ Y represents Figure 3: An example of rcmod structure within an nsubj structure. The phrase translates into  X  X  senior official close to Sharon said X .  X   X   X . For Type-1, Y is a sub-structure of X . The rule repositions X \ Y to the position before Y . For Type-2, X and Y are ordered sibling structures un-der a same parent node. The rule repositions X to the position after Y .

We obtained rules as the following steps: 1 Search the Chinese dependency parse trees 2 Filtration. 1) Filter out the structures which 3 Investigate the remaining structures. For each 4 Conduct primary experiments which used the Figure 4: An example of rcmod structure with a preposition modifier. The phrase translates into  X  X  press conference held in Kabul X .

As a result, we obtained eight pre-ordering rules in total, which can be divided into three depen-dency relation categories. They are: plmod (lo-calizer modifier of a preposition), rcmod (relative clause modifier) and prep (preposition modifer). Each of these categories are discussed in detail be-low. plmod Figure 2 shows an example of a preposi-tional phrase with a plmod structure, which trans-lates literally into  X  X n the US embassy front X . In Chinese, the dependent word of a plmod relation (e.g.,  X   X   X  in Figure 2) occurs in the last position of the prepositional phrase. However, in English, this kind of word (e.g.,  X  X ront X  in the caption of Figure 2) always occur directly after prepositions, which is to say, in the second position in a preposi-tional phrase. Therefore, we applied a rule plmod : lobj (localizer object) to reposition the depen-dent word of the plmod relation (e.g.,  X   X   X  in Fig-ure 2) to the position before the lobj structure (e.g.,  X   X   X   X   X   X   X  in Figure 2). In this case, it also comes directly after the preposition. Similarly, we created a rule plmod : lccomp (clausal comple-ment of a localizer). rcmod Figure 3 shows an example of an rcmod structure under an nsubj (nominal subject) struc-ture. Here  X  X w X  means  X  X easure word X . As shown in the figure, relative clause modifiers in Chinese (e.g.,  X   X   X   X   X   X   X  in Figure 3) oc-curs before the noun being modified, which is in contrast to English (e.g.,  X  X lose to Sharon X  in the caption of Figure 3), where they come after. Thus, we introduced a series of rules NOUN : rcmod to restructure rcmod structures so that the noun is moved to the head. In this example, with the application of an nsubj : rcmod rule, the phrase can be translated into  X  X  senior official close to Sharon say X , which has a word order very close to English. Since a noun can be nsubj, dobj (di-rect object), pobj (prepositional object) and lobj Figure 5: An example of verb phrase with a preposition modifier. The phrase translates into  X  X usharraf told reporters here X . in Stanford typed dependencies, we created four rules from the NOUN pattern. Note that for some preposition modifiers, we needed a rule rcmod : prep to conduct the same work. For instance, the Chinese phrase in Figure 4 can be translated into  X  X old in Kabul press conference X  with the appli-cation of this rule. prep Within verb phrases, the positions of prep structures are quite different between Chinese and English. Figure 5 shows an example of a verb phrase with a preposition modifier (prep), which literally translates into  X  X usharraf at this place tell reporter X . Recognizing that prep structures occur before the verb in Chinese (e.g.,  X   X   X   X   X  in Fig-ure 5) but after the verb in English (usually in the last position of a verb phrase, e.g.,  X  X ere X  in the caption of Figure 5), we applied a rule prep -dobj to reposition prep structures after their sibling dobj structures.

In summary, the dependency-based pre-ordering rule set has eight rules: plmod : lobj, plmod : lccomp, nsubj : rcmod, dobj : rcmod, pobj : rcmod, lobj : rcmod, rcmod : prep, and prep -dobj. We used the MOSES PBSMT system (Koehn et al., 2007) in our experiments. The training data, which included those data used in Wang et al. (2007), contained 1 million pairs of sentences ex-tracted from the Linguistic Data Consortium X  X  par-allel news corpora. Our development set was the official NIST MT evaluation data from 2002 to 2005, consisting of 4476 Chinese-English sen-tences pairs. Our test set was the NIST 2006 MT evaluation data, consisting of 1664 sentence pairs. all of the data sets. For evaluation, we used BLEU scores (Papineni et al., 2002).

We implemented the constituent-based pre-ordering rule set in Wang et al. (2007) for compar-ison, which is called WR07 below. The Berkeley Parser (Petrov et al., 2006) was employed for pars-ing the Chinese sentences. For training the Berke-ley Parser, we used Chinese Treebank (CTB) 7.0.
We conducted our dependency-based pre-ordering experiments on the Berkeley Parser and the Mate Parser (Bohnet, 2010), which were shown to be the two best parsers for Stanford typed dependencies (Che et al., 2012). First, we converted the constituent parse trees in the re-sults of the Berkeley Parser into dependency parse trees by employing a tool in the Stanford Parser (Klein and Manning, 2003). For the Mate Parser, POS tagged inputs are required both in training and in inference. Thus, we then extracted the POS information from the results of the Berke-ley Parser and used these as the pre-specified POS tags for the Mate Parser. Finally, we applied our dependency-based pre-ordering rule set to the de-pendency parse trees created from the converted Berkeley Parser and the Mate Parser, respectively.
Table 1 presents a comparison of the system without pre-ordering, the constituent system us-ing WR07 and two dependency systems employ-ing the converted Berkeley Parser and the Mate Parser, respectively. It shows the BLEU scores on the test set and the statistics of pre-ordering on the training set, which includes the total count of each rule set and the number of sentences they were ap-lected from the development set. plied to. Both of our dependency systems outper-formed WR07 slightly but were not significant at p = 0.05. However, both of them substantially de-creased the total times about 60% (or 1,600,000) for pre-ordering rule applications on the training set, compared with WR07. In our opinion, the rea-son for the great decrease was that the dependency parse trees were more concise than the constituent parse trees in describing sentences and they could also describe the reordering at the sentence level in a finer way. In contrast, the constituent parse trees were more redundant and they needed more nodes to conduct long-distance reordering. In this case, the affect of the performance of the constituent parsers on pre-ordering is larger than that of the dependency ones so that the constituent parsers are likely to bring about more incorrect pre-orderings.
Similar to Wang et al. (2007), we carried out human evaluations to assess the accuracy of our dependency-based pre-ordering rules by employ-ing the system  X  X UR DEP 2 X  in Table 1. The evaluation set contained 200 sentences randomly selected from the development set. Among them, 107 sentences contained at least one rule and the rules were applied 185 times totally. Since the accuracy check for dependency parse trees took great deal of time, we did not try to select er-ror free (100% accurately parsed) sentences. A bilingual speaker of Chinese and English looked at an original Chinese phrase and the pre-ordered one with their corresponding English phrase and judged whether the pre-ordering obtained a Chi-nese phrase that had a closer word order to the En-glish one. Table 2 shows the accuracies of three categories of our dependency-based pre-ordering rules. The overall accuracy of this rule set is 60.0%, which is almost at the same level as the WR07 rule set (62.1%), according to the similar evaluation (200 sentences and one annotator) con-ducted in Wang et al. (2007). Notice that some of the incorrect pre-orderings may be caused by erroneous parsing as also suggested by Wang et al. (2007). Through human evaluations, we found that 19 out of the total 74 incorrect pre-orderings resulted from errors in parsing. Among them, 13 incorrect pre-orderings applied the rules of the rc-mod category. The analysis suggests that we need to introduce constraints on the rule application of this category in the future. In this paper, we introduced a novel pre-ordering approach based on dependency parsing for a Chinese-English PBSMT system. The results showed that our approach achieved a BLEU score gain of 1.61. Moreover, our dependency-based pre-ordering rule set substantially decreased the time for applying pre-ordering rules about 60% compared with WR07, on the training set of 1M sentences pairs. The overall accuracy of our rule set is 60.0%, which is almost at the same level as the WR07 rule set. These results indicated that dependency parsing is more effective for conduct-ing pre-ordering for Chinese-English PBSMT. Al-though our work focused on Chinese, the ideas can also be applied to other languages.

In the future, we attempt to create more efficient pre-ordering rules by exploiting the rich informa-tion in dependency structures.
 We thank the anonymous reviewers for their valu-able comments and suggestions. This work is sup-ported in part by the International Science &amp; Tech-nology Cooperation Program of China (Grant No. 2014DFA11350) and Key Lab of Intelligent In-formation Processing of Chinese Academy of Sci-ences (CAS), Institute of Computing Technology, CAS, Beijing 100190, China.

