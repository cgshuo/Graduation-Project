 Users X  locations are important to many applications such as tar-geted advertisement and news recommendation. In this paper, we focus on the problem of profiling users X  home locations in the con-text of social network (Twitter). The problem is nontrivial, because signals, which may help to identify a user X  X  location, are scarce and noisy . We propose a unified discriminative influence model, named as
UDI , to solve the problem. To overcome the challenge of scarce signals, UDI integrates signals observed from both social network (friends) and user-centric data (tweets) in a unified probabilistic framework. To overcome the challenge of noisy signals, UDI tures how likely a user connects to a signal with respect to 1) the distance between the user and the signal, and 2) the influence scope of the signal. Based on the model, we develop local and global lo-cation prediction methods. The experiments on a large scale data set show that our methods improve the state-of-the-art methods by 13% , and achieve the best performance.
 H.2.8 [ Data Management ]: Database Applications -Data Mining; H.4.0 [ Information Systems ]: General Algorithms Social Network, Influence Model, Location Profiling
User profiling, which infers a user X  X  essential attributes, such as gender, location and interests, has been a holy grail in enabling ef-fective information services. For example, profiling a user X  X  loca-tion (which we will focus) or topic interests enables search engines  X  to provide personalized search results, news sites to recommend localized news, and advertisers to serve targeted ads. To profile a user, traditional approaches leverage limited user-centric data ( e.g. , search log or purchase history).

The emergence of social network services raises both challenges and opportunities for effective use r profiling. Recently, online so-cial network services such as Facebook and Twitter become im-portant platforms for users to connect with friends as well as share information. For example, Twitter, a social network for users to fol-low each other and publish tweets, now has 140 million active users and generates 340 million tweets daily. On one hand, those services need to  X  X nderstand X  their users better, because old tasks ( e.g. ,tar-geted ads) now become even more challenging ( e.g. , serving ad-s without queries), and new tasks ( e.g. , recommending  X  X riends X ) arise in the context of social network. On the other hand, those ser-vices generate additional information to leverage, because not on-ly user-centric data ( e.g. , tweets) is available, but also information from others can be propagated through users X  social connections.
In this paper, we are particularly interested in profiling  X  X ome locations X  for Twitter users with both social network (the following network) and user-centric data (tweets). We define a user X  X  home location as the place where most of his activities happen. First, a home location is a static geo scope ( e.g. , Chicago) instead of a real-time geo point ( e.g. , the Starbucks on 5th Ave.). Second, it is a user X  X   X  X ermanent X  location instead of other locations that are  X  X emporally X  related to him ( e.g. , the places where he is traveling). A user X  X  home location, even when he is  X  X ut of town X , captures his major and static geographic scope of interests, which is therefore a useful target for many location-based services as just mentioned. On Twitter, a user X  X  home location can not be obtained readily. Only a few people (16%) register city level locations ( e.g. , Chicago, IL) in their profiles. Most of users leave general ( e.g. ,  X  X L X ), non-sensical ( e.g. ,  X  X y home X ) or even blank information. Although Twitter supports users to add GPS tags in their tweets, even fewer people (0.5%) use this feature due to privacy concerns. Thus, we aim to profile users X  locations in the absence of GPS tags.
Intuitively, a user X  X  following network and tweets provide valu-able signals for profiling his home location, as he is likely to 1) fol-low users, who live close, and 2) tweet nearby locations. However, we face two challenges when utilizing the two types of signals.  X 
Scarce Signals: Based on our crawled data, we find that 1) a user has 126 social connections on average, but only 16% of them provide locations, and 2) there are only about 6 location related terms in every 100 messages. Each type of signals alone is not sufficient to profile all users X  locations. It is possible that a user has few social connections and none of them provides a location. It is also possible that a user does not tweet but only consumes information from others.  X 
Noisy Signals: A user follows friends from or publishes tweets about different locations other than his home location. Some of them are far away. For example, a user in Chicago may follow
Lady Gaga in New York or President Obama in Washington, and tweet about Houston Rocket X  X  game or his vacation in Honolulu. In this paper, we propose a unified discriminative  X  X nfluence X  mod-el, named as UDI , to tackle the above challenges.
 Unified Signals With respect to the scarce signal challenge, integrates the two types of signals in a unified probabilistic frame-work. To the best of our knowledge, it is the first that integrates social network and user-centric data for the location profiling task.
To integrate different types of signals ( e.g. , locations of friends and from tweets), we first abstract them with a unified view. Specif-ically, we view them as a heterogenous graph, where a user con-nects to the two types of signals via  X  X ollowing X  and  X  X weeting X  edges. Then, we take a probabilistic generative approach to mod-el them jointly. We assume every edge ( e.g. , a tweeting edge) is  X  X enerated X  according to the two end nodes X  locations ( e.g. ,auser and a tweeted venue), and model the joint conditional pr obability of generating all the edges given the nodes X  locations. We estimate the unknown locations as latent variables in the probability. Discriminative Influence With respect to the noisy signal chal-lenge, UDI models how likely an edge is  X  X enerated X  from a head node ( e.g. , a user) to a tail node ( e.g. , a tweeted venue) with respect to 1) the distance between them, and 2) the influence scope of the tail node. It successfully captures  X  X loseness X  and  X  X redibility X  of each signal, and therefore is robust to noisy signals.  X 
Influence at different distances: UDI captures that 1) a node ( e.g. , a user) has influence p robabilities at different locations to attract a user there to build an edge ( e.g. , a following edge), and 2) a node X  X  influence probability at a location decreases as its distance to the node increases. Thus, UDI not only exploits our intuition that a user is likely to f ollow users from or tweet about nearby locations, but also tolerates noisy signals that he may fol-low friends from and tweet about locations far away. When pre-dicting his location, our model can successfully identify that his location is close to the most dominating region among those of his friends and tweeted venues. E.g. , a user has three friends from New York, Chicago, and Champaign (a small town in Illi-nois) respectively, our model is able to find that he is in Illinois.  X 
Influence Scope of each node: UDI captures that each node has its own influence scope . Intuitively, an influential node ( e.g. ,
Lady Gaga) with a  X  X road X  influence scope is more likely than a regular node ( e.g. , a real friend) to be followed or tweeted by a user far away, and therefore its location is more likely to be a noisy signal for predicting the user X  X  location. Thus, our model overcomes noisy signals by discriminating the locations of influ-ential nodes from the locations of regular nodes. When predict-ing a user X  X  location, our model can automatically weigh a node ( e.g. , a real friend) with a narrow influence scope more than a node ( e.g. , Lady Gaga) with a broad scope.
 To mathematically model all users X  influence models, we choose a set of discriminative Gaussian distributions. For each node, a gaus-sian distribution has its center L and variance  X  representing the node X  X  location and its influence scope, respectively. A node X  X  in-flu ence probability at a location L is measured as the probability at the corresponding distance of L from L in the distribution. The simplicity of a gaussian distribution enables us to learn its param-eters for each node with scarce signals, and thus results in  X  X ich X  modeling X  every node has its own unique influence model.

Based on UDI , we develop two location prediction methods with the maximum likelihood (MLE) principle. Our local predic-tion method predicts a user X  X  location by maximizing the proba-bility of generating edges to his  X  X ocal X  signals, i.e. , locations of his friends and tweets. We further extend the local scheme to a global prediction method . Intuitively, a user X  X  unlabeled friends are useful since their own labeled friends or tweets may indicate their locations explicitly, so as to enhance the prediction of the given us-er. Thus, we maximize the probability of generating edges to all the signals on the entire graph, and derive an iterative algorithm to make more accurate predictions. We also prove the convergence of the algorithm. In addition, we enhance our prediction methods by using human knowledge ( e.g. , users only live in cities but not arbi-trary geo points) as constraints . Those constraints help us to learn a more accurate model with scarce signals.

As a byproduct, UDI also identifies the influence scope of each node, which is new and different from the  X  X nfluence score X  studied by earlier work [5]. The influence scope measures the broadness in terms of physical distance of a node X  X  influence over the geo space, while the influence score measures how good a node is in spread-ing information over a social network. A node ( e.g. , the New York weather channel) can have a large influence score but a small influ-ence scope. In this paper, we use the influence scope to discrimi-nate the credibility of each node in predicting locations, but we see many interesting applications be yond this setting, such as differ-entiating global authorities ( e.g. , Lady Gaga) and local authorities ( e.g. , Texas Representative).

Finally, we conduct extensive experiments to evaluate our pre-diction methods and compare with the state-of-the-art methods [4, 7] based on a large-scale Twitte r data set cont aining about 160K users and 50 million tweets. The experimental results show that our prediction methods significantly improve the best baseline method by 13% , and achieve accurate results. Particularly, our global method can place 66% users within 100 miles, and the average error dis-tance for its top 60% predictions is less than 5 miles.
In this section, we discuss some related work, including user pro-filing and location prediction.
 User Profiling Due to the importance of user profiling, many inter-esting studies have been done on this problem. Most of them focus on profiling users X   X  X opic interests X  to serve personalized search [13, 17], targeted advertisement [1, 12], and news recommendation [16]. They mainly explore user-centric data, including query logs [13], browsing behaviors [16] and other types of user generated data [12, 17]. Our work is different in two aspects. First, we aim to profile lo-cations. Second, we explore not only user-centric data ( i.e. , tweets) but also social network data.

As the rise of social network services, some seminal studies [18, 11] explore social network for user profiling. Yang et al. [18] pro-pose a model to propagate interests of an item among users via their friendships. However, users X  locations are different from their in-terests of an item, and can not be propagated directly. Mislove et al. [11] use friendships to infer Facebook users X  attributes. They apply a clustering algorithm to find communities in the network and assign an identical attribute value to users in the same commu-nity. Although this method is supposed to work for different types of attributes, it fails in predicting locations, as users follow others living far away and communities are not directly formed based on users X  locations. It does not leverage user-centric data as well. Location Prediction As we focus on profiling users X  locations, our work is related to identifying geographical scopes for various kind-s of online entities, such as pages [2], queries [3], tags [14], and photos [8]. However, they predict locations for different types of entities with different resources. For example, Amitay et al. [2] ex-plore a web page X  X  content to predict its geo scope based on heuris-tic rules. Their method extracts location signals ( e.g. , city names) from a page and uses a gazetteer to find the geo region that covers most of the signals as the region of the page. Our work is differ-ent, as we take a probabilistic approach to profile users X  locations. Backstrom et al. [3] propose a pr obabilistic model to assign a geo-graphic center and a rate of diffusion to a query based on the usage of the query. Our method is different from it, as we focus on u-tilizing social network and tweets in a unified and discriminative approach. Furthermore, our pr ediction methods are able to utilize additional human knowledge.

Our work is most related to [7, 4], as they also focus on the same user location prediction problem. Cheng et al. [7] estimate a user X  X  location based on the content of his tweets. Specifically, they iden-tify a set of location related words ( e.g. ,  X  X hicago X ) and use them as features to classify the user to locations. Recently, Chandra et. al. [6] improve this model slightly by associating a user X  X  original tweets to him, and his retweets to the initial user. However, they both treat local words and locations as discrete labels and overlook their explicit relations ( e.g. , distances between them). Backstrom et al. [4] estimate a user X  X  location based on his friends on Face-book. They first learn a function, which assigns th e probability of being friends given the distance of two users, and then estimate a user X  X  location based on MLE. However, their model assumes the probability of being friends given the same distance is the same for different users. This assumption usually does not hold, especially on Twitter. E.g. , a famous user is more likely to have a follow-er far away than a regular user does. Therefore, their model can not differentiate signals with different credibilities. UDI overcomes the disadvantages of the above methods, but also has the following advantages: 1) it models both content and social net-work, 2) it utilizes relationships from both labeled and unlabeled users, and 3) it supports integra ting additional human knowledge.
In this section, we first abstract different types of signals as a heterogeneous graph, and then formalize our problem from there.
Twitter is a social network, wher e users follow others and publish messages. Given a user, we identify two important types of signals: 1) following relationships between the user and other users, and 2) tweets or messages tweeted by the user. We note that following relationships are  X  X irectional X , which means if a user u auser u j , u j does not necessarily follow back. Thus, we further divide a user X  X  following relationships into followers who follow the user and friends who are followed by the user.
 Both types of signals are useful for inferring a user X  X  location. As Sec. 1 mentioned, a user is likely to 1) follow and be followed by users, who live close to him, and 2) mention some  X  X enues X  ( e.g. , Chicago), which may indicate his location. We refer a venue place ( e.g. , Time Square), or an entity with a specific geo position ( e.g. , Stanford University). If some of a user X  X  followers or friends provide locations in their profiles, we can propagate their locations to him. If a user mentions some venues in his messages, we can use them to infer his location as well.

As shown in Fig. 1, we abstract different types of signals as a directed heterogeneous graph G =( N,E ) ,where N is a set of nodes n i and E is a set of edges e n i ,n j from a tail node n a head node n j . N contains two types of nodes, user nodes U representing all the users and venue nodes V representing all the venues tweeted by users. N = U  X  V . E contains two types of edges, each of which designates a specific type of relationships between nodes: 1) following edges F between user nodes, and 2) tweeting edges T between user nodes and venue nodes. E = F A following edge f u i ,u j is formed from a user u i to another user u j when u i follows u j ,where u i is a follower of u j ,and u friend of u i .A tweeting edge t u i ,v j is formed from a user u a venue v j ,when u i tweets v j .As u i can tweet v j many times, we use w ij to denote the frequency.

Generally, every node n i in the graph is associated with a loca-tion, denoted as L n i .Weview L n i as a point ( X,Y ) on the geo space, where X denotes the latitude and Y denotes the longitude. Some user nodes X  locations are missing. Our goal is to profile them. We call the users with known locations as labeled users , denoted as U  X  , and the remaining users as unlabeled users , denoted as U U = U  X   X  U N . Formally, our problem can be stated as: Location Profiling Problem Given a Twitter graph G ( U  X  V,T F ) , L u j for u j  X  U  X  ,and L v j for v j  X  V , estimate a location  X  L i for each user u i location L u i .

As we motivated in Sec. 1, a user is related to inconsistent and noisy locations on the graph, so the problem is non-trivial. We pro-pose a unified discriminative influence based probabilistic frame-work ( UDI ) to solve it. Specifically, in Sec. 4, we describe our probabilistic model, which measures how likely an edge is generat-ed between two nodes with respect to their locations. In Sec. 5, we present our prediction methods, which estimate a user X  X  location by maximizing the probability of generating the observed edges. Notation Before our discussion, we introduce some notations. Gen-erally, we use I e ( n ) and O e ( n ) to denote incoming neighbor nodes of a node n through type e edges, and outgoing neighbors of n through type e edges respectively. Specifically,  X  I f ( u i )= { u j  X  U | f u j ,u i  X  F } denotes the followers of u and I  X  f ( u i )= I f ( u i )  X  U  X  denotes the labeled followers of u  X  O f ( u i )= { u j  X  U | f u i ,u j  X  F } denotes the friends of u
O  X  f ( u i )= O f ( u i )  X  U  X  denotes the labeled friends of u  X  O t ( u i )= { v j  X  V | t u i ,v j  X  T } denotes venues tweeted by u  X  I t ( v i )= { u j  X  U | t u j ,v i  X  T } denotes the users who tweet v
I  X  t ( v i )= I t ( v i )  X  U  X  denotes the labeled users who tweet v
In this section, we introduce a probabilistic model named as in-fluence model to measure how likely a tail node n j ( e.g. ,auser u at a location L n j builds an edge e n j ,n i ( e.g. , a following edge) to a head node n i ( e.g. ,auser u i ) at a location L n i
To motivate our model, we investigate about 139,180 randomly crawled Twitter users and observe two key characteristics of the probability that there is e n j ,n i from n j to n i .

First, the probability decrea ses as the distance from n j creases . Specifically, Fig. 2(a) and 2(b) show the average numbers of followers of a user and the average numbers of users who tweet a venue at different distances. Fig. 2(a) illustrates that generally users have more followers living close than far away, which means that a user, as head node, is more likely to attract users living close to follow. The reason might be that a user X  X  followers tend to know him in real life and are likely to live close to him. This property has also been observed from Facebook network [4] and other social networks [10]. Here we validate it on Twitter network. Similar-ly, Fig. 2(b) shows that a venue, as a head node, is more likely to attract users living close to tweet about it, because users are more likely to be interested in things happening around.

Second, at the same distance, different head nodes have different probabilities to attract tail nodes. Fig. 3(a) and 3(b) show the num-bers of followers of two specific users on Twitter, Anonymous1 and Anonymous2, over the geographic space. Comparing Fig. 3(a) and 3(b), we can tell that Anonymous1, as an influential user, is more likely to attract users who live far away to build following edges than a regular user Anonymous2, because Anonymous1 has a broader influence scope than a regular user in real life. Fig. 3(c) and 3(d) show the numbers of users, who tweet two specific loca-tions, Chicago and Champaign, at different locations. Similarly, we find that Chicago, as an influential city, is much more likely to be tweeted by users who live far away than Champaign, as cities such as Chicago or New York, are more influential than regular cities. Our influence model aims to capture the above characteristics. Conceptually, the influence model of a node n i , denoted as  X  a probability distribution over the geographic plane, which assigns an  X  X nfluence probability X  to any geo point in the plane. n fluence p robability at a point L represents the probability that n influences another node n j at L to build an edge e n j ,n The higher n i  X  X  influencing probability is, the more likely n to build e n j ,n i to n i . Different nodes have different influence scopes . A node with a  X  X road X  influence scope has a larger influ-ence probab ility at a point far away than a node with a  X  X arrow X  influence scope does.

The influence model enables us to measure the probability of observing e n j ,n i from n j to n i in a generative way. Specifically, we can assume e n j ,n i is  X  X enerated X  according to n i  X  X  influence probability at L n j , P ( e n j ,n i |  X  n i , L n j )= P ( Probability Model Mathematically, we need a probability distri-bution to represent a node X  X  influence model. We reason that an  X  X deal X  distribution should satisfy the following requirements.  X 
Expressiveness: It should capture: 1) p robabilities d ecrease as distances increase, and 2) each node has its own influence scope.  X 
Simplicity: Its parameters should be simple to estimate, as we only have a few observations for each node.
 In this paper, we choose a gaussian distribution to capture a node X  X  influence model. In terms of expressiveness, either the heavy tailed distribution [4, 3] or the gaussian distribution [15, 19], which has been widely used for modeling probabilities over the geo space, can be used in our case. In terms of simplicity, a heavy tailed distribution uses several parameters ( e.g. ,  X  and  X  in the form of (  X  + d )  X  in [4]), while a simple gaussian uses only one parameter ( e.g. ,  X  in the form of N (0 , X  ) ). Thus, a heavy tailed distribution requires more observations than a gaussian for estimating parame-ters. E.g. , in [4], they use observations from all the users to estimate one heavy tailed distribution, and use it to model all the users. In our case, as we aim to estimate a unique gaussian distribution for each node with scarce observations related to the node, we choose a simple gaussian distribution for each node.

We must emphasize that our choice of the gaussian distribution neither conflicts with the heavy tailed distribution observed in [4], nor limits our model X  X  prediction power. First, the heavy tailed distribution is observed based on the aggregation of all users, but we use a gaussian to model each individual. Second, our model uses millions of gaussian distributions, each of which is tailored to a user. It fits each individual better and is more flexible in general than one heavy tailed distribution. As our experiment in Sec. 6 will show, it profiles users X  locations more accurately than the method [4] based on the heavy tailed distribution with the same amount of observations.

Specifically, we model a node n i  X  X  influence model  X  n i variate gaussian distribution, N ( L n i ,  X  u i ) , centered at n tion L n i =( X n i ,Y n i ) and with the covariance matrix  X  influence scope. While our model can generally take different vari-ances along the X and Y dimensions as well as their covariances, we assume the influence scope of a node on the X and Y dimensions is the same, as it is easy to estimate with few observations and there isn X  X  clear evidence for  X  X on-symmetric X  distributions on X and Y. a location L is measured as follows.

To measure probabilities of generating following and tweeting edges, we instantiate two types of influence models.
 User Influence Model is to measure P ( f u j ,u i |  X  conditional probability that a user u i influences a user u cation L u j to build a following edge f u j ,u i to him given u influence model  X  u i and L u j . We interpret it as follows. Venue Influence Model is to measure P ( t u j ,v i |  X  v i larly, we interpret it as follows.
 Conditional Independence Assumption When modeling the prob-ability of generating an edge, we take a conditional independence assumption . Specifically, we assume that each edge (e.g., a tweet-ing edge) from a tail node (e.g., a user) to a head node (e.g., a venue) is conditionally independent given the head node X  X  influ-ence model and the tail node X  X  location . In other words, if the head node X  X  influence model and the tail node X  X  location are given, any additional observation ( e.g. , other nodes or edges) will not affect the probability of generating the edge.

We are aware that, in reality, various factors affect the proba-bility of generating a n edge between two nodes. For example, if two nodes share common neighbors, the probability that there is an edge will increase. However, capturing any additional depen-dency requires additional parameters. The scarce observations and the complexity of estimation prevent us from modeling those com-prehensive dependencies. To focus on the location factor only, we simplify our model with the above assumption. This assumption is widely applied in generative models ( e.g. , Naive Bayes and topic modeling), which our model belongs to, for simplifying models and focusing on key factors. As our experiments will show, like other generative models, our model achieves promising results with the assumption. We further note that this assumption has also been used in other location prediction tasks [3, 4].
In this section, we develop our location profiling methods based on the Maximum Likelihood Estimation (MLE) principle under the UDI framework. Specifically, we profile a user X  X  location as the lo-cation that maximizes the joint probability of generating following and tweeting edges from and to his followers, friends and tweeted venues. We derive two prediction methods, a local one and a global one, which aim to balance efficiency and effectiveness.
We fi r st devel op a local prediction method , which infers a user u  X  X  location via using locations observed from his  X  X ocal X  edges directly. A user X  X  local edges are the edges which directly con-nect to him. However, some of them connect to nodes without locations ( e.g. , an unlabeled friend), and they do not provide any location signal directly. In this setting, to simplify the problem and derive an efficient algorithm, we assume we only observe the edges between the user and the label nodes . Specifically, they are: 1) the following edges from his labeled followers, denoted as f U  X  ,u i = { f u j ,u i  X  F | u j  X  U  X  } , 2) the following edges to his labeled friends, denoted as f u i ,U  X  = { f u i ,u j  X  F | u and 3) the tweeting edges to the venues tweeted by him, denoted as
Based on our influence model, the probability of observing those edges depends on the following factors: 1) the probability of ob-serving f U  X  ,u i from u i  X  X  labeled followers I  X  f ( u pends on u i  X  X  influence model  X  u i and the locations of noted as L I  X  f ( u i ) , 2) the probability of observing f u u to his labeled friends O  X  f ( u i ) depends on u i  X  X  location the influence models of O  X  f ( u i ) , denoted as  X  probability of observing t u i ,V from u i to his tweeted venues O ( u i ) depends on u i  X  X  location L u i and the influence models of O ( u i ) , denoted as  X  O t ( u i ) .
 Likelihood Function Given parameters  X  u i , L u i , L I  X  and  X  O t ( u i ) , we write the joint conditional probability (the likeli-hood function) of observing f U  X  ,u i , f u i ,U  X  and t u Eq. (4). At step 1, we express the joint conditional probability as the product of P ( e n j ,n i |  X  n i , L n j ) based on the conditional in-dependence assumption. t u i ,v j is multiplied w ij times, as each t u i ,v j appears w ij times in t u i ,V .Atstep2,werepresent P ( e n j ,n i |  X  n i , L n j ) as n i  X  X  influence probability at our influence model.

Based on MLE, we find parameters, u i  X  X  location L u i and u influence scope  X  u i , by maximizing the above equation, and use the estimated L u i as u i  X  X  location.

However, in Eq. (4), besides L u i and  X  u i , which we aim to es-timate, there are other unknown parameters. Particularly, for each labeled friend u j  X  X   X  f ( u i ) and each tweeted venue v their influence scopes  X  u j and  X  v j are unknown, as we only ob-serve their locations. In our local prediction setting, we assume each labeled node X  X  influence scope can be accurately estimated with its labeled neighbors as well. Thus, we estimate them before predicting the user X  X  location, and view them as the known param-eters. Next, we discuss how to estimate them.
 Influence Scope of a Friend To estimate  X  u j in a labeled friend u  X  X  influence model  X  u j , we can use u j  X  X  following relationships from his labeled followers. Among u j  X  X  edges, only u j ing edges f U, u j from his followers depend on  X  u j . As those edges also depend on his followers X  locations, we use u j ing edges f U  X  ,u j from his labeled followers I  X  f ( u tions, and estimate  X  u j by maximizing the joint conditional proba-bility of observing f U  X  ,u j given  X  u j and L I f ( u j probability as Eq. (5).

In Eq. (5),  X  u j is the only unknown variable, as u j is a labeled user and u k is his labeled follower. We directly estimate  X  maximizing Eq. (5). Technically, we get its closed-form solution by differentiating Eq. (5) with respect to  X  u j and setting the result to zero. Eq. (6) shows the solution. Influence Scope of a Venue Similarly, to estimate a venue v influence scope  X  v j , we use the tweeting edges from v j twitters, denoted as t U  X  ,v j = { t u i ,v j  X  T | u i  X  U  X  } rive  X  v j by maximizing the conditional probability of generating t U  X  ,v j given v j  X  X  influence model  X  v j and labeled twitter X  X  lo-cations L I  X  t ( v j ) . We write the condition probability as Eq. (7), and derive  X  v j in Eq. (8).
 Solution Now each tweeted venue v j  X  X   X  v j and L v j , each labeled friend u j  X  X  L u j and  X  u j , and each labeled follower u known. L u i and  X  u i are the unknown variables left. We estimate them by maximizing Eq. (4). We first differentiate Eq. (4) with regard to L u i and  X  u i , and obtain Eq. (9) and Eq. (10), which show L i and  X  u i depend on each other. We substitute Eq. (10) for  X  in Eq. (9), and obtain a polynomial function of L the Newton X  X aphson method to find its solution, and derive  X  accordingly. We note that because X u i and Y u i are symmetric in Eq. (4), the solutions for X u i and Y u i are in the same form. Due to the space limit, we only give the solution for X u i .

The above solution also works for the cases that only a subset of resources ( e.g. , tweets) is used, as we can simply view the unused resource as an empty set in our solution.
 Interpretation The above solution can be interpreted meaningful-ly. As Eq. (10) shows, the influence scope of u i will be large if u followers are far away from him. Celebrities ( e.g. , Lady Gaga) will get large influence scopes as their followers are distributed broadly. As Eq. (9) shows, when we estimate a user X  X  location, each node contributes differently, where the weight of a node is inversely pro-portional to its influence scope. E.g. , if we profile a user X  X  location using two friends of him, e.g. , Lady Gaga and a regular user, the prediction is close to the regular user, as Lady Gaga has a broad influence scope, and her location is likely to be a noisy signal. Computation Complexity The algorithm computes a user X  X  loca-tion in O ( K 2 ) ,where K is the average number of edges associated with a user and is less than a hundred. Specifically, it first computes influence scopes for K neighbors of the user, and each of them re-quires O ( K ) . Then, it uses O ( tK ) to estimate the location with K edges, where t is the number of iterations in the Newton method. Theoretically, t is O ( d log 2 ( d )) for d digits precision, which is a small constant and can be ignored. In practice, we can precom-pute the influence scope for each labeled node, and the complexity is reduced to O ( K ) . The algorithm can be viewed as an online algorithm, which efficiently infers a user X  X  location at real-time.
We further develop a global prediction method , which infers a user X  X  location via using all the edges in the graph, and profile user-s X  locations more accurately than the local one.

To motivate our method, we argue that unlabeled users are valu-able as we can propagate locations of their tweets, followers and friends to them. Let us revisit the example in Fig. 1. Although u unlabeled, we can tell u 6 is close to Chicago as he tweets Chicago. As a result, u 6 becomes an additional observation, which suggests that u 1 should be close to Chicago. However, unlabeled users can not be directly used, because we can not tell which unlabeled user we should predict first, say, u 1 or u 6 , and how to propagate a user X  X  predicted location to others.

We develop our global prediction method to model all the edges in the graph and utilize all the observed locations. Specifically, it models the joint conditional probability of observing all the follow-ing edges F and tweeting edges T in the graph given all the nodes X  locations and influence models, and estimates all unlabeled users X  locations together via maximizing the probability.

We write the probability as Eq. (11). Step 1 is based on the inde-pendence assumption, and step 2 is based on our influence model.
In the above equation, for u i  X  U N , both L u i and  X  u known; for u i  X  U  X  and v j  X  V ,  X  u i and  X  v j are unknown. We estimate their values by maximizing the probability. To derive them, we first differentiate Eq. (11) with regard to every unknown variable, and obtain the following equations.

In these equations, the unknown variables are dependent on each other. Their closed-form solutions are not easy to get. Howev-er, if we assume  X  u i and  X  v j for each u i  X  U and each v V are known, X u i only depends on X u j  X  U and X v j In this case, Eq. (12) tries to find X u i for each u i X u i basedonother X u j iteratively, has been proposed to find X for this problem [20]. When X u i and Y u i are derived,  X  can be derived directly based on Eq. (13) and (14).

Therefore, we develop a two stage iterative algorithm based on the above intuition. The algorithm is shown in Algorithm 1. At step 1-2, it initializes all u i  X  U N . At step 3-14, the algorithm does the iterative computation. There are two iterations. The outer iteration updates  X  u i and  X  v j according to L u i based on Eq. (13) and (14), while the inner iteration (from step 8 to 11) takes a set of fixed  X  and  X  v j as inputs and iteratively computes L u i based on Eq. (12). The newly obtained L u i is then used to update  X  u i and  X  The algorithm stops until the likelihood converges.
 We can formally prove the convergence of the algorithm based on the following theorem.
 Theorem The global prediction algorithm converges .

The proof of the theorem is derived based on the intuition of the algorithm stated above. In the inner iteration, the method can converge and yield L u i that maximizes the probability with fixed  X  i and  X  v j , as shown in [20]. Second, the outer iteration directly computes  X  u i and  X  v j that maximize the probability given fixed L i computed in the previous iteration, because Eq. (13) and (14) are the closed-form solutions for maximizing the probability when asetof L u i is given. In summary, each iterative step monotonically increases the probability and the probability has a maximum value, so the algorithm must converge.

The above algorithm, like many of other iterative algorithms ( e.g. , EM), may converge to a local maximum. To avoid that, we can initialize the unknown variables w ith the values obtained from the local prediction method. The above iterative algorithm will al-ways generate a better solution than the local one as each iteration improves the likelihood monotonically.
 Complexity Analysis As each inner iteration requires O ( | update every user X  X  location, the algorithm runs in O ( t t is the number of iterations and | E | is the number of edges of the graph. In our experiment, it converges after three outer iterations. As our algorithm uses all the edges in the graph, it can be viewed as an offline algorithm, which effectively profiles all users X  locations.
To further improve our methods , we utilize human knowledge as constraints in our prediction methods. To motivate, let us revisit the example in Fig. 1. Most of u 1  X  X  followers and friends are in or close to Chicago ( e.g. , u 5 , u 3 ) except one ( u 4 )inNewYork. Our algorithms will estimate u 1  X  X  location to be near but not exactly Chicago. If we ask a human to predict u 1  X  X  location, he will defi-nitely pick a city instead of an arbitrary geo point, and he is likely to choose one from Chicago, Urbana and New York, because he knows a user usually has some friends living in the same city.
We model such human knowledge as constraints in our predic-tion methods. A constraint specifies the set of candidate locations when we maximize a likelihood function. There are different choic-es of constraints, such as a candidate must be a city or within 30 miles of a city. Particularly, we apply the following assumption as the constraint in our implementation. We assume that a user X  X  lo-cation must be the same as one of his friends, followers or tweeted venues. The assumption is generally valid. In our data, an incom-plete crawl of Twitter, there are about 92% of users whose locations appear in their followers, friends or tweets. We note that this con-straint may not be the best one. We use it to illustrate how our methods can incorporate constraints.

The constraint version of the local prediction method becomes To solve it, we can rank each candidate location L u i according to Eq. (4), and use the top one as the prediction.

The constraint version of the global prediction method becomes maximizing Eq. (11) subject to {L u i  X  X  I  X  f ( u i )  X  X  for any u i  X  U N . If we rank all candidate solutions, which consist of all the combinations L u i for all u i  X  U N , the complexity of the algorithm is O ( K N ) ,where K is the average number of candidate locations per user (it is usually larger than 2), and N is the number of unlabeled users (a bout millions). Instead, we propose an approx-imation algorithm based on the relax and round paradigm, which is widely used by approximation algorithms for optimization with constraints [9]. We first use the global algorithm to find each u i without any constraint, then find the closest location that satisfies the constraint.
In this section, we conduct experiments on a large-scale data set and show the effectiveness of our methods from different aspects. Data Set We constructed our data set by crawling Twitter. We ran-domly selected 100,000 users as seeds to crawl in May 2011. For each user, we crawled his profile, followers and friends. We ob-tained 3,980,061 users X  profiles and their social network. Then, we extracted their registered locations from their profiles based on the rules described in [7]. Specifically, we extracted locations with city-level labels in the form of  X  X ityName, stateName X  and  X  X ity-Name, stateAbbreviation, X  where we considered all cities listed in the Census 2000 U.S. Gazetteer. We found 630,187 users, who provided city level locations, and treated them as labeled users. A-mong them, we found 158,220 users, who had at least one labeled friend or follower. We further crawled their tweets and extracted venues from those tweets based on the same gazetteer. We crawled at most 600 tweets for each user. As we could not get some users X  tweets due to their privacy settings or lack of tweets, only 139,180 users X  tweets were crawled.

We used the 139,180 users with their following relationships and tweets, as our data set. There are 14.8 friends, 14.9 followers, and 29.0 venues per user. We took their registered locations as their home locations, and applied five fold validation, which means that we used 80% of users as labeled users and 20% of users as unla-beled users and reported our results based on the average of 5 runs.
We note that we directly take users X  registered locations as their home locations and predict locations for only U.S. users, because we want to set up our experiments in the same way as the existing methods [7, 4]. We are aware that some registered locations are incorrect, but we believe they are rare, as leaving profiles empty is always an easy option. Thus, our results are reliable. Our method can predict locations for international users in the same way. Methods To fully evaluate our methods, we not only compare them with two state-of-the-art methods in [4] and [7], but also evaluate our prediction methods with different settings. Specifically, our experiments evaluate the following methods.  X 
Base U is the method developed in [4], which predicts a user X  X  location based on his social network. Twitter is a directional network, so we treat both followers and friends of a user as his undirected connections ( X  X riends X ) in this method.  X 
Base C is the method developed in [7]. It assigns a location to a user based on a set of local words identified from his tweets.  X 
UDI U is our local prediction method, but only uses a user X  X  friends and followers as signals.  X 
UDI C is our local prediction method, but only uses venues iden-tified from a user X  X  tweets as signals.  X 
UDI I is our local prediction method discussed in Sec. 5.1, which integrates different types of resources.  X  UDI G is our global prediction method discussed in Sec. 5.2. Measurement We use average error distance in miles ( AED )and accuracy within 100 miles ( ACC ) proposed in [7] as measures. Specifically, let Err ( u i ) be the error distance between a user X  X  home location and an estimated location. For a set of users U ,
However, as AED is easily affected by outliers in results, we re-port AED at different percentiles ( 60%, 80% and 100%) of users ranked by their error distances. E.g. , AED @60% is the average er-ror distance of the top 60% of users ranked by their error distances.
We use T-test to conduct significance tests between our methods and baseline methods. If a method passes the significant test, we make it boldface in result tables. User-based Prediction We first compare UDI U with Base U .Both of them profile a user X  X  location based on his social network.
Tab. 1 shows the performance of each method. The results demon-strate that generally our method performs better than Base using the same amount of information, UDI U improves Base 4% in terms of ACC . Such an improvement soundly proves our as-sumption that different users have different influence scopes and we should model them discriminatively.

AED@60% tells that the average error distance of the top 60% of predictions of UDI U is 20 miles, which is fairly accurate. How-ever, when comparing AED@80% and AED@100% ,wefindthat AED dramatically increases from 159 to 525, because AED is easi-ly affected by a small set of users, who are not accurately predicted. Therefore, we should not only focus on AED@100% .

To illustrate our results in detail, we plot an accumulative accu-racy at distances ( AAD ) curve for each method in Fig. 4(a). A point ( X, Y ) in the curve means that Y percentages of users are accurate within X miles. From the figure, we can tell that UDI U has higher accuracy than Base U within different distances. E.g. , UDI about 47% of users within 25 miles, while Base U only places 44% of users within that range.
 Content-based Prediction In this experiment, we compare UDI with Base C . Both of them profile a user X  X  location with his tweets. We show results and AAD curves of two methods in Tab. 1 and Fig. 4(b) respectively. From them, we can see that 1) UDI icantly improves Base C by 10% in terms of ACC , 2) the improve-ment is consistent at any distance level, and 3) UDI C achieves very good results by making good use of content. The average error dis-tance for the top 60% of its prediction is less than 10 miles. From the results, we can safely conclude that our method is much bet-ter than Base C as our model captures the relation between a user X  location and locations from his tweets in a meaningful way.
We clarify that Base C requires human labeling to train a model to select local words, which are the features for the classification model, and Base C  X  X  performance highly depends on the selected words. As labeling is a subjective task, by no means could we get the same set of local words in the original paper. We test perfor-mances of Base C with various local word sets, we get ACC rang-ing from 35.98% to 49.67%. We choose the highest one to report. Our method advances Base C in this aspect, as we do not require any labeling work, and only use location names in a gazetteer. Integrated vs. Non-Integrated In this experiment, we evaluate whether our framework can take advantage of integrating more resources. Specifically, we compare UDI I with Base U , Base UDI C and UDI U . Tab. 1 shows the performance of each method. As expected, UDI I gives a significant improvement (12%) over the best baseline method, and advances UDI C and UDI U by 4.4% and 8.4%. Fig. 4(c) shows that those improvements are consistent at any distance level. We can safely conclude that integrating differ-ent types of resources is useful for profiling locations. Meanwhile, we can find that UDI I is very accurate. It correctly places 57% of users within 25 miles. Its AED is only 6 miles for the top 60% of its predictions, and less than 100 miles for the top 80%. Discriminative vs. Non-discriminative In this experiment, we demonstrate the power of discriminative modeling by comparing our methods based on a discriminative model with the methods based on a non-discriminative one. As the user-based prediction experiment has already shown that, when only using social net-work signals, a discriminative method ( UDI U ) is better than a non-discriminative one ( Base U ), we now compare the methods that use all the types of resources. We develop a new baseline method Base I , which integrates different resources in a non-discriminative way. Specifically, we first learn one probabilistic distribution for following edges and one for tweeting edges based on [4], and then we apply the prediction method in [4]. Tab. 2 and Fig. 4(d) show the results. We can find that, although Base I uses the same amount of information as UDI I , it is 6% lower than UDI I in accuracy, which suggests that we should model observations discriminatively. Global vs. Local To investigate the usefulness of our global predic-tion method, we compare UDI G with UDI I and the two baselines.
We first evaluate the methods on the data set used in the previous experiments, which includes 20% unlabeled users and 80% labeled ones. The last column in Tab. 1 gives the results of UDI G see that, although UDI G improves UDI I slightly (1.5%) in terms of ACC , it reduces AED@80% a lot, and Fig. 4(e) shows that the im-provement is consistent at any level. We believe that the improve-ment here is limited because there is already enough information from the labeled users and the iterative based method can not add much help. We expect that UDI G improves UDI I significantly in a more realistic scenario, where less users are labeled.
To test this conjecture, we evaluate those methods in another data set, where only 20% of users are labeled and 80% users are unla-beled. This scenario is more close to the real-world case, where only about 16% users have registered locations. Tab. 3 shows the results. We find that 1) UDI G significantly outperforms the other three methods, as it can utilize information from even unlabeled users, 2) compared to the preceding experiment, UDI G achieves n-early comparable results, but the other three methods perform much worse, as they make predictions with limited amount of informa-tion. We can conclude that UDI G utilizes both labeled and unla-beled information and achieves better profiling.

We eval uat e UDI G for its convergence, and find it takes 3 outer iterations to converge. Due to space limit, the figure is omitted. Case Studies for Influence Scope We give some concrete exam-ples of influence scopes derived by our methods to illustrate their correctness and usefulness. Tab. 4 shows influence scopes of some Twitter users and venues. For easy understanding, we only choose verified users (celebrities). In T ab. 4, we can clearly distinguish local authorities ( e.g. ,  X  X impawlenty X , a former governor of Min-nesota), and national celebrities ( e.g. ,  X  X ady Gaga X ). We note that we can not easily tell the difference between  X  X ational graphic X  and  X  X Y Knicks X  just by the numbers of their followers. Similarly, our methods identify that Honolulu, a famous vacation destination, has a broad influence scope and is likely to be a noisy signal.
Profiling users X  locations is an important problem. In this pa-per, we have made the following contributions to this problem. 1) We explore both social network and user-centric data for profiling users X  locations. 2) We introduce a unified discriminative influence model ( UDI ), which captures how likely a user follows a user or tweets a venue. 3) We develop two effective location prediction methods. The local method integrates locations observed from his friends, followers and tweets in a discriminative way and profiles users X  locations efficiently. The global method extends the local one by using additional unlabeled users, and profiles users X  loca-tions more accurately. 4) We extend the two methods by modeling additional human knowledge as constraints. 5) We conduct com-prehensive experiments on a large scale data set and demonstrate the effectiveness of our methods.
