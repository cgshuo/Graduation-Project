 In Service-Based Applications (SBAs), Q uality of Service (QoS) parameters may change during the life cycle of the application. Web service adaptation is an im-portant phase to deal with such changes. Handling changes in a demanding and adaptive environment is a vital task. One main issue lies in QoS property descrip-tions of Web Services. This involves speci fying service requirements in a formal way, monitoring and dynamically adapting and evolving the services with respect to the QoS changes. Static adaptation is impractical due to the changing envi-ronment and high cost of maintenance and development. Specifying all possible alternative behaviour for adaptation at d esign time is impossible. Therefore, a declarative approach is required at run-time to support adaptation decisions.
In order to perform run-time decisions for adaptation in a volatile environ-ment, one issue is to consider the imprecise evaluation of QoS properties. Existing approaches do not allow partial satisfaction of parameters. It is required that services should be able to tolerate a range of violation in their quality descrip-tion. However, handling this tolerat ion need to be done with special care. An importantissuetoaddressinSBAsist o what extent the QoS parameters of a Web Service are satisfiable. The answer to this issue could be a basic for making adaptation decisions. However, this issue has not been addressed adequately in the literatures. Evaluating the extent of parameter satisfaction is necessary to help the selection of bes t adaptation strategy.

As an initial step to this, in [3] we provided conditions under which QoS changes are acceptable. We used a tempora l logic namely Allen X  X  Interval Algebra (AIA) [2] to formally specify the non-functional properties of web services. We then used the AIA to reason about changes of quality parameters and their evolution. In this paper, we extend [3] and propose a fuzzy approach to support service adaptation and evolution. We define fuzzy parameters for QoS property description of Web Services. Fuzzy parameters could be considered as fuzzy sets and measured based on their value of memb ership. Satisfaction degree of fuzzy parameters is measured according to their actual distance of the agreed quality ranges in the contract. The goal of this paper is to provide flexibility for service specification by applying fuzzy parameters. Using a fuzzy approach allows us to deal with reasoning on the quality violations that is approximate rather than accurate. At the end, we propose different categories of adaptation that perform based on the satisfaction degree. Experi mental results show the effectiveness of using the fuzzy approach over the non-fuzzy one in making decisions for adaptation.

The remainder of the paper is structured as follows. Section 2 describes the major related work. In Section 3 we present a definition for QoS property descrip-tion of services through introducing f uzzy parameters. In Section 4 we specify satisfaction functions for each parameter to measure to what extend the QoS is achieved with respect to the existing con tract. We explain the decision making mechanism in Section 5 that works based on the satisfactio n degree. Section 6 provides experimental result using a s imulator and evaluates the effective-ness of the proposed approach. Section 7 concludes the paper and discusses our future work. Deviation of quality ranges from the existing contract may produce a system failure and bring dissatisfaction for customers. To this end, the evolution and adaptation of web services are becoming two important issues in reacting to the various changes in order to provide the agreed QoS stated in the contract. Recently, many adaptation strategies and methods have been proposed in the literature. However, most of the work in service adaptation concentrates on the technical issues and definition of mechanisms for adaptation rather than con-sidering QoS perspective. A list of adaptation strategies for repair processes in SBAs is provided in [6] and [1]. For examp le, [7] proposed a service replacement approach for adaptive Web Service composition and execution, while Canfora et al. [5] presented a re-composition approach dealing QoS replanning issues at run time using late binding technique. However, none of these works consider the consequences and potential overheads of adaptation. To this end, for exam-ple, an environment for compensation of Web Service transa ctions is proposed in [25]. In order to consider the overall value of a change, [15] presented an ap-proach called value of changed information (VOC). Furthermore, an adaptation mechanism is proposed based on VOC in [8]. However, these works have the limitation that they do not take into account the satisfaction level of services. Making adaptation decisions and evaluating them is therefore complicated and has consequences that are often neglected. Some qualitative and quantitative techniques has been proposed, however evaluating impacts of adaptation still remains as an open challenge.

One core issue to address is the definition of a flexible description for Web Ser-vices. Formulation of service specificatio ns/requirements has been studied in the literature. In autonomic systems and in par ticular web services, reasoning about such specification is a hard job due to the changing environment that affects ser-vice requirements. Although a lot of research has been conducted for functional Web Service description, only a few efforts have been done with respect to non-functional properties description of Web Service. Among syntactic and semantic WS description we refer to the work done in [30], [21] and [16] which they also provided algorithms for service selection based on such description. A major lim-itation of those papers and other similar ones is due to not considering the partial satisfaction of the QoS attributes. With this regards, [23] provided a semantic Policy Centered Meta-model (PCM) approach for non-functional property de-scription of web services. A number of operators (e.g. greaterEqual, atLeast) for numeric values are defined in the model for determining tradeoffs between vari-ous requests. Therefore, the approach can support the selection of Web Services that partially satisfy user constraints. In [20] and [19], the authors extend the approach proposed in [23] by proving a solution for Web Service evaluation based on constraint satisfaction problem. The approach uses utility function to present the level of preferences for each value ra nges defined in the service description. However, it does not take care of adaptation issues and controlling values at run-time. In [22], the authors discuss about fixable and non-fixable properties to deal with bounded uncertainty issue. Constraint programming is used as a solution, however, there is no evaluation of the work.

It is required to provide a framework to evaluate alternatives and quantify their impact for making decision decisions. Each alternative has different degree of satisfaction and their impact has to be evaluated in order to select the best adaptation strategy. A quantitative approach applying a probabilistic modeling is used for partial goal satisfaction in [18]. Dealing with the uncertainty issue is one major problem in order to formulate and manage service specification. Thus, recently researchers are investigat ing to incorporate th is uncertainty into the service specification. In [14], the author provides support for reasoning about uncertainty. A goal-base approach for requirement modeling in adaptive systems is proposed in [9] which uncertainty of the environment is taken into account. Furthermore, a language named RELAX is developed for specifying requirements in adaptive systems [26,27] in which certain requirements could be temporarily relaxed in favor of others. In general, diff erent temporal logics have been used for formal specification of requirement. L inear Temporal Logic (LTL) has been used in [4,11] to formally specify requirements in a goal oriented approach. In partic-ular, LTL is extended in [31] and named A-LTL to support adaptive program semantics by introducing an adaptation operator. [3] uses Allen X  X  interval alge-bra for the formal specification of servi ce requirement. Those approaches have limitations such that they are unable to consider environmental uncertainty and behave in a binary satisfaction manner.

Fuzzy approach [29] is an alternative to concur such limitations of aforemen-tioned approaches. However, the fuzzy approach may not be the only alternative to deal with uncertainty. Different mathe matical and frameworks are presented in the literature to address the uncertainty issue and partial satisfaction of the requirements. For example, making decisions about non-functional properties us-ing Bayesian networks is proposed in [13] while [17] used a probabilistic method for this purpose. Applying fuzzy logic to incorporate uncertainty and making decisions has been proposed in other domains such as management, economy and many aspects of computer science, however, to the best of our knowledge there is very little of such application in adaptation of web services. As of such, [10] proposed a fuzzy approach for assigning fitness degrees to service policies in a context-aware mobile computing middleware. A trade-off analysis using fuzzy approach for addressing conflicts using imprecise requirements in proposed in [28]. With respect to partial satisfact ion of requirements, [12] provided a web service selection approach using imprecise QoS constraints.
 There are several different approaches towards adaptation of web services. This diversity yields from a missing consensus on the required decision making to automatically perform web service adaptation. Therefore, in this paper we propose a fuzzy adaptation approach as a possible way in providing a foundation of such a consensus which is based on the satisfaction degree of QoS parameters. This section is devoted to presen t a formal definition of quality parameters in a service description and is concerned with QoS property descriptions of Web Ser-vices. The formal specification we propo se has been inspired and is an extension of our previous work [3]. We extended the work by defining fuzzy parameters for such service description. Fuzzy parameters could be considered as fuzzy sets and measured based on their value of memb ership. Satisfaction degree of fuzzy parameters is measured according to their actual distance of the agreed quality ranges in the contract. Having introduced the fuzzy parameters it is possible to understand to what extent the quality parameters are violated/satisfied. This way, partial satisfaction of parameters is allowed through measuring imprecise requirements.
We define set D to contain the quality dimensions (such as availability, exe-cution time, price or throughput) identified and agreed by the service provider and consumer. Each quality dimension has a domain and range; e.g., availabil-ity is a probability usually expressed a s a percentage in the range 0-100% and execution time is in the domain of real numbers in the range 0 .. +  X  . A quality dimension d can be considered monotonic (denoted by d + )or antitonic ( d  X  ); monotonicity indicates that values closer to the upper bound of the range are considered better, whilst with antitonic dimensions values closer to the lower bound are considered better. A parameter m associates a quality dimension to a value range [3].

If a parameter is non-fuzzy (strict) its satisfaction degree will be evaluated in a binary manner (Yes or No). In contrast, fuzzy parameters (relaxed) will be eval-uated in a fuzzy manner which shows d ifferent degree of satisfaction ( x  X  [0 , 1]). Note that we also provide value ranges for both parameters regardless of being fuzzy or non-fuzzy. The satisfaction degr ee of fuzzy parameters will be measured using membership functions provided for each parameter. In the following we provide the extended definition of a parameter based on the definition intro-duced in [3]. In particular, we define a type t foraparameterthatcanbeeither strict or fuzzy.
 Definition 1 (Parameter). We define a Parameter m  X  X  as a tuple m := ( d, v, t ) ,d  X  X  ,v  X  X  ,t  X  X  s, f } .where D is the set of quality dimensions, V is the set of ranges for all quality dimensions D , s represent a strict parameter and f represent a fuzzy parameter.
 QoS once defined in a contract between two parties may change during a ser-vice life-cycle. Changes could be due to system failures or evolution of quality requirements from the involved parties. Therefore, Web Services need to be able to adapt dynamically to respond to such changes. Adaptation and evolution of services are playing an important task in this domain. However, adaptation of web services needs to be performed in an appropriate manner to accommo-date QoS changes/violations by choosing the best adaptation strategy. Defining service description with the proposed fu zzy parameters provides a flexible situ-ation in dealing with adaptation decisions. We discuss how it can facilitate the adaptation of web services through an example. According to the new definition of parameters, we consider availability and response time as fuzzy parameters. Let us assume an example of a contract with initial value ranges of availability between 80% to 90% and response time between 2 to 5 seconds. We use this example throughout the paper.

We provided situations in which new Qo S ranges could be still acceptable for both parties according to the existing co ntract [3]. We introduced a compati-bility mechanism that used parameter subtyping relation and Allen X  X  Interval Algebra [2] for comparing value ranges and their evolution. The provider and requestor are compatible with each othe r according to the existing contract if the QoS changes are in one of the acceptable situations. If the compatibility is not provided, however it does not give any information about the degree of satisfaction/dissatisfaction of the offered service. For example if the new range of availability is less than 80%, this is not considered as an acceptable situation and it is considered as a violation. In such cases, we would also like to under-stand to what extent the quality parameter and the aggregated service quality are satisfactory. An availability of 75% might still be acceptable if we consider the partial satisfaction of quality ranges. Having defined the fuzzy parameters we are able to apply the fuzzy logic. As for the first step we need to know the right amount of quality satisfaction. Previously in [3], we provided a compatibility mechanism to understand under which conditions the changes are a cceptable. The approach suffers from the limitation that changes are considered either compatible or incompatible with the contract. This means, quality changes are calculated in a binary approach which it does not take into account clearly the relation of quality parameters with their satisfaction. To say it in other way, the QoS parameters are measured in a precise manner and their partial satisfaction is not taken into account. In the following we provide mechanisms to allow partial satisfaction of quality parameters imprecisely using fuzzy sets.

The main point of using fuzzy logic is to find a relation and to map our input space to the output space. The inputs here are namely service availability and response time and the output is the overall satisfaction degree of them. For each QoS parameter in the service description we provide a membership function that represent the level of satisfaction of eac h parameter. The membership functions map the value of each parameter to a membership value between 0 and 1. We use a piece-wise linear function, named trapezoidal membership function, for this purpose. Membership functions for ResponseTime and availability are shown in Figures 1 and 2. Both membership functions have two linguistic states namely compatible and incompatible and they are identified according to the initial value ranges of the contract. Figure 1 shows that the response time of 0 to 5 has the maximum degree of compatibility; however, the membership degree decreases while the response time increases. It also shows that response time has the mini-mum degree of incompatibility between 0 to 5 seconds; however, the membership degree increases while the response time increases. Note that the response time is set to be 2 to 5 seconds in the contract; however, the range between 0 to 2 is also acceptable with the same me mbership value as the initial range in the contract has [3]. With the same reasoning, the availability of 80 to 100 has the maximum degree of compatibility illustrated in Figure 2. However, the membership degree of compatibility decreases while the availability decreases.

Having defined the membership functions, the mapping between the input and output space will be done by defining a list of if-then statements called rules .We have already defined what do we mean being compatible and incompatible for the quality parameters and specified their ranges using membership functions. Since we are relaxing the antecedent usin g a fuzzy statement, it is also required to represent the membership degree of the output (i.e. here satisfaction). There-fore, the satisfaction degree is also repres ented as fuzzy sets: satisfaction is low, satisfaction is average and satisfaction is high.

We define three if-then rules as below. it represents the antecedent and con-sequent of the rule. All the rules are applied in parallel and their order in unim-portant. We define the fuzzy union/disjunction ( OR ) and the fuzzy conjunction/ intersection ( AN D )using max and min functions respectively. Therefore AANDB is represented as min ( A, B )and AORB is represented as max ( A, B ). 1 .If ( ResponseT ime is compatible ) and ( Availability is Compatible ) then ( Satisf action is high ). 2 .If ( ResponseT ime is incompatible ) or ( Availability is incompatible ) then ( Satisf action is average ). 3 .If ( ResponseT ime is incompatible ) and ( Availability is incompatible ) then ( Satisf action is low ).
 We use the satisfaction degree calculated using the fuzzy inference system for the adaptation and evolution decision making. The decision making mechanism works based on the algorithm we provided in [24]. The algorithm evaluates the evolution of the service and decides which adaptation strategy to take with respect to the predefined threshold degree for QoS satisfaction. The two main decisions are the internal renegotiation in which the changes are compatible with the service description in the contract and service replacement in which the changes are incompatible with the existing contract. The former case deals with the internal contract modification with the same provider and requester while the earlier case requires the selection of a new service and establishment of a new contract which can result in a huge loss of time and money.

Having provided such a decision making mechanism allows us to offer a flexible adaptation mechanism. This is done by identifying threshold to what constitutes compatible and incompatible . Using satisfaction degree allows us to define the criticality of a change/violation. Therefore, we are able to understand whether a violation is critical and it results in a service replacement or the violation is still acceptable. This way, a slight chan ge from the quality ranges defined in the contract will not trigger the adaptation. Table 1 shows the result of checking for compatibility for a possible set of changes. The comparison is between our fuzzy approach and a traditional non-fuzzy one that works based on the precise evaluation of the quality ranges in the contract.
 In the fuzzy approach the replacement i s based on the satisfaction degree. However, in the non-fuzzy approach a service replacement is necessary if any parameters are violated from the initial range, albeit minor deviation. For ex-ample in S 1 =(6 ,. 90), changing the response-time to 6s will not result a service replacement applying the fuzzy approach since it has the satisfaction degree of almost 83%. While applying a non-fuzzy approach, it is considered a violation because it does not respect the initial response-time range (2, 5) in the contract. However, if a change results in a low sati sfaction degree, service replacement is necessary in both approaches as in the case S 10 =(6 ,. 50) which the satisfaction degree is around 62%. Having defined the membership functions and rules in the previous sections, we have built and simulated a fuzzy inference system to interpret rules. The process has different steps including: fuzzification of input quality parameters, applying fuzzy operators to the anteceden t, implication from the antecedent to the consequent, aggregation of the results for each rule, and defuzzification. A view of the simulator including the previous steps is illustrated in Figure 3 in which a complete fuzzy inference system is represented.

The first step is to apply the membership functions to map each QoS param-eters to the appropriate fuzzy set (between 0 and 1). We used two inputs of Availability (interval between 0 to 100) and Response-time (interval between 0 to 10). The inputs are mapped to fuzzy linguistic sets: availability is compatible, availability is incompatible, response-time is compatible, and response-time is incompatible. Figures 1 and 2 show to what extent the availability and response-time are compatible. The next step is to give the result of the fuzzified input parameters to the fuzzy operators. According to the rules, AND and OR oper-ators are applicable. This will give us a degree of support for each rule. Next is applying the implication method that uses the degree of support to calculate the output fuzzy set. We used a minimum method to truncate the output fuzzy set for all the rules separately. However, we apply all the rules in parallel and we do not define any priority and weight for them.

At the end of the implication, we apply an aggregation method to combine all the rules. This way, the outputs of each rule represented in fuzzy sets are com-bined into a single fuzzy set. A maximum method is used for the aggregation. The last step is to defuzzify the fuzzy set resulted after the aggregation step. We applied a centroid method to calculate the defuzzification process. The method returns the center of the area under the curve. Figure 3 shows that the response-time of 3.67 seconds and availability of 68.6% result a satisfaction de-gree of 82.8. Figure 4 shows a surface map for the system and the dependency of the satisfaction degree on the response-time and availability.

We evaluate the effectiveness of the fu zzy approach with a non-fuzzy approach with respect to the stability of the system in terms of number of times a service needs to be replaced. The fuzzy approach p erforms the adaptation based on the QoS satisfaction. Only if the result of the satisfaction is lower than a threshold a service replacement occurs. While in th e non-fuzzy approach, the replacement decision is done based on the precise evaluation of the QoS value ranges. We have conducted our experiment 200 times, each time providing random data for the input parameters. Figure 5 illustrates the output (satisfaction degree) of the experiment. The satisfaction threshold was set to 70%.

Figure 6 represents the stability of the fuzzy and non-fuzzy systems. As it is shown, the number of service replacement in a non-fuzzy approach is much higher than when we apply a fuzzy approach. This actually is a direct proof of our approach. Using fuzzy parameters we allow partial satisfaction of the param-eters. Therefore, the decision making fo r adaptation is not based on the precise evaluation of the quality ranges and it is rather imprecise and allows the param-eters to be relaxed. The non-fuzzy approach involved the maximum number of service replacement which includes more q ueries for the service selection. This can results in a huge loss of time and money. The cost of establishing a new contract is also considerable. In this paper, we used fuzzy parameters fo r the QoS property descriptions of Web Services and a fuzzy approach is taken in order to select adaptation strategy. However, interpreting and presenting adaptation decisions based on fuzzy logic is still a hot research area that requires to be investigated more in the research community of software an d service engineering.

In particular, we used linear trapezoidal membership function for the sake of simplicity. Currently, we are conducting more experiment to investigate the usage of Gaussian distribution function and Sigmoid curve that have the advantages of being smooth and non-zero all the time.

As for the future work, we aim to continue exploring the use of fuzzy pa-rameters for the QoS matching. Applying more sophisticated functions using AI to Map the satisfaction degree to the appropriate adaptation decision might be worth exploring. However, there are still challenges that need to be addressed. For example, to what extent a parameter could be relaxed yet consider no vi-olation? We also plan to incorporate more QoS parameters for calculating the overall satisfaction degree that influence the process of decision making. This requires the definition of more complex r ules that represent the relation and dependencies between parameters.

Last but not least, applying an appropriate decision making requires an an-alytical evaluation based on a cost model. We would like to know under which circumstances the proposed approach is b eneficial consider ing both QoS and business value criteria.
 The research leading to these results has received funding from the European Community X  X  Seventh Framework Programme FP7/2007-2013 under grant agree-ment 215483 (S-Cube).

