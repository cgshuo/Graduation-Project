 Range queries for querying the current and future positions of the moving objects have received growing interests in the research community. Existing methods, howev er, assume that an object only moves along an anticipated path. In this paper, we study the problem of answering probabilistic range queries on moving objects based on an uncertainty model, which captures the possible movements of objects w ith probabilities. We conduct a performance study, which shows our proposal significantly reduces the number of object examin ations and the overall cost of the query evaluation. H.2.4 [ Database Management ]: Query Processing. Algorithms, Design, Performance. 
There are growing demands for moving objects monitoring functions in numerous mobile a pplications. For instance, by continuously receiving location updates from buses on roads, a bus control system can perform a better bus scheduling. To avoid traffic congestion, a range query, which  X  X etrieves all the buses that will arrive within 1 mile of the station in the next 10 minutes X , may be issued to obtain estimated answers. Research on spatio-temporal databases th at manage objects X  moving information has produced fruitful. A number of efficient methods for managing moving objects have been proposed. Typically, they assume that an object moves on an anticipated path. As a result, an object X  X  most possible path based on a linear function or recent information is maintained. In fact, the real location of an object is known for certain to the server only when an update is received. The uncertainty of the object X  X  location increases as time grows until the next update is received. Thus, the uncertainty has a great impact on the accuracy of these proposed methods. 
Since most objects move without deviating from their recent moving behaviors drastically, the uncertainty can be bounded, i.e., an object X  X  future positions could be captured using an uncertainty probability density function (pdf) [1]. A pdf of an object O i moving in a one-dimensional (1-D) space can be location x at the time instant t . Therefore, an object X  X  location at any time can be estimated with an uncertainty probability defined by its pdf. Typically, the function f i can be derived from O i  X  X  past transform the expanded query into a search range. Querying on the index using the search range allows pruning the unqualified points outside the search range. Thus, the cost of object examinations is reduced. After the elimination process, the remaining objects are examined to evaluate their probabilities. For problem (2), we develop an appr oximate approach to reduce the cost of integral operations in evaluating the probabilistic query condition. While the proposed approximate approach results in false positives, none of the objects that should be included in the answers is lost. We also develop an error function to compute the probability bound for the answers. 
We conduct experiments on uncer tain object movements in one-dimensional space. We show the running time of querying with time instant and time period. All the algorithms are implemented in C++ and carried out on a 3.2GHz Intel Pentium IV PC with 1G main memory, running Windows XP SP2. 
The experimental data is gene rated as follows. We simulate N objects moving on a line segment forthright [0, 200000], which has the length 200 kilometers. We vary N from 100 K to 1 M . We define the time unit is 1 second (1s). In the initial stage (i.e., at time t = 0), N objects are uniformly distributed on the forthright. The objects speeds are randomly generated from v min = 10 meter/sec to v max = 50 meter/sec (10 meter/sec is equal to 36 km/h and 50 meter/sec is equal to 180 km/h .) and the direction is randomly positive or negative. The objects velocity variance is also randomly assigned from 4 meter 2 /sec to 16 meter 2 /sec . Then the objects start moving. Each object re-generates its speed and variance until the distance between the location it moves to and the previous updated location is up to 500 meters . At each time instant we execute 100 random queries, where the length of the location is randomly chosen fro m 100 to 10000, the time length is from 1 to 600. Note that we have two kinds of queries with time instant and time period, respectiv ely. We randomly generate a time instant from 1 to 3600 to a ssign the start time of a time period. We implement R-tree as our indexing structure. We keep all the information including the index and moving objects X  data in the main memory instead of in the hard disk since performance of index is out of scope of this study. 
Figure 1 presents the query ex ecution time using our approach (labeled by HT since it X  X  based on Hough Transform) in comparison with the non-indexing method for 500 K and 1 M objects. The HT-process includes two stages, i.e., 1) elimination, and 2) (approximate) examination. Non-index method retrieves all objects for evaluation by cumulative normal density function. The query execution time of HT-process decreases as the query probability increases till the proba bility threshold exceeds 0.5, because the generated queries with the same location interval are mapped to the same search range when the probabilities exceeds 0.5. Figure 2 shows the executi on time for querying with time period. The execution time on 1 M objects decreases more significantly than on 500 K objects as the probability threshold increases because the elimination and examination are effective. 
