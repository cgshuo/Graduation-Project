
Crown Copyright &amp; 2009 Published by Elsevier Ltd. All rights reserved. 1. Introduction
Cash is a critically important resource in the construction sector, and profitability greatly influences cash flows during project progress. Russell (1991) indicated that over 60% of construction contractor failures are attributable to economic factors. Effective cash flow control impacts significantly upon project management and project success. Cost flow management involves forecast and control, and dynamic cash flow forecasts based on financial considerations provide the advanced knowl-edge necessary to manage cash flows. Various methods have been applied to cash flow management based on analyses of real business environments.

Almond and Remer (1979) presented six continuous cash flow models with two special limiting cases. As forecasting cost flow at the company level is more difficult than at the project level, Navon (1996) developed a system to generate company cash flows automatically. Chen et al. (2005) recommended an extended cost-schedule integration model influenced by more detailed payment conditions, including payment lag differentials, separate tracking of material and labor costs, and payment frequency. Park et al. (2005) adopted moving weights for cost categories to build a realistic cash-out model and transferred net planned monthly earned values as cash-in simply to forecast a cash flow model that reflected time-lagged impacts during the construction phase. Khosrowshahi and Kaka (2007) developed a model that integrates modules comprising an exponent and two fourth-degree polynomials to forecast and manage project cash flow. Gormley and Meade (2007) proposed a time series model to provide expectations of further cash flows. Jarrah et al. (2007) used a fourth degree polynomial regression analysis for a TxDoT highway project payment curve forecasting model to predict cash flows and trends.

Most project cash flow models use S curves to forecast project cash flow because such an application is the simplest method of projection ( Touran et al., 2004 ). Suhanic (1986) addressed the use of the banana envelope to show the integration of project resources and project schedule stated as early and late dates. The S-curve is based on combinations of historical projects and is popularly formed by third, fourth, or fifth degree polynomials (Navon, 1996 ). The S curve is normalized to two basic quantities of total relevant quantity (such as project costs) and project duration, which are widely applied to various aspects of project management ( Cioffi, 2005 ). Stallworthy (1979) utilized the S curve to reflect  X  X  X he value of work done X  X  into project cost control in relation to cost and time estimates. Singh and Lokanathan (1992) indicated that the application of S curves to cash flow projections can achieve accuracies of 88 X 97%. Barraza et al. (2000) introduced a stochastic S curve as an alternative to the deterministic S curve to generate probable budget and duration values. Blyth and Kaka (2006) produced an individual S curve for a particular project using a multiple linear regression model with studies on 50 projects and 20 criteria.
 models and/or systems that address various practical problems. AI approaches are currently considered as alternatives to manage project costs. Two critical considerations apply when employing an AI approach. Firstly, an appropriate approach must be developed based on objectives. Secondly, an applicable historical data pool with relevant parameters must be built. With AI approaches, even though the relationship between inputs and output are not identified, predicted result may still be assessed with an acceptably high degree of accuracy. Chua et al. (1997) used neural networks to assess project budget performance with 27 input factors of 22 data records. Boussabaine and Kaka (1998) used a neural network approach with initial cash flow for periods to address sequential period cost flows. Lowe et al. (1993) used expert systems to help clients manage cash flows. Boussabaine et al. (1999) used artificial neural networks to aid in the forecasting of water pipeline project cash flows. Lokmic and
Smith (2000) introduced back-propagation neural networks as an alternative to cash flow forecasting, using self-organizing feature mapping for project clustering. Hegazy and Petzold (2003) developed a dynamic project cost control model that used genetic algorithms for total cost optimization. When a project is constrained by discounted cash flows, the ant colony algorithm can be used for resource scheduling ( Shou, 2006 ).
 nonlinear equation into a specified layer, which allows networks to capture high order correlations easily and attain nonlinear mapping effectively. As HONN uses high order correlations, it holds the potential to perform better than linear NN ( Zurada, 1992). HONN not only allows a fuller degree of adaptability (in terms of nonlinear mapping) than linear models, it features a structure that makes it easier to determine how network inputs are actually mapped into network outputs ( Abdelbar and Tagliarini, 1996 ; Tsai, 2009 ).
 developing hybrid AI tools, which have been employed in AI approaches already successfully applied in many construction industry research topics  X  especially in the area of construction management ( Cheng et al., 2008, 2009 ). Previous studies in which the authors have contributed applied GA-optimized neural-fuzzy models (called  X  X volutionary fuzzy neural inference model X  or EFNIM) to various problems. The current study combines linear neural networks (NNs) and high order neural networks (HONNs) into a hybrid neural network (HNN). Each HNN layer connector is dominated by an alternating linear and high order layer connector. The participation of fuzzy logic facilitates HNN model evolution into a fuzzy hybrid neural network (FHNN) model, with some modifica-tions that make it different from EFNIM. Within the proposed evolutionary fuzzy hybrid neural network (EFHNN) model, we further employed GA to optimize FL membership functions and HNN connection types, topology, and coefficients. Obviously, there remained some additional variables of concern when comparing EFHNN to EFNIM. This study further applied the proposed EFHNN to project cash flow control. In this EFHNN application, we applied EFHNN learning to cash flow prediction as well as introduced a concept of strategic project cash flow control. In the remaining sections, we introduce the artificial intelligence approaches used to develop our project cash flow forecasting model. The cash flow learning result will further be applied to a strategic project cash flow control mechanism designed to make sure that project cash flow performs within the banana envelop of the S curve. Employing this strategic approach should enhance the chances for a construc-tion project X  X  ultimate financial success. 2. The evolutionary fuzzy hybrid neural network (EFHNN)
The proposed EFHNN incorporates four artificial intelligence approaches, namely the neural network (NN), high order neural network (HONN), fuzzy logic (FL), and genetic algorithm (GA) (see Fig. 1 ). NN and HONN comprise the inference engine, i.e. the proposed hybrid neural network (HNN); FL dominates fuzzifier and defuzzifier layers; and GA optimizes the HNN and FL. In accordance with the definition of  X  X  X euro with fuzzy input X  output X  X  given by Hayashi et al. (1998), this study proposes a fuzzy hybrid neural network (FHNN) comprising an HNN with fuzzy inputs and fuzzy outputs (see Fig. 2 ). Each HNN connection may select a linear or high order NN connector. Sequentially, the FHNN is optimized through a GA adaptation process (see Fig. 3 ). The process uses GA to search simultaneously for optimum FL mem-bership functions, defuzzification coefficients, HNN topologies, and HNN parameters (including linear/high order connection types), with P ( t ) denoting a population at generation t , P offspring population at generation t , and P M ( t ) a mutation population at generation t . Details of FL and HNN and GA are described in the following sections. 2.1. Proposed hybrid neural network
The term  X  X  X ybrid X  X  typically refers to anything derived from heterogeneous sources or composed of different or incongruent elements. For the proposed HNN,  X  X  X ybrid X  X  refers to the combining of traditional neural and high order neural networks. The high order neural network that this paper uses was proposed by the HONEST model ( Abdelbar and Tagliarini, 1996 ), and is constructed of three layers with a high order connection and a linear connection between the 1st and 2nd layers and 2nd and 3rd layers, respectively. This study extends the use of high order connections for all connection alternatives, i.e. all layer connections can switch between linear and high order formats (see Fig. 2 ). An HNN neuron is dominated by an alternative of the following equation Linear connection : y j  X  f High order connection : y j  X  f Activation function : f  X  x  X  X  1 1  X  e ax  X  3  X  where y j is a HNN neuron output calculated by neuron inputs x represents a coefficient of an interconnection, which can be in linear or high order format based on the weight w ji or exponent p , respectively (see Fig. 4 ). An activation function f uses a sigmoid function with a slope coefficient of a . Therefore, each layer connection features an attached connection type that represents the corresponding operation selection (see Fig. 2 ). All HNN parameters are then optimized by GA evolution. As noted above, a HNN with 2 layers may select either a linear layer connection ( L ) or high order connection ( HO ). Four possible scenarios, based on connection type, exist for 2-layer HNN models, including L X  X  , L X  X O , HO X  X  , and HO X  X O .If N is adopted as the maximum HNN layer number (i.e., the final HNN model is an HNN with a number of layers not greater than N ), then the number of HNN model candidates are 2 1 ,2 2 , y ,2 N , respectively, related to HNN 1, 2, y , N layers. In sum, of the (2 N+1 2) HNN model candidates, only ( N ) models select all L connections. All others are categorized into high order neural networks in this study. The proposed HNN includes all linear and high order neural networks according to connection type selections which are dominated by GA evolution. 2.2. Fuzzy logic facilities describe uncertainty and imprecision. In Fig. 2 , the HNN is enclosed between fuzzification and defuzzification layers. The complete structure is a fuzzy hybrid neural network. In the defuzzification layer, the membership function (MF) initially assigns inputs into one of the several membership grades. In this study, a complete MF set using trapezoidal MF has been adopted.
A general approach to describing MF shapes is to depict MF summit positions ( sm i ) and widths ( wd i )(Ishigami et al., 1995 ;
Hayashi et al., 1998 ). An input can be assigned to several membership grades with MF. Initially, MF inputs are bound between the range of layer inputs, and membership function inputs are usually set within [0,1]. However, owing to adopted
Eq. (2), if one of the membership function outputs has a value of zero, related HNN neurons will output zero values through the sigma X  X i P operator. To prevent such, this study modified the original MF to the output range of [0.0001,1] (see Fig. 5 ).
Following the aforementioned descriptions, all membership functions are characteristic of values of sm and wd . In the defuzzification layer (see Fig. 2 ), this study adopted a weighted average formula, as follows: y i  X  c  X  x  X  X  Membership grade
Membership grade x x where c is a defuzzification function; a represents defuzzification weights; x denotes the eventual outputs of HNN; and y are final FHNN outputs. Consequently, GA evolution will dominate sm , wd , and a . 2.3. Genetic Algorithm facilities
Genetic Algorithms (GA), which imitates elements of the natural evolution process, were first proposed by Holland (1975) . To apply GA to problem optimization, one must identify all essential parameters to determine chromosome length. The chromosome (i.e., one individual) in this study represents an FHNN with HNN and FL parameters. HNN parameters have interconnection coefficients c ( w and p ), connection types ( CT : L or HO ), slope coefficient of activation function a (1 X 6), and network topology (total layers and layer neurons). FL X  X  para-meters include MF summit points ( sm ), MF widths ( wd ), and defuzzification weights a . It deserves mentioning that an inter-connection coefficient c can be used for alternatives w or p . However, w and p perform totally differently, as they must be recorded in different sub-strings. Therefore the aforementioned c should be a combination of w and p . Once an individual X  X  chromosome is identified, FHNN can be optimized through the adaption process with crossover, mutation, and selection me-chanisms (see Fig. 3 ). Each model result is evaluated using root mean square error (RMSE). 3. EFHNN cash flow prediction model The cash flow prediction model was developed as outlined in Fig. 6 using the developed EFHNN as the inference engine. Cash flow predictions were modeled on standard cumulate cost X  X ime curves. Each project was divided into 20 sections (i.e., intervals or periods), each representing 5% of total project completion as calculated by total executed/construction cost. As a single point can impact greatly upon neighboring points in curve fitting, we used the cash flows of three sequential periods as model inputs and the cash flow that immediately followed the three as the learning output (see Fig. 7 ). As such, there were 17 cases inherent in a completed project from the first set (1, 2, 3) to the final set (17, 18, 19). Prediction results were represented by the cumulated cash flow ratio of the 4th through 20th periods. The confirmed learning inputs and one output target were treated as bases of project cash flow prediction using EFHNN. Data used in this paper, gathered from a construction contractor in Taipei, were generated during the execution of condominium high rise projects from 1996 through 2006.
 were identified using the hierarchy of objective technique (HOT).
In Fig. 8 , the main impact factors of project cash flow were classified as either ECF or ICF. Four sub-items affected planned schedules (i.e., planned expenditure cash flow (P_ECF) herein).
They also influenced earliest start (ES) progress and latest start (LS) progress settings. Four kinds of total costs ( Cost x to calculate the project cost. Weights ( W X ) were defined for ratios of overall category costs.

W X  X  Cost X P 4 of N th pricing frequency. Therefore, period category costs can be denoted as a ratio of ACR N X  X  AC N X Cost PP N  X  ACPP N  X  where PP N was the project progress done within the period of N th pricing frequency. ACPP N , accumulated project progress, was then normalized into 20 periods (i.e., 5% project completion segments).
In contract payment, ECF was related to three kinds of cash flow including payment by cash ( pc ), payment by bills ( pb ), and payment for reservations (ratio of reservation money, rr ). The period ECF and accumulated ECF could be represented as PeECF N  X  PeECF N ; pc  X  PeECF N ; pb  X  PeECF N ; rr  X  13  X  ECF N  X  where PeECF N,pc , PeECF N,pb , and PeECF N,rr were cash payments, respectively, related to contracts of pay by cash, pay by bills, and pay for reservations during the period of N th pricing frequency. The rr and pc were ratios of reservation money and pay by cash for contracts. Consequently, project progress PP N and accumulated expenditure cash flow ECF N at completion of the N th pricing frequency were established.

While the subsequent ICF may be calculated directly based on the contract documents (under an assumption that contracts are executed to completion), the next ECF has been difficult to predict due to various factors that potentially impact upon it. Therefore, we predicted the next ECF by employing the proposed AI approach, which represents the major parameter studied in this paper. We calculated period ECF data for EFHNN learning using the aforementioned 13 historical projects. Every string of four sequential ECFs was treated as one historical dataset. Therefore, each project provided 17 sets of data. Of the 13 project candidates, 11 projects were assigned for EFHNN learning and two for testing, giving 187 training data sets and 34 testing data sets in total (see Table 1 ). Once completed, all materials for EFHNN learning were ready. 4. EFHNN learning for ECF prediction 4.1. EFHNN parameter settings
EFHNN parameters (see Table 2 ) were set appropriately in order to calculate optimum learning results and develop follow-on applications. 4.2. EFHNN training results
After 5000 iterations, training results for the best fitness function, average fitness function, and root mean square error (RMSE) of the best individual were 45.60, 24.24, and 0.0219, respectively. The two sets of testing results, including actual expenditure cash flow (AECF), predicted expenditure cash flow (PECF), and error between AECF and PECF (EECF), are shown in Fig. 9 . The 9 AECF X  X ECF 9 value represents EECF directly, and average discrepancies between AECF and PECF in the two testing project cases were 1.27% and 1.39%, respectively. The overall testing EECF was 1.33% ((1.27%+1.39%)/2). The training result RMSE 0.0219 (2.19%) for this model fell within the forecast error range for the construction industry suggested by Kenley and Wilson (1989) and Kaka and Price (1991) of 7 3% of the contract amount, which demonstrates proposed model reliability. The accuracy and performance of the proposed AI model in assessing ECF using data from three previous ECF was established. Learned cash flow trend is illustrated in the model structure in Fig. 10 ,in which the high order NN connection was employed for the second
NN connection. Such a result highlights that high order NN connections are quite applicable to cash flow learning. Estimators developed in this paper achieved high levels of precision for construction project cash flow predictions (see Table 3 ). 5. Model applications 5.1. Strategic project cash flow control as a strategic project cash flow control tool. To achieve this, we adopted a two-step model application procedure (see Fig. 11 ).
With the 9th project period already complete, the next step was to predict expenditure cash flow in the 10th period (PECF prediction can be generally expected to fall within the envelope of earliest and latest start expenditure cash flows (ES_ECF and
LS_ECF). The ECF project manager should be alerted immediately when the prediction performs otherwise. As such, the i th PECF can be predicted using the result of the proposed AI approach
PECF i  X  EFHNN  X  AECF i 1 ; AECF i 2 ; AECF i 3  X  X  15  X  where PECF denotes predicted expenditure cash flow; AECF represents the actual expenditure cash flow; EFHNN represents the result of inputs from the learning result described in Section 4, and i represents the project period.
 no doubt that a prepared expenditure cash flow curve (P_ECF) should exist prior to project execution, a discrepancy exists between PECF i and P_ECF i when Eq. (15) is used to predict the i th
PECF. An appropriate strategy should be adopted to decrease this discrepancy in order to meet the original design or current plan (P_ECF). A prior range AD i , calculated using PECF i and ES_ECF and
LS_ECF envelope boundaries, should be determined before the second model application AD i  X  assigned in this paper within the AD i range, the distance between two adjacent nodes can be expressed as ad i . ad i  X  AD i = 10  X  17  X  herein named as p_AECF i,j for the i th project period ( j is the nodal index). project period. pPECF_ i  X  1 ; j  X  EFNIM  X  pAECF_ i ; j ; AECF i 1 ; AECF where p_PECF i +1, j represents the pseudo PECF in ( i +1) project period function of the corresponding j th p_AECF i,j (p_AECF Fig. 11 ) and two additional AECF (AECF 9 and AECF 8 in Fig. 11 ).
After all 11 values of p_PECF i +1, j have been determined (p_PECF in Fig. 11 ), they are compared with the P_ECF i +1 (P_PECF
Fig. 11 ) to see which p_PECF i +1, j is the fittest and should be adopted for the ( i +1)th project period. Finally, the corresponding p_AECF i,j represents the target that should be met in the i th project period.
 between the S-curve envelope and predict ECF performance for the i th project period as well as for the ( i +1) period. Summarily, the proposed approach for strategic project cash flow control can be sequenced in accordance with the following steps (see Fig. 12 ): 1. Predict PECF i with AECF i 1 , AECF i 2 , and AECF i 3 2. Calculate j points (p_AECF i,j ) for financial strategies. 3. Predict corresponding j values of p_PECF i +1, j for p_AECF 4. Compare all p_PEC F i +1, j with predefined P_ECF i +1 5. Adopt the corresponding p_AECF i,j for current project financial major assumption employed in our proposed approach. Such is reasonable, as we only use the ECF learning trend. The strategic ECF control proposed in this paper is original. As one of the three inputs in Eq. (19) is pseudo, adopting two or three pseudo periods, while perhaps working numerically, does not work reasonably. We set only three AECF periods as inputs because a set of three nodal values is the basis of nonlinear phenomena. Subsequently, the related trained EFHNN model may be employed to the new project. 5.2. Actual case application
An actual case was implemented using the proposed approach, which followed the aforementioned procedures. The trained EFHNN result was applied. Twenty price counting cycles (PCC) were then passed (raw data shown in Table 4 ). The project was normalized at 60% project completion percentage, indicating that a total of 12 periods were completed. For the proposed ECF learning approach, 3 sequential AECF were used to predict the subsequent PECF. Therefore, there were 9 data sets for this learning ECF validation. Validation results are listed in Table 5 . Results demonstrate the ability of the trained EFHNN model to predict ECF accurately (average error 1.23%).

The second step in model application addressed strategic financial cash flow control. As this concept is original to this paper, it is difficult to apply directly to actual construction project applications. Further support in terms of academic journal reviews or advocacy will be essential to facilitate such. The following example shows how to apply the model in a financial control application. Firstly, three S-curves of construction pro-gress should be made, representing earliest start (ES) progress, latest start (LS) progress, and prepared progress. In this study, practical construction progress is used as the basis. Standard definitions for these progresses are then applied, with ES progress set as two PCC ahead; prepared progress set as one PCC ahead; and LS progress set as two PCC behind (see Table 6 ). When the proposed approach is applied to the 6th period, the first step is to obtain the value of PECF 6 (25.99% as described in Table 6 ). Based on Eqs. (16) and (17), AD 6 and ad 6 can be calculated as AD 6  X  ESECF_ 6 PECF 6  X  36 : 37 % 26 : 21 %  X  10 : 16 %  X  20  X  ad 6  X  AD 6 = 10  X  1 : 061%  X  21  X  and then, following Eq. (18), the 11 values of p_AECF 6 ,j determined as pAECF_ 6 ; j  X  26 : 21% 27 : 23% 28 : 24% 29 : 26% ... 36 : 37%
When particular p_AECF 6 ,j are input into Eq. (19) with AECF and AECF 4 , p_PECF 7, j are pPECF_ 7 ; j  X  31 : 08% 35 : 70% 36 : 67% 37 : 63% ... 43 : 34%
When the 11 p_PECF 7, j values are compared with P_ECF 7 (36.92%), we find p_PECF 7,3 to be the closest and p_PECF second closest to P_ECF 7 . Therefore, the corresponding p_AECF (28.24%) should be adopted to control the ECF for the 6th project period. Compared to PECF 6 (26.21%), the project should be compressed to achieve an AECF 6 of 28.24% which will lead PECF close to P_ECF 7 . Otherwise, project progress may slow down when the value of PECF 6 exceeds that of AECF 6 . Also, P_ECF 7 precisely attached to any p_PECF 7, j value. An alternative is to adopt linear or nonlinear mapping to identify a corresponding p_AECF 6 numerically. However, ability to calculate precise solutions is not critical to this research. The actual number of pseudo nodes used may vary based on project manager needs. Adopting more than 11 pseudo nodes, while leading to results with greater numerical precision, may not impact cash flow control results significantly.

In summary, this example demonstrates that the proposed approach may be used to perform financial control in the 6th project period and to conduct financial planning in the 7th project period only under the condition that the project has already completed the 5th project period. This strategic financial control relates to the P_ECF 7 based on the trained ECF trend and adjusts period ECF so that it is in closer proximity to the original plan. 6. Conclusions
This paper presents comprehensive descriptions of the pro-posed Evolutionary Fuzzy Neural Network (EFHNN) and its application to sequential ECF predictions and a strategic ECF control approach. In terms of AI methodologies used, the EFHNN mechanism was employed to integrate HNN, FL, and GA. In the proposed EFHNN, HNN included both traditional neural (linear) and high order neural networks; FL used fuzzification and defuzzification layers to sandwich the proposed HNN; and GA optimized FHNN parameters. The proposed EFHNN is innately different from various GA X  X L X  X N approaches (including the previously proposed EFNIM) due to (1) its unique HNN layer connection types, (2) modification of FL membership functions, and (3) GA-optimized parameters. Therefore, the described EFHNN is able to address problems in greater depth due to its large number of HNN models, fuzzy concepts and GA optimiza-tion. It deserves to be mentioned that the proposed HNN architecture is able to perform input X  X utput mapping with both linear and nonlinear NN layer connections. Results indicate that EFHNN results for construction conceptual cost estimates surpass those obtained using EFNIM, which employs traditional NN connections only. Such results demonstrate that the HNN concept makes NN-related parts different innately, and performs well in EFHNN with either FL or GA.

In terms of AI applications, the EFHNN was further proofed for cash flow prediction applications in this paper. Results show that EFHNN can assess the next ECF accurately using three previous ECF values for defined construction periods. The EFHNN also allows easier and more effective project financial control implementation. Strategic financial control can be carried out successfully using previous ES_ECF, LS_ECF, and P_ECF determina-tions. This approach assists project managers to assess ECF for the subsequent period and to control such according to the prepared ECF in the period following the subsequent period. Such recommends a subsequent-period ECF target based on recom-mended target performance.

Using the proposed AI approach, project managers will be able to assess cash flow for the subsequent construction period prior to execution of work for that period. Also, the proposed approach is an effective tool for project managers to control cash flows and develop appropriate strategies in a quick and timely manner. Acknowledgment
This work was supported by the National Science Council, ROC, under Grant NSC 98-2218-E-011-002.
 References
