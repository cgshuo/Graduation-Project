 Topic models are of practical and theoretical inter-est. Practically, they have been used to understand political perspective (Paul and Girju, 2010), im-prove machine translation (Eidelman et al., 2012), reveal literary trends (Jockers, 2013), and under-stand scientific discourse (Hall et al., 2008). The-oretically, their latent variable formulation has served as a foundation for more robust models of other linguistic phenomena (Brody and Lapata, 2009).

Modern topic models are formulated as a la-tent variable model. Like hidden Markov mod-els (Rabiner, 1989, HMM ), each token comes from one of K unknown distributions. Unlike a HMM , topic models assume that each document is an ad-mixture of these hidden components called topics. Posterior inference discovers the hidden variables that best explain a dataset. Typical solutions use MCMC (Griffiths and Steyvers, 2004) or variational EM (Blei et al., 2003), which can be viewed as local optimization: searching for the latent variables that maximize the data likelihood.

An exciting vein of new research provides provable polynomial-time alternatives. These ap-proaches provide solutions to hidden Markov mod-els (Anandkumar et al., 2012), mixture mod-els (Kannan et al., 2005), and latent variable gram-mars (Cohen et al., 2013). The key insight is not to directly optimize observation likelihood but to in-stead discover latent variables that can reconstruct statistics of the assumed generative model. Unlike search-based methods, which can be caught in lo-cal minima, these techniques are often guaranteed to find global optima.

These general techniques can be improved by making reasonable assumptions about the models. For example, Arora et al. (2012b) X  X  approach for in-ference in topic models assume that each topic has a unique  X  X nchor X  word (thus, we call this approach anchor ). This approach is fast and effective; be-cause it only uses word co-occurrence information, it can scale to much larger datasets than MCMC or EM alternatives. We review the anchor method in Section 2.

Despite their advantages, these techniques are not a panacea. They do not accommodate the rich priors that modelers have come to expect. Priors can improve performance (Wallach et al., 2009), provide domain adaptation (Daum  X  e III, 2007; Finkel and Manning, 2009), and guide mod-els to reflect users X  needs (Hu et al., 2013). In Section 3, we regularize the anchor method to trade-off the reconstruction fidelity with the penalty terms that mimic Gaussian and Dirichlet priors.
Another shortcoming is that these models have not been scrutinized using standard NLP evalua-tions. Because these approaches emerged from the theory community, anchor  X  X  evaluations, when present, typically use training reconstruction. In Section 4, we show that our regularized models can generalize to previously unseen data X  X s measured by held-out likelihood (Blei et al., 2003) X  X nd are more interpretable (Chang et al., 2009; Newman et al., 2010). We also show that our extension to the anchor method enables new applications: for Table 1: Notation used. Matrices are in bold ( Q , C ), sets are in script S example, using an informed priors to discover con-cepts of interest.

Having shown that regularization does improve performance, in Section 5 we explore why. We discuss the trade-off of training data reconstruction with sparsity and why regularized topics are more interpretable. In this section, we briefly review the anchor method and place it in the context of topic model inference. Once we have established the anchor objective function, in the next section we regularize the objective function.
 Rethinking Data: Word Co-occurrence Infer-ence in topic models can be viewed as a black box: given a set of documents, discover the topics that best explain the data. The difference between an-chor and conventional inference is that while con-ventional methods take a collection of documents as input, anchor takes word co-occurrence statis-tics. Given a vocabulary of size V , we represent this joint distribution as Q i,j = p ( w 1 = i,w 2 = j ) , each cell represents the probability of words appear-ing together in a document.

Like other topic modeling algorithms, the output of the anchor method is the topic word distribu-tions A with size V  X  K , where K is the total number of topics desired, a parameter of the al-gorithm. The k th column of A will be the topic distribution over all words for topic k , and A w,k is the probability of observing type w given topic k . Anchors: Topic Representatives The anchor method (Arora et al., 2012a) is based on the sepa-rability assumption (Donoho and Stodden, 2003), which assumes that each topic contains at least one namesake  X  X nchor word X  that has non-zero proba-bility only in that topic. Intuitively, this means that each topic has unique, specific word that, when used, identifies that topic. For example, while  X  X un X ,  X  X ase X ,  X  X ly X , and  X  X hortstop X  are associated with a topic about baseball , only  X  X hortstop X  is un-ambiguous, so it could serve as this topic X  X  anchor word.

Let X  X  assume that we knew what the anchor words were: a set S that indexes rows in Q . Now consider the conditional distribution of word i , the probability of the rest of the vocabulary given an observation of word i ; we represent this as  X  Q i,  X  as we can construct this by normalizing the rows of Q . For an anchor word s a  X  X  , this will look like a topic;  X  Q  X  X hortstop X  for words associated with baseball .

The key insight of the anchor algorithm is that the conditional distribution of polysemous non-anchor words can be reconstructed as a linear com-bination of the conditional distributions of anchor words. For example,  X  Q  X  X ly X  structed by combining the anchor words  X  X nsecta X ,  X  X oeing X , and  X  X hortshop X . We represent the coeffi-cients of this reconstruction as a matrix C , where C i,k = p ( z = k | w = i ) . Thus, for any word i , The coefficient matrix is not the usual output of a topic modeling algorithm. The usual output is the probability of a word given a topic . The coefficient matrix C is the probability of a topic given a word . We use Bayes rule to recover the topic distribution p ( w = i | z = k )  X  where p ( w ) is the normalizer of Q to obtain  X  Q w,  X  .
The geometric argument for finding the anchor words is one of the key contributions of Arora et al. (2012a) and is beyond the scope of this paper. The algorithms in Section 3 use the anchor selec-tion subroutine unchanged. The difference in our approach is in how we discover the anchor coeffi-cients C .
 From Anchors to Topics After we have the an-chor words, we need to find the coefficients that best reconstruct the data  X  Q (Equation 1). Arora et al. (2012a) chose the C that minimizes the KL divergence between  X  Q i,  X  and the reconstruction based on the anchor word X  X  conditional word vec-tors
The anchor method is fast, as it only de-pends on the size of the vocabulary once the co-occurrence statistics Q are obtained. However, it does not support rich priors for topic models, while MCMC (Griffiths and Steyvers, 2004) and varia-tional EM (Blei et al., 2003) methods can. This prevents models from using priors to guide the models to discover particular themes (Zhai et al., 2012), or to encourage sparsity in the models (Yao et al., 2009). In the rest of this paper, we correct this lacuna by adding regularization inspired by Bayesian priors to the anchor algorithm. In this section, we add regularizers to the anchor objective (Equation 3). In this section, we briefly review regularizers and then add two regularizers, inspired by Gaussian ( L 2 , Section 3.1) and Dirich-let priors (Beta, Section 3.2), to the anchor objec-tive function (Equation 3).

Regularization terms are ubiquitous. They typ-ically appear as an additional term in an opti-mization problem. Instead of optimizing a func-tion just of the data x and parameters  X  , f ( x, X  ) , one optimizes an objective function that includes a regularizer that is only a function of parame-ters: f ( w, X  ) + r (  X  ) . Regularizers are critical in staid methods like linear regression (Ng, 2004), in workhorse methods such as maximum entropy modeling (Dud  X   X k et al., 2004), and also in emerging fields such as deep learning (Wager et al., 2013).
In addition to being useful, regularization terms are appealing theoretically because they often corre-spond to probabilistic interpretations of parameters. For example, if we are seeking the MLE of a proba-bilistic model parameterized by  X  , p ( x |  X  ) , adding a regularization term r (  X  ) = to adding a Gaussian prior Table 2: The number of documents in the train, development, and test folds in our three datasets. and maximizing log probability of the posterior (ignoring constant terms) (Rennie, 2003). 3.1 L 2 Regularization The simplest form of regularization we can add is L 2 regularization. This is similar to assuming that probability of a word given a topic comes from a Gaussian distribution. While the distribution over topics is typically Dirichlet, Dirichlet distributions have been replaced by logistic normals in topic modeling applications (Blei and Lafferty, 2005) and for probabilistic grammars of language (Cohen and Smith, 2009).

Augmenting the anchor objective with an L 2 penalty yields where regularization weight  X  balances the impor-tance of a high-fidelity reconstruction against the regularization, which encourages the anchor coeffi-cients to be close to the vector  X  . When the mean vector  X  is zero, this encourages the topic coeffi-cients to be zero. In Section 4.3, we use a non-zero mean  X  to encode an informed prior to encourage topics to discover specific concepts. 3.2 Beta Regularization The more common prior for topic models is a Dirichlet prior (Minka, 2000). However, we cannot apply this directly because the optimization is done on a row-by-row basis of the anchor coefficient matrix C , optimizing C for a fixed word w for and all topics. If we want to model the probability of a word, it must be the probability of word w in a topic versus all other words.

Modeling this dichotomy (one versus all others in a topic) is possible. The constructive definition of the Dirichlet distribution (Sethuraman, 1994) states that if one has a V -dimensional multinomial  X   X  Dir (  X  1 ... X  V ) , then the marginal distribution of  X  w follows  X  w  X  Beta (  X  w , the tool we need to consider the distribution of a single word X  X  probability.

This requires including the topic matrix as part of the objective function. The topic matrix is a lin-ear transformation of the coefficient matrix (Equa-tion 2). The objective for beta regularization be-comes where  X  again balances reconstruction against the regularization. To ensure the tractability of this algorithm, we enforce a convex regularization func-tion, which requires that a &gt; 1 and b &gt; 1 . If we enforce a uniform prior X  E Beta and that the mode of the distribution is also 1 this gives us the following parametric form for a and b : for real x greater than zero. 3.3 Initialization and Convergence Equation 5 and Equation 6 are optimized using L -BFGS gradient optimization (Galassi et al., 2003). We initialize C randomly from Dir (  X  ) with  X  = mizing all V rows. The newly updated C replaces the old topic coefficients. We track how much the topic coefficients C change between two con-secutive iterations i and i + 1 and represent it as  X  C  X k C i +1  X  C i k 2 . We stop optimization when  X  C  X   X  . When  X  = 0 . 1 , the L 2 and unregularized anchor algorithm converges after a single iteration, while beta regularization typically converges after fewer than ten iterations (Figure 4). In this section, we measure the performance of our proposed regularized anchor word algorithms. We will refer to specific algorithms in bold. For example, the original anchor algorithm is an-chor . Our L 2 regularized variant is anchor-L 2 , and our beta regularized variant is anchor-beta . To provide conventional baselines, we also com-pare our methods against topic models from varia-tional inference (Blei et al., 2003, variational ) and MCMC (Griffiths and Steyvers, 2004; McCallum, 2002, MCMC ).

We apply these inference strategies on three di-verse corpora: scientific articles from the Neural Information Processing Society ( NIPS ), 2 Internet newsgroups postings ( 20 NEWS ), 3 and New York Times editorials (Sandhaus, 2008, NYT ). Statistics for the datasets are summarized in Table 2. We split each dataset into a training fold (70%), develop-ment fold (15%), and a test fold (15%): the training data are used to fit models; the development set are used to select parameters (anchor threshold M , doc-ument prior  X  , regularization weight  X  ); and final results are reported on the test fold.

We use two evaluation measures, held-out likeli-hood (Blei et al., 2003, HL ) and topic interpretabil-ity (Chang et al., 2009; Newman et al., 2010, TI ). Held-out likelihood measures how well the model can reconstruct held-out documents that the model has never seen before. This is the typical evaluation for probabilistic models. Topic interpretability is a more recent metric to capture how useful the topics can be to human users attempting to make sense of a large datasets.

Held-out likelihood cannot be computed with existing anchor algorithms, so we use the topic distributions learned from anchor as input to a ref-erence variational inference implementation (Blei et al., 2003) to compute HL . This requires an ad-ditional parameter, the Dirichlet prior  X  for the per-document distribution over topics. We select  X  using grid search on the development set.

To compute TI and evaluate topic coherence, we use normalized pairwise mutual informa-tion ( NPMI ) (Lau et al., 2014) over topics X  twenty most probable words. Topic coherence is com-puted against the NPMI of a reference corpus. For coherence evaluations, we use both intrinsic and extrinsic text collections to compute NPMI . Intrin-sic coherence ( TI -i) is computed on training and development data at development time and on train-ing and test data at test time. Extrinsic coherence (
TI -e) is computed from English Wikipedia articles, with disjoint halves (1.1 million pages each) for distinct development and testing TI -e evaluation.
HL Score TI X  X  Score shown) on development data. The performance on both HL and HL Score TI X  X  Score weight  X  becomes non-zero. 4.1 Grid Search for Parameters on Anchor Threshold A good anchor word must have a unique, specific context but also explain other words well. A word that appears only once will have a very specific cooccurence pattern but will explain other words X  coocurrence poorly be-cause the observations are so sparse. As discussed in Section 2, the anchor method uses document frequency M as a threshold to only consider words with robust counts.

Because all regularizations benefit equally from higher-quality anchor words, we use cross-validation to select the document frequency cut-off M using the unregularized anchor algorithm. Figure 1 shows the performance of anchor with different M on our three datasets with 20 topics for our two measures HL and TI -i.
 Regularization Weight Once we select a cutoff M for each combination of dataset, number of top-ics K and a evaluation measure, we select a reg-ularization weight  X  on the development set. Fig-ure 2 shows that beta regularization framework im-proves topic interpretability TI -i on all datasets and improved the held-out likelihood HL on 20 NEWS . The L 2 regularization also improves held-out like-lihood HL for the 20 NEWS corpus (Figure 2).
In the interests of space, we do not show the figures for selecting M and  X  using TI -e, which is similar to TI -i: anchor-beta improves TI -e score on all datasets, anchor-L 2 improves TI -e on 20 NEWS and NIPS with 20 topics and NYT with 40 topics. 4.2 Evaluating Regularization With document frequency M and regularization weight  X  selected from the development set, we compare the performance of those models on the test set. We also compare with standard implemen-tations of Latent Dirichlet Allocation: Blei X  X  LDAC ( variational ) and Mallet ( mcmc ). We run 100 iter-ations for LDAC and 5000 iterations for Mallet.
Each result is averaged over three random runs and appears in Figure 3. The highly-tuned, widely-used implementations uniformly have better held-out likelihood than anchor -based methods, but the much faster anchor methods are often comparable. Within anchor -based methods, L 2 -regularization offers comparable held-out likelihood as unregular-ized anchor , while anchor-beta often has better interpretability. Because of the mismatch between the specialized vocabulary of NIPS and the general-purpose language of Wikipedia, TI -e has a high variance. 4.3 Informed Regularization A frequent use of priors is to add information to a model. This is not possible with the existing an-chor method. An informed prior for topic models seeds a topic with words that describe a topic of in-terest. In a topic model, these seeds will serve as a  X  X agnet X , attracting similar words to the topic (Zhai et al., 2012).
 We can achieve a similar goal with anchor-L 2 . Instead of encouraging anchor coefficients to be zero in Equation 5, we can instead encourage word probabilities to close to an arbitrary mean  X  i,k . This vector can reflect expert knowledge.

One example of a source of expert knowledge is Linguistic Inquiry and Word Count (Pennebaker and Francis, 1999, LIWC ), a dictionary of key-words related to sixty-eight psychological concepts such as positive emotions , negative emotions , and death . For example, it associates  X  X xcessive, estate, money, cheap, expensive, living, profit, live, rich, income, poor, etc. X  for the concept materialism . We associate each anchor word with its closest LIWC category based on the cooccurrence matrix Q . This is computed by greedily finding the an-chor word that has the highest cooccurrence score for any LIWC category: we define the score of a category to anchor word w s ranges over words in this category; we compute the scores of all categories to all anchor words; then we find the highest score and assign the category to that anchor word; we greedily repeat this process until all anchor words have a category.

Given these associations, we create a goal mean  X  i,k . If there are L i anchor words associated with ated with anchor word w s We apply anchor-L 2 with informed priors on NYT with twenty topics and compared the topics against the original topics from anchor . Table 3 shows that the topic with anchor word  X  X oviet X , when combined with LIWC , draws in the new words  X  X ush X  and  X  X uclear X ; reflecting the threats of force during the cold war. For the topic with topic word  X  X rms X , when associated with the LIWC category with the terms  X  X gree X  and  X  X greement X , draws in  X  X linton X , who represented a more conciliatory foreign policy compared to his republican prede-cessors. Having shown that regularization can improve the anchor topic modeling algorithm, in this section we discuss why these regularizations can improve the model and the implications for practitioners. Efficiency Efficiency is a function of the number of iterations and the cost of each iteration. Both anchor and anchor-L 2 require a single iteration, although the latter X  X  iteration is slightly more ex-pensive. For beta , as described in Section 3.2, we update anchor coefficients C row by row, and then repeat the process over several iterations until it converges. However, it often converges within ten iterations (Figure 4) on all three datasets: this requires much fewer iterations than MCMC or vari-ational inference, and the iterations are less expen-sive. In addition, since we optimize each row C i,  X  independently, the algorithm can be easily paral-lelized.
 Sensitivity to Document Frequency While the original anchor is sensitive to the document fre-quency M (Figure 1), adding regularization makes this less critical. Both anchor-L 2 and anchor-beta are less sensitive to M than anchor .

To highlight this, we compare the topics of an-chor and anchor-beta when M = 100 . As Table 4 shows, the words  X  X rticle X ,  X  X rite X ,  X  X on X  and  X  X oe X  appear in most of anchor  X  X  topics. While anchor-L 2 also has some bad topics, it still can find reasonable topics, demonstrating anchor-beta  X  X  greater robustness to suboptimal M .
 L 2 (Sometimes) Improves Generalization As Figure 2 shows, anchor-L 2 sometimes improves held-out development likelihood for the smaller Figure 3: Comparing anchor-beta and anchor-L 2 against the original anchor and the traditional vari-alization. anchor-beta sometimes gives the best TI score and is consistently better than anchor . The 20 NEWS corpus. However, the  X  selected on devel-opment data does not always improve test set per-formance. This, in Figure 3, anchor-beta closely tracks anchor . Thus, L 2 regularization does not hurt generalization while imparting expressiveness and robustness to parameter settings.
 Beta Improves Interpretability Figure 3 shows that anchor-beta improves topic interpretability (
TI ) compared to unregularized anchor methods. In this section, we try to understand why.

We first compare the topics from the original anchor against anchor-beta to analyze the topics qualitatively. Table 5 shows that beta regulariza-tion promotes rarer words within a topic and de-motes common words. For example, in the topic about hockey with the anchor word game ,  X  X un X  and  X  X ood X  X  X mbiguous, polysemous words X  X n the unregularized topic are replaced by  X  X layoff X  Table 4: Topics from anchor and anchor-beta with M = 100 on 20 Figure 4: Convergence of anchor coefficient C for anchor-beta .  X  C is the difference of current C from the C at the previous iteration. C is converged within ten iterations for all three datasets. and  X  X rade X  in the regularized topic. These words are less ambiguous and more likely to make sense to a consumer of topic models.

Figure 5 shows why this happens. Compared to the unregularized topics from anchor , the beta regularized topic steals from the rich and creates a more uniform distribution. Thus, highly frequent words do not as easily climb to the top of the distri-bution, and the topics reflect topical, relevant words rather than globally frequent terms. A topic model is a popular tool for quickly get-ting the gist of large corpora. However, running such an analysis on these large corpora entail a substantial computational cost. While techniques such as anchor algorithms offer faster solutions, it comes at the cost of the expressive priors common in Bayesian formulations.

This paper introduces two different regulariza-tions that offer users more interpretable models and the ability to inject prior knowledge without sacrificing the speed and generalizability of the underlying approach. However, one sacrifice that this approach does make is the beautiful theoretical guarantees of previous work. An important piece of future work is a theoretical understanding of generalizability in extensible, regularized models.
Incorporating other regularizations could further improve performance or unlock new applications. Our regularizations do not explicitly encourage sparsity; applying other regularizations such as L 1 could encourage true sparsity (Tibshirani, 1994), and structured priors (Andrzejewski et al., 2009) could efficiently incorporate constraints on topic models.

These regularizations could improve spectral al-gorithms for latent variables models, improving the performance for other NLP tasks such as latent vari-able PCFG s (Cohen et al., 2013) and HMM s (Anand-kumar et al., 2012), combining the flexibility and robustness offered by priors with the speed and accuracy of new, scalable algorithms.
 We would like to thank the anonymous reviewers, Hal Daum  X  e III, Ke Wu, and Ke Zhai for their help-ful comments. This work was supported by NSF Grant IIS-1320538. Boyd-Graber is also supported by NSF Grant CCF-1018625. Any opinions, find-ings, conclusions, or recommendations expressed here are those of the authors and do not necessarily reflect the view of the sponsor. be unimportant, polysemous words common across topics. coherence.

