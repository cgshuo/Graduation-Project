 1. Introduction
The spatio-temporal traces of individuals can now be collected with GPS devices, GSM phones, RFID tag readers, and by many other similar means. Banks register time and location information of the financial transactions we perform using our
Collected spatio-temporal data could be used in many ways such as traffic management, geo-marketing and sometimes for and interesting patterns about how people move in the public space. On the other hand, collection of all these time and loca-tion pairs of individuals enables anyone, who observes the data, to reconstruct the movements (the trajectory) of others with a very high precision. There is a growing concern about this serious threat to privacy of individuals whose whereabouts are easily monitored and tracked. Legal and technical aspects of such threats were highlighted at a recent workshop on mobility, data mining, and privacy [17].

Considering the variety of possible applications, there is no doubt that the amount of spatio-temporal data being collected thing to do is to remove personally identifying information from the released data sets. However, this has been shown not to ability of rich background information makes the privacy issues even more complicated [20]. A safer approach would be to perturb the trajectories or apply transformations which preserve important properties of the data such as mutual distances [12]. However, there may still be privacy risks in such transformations. In this paper, we consider distance preserving data transformations on trajectories, and show that with background information such as a set of known trajectories and speed released set of mutual distances between a data set of trajectories, which contains the target trajectory, the attacker has some background information, such as the average speed or maximum speed of the trajectory, and some of the other trajec-tories in the data set. We propose a concrete algorithm which can reconstruct the target trajectory from this information.
Contributions of this work can be summarized as follows: (1) we demonstrate that trajectories can be reconstructed very precisely with very limited information using relatively simple methods. In particular we apply our method to two real-with 500 sample points by knowing its distance to only 60 known trajectories. This is in sharp contrast to the 1001 known distances which would be needed to solve the corresponding system of equations to find the unknown trajectory. (2) We propose a method which can reconstruct trajectories from a very wide range of continuous properties (cf. Section 4); the method of known distances is only a special case. Our method is optimal in the sense that it will eventually find a candidate which exhausts all the information available about the unknown trajectory. 2. Related work The research efforts on trajectory mining have been boosted by a recent EU funded research project called  X  X  X eographic
Privacy-aware Knowledge Discovery and Delivery X  (GeoPKDD) [5]. As the title of the project implies, privacy is an important aspect of GeoPKDD. In the context of GeoPKDD, many techniques were proposed to mine useful patterns from trajectories. pass through, and at which time intervals. Trajectories attracted other research groups too [10,11] .In [10], authors give a clustering algorithm which considers sub-trajectories. The main observation is that sub-parts of trajectories may follow interesting common patterns, while the trajectories as a whole may be very different from each other. In [11] authors give a method for finding  X  X  X ot-routes X  in a given road network, which can help officials in traffic management.
Previous work on spatio-temporal data privacy include anonymization in location-based services. Some of the recent work include [3,13] . However, they do not deal with trajectory data. Techniques for trajectory anonymization were recently tance preserving data transformations were identified [21], however spatio-temporal data was not addressed. The privacy risks in trajectory data was addressed in [20] where authors point out how parts of a trajectory could be used as quasi-iden-suppressing parts of the trajectories before they are published.

In all the algorithms mentioned above for trajectory mining, different properties of the trajectories are needed. Some methods only need the mutual distances between trajectories, some need the exact trajectories, and others only need to mation is enough to recover the movement behavior of an individual. In particular we demonstrate how an unknown tra-jectory can be almost entirely reconstructed from its distance to a few fixed trajectories. 3. Privacy in trajectory data
As more and more data mining techniques aimed at trajectory data are invented, researchers are forced to ask themselves complicated task. In this paper we do not intend to give any new definition of privacy, but limit our attention to the simple case where an outsider can identify a small area where an individual has been.

Consider a car insurance company, who gives discounts to clients who volunteer to install a GPS device in their cars, and the insurance company, this GPS data has a considerable value in other applications such as advertisement placement. The insurance company may sell  X  X  X nonymized X  versions of the dataset for profit, if they are convinced (and can convince their clients) that the anonymized data cannot be abused.

Though we do not intend to give a detailed study of possible abuses of trajectory data, it is clear that a dataset which enables an outsider (from the advertisement placement company) to identify a few points on a trajectory can be abused.
B from approximately 8 am to approximately 10 am and finally spends the rest of the day at location C. From this simple visiting the hospital at location B.

From the example above, we see that even relatively vague information about a trajectory is enough to reveal information which should be considered private. The attack presented in this paper is capable of approximating the movements of an individual, similar to the example above. 4. Trajectories and continuous properties
In their most general form trajectories are paths in space-time. In practice, however, trajectories are collected by moving objects with GPS devices, or other discrete sampling methods, and have to be stored in a format which is suitable for its in-tended use. There are many ways to represent and store a trajectory, but in this paper we focus on the intuitive and common approach of storing a trajectory as a polyline.
 A discrete trajectory is a polyline represented as a list of sample points:
We write T i to represent the i th sample-point  X  x i ; y of a trajectory T is:
In this case T i is the i th element of the vector (i.e. T road map. The full lines are the actual movements of the two objects, and the dots are the sampled locations which makes the data set. Due to measurement inaccuracy some of the sample points are not on the actual paths of the moving objects. In remove measurement inaccuracy are out of the scope of this paper.

Throughout this paper we assume that trajectories (1) are aligned some constant D t ). Most of the distance measures defined below are most meaningful when trajectories satisfy these two con-ditions. Algorithms for ensuring these conditions can be found in [7]. In consequence we discard the time component and rep-resent a trajectory as a list of  X  x ; y  X  coordinates (or a vector in R sampled at the same times, and have a constant sample rate of one time unit. After discarding the time component from the 1 : 5 ; 0 : 5  X  , and B  X  X  0 ; 0 : 5 ; 0 : 5 ; 0 : 25 ; 1 : 5 ; 0  X  .

A trajectory T can posses many properties which are of interest in different situations, such as maximum and average speed of a trajectory, closest distance to certain locations, duration of longest  X  X  X top X , or percentage of time that T moves  X  X  X n road X . In this work we show how any property of T which can be expressed as a continuously differentiable function erties of T . In this paper, we focus on known distances and known maximum and average speed. We will further explain these properties in the following subsections. 4.1. Known distances The first property of trajectories, which we consider, is the distance from an unknown trajectory T to a fixed trajectory,
T differentiable property of T ; e.g. D T 0  X  T  X  X  d  X  T 0 ; T  X  is continuously differentiable.

A wide range of distance measures have been used for trajectories. Some commonly used measures of distance between two trajectories used in the literature [15] are:
Euclidean distance
P-norm distance
Average sample distance
Average p-norm distance (More general form of average sample distance)
Variance distance Area distance d A  X  T ; T 0 X  , which is the area of the region enclosed between the two trajectories [15]. With the exception of p -norm distance for odd p , all these distance measures are continuously differentiable.
Continuing the example in Fig. 1 we compute: 4.2. Trajectory speed
Another property of trajectories, which is natural to consider, is the maximum or average speed at which the moving ob-we can only approximate the average and maximum speed: where D t is the known, constant sample rate (which we have discarded from the description of the trajectory itself). Note that the average/max speed in this case is approximated by the average/max speed of each segment of the discretized tra-jectory, where segment i is the line segment  X  T i ; T i  X  1
T is approximately  X  1  X  0 : 7  X  = 2  X  0 : 85.

The average speed is easily seen to be continuously differentiable. To compute the derivative of the maxSpeed, first note that the derivative of the maximum function can be approximated as: where argmax i f x 0 ; ... ; x n 1 g X f i 1 ... ; i l g is the set of indices such that x element can have the maximum value).

When there is more than one largest argument to the max function, the partial derivatives with respect to those argu-use the convention that the partial derivatives of the largest arguments are 1 in those arguments.
Let S be the set of indices of the first sample points on the fastest segments of the trajectory: S  X  argmax est segments ( S 0 is the set of x -coordinates on the first sample points, S necker delta: d i ; S , which is 1 if i 2 S , and 0 otherwise. The partial derivatives of the maximum speed is:
This partial derivative is not continuous. However, as we argue in Section 8, it is still suitable for the reconstruction of trajectories. 5. Reconstructing trajectories
In this paper, we consider how a malicious person can find an unknown trajectory, X , with as little information as pos-travels at a speed of more than 200 km/h. The information which the malicious person has about a trajectory can be divided into two kinds: (1) data which has been released into the public domain by a data holder (in some anonymized format), and (2) background information which the malicious person already had about the trajectory. In this paper, the only kind of re-leased information we address are the mutual distances between trajectories. This data may be released in order for a third it is well-known.

With a sufficient number of known properties of X , the trajectory can be fully reconstructed. If, for example, 2 n linear properties of X are known, we have a system of 2 n linear equations. Solving these 2 n equations gives us the exact unknown
When the candidate can only be restricted to a subspace, it can be arbitrarily far away from X . If the known properties are non-linear, finding a solution to the corresponding equations, even if enough properties are known, may become computa-tionally infeasible.

As an example of known properties, consider m known trajectories, T d , where for unknown trajectory X . Our task is to find an approximation X 0 which minimizes the distance k X X 0 k by hyper-lateration, a generalization of tri-lateration. By squaring the known distances we obtain a system of n quadratic we obtain n 1 linear equations: proach is unsatisfactory since we need to know at least  X  2 n  X  1  X  distances,
The discussion above reveals a need to find a method which can approximate the unknown trajectory with considerably fewer known properties than coordinates. However, the best we can hope for is to find a candidate trajectory which has the driving at an average speed of 50 km/h in Athens, then any X 0 which moves along the roads of Athens at 50 km/h is a possible solution. We thus want to minimize the difference between the given properties of X , and the corresponding properties of
X where P i are the properties which are known about the target trajectory (in other words: P ferentiable as long as the properties are differentiable.

A natural way to solve this problem is to see it as an optimization problem. By squaring the differences in Eq. (8) the derivative in a point is the  X  X  X istance X  to a solution. This trick makes the gradient descent optimization algorithm converge fast when it is far from a solution, and slow when it is close to a solution, making the algorithm more robust. Gradient des-cent is the algorithm used in our method described in detail in Section 8. 6. Erroneous knowledge
The information available to the attacker about the unknown trajectory may not always be precise  X  it can be subject to noise. This noise can be either a deliberate attempt from the data holder to anonymize the released data, or simply errors in the background knowledge of the attacker.

It is not in the scope of this paper to evaluate the effectiveness of anonymization techniques based on data perturbation, such as the techniques presented in [2]. Indeed, several other papers have treated this topic, showing that data perturbation errors in the information available to the attacker.

It is important to note the difference between noise in the original measurement of trajectories, and noise which is added before data is released. There is always an unavoidable amount of noise in the measurement of a trajectory. GPS devices, for instance, can only measure location to a certain accuracy. In Fig. 1 noise in the measurement process placed some of the sam-however, does not introduce any inconsistencies in the data stored in the database, it only reduces the accuracy of the data.
Noise can also be added post-storage when data is released from the database in an attempt to prevent breaching the privacy of individuals. As mentioned above, data perturbation is a well-studied field in data privacy. Contrary to pre-storage noise, post-storage noise may give a slightly inconsistent view of the data in the database. As an example of post-storage noise, from Fig. 1 : The Euclidean distance between the two stored trajectories A and B is approximately 0.9. When the distance data is released, however, the owner of the data may add a deliberate error of 0.1 and say that the distance is 1. irrelevant, so we concentrate on the effects of post-storage noise.

We consider the case of known distances, where the attacker knows m trajectories, T distances: where i are noise terms .

When the equations known to the attacker have errors as above, reconstruction based on solving the system of equations solution is likely to be close to the solution of the erroneous equations. In Section 9 we show that our method can handle additive noise which follows a Gaussian distribution up to a certain standard deviation. While we only demonstrate that our attack can handle additive Gaussian noise, we are aware that there are many other models of noise which an attacker may face. However, a full study of noise is out of the scope of this work. 7. Measuring success
Before describing our technique for finding an unknown trajectory, a discussion about the measure of success of such reconstruction algorithm is in place. In essence the success depends on how well the candidate represents the target.
In [8] an unknown target trajectory was reconstructed from knowledge of the distance from the target trajectory to each trajectory in a set of known trajectories. To evaluate the success of the reconstruction the following success-rate was used: closest known trajectory, and negative if it performs worse than just returning the closest known trajectory. This measure has a number of shortcomings, which makes it difficult to compare the success of different algorithms, or even the same methods which do not use the distance to known trajectories. Furthermore, it is very difficult to obtain a high success-rate the quality of the reconstruction is more sensitive to noise than if the same target trajectory only has a low resolution.
In this paper, we overcome some of the shortcomings of the old success measure by defining a new success-rate SR  X  X 0  X  of a candidate trajectory. The success-rate should satisfy the following properties: SR  X  X 0  X 2 X  0 ; 1 .
 SR  X  X  X  X  1.
 Depend only on the target and candidate trajectories.
 Be independent of the magnitude of coordinates.

Intuitively the quality of a candidate trajectory depends on how far away the candidate trajectory is from the target tra-jectory at any given time. In our case, since we assume that trajectories are aligned, the average distance of the candidate trajectory to the target trajectory over time is the average sample distance:
The average sample distance alone, however, is not a good measure of success, since it depends highly on the magnitude of the coordinates. To factor out this dependency on the magnitude of the coordinates, we divide the average sample distance with the total length of the target trajectory, which can be computed as: fraction as follows: new success-rate satisfies the criteria listed above: SR  X  T  X  X  e a ASD tends to e 1  X  0.
 As an example, suppose that trajectory B from Fig. 1 is an attempted reconstruction of trajectory A. The success-rate of B is the trajectory two streets over; ((0,2), (1,2), (1.5,2)), has success-rate 0.34.

More research in a proper way to measure how well a candidate trajectory represents a target trajectory is needed. We are aware that the success measure defined above is not appropriate in all situations. Trajectories may be laying on top of each other, thus giving the visual impression of a perfect match, but may be very far apart in time: Even though all sample thermore, the context of a trajectory has a great influence on how well we perceive the reconstruction to be. A very coarse reconstruction of a trajectory which moves in a rural area with only few roads may be better than even a very accurate reconstruction of a trajectory moving in a urban area with very small and close roads. 8. Our reconstruction method We use the steepest descent (gradient descent search) algorithm to find a candidate with minimum error. The error-function (8) has value 0 exactly when the candidate trajectory has the same properties as the known trajectory
T minimum. There may, however, be more than one global minimum, as well as several local minima; but any zero of the er-ror-function exhausts the knowledge we can possibly have about the unknown trajectory, given the known properties. Recall that the gradient descent algorithm finds a zero of a positive and continuously differentiable function E as follows: 1. Choose a random point, x 0 , in the domain of E . 2. Iteratively define x i  X  1  X  x i c r E  X  x i  X  , for some step size c &gt; 0. 3. When x i  X  1  X  x i  X  r E  X  x i  X  X  0  X  a (local) minimum has been reached. If E  X  x negative), and we stop. Otherwise, we go back to step 2.
 should neither underestimate nor overestimate the step size. If the step size is too small, the attack will converge very ing this kind of optimization problem. However, the aim of this paper is to demonstrate potential dangers in data disclosure. A formal analysis of the efficiency of the attack is out of the scope of this work.

The gradient, r E  X  X 0  X  , depends on the differentiable properties P If all properties are continuously differentiable, then the gradient is a continuous function in the candidate trajectory.
Recall that not all partial derivatives of the maximum speed property are continuous. The discontinuity happens when more than one segment are equally fast, and are the fastest segments. However, since we defined the derivative to be one in this case, the gradient descent will still change the speed of these segments until they satisfy the known maximal speed.

Even though an attacker cannot know the final success-rate of his attack, there are situations where he can give a lower bound in the situation where he knows the average sample distance to a set of known trajectories.

Theorem 1. Let T 1 ; ... ; T m be known trajectories, and let d X. Then, for any trajectory X 0 with E  X  X 0  X  X  0 the success-rate is: where d max  X  max i  X  d i  X  is the largest given distance, and E is the error-function defined in Eq. (8). While the attacker does not know the length of X , he may be able to estimate it from his background knowledge.
Proof. We first observe that since E is a sum of the non-negative terms 1 = 2  X  d d  X  T i ; X 0  X  X  d i .
 Now, note that for all k 2f 1 ; ... ; m g Inserting this in the definition of the success-rate gives us:
Since Eq. (16) is true for all d k , it is true for d max 9. Experimental results
To validate our reconstruction method, we have designed three different tests. These tests have been applied them on two datasets of real-world GPS data. In the first test, we let the reconstruction method run for many iterations to see how the success-rate evolves over time. The second test consists of several executions of the reconstruction algorithm on the same dataset, but with a varying number of known trajectories and background information. The aim of the second test is to verify Gaussian noise to the released distance data to see how fast the success-rate diminishes in the face of errors.
The first dataset contains trajectories of school busses in Athens [4,18] . This dataset contains 145 trajectories each with
The sampling frequency of this dataset is so high that consecutive sample points are very close; often three or more consec-will benefit from. This dataset is chosen because of the high redundancy, which enables us to test our reconstruction algo-rithm in a near best-case scenario.

The second dataset contains trajectories of private cars in Milan [5]. The dataset contains 135 trajectories recorded with sample points at irregular intervals over a period of time of one week. The density of sample points of the Milan dataset is lower than the dataset from Athens, giving a much lower redundancy than in the Milan data set. Even though the trajectories in the Milan dataset are not aligned, for the purpose of these tests, we assume that they are. This assumptions only means
The Milan dataset is much less redundant than the Athens dataset, and is chosen to test our reconstruction algorithm in a scenario which is much more realistic (and relevant) than the Athens dataset.

For the purpose of testing the reconstruction method described in Section 8 we implemented a limited version. In the implementation the step-size c is set to one, and the implementation does not restart if a local maxima, or saddle point we report the success-rate as defined in Eq. (13). We have chosen the smoothness parameter a  X  20 based on visual impres-sion from several tests.

Even though efficiency is not a primary concern in this work, we remark that it takes approximately 8 min to run the reconstruction method with 50 known trajectories from the Athens dataset for 60.000 iterations on a 1.7 GHz laptop. 9.1. Success-rate over time
In the first test, we run the reconstruction method on the Athens dataset for one million iterations to see how the success-rate evolves over time. Fig. 2 shows the convergence speed of our reconstruction method. The success-rate is an average va-lue obtained from five runs of the reconstruction algorithm on the Athens dataset with 50 known trajectories, where the target trajectory is selected at random in each of the five runs. The x -axis shows the number of iterations in log-scale.
Fig. 3 shows the evolution of candidates in one experiment with the Athens dataset and one with the Milan dataset. The test uses 60 known trajectories from the Athens dataset, and 90 known trajectories from the Milan dataset. Notice that a
With a success-rate of 0.85 it is possible to identify some, but not all, streets. 9.2. Distance measures and background information
In the second test, we fix the number of iterations used in the reconstruction to 60.000, and measure the success-rate as a function of the information available to the attacker. We run the reconstruction with a different number of known trajecto-ries, ranging from 10 to 140. We also run the reconstruction both with and without background information about average and maximum speed in the dataset. And finally we run the reconstruction with two different distance measures: Euclidean distance, and average sample distance.

Fig. 4 shows the success-rate attainable for different numbers of known trajectories in the Athens dataset. Each sample is dom in each test. The solid line shows the success-rate of the attack, when the attacker only uses the Euclidean distances between the target and the known trajectories as the continuously differentiable properties. The dashed line shows the suc-cess-rate, when the attacker assumes that the target trajectory moves with an average and maximum speed similar to the average and maximum speed of his known trajectories (see Section 4.2). The graph shows that for the case of the Athens dataset, using knowledge about the average speed does not give extra success to the attack. However, Fig. 5 shows the same experiment for the Milan dataset, and here it is clear that, for a low number of known trajectories, using knowledge about the average speed gives a success-rate up to 0.05 higher (for 20 X 40 known trajectories). From the result, we see that simple background information, such as average and maximum speed, improves the accuracy of the reconstruction when the tra-jectory data has low redundancy (as in the Milan dataset), or when an insufficient number of known trajectories are avail-able. However, for trajectory data which has high redundancy, the impact of simple background information is not significant. We have only tested speed information, but other kinds of background information may give a higher impact.
Fig. 6 shows the success-rate attainable for different numbers of known trajectories in the Athens dataset when the at-tacker knows the average sample distance to his known trajectories. Each sample is the average success-rate of 20 tests each running for 60.000 iterations. Both target and known trajectories are chosen at random in each test. Fig. 7 shows the same ean distance is stronger than knowing the mutual average sample distances. 9.3. Noise
Fig. 8 shows the success-rate attainable in the face of errors in the known distances. Independent and identically distrib-uted Gaussian noise with a mean value of 0 has been added to each distance known to the attacker. The Gaussian x -axis of the figure shows the deviation of the noise as a fraction of the average value of the distances. This means that for x  X  1 approximately 32% of the distances are subject to noise with the same magnitude as the distance itself. 10. Conclusion
Privacy risks in trajectory data publishing are high due to rich sources of background information. In this paper, we con-sider distance preserving data transformations, and assume that the mutual distances of trajectories are released rather than information such as known samples and speed limits. We use the speed limit as background information, but the attack model we propose is general enough so that any kind of background information about trajectories with continuous prop-erties could be the input. Our method is optimal in the sense that it will eventually find a candidate which exhausts all the information available about the unknown trajectory.

We implemented the proposed methods on two real data sets. One data set consists of routes of school busses in Athens of cars are definitely less predictable since there are many routes that they can follow. Experiments performed on these real data sets show that unknown private trajectories with 1096 sample points can be reconstructed with an expected success-rate of 0.8 by knowing the distance to only 50 known trajectories. Reconstructing the trajectory perfectly with  X  X  X ri-latera-tion X  would require 2193 known trajectories.
 Acknowledgement We would like to thank the anonymous reviewers for valuable comments and suggestions.

References
