 Recommender systems and search engines in e-commerce sites help consumers locate products to purchase. Although they have similar goals, they are usually developed and used separately in an e-co mmerce site. In the research community, they are also studied as two separate problems.

Traditional recommendation approaches, including collaborative filtering and content-based filtering models, learn a user X  X  long-term preferences from the user X  X  purchase or rating history. They work well in domains such as movie and music recommendations. Yet their effect iveness in the e-commerce domain is limited [3] since the high data sparsity is a serious problem. More importantly, a consumer often makes purchase decisions based on various short-term or contex-tual reasons that are unknown to the e-commerce system. It is extremely chal-lenging for recommender systems to make prediction under this circumstance. Fortunately an e-commerce website is not limited to the user purchase history. This is especially true for a search session, in which a user has issued one or more queries before she makes a purchas e decision. These queries provide much information about the consumer X  X  current purchase intention, and could benefit the recommender system if used appropriately. On the other hand, a typical e-commerce search engine focuses on th e short-term need of a user and returns products that match the consumer X  X  current queries. The retrieval ranking is usually based on the similarity between the product and the queries. However, different users have different preferences such as brand loyalty and so on. A con-sumer X  X  prior purchase history indicates her general purchase preferences and characteristics, and could benefit the search engine if used appropriately.
In this work, we intend to design a unified recommendation and search system to capture both the long-term pre ferences and short-term needs of a user. To do so, the system incorporates the user X  X  purchase history and her search information. We can roughly brea k down different pieces of information into three groups: the user X  X  history-related information, the query-related infor-mation and the product X  X  marketing-related information. We can use different regression model (multinomial logistic regression, gradient boosting tree (GBT), etc.) to integrate all three groups of information mentioned above. In order to better understand and explain the user X  X  purchase intention, we propose a new unified model that jointly models a user X  X  unobservable categorical choice, pur-chase state (repurchase, new purchase, or variety seeking) and product choice. The new model provides more insights about a user X  X  purchase intention and decision process. We compare our proposed models with a variety of baselines on an e-commerce dataset collected from shop.com. The experimental results demonstrate the value of a unified recommendation and search system with a better prediction power.

The major contributions of this work include the following:  X  Demonstrate the value of a unified recommendation and search system  X  Propose and evaluate three unified modeling approaches in the paper. The  X  Compare the unified models with a variety of recommendation and search Research on recommender systems puts much effort on understanding and mod-eling the user X  X  long-term preferences. The algorithms powering a recommender system could be simple lookups, or more complex solutions such as content-based filtering, collaborative filtering, or hybrid algorithms. Recommendation in the e-commerce domain has received muc h attention. Several methods have been studied, including item-based filtering algorithms [14], MDP-based methods [13], utility theory-based methods [15] and so on. The work presented in this paper can be viewed as recommendation augmented with search queries.

Search engine is a major research focus of the information retrieval commu-nity. In information retrieval field, the state-of-the-art learning algorithms are based on gradient boosting trees [5]. Although search engines in e-commerce are widely used, the research is very lim ited. Guo and Agichtein [6] presented search models to capture a user X  X  fine-grained interaction with the search results. Another recent work by Li et al. [9] st udied the problem of using recommender models to enhance the basic search performance with the linear sum of two models X  results. The work presented i n this paper can be viewed as personal-ized search with long-term u ser history. Besides, we analyze the user X  X  behavior intention in more details by designing a model with different user states, and learning state-dependent ranking models. 3.1 Problem Definition If a user issues one or more queries before she purchases some products, we call the user session a search session . A search session may contain one or more orders. This paper focuses on generatin g a good recommendation list for a user in a search session. After a user issues on e query and before she makes a purchase, our system generates a ranked recommenda tion list and presents it to the user to choose from. In this paper, the following notations are used:  X  u : the index of user.  X  i or j : the index of product.  X  c : the index of product X  X  category. Examples of categories are  X  X igital cam- X  t : time. Many features are dependent on the time t . For example, the simi- X  Q : the user X  X  current query/queries at time t . It contains all queries issued  X  X  u , i , t : the feature vector of the candidate product i for user u at time t .It  X  y u,t :user u  X  X  purchase decision at time t .If y u,t = i , it indicates that user u 4.1 Information for the Unified Model On the high level, we classify all available information of the unified system into three groups: x u , i , t = { x H , x Q , x P } [User X  X  History-related Information x H ] The first type of information reflects the user X  X  general characteristics in the current session.The second type of information captures the user X  X  genera l characteristics in each candidate cat-egory c . For instance, a user might be a loyal consumer in the  X  X ood X  category yet not in the  X  X lothing X  category. The third type of information captures the user X  X  interaction with each candidate product i . [Query/Search-related Information x Q ] This group of features is entirely based on the user X  X  queries Q . The queries issued before purchasing are highly related to the user X  X  purchase intention in that session. [Product Marketing-related Information x P ] This group of features contains the product X  X  marketing-related information, including the product X  X  category, popularity, price, and the corresponding category X  X  popularity, the re-purchase tendency of the product/category and so on. 4.2 Basic Learning Model 1: Multinomial Logistic Regression A straightforward unified approach is to use a learning algorithm to predict the multinomial logistic regression to model the probability of user u purchasing product i at time t as follows: where w is the model parameter to be learned from the training data. 4.3 Basic Learning Model 2: Gradient Boosted Tree An alternative model to combine all features is using Gradient Boosted Trees . This model has been proven to be very successful in the web search community. Most of the top performing algorithms in the Learning To Rank Challenge 1 are variations of GBT [2]. We use it as a unified model to solve a two-class classification problem: predicting whether a user will purchase a product or not. The gradient tree boosting learns a weighted additive model of simple trees from the labeled data. It is a very general and powerful machine learning algorithm that performs well on learning-to-rank tasks.

Given users X  purchase history, we can generate the training data set ( x u , i , t , r ), where x u , i , t contains all information in Section 4.1 and r = 1 if the user purchases the product i . The learned GBT is used to predict the purchase likelihood for each product and all products are ranked accordingly. 4.4 Model with Categorical Choice and Purchase State Marketing researchers found that a user X  X  purchase state can be classified into the repeated purchase, the variety-seeking purchase and the new purchase [7,10,1]. In a repurchase state, the user is more likely to stick to her favorite products. In a variety-seeking state, the user would consider new options in the category that she purchased before. In a new purchase state, the user would purchase some new products in the category that she did not purchase before. Understanding these purchase intentions will help better design recommendation, marketing or advertising strategy. Before a user mak es a purchase, e-commerce websites don X  X  observe the user X  X  categorical choice or purchase state a priori. To model this, we introduce two random variables into our system: a consumer u  X  X  categorical choice c u,t and the purchase state s u,t at time t .

We use the following multinomial logistic regression function to predict a user X  X  categorical choice c u,t .
 where  X  k contains all products in category k and  X  all contains all products.
Depending on the categorical choice c u,t , we can predict the consumer X  X  pur-chase state s u,t , which can take three possible values: repurchase, variety-seeking or new purchase state. If category c u,t was never purchased by u before, the pur-chase state is always a new purchase (i.e. s u,t = 0). Otherwise, the purchase state s u,t could either be repurchase s u,t = 1 or variety-seeking purchase s u,t = In the second case, the state can be estimated based on the user X  X  history and the user X  X  categorical choice, and we use the following standard binomial logistic regression to model P ( s u,t | c u,t ): Given that a user is in the purchase state s u,t and would choose from category c u,t , we model how she decides which product to purchase at time t using a multinomial logistic regression. The probability of product choice y u,t depends on the categorical choice, the purchase state, and all other features as follows: where I  X  is an indicator function. I  X  =1if  X  is true, otherwise 0.  X  s,c,u,t is a set of all products that match the category c u,t and purchase state s u,t at time t . Depending on the value of s u,t , the model parameter w s u , t is either w 1 , w  X  1 or w 0 . By having different w s parameters, this model learns state-dependent multinomial logistic regression function for each purchase state.

The parameters we need to estimates are  X  =(  X  1 , X  2 ,w 1 ,w 0 ,w  X  1 ). Each purchase decision/action of one product can be treated as a training/testing data point. Assuming the prior distribution of each model parameter is a Gaussian centered on zero, the optimal parameters can be learned from the training data using the maximum a posteriori probability (MAP) estimation: To use the model for recommendation, we c an estimate the probabilistic distri-bution of y u,t by summing over all possible values of the unobservable state s u,t and categorical choice c u,t . P ( y u,t = j )= c can rank products based on the purchase probability P ( y u,t = j ). 5.1 Shop.com Dataset We create an evaluation dataset based on the purchase record that was collected from 2004-01 to 2009-03 on an e-commerce website (shop.com). The Apache log that includes users X  search history is collected from 2007-06 to 2008-11. In the entire dataset, there are 124,813 products, 244,226 users, 296,145 unique orders, i.e. (user, order time) and 341,598 unique purchases, i.e. (user, product). There are 378 secondary-level categories for all products in total. For sessions with the Apache log information, the first 80% is used as the training data to calculate feature values, the following 10% is used as the training data to build models and the last 10% is used for testing. Sessions with no Apache log are also used as the training data to calculate feature values. For the unified model, we select top k % products( k =0 . 01 in our experiment) in each basic recommender solution and search solution X  X  own ranked list to put into the ranking candidate pool. In addition, products that the user purchased before the order time are also added into the pool. The unified model learns the ranking function from the training data and ranks all products in the pool in the testing step. 5.2 Algorithms to be Compared Our experiments compare the followi ng three groups of system solutions: [Basic Recommendation Solutions] We implement a collaborative filter-ing model, a content-based filtering model , and two variations of a hybrid filtering model. PureSVD [4] is a representative collaborative filtering model with a de-cent performance on standard datasets. ContentRec is a content-based filtering model. It estimates the score of each product as its total similarity to the user X  X  previous purchase(s). GBT.Rec and GBT.Rec.P are variations of a hybrid filter-ing model. GBT.Rec use Gradient Boosting Tree(GB T) [5] to integrate all user X  X  history-related features x Hp that are generated from the user X  X  prior purchase history. GBT.Rec.P further integrates the product X  X  marketing-related informa-tion to GBT.Rec . [Basic Search Solutions] For basic search-based solutions, we implement three methods. The first one is the well-known BM25 ranking algorithm which uses the most recent query and all terms of the candidate product to calcu-late a relevance score. The second one is GBT.Search which integrates features of x Q . The third one is GBT.Search.P which further integrates the product X  X  marketing-related features x P . [Unified Solutions] We implemented and compared three unified models in this paper. Multi.U is to use the multinomial regression model in Section 4.2 to combine all features. GBT.U is to use the gradient boosting tree algorithm in Section 4.3. State.U is to use the model in Section 4.4. It incorporates the consumer X  X  categorical choice and purchase state. We focus on evaluating the ability of unified models in incorporating the user history related features x H with other search/product related feat ures. Thus we synthesize features of x Q and x P into a single feature: the output of the GBT.Search.P algorithm. 5.3 Evaluation Metric In a typical e-commerce website, the ra nking of all recommendations is more important than rating predictions. Instead of using some common rating predic-tion accuracy measures, we evaluate all algorithms in the context of a ranking task [4]. Each product purchasing order corresponds to a testing point, which is uniquely identified by a (user, order time) pair. Let S purchased be the set that contains all products in this order. We rank each product in the candidate pool according to its predicted score for user u at time t ,where t is right before an order time. Let S K,recommended be the set that contains top K products. Con-version rate is used as the metric. If a user purchases at least one product from the recommended top K list, we consider that the user converts from a browser into a buyer. Thus conversion rate @ K =1if S purchased and S K,recommended has overlap product(s), otherwise conversion rate @ K =0. 6.1 Overall Performance Analysis The basic recommendation solutions, the basic search solutions, and the uni-fied solutions are compared for user search sessions with at least one query and prior purchase (Figure 1). The recommendation solutions without integrating the query-related information are th e least effective. On the other hand, the basic search solutions are more effective. After integrating a user X  X  prior pur-chase/query history and her current quer y/queries, unified solutions are better. Based on the paired two-tailed t-test, the basic unified model Multi.U is better than the best search solution( GBT.Search.P ) and statistically significantly bet-ter than the best recommendation solution( GBT.Rec.P ). GBT.U and State.U are statistically significantly better than the best recommendation solution, the best search solution and the basic unified model Multi.U . There is no significant difference between GBT.U and State.U in all top 5 positions.

Why does the traditional recommender system perform not so well in the e-commerce system? We compare the de nsity of this dataset with the other commonly used datasets in the research of recommender system. The shop.com dataset is significantly more sparse and the huge sparsity leads to the poor performance of the traditional recommender system. This serious data sparsity issue also exists in other e-commerce web sites [3]. In a search session with the query information available, it is essential to incorporate the information into a unified recommender and search system. 6.2 Performance of Different Purchase Types We further examine the performance of several algorithms on different purchase types: repurchase orders(14.03% of all orders), new purchase orders(73.08% of all orders) and variety-seeking orders(20.54% of all orders). The algorithms to com-pare include the best recommendation solution ( GBT.Rec.P ), the best search solution ( GBT.Search.P ) and three unified models. Conversion rate for top 5 recommendations is shown in Figure 2. Here are some observations: 1) The rec-ommendation solution performs better than the search solution for repurchases, but worse for new purchases and variety-seeking purchases. 2) Unified models perform significantly better than the recommendation solution in new purchase and variety-seeking orders. The search q ueries in the current session largely re-flect the consumer X  X  short-term purchase intention. Without a user X  X  query, it is hard for the recommender system to learn the consumer purchase intention purely from her prior purchase history. 3) Unified models perform significantly better than the best search solution ( GBT.Search.P ) in repurchase orders, but worse in new purchase and variety-seeking orders. The unified models try to integrate the consumer X  X  prior history at the cost of higher model complexity. Improving the performance of repurchase orders but hurting the performance of the other two is a trade-off for the unified model. All three unified models are trained to optimize the overall performance, not in a specific purchase type. 6.3 User States in the New Model Although two unified models GBT.U and State.U perform similarly to each other, the new model State.U has its own contribution. It explicitly models a user X  X  purchase state and may tell us more about the user intention. Explicit predictions of the categorical choice and purchase state allow great opportunities for e-commerce sites to implement various marketing strategies. Here are some potential use cases for each purchase state: 1) Marketers could provide related display ads to consumers in the repurchase state. Marketing research indicates that the advertising may impact high loyalty consumer segments while have no impact on low loyalty consumer segmen ts [12]. 2) Marketers could implement different promotion frequencies for prominent brands and less prominent brands for variety-seeking consumers [8]. 3) If a consumer is likely to purchase in a new category, marketers can better categorize the recommendation list which would potentially increase the user X  X  satisfaction with their choices [11]. Instead of building a recommendation syst em and a search engine separately, we incorporate the user X  X  prior purchases and queries into a unified model for e-commerce websites. We propose to use three unified models: multinomial re-gression, gradient boosting tree algorithm, and a new model with user states. Experimental results on shop.com dataset show that the unified models perform better than the basic search or recommendation models.
 Acknowledgments. We would like to thank shop.com for sharing the data. This work was funded by National Sci ence Foundation II S-0953908 and CCF-1101741. Any opinions, findings, conclusions or recommendations expressed in this paper are the authors, and do not necessarily reflect those of the sponsors.
