 1. Introduction
This paper presents an overview of the research landscape in the automated construction of domain models from text collections. The aim of the paper is to facilitate the general understanding of domain models over multiple disciplines. In-stead of giving a systematic review, we aim to illustrate current work and recent trends in three distinct communities in which domain modelling has for decades been a line of research, namely artificial intelligence (and more recently semantic web), natural language processing and information retrieval. There has traditionally been little overlap between these com-munities, but increasingly there are problem domains, such as biomedical information retrieval and text mining, that make use of hybrid approaches and techniques developed by all these communities.

Domain modelling can generally be defined as the process of capturing and structuring knowledge embedded within a selected domain (for example, a collection of documents, a community, an area of interest). Domain models can be realised in many ways, for example, as an organisation of documents into a classification schema, as a linked network of information objects, e.g., documents or concepts, as a relational database, and as a hierarchical or partially ordered graph comprising do-main-relevant entities as nodes. We will focus on the most general formulation of a domain model, described as a selection of concepts (usually terms) judged to be salient within a given collection (whether the collection be a single document, an entire document collection, or a collection of other textual data underlying a domain) and/or relations between these concepts.  X 
Domain models have been developed in a variety of research disciplines and for various different reasons. As a result, numerous (sometimes synonymous) terms have emerged which are all used to refer to the concept of a domain model, such as: Semantic Network, Ontology, Concept Map, Conceptual Graph, Term Association Graph, Taxonomy , etc. While these names have been created to convey slightly different notions in the literature, they often overlap in their usages and are employed to refer to an underlying homomorphic structure, characterised by the general formulation of selected vocabulary and rela-tions between concepts (usually terms) in the vocabulary. Note that the notion of  X  X  X oncept X  X  varies and there is no consensus across different communities. It is beyond the scope of this paper to go deep into this issue, and we will not adopt any spe-cific definition of  X  X  X oncept X  X . Instead we will use it in an abstract sense.

Domain modelling has long been a key research area in artificial intelligence (AI) , in particular in the field of knowledge representation (KR) (for example, Quillian, 1967; Woods, 1975 ). Cyc, a large-scale knowledge representation project aimed at conceptually capturing Common Sense Knowledge , goes back to 1984 and the work on this project is still ongoing, for exam-ingful representation of the world, but also to facilitate reasoning and inference. The development of domain models further evolved with the emergence of the semantic web (SW) , and as part of the ongoing research in information retrieval (IR) and nat-ural language processing (NLP) applications. Fig. 1 illustrates a number of application areas where domain modelling is being employed in these three major research disciplines, i.e. AI/SW, IR and NLP. A more detailed discussion will be given in Section 2 Some of the differences and similarities in the various approaches can be illustrated through the example shown in Fig. 2 .
This provides a small snapshot of a domain model that has been built from a text collection. As a simple term association graph/network, it shows the links between different terms that are in some way related but the relations between the terms are not formally specified. If, however, the nodes in the model were treated as concepts and the specific types of relations between these concepts were identified, this model could be used to develop Conceptual Graphs ,a Semantic Network or part of an Ontology . For example, with reference to the Cyc project, in OpenCyc the concept,  X  X  X ozart X  X  is of type Individual . This concept includes a number of aliases referring to the same individual ( X  X  X olfgang A. Mozart X  X  and  X  X  X olfgang Amadeus Mo-tions, such as the information that Mozart composed the opera  X  X  X on Giovanni X  X  would represent a move towards developing the original simple term association network into a broader, more semantically-enriched structure. A different approach would involve representing only hierarchical relations between terms, for example, the fact that Mozart is a composer, a composer is a musician, a musician is an artist, etc. This would result in a different, somewhat simpler knowledge structure.
In fact, for this example, these are exactly the relations that can be found in WordNet knowledge base.

Domain models are, of course, built and used for different purposes. Cyc is an AI project that encodes knowledge which can be used, for example, in automatic reasoning. It is thus very closely related to the idea of the SW which is aimed at bring-ing  X  X  X tructure to the meaningful content of Web pages, creating an environment where software agents roaming from page to page other hand have very different priorities and research questions. WordNet , for example, conceptualises knowledge about the
English language which can be applied in NLP, e.g., to disambiguate word senses ( Navigli, 2009b ). NLP techniques have also been used to extract semantic networks or conceptual networks for text summarisation ( Lin &amp; Hovy, 2000 ) and adapting general lexicons to specific domains ( Widdows &amp; Dorow, 2002 ). In IR, domain models have been extracted automatically from text collections and query log files within a search engine, to suggest query expansion and modification terms. The incorporation of such models as a means of visualising a domain for navigational support is an area of growing importance, clearly reflected in the fact that the prominent search engines have started introducing more and more such interactive fea-tures, for example, Google X  X  Wonderwheel. 4 This is not restricted to Web searches, and the success of Aquabrowser enabling broader exploration of digital libraries using a network of related terms is further evidence of this trend. The partial domain model shown in Fig. 2 is an IR example. This model was actually extracted from the query log files that collect user interactions with a library catalogue search engine. It has been built automatically to suggest query expansion and modification terms in an IR context.

Automatic domain model acquisition typically relies heavily on a variety of NLP steps that turn plain text into structured knowledge. We will look at this in more detail. This paper will also examine the various approaches that have been employed towards making the automatically-acquired models adaptive, able to update, improve and change automatically. Adaptive models are unlike static (traditional AI-style) knowledge sources such as WordNet or Cyc. The advances of automatic con-struction and adaptation of domain models are addressing the so-called knowledge acquisition bottleneck (KAB), including problems such as acquisition latency, knowledge inaccuracy and maintenance of the acquired knowledge ( Cullen &amp; Bryman, 1988; Tang, Yan, &amp; Suen, 1994; Wagner, 2006 ). To break through the KAB, various research communities have been seeking more effective solutions to the automatic construction and adaptation of domain models.

Domain model acquisition seeks to learn a model from data, and one way of categorising them is by looking at the ap-proach it takes to learning and what kind of data it takes to learn them. The overall aim of this paper is to draw contrasts between different approaches and point to trade-offs and some recent trends. The rest of this paper is structured as follows. domain models and the ways in which these influence the types of concepts and relationships they include in their models.
Section 3 gives details of the learning algorithms that are commonly employed in automatic domain model construction. We distinguish unsupervised, weakly supervised and supervised approaches. Section 4 will discuss domain model construction approaches that make use of existing knowledge sources. Assessing the quality and usefulness of automatically acquired do-main knowledge is also a difficult task. Section 5 looks into this issue in detail. The final section of the paper offers some concluding remarks and observations. 2. Mapping the landscape
Several research communities have shown an interest in the field of domain modelling. To provide a constructive refer-ence point for this discussion, we have focused on three research streams: (1) AI and SW technology, (2) NLP, and (3) IR. There has been surprisingly little overlap between these communities despite the range of shared interests.
It should be pointed out that this categorisation is not intended to be definitive. For example, it could be argued that AI and SW deserve to be treated as two separate areas, whereas in other cases the borders are not so clear-cut. For example, work in information extraction inherits from both NLP and IR. Furthermore, we assume NLP to be an umbrella term that also includes the areas of computational linguistics, human language technology and natural language engineering.
The simplified categorisation into three fields is intended to help demonstrate the spectrum of characteristics that arise as a consequence of the particular vision within different research areas. These research communities can often be character-ised by the types of concepts and relationships between concepts in which they tend to be interested, and this seems to be heavily influenced by the over-arching objectives within each of these communities.
 To illustrate the different visions and representations of models in different disciplines, consider the partial models in
Figs. 2 and 3 . The first model ( Fig. 2 ) is a simple term association network in which nodes, that is, the model concepts, rep-resent query terms and the relations between these nodes are not defined. As mentioned earlier, these models are very com-mon in the IR community. The second model ( Fig. 3 ) is part of an ontology in which the nodes refer to entities and the relationships between these entities are semantically defined ( Mozart composed Don Giovanni ). In the SW and AI communi-ties such knowledge representation is necessary to allow automatic reasoning and enable Web agents to understand the con-tent on the Web.

In this paper, we distinguish two main paradigms of building domain models: data -driven and knowledge -driven ap-proaches. More generally speaking, these could be referred to as statistical and symbolic models.

The data-driven approaches are defined by the emphasis they place on extracting key words or phrases that capture con-cepts. The relationships included in a data-driven model tend to vary widely in type and granularity reflecting only a loose notion of relatedness based on the topic of the text. Some approaches do not attempt to generate relationships at all while others generate relationships between concepts based on degrees of specificity and subsumption. The relationships are often extracted using co-occurrence frequency within the collection or using inferred attributes of the concepts.
The knowledge -driven approaches, on the other hand, tend to target specific types of relationships (such as hyponymy, meronymy and synonymy) that are defined a priori to the extraction process. Entities with the corresponding relationships are extracted based on the specified types. For this purpose, lexical databases such as WordNet are widely used. The inte-gration of a manually engineered knowledge source into the process introduces more control over the relationships ex-tracted, but may not be able to cover a sufficient number of domain-specific concepts, which can affect the adaptability of the framework to very specialised domains.

Data-driven domain modelling approaches have been widely used in IR and NLP, which are examples of research fields that have seen a shift from mainly symbolic ideas to a strong preference for the statistical approaches. AI, and SW technol-ogy, on the other hand, is an example where the knowledge-driven approach is more prominent.

We will now look at these disciplines in more detail. 2.1. Artificial intelligence and the semantic web
AI researchers have always been interested in representing knowledge in such a way that it can be utilised by automatic reasoning systems ( Sowa, 2008, Chapter 5 ). We can see the idea of the SW as a natural extension to this long tradition.
The main objective of the SW lies in extending the Web to include content currently outside the immediate scope of linked pages, to enable agents to use this content in a variety of applications across different platforms ( Berners-Lee et al., 2001 ). As such, creating common formats and links between databases and their content is at the core of their many tasks. Consequently, domain knowledge representation together with the extraction of fine-grained metadata to describe content form one of the many important areas of research within the SW community. In particular, the ability to extract for-mal terminology and identify various types of semantic relationships between the terms (a.k.a. ontology ) from unstructured Ontology Learning Challenge 6 was an example initiative aiming to address this issue (e.g., Dagan, Glickman, &amp; Magnini, 2005; Giampiccolo, Dang, Magnini, Dagan, &amp; Dolan, 2008 ).

At the heart of the semantic web is the desire to enable different applications to understand and use the same data. This drives domain concepts and relationships between concepts be defined as explicitly as possible. The concepts are often re-quired to express the same level of detail that would be found in a relational database comprising abstractions of inclusion, aggregation and association. This encourages domain models developed within this community to have a strong foundation in knowledge-driven approaches. Such knowledge is frequently specified using a machine readable description language for-mat (e.g. Resource Description Framework 7 (RDF)) and a machine readable knowledge representation language (e.g. Web
Ontology Language 8 (OWL); and the DARPA Agent Markup Language web-based applications in communicating across different domains.

The reliance of applications on well-designed data structure leads the research in this community to be largely dominated by semi-automatic and manual approaches (e.g., Flouris, Manakanatas, Kondylakis, Plexousakis, &amp; Antoniou, 2008; Maedche, Motik, Stojanovic, Studer, &amp; Volz, 2003 ).

Some tools, however, such as the Karlsruhe Ontology (KAON) framework
Neri, 2004 ), actively support language processing for automatically extracting and selecting keywords representative of domain concepts from natural language texts.

Understanding and extracting knowledge from data requires a fine-grained representation of the semantic relationships between entities found within the text. The research in AI and the SW tends to reflect this by focusing heavily on knowledge-driven approaches to domain modelling. Data-driven approaches do, however, also find their way into this area, primarily those that extract relations using NLP methods ( Wilks &amp; Brewster, 2006 ). 2.2. Natural language processing
Research in NLP holds the basic standpoint that relationships between words are important both to capture in domain models and for NLP applications. Hence, researchers in NLP have shared a long-standing interest in constructing domain models or semantic networks to characterise textual structure, to find terms related to each other (e.g., Ceccato, 1961; Doyle, view of NLP approaches to the construction of conceptual networks can be found in Widdows (2004) .
 A typical data-driven example that illustrates the difference to the AI and SW approaches is introduced in Widdows and
Dorow (2002) . The algorithm can be used for  X  X  X ssembling semantic knowledge for any domain or application X  X  , is based on grammatical relationships such as co-occurrence of nouns or noun phrases, and needs only a corpus tagged for part-of-speech. The underlying motivation is the extraction of term relationships that do not need to strictly follow fully specified semantic relations but which can, for example, be used for query modification in a search context. In other words, the under-&amp; Dorow, 2002 ).

One example NLP area that profits from the extraction of conceptual graphs from textual documents is word sense dis-ambiguation ( Navigli, 2009b ). It is often an objective in itself in natural language processing, but at the same time it is an essential component in a variety of applications (for example, in question X  X nswering). Remarkably, large-scale conceptual networks have been applied and evaluated in the literature as part of the word sense disambiguation and induction tasks icons to specific domains ( Toumouth, Lehireche, Widdows, &amp; Malki, 2006; Widdows &amp; Dorow, 2002 ), and so on. While the main paradigm for current research appears to be data-driven, the emergence of powerful NLP toolkits such as
GATE 12 has been a significant development not just in the area of NLP but also because they offer ways of bridging different areas (such as NLP and SW) by combining data-driven and knowledge-driven approaches within the same framework. 2.3. Information retrieval
The domain modelling research in the IR community aims to build systems that assist users in retrieving information through information spaces. In contrast to NLP, relationships between words are lost altogether when simply looking at fre-quency analysis. The common IR scenario takes the form of a user submitting queries, formulated as a number of keywords, to a search engine that is expected to return relevant information from a collection, normally an indexed collection of doc-uments, by computing a numeric score based on the original query. This experimental setup referred to as the  X  X  X ranfield
Paradigm X  X  ( Cleverdon, 1960 ) offered a formalised methodology for pre-existing retrieval researchers to evaluate an IR sys-tem against a test collection of documents.

However, the search process is becoming more complex and interactive than the traditional IR evaluation discussed above, because of the extension of the IR paradigm as the research on human behaviour during the user X  X  interactive infor-mation seeking, browsing and navigation expands ( Case, 2007; Wilson, 1999; Golovchinsky, Qvarfordt, &amp; Pickens, 2009;
Marchionini &amp; White, 2009 ). We have already mentioned the interactive features introduced by standard Web search en-gines, but faceted searching has also become popular in recent years ( Ben-Yitzhak et al., 2008 ). This asks for knowledge structures that can assist a user in the search process.

As explicitly engineered ontologies, semantic networks and document annotation, appropriate for selected domains, are often unavailable and expensive to create, automatically created domain models from textual documents are increasingly attracting interest within the IR community not least because one of the features being language independence. Some efforts have already been made to use these in query expansion, reformulations and suggestions ( Sanderson &amp; Croft, 1999; Krusch-witz, 2003; Lau, Bruza, &amp; Song, 2008 ), as well as filtering information (for example, Nanas &amp; de Roeck, 2009 ).
The relationships between domain concepts are recognised as being important within IR. For example, networks of hyp-onym/hypernym relations, and other forms of relatedness have been used to expand, refine, and modify queries and to score 1999; G X rk X k, Karamuftuoglu, &amp; Schaal, 2008; Nanas, 2003 ). However, for IR, the emphasis lies in capturing a set of terms that are closely related to each other as co-occurring within the same context (whether topical or semantic). As such, the re-search tends to focus more on clustering concepts for word discrimination rather than on distinguishing between each rela-tionship explicitly to achieve word disambiguation (cf. discussion in Sch X tze (1998) ).

Like in NLP, the data-driven approach appears to be dominant in IR. However, it is not surprising that some researchers have also turned to formal ontologies that capture domain knowledge ( Navigli &amp; Velardi, 2003; Hsu, Tsai, &amp; Chen, 2006 ) for query expansion, and have exploited semantic relations from selected texts or queries (for example, van der Plas &amp; Tiedemann, 2008; Hollink, Schreiber, &amp; Wielinga, 2007 ) for question X  X nswering and/or query modification. Vallet,
Fern X ndez, and Castells (2005) , for example, exploited knowledge bases by creating an ontology-based scheme for the semi-automatic annotation of documents and the creation of an IR system using an annotation-weighting and ranking algorithm. 2.4. Summarising remarks
To summarise, different research communities have shown a continuing interest in domain modelling, but it appears that there has been little overlap between different disciplines. From the discussion in this section, it is clear that the approaches adopted by different communities can be complementary to each other.

This section has provided a flavour of the different communities and the respective domain modelling approaches. We will now look in a bit more detail into data-driven approaches. These approaches range from unsupervised to supervised techniques, each of which with their own strengths and weaknesses. Once we have discussed data-driven approaches we will turn to knowledge-driven methods in Section 4 . 3. Data-driven domain modelling
In this section we will describe the mainstream data-driven algorithms that have been employed in the context of auto-matic domain model construction. The algorithmic approaches can be divided roughly into three strands: unsupervised of unsupervised methods is that little human labour is required to produce well annotated training data, but the main draw-back is the difficulty in producing annotations of explicit concept classes and relationships. Weakly supervised learning methods of domain modelling require some manual effort, for example, to identify seed patterns, templates or specific con-cepts and relationships. Supervised learning methods on the other hand typically require substantial human annotation ef-fort but the main advantage is that the annotation of training data can be of high quality and specific to the domain. The obvious disadvantage of this approach is that such annotated data is often unavailable and expensive to create.
Fig. 4 lists some typical example methods for each of the strands. This section will give an overview of these approaches. 3.1. Unsupervised learning methods
Unsupervised learning takes raw data to learn a model, it therefore requires no prior annotation effort (e.g. to classify input into a number of different categories). This is a very active research area and we will distinguish two types of input for the domain modelling step, first of all actual text as found in documents (cf. Section 3.1.1 ) and secondly implicit data such as query logs, relevance feedback information etc. which contribute to a quickly growing area of domain modelling (cf. Section 3.1.2 ).
 3.1.1. Unsupervised learning from text
Frequency analysis has long been employed in text processing. In particular, the extraction of concepts from text followed by an analysis of co-occurrence statistics (that is the counts of two concepts occurring within close proximity within selected text) as an approach to information search and seeking was already being mentioned by Doyle (1961) at a time when com-putational resources were limited.

Phillips (1985) used the study of co-occurrence to build what he called conceptual structures and syntagmatic lexical net-works from different types of books e.g. science books. Words found in collocations with content words were extracted and clustered. A network of stemmed concept words was produced for each chapter, and the macro structures for the whole vol-umes were inferred by examining the extent of overlap between selected networks.

Sch X tze (1998) took context analysis to a more formal level. He mapped each occurrence of an ambiguous word w to a high-dimensional word space using collocated words and their co-occurrence frequency. He clustered them using the EM algorithm, initialised by group average agglomerative clustering on a random sample. Singular value decomposition was also used to identify the major axes of variation. Sanderson and Croft (1999) took a highly query-centric approach. In contrast to the clusters of the previous methods which did not attempt to label relationships between terms or concepts, they intro-duced a hierarchical relationship, imposing a subsumption relation between concepts extracted from top matching docu-ments retrieved for a given query.
 Lau, Hao, Tang, and Zhou (2007) also followed an extraction process (later applied to the e-learning task, Lau, Song, Li,
Cheung, &amp; Hao, 2009 ) similar to that of Sch X tze (1998) and Sanderson and Croft (1999) . They processed a corpus with stop-word removal, part-of-speech tagging, stemming, linguistic patterns selection (for example, patterns such as noun X  X oun or adjective  X  noun ), and statistical analysis for concept extraction. They further used information theory measures such as mu-tual information and balanced mutual information and term frequency within selected domains to refine the selection of con-cepts that represent domain concepts. Fuzzy subsumption relations were derived from term associations. The resultant domain ontology was further smoothed by including concepts from WordNet. This is different from the approach in Sander-son and Croft (1999) where term relationships were derived based on frequency counts of retrieved document passages.
Rather than taking unstructured text as input for the domain modelling process one could also make use of existing mark-up structure within the text to guide the process. Web document structure as represented by hypertext markup language (HTML), extensible hypertext markup language (XHTML) or extensible markup language (XML) has been exploited in con-junction with frequency analysis. For example, Kruschwitz (2003) used the count of different structural contexts as a guide for extracting concepts and subsequently building a domain model based on these concepts whereas Brunzel (2008) used
XHTML tag paths for text (that is, the Web page markup that leads to a given piece of text) as context for finding synonyms while Shinzato and Torisawa (2004) used list itemisation for locating hyponyms.

Formal concept analysis (FCA) focuses on building a lattice derived from concepts as defined by a set of attributes ( Cim-iano, Hotho, &amp; Staab, 2005 ). It creates a one-to-one mapping between groups of similar concepts and a set of attributes so that attribute inheritance from concept group C 1 to concept group C 2009 ) is closely related to FCA, in that they place focus on the attribute sets of concepts as determining relationship between concepts.

In addition to the approaches outlined above, there is also a strand of research that focuses on grouping texts, so that examples found within the clusters are more closely related to each other than those outside the cluster. For example, Chu-ang and Chien (2005) grouped short text segments from top search results using agglomerative clustering to create a hier-
Zamir and Etzioni (1998), Branson and Greenberg (2002), Chim and Deng (2007), Crabtree, Gao, and Andreae (2005) . Zhang and Wu (2008) used topical clustering as a visualisation technique for digital libraries. Self-organising maps have also been applied to enrich the relationships between concepts ( Dittenbach, Berger, &amp; Merll, 2004; Chen, Lee, Lee, &amp; Lo, 2008 ). 3.1.2. Unsupervised learning from implicit data
Unsupervised learning methods that do not exploit the actual text documents but instead make use of search log files, click data, implicit relevance feedback etc. have emerged over recent years. In particular, graph-based domain models incor-porating user search behaviour by examining query and click logs have started to appear more and more frequently in the include both queries and URLs as nodes can be used to identify a domain model of closely related terminology, that is, research has developed into an entire research area of Web data mining. The premise of much of the work is that queries and documents selected by users constitute concept terms and term sources preferred by the user community of the underlying collection.

Much research is aimed at exploiting implicit feedback in one way or another and much of it derives from the concept of
Implicit feedback has also been used to extract conceptual structures, which  X  X  X xpresses declarative knowledge by imple-menting it as a connected multilabelled bipartite oriented graph X  X  ( Sowa, 1984 ). For example, Lungley and Kruschwitz, 2009 , built a domain model on collection-wide formal concept analysis followed by an adaptation process to reflect implicit feed-back inferred from user-clicked documents.

Lau et al. (2008) examined concept relations adapted as part of a belief revision framework incorporating document rel-evance feedback. Their findings showed that the belief-based system was as effective as a classical adaptive IR system. Some approaches in domain modelling have emerged in the context of user X  X  viewpoint, for example, concept hierarchies as user profiles, subsequently adapted using immune system inspired approaches ( Nanas, 2003; Cayzer &amp; Aickelin, 2005 ). User mod-els can be seen as a special type of domain model that reflects an individual user X  X  or a group of users X  view on the search domain. Nanas, Uren, and De Roeck (2010) discussed other user viewpoint based domain modelling methods that use genet-ic algorithms, clonal selection algorithms, negative selection, co-stimulation, and immune inspired self-organising networks.
They used documents judged relevant by users to construct and update a domain concept model. Terms in the query and documents are linked to nodes in the concept model network. An initial level of energy is disseminated through the query nodes, then distributed through the network, and, finally, accumulated as a document energy or relevance score. When new user relevance feedback becomes available the network is updated by a similar process of energy distribution.
More user-centric methods were suggested by Pas  X  ca and Alfonseca (2009) , where query logs were analysed to derive likely attributes for identified objects in order to refine the concepts in the model with associated attribute hierarchies.
Query and document history have been used to model short-term and long-term user interests, in the form of domain mod-els. This research defines a topical similarity measure so that if the topical similarity of user interest context changes at the point of any query submission, a new user interest is constructed or the previous interest model is revised.
Unsupervised methods using implicit data can also be applied to first building a domain model and subsequently adapting the model in an ongoing adaptation cycle. Examples include adapting domain models based on user feedback on the rele-vance of documents (that is, no explicit judgement on the domain model itself) ( Nanas, 2003 ) as well as adaptive domain models that learn from user query modifications in interactive search ( Kruschwitz et al., 2011 ). 3.2. Weakly supervised learning methods
Unlike in unsupervised learning, in weakly supervised learning some annotation is required, e.g. phrase and/or syntactical patterns are identified empirically and used on a large textual corpora to harvest entities satisfying the pattern. Hearst (1992) used this approach to build a network of hyponyms from text. In this study, for example, phrases  X  X  A such as patterns by quantifying the similarity of syntactic dependencies (for example, modifiers) associated to a word, to cluster sim-ilar words together. Grefenstette (1992) , however, did produce explicit relationship tags for his clusters.
Others, such as Thelen and Riloff (2002) and Snow et al. (2005) , took this further, using entities already identified as being in a semantic class, or taking pairs of entities identified within WordNet as being in a hypernym/hyponym relation, as seeds for the identification of new phrasal patterns and entities belonging to that category or relationship. Here, it might be needed extract candidate entities and those candidates that are associated with patterns most likely to extract the seeds are added to the network.

Some researchers formulated document-template pairs to induce pattern matching rules ( Califf &amp; Mooney, 2003 ). The patterns induced, within this framework, can have constraints not only on surface patterns such as lexicon and part-of-speech, but also constraints on the semantic classes of the words in the pattern. Morin and Jacquemin (2004) inferred mul-ti-word variants from single word hypernym relations based on the lexical patterns of the single word hypernym network.
Approaches that harvest concepts based on relational patterns tend to extract concepts across many domains. Hovy et al. (2009) tried to better define the concept domain by examining the network produced as hyponyms of one seed term. On the other hand, Valarakos et al. (2004) developed a semi-automated ontology enhancement workflow that starts with a seed domain ontology used to annotate a domain corpus, and extract and cluster further candidates for inclusion in the ontology. The candidates are examined by a domain expert for final quality control.

Pantel and Pennacchiotti (2006) induced generic patterns to retrieve a wide range of concept pairs and then made use of a large sampling space such as the Web to filter the results to retain those associated to high precision patterns. They used, for example,  X  X  A of B  X  X  as a pattern for meronymy ( part-of relation).

Hattori and Tanaka (2008) looked at property inheritance and aggregation as a means of hierarchical knowledge organi-sation from the Web. They used two types of lexical patterns (for example, patterns such as  X  X  X  X  X  Y  X  X  as an instance of  X  X  X n attribute Y of a concept X  X  X ) to harvest, first, a set of candidate hyponyms in relation to a given concept, and, second, a set of properties for each target concept. The weight of each candidate as a hyponym would be weighted on the basis of how many of the root concept X  X  properties it inherits. Poesio and Almuhareb (2008) also discussed the importance of concept attributes and their values in extracting conceptual knowledge. They used lexical patterns as well as dependency parsers, to extract concept descriptions from the Web.

Another stream of methods that goes under this category is the extraction of arbitrary relations from text between named entities in the form of subject-predicate-object triplets. For example, the REXTOR system in Katz and Lin (2000) used a finite state language model to extract what they call ternary expressions that describe relations between entities. They argued that these structures are simple to extract and serve as a powerful tool for bridging the gap between NLP and IR, as they were able to cover a wide variety of relation types. There is a wealth of related work, often using Wikipedia. For example, Akbik and
Bro X  (2009) used dependency link grammars to identify all the link paths that result in valid relationships. These paths were used to extract semantic relations from plain text in a subject-predicate-object triplet form, analogous to statements in RDF between entities (also known as resources in RDF) from Wikipedia articles. 3.3. Supervised learning methods
In the supervised approach, pre-labelled training examples are required. For example, lexical and syntactic association patterns have been used as features in a general learning algorithm (such as Support Vector Machines and Conditional Ran-dom Fields), which usually learns classifiers from a collection of pre-annotated relations.

Most of the supervised learning algorithms use varying levels of syntactic information, ranging from part-of-speech tag-ging to full parsing and, in some cases, additional information, such as named entity tagging ( Mintz et al., 2009 ).
The research presented in Girju, Badulescu, and Moldovan (2006) , in particular, used supervised learning methods to determine whether the part-whole relation candidates retrieved using lexical patterns, constitute a true example of the rela-tionship. The classification builds rules regarding noun phrase constituents (for example, regarding prepositional phrases in the noun phrase compound) to iteratively learn semantic specialisation instances.

Snow et al. (2006)  X  X  algorithm incorporated evidence from multiple classifiers over diverse relationships to optimise the entire structure of a model. They used the algorithm to merge the predictions of coordinated term classifiers to add hypern-ymy to a pre-existing semantic taxonomy.

Tree kernel methods, a class of pattern analysis algorithms that can detect types of data and general types of relations, the phrase grammar parse tree and dependency parse tree of the sentences containing the relationship to detect new in-stances. In addition, Giuliano, Lavelli, Pighin, and Romano, 2007 has used kernel functions on parse trees to learn relation-ships between named entities.

Mintz et al. (2009) presented distant supervised learning using sentences extracted from the Freebase tion. This source is already seeded with a large database of relationships and instances extracted from Freebase itself. Distant supervised learning is an alternate extension of the paradigm to that introduced by Snow, Jurafsky, and Ng (2005) with the pur-extricate Hypernym (is-a) relationship pairs between entities for successful sentence extraction.

All supervised learning approaches depend on training data which does not always exist. This raises problems when try-ing to apply them to a specialised domain where large sets of data for training may not be available, and specialised concepts, which are not annotated elsewhere, might arise. Furthermore, the deeper level of linguistic features involved in these ap-proaches brings the scalability of these methods into question for large data collections in interactive environments, such as the Web. 3.4. Summarising remarks
The major advantage of unsupervised methods for domain model creation is that little human labour is required to pro-duce well annotated training data. This is significant not only in terms of the costs in time and money involved, but also in terms of the methods X  applicability to any data and domain. The main problem with regard to the unsupervised approaches is the difficulty in producing annotation of explicit concept classes and relationships. This is a major disadvantage with re-spect to the machine readability of the model by applications where this is paramount (for example, in SW and linguistic analysis). Unsupervised methods can benefit from approaches to adaptation that might elevate the model to a more rigorous standard, not only in terms of explicit annotation of concepts and relationships, but also in terms of consistency across the concept network (for example, with respect to types of relationships between siblings and between parents and siblings that populate the network). Unsupervised learning can be applied to the actual textual data sources to build a domain model or to implicit data sources such as query logs and click information associated with text collections.

The advantage of weakly supervised learning methods of domain modelling is that explicit concepts and relationships become available through targeted harvest. At the same time, the method does not require extensive manual annotation of training data. Depending on the context and application available, this might offer the best of both worlds, but the rela-tionship classes that are covered within this framework tend to be narrow. While some efforts are being undertaken to broaden the coverage, these tend to support general semantic networks that are not optimised to assist users within focused domains or applications. Weakly supervised learning methods could benefit from research oriented towards broadening the coverage of relationship types in a way (for example, active learning) that actively selects new relationship types with re-spect to a selected application or domain.

The advantage of supervised learning methods is that the annotation of training data can be carried out in such a way that all relationships and concepts are selected to meet the needs of the selected domain or application. The annotated data may also serve as the gold standard against which any automatically constructed models can be compared. The obvious disad-vantage of this approach is that such annotated data is often unavailable and expensive to create. It also often relies on a black and white scenario where experts agree completely on the important concepts and relationships of the domain. This might result in models that are not easily open to adaptation and evolution. Supervised learning methods for the construc-tion of domain models might benefit from research directions that incorporate information from the interaction of users with the model in an application environment. 4. Knowledge-driven domain modelling
The main data-driven approaches described in Section 3 focused on building domain models from scratch, simply using a collection of text or implicit query log and relevance feedback data. However, a range of external knowledge sources can also be used to build and enrich domain models. These knowledge sources can be fully structured (such as WordNet) or semi-structured (such as Wikipedia). We divide this research into two main strands according to the resources incorporated into the framework: those using explicit knowledge sources (cf. Section 4.1 ) and those that enrich existing domain models (cf.
Section 4.2 ). 4.1. Using explicit knowledge sources
A number of knowledge sources have been used to build domain models (among other things). Some of the most com-monly used resources are large-scale, freely available and of high quality. The works described here are designed to assist general applications (e.g. word sense disambiguation), the creation of large scale knowledge bases (e.g. YAGO extension of general lexicons (e.g. WordNet) with semantic relations (e.g., Navigli, 2009a; Pennacchiotti &amp; Pantel, 2006 ).
WordNet is a popular knowledge source that has been used extensively in research in many different ways, primarily be-cause it is a substantial linguistic knowledge source of high quality and is freely available. Enriching WordNet with addi-tional knowledge is one strand of work. For example, adding  X  X  X opic signatures X  X  (that is, a list of topically related words, such as restaurant, menu in relation to waiter ) was proposed by Agirre, Ansa, Hovy, and Martinez (2000) (and also their later work Agirre, Ansa, Martinez, &amp; Hovy, 2001; Agirre &amp; de Lacalle, 2004 ). Each WordNet concept is used to construct Web search queries that retrieve a collection of documents relevant to that concept from the Web. Words with high Chi-square ( v ) values are selected as topic signatures.

Instead of using the Web as a knowledge source, a controlled vocabulary could be used to enrich WordNet. Longman Dic-tionary of Contemporary English, 15 for example, has been used to locate corresponding representatives in WordNet that serve
The use of Wikipedia X  X  inherent structure is another growing strand of research. For example, Wikipedia X  X  categories have methodology for disambiguating Wikipedia categories with monosemous WordNet synsets was presented. The framework was evaluated using a manual gold standard (cf. Section 5 ) against manually tagged datasets.

Medelyan and Legg (2008) mapped groups from Cyc onto Wikipedia articles describing corresponding concepts. Their method calls on both Wikipedia X  X  rich and sometimes messy hyperlink structure and Cyc X  X  carefully defined taxonomic and common-sense knowledge.

Suchanek, Kasneci, and Weikum (2007) created the knowledge base YAGO which currently contains more than 2 million entities (for example, person, location, and organisation) and 20 million facts about these entities (non-taxonomic relations between entities, such as hasWonPrize and is-A hierarchy). The facts have been automatically extracted from Wikipedia cat-egories and redirections, in conjunction with WordNet semantic relations, using a carefully planned mix of rule-based/heu-ristic methods (for example, first concepts are extracted from Wikipedia categories then organised using WordNet hyponym relations to obtain the subClassOf relation). The knowledge base, according to the authors,  X  X  X s a major step beyond WordNet: in quantity by increasing the number of facts by more than an order of magnitude. X  X 
There exists a number of other large-scale explicit knowledge sources that can be used to build domain models, including commercially available products such as TrueKnowledge 16 ; knowledge bases for academic purposes, e.g., Open Mind Common
Sense 17 ( Singh et al., 2002 ), which can be accessed via ConceptNet, inger, Zirn, &amp; Elghafari, 2010 ); and BabelNet ( Navigli &amp; Ponzetto, 2010 ), a large scale multilingual semantic network.
DBPedia 19 is another massive database which makes Wikipedia content available as structured knowledge on the Web ( Auer et al., 2007 ). It uses a variety of vocabularies and knowledge schemas to represent facts between entities including the previ-ously mentioned YAGO ontology and it also links entities and facts to external knowledge resources. 4.2. Enriching existing domain models
The research described in this section aims to enhance knowledge representation within the context of existing domain-specific knowledge structures, by identifying the changes that arise within domain-specific environments and showing how these can be incorporated into a high level knowledge representation and enrichment framework.

Theoretical approaches have been developed that address the question of how new information can be incorporated into an existing domain models. For example, Chen et al. (2008) used the distances of a new term from the concept groups in the model to determine onto which group the new term should be mapped.

One of the domains that relies heavily on conceptual networks is the medical domain. Toumouth et al. (2006) used a fairly simple syntactical pattern to harvest nouns from the Oshumed corpus, mon ancestors and the senses (as prescribed by WordNet) most likely to occur within the corpus. Diederich and Balke (2008) used keywords specified in Medline 21 articles to examine high order co-occurrence statistics of the keywords, subsequently mapped to a concept graph.

With regard to the area of ontology enrichment, a number of approaches have been proposed, often semi-automated rather than fully automated. OntoLearn is a semi-automated ontology creation tool which can also be used to automatically enrich a domain ontology by utilising WordNet and other online dictionaries for heuristics ( Navigli et al., 2004 ). Valarakos et al. (2004) developed a semi-automated ontology enhancement workflow that starts with a seed domain ontology. This is used to annotate a domain corpus, and to extract and cluster further candidates for inclusion in the ontology. The candidates are examined by a domain expert for final quality control. Navigli and Velardi (2006) described a pattern-based method to automatically enrich a core ontology with the definitions of a domain glossary. They applied the method to the cultural her-itage domain and used available resources including WordNet and the Dmoz
Working on a similar strand of research, Monachesi, Markus, and Mossel (2009) proposed ontology enrichment with so-cial tags for e-learning. The authors argued that social tagging systems have become a standard application of the Web. These applications can be considered as shared external knowledge structures of users on the Internet. They described how social tagging systems relate to individual semantic memory structures and how social tags affect individual processes of learning and information foraging. Furthermore, they presented an experiment consisting of an online study targeted at the evalua-tion of the interaction of external and internal structures of spreading activation.

Web logs have also been used in combination with ontologies and folksonomies, for example, Passant (2007) , who ad-dressed some of the problems originating from free-tagging classification when applied to information retrieval. The authors combined ontological knowledge on top of an existing folksonomy as a way of dispensing with free-tagging classification flaws . 4.3. Summarising remarks
The types of resources described in this section that have been found to be in use for building, enriching and adapting domain models, reflect the objectives that underpin the research: to produce fine-grained description of textual structure, to enhance machine readability, to represent knowledge within a community to facilitate its extraction and re-use, and to assist users to find what they need from a large collection of material. This allows the work to be divided into different re-search areas based on the specific needs and tasks. Researchers have aimed to build models that can adapt to the selected needs of a user or community, or they have focused on general lexical and semantic knowledge bases (e.g., WordNet) and general knowledge sources (e.g., Wikipedia). Yet others have chosen to gear their work to the needs of a specialist community. The spectrum of needs and tasks that arise within these different groups are, however, merely iconic samples drawn from a continuum of granularities. Users often belong to different groups of specialist communities and will eventu-ally be happy when their needs with respect to these different communities are met within the language and conceptual structures they have been trained to understand. As a next step, to consolidate the diverse array of research described in this section, future research should move into the direction of testing domain modelling approaches within vertically sampled scenarios, that is, a well-defined set of scenarios, each of which incorporates the continuum from users X  specific interests. 5. Evaluation of domain models
The evaluation of a complex network structure such as a domain concept model is a challenging task. The diverse reasons (for example, the target application) for the development of the model have a direct influence on the way in which the model is evaluated. To some extent, this is reasonable, but this diversity can hinder the development of a commonly accepted eval-uation methodology and the failure to establish such a methodology can present difficulties for researchers trying to com-pare the effectiveness of the different construction approaches available.

Apart from the target application the assumptions about what the network actually models are different, and therefore evaluation methods will also have to be different. For example, ontologies are concerned with the extraction of concepts and relations between them, and typically strip out lexical information from the network. Two ontologies covering the same do-main may use different concept and relation designators in different configurations, which makes similarity comparisons difficult. Term-based models, on the other hand, will tend to reflect terminology similarities more closely. As a consequence, ontology similarity tends to rely on terminological similarity, by comparing the terms associated with concepts and relations.

Overall, it can be said that there are three methods of evaluation: the qualitative criteria-based user evaluation carried out by users of the model (relatedness judgement, for example, used in Sanderson &amp; Croft (1999) ); task-based user evaluation of fenstette, 1992; Nanas, 2003; Lawrie &amp; Croft, 2000 ); and quantitative evaluation of the model against a gold standard model
Evaluation techniques of ontology learning have been examined by a number of researchers. Dellschaft and Staab (2008) presented a comprehensive set of descriptions of the approaches and measures adopted by ontology developers and researchers, while Brank, Grobelnik, and Mladenic (2005) gave a very concise overview. In contrast, Maedche et al. (2003) focused on quantifying the similarity between two ontologies. 5.1. Qualitative criteria-based user evaluation
There are comprehensive accounts of criteria-based evaluation, such as that presented by Chuang and Chien (2005) . The qualitative measures that they identified were: 1. Cohesiveness: used to make a decision on whether the clustered instances are similar in a semantic way. 2. Isolation: utilised to test whether the automatically-generated clusters at the same level are distinguishable and whether their concepts include one another. 3. Hierarchy: used to decide whether the generated topic hierarchy is traversed from broader concepts at the higher levels to narrower concepts at the lower levels. 4. Navigation Balance: used to make a decision on whether the fan-out at each level of the hierarchy is appropriate. 5. Readability: used to decide whether the concepts of clusters at all levels are easy to recognise with the composed clusters and instances.

Although many studies refer to some of these criteria within the framework of a user evaluation, we have been able to find very little research that offers a thorough user evaluation based on all these criteria. The disadvantage of employing such an approach is the cost in terms of time and labour. 5.2. Task-based user evaluation
The quality and usefulness of domain models should not only be assessed through the qualitative criteria-based measures discussed above, but also largely depend on the applications in which the domain models are used. Therefore, within the 1999; Kruschwitz &amp; Al-Bakour, 2005 ).

The task-based evaluation can also be conducted to evaluate the effect of using the domain model in a given application, e.g., query expansion and document re-ranking ( G X rk X k et al., 2008; Nanas &amp; de Roeck, 2009 ), or in disambiguating words and supporting machine translation ( Navigli &amp; Velardi, 2003 ). The standard evaluation methodology and measures for the specific application, e.g., Mean Average Precision (MAP) commonly used in IR applications, can then be adopted to show how much benefit the domain model can bring compared with the baseline without using the domain model.

We would also like to emphasise that, at the time of writing this paper, we had not yet discovered any evaluation meth-ods represented in the literature that try to investigate whether we might be able to infer the usefulness of a domain model through implicit feedback observed from the users X  direct interactions with the concept graph. This is surprising since the incorporation of concept graphs as a means of visualising a domain for navigational support seems to be a growing trend (for example, Google Wonderwheel and Yahoo Correlator 23 ). Research in this direction would be highly beneficial, not only in helping to overcome the necessity for time-consuming qualitative user evaluations but also in providing a pipeline for auto-mated domain model adaptation. 5.3. Quantitative evaluation against a gold standard
In addition to the user evaluation methods as described above, quantitative evaluation against a gold standard has also been widely adopted. Dellschaft and Staab (2008) illustrated the obvious progress in ontology evaluation that has been made in recent years, but these methods are still not widely validated. They show a clear bias towards evaluation by comparison against a gold standard. Their reasoning follows the argument that the cost of building a gold standard is only incurred once this may hold true for static domains, it may not hold true for a dynamic environment such as Web-based search scenarios where user interests change rapidly and collections are in constant flux. Even within a fairly static environment, change is dynamic information environment.

The definitions of all the quantitative measures used for the comparison of ontologies that are presented in this section are also detailed in Dellschaft and Staab (2006) and Dellschaft and Staab (2008) , and the equations are sourced from their paper. These measures can be described as one of two types: that focusing on lexical precision and recall (cf. Section 5.3.1 ), and F-Measure can be sourced in van Rijsbergen (1979) . 5.3.1. Lexical precision, recall and F-measure
Given a gold standard reference taxonomy ( Ref ) and a taxonomy to be compared to the reference taxonomy ( Comp ), we can simply use lexical precision, recall, and F-measure to evaluate Comp . Lexical precision measures whether terms (purely on a lexical level) given in Comp are actually from the reference taxonomy, and recall measures how completely the terms in the reference taxonomy have been represented within Comp . More formally, precision and recall are defined in Eqs. (1) and (2) , respectively. These measures are commonly combined to give an overall harmonic mean (or weighted average) of pre-cision and recall (cf. Eq. (3) ).

The precision, recall and F-measures above, could be criticised for inadequately reflecting conceptual relationships that may exist between terms. For example, if  X  X  X ar X  X  is returned within Comp , and  X  X  X uto X  X  is within the reference taxonomy, Comp would not be rewarded, despite the obvious relationship between  X  X  X ar X  X  and  X  X  X uto X  X  ( Dellschaft &amp; Staab, 2008 ). 5.3.2. Taxonomic precision, recall and F-measure
Taxonomic Precision (TP) and Recall (TR) are developed to capture the similarity between two concepts even when there is little lexical similarity.

The similarity between two concepts c 1 and c 2 is computed based on the basis of a comparison of characteristic extracts , denoted ce ( c 1 , O 1 ) and ce ( c 2 , O 2 ), from the two conceptual graphs O described at the end of the last section: in comparing  X  X  X ar X  X  from Comp and  X  X  X uto X  X  from Ref , we could take the other terms The premise is that, if the terms are conceptually linked, then there will be a large overlap in the extended extract.
Given a definition for the characteristic extract ce , the local taxonomic precision tp concept c 1 and a given concept c 2 from a reference set O Then we can define the global taxonomic precision of O C with respect to reference taxonomy O
An example of extracting ce is the semantic cotopy . Semantic cotopy sc ( c , O ) of concept c with respect to ontology O is de-fined to be the set of all super-concepts and sub-concepts of c . Semantic cotopy is heavily influenced by the lexical precision (cf. Section 5.3.1 ). Common semantic cotopy considers only the nodes in the semantic cotopy that are shared by both taxo-nomies to enhance independence with respect to lexical extraction performance. Some measures try to strengthen the inde-pendence by only considering terminology common to both taxonomies so that tp
Local taxonomic recall is defined using the characteristic extract: This results in defining global taxonomic recall as the precision of the reference ontology O measure TF can then be defined in exactly the same way as the lexical F-measure, to produce a combined measure. Where TF is not influenced heavily by the lexical level performance, the harmonic mean of lexical recall and TF can be used to produce a second order F 0 value. In addition, the overlap, TO ( c 1, c (cf. Eq. (6) ) has been suggested (instead of local taxonomic precision) as building blocks for comparing the taxonomies.
Quantitative evaluations tend to compare systems ( Giunchiglia, Yatskevich, Avesani, &amp; Shivaiko, 2009 ) across different similarity measures and varying sets of features and rarely involve a comparison of different approaches to construction (for example, a comparison between a hypernym X  X yponym ontology developed by employing a concept-centric approach, and the same developed by employing a relationship-centric approach). 6. Concluding remarks
In this paper, we have presented an overview of domain modelling research within three separate disciplines: artificial intelligence and the semantic web (AI/SW), natural language processing (NLP) and information retrieval (IR). We have fo-cused on automated methods for constructing domain models from text collections and knowledge resources. We have also outlined a number of evaluation methodologies that have been employed within the literature. Our main findings can be summarised as follows: Domain concept modelling with its roots in traditional AI technology has developed into a heterogeneous research area.
Real progress could now be made, particularly in the area of adaptive domain modelling, by exploiting the different strengths of independent efforts in different research disciplines such as SW, NLP and IR.

The literature reviewed seems to suggest a lack of research addressing the questions of which type of domain model is most suitable for what types of application.

The evaluation of different domain models as well as different approaches for constructing these models is an ongoing research challenge.
 We see a lot of potential in combining data-driven and knowledge-driven approaches.

In this paper, we have not paid much attention to the effects that interactive user interfaces visualising domain models might have on implicit feedback for domain model adaptation. Most previous research strands have used implicit document relevance feedback within the traditional search interface setting. The scope for further research in this area looks promising, given the growing number of popular search engines that have started employing optional interactive visualisations of term relationships. The traversal of such domain model representations presents an opportunity to log and learn from direct user interaction with the model. For example, positive indicators such as a traversal followed by document selection and a long dwell time could, in future, be used to strengthen links whilst traversals which yield no results could be used to identify poorly performing areas of the model. Extensive research in this direction can also work to improve interfaces for applica-tions other than search, for example, in the context of the domain concept structures increasingly being adopted by tradi-tional libraries that use modern visualisation tools such as Aquabrowser (e.g. Queens Library rely on user tags, such as LibraryThing, 25 by assisting users to engage with domain knowledge in an efficient way. Acknowledgements The research carried out for this review was conducted within the framework of the project, Automatic Adaptation of Knowledge Structures for Assisted Information Seeking (AutoAdapt), funded by the EPSRC Grants EP/F035357/1 and EP/ F035705/1. We are grateful to the anonymous reviewers who provided us with their invaluable and extensive feedback. References
