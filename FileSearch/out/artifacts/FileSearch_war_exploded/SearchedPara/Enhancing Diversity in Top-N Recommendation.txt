 In recent years it has been argued that, besides the standard accuracy metrics, other characteristics of the recommenda-tion algorithm ought to be taken into account when evaluat-ing recommendation performance. One such characteristic is recommendation diversity and this topic is the focus of this research project. The overall goal of the project is to examine ways to improve the diversity of recommendations while maintaining high accuracy. During the course of my work to date I have addressed the question of how best to evaluate diversification strategies and have proposed a num-ber of new diversity enhancement algorithms.
 H.4 [ Information Systems Applications ]: Miscellaneous Metrics, Performance diversity, top-N recommendation, strategy, evaluation
Recommendation algorithms such as collaborative filter-ing (CF) have shown that it is possible to compute accurate predictions of user X  X  tastes and requirements, by exploiting knowledge of past transactions, of the user herself, as well as of other users with similar tastes. Accuracy in this context is understood as the ability of the system to recommend rel-evant items to the user. The accuracy metrics typically used to measure system performance are largely directed at aver-age performance over the entire user set, such as MAE [6], or precision and recall [7]. Traditional recommender systems rank items according to their similarity values and return a small number of top-ranked items in response to the re-quirement. Predictions are deemed successful so long as the Figure 1: Hit Probability against increasing novelty. predicted set overlaps with the user X  X  real preferences. How-ever, these metrics do not account for other qualities of the prediction, in particular, they do not consider the difficulty of the prediction. It is reasonable to assume that a user will be more satisfied with a system that offers recommendations from a less obvious set of items that the user likes, than one that always offers items from a core set that the user has frequently used or purchased in the past.

In my thesis I address the diversity problem from two points-of-view  X  the individual user perspective and the sys-tem perspective. Strategies aimed at solving the diversity problem from each perspective will be presented and the relationship between the two perspectives will be examined.
We define an algorithm to be fully diverse from the user perspective if it recommends any of the user X  X  set of relevant items with equal probability. Thus, the algorithm exhibits no biases in the way that it recommends relevant items to a user. In practise, recommendation algorithms tend to con-centrate their relevant recommendations in a sub-set of the full set of relevant items. There are items which a user likes, but which are never (or rarely) recommended by the system.
In Figure 1, this issue is explored for a user of size | P 764 in the Movielens 1 dataset. The experiment was repeated 10 , 000 times with a test set T consisting of 10% randomly selected items of the user profile and a recommendation list, R , of size N = 20. The full range of similarity values ob-tained by the items in the user profile has been divided into 5 equal intervals and each item has been assigned to a bin according to its similarity value. The white bars represent the distribution of the items in a user profile and black bars http://www.movielens.org represent the X  X it probability X  X  the average probability that an item from the bin will be recommended when it is placed in the test set. It is striking that items from the third bin upwards  X  accounting for a half of the total profile size  X  have almost zero probability of being recommended.
On the other hand, from a market owner X  X  point-of-view, the majority of product sales only concentrate among a rela-tively small group of products. This characteristic has been dubbed by Wired editor Chris Anderson as  X  X he Long Tail X  phenomenon [2]. In [1] it is pointed out that online shop-pers have shown themselves to be far more willing to pur-chase niche products  X  like documentary movies and old-time acoustic blues recordings  X  than marketers ever imag-ined. Companies like Amazon and Apple X  X  iTunes figured this out because, with dramatically lower inventory costs than their bricks-and-mortar competitors, they could afford to carry huge lists of titles. Figure 2 shows a typical sales curve that exhibits this long-tail characteristic. A small frac-tion of the products occupies the majority of the sales num-ber and the rest  X  about 80% of the total products  X  have a very small sales number, forming the long tail.

System diversity considers biases in the recommendations made across the entire set of products. In particular, we define an algorithm to be fully diverse from the system per-spective if the probability of recommending an item, when it is relevant is equal across all items.
The significance of the problem can be spotted from Fig-ure 1 and Figure 2. Moreover, many works have been talking about the drawbacks of developing recommender systems with accuracy as the single goal. For example, as pointed out in [10], one direction that has drawn recent interest is the evaluation of different system characteristics, such as the diversity of the system output. [6] discusses the nov-elty need and the quality need of the recommendation list. It said that we need new dimensions for analyzing recom-mender systems that consider the  X  X on-obviousness X  of the recommendation. Some strategies have been proposed to address the problem. In [15] the authors propose a similar-ity metric using a taxonomy-based classification and use it to compute an intra-list similarity metric to determine the overall diversity of the recommended list. Another paper [8] examined the conditions in which similarity can be increased without loss of diversity, and presented an approach to de-liver such similarity-preserving increases in diversity when possible. In [11] the authors provide a heuristic algorithm to increase the diversity of the recommendation list. Their results show that lists ordered for greater diversity perform worse on accuracy measures than unaltered lists, but nev-ertheless users preferred the altered lists. [3] examines the effect of recommender systems on the diversity of sales. It uses a measure of statistical dispersion called Gini coefficient to measure sales diversity.

Generally speaking, although attention has been drawn to the top-N recommendation diversity, relatively few effective strategies have been proposed (in comparison to the other themes in the area such as the problems of robustness and privacy). Also, the question of how to evaluate recommen-dation algorithm diversity has not been very well answered.
To date my research work has been mainly focusing on the diversity problem from the end user X  X  point-of-view . In this section the solutions we proposed are presented.
In [4] we argue that, from the user X  X  perspective, the per-formance implication of the lack of diversity is that stan-dard recommendation algorithms are poor at recommending relevant items that are more novel than the user X  X  average tastes. In fact system performance degrades rapidly when measured against the increasing novelty of the recommen-dation problem, where the novelty of the item can be sim-ply defined with respect to the user profile to be one minus its similarity. Knowing that current recommendation algo-rithms are biased towards recommending non-novel items, our goal is to increase the probability of recommending novel items, so that recommendations can be spread evenly across all items in the set of items that a user likes, regardless of their novelty. Such fairness should be achieved without big loss of overall system accuracy.
Firstly we attempt to use a statistical model to reveal the potential strategies. A recommendation algorithm is encap-sulated within the model as function p R ( s ), the probability of making a recommendation given the similarity value s between a user-item pair. The similarity metric and the dataset over which it is applied is encapsulated in the Gaus-sian distributions f S | L and f S , i.e, the similarity distribution of items liked by the user and of items in the dataset. Thus, we investigate different algorithms and how they perform on different datasets by modifying p R ( s ) and f S | L . We build up models for three real-world existing recommenders:
Using the model we are able to analytically demonstrate the trade-off between diversity and overall system perfor-mance. Concluded by the analytical results, another poten-tial strategy is to find a similarity measurement that gives distinctly higher values for the items liked by the user, than for other items, which changes the distribution of f S | L to enlarge the distance between  X  S | L and  X  S (the mean val-ues in the two Gaussian distributions), the idea is presented in Figure 3. For the more detailed description, the work is described in [14].
Following the above lines we propose different algorithms to solve the problem.
The first algorithm we adopt in [12] is to achieve an objec-tive function that explicitly presents the trade-off between diversity and overall system performance using a control parameter  X   X  [0 , 1]. The basic idea is as follows. Let C = { c 1 , . . . , c M } be a candidate set of size | C | = M . It is useful to represent subsets R  X  C using an M -dimensional indicator vector y , such that y ( i ) = 1 if c i  X  R and y ( i ) = 0 otherwise. Moreover, let D be the M  X  M distance matrix with ( i, j )-element d ( c i , c j ). where m u is the M -dimensional vector with elements m ( i ) representing the similarity between c i and the current user profile,  X  and  X  are normalization parameters.

We apply several algorithms including Greedy, Relaxation and Quantization as well as Kernighan-Lin to achieve the objective function and good results are obtained. A various form of this strategy is presented in [4] to apply on the case-based reasoning system, where a user modeling method is proposed to fit in the new application.
The second algorithm is to pursue the goal of enlarging the distance between  X  S | L and  X  S . Here we come up with the methods of partitioning user profile and estimates the candidate items X  similarity to each cluster rather than com-puting the aggregate similarity to the entire user profile. [13] provides the work in detail. Given that we require groups of highly similar items, our objective can be stated as to find a partitioning P k , defined as where f S () is the similarity of a set defined as the average pair-wise similarity between items in the set. Many cluster-ing/partitioning strategies exist in the literature. K-means , Metis and community-finding algorithms, etc. are applied to perform the partitioning.

After the clusters are generated it is necessary to allocate a number of recommendations to each cluster. As we wish to target the user X  X  more novel tastes, we concentrate rec-ommendations in the most novel clusters. Assume that the clusters are labeled in this order, i.e. C i is the i th most novel cluster. Only the h = max( k, N ) partitions with largest ag-gregate novelty are used for making recommendations i.e. N i = 0 for i &gt; h . For assigning N i to C i , we apply equal allocation to each partition i.e.
 where q i = 1 for i = 1 , . . . , mod ( N, h ), r i = 0 otherwise. Then for i = 1 . . . k , we use the standard item-based top-N algorithm (SR) to make recommendations for u by matching items to C i rather than to the entire user profile. At last the recommendations are aggregated together to form the full retrieval set.
An optional step is also proposed in [13] to apply the clus-tering methods in combination with dimension reduction. Our intuition is, by applying a dimension reduction strategy before clustering the items, the contrast in their similarity values can be enhanced, thereby improving the clustering. Indeed, the advantage of applying SVD in recommender sys-tems has been revealed by some previous work. For example, [9] points out that we can take the advantage of reduced di-mensionality to form better neighborhoods of customers. In this sense, it can also be applied directly on the standard SR. We carry out an SVD factorisation of A for the n  X  m dimensional matrix of ratings for the items in the dataset. Given A = U X V T , we take the first l columns of V to form an l -dimensional representation of the items and this rep-resentation is used to compute similarities/distances in the clustering algorithms s.t. m  X  l .
In economics applications, concentration is often mea-sured by computing a concentration curve and the associated concentration index, c  X  [  X  1 , 1]. In the context of diversity evaluation we borrow the concepts to evaluate the recom-mender X  X  bias towards the similar items. The methodology can be illustrated in Figure 4. Items are ordered by increas-ing similarity and the cumulative proportion of items in the user profile, from least to most similar, is plotted against the cumulative proportion of hits (i.e. successful recommenda-tions) achieved on these items. The concentration index is computed as twice the difference between the area below the diagonal and the area below the concentration curve c ( x ): c , 1  X  2 of similarity, then this plot corresponds to the equality di-agonal shown in the figure, with c = 0. On the other hand, if the probability of a hit is biased towards items with high similarity, then the curve appears below the diagonal, cor-responding to a positive c value, while if it is biased towards items with low similarity, the curve appears above the diag-onal, corresponding to a negative c value. We believe that we are the first to apply concentration index/curve as the methodology to evaluate how well the recommender X  X  ability is to retrieve novel but relevant items for the users.
By comparing to the standard item-based collaborative fil-tering algorithm (originally proposed in [5]) on the common used Movielens dataset, we show that basing recommenda-tions on the proposed strategies can significantly enhance recommendation performance on novel items, without signif-icant reduction in total performance across all items. This has the potential to greatly enhance end-user satisfaction. Some of the results obtained by the partitioning algorithms described in Section 2.3.2 are shown in Figure 4 as to in-terpret the effects. As can be seen SR shows a extreme bias towards the very similar items, i.e, the concentration curve is a lot below the diagonal with a big positive con-centration index value (0 . 6288). All the algorithms have a more balanced hits distribution than SR, as expected. It is noteworthy that with the improved diversity we have also achieved an improvement in overall accuracy. For example, Metis algorithm obtains a precision of 0 . 1384 that is higher than the standard item-based algorithm, 0 . 1119.
In the next stage I X  X  going to put more emphasis on the diversity problem from the system perspective  X  Long Tail problem. The above evaluation methodology can be directly applied, only this time we investigate on the bias of rec-ommenders towards the popular items in the system. We have developed some simple strategies such as popularity discount, i.e, discount the scores of the popular items when ranking the candidates according to some criteria and se-lecting the top-N ranked items. Some effects in reducing the bias are obtained at the cost of system accuracy. More efficient algorithms need to be developed. Moreover, we be-lieve that there is a bond between the diversity problems from these two perspectives. Efforts will be put in this di-rection to investigate this bond to answer some questions such as, are the popular items in the system also the hubs in the similarity computation, i.e, the ones that are similar to many other items? [1] Reinforcing the blockbuster nature of media: The [2] M. D. S. Erik Brynjolfsson, Yu  X  X effrey X  Hu. From [3] D. Fleder and K. Hosanagar. Recommender systems [4] N. Hurley and M. Zhang. Analysis of methods for [5] G. Karypis. Evaluation of item-based top-n [6] J. L.Herlocker, J. A.Konstan, L. G.Terveen, and [7] C. D. Manning, P. Raghavan, and H. Schutze. [8] D. McSherry. Diversity-conscious retrieval. In [9] B. Sarwar, G. Karypis, J. Konstan, and J. Riedl. [10] J. R. Sean M. McNee and J. A. Konstan. Accurate is [11] B. Smyth and P. McClave. Similarity vs. diversity. In [12] M. Zhang and N. Hurley. Avoiding monotony: [13] M. Zhang and N. Hurley. Novel item recommendation [14] M. Zhang and N. Hurley. Statistical modeling of [15] C. Ziegler, S. M. McNee, J. A. Konstan, and
