 Exponential growth of information generated by online so-cial networks demands effective recommender systems to give useful results. Traditional techniques become unquali-fied because they ignore social relation data; existing social recommendation approaches consider social network struc-ture, but social context has not been fully considered. It is significant and challenging to fuse social contextual fac-tors which are derived from users X  motivation of social be-haviors into social recommendation. In this paper, we in-vestigate social recommendation on the basis of psychology and sociology studies, which exhibit two important factors: individual preference and interpersonal influence. We first present the particular importance of these two factors in online item adoption and recommendation. Then we pro-pose a novel probabilistic matrix factorization method to fuse them in latent spaces. We conduct experiments on both Facebook style bidirectional and Twitter style unidirectional social network datasets in China. The empirical result and analysis on these two large datasets demonstrate that our method significantly outperform the existing approaches. H.3.3 [ Information Search and Retrieval ]: Information Filtering; J.4 [ Computer Applications ]: Social and Be-havioral Sciences Algorithms, Experimentation Social Recommendation, Individual Preference, Interperson-al Influence, Matrix Factorization
Users on social networks generate large volume of infor-mation and urge recommender s ystems to provide useful re-sults. Traditional techniques typically based on collabora-tive filtering become unqualified in solving the social rec-ommendation problem because they ignore social relation or interaction data. Recently, Ma et al. [20, 21] propose a framework of social recommender systems that utilize the social relation data, from which friendships and trust rela-tionships are exploited to regularize the latent user space, but social contextual information has not been fully consid-ered. It is significant and challenging to discover social con-textual factors from contextual information and fuse them into social recommendation.

Figure 1 shows the entire social contextual information which can be derived from links on social networks. Users intend to judge received items from its content and sender. For example in Twitter, when a user receives a tweet that is posted by one of his friends (the sender), he usually reads its content to see whether the item is interesting. We can get this knowledge from item content and user-item interac-tion information. He also cares about who the sender is and whether the sender is a close friend or authoritative. If more than one of friends send him the same tweet, he may read it more attentively. This knowledge can be learnt from so-cial relation and user-user interaction information. Both of these aspects are important for the user to decide whether to adopt (e.g. retweet, comment) the item. The above can be summarized as two contextual factors: (1) individual pref-erence and (2) interpersonal influence.

Besides the experiential assumptions, psychology and so-ciology studies have proved that individual preference and interpersonal influence affect users X  decisions on information adoption. In Bond X  X  work[5], it is indicated that individuals are to some extent influenced by others X  behaviors, rather than making decisions independently (i.e. purely preference driven). In [25], web-based experiments are designed for mu-sicadoptionpredictioninanartificialmusicmarket. This work demonstrates that the introduction of interpersonal influence into the preference driven decision process (as is the case in real social networks) makes user behaviors more complex and thus increases the unpredictability of the item adoption. Therefore, only when individual preference and interpersonal influence are properly incorporated into rec-ommendation, the unpredicta bility can be reduced and the recommendation performance can be improved accordingly. Figure 1: From Social Contextual Information to Social Contextual Factors
To address this problem, we propose a social contextual recommendation framework (as shown in Figure 2) based on a probabilistic matrix factorization method to incorpo-rate individual preference and interpersonal influence to im-prove the accuracy of social recommendation. More specifi-cally, we factorize the user-item interaction matrix into two intermediated latent matrices: user-item influence matrix and user-item preference matrix, which are generated from three objective latent matrices: user latent feature matrix, item latent feature matrix, and user-user influence matrix. Moreover, as we can partially observe individual preference and interpersonal influence based on historical user-item and user-user interaction data, we further utilize the observed contextual factors to compute the three objective latent ma-trices.

We X  X e conducted experiments on two real social network datasets. One is collected from Renren ( www.renren.com ), a Facebook style website in China; and the other is collected from Tencent Weibo 1 ( t.qq.com ), a Twitter style website in China. The two datasets represent two typical social net-work datasets, one for bidirectional social relations, and the other for unidirectional social relations. We show that so-cial contextual factors can greatly boost the performance of recommender systems on social network data, and our method greatly outperforms the previous algorithms by a large margin. We attribute this result to the incorporation of complete social contextual factors from both individual and interpersonal sides, and experiments verify this conclu-sion.

This paper is organized as follows. Related work is intro-duced in section 2. We introduce the effectiveness of two contextual factors with studies on social datasets in section 3. Our social contextual model is formulated in section 4 and experimental results are reported in section 5. Conclusion comes in section 6.
In this section, we review several major approaches to rec-ommendation methods. Collaborative filtering and content-based filtering have been widely used to help users find out the most valuable information. With the emerge of social networks, researchers design trust-based [22, 23, 11] and influence-based [16, 17, 10, 7] methods to take use of the power coming from user relationships for recommendation. Matrix factorization methods have been proposed for social recommendation due to their efficiency to dealing with large datasets. Although there are some mixture models of these methods, it is valuable to understand social recommendation from users X  motivation of item adoption.

Collaborative filtering methods have broad applications, which are divided into two categories, i.e. memory-based and model-based. In the memory based methods, item-based approaches [26, 14] calculate the similarity between all users based on their ratings of items. Si et al. [27] combine collaborative filtering and content-based filtering [1] which selects items based on the correlation between the contents of items and preferences of users. The model-based method-s learn a model based on patterns recognized in the ratings of users using Bayesian networks and other clustering tech-niques [6, 8, 19]. Collaborative filtering only requires the information about user interactions, but it is not able to make full use of the graph-based social relations and rich social knowledge including user profiles and detailed item descriptions.

Recently, several matrix factorization methods [18, 13, 14] have been proposed for collaborative filtering. The matrix approximations all focus on representing the user-item rat-ing matrix with low-dimensional latent vectors [24, 15, 12]. Recognizing that influence is a subtle force that governs the dynamics of social networks [16, 17], influence-based rec-ommendation [10] involves interpersonal influence brought by senders and receivers into social recommendation cases. Trust-based approaches [22, 23, 11] exploit the trust net-work among users and make recommendations based on the ratings of users who are directly or indirectly trusted. SoRec [20] is proposed as a probabilistic factor analysis framework which fuses the users X  tastes and their trusted friends X  favors together. Yang et al. [30] propose that information con-tained in user-service interactions can help predict friendship propagations and vice versa. They use data from both user-item interactions and user-user relations. Aiming at improv-ing recommender systems by incorporating users X  social net-work information in both friend network and trust network, Ma et al. [21] propose a matrix factorization framework with social regularization. But this work only constrains us-er feature vectors from interpersonal side but ignores users X  individual side, which makes the framework lack of complete contextual information to further improve the recommenda-tion accuracy. However, it is still an open issue about what factors motivate user adoption on recommended items and how can they be effectively integrated to further improve the accuracy of social recommendation.

From psychological and sociological views, Bandura [2] gives a social cognitive theory of mass communication and argues that communication systems operate through two pathways. In the direct pathway, they promote changes by informing, enabling, motivating, and guiding participants to get what they prefer. In the socially mediated pathway, media influences participants to social networks and com-munities that provide natural incentives and personalized guidance. More previously, Benjamin [3] shows the similar opinion that factors such as cognition, feeling, taste, inter-est and interpersonal relationship develop the structure of social behaviors and interactions. On the social web, these two factors exactly represent individual preference and in-terpersonal influence, which motivate us to propose a social contextual recommendation framework to incorporate them by analyzing both user motivation and application mecha-item. nism to recommender systems for social networks. In our paper, we incorporate both individual preference and inter-personal influence in a principled manner.
In this section, we will demonstrate the existence and sig-nificance of social contextual factors (including individual preference and interpersonal influence) for social recommen-dation on real large datasets.

Given an item, the behavior of user adoption depends on individual preference to understand whether the user likes it or not, and interpersonal influence to tell whether the us-er has tight relationships with the item senders (e.g. the followed users who generate or retweet the tweet in Twit-ter) or not. Based on historical data, we apply LDA [4] on the web post (e.g. tweet) content and extract topic-level distributions of items. From user behavior history, we sum-marize how much user u likes item a with a na  X   X ve preference measurement as where A ( u, a ) is the set of items adopted by user u excluding a ,and T a is the topic distribution of item a .

To describe interpersonal influence from user-user inter-actions on social web, we calculate the percentage of recom-mended items adopted by u from the item a : where V ( u, a ) is the set of senders who send item a to user u ,
S ( u, v ) is the set of items sent from v to u ,and A ( u the set of items that u adopts.

We classify the items into adopted and refused ones ac-cording to user behaviors, and plot the pairs ( u , a )aspoints Figure 4: Percentage of Users vs. Correlation Be-tween Preference and Influence w.r.t. individual preference P u ( a ) and interpersonal influ-ence I u ( a ) in Figure 3, which shows that users intend to adopt items with better preference scores and from higher influential friends or followers in both Facebook and Twitter style networks.

In order to demonstrate that individual preference and interpersonal influence are not only effective but also com-plementary social contextual factors, we calculate their cor-relations in social recommendation cases. We use P and I for each user to denote preference and influence of his adopt-ed items. The Pearson correlation is defined as The correlation is 1 or -1 in the case of perfect positive or negative linear relationship, and zero if preference and influ-ence are uncorrelated. In Figure 4, the absolute correlation values of more than 40% users are less than 0.2 and the (a) Renren Dataset (b) Tencent Weibo Dataset values of around 70% are less than 0.4. Thus we conclude that individual preference and interpersonal influence can be applied as two complementary social contextual factors in recommendation.
In this section, we will introduce details of our social con-textual recommendation model. First, we formally define the problem of social recommendation. Suppose that we have M users with the i -th user denoted as u i ,and N items with the j -th item denoted as p j .

We denote the information adoption matrix as R  X  X  0 , 1 } M  X  N , with its ( i, j )-th entry Then the social recommendation problem is converted to predicting the unobserved entries in the information adop-tion matrix R based on the observed entries and other fac-tors.

In our model, we suppose that whether a user adopts an item on social networks is determined by three aspects: (1) what X  X  the item (e.g. descriptive contents)? (2) what items does the user like? and (3) who are the senders? Let U  X  R k  X  M be the latent user feature matrix, V  X  R k  X  N be the latent item feature matrix. S  X  R M  X  M is the interpersonal influence matrix, with each entry S ij repre-senting the degree of influence user u i has on user u j .It should be noted that S ij &gt; 0 if and only if u i is the friend of u j in social network services such as Facebook and Renren, or is followed by u j in microbloggings such as Twitter and Tencent Weibo. G  X  R N  X  M is the item sender matrix, with entry G ij =1meaningthat u j sends the item p i and vice versa. With these denotations and the assumption that users can only receive items from their friends as social networks usually do ( G ii = 0), the social recommendation problem is to find out U , V , S so that (( SG ) ( U V )) can well approximate the observed entries in R without overfitting, where is the Hadamard Product.

In our case, we know the contents of items, user behaviors over the items, and the interactions between users. From these historical data, we can derive the item content repre-sentation, individual preference, and interpersonal influence. We compute the user-user preference similarity matrix W  X  R M  X  M , item-item content similarity matrix C  X  R N  X  N user-user interaction matrix F  X  R M  X  M as Though the accuracy of similarity matrices W and C de-pends on LDA performing on previous data, it is fair towards competing methods in experiments to share these matrices.
With the hypothesis that the similarities in observed s-paces are consistent with the latent spaces, we regularize the three latent spaces by observed matrices (social contextual factors) in that: (1) the users that are similar in hidden user space have similar preferences (derived from preference sim-ilarity matrix); (2) the items that are similar in hidden item space have similar descriptive contents (derived from con-tent similarity matrix); (3) high interpersonal influence in the hidden influence space generates frequent interpersonal interactions; (4) the product of user hidden space and item hidden space corresponds to the users X  individual preference on the items; (5) the product of interpersonal influence and individual preference is proportional to the probability of item adoptions.

As the model performance is evaluated by root mean square error (RMSE) on the test set, we adopt a probabilistic linear model with Gaussian observation noise as in [24]. Here we define the conditional distribution over the observed entries in R as:
P ( R | S , U , V , X  2 R )=
By incorporating the social contextual factors, we define the posterior distribution as where  X  denotes that zero-mean spherical Gaussian priors [28] are placed on latent feature vectors and observed ma-trices. Then Maximizing the posterior distribution is equivalent to mini-mizing the sum-of-squared errors function with hybrid quadrat-ic regularization terms: where  X  =  X  and || . || F is the Frobenius norm.

We can adopt a block coordinate descent scheme to solve the problem. That is, starting from some random initializa-tion on S , U , V , we solve each of them alternatively with the other two matrices fixed and proceed step by step until con-vergence. As the objective is obviously lower bounded by 0 and the alternating gradient search procesure will reduce it monotonically, the algorithm is guaranteed to be convergen-t. In this paper, we use the gradient search method to solve the problem. Specifically, the gradients of the objective with respect to the variables are
Thus, we apply the following gradient based approach on our social contextual model in Algorithm 1. J decreases the fastest in the direction of gradients during each iteration and the sequence ( J ( t ) ) converges to the desired minimum. Algorithm 1 Social Contextual Model Gradient Algorithm for t =1 , 2 ,  X  X  X  do end for
Our model can be applied in the real system to deal with incrementally increasing data. It has been proved both s-torage and computational efficient by solving the smoothly evolved factorized matrices in [29].
We collect data from Renren, a typical social networking service that enables users to put on their profiles and add friends. One of the most popular actions on Renren is shar-ing blogs, photos and external video links (denoted as items in the paper). After an item is shared by a user, the item will be sent to the user X  X  friends and appear in his friends X  pages in real time. We crawled relationships and shared items of nearly 1 million users from February 2007 to December 2009. The statistics of Renren dataset are summarized in Table 1.
Meanwhile, we crawled data from Tencent Weibo, which allows users to follow any other user and receive messages from those followed users. Like Twitter, it also empower-s users to spread information by forwarding the messages. We crawled tweets, retweets and user lists during January 2011 from more than 100 thousand users. The statistics of Tencent Weibo dataset are summarized in Table 2.
 In Figure 5, we show the characteristics of Renren and Tencent Weibo datasets by plotting curve (a) the number of users with respect to the number of shared or forwarded posts (calculated by i G ij for user u j ) and curve (b) the number of posts with respect to the number of users who share or forward them (calculated by j G ij for post p i ). We can see that all the four figures follow power law distri-butions, which reflect that user behaviors are always very sparse on social networks. Calculated with user number, item number and adoption number, the density of Renren dataset is 0.59%, and the density of Tencent Weibo dataset is 0.09%. The sparsity problem is very serious in our case.
We design our experiments based on two user tasks [9]: (1) annotation in context (2) find good items. The first task requires the recommender to generate predictions for the items that the user is reading. The second task requires a more direct focus on actual recommendation and provides users with a ranked list of recommended items, along with predictions for how much the users would like them.
Different from those static held-out experiments on dataset-s without time information, the recommendation on social items, e.g. tweets, should be evaluated in a temporal set-ting. For example, given an item and a user, the interper-sonal influence that the user receives at t 1 on the item may be different from that the user receives at a later time t new friends (or followers) share (or retweet) the item during the time t 2  X  t 1 . Moreover, as we do not have any informa-tion about when the user is online, we can not decide which items the user actually reads. Thus, here we use online ses-sions to represent the time when the user is online, and we suppose the user will read all the items received from his relationships during the online session time. Given a user, we randomly select a number of online session candidates with the session width being 15 items. And we select the candidates that include at least 2 adopted items as valid on-line sessions. Then based on the valid online sessions, we design the temporal social recommendation experiments as shown in Figure 6. We arbitrarily select a time to divide the dataset into the training and testing parts. Our model learns interpersonal influence matrix and latent features of users and items from the training set. Meanwhile, we gener-ate valid online sessions from the testing set as testing cases. Then we conduct all baseline algorithms and our method on these test cases. Although the estimation of online session cannot be guaranteed to be perfect, the experiment settings are fair for all the comparative algorithms and the proposed one. Thus, it is adequate to demonstrate the advantages and characteristics of the methods. Figure 5: Characteristics of Renren (a)(b) and Ten-cent Weibo (c)(d) Datasets
Figure 6: An Illustrator on Experiment Settings
We implement the following baselines for comparison with our social contextual model (Context MF).
Meanwhile, we implement different configurations of our model to demonstrate the effectiveness of our proposed al-gorithm.
Error Metrics: To measure the prediction quality of our proposed approach in comparison with other collabo-rative filtering and matrix factorization algorithms, we use two popular metrics, the Mean Absolute Error (MAE) and the Root Mean Square Error (RMSE). The metrics MAE is defined as where R ij denotes the information adoption value (0 or 1) given to j -th item by user u i . The metrics RMSE is defined as Therefore, a smaller MAE or RMSE value means a better performance.

Precision on Top K Recommendation: Precision is defined as the ratio of adopted items to number of item-s recommended. Precision represents the probability that a recommended item is adopted. Recommendation algorithms are often evaluated by Precision@K [26], which is more im-portant w.r.t. precision, because the recommendation space is limited and only the top k recommended items make sense in real recommendation applications. Here we range K value from 2 to 10.

Ranking Coefficients: Compared to the absolute value prediction accuracy, the predicted order accuracy is more important in real recommendation scenarios. Here we use two ranking-based evaluation methods to evaluate the per-formance: Kendall X  X  ranking coefficient  X   X  and Spearman X  X   X  They start by defining the following intuitive statistics: the number of ranking order switches, which means how many of the pairs in the test data are ordered incorrectly by the model.
 The weighted sum of order switches, which weighs the in-correct ordered pairs by the ranking difference: These two measures are transformed linearly into the range [-1,1], where 1 corresponds to perfect model performance (
T , R = 0) and -1 corresponds to making all possible errors, thus attaining perfect reverse ranking. Thus after we re-scale T and R , we have the non-parametric correlation prevalent data analysis tools:
T-test: An algorithm that gives higher probabilities on adopted items than refused items will better help the rec-ommender systems. In order to demonstrate the distinguish ability, for each method, a group of T-tests are conducted to compare numerical gaps between good recommendations and bad ones. When T is higher, the classification is more accurate on whether user adoption will happen or not.
Here we focus on parameter settings. We investigate the performance when the parameters change, and implement algorithms of our model and all baselines with these param-eters.

Tradeoff Parameters: The tradeoff parameters  X  ,  X  ,  X  ,  X  ,  X  and  X  in our model play the role of adjusting the strengths of different terms in the objective function Equa-tion (11). To balance the components in this function, these W and C into account (Table 1 and 2), we scan orders of magnitude and try different combinations of parameters as shown in Table 3. We use the second row for Renren dataset and the third row for Tencent Weibo dataset. Although they are not the perfect ones, the following experiments demon-strate they are adequate. We tune parameters following the same way as Context MF for Preference MF and Influence MF . We also find the best configurations while applying o-riginal versions of competing methods on our real datasets to make sure comparisons are fair.

Number of Hidden Features: We train U , V to find the proper number of hidden features k for users and items. If k is too small, the recommender system cannot make a distinction between any users or items. If k is too large, users and items will be too unique for the system to calculate their similarities and the complexity will considerably increase.
Thus, we conduct experiments with k ranging from 3 to 80 on both Renren and Tencent Weibo datasets. The results are shown in Figure 7, from which we can find that with the hidden feature number k increasing, RMSE reduces gradu-ally. It shows obviously that when k&gt; 60 on both datasets, RMSE decreases rather slow. Considering the recommen-dation effect and time efficiency, we choose k =60asthe latent space dimension in our experiments.

Number of Iterations: In Figure 8, we can observe that both RMSE and the objective function value J decrease Table 3: Tradeoff Parameters on Renren (a) and Tencent Weibo (b) Datasets (60 Hidden Features and 60 Iterations) Figure 7: RMSE vs. Hidden Feature Number on Renren (a) and Tencent Weibo (b) Datasets (60 It-erations) gradually with the number of iterations increasing. It shows that, by incorporating effective regularizers, our method suc-cessfully avoids the overfitting problem which often occurs in gradient algorithms. On both datasets, it is better to run 60 iterations in order to reach a converged result with an acceptable time cost.
We evaluate each algorithm with the accuracy measured as MAE, RMSE and ranking coefficients. As shown in Ta-ble 4, our social contextual model, which recommends items based on matrix factorization algorithm with social contex-tual factors, provides reasonably accurate recommendations that are much better than baselines. On Renren and Ten-cent Weibo datasets, we decrease the prediction error by 19.1% and 12.8% on MAE, by 24.2% and 20.7% on RMSE over SoReg , a state-of-the-art algorithm with social regular-ization.

It should be noted that Preference MF and Influence MF achieve better performance than SoRec , which demonstrates the effectiveness of introducing either individual preference or interpersonal influence. The large improvement margin achieved by Context MF over both Preference MF and In-fluence MF demonstrates the importance of incorporating complete contextual information from both individual and interpersonal sides for social recommendation. Moreover, the fact that our proposed Context MF performs better than SoReg proves the effectiveness of incorporating the two social contextual factors from users X  motivations on item adoption, instead of adding average-based or individual-based regular-ization to user latent vectors [21]. Figure 8: RMSE and Objective Function Value J vs. Iteration Number on Renren (a)(b) and Tencent Weibo (c)(d) Datasets (60 Hidden Features) Table 4: Recommendation Performance on Two Datasets (Renren and Tencent Weibo) FeedbackTrust [23] 0.3764 0.4684 0.5433 0.5469 Influence-based [10] 0.3859 0.4686 0.5394 0.5446 FeedbackTrust [23] 0.2830 0.3887 0.7094 0.7115 Influence-based [10] 0.2651 0.3813 0.7163 0.7275
We draw the precision curve on top K recommendation-s in Figure 9. The performance increases regularly as we decreases the size of recommended items. Compared with baselines, our top 5 precision increases by 21.7% and top 10 precision increases by 10.8% on Renren dataset. The top 5 precision increases by 12.3% and top 10 precision increases by 6.85% on Tencent Weibo dataset. The advantage of our method is much more obvious when K is small. As the user adoption behavior is very sparse, it is difficult to distinguish excellent methods when K is rather large. That X  X  why al-l the baseline algorithms tend to converge as K becomes larger.

To compare the distinguish-ability of our method with baselines, we report average and variance of prediction and T-test results in Table 5. Our model gives the highest T (1.78 and 1.26 times of the best baseline on Renren and Tencent Weibo datasets), which shows the social contextu-al model has better distinguish-ability compared with base-lines.

We conduct 100 parameter-fixed experiments to test the stability of our model with different random starts. As shown in Table 6, the low variances of MAE and RMSE (less than 0.001) show that our algorithm not only performs well on both social networking and microblogging datasets, but also runs without big fluctuation.
We conducted extensive experiments on two large real-world social network datasets, and showed that social con-textual information can greatly boost the performance of recommendation on these social network data. In particu-lar, we have gained increases of 24.2% and 20.7% in pre-diction accuracy and 21.7% and 12.3% in recommendation Precision@K upon previous approaches on these social net-works, respectively. Also, the proposed algorithm is general and can be easily adapted according to different real-world recommendation scenarios.
This work is supported by the Natural Science Founda-tion of China (No.60933013, No.61003097), 973 Program (No.2011CB302206), National Significant Science and Tech-nology Projects of China (No.2011ZX01042-001-002) and Table 5: T Statistics on Two Datasets (Renren and Tencent Weibo) FeedbackTrust [23] 0.3632(0.082) 0.343(0.080) 1.060 Influence-based [10] 0.6413(0.004) 0.5898(0.004) 1.087 Table 6: Stability of Performance on Renren and Tencent Weibo Datasets (60 Hidden Features and 60 Iterations) Tsinghua-Tencent Joint Lab for Internet Innovation Tech-nologies. [1] M. Balabanovic and Y. Shoham. Fab: content-based, [2] A. Bandura. Social cognitive theory of mass [3] L. S. Benjamin. Structural analysis of social behavior. [4] D. M. Blei, A. Y. Ng, and M. I. Jordan. Latent [5] R. Bond and P. B. Smith. Culture and conformity: a [6] Y. Chen and J. Canny. Recommending ephemeral [7] P. Cui, F. Wang, S. Liu, M. Ou, S. Yang, and L. Sun. [8] M. Harvey, M. J. Carman, I. Ruthven, and [9] J.L.Herlocker,J.A.Konstan,L.G.Terveen,and [10] J. Huang, X. Cheng, J. Guo, H. Shen, and K. Yang. [11] M. Jamali and M. Ester. Trustwalker: a random walk [12] D. Kong, C. Ding, and H. Huang. Robust nonnegative [13] Y. Koren. Factorization meets the neighborhood: a [14] Y. Koren. Collaborative filtering with temporal [15] Y. Koren, R. Bell, and C. Volinsky. Matrix [16] J. Leskovec, A. Singh, and J. Kleinberg. Patterns of [17] L. Liu, J. Tang, J. Han, M. Jiang, and S. Yang. Mining [18] N. N. Liu, M. Zhao, and Q. Yang. Probabilistic latent [19] Q.Liu,E.Chen,H.Xiong,C.Ding,andJ.Chen.
 [20] H. Ma, H. Yang, M. R. Lyu, and I. King. Sorec: Social [21] H. Ma, D. Zhou, C. Liu, M. R. Lyu, and I. King. [22] P. Massa and P. Avesani. Trust-aware recommender [23] S. Moghaddam, M. Jamali, M. Ester, and J. Habibi. [24] R. Salakhutdinov and A. Mnih. Probabilistic matrix [25] M. J. Salganik. Experimental study of inequality and [26] B. Sarwar, G. Karypis, J. Konstan, and J. Reidl. [27] L. Si and R. Jin. Unified filtering by combining [28] M. E. Tipping and C. M. Bishop. Probabilistic [29] F. Wang, H. Tong, and C.-Y. Lin. Towards [30] S.-H. Yang, B. Long, A. Smola, N. Sadagopan,
