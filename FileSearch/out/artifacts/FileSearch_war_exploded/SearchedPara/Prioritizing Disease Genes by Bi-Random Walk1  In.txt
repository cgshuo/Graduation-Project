 It is now well accepted that phenotypes are determined by genetic material under environmental influences. To understand the relation between disease phenotypes and genes, numerous genom ic studies on large patient cohorts such as genome-wide association studies [1][2] have been conducted to identify candidate disease genes, and in the past decade, the knowledge of determined disease phenotype-gene associations has been quickly accumulated in databases such as Online Mendelian Inheritance in Man (OMIM), a database of human genes and genetic disorders. Driven by the accumulated knowledge, random walk-based algorithms, which take the advantage of the availability of large phenotypic and molecular networks (Fig. 1), were proposed to utilize the disease modules and gene modules in the networks to prioritize disease genes [3][4][5][6][7][8][9]. The human disease phenotype network [10] provides information on phenotype similarities computed by text mining of the full text and clinical synopsis of the disease phenotypes in OMIM [11]. Large molecular networks such as the human protein-protein interaction network [12] [13] or functional linkage network [6] provide functional relations among genes. Based on the observation that genes associated with the same or related diseases tend to interac t with each other in the gene network and similar phenotypes tend to share the same disease genes, random walk provides an effective framework to explore the relations in the networks.
 covered paired associations with a decay f actor penalizing the number of steps. We investigated variants of BiRW by performing bi-random walk with balanced or unbalanced steps in the the PPI network and the phenotype similarity net-work, and evaluated the methods by experiments on OMIM data. The disease phenotype-gene associatio n network (or phenome-genome associa-tion network) is a heterogeneous network composed of a phenotype network, a gene network and the known phenotype-gene associations modeled by a bipartite phenotype network, the gene network and the association bipartite graph respec-tively, where m is the number of phenotypes and n is the number of genes. The objective is to predict the missing associations based on the heterogenous dis-ease phenotype-gene association network by reconstructing an association matrix R ( m  X  n ) . The magnitude of each R ij provides the degree of association between phenotype i and gene j . In the following, we first introduce the loss function for the learning problem and then the Bi-Random Walk algorithm (BiRW) that minimizes the cost function for learning R . 2.1 Loss Function Our assumption is that similar (or the same) phenotypes are more likely to share the same causal gene or causal genes that interact with each other. More specifi-cally, we assume that the predicted paired associations should form the following subgraph patterns: 1) the triangle with two phenotype nodes and one gene node following the assumption  X  X imilar phenotypes may share the same causal gene X , 2) the triangle with one phenotype node and two gene nodes following the as-sumption  X  X ausal genes of the same disease phenotype tend to interact X , and 3) the rectangle with two phenotype nodes and two gene nodes following the assumption  X  X enes associated with similar phenotypes tend to interact X . Based on the assumptions, we define the following loss function over R , where P  X  G is the Kronecker product of P and G .Each P  X  G ( i,u ) , ( j,v ) is 1if P i,j =1and G u,v = 1, in other words phenotype i and j are neighbors and gene u and v are also neighbors, and otherwise 0. In this loss function, the first term enforces a smoothness on R where phenotypes ( i, j ) and gene ( u, v ) should form paired associations with phenotype i aligned with gene u and phenotype j aligned with gene v when ( i, j ) are neighbors and ( u, v )arealso neighbors. The second term uses prior knowledge A as a regularization term. The trade-off between these two competin g constraints is controlled by a positive parameter  X   X  (0 , 1]. Intuitively, the cost function in equation (1) evaluates that by associating a phenotype and a gene in R , how many paired associations are curated. The interpretation is closely related to global network alignment algorithms that were applied to align protein-protein interaction networks across species [14][15][16][17][18]. Since the first term is actually a quadratic term of the elements in R with Hessian D  X  ( P  X  G ), the Laplacian of graph P  X  G ,the loss function can be rewritten as the following quadratic function, where matrix with the row sum of P  X  G as the diagonal entries. 2.2 Bi-Random Walk To minimize the loss function in equation (1), a straightforward method is to apply random walk with restart on the Kronecker product matrix P  X  G .Since P  X  G is ( m  X  n )by( m  X  n ), this approach does not scale to the large network. We propose a bi-random walk strategy (BiRW), which performs random walk on the phenotype network and the gene network simultaneously. BiRW aims to maximize the number of paired associations by bi-random walk on both phe-notype network and gene network to evaluate potential candidate associations (Fig. 2). By iteratively extending the phenotype path and the gene path (achieved by multiplying P on the left and G on the right in each step), the algorithm eval-uates each candidate association by the number of closed loops weighted by a decay factor  X   X  (0 , 1). The decay factor down-weights the importance of newly formed loops as the number of random wal k steps is getting larger. Here, the network, the gene network and the associ ation network. In the first step, each element ( P  X  A  X  G ) ( i,j ) represents the number of paired associations obtained by connecting a target phenotype i to a candidate gene j with phenotype or gene paths length 1. If we ignore the decay factor for now, more generally, after t steps of multiplication P... ( P  X  ( P  X  A  X  G )  X  G ) ...G = P t  X  A  X  G t , the loop patterns curatedwithupto t steps of random walks can be evaluated. To achieve the best solution R ( m  X  n ) , we formulated the problem as R = P  X  R  X  G , assuming P is column-normalized, G is row-normalized, and the elements in R add to 1. P  X  R  X  G can be rewritten in a vector form P  X  G same as a random walk on the Markov matrix P  X  G . Thus, applying bi-random walk is identical to using power method to find the stationary distribution of P  X  G . Note that the idea is also similar to a normalized and relaxed version of regular graph-matching methods [17], which maximize the number of matched edges in two graphs (the phenotype network and the gene network). In addition, the known OMIM associations A normalized the same as R is introduced as priori knowledge. The complete form of the model is as follows, The decay factor  X  also plays the role to balance the objective of closed loops for evaluating candidate associations and the consistence with the known associa-tions in A . This equation can be solved by iteratively updating R by calculating the right side of the equation (2) with the current R . The process also con-verges to a unique solution [18]. Candidate associations can then be selected by the magnitude of the scores in R . Essentially, this algorithm is mathematically equivalent to the label propagation algorithm in [19], and it was shown that the algorithm minimizes the cost function in equation (1). 2.3 Unbalanced Bi-Random Walk As illustrated in Fig. 2, the steps to walk on the phenotype network and the gene network explicitly summarize the closed loops in the previous step. The-oretically, the random walk in the two directions will eventually converge to a stationary distribution as the unique solution. However, since only the closed loops of smaller path lengths are informative for predicting associations, exces-sively counting loops obtained by a large number of random walk steps could introduce false positives. Moreover, the phenotype similarity network and the gene network contain different topologies and structures, and thus, the optimal number of random walk steps might be different on the two networks. To ad-dress the problem, we restrict the number of random walk steps on the two sides by introducing two additional parameters l and r as the numbers of maximal iterations in the following left/right random walk on the networks, Left Walk and Right Walk could be applied alternatively to introduce additional steps in either phenotype network or gene network. The new formula does not converge as equation 2 to a closed-form but it carries the same interpretation that each left or right walk extends either the phenotype path length or the gene path length. Empirically, l , r and  X  are the parameters tuned by cross-validation on the training data. 2.4 BiRW Algorithms Given phenotype network P , gene network G , and the phenotype-gene associa-where D P is a diagonal matrix with diagonal elements D Pii = j P ij ,and  X  G is the same normalized from G . Depending on the arrangement of the left/right walk, we consider three variations of BiRW.
 BiRW bl: This algorithm exactly implements the balanced BiRW given in equation (2), and computes the closed-form solution of equation (1). BiRW avg: This algorithm implements the unbalanced BiRW with the aver-aged output from the left walk and the right walk in each step.
 In the algorithm,  X  t  X  x is 1 if t  X  x and 0 otherwise.
 BiRW seq: This algorithm implements the unbalanced BiRW with sequential walk with left walk followed by right walk in each step.
 In this section, we compare BiRW with the other random walk or label prop-agation algorithms for disease gene prioritization [4][6][7][8][9]. For example, PRINCE performs label propagation on the PPI network to prioritize disease genes [8]. The initial probabilities on the gene nodes are normalized from the causative genes of the nearest neighbors of the query phenotype p chosen by a logistic function. The initial scores are propagated in the stochastic matrix nor-malized from the PPI network. After convergence, the unique solution of label propagation is used to rank the genes. RWRH [9] runs the same label propaga-tion algorithm on the combined heterogeneous network of all the three networks to rank genes for a query phenotype. MINProp [7] is based on a principled way to integrate three networks in an optimization framework and performs iterative la-bel propagation on each individual subnetwor k. These disease gene prioritization algorithms rank genes based on their predicted association against a particular query phenotype while BiRW is a global approach which identifies the missing associations of all the phenotypes simultaneously. Thus, conceptually, BiRW is a phenome-genome approach while the other algorithms are phenotype-wise ap-proaches, none of which explores the relation between the predicted associations across the phenotypes. To illustrate the difference between BiRW and the other methods, we compared the initialization and the random walk steps of the al-gorithms in Table 1. The first difference is that these methods learn with the structure of different networks. Rando m Walk, Diffusion Kernel and PRINCE perform random walk only on the PPI network combined with the direct neigh-bors inferred from the phenotype network and the known associations. RWRH and MINProp perform random walk on the complete heterogenous phenome-genome association network. BiRW performs random walk on the Kronecker product graph of the phenotype network and the gene network in the balanced case or on the phenotype network and the gene network separately in the un-balanced case.

Another mathematical difference betw een BiRW and the other algorithms lies in the formulation of using the known associations in A .PRINCEusestheknown associations to decide an initial set of genes that are associated with a query phenotype. RWRH and MINProp directly use A as part of the large network for random walk. BiRW treats R as the target variable and the known association A as a regularization of R ,intuitively,because A is only partially known and most of the zero entries of A are  X  X nknown X  instead of  X  X o association X . Thus, using A as a regularization instead of directly as part of the network for graph structure-based learning is probably a more rigorous modeling because the incompleteness of the bipartite network might mislead the random walk. BiRW was compared to CIPHER [5], PRINCE [8] and RWRH [9], three of the best performing algorithms for disease gene prioritization, by 100-fold cross-validation and testing of an independent holdout set with OMIM data. We also compared the three variants of BiRW, BiRW avg (default for BiRW), BiRW seq and BiRW bl, with similar experiments. 4.1 Data Preparation The disease phenotype network is an undi rected graph with 5080 vertices repre-senting OMIM disease phenotypes, and edges weighted in [0 , 1]. The edge weights measure the similarity between two phenotypes by their overlap in the text and the clinical synopsis in OMIM records, calculated by text mining [10]. The disease-gene associations are represented by an undirected bipartite graph with edges connecting phenotype nodes with their causative gene nodes. Two versions (May-2007 Version and May-2010 Version) of OMIM associations were used in the experiments. May-2007 Version contains 1393 associations between 1126 dis-ease phenotypes and 916 genes, and May-2010 Version contains 2469 associations between 1786 disease phenotypes and 1636 genes. Human protein-protein inter-action (PPI) network was obtained from HPRD [12]. The PPI network contains 34,364 curated binary interactions between 8919 genes. 4.2 Comparison with Other Methods Since the disease gene prioritization algorithms rank genes based on their pre-dicted association against a particular query phenotype, to make a reasonable comparison with CIPHER [5], PRINCE [8] and RWRH [9], the three algorithms were applied to predict the disease genes for each phenotype and the predictions are compared with the results of BiRW phenotype-wise. In the experiment, a disease phenotype was used as a query by an algorithm to rank the genes by their association scores against the query phenotype. For PRINCE and BiRW, the phenotype similarity network was transformed by a logistic function [8]. For all the methods, a 100-fold cross-validation on the OMIM May-2007 Version was performed for parameter tuning, and then the methods were applied to predict the associations in an independent set of associations added into OMIM between May-2007 and May-2010. There are 1126 disease phenotypes with at least one known causal gene in OMIM version May-2007. In the 100-fold cross-validation, the 1126 disease phe-notypes were randomly divided into 100 subsets. In each cross-validation trial, the OMIM associations of the 1% disease phenotypes in a subset were removed, and then used as queries to rank the candidate genes. The hyper-parameters  X  for both PRINCE and BiRW were chosen from { 0 . 1 , 0 . 2 , ..., 0 . 9 } ,and l and r were taken to be between 1 step to 5 steps. The three hyper-parameters of RWRH are set to be the optimal parameters (0 . 5 , 0 . 7 , 0 . 5) suggested by the experiments in [9]. The test set contains new associations of 518 phenotypes in OMIM May-2010 Version. ROC score (Area Under the Curve of Receiver Operating Characteris-tic) was used as the global performance measure. The higher the target genes of a query phenotype in the ranking, the better the performance. Specifically, for each phenotype query, the target genes we re labeled as positives and the other genes were labeled as negatives. AUCs were computed by the positions of the positives in the ranking list. We reported the AUC with up to 50, 100 and 300 false positives since the top part of AUC is more important.

The results produced by the best param eters in the cross-validation of each method is reported in Fig. 3A ( l =4, r =4and  X  =0 . 8 for BiRW and  X  =0 . 1 for PRINCE). To make a comprehensive comparison, we plot the number of phenotype queries with a AUC higher than a certain threshold in the plots. The BiRW algorithm performed the best. Out of the 1126 phenotypes, BiRW ranked around 55% in top 50 and 63% in top 500. PRINCE also gave decent prediction performance although BiRW consistently outperformed PRINCE in all the measures. RWRH, CIPHER DN (direct neighbor) and SP (shortest path) produced inferior results in this exper iment. The possible reason for the worse results of CIPHER might be because the associations of the test phenotypes were all removed (called ab initio experiment) and each cro ss-validation held out a significant number of known associations . Thus, no direct neighbors were avail-able for the correlation calculation for many phenotype queries by CHPHER. PRINCE, RWRH and BiRW worked much better than CIPHER SP and CI-PHER DN because label propagation and bi-random walk both explore more global information of the networks. We also measured the statistical significance of the difference in AUC 50 and AUC 100 by paired t -test. The p -values are re-ported in Table 2. Clearly, BiRW performs significantly better than all other methods at the significance level 0 . 05. 4.3 Comparison of BiRW Variants To understand the effect of combining left walk and right walk with different strategies, we compared BiRW avg, BiRW seq and BiRW bl with the same ex-periments on OMIM data. The results are reported in Table 3. BiRW avg and BiRW seq, which perform random walk with a limited number steps, performed significantly better than BiRW bl, which performs random walk till the conver-gence to the stationary distribution. The observation partially agrees with the results by [20] [21], which showed that genes within two-steps are more func-tional cohesion in the PPI network. When the random-walk steps are above 2 in the gene network, results are very c lose to optimal as long as the number of steps in the phenotype network is properly chosen. Since the results depends on the random-walks in two networks and the decay factor, we found that it is better to treat the steps as parameters as in BiRW avg and BiRW seq. It is also interesting that BiRW avg performed consta ntly better than BiRW seq although the difference is only marginal. We suspect that there might be a bias in choosing the order of left walk and right walk when BiRW seq performs se-quential random walks, and the bias might be data dependent. In BiRW avg, there is no ambiguity in the order of the bi-random walk and thus, there might be less variation expected in different data. In the paper, we introduced a bi-random walk algorithm (BiRW) for disease gene prioritization. We analyzed the algorithm by comparison with other random walk algorithms for disease gene prioritization with both algorithmic analysis and empirical experiments. We concluded that BiRW is an effective algorithm for disease gene prioritization and the steps of random walks play a crucial role in the performance of the algorithms. In future, we plan to explore other variations of BiRW to more effectively utilize the hidden information in the networks. Acknowledgement. This work is supported in part by grant III 1117153 from National Science Foundation.

