 The rapidly increasing RDF data in the Linked Open Data (LOD) community project is a valuable resource for obtaining domain knowledge. However, RDF data of specific topics also shows a trend of being more decentralized and fragmented, which makes it difficult and inef fi cient for the users to get an overview of a spe-demonstrate a novel system called KFM, which can aggregate the distributed RDF data of a topic according to the facets of this topic. KFM provides a new way fo r users to obtain and explore domain knowledge in the LOD cloud. H.3.5 [ On-line Information Services ]: Web-based services; H.3.3 [ Information Search and Retrieval ]: Clustering; Algorithms, Management, Design RDF, linked open data, data fusion, domain knowledge As of September 2011, Linked Op en Data (LOD) contains 295 datasets with more than 31 billion RDF triples from a variety of domains 1 . A plethora of valuable information regarding domain knowledge can be found within these data sets. But RDF data of specific topics also shows a steady trend of being more decentral-ized and fragmented. More specifically, when searching a specific topic via the traditional semantic s earch engine, the results usually distribute across a large number of datasets which are rather loosely connected. The RDF data in each dataset only covers a few facets (a facet in this study means an aspect or dimension) of the topic. We call this the RDF data fragmentation problem. For instance, when searching k-means in Sindice[3], about 800 RDF documents, which contain a bout 63,000 RDF triples will be returned (as of June 23th, 2014) . However, these RDF data are and daunting list. Furthermore, information about k-means in each result item includes different facets and is incomplete. For exam-whereas some only contain the references about k-means . RDF data fragmentation problem makes it dif fi cult for the users to desired information. To solve this RDF data fragmentation prob-lem, we present a novel system called KFM (Knowledge Fusion Map) 2 in this demonstration. KFM fuses the distributed RDF data according to the topic X  X  different facets, and provides an intuitive and visual presentation for users. This differs from the traditional semantic search engine and provi des a new way for users to ex-plore the domain knowledge over the LOD. Figure 2 shows the fusion result of k-means . KFM tries to solve three problems:  X  How to determine what facets a given topic has so that we can generate a complete fusion result?  X  How to fuse the extracted RDF data to the topic X  X  different facets?  X  How to organize and visualize the fusion results to users? The rest of this demonstration is organized as follows. Section 2 introduces several concepts about KFM. Section 3 shows the ar-chitecture of KFM and explains important technical issues. Sec-tion 4 demonstrates how KFM offe rs a new visual way for users to obtain domain knowledge and re ports the preliminary results on three domains. Section 5 summari zes the conclusions of this demonstration. The important concepts in KFM include: The LOD cloud diagram: http://lod-cloud.net/ http://kfm.skyclass.net Topic-specific RDF Graph: The RDF data about a specific topic is a collection of RDF triples . Each RDF triple consists of a subject, a predicate, and an object. can also be represented as a graph, called topic-speci fi c RDF graph (TRG). TRG can be formally defined as . refers to the vertices in the graph, it is a set of subjects or objects; represents a Facet Template: The RDF data of a specific topic often contains of k-means ) which summarizes the meaning of RDF data it repre-sents. A facet template describes the facets of a topic and can be formally defined as , where denotes a label to represent a topic X  X  facet. With an example shown in Figure 1, the facet template of k-means is { Reference , Same as , Feature , Over-view , Algorithm step , See also , Type , Application }. Knowledge Fusion Map: A knowledge fusion map is the fusion result for a given topic , which can be formally defined as to the related facet and satisfy , . For a certain domain, KFM gene rates knowledge fusion maps for specific topics by employing a three-module framework, as shown in Figure 2. from DBpedia 3 and Wikpedia 4 . Module II crawls RDF data of a specific topic from LOD and fuses them based on two topological properties of TRG. Module III assigns fused RDF da ta to corresponding facets and generates a knowledge fusion map. Similar topics usually have similar facets. For example, k-means and k-medoid are algorithms in Data mining . They have common facets such as Algorithm step , Feature, Application . So generating facet template can be divided into two subtasks: clustering topics and generating facet labels for every cluster. To generate topic clusters, KFM uses DBpedia as the initial da-taset because DBpedia encompasses numerous domains and al-most any topic can be found there. Each topic corresponds to an http://wiki.dbpedia.org/Datasets http://en.wikipedia.org/ RDF entity in DBpedia (in this section, we use the term of topic and entity interchangeably). By analyzing the RDF entities, we find two features that can be used for clustering: predicate simi-larity and category relatedness .
 Predicate Similarity: Similar RDF entities in DBpedia usually have similar predicates. KFM compresses the predicates of each entity into a bag of words and re presents each entity with a word vector based on TF-IDF[1]. The predicate similarity of two entities , can be further defined as the cosine of the angle between the two vectors. Category Relatedness: Each RDF entity usually links to an arbi-trary number of categories. Categories in DBpedia are connected by skos:broader relations ( X  X -type-of X  relationship) ple, Array is skos:broader of Data structure . Given two RDF entities and , KFM determines the category relatedness value the topological properties of category graph. With these two features, the si milarity between RDF entity and can be defined as: where is an empirical value. KFM us es the similarity to cluster the entities with an agglomerative hierarchical clustering algo-rithm. Preliminary result using 6 datasets shows that KFM achieves a best average clustering precision of 89.6% at a recall of 84.7% when is set to 0.3. To generate facet labels, we find each DBpedia entity contains an RDF triple to link its article in Wikipedia. The Contents table and Infobox in a Wikipedia article provide a set of facet labels for the topic. These candidate labels have two problems, schema duplica-tion and sparsity. As an example of schema duplication, abstract and overview are used to describe the same meaning of a facet. Sparsity means many labels are used very rarely. KFM currently template from Wikipedia articles. We find that two topological properties of TRG serve as the foun-dation in the module II, namely homogeneity of adjacent vertices and homogeneity of similar predicate vertices . Homogeneity of adjacent vertices: By scrutinizing the degree distribution of the TRGs, we find that the average degree is between 2 and 3.5. Around 98% of the vertices in each TRG are isolated. This indicates that a TRG is a highly-sparse graph. We find that two connected vertices are very likely belonging to links in a TRG. Homogeneity of similar predicate vertices: We also find that the Jaccard similarity score between two vertices is associated with the facet of the topic. The similarity score of vertices and , can be computed based on their shared predicates as follows. http://www.w3.org/2009/08/skos-reference/skos.html#broader where and are the sets of predicates for vertices and . represents the set of common predicates/objects shared by and . By analyzing the similarity of any two dis-tinct vertices in each TRG from six different domains, we find that the probability of two vertices belonging to the same facet increases with their similarity. It indicates that the higher the simi-larity, the more likely the two vertices belong to the same facet. For a specific topic, the procedure of fusing RDF data includes: (1)KFM uses LDSpider[2] to craw l its RDF data returned by Sin-dice; (2)KFM generates a set of fused facets by leveraging the homogeneity of similar predicate vertices ; (3)KFM merges these facets based on the homogeneity of adjacent vertices , and outputs the final fused RDF data. The fused RDF data generated by Module II are not correspond-ing to the facet labels of the facet template. So KFM automatical-ly assigns these fused results to the template items and generates a knowledge fusion map. This can be seen as a multi-class classifi-cation problem. Inspired by [4], KFM automatically extracts the RDF data from DBpedia entity, their corresponding faceted labels from Wikipe-dia and heuristically labels th e training sets. This makes KFM robust to domain changes. The predicate, the part of speech tags of the objects, and the labels of da ta source are utilized as features for classification. KFM employ s a Maximum Entropy Model as the classifier, which is suitable for multi-class classification. The data model of a knowledge fusion map is a hierarchical tree edges with facet labels between the topic and corresponding RDF data. With this model, knowledge fusion maps can be easily pre-sented by XML or Jason data on the Web. KFM is implemented as a Java Web application. It allows users to search their interested topics via a Web-based interface. To visu-alize the knowledge fusion map, JavaScript InfoVis Toolkit open-source tool for creating interactive data visualizations on the Web) is incorporated into KFM. We also designed a new layout algorithm so that the knowledge fusion map looks more reasona-ble and intuitive. http://philogb.github.io/jit/ A screenshot of the UI is shown in Figure 3, when the search button is clicked, a knowledge fusion map will be shown in the left panel. The topic is represented by the central node. Its sub-nodes indicate the facets of the topic, and are represented as rounded rectangles. Rectangles following the rounded rectangles contain the corresponding knowledge. The right panel contains some related topics of the searching topic. By experimenting in three dom ains, KFM has constructed 13 knowledge fusion maps, as shown in Table 1. All RDF data about topics is crawled by LDspider . The knowledge fusion maps are updated dynamically. To solve the RDF data fragmentation problem, we have devel-oped a novel system KFM, which automatically generates facet templates for domain topics and fuses RDF data by leveraging topological properties of TRG. KFM not only helps users get a thorough understanding about a specific topic, but it also provides an effective way of facet navigation for topics in LOD. In the future, we will improve the search model over knowledge fusion maps so that KFM can support more functions, such as facet searching and question answering. The research was supported in part by the National High-Tech R&amp;D Program of China under Grant No. 2012AA011003, the National Science Foundation of China under Grant Nos. 61221063, 61173112, the National Ke y Technologies R&amp;D Pro-gram of China under Grant No. 2013BAK09B01, the Doctoral Fund of Ministry of Education of China under Grant No. 20130201130002, the Ministry of Education Innovation Research Team under Grant No. IRT13035. [1] B lei , D.M., N g , A.Y., and J ordan , M.I., 2003. Latent dirichlet [2] Isele, R., Umbrich, J., Bizer, C., and Harth, A., 2010. [3] Tummarello, G., Delbru, R., and Oren, E., 2007. Sindice. [4] Wu, F., Weld, D.S., 2007. Autonomously semantifying [5] Zesch, T., Gurevych, I., 2007. Analysis of the Wikipedia 
