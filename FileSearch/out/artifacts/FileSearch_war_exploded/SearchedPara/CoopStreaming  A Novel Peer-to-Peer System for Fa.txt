 Multimedia streaming over the Internet is booming nowadays. However, the steaming Internet model of point-to-point unicast communication is not enough. So the net-working research community proposed IP multicast, a network layer service that allows a single source to distribute a data stream to many simultaneous receivers in an efficient manner. However, this network layer approach has met with limited success protocols for reliability and congestion control. In this work, we design CoopStreaming (Cooperative Streaming), which is a novel P2P live media streaming system. Compared with the existed systems [2], Coop-Streaming has many new features. First, it adopts many technologies that BitTorrent width control which adopts a measurement-based optimization techniques for band-width-demanding[3]. Three, CoopStreaming uses C/S method to organize nodes, and good combination point between C/S mode and P2P mode. In this section, we give a brief overview of the existing P2P streaming systems. A. Fixed-topology Protocols and Systems pology for distribution media streaming. This method usually constructs and main-quent breaks in the highly dynamic Internet. B. Non-topology Protocols and Systems and random selecting. In the former, it uses different look-up algorithms to select the Such protocols include CAN [9], Chord [10], and Pastry [11]. They locate the peers in limited steps. This kind of system includes CFS [12] and PAST [13]. In the latter, the random selecting algorithm can give a better robust and adaptive. CoolStreaming [14] is a representative system. It uses gossip-based protocol [15], and can achieve a simi-QoS. Then CoopStreaming solves the problem. In CoopStreaming, P2P mode is the comple ment of traditional C/S mode, not to in-stead of it. Every peer maintains a t PartnerLis . Specially, the server is the partner node of all the peers. Every peer exchanges its Buffer Map (BM) information with its control information, real lines present the tr ansferring of the media data. Peer2, Peer3, these non-fixed partners. The node schedule policies are as follows: 3.1.1 Architecture The client includes two modules: Data Receive and Node Service . Node Service Module manages distributing media data. Data Receive Module manages receiving media data from other peers. Its functions are as follows: 
Also there are a network monitoring module which feedbacks the real-time band-width and a QoS controlling module which dynamically adjusts the QoS of users. 3.1.2 Partner Manage and Optimize server as its new partners. There are two reasons: 1) The nodes in the network overlay are very unstable. Once detecting that some 2) A good partner should have a higher uploading bandwidth and the physical 3.1.3 Data Scheduling Strategy node and its partners, how to fast get media from partners. The scheduling algorithm adopt some principles as follows: 1) Low Layer First : The low layer data must be transferred first. It X  X  because the 2) Rare First : In the network overlay, a segment X  X  providers are more less, it 3) Random First segment : An exception to rare first is when the new node just 3.1.4 QoS Control tecting, client will quit the current top layer. Congestion detect uses the Ratio of Miss (
R M ) as the criterion, viz. the ratio of non-receiving data in a period of time. We use Matlab for simulation, and we use GT-ITM [16] to generate a transit-stub randomly located in the cubic. In this model, we can control the topology maps with different parameters, and randomly select the partners in a 2-D Euclidean space. 
We compare our system with tree-based model and gossip-based model. A tree-based model has several hierarchies. A gossip-based model uses a predigested group and video quality of our model are a little better than the upper two models. This paper presents the design of CoopStreaming. It has the advantage of both admin-istrative management and peer-to-peer system, and composes a efficient system for fast live media streaming. Our extension experiment proves that our design and im-plement can get a better effect than some current existed protocols and algorithm. 
In the future work, CoopStreaming will refer to video-on-demand (VoD) and sup-port VCR-like operations, such as Pause, Resume and Seek. Now CoopStreaming is system, every user starts at different time. So it may need larger buffers in hard disk. Also we will study the P2P Streaming technology in wireless environment. 1. Bram Cohen: Incentives Build Robustness in BitTorrent. First Workshop on Econom-14. X. Zhang, J. Liu, B. Li, and T.-SP Yum: CoolStreaming/DONet: A Data-driven 
