 Recently, some recommendation methods try to relieve the data sparsity problem of Collaborative Filtering by exploit-ing data from users X  multiple types of behaviors. Howev-er, most of the exist methods mainly consider to model the correlation between different behaviors and ignore the heterogeneity of them, which may make improper informa-tion transferred and harm the recommendation results. To address this problem, we propose a novel recommendation model, named Group Latent Factor Model (GLFM), which attempts to learn a factorization of latent factor space in-to subspaces that are shared across multiple behaviors and subspaces that are specific to each type of behaviors. Thus, the correlation and heterogeneity of multiple behaviors can be modeled by these shared and specific latent factors. Ex-periments on the real-world dataset demonstrate that our model can integrate users X  multiple types of behaviors into recommendation better.
 H.3.3 [ Information Search and Retrieval ]: Information filtering Recommender Systems; Matrix Factorization
In the past decade, Collaborative Filtering (CF) has be-come one of the most popular techniques for recommender systems, which makes predictions by mining users X  histori-cal behaviors on items. In particular, Matrix Factorization (MF) models [6, 2] have become dominant in current CF methods. MF methods learn low-dimensional latent factor vectors of users and items to represent their characteristics, and predictions are made by the inner product of them. Tra-ditionally, CF methods are designed to deal with single type of user behavior at a time. However, the behavioral data is typically very sparse, that is, most users have interacted with a very few items. It is indeed hard for CF methods including MF to make accurate recommendations with such insufficient data.

To address the data sparsity problems, some works have been proposed to exploit users X  multiple types of behaviors for recommendation [1, 7, 4]. As we know, with the preva-lence of massive web applications, users often have various types of behaviors on the web, varying from rating movies, listening music, to making friends. Considering simultane-ously multiple behaviors of a user offers us more informa-tion to model the user X  X  taste better. The most widely used method addressing this issue is Collective Matrix Factoriza-tion (CMF) [7], which decomposes the rating matrices for different types of user behaviors jointly by sharing the same user latent factor matrix across different behaviors. That is, in CMF a user is characterized by the same latent factor vector across different behaviors. Through these shared us-er latent factors, CMF aims to transfer information between different behaviors to improve the recommendation results. Inspired by the idea of CMF, some following works [5, 8, 3] have demonstrated that better predictions can be achieved by sharing the same user latent factors across multiple types of behaviors.

However, the CMF ignores the heterogeneity of different behaviors. When characterizing a user by the same latent factor vector across different behaviors, the underlying as-sumption is that user X  X  taste should be the same when she/he conducts different behaviors. This is too strict to be real-istic. For example, a user X  X  taste on music may be quite different from her/his taste on movie. When users conduct different types of behaviors, there should exist some correla-tions between behaviors as well as some specific character-istics for each type of behaviors. Nevertheless, traditional methods like CMF mainly consider to model the correlation of different behaviors but neglect the heterogeneity of them, which could not effectively model the characteristics of a us-er on various behaviors and may make improper information transferred to harm the recommendation results.

In this paper, we propose to integrate multiple types of user behaviors into recommendation effectively by modeling both the correlation and heterogeneity of them. Particular-ly, we present a novel recommendation model, named Group Latent Factor Model (GLFM), which attempts to learn a factorization of the latent factor space into subspaces that are shared across multiple behaviors and subspaces that are specific to each type of behaviors. In GLFM, when user conducts different types of behaviors, she/he is character-iz ed by different latent factor vectors, among which, some dimensions are shared by multiple types of behaviors while the others are specific for certain behavior. Thus, the corre-lation and heterogeneity of multiple behaviors can be mod-eled by these shared and specific latent factors. Experiments show that our method can achieve better recommendation results than other state-of-the-art methods.
Suppose that we have a set of n users U = { u 1 ;  X  X  X  ; u and their B types of behavior records. Each type of user behavior demonstrating her/his opinions on a kind of items can be regarded as ratings (binary or real values), thus we have B rating matrices for different behaviors, denoted as {
R 1 ;  X  X  X  ; R B } , where R b = [ R b ij ] n m b denotes the rating matrix for the b -th type of behavior. R b ij denotes the rating of u i on item v b j , v b j denotes the j -th item in the b -th type of behavior, m b is the number of items belong to the b -th type. Our goal is to predict the missing values in each behavior matrix R b ( b = 1 ;  X  X  X  ; B ) by effectively exploiting the observed data from users X  multiple types of behaviors.
We formulate our problem on the basis of Matrix Fac-torization [6], which learns latent factors of the users and the items to characterize them. In our cases, for each user we have her/his multiple types of behavior records, leading to multiple rating matrices with the same user dimension. To correctly account for the correlation and heterogeneity of different behaviors, we cast the problem as finding a fac-torization of the latent factor space into subspaces that are shared across multiple behaviors and subspaces that are spe-cific to each type of behaviors.

Let U 0  X  R K s n denote the user latent factor matrix shared among different behaviors, with each column U 0 i rep-resenting the shared latent factor vector for user u i . K the number of the shared factors. For the b -th type of be-haviors, let U b  X  R K b n denote the behavior-specific user latent factor matrix, with each column U b i representing the behavior-specific latent factor vector for user u i . K b number of the specific factors for the b -th type of behaviors. As shown in Figure 1, when user u i conducts the b -th be-haviors, she/he is modeled by  X  U b i = [ U 0 i ; U b i ] which consists of both the shared and the behavior-specific latent factors. We denote  X  U b  X  R ( K s + K b ) n to be the b -th user latent factor matrix with each column as  X  U b i , thus we have  X  U b = [ U 0 ; U b ].

For items belong to the b -th type, we let V b  X  R ( K s + K denote the item latent factor matrix, with each column V b representing the latent factor vector for item v b j . We denote V j = [ D b j ; P b j ], where D b j latent factor space of U 0 i and P b j  X  R K b 1 corresponds to the behavior-specific latent factor space of U b i . Thus, the ratings of user u i on item v b j can be predicted as:  X 
Thus, given users X  B types of behavior records { R 1 ;  X  X  X  R
B } , we learn {  X  U b } B b =1 and { V b } B b =1 by minimizing the following objective function: user item Fi gure 1: In GLFM, user u i is modeled by  X  U b i = [ U when she/he conducts the b -th behavior, where U 0 i is shared across multiple behaviors and U b i is specific for the b -th be-havior. v b j , the j -th item belongs to the b -th type, is modeled space of U 0 i and P b j corresponds to that of U b i .
L =  X  =  X  + ( B In Eq.(2), the first term measures the quality of the approx-imation of the predicted ratings to the observed ratings in multiple types of user behaviors by squared error, where I is the indicator function which is equal to 1 if the user u rated the item v b j and is 0 otherwise. In the second term,  X  X  X  X  F is the Frobenius regularization norm which is used to avoid over-fitting. Parameter controls the strength of the regularization term.

Notice that, traditional MF can be viewed as a special case of our model by restricting the number of shared latent factors K s = 0; CMF can be viewed as a special case of our model by restricting the number of behavior-specific latent factors K b = 0.
Eq.(2) is convex with respect to one of the variables U 0 U 1 ;  X  X  X  ; U B ; V 1 ;  X  X  X  ; V B when the others are fixed. Thus, we apply an alternating optimization to solve the problem, alternatingly.

Optimizing U 0 , when { U b } B b =1 and { V b } B b =1 fixed: U can be obtained by solving following optimization problem, where E 0 is a K s  X  K s identity matrix. A lgorithm 1 Optimization Algorithm for GLFM 2: Repeat 4: for b = 1 to B do 6: end for 7: for b = 1 to B do 9: end for 10: Until convergence and { V b } B b =1 are fixed, the constraints are independent on each U b ( b = 1 ;  X  X  X  ; B ), suggesting that we can optimize each U b separately. U b can be obtained by solving following problem, where E b is a K b  X  K b identity matrix.
 optimize each V b separately by solving following problem: where E sb is a ( K s + K b )  X  ( K s + K b ) identity matrix.
The detailed optimization algorithm is described in Al-gorithm 1. Note that, the number of behavior-specific la-tent factors K b can be different for different behaviors. In order to reduce the model complexity, we set all the K b ( b = 1 ;  X  X  X  ; B ) the same in our experiments.
Datasets : To evaluate our model X  X  recommendation qual-ity, we crawled the dataset from the publicly available web-site Douban 1 , where users can provide their ratings for movie, books and music, as well as establish social relations with others. Thus, we have four types of user behaviors here. To have sufficient observations to be split in various proportions of training and testing data for our evaluation, we filtered h ttp://www.douban.com out users who have rated less than 10 books, or 10 movie, or 10 music, and then removed users without social relation-ships with others. Retrieving all items rated by the selected users, we have a dataset containing 5,916 users with their ratings on 14,155 books, 15,492 music and 7,845 movie, as well as their social relations between each other. The ratings are real values in the range [1,5], while the social relations are binary, indicating whether or not a social relation exists. The detailed statistics are showed in Table 1.

P erformance Metric : We focus on the task of rating prediction in recommendation to evaluate our models X  qual-ity. The most popular metric, Root Mean Square Error (RMSE) is used to measure the prediction quality. wh ere R ij and  X  R ij denote the true and predicted ratings respectively, and T denotes the number of tested ratings. The smaller RSME value means a better performance.
Baseline Methods : For comparison, we consider follow-ing related methods: (1)PMF [6], the state-of-the-art tra-ditional MF method, which learns latent factors for each type of behaviors separately with no information transferred; (2)NCDCF U and NCDCF I [1], the early multi-behavior based methods which integrate multiple types of behaviors into recommendation by the user-based and item-based neigh-borhood method, respectively; (3)CMF [7], the state-of-the-art multi-behavior based MF method as discussed before.
To perform comprehensive comparison, we conducted ex-periments on different training sets (80%, 60% and 40%) to test the models X  performance under different sparsity cases. For example, for training data 80%, we randomly select 80% of the data from each types of the behaviors for training and the rest for testing. The random selection was carried out 5 times independently, and we report the average results.
Performance Comparison . We evaluate the rating pre-diction performance for book, music and movie using the above constructed training/testing sets. Since the social re-lation prediction belongs to the task of link prediction, which is different from rating prediction task and unsuitable to be evaluated by RMSE, here we use social relations as a kind of auxiliary behavior and do not do the social relation predic-tion task. The experimental results using 10 dimensions to represent the latent factors are shown in Table 2. The pa-rameter values of our GLFM are: = 0 : 2, K s = 6, K b =4, which are determined by cross-validation.

From Table 2, we can observe that the multi-behavior based MF methods, CMF, is consistently better than the PMF, which demonstrates that integrating information from multiple types of user behaviors is useful for recommenda-tion. However, the two multi-behavior based neighborhood methods, NCDCF U and NCDCF I, do not get consistently better results, which may because that our dataset is very sparse and the neighborhood based methods usually fail to find similar neighbors under such sparse data. It is obvi-ous that our GLFM model consistently outperforms other approaches in all sparsity cases, especially achieving signifi-cant improvement over CMF, which illustrates that the by modeling the shared and behavior-specific latent factors a-mong behaviors, GLFM can integrate users X  multiple types of behaviors into recommendation more effectively.
Impact of Parameter K s and K b . In GLFM, the shared latent factors model the correlation between multi-ple behaviors and the behavior-specific latent factors model the heterogeneity of them. Hence, we investigate the ef-fects of the important parameter in GLFM: the number of shared latent factors K s and the number of behavior-specific latent factors K b . In the extreme cases, if K s = 0, it degen-erates to PMF, which will not share any information be-tween behaviors; if K b = 0, it degenerates to CMF, which will not model the specific characteristics of different behav-iors. Fixing the total number of latent factors ( K b + K as 10, Figure 2 shows the performance of GLFM on dif-ferent training sets with different values of K s ( K b is also different for K b = 10  X  K s ). We can see that, in all cases the RMSE results decrease (prediction accuracy increases) at first with K s increasing, which demonstrates that shar-ing information between users X  multiple types of behaviors is useful for recommendation; however, when K s goes greater than a threshold the RMSE increase (prediction accuracy decreases) with K s increasing ( K b decreasing), which may because that improper information is transferred to harm the recommendation results for lack of modeling the specific characteristics of different behaviors.
In this paper, we propose a novel recommendation mod-el, GLFM, to integrate multiple types of user behaviors ef-fectively by modeling the correlation and heterogeneity of them. To achieve this goal, GLFM attempts to find a factor-ization of latent factor space into subspaces that are shared across multiple behaviors and subspaces that are specific to each type of behaviors. Experiment on real-world dataset demonstrate that the proposed method can achieve better recommendation results than other competitors. This work was supported in part by 973 Program (Grant No. 2010CB327905), National Natural Science Foundation of China (Grant No. 61170127, 61332016).
