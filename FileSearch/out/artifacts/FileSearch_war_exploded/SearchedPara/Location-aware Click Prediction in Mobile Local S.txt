 Users increasingly rely on their mobile devices to search, locate and discover places and activities around them while on the go. Their decision process is driven by the information displayed on their devices and their current context (e.g. traffic, driving or walk-ing etc.). Even though recent research efforts have already ex-amined and demonstrated how different context parameters such as weather, time and personal preferences affect the way mobile users click on local businesses, little has been done to study how the location of the user affects the click behavior. In this paper we follow a data-driven methodology where we analyze approxi-mately 2 million local search queries submitted by users across the US, to visualize and quantify how differently mobile users click across locations. Based on the data analysis, we propose new location-aware features for improving local search click prediction and quantify their performance on real user query traces. Motivated by the results, we implement and evaluate a data-driven technique where local search models at different levels of location granularity (e.g. city, state, and country levels) are combined together at run-time to further improve click prediction accuracy. By applying the location-aware features and the multiple models at different levels of location granularity on real user query streams from a major, commercially available search engine, we achieve anywhere from 5% to 47% higher Precision than a single click prediction model across the US can achieve.
 H.4 [ Information Systems Applications ]: Miscellaneous Measurement, Human Factors mobile local search, search log analysis, feature extraction
The wide availability of internet access on mobile devices, such as phones and personal media players, has allowed users to search, locate and access web information while on the go. Currently, there are 54.5 million mobile internet users and market analysis shows that this number will increase to 95 millions by 2013 [16]. This rapid growth indicates that it is only a matter of time when mo-bile devices will overtake desktop as the web/search access point of choice.

A significant part of mobile query volume is represented by lo-cal search queries, where users search for nearby businesses, parks, attractions and activities. Even though mobile local search is sim-ilar to desktop local search, there are two fundamental differences. First, mobile devices provide significantly more accurate location information (e.g. GPS, cell tower and/or wifi triangulation) com-pared to desktop devices (e.g. reverse IP localization techniques). Accurate location estimation is critical in mobile search since the users are on the go and their range of reach might be limited.
Second, when compared to desktop search, mobile search is more  X  X ctionable X  in the sense that mobile users usually take an action immediately after a local search session (e.g. visit a restau-rant, a grocery store etc.). Because of mobile search X  X  actionable nature, the role of the user X  X  current context is particularly impor-tant in successfully answering a query. For instance, knowing that a mobile user searching for restaurants is walking in downtown Man-hattan during rush hour on a Friday evening, can provide invaluable information such as how much distance this user is willing to travel to visit a business or what type of businesses he might be interested in given the day and time of his search. On the other hand, the con-text of a desktop user that searches for restaurants from the comfort of his house right before he goes to sleep on a Monday night, might be irrelevant given that the search session might be triggered by a totally different context (i.e. plan a night out with friends for next Saturday).

The context of a mobile query can be defined by a collection of different features such as time of day, day of week, weather, traffic, user preferences and more. Several research efforts have al-ready looked at the importance of context in local search or have at-tempted to analyze how mobile users click on local businesses [14, 1, 6]. The ultimate goal of these approaches is to learn a ranking function that properly balances the importance of all these differ-ent features to provide accurate business rankings. However, the way these features should be balanced might be different across locations. Users at different locations can have different decision processes either due to geographic properties of their regions or demographics of the area they live in. For instance, a mobile user in Manhattan on a Friday evening around 5pm, most probably is willing to travel a short distance to visit a business because of the
Table 1: Profile of the analyzed mobile search log dataset. heavy traffic and the difficulty to access the highway. On the other hand, a mobile user in Texas might be willing to use his car and drive a longer distance because of the ease of acess to the highway. Consequently, the relative importance of the different context fea-tures might vary across locations. A mobile local search engine can capture these variations by (i) properly leveraging location-aware features to implicitly condition the ranking function on location, (ii) training multiple ranking functions across locations or (iii) by simultaneously combining both approaches.

Properly defining the location granularity at which local search models should be trained to effectively capture location context is quite challenging. While training models at the country level (i.e. US) might mask the importance of local context, training models at low levels of location granularity (i.e. zip code level) can also be inefficient due to data sparsity and data over-fitting issues. In ad-dition, an optimal location resolution at which local search models should be trained might not exist. For instance, even though a high query volume area, such as Manhattan, may provide enough data to accurately train a local model, other nearby locations to Manhat-tan, such as Bedford, NY, might not. Hence, a more general model obtained at the state or even country level could be used to answer queries that originate from Bedford. In general, the number of local search models to be trained, the location resolution at which these models should be trained and how these models are combined at run-time to answer queries needs to be determined.
In this paper we study the impact of location context in mobile local search and make the following contributions. First, we quan-tify how differently mobile users click across locations by analyz-ing 2 million local search queries submitted in the United States.
Second, we implement and evaluate two approaches to encode location context in current state-of-the-art models: implicit and ex-plicit location-aware training. In both approaches we augment the feature space with a set of new location-aware features and allow the model at the training phase to automatically decide the impor-tance of these features. By picking up those features, the trained model implicitly takes location context into account. In the case of implicit training a single model is trained across the US, while in the case of explicit training, multiple models at different lev-els of location granularity (e.g. city, state, and country levels) are trained by segmenting the training dataset based on geographical and volume characteristics. At run time, the model at the lowest level of location granularity that is available for the location where the query originated from, is used to rank nearby businesses. By Figure 1: US coverage of the analyzed dataset. Each query is represented as a point at the location where it was submitted. applying these techniques on real user query streams, we show that Precision can be improved by up to 47% when compared to to the Precision achieved by a single click prediction model for the whole US.

Third, we demonstrate that mobile search logs can be used to extract a model mapping at the zip code level that can guide the application of multiple models at different levels of location gran-ularity at run time to improve click prediction accuracy. In the off-line phase, we leverage the search logs to train models at the city, state, and country levels. By applying these models on search log traces and comparing their accuracies at the zip code level, we au-tomatically learn a mapping between zip codes and models for each state in the US. At run-time, we lookup the appropriate model (city, state or country level) to use for each query based on the zip code where the query originates from and the learnt mapping. Through a 10 -fold cross validation on real user query streams from a com-mercially available search engine, we show that we can achieve up to 4% higher Precision compared to the Precision that a single click prediction model at the state level with the location-aware features can achieve.
In this section we give an overview of the analyzed mobile search log dataset and describe the learning tools we use to train local search click prediction models.
The dataset used in this paper consists of approximately 2 mil-lion local search queries submitted to a major search engine across the United States over a period of 3 months. All the queries were submitted from mobile users that opted to download and install the search engine X  X  mobile application on iPhone and Android devices. The information recorded and analyzed for every query included the GPS location where the query was submitted, the actual query string, the unique ID of the business that was clicked by the user, the unique IDs of the businesses shown to the user, and a times-tamp. To protect the privacy of the users, no other information about the user or the query was recorded.

The original information recorded in the search logs was aug-mented with publicly available demographic data from recent CENSUS reports [17]. Using the GPS location available in ev-ery search log entry, we retrieved the zip code from where each query was submitted. Based on this information, we were able to associate zip code level demographic data (i.e. population density, average household size etc.) to every search log entry from the 2000 CENSUS report.
