 Daily deals sites (DDSs), such as Groupon and LivingSocial, attract millions of customers i n the hunt for products and services at sig-nificantly reduced prices. A typical approach to increase revenue is to send email messages featuring the deals of the day. Such daily messages, however, are usually not centered on the customers, in-stead, all registered users typically receive similar messages with almost the same deals. Traditional recommendation algorithms are innocuous in DDSs because: (i) most of the users are sporadic bar-gain hunters, and thus past preference data is extremely sparse, (ii) deals have a short living period, and thus data is extremely volatile, and (iii) user taste and interest may undergo temporal drifts. In order to address such particularly challenging scenario, we pro-pose new algorithms for daily deals recommendation based on the explore-then-exploit strategy. Users are split into exploration and exploitation sets  X  in the exploration set the users receive non-personalized messages and a co-purchase network is updated with user feedback for purchases of the day, while in the exploitation set the updated network is used for recommending personalized messages for the remaining users. A thorough evaluation of our al-gorithms using real data obtained from a large daily deals website in Brazil in contrast to state-of-the-art recommendation algorithms show gains in precision ranging from 18% to 34%.
 H.3.3 [ Information Storage and Retrieval ]: Information Filtering Algorithms, Experimentation, Measurement, Performance Daily Deals, Recommendation, Exploration-Exploitation
The daily deals business is a group-buying concept based on a synergistic view: helping small-businesses to advertise their prod-Copyright c 2013 ACM 978-1-4503-2409-0/13/10 ...$15.00.
The remainder of this paper is organized as follows. In Sec-tion 2, we review the related literature on DDSs and on exploration-exploitation recommendation strategies. In Section 3, we describe our explore-exploit algorithms. In Section 4, we describe the dataset, baselines, evaluation methodology and the results of the experi-mental evaluation of the explore-exploit algorithms. Finally, in Section 5, we present our concluding remarks.
The two most popular problems related to daily deals recom-mendation are: (i) deal-size estimation [3], and (ii) deal ordering for revenue maximization [7]. The first problem refers to the num-ber of coupons that a DDS is expecting to sell for a given deal. The second algorithmic problem can be stated as: given a set of candidate deals, which are the ones that a DDS should feature as daily-deals in order to maximize its revenue. In both scenarios, the focus is to maximize the benefit of the DDS. In this sense, our work is closer related to [7].

Also related to our work are exploration-exploitation strategies applied to recommender systems [8] and related problems [11]. Usually, authors consider the multi-armed bandit setting [9, 8]. Under this setting, basically, we must simultaneously attempt to acquire new knowledge and optimize decisions based on existing knowledge. Therefore, it is necessary to maximize reward based on the knowledge already acquired, while attempting new actions to further increase knowledge. While we could have modeled the daily-deals recommendation probl em under the bandit setting, we took other direction and propose alternate heustistics specifically devised to the problem.
In this section we introduce algorithms for daily-deals recom-mendation based on the explore-then-exploit strategy [6]. Explo-ration is related to the pursuit of information that might come to be known, while exploitation is related to the use of the acquired infor-mation in order to improve a particular objective. More specifically, we take advantage from controling the order in which users receive email messages featuring the deals of the day. During the explo-ration phase, a subset of users receive non-personalized messages, and we acquire information regarding deals recently purchased by users that have a similar taste. We follow a  X  first strategy, in which a pure exploration phase is followed by a pure exploitation phase. In this case, given a total of N users, the exploration phase occupies  X  N users, while the exploitation phase occupies the remaining (1  X  )  X  N users. Figure 1 describes the entire process of daily-deals recommendation based on the explore-then-exploit strategy. balancing exploration and exploitation.
The exploration phase consists of picking a particular recom-mendation algorithm, and following the deals it suggests based on the past preference data collected so far. Thus, a fraction of the users will receive email messages featuring the k deals suggested by the recommendation algorithm. During this process users pro-vide feedback when a suggested deal is indeed purchased, and this feedback is embedded into a structure we call co-purchase network .
The co-purchase network is an undirected and unweighted graph used to represent users that have purchased at least one deal in com-mon, that is, nodes are users and an edge is created between two users if they have purchased a deal in common at least once. The co-purchase network makes evident users sharing similar tastes re-cently, and therefore it provides important information for the sake on a daily basis. user purchases 1.36 deals, and thus the data is extremely sparse if compared with more studied recommendation scenarios, such as NetFlix (with 208 ratings per user) and MovieLens (with 166 rat-ings per user). Also, each deal remains valid, on average, for only 4days. We used several recommendation algorithms as baselines. Most-Popular is a simple algorithm which recommends deals based on their popularity considering all previously purchased deals. In this case, the algorithm always suggests the same deal, no matter the target user. We also employ more sophisticated algorithms, includ-ing WRMF [5], a state-of-the-art matrix factorization algorithm, and BPR-MF [10], as a representative of collaborative filtering al-gorithms for binary relevance data.
Our evaluation follows the Interleaved Test-Then-Train method-ology [1], in which each all recommendations user u i receives on day t are evaluated, and then all deals purchased by user u i on day t are included into the historical data available at day t +1 . The results to be reported correspond to an average over all days. Significance tests were performed ( p&lt; 0.05) and the best results, including statistical ties, are shown in bold. Our evaluation takes three dimensions into account: (i) the fraction of users to be ex-plored, (ii) the recommendation algorithm used during the process, (iii) the criterion used to sort users.
Our first experiment concerns the study of lower and upper bounds for the recommendation performance using the proposed explore-then-exploit strategy. Specifically, we executed 1,000 runs for each value, and in each run we randomly split users into exploration and exploitation. Therefore, we have 1,000 results for each value, from which we calculate the average, the best and the worst per-formance numbers for each value, as shown in Figure 2. The performance numbers shown in the figure will serve as lower and upper bounds for the recommendation performance.

The next experiment involves a detailed analysis of a very sim-ple recommendation algorithm  X  the Most-Popular algorithm  X  when coupled with the proposed explore-then-exploit strategy. Ta-ble 1 shows performance numbers in terms of MAP. The analysis Table 1: MAP numbers, considering the Most-Popular algo-rithm. Symbol  X  indicates that the corresponding result is an improvement over the result obtained using the previous value. The last row shows the average improvement consider-ing all values.
 MAP numbers, with WRMF being slightly superior in most of the cases.
This paper focused on the important problem of suggesting rel-evant and appealing products and services to potential customers, considering the particularly cha llenging scenario of daily-deals rec-ommendation. Specifically, we consider the task of sending person-alized email messages featuring potentialy relevant deals to users. In this case, we can impose a restriction on the order that users receive their messages, that is, some users receive their messages before others. We propose explore-then-exploit recommendation algorithms that are devised to: (i) gather feedback from users that receive their messages first (i.e., during the exploration phase), and (ii) use the gathered feedback in order to send personalized mes-sages to the remaining users (i.e., during the exploitation phase).
There is a trade-off between exploration and exploitation, in the sense that the more users are explored, more feedback is gathered but less feedback is indeed used. To deal with this trade-off, we propose sorting users according to t heir centrality in an evolving co-purchase network, so that more central users are those that share the same taste with more users. We employ a 2-month real data snapshot obtained from PeixeUrbano, the largest daily-deals web-site in Brazil, and show that: (i) the recommendation performance of existing algorithms is no better than the naive strategy of sug-gesting non-personalized deals for all users (i.e., all users receive the same message featuring the same deals), and (ii) the proposed explore-then-exploit algorithms are very effective and well-suited to the daily-deals recommendation scenario, providing improve-ments ranging from 18% to 34%.
 This work is partially supported by the National Institute of Science and Technology for the Web, MCT/CNPq grant 57.3871/2008-6, and by the authors X  individual grants and scholarships from CAPES and CNPq. We thank PeixeUrbano for providing the data used in the experiments.
