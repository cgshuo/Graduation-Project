 Recently the world of the web has become more social and more real-time . Facebook and Twitter are perhaps the ex-emplars of a new generation of social, real-time web services and we believe these types of service provide a fertile ground for recommender systems research. In this paper we focus on one of the key features of the social web, namely the creation of relationships between users. Like recent research, we view this as an important recommendation problem  X  for a given user, U T which other users might be recommended as follow-ers/followees  X  but unlike other researchers we attempt to harness the real-time web as the basis for profiling and rec-ommendation. To this end we evaluate a range of different profiling and recommendation strategies, based on a large dataset of Twitter users and their tweets, to demonstrate the potential for effective and efficient followee recommen-dation.
 H.3.3 [ Information Search and Retrieval ]: Information filtering; H.3.5 [ Online Information Services ]: Web-based services Algorithms, Experimentation Web 2.0, Twitter, Collaborative Filtering, Content Based Recommendation
Few would have predicted the impact of social media on the Web, and yet today, blogging, reviews, wikis, and tag-ging are as much part of the Web as HTML and javascript. Fewer still would have dared to predict the success of Twit-ter, surely the poster-child of Web 2.0. Twitter is simplicity itself. Borrowing ideas from social networking and SMS mes-saging, it allows users to post 140-character text messages (or tweets ) to a constantly updating public timeline of user messages. Users can tune in to tweets by explicitly following other users, and so access a filtered timeline of messages from these people. The simplicity of Twitter is one of its most powerful features, and what started out as a simple way for users to provide status updates to their followers has grown to accommodate a wide variety of use-cases, from political campaigning to education, and from emergency news report-ing to marketing and public relations. For example, Twitter was used extensively throughout the 2008 US Presidential Campaign 1 with Barack Obama successfully incorporating Twitter as part of a broader social media campaigning plat-form with which to co-ordinate and inform his followers and supporters. During the 2008 Mumbai attacks eyewitnesses used Twitter to post tens of tweets per second about the un-folding tragedy 2 . Twitter users on the ground helped create a list of the dead and injured, while others posted vital in-formation such as emergency numbers, hospital locations for blood donations, etc. All of this information flowed at a pace that was far beyond what traditional forms of communica-tion and news broadcasts could hope to generate. Today Twitter is used by many as a form of RSS reader, as users follow their favourite bloggers and news organisations. It has also proven to be a very popular way of sharing pages, causing some commentators to speculate about the potential for social media services like Twitter to represent a signif-icant threat to the major search engines as the means by which users discover new content. And of course the adver-tisers and marketeers have also recognised the potential of Twitter, as a way to engage with customers in real-time.
In this paper we consider Twitter from a user modeling and recommendation viewpoint. We are motivated by Twit-ter X  X  potential as a powerful source of profiling data. This is a novel take on profiling and recommendation in itself. For example, up until now most profiling and recommendation approaches have assumed the availability of high-quality in-terest and preference information, such as user ratings, pur-chase histories, or other forms of transaction logs. The real-time web, and Twitter in particular, seems far more limiting from a profiling and recommendation viewpoint. After all, user tweets are limited to only 140 characters in length and user X  X  tweet on a wide variety of topics, often in a shorthand http://www.wired.com/politics/onlinerights/magazine/17-02/ff obama http://www.wired.com/dangerroom/2008/11/first-hand-acco that is likely to be opaque to conventional natural language processing techniques. Nevertheless, the sheer volume of real-time data that is available on Twitter makes for a tan-talising profiling proposition and it is in this context that we seek to explore what might be feasible in practice.
To this end we describe a number of different profiling strategies, in order to learn about the interests of individ-ual users, and we demonstrate how this information can be used to help people to benefit more from Twitter. To get the most from Twitter users must carefully select other peo-ple to follow, so that they can benefit from their tweets; the people a particular user, U , chooses to follow will be called U 0 s followees to distinguish them from the people who follow U , or U 0 s followers . With this in mind we de-velop a followee recommender for Twitter; see also [2]. We describe a recommender system that is designed to harness Twitter X  X  real-time information as a source of recommenda-tion knowledge for followee recommendation. We explore a variety of different recommendation strategies including content-based techniques [6, 13] which rely on the content of tweets, and collaborative filtering style approaches, based on the followees and followers of users, as well as a number of hybrid strategies. The technical details of our Twittomender system (http://twittomender.ucd.ie), and the profiling and recommendation algorithms that we use are discussed in de-tail. We then go on to describe two separate and complemen-tary evaluations of these techniques and the Twittomender system. In the first we adopt a standard off-line recommen-dation evaluation using real-world data collected from some 20,000 Twitter users in order to compare the relative accu-racy of our core recommendation techniques. Following this, we summarise the results of a recent open, live-user trial of the Twittomender system itself. The results of each evalu-ation speak to the potential for recommendation techniques to play a significant role in Twitter and on the real-time web more generally.
Twitter currently offers only very rudimentary search ser-vices to help people find new users to follow. This represents a significant opportunity for recommender systems. The ba-sic assumption of this work is that the Twitter activity of a user X  X  social graph (their tweets, and the tweets of their followers and followees) provides a powerful source of pro-file information that can be used as the basis for recom-mendation. In this section we describe our Twittomender recommender system, focusing on the system architecture, how users are profiled, and how these profiles can be used to suggest interesting users to follow.
The Twittomender system has been developed as a Web service; see Figure 1. It uses the Twitter API 3 to build and maintain a database of Twitter users, their tweets, their followers and their followees. Each user is represented by a variety of different sources of information, related to their recent Twitter activity and their social graph, which we shall discuss along with an in depth look at the key components of the system architecture in the following subsections. http://apiwiki.twitter.com Figure 1: The Twittomender System Architecture.

The system provides users with access to two basic modes of operation, as follows: 1. User Search  X  In this mode the user provides query-2. User Recommendation  X  In this mode the user X  X  own
In what follows we will focus how users are represented and profiled in Twittomender and how this information is harnessed across a variety of different recommendation strate-gies, some of which rely on the content of tweets themselves, while others leverage the users X  social graphs. We will return to the Twittomender system towards the end of this paper Figure 3: An example of the recommendation inter-face. when we describe the results of a recent live-user trial of the system in action.
The search and recommendation functionality provided by the Twittomender system is based on the availability of user profiles that reflect the likely interests of users, at least in terms of their Twitter histories. In this work we will look at some different sources of tweet information available for profiling. To begin with we consider the simplest source of profiling information, the user X  X  own recent tweets. Thus, as per Equation 1, for a target user , U T , let tweets ( U T set of recent tweets for U T ; in this work we will assume that tweets ( U T ) is the user X  X  100 most recent tweets. In this way tweets ( U T ) provides the basis for a content-based approach to user profiling, obviously under the assumption that users are likely to tweet about things that interest them. This can be extended further. Each Twitter user follows a set of other users, their followees , and each user is fol-lowed by a set of users called their followers ; see Equations 2 and 3. We can reasonably assume that the tweets of their followees and followers may provide further insights into a user X  X  interests. User X  X  actively select their followees, probably because they expect their tweets will be of interest, and thus we can use their tweets in much the same way as a user X  X  own tweets, as a complementary source of profile information. Thus, followeetweets ( U T ) is the set of tweets of the followees of U
T (see Equation 4). followeetweets ( U T ) = [ followertweets ( U T ) = [
In turn, the follower X  X  of U T make the active decision to follow U T , presumably because they ( U T  X  X  followers) expect U
T  X  X  tweets to be of interest. But will the tweets of these follower X  X  be of interest to U T ? And can they be used as a viable source of profiling information as per Equation 5? Neither questions can be affirmed with confidence yet, since, in the case of the majority of Twitter users at least, users exert little control over their followers; users rarely prune away followers that don X  X  interest them and there are many cases of followers who generate very few tweets themselves. Nevertheless, the tweets of followers certainly provides an intriguing source of profile information worth exploring.
In summary the above suggests 5 basic profiling strategies: (1) representing users by their own tweets ( tweets ( U T by the tweets of their followees ( followeetweets ( U T )); (3), by the tweets of their followers ( followertweets ( U by the ids of their followees ( followees ( U T )); (5) or by the ids of their followers ( followers ( U T )). And of course, as we shall discuss, these different sources of profile data can be combined in various ways, so that, for example, we could represent a user by their own tweets, the tweets of their followees, and the tweets of their followers.
Now that we have a basis for profiling Twitter users, based on tweets and/or social connections, we can index these pro-files and develop the recommendation framework to deliver results based on a target user profile, or indeed a specific set of query terms. We have chosen to develop this framework using the open source Lucene platform 4 . There are numer-ous advantages to proceeding in this fashion, as opposed to developing a bespoke recommendation framework. For a start, Lucene provides a proven, robust, and scalable in-dexing and retrieval platform that is designed to cope with Web-scale data and usage. In addition, it provides access to powerful indexing and term-weighting features that will accommodate a more sophisticated approach to user profil-ing than a simple frequency-based term-weighting scheme. Finally, Lucene X  X  retrieval functions can be used directly for the query-based retrieval of profiles and can be readily adapted for recommendation.

Since Lucene is a text-based search engine, its basic units of information are documents to be indexed and stored for retrieval. We can treat profiles as documents, which, after all, are simply collections of words (from tweets) or other user ids. Thus, using Lucene X  X  indexing features we can rep-resent each, U T , as a weighted term-vector, profile ( U rce ) (see Equation 6), such that the i th element of this vector represents the i th unique term in source , and the weight of this i th term ( w i ) represents the importance of this term for U
T . In the case where source is one of the content sources ( tweets ( U T ), followeetweets ( U T ) or followertweets ( U then these terms will be the words used in the tweets of the relevant users, whereas when source is one of the so-cial/collaborative sources ( followees ( U T ) or followers ( U then these terms will be user ids. In what follows we will use profile ( U T ) instead of profile ( U T ,source ) without loss of generality in cases where the source parameter is clear. We could use a simple frequency count as the term weight-ing function, so that the profile vector could be made up of the frequency counts of the various words used in the tweets of U T , for example. However, in this instance we use http://lucene.apache.org/java/docs/ Lucene X  X  TF-IDF weighting metric; thus, the TF-IDF score of term t i in U T is proportional to its frequency of occurrence in profile ( U T ) and inversely proportional to its frequency across the other profiles, U , as shown in Equation 7 to 9. This results in a higher weighting for profile terms that are frequent in a given profile but infrequent across the profile-base as a whole, which helps to distinguish profiles during retrieval by discounting matches on common terms (words or users). For example, if we represent each user just by their own raw tweets, then the TF-IDF weighting will give a higher weight to terms that are common to U T but unusual across the rest of the user population. These high-scoring terms serve to better distinguish U T  X  X  interests relative to the other users, during retrieval.
 Query-based retrieval and profile-based recommendation are then implemented using Lucene X  X  standard retrieval func-tion, with the target user X  X  profile document serving as the search query in the case of the latter. All of this provides a very powerful and flexible retrieval and recommendation framework, since profiles can be represented and indexed by a combination of source terms, effectively harnessing a variety of different recommendation strategies, from simple content-based or social recommendation strategies to more sophisticated hybrids. For instance by using the content sources we can generate a space of content-based recom-mender systems. Conversely, by indexing users just by their followees or followers or both we can generate collaborative filtering style [11, 16] recommenders.
The success of our recommender will ultimately depend on its ability to suggest new users who are likely to be worth following , by the target user; remember, we are interested in recommending followees as opposed to followers . In this section we describe an offline evaluation of a variety of differ-ent recommendation techniques based on a comprehensive dataset generated from real Twitter users. This particu-lar approach to evaluation is commonplace amongst recom-mender systems research and allows us to compare the rec-ommendation effectiveness of a variety of different profiling and recommendation strategies. On its own however it only tells part of the story and in the next section we complement this evaluation with a live-user study of Twittomender.
Twittomender is designed to incrementally extend its pro-file database each time a new user allows Twittomender to connect to their Twitter account. Once deployed, we hope that the system will prove popular enough to attract signifi-cant user numbers. However, for the purpose of this research we needed access to a critical mass of existing users. To do this we imported 20,000 users directly using the Twitter API. We began with a small seed-set of 15 users (basically the followees and colleagues within our research group) and
Users Tweets Words Followers followees 1000 80 15 664 321 19,000 78 14 465 520 expanded the user-base by following their follower and fol-lowees links. For each user we also downloaded up to 100 recent tweets. We split the data-set into two sets of users  X  one containing 1000 users to act as test users , and a larger training-set of 19,000 users; see Table 1 for a summary of these data-sets in terms of their median tweets, followees, and followers per user and the median words per tweet per user. In this experiment we evaluate 9 different profiling and recommendation strategies based on the different sources of profile information, in isolation and in combination. To be-gin with we implemented four content-based strategies that rely on the content of tweets as follows: 1. ( S1 ) users are represented by their own tweets 2. ( S2 ) users are represented by the tweets of their fol-3. ( S3 ) users are represented by the tweets of their fol-4. ( S4 ) a hybrid strategy in which users are represented In addition we implemented three collaborative filtering style strategies, in the sense that we view a user profile as a simple set of user ids. 5. ( S5 ) users are represented by the IDs of their followees 6. ( S6 ) users are represented by the IDs of their followers 7. ( S7 ) a hybrid strategy in which users are represented
Concretely, for each of the above profiling strategies we constructed a separate Lucene index and then used the stan-dard Lucene retrieval engine to generate recommendations. Finally we implemented two hybrid, ensemble strategies, S 8 and S 9. In each case the ensemble is composed by a selec-tion of previous basic component recommenders, S 1  X  S 7 and the union of the recommendations from these indepen-dent strategies is scored and ranked. S 8 and S 9 vary in terms of the scoring function that they use as follows: 8. ( S8 ) the scoring function is based on a combination of 9. ( S9 ) the scoring function is based on the position of the Recommenda)on Precision Figure 4: Average precision vs. recommendation-list size for the 9 different recommendation strate-gies using the 1000-user test sets.
 During the evaluation we tested these 9 algorithms on users in the 1000-user test-set. For each of these target users we generate a query by taking the top-20 highest scoring terms from the user X  X  profile; in other words we just use a portion of the users full profile information based on the TF-IDF weightings assigned to the profile terms/ids. This profile query is used to generate a recommendation-list for each of the 9 strategies. For each target profile we count how many of the recommendations are in the user X  X  known followees list. We call these relevant recommendations ; in other words, we look to see how often the recommender suggests people that the target user is known to have followed. In the sec-tions that follow we will describe the summary results across these different algorithms, focusing on the average overlap between recommendation lists and followees-lists, and the position of these relevant recommendations. And we do this for different recommendation list sizes ( k ) from the top-5 recommendations to the top-20 recommendations.
Our basic measure of recommendation performance is the average percentage overlap between a given recommendation list and the target user X  X  actual followees-list; this is effec-tively a precision measure. To begin with, Figure 4 graphs the average precision versus recommendation-list size for the 9 different recommendation strategies using the 1000-user test-sets. Overall the different recommendation strategies appear to perform well across the different recommendation-list sizes, generating precision scores, in the 1000-user test-set, of between 11% (for strategy S2 at k = 20)and almost 25% (for strategy S7), for example. This should be viewed as very positive results since the success metric here  X  namely, that the target user is a followee of a recommended user  X  can be viewed as setting a reasonably high relevance stan-dard; in Twitter, becoming a followee of a user is a delibera-tive act and most users limit who they follow to avoid being swamped with irrelevant messages. We can also see that relevant recommendations tend to be clustered towards the top of recommendation lists since the precision of all strate-gies is seen to decline within increasing recommendation-list size. Interestingly, the collaborative strategies perform bet-ter than the content strategies; S 5  X  S 7 consistently outper-form S 1  X  S 4 across all values of k . We also find that strategy S 2 tends to perform poorly. For example, for recommenda-tion lists of size 10, strategy S 2 delivers a precision score of only 0.15; so only 1 or 2 of these 10 recommendations Average Posi,on Of Relevant Figure 5: Average relevant recommendation posi-tion vs. recommendation-list size for the 9 different strategies using the 1000-user test sets. are actually followees of the target user. In contrast, we find the tweets of a user X  X  followers (that is the people who follow the target user), S 3 to perform significantly better. For instance, for recommendation lists of size 10, strategy S 3 delivers a precision score of 0.2; a 33% relative increase in precision over S 1. This suggests that the tweets of your followees are not necessarily a good predictor of these same followees. The two ensemble hybrids ( S 8 and S 9) perform well with S 9 delivering precision values that are as good as the best individual strategy, although it is notable that it does not do any better than the best individual strategy, S 6.
Of course the percentage of overlapping recommendations is just one measure for evaluating recommendation perfor-mance. The position of relevant recommendations is also an important consideration, especially since we know that users focus the lion X  X  share of their attention on items at the top of results or recommendation-lists. Thus, two strategies may perform well in terms of their overall precision, but if one consistently produces relevant recommendations in the top-half of the list, while the relevant recommendations for the other tend to appear in the bottom-half of the list, then, all other things being equal, the former strategy can be con-sidered to be superior.

In Figure 5 we plot the average position of the relevant rec-ommendations versus recommendation-list size for the 9 rec-ommendation strategies. In general the strategies perform similarly across different recommendation-list sizes  X  the average position of relevant recommendations ranges from approximately 1.7 (when k = 5) to just over 7 (when k = 20)  X  and it should be clear that all of the strategies are ca-pable of positioning relevant recommendations towards the top-end of their recommendation-lists.

Interestingly, the general trend seems to be that strate-gies which do less well from a precision viewpoint seem to do better from a position viewpoint, especially in larger recommendation-lists. For example, in the above precision results, the collaborative strategies out-performed the content-based strategies, but the reverse is true in the case of these position results; for example, for a recommendation-list of size 20 the typical content strategy recommends relevant users at about position 7, compared to position 8 for a typ-ical collaborative (or hybrid) strategy. Average Precision Average Posi,on Figure 6: Summary precision (a) and position (b) results.
So in summary there is reason to be optimistic about the potential for a followee-recommender for Twitter us-ing the techniques described here. In each case, we have found our content-based and collaborative filtering profil-ing approaches to be capable of delivering recommendation-lists that include a reasonably high percentage of relevant users appearing towards the top of these lists. There is somewhat of a trade-off between recommendation-list preci-sion and the average position of relevant recommendations, and the various strategies are influenced by the size of the recommendation-list. By way of a summary, Figure 6 (a &amp; b) present the mean average precision and the mean average position results for the above experiments; in each case we average the precision and position values over the different values of k .
It is worth returning to the manner in which we evalu-ate precision in the previous offline experiments. Precision is calculated as the percentage overlap between recommen-dations and the target user X  X  existing followees-list, but it would be unwise to discount the non-overlapping recommen-dations as definitively not relevant to the target user. They are  X  X ot relevant X  only in the sense that they are not already followees of the target user, and it would be incorrect to as-sume that these recommendations are not of interest to the target user. They may indeed be of great interest to the user. As such we view these results as providing a useful baseline with respect to likely recommendation precision in a live-user context, and in this section we describe just such a trial based on the usage patterns of 34 trial participants during March 2010. These participants were all existing Twitter users. Summary information is shown in Table 2.
The Twittomender System is available online 5 and for the purpose of this trial we invited interested users to syn-chronise their Twitter accounts with Twittomender to in-http://twittomender.ucd.ie Posi3on Ranges Figure 7: The number of relevant recommendations for different recommendation-list position ranges. clude their tweets and social graphs in the Twittomender database. For the purpose of this trial, Twittomender was configured to use profiling and recommendation strategy S 9, meaning that a combination of all of the different sources of profiling information was brought to bear on recommenda-tion. Upon synchronising their Twitter account with Twit-tomender (so that their profiles could be generated from their tweets, followees, and followers) each participant was presented with a list of 30 recommended Twitter users (from a Twittomender database of approximately 100,000 users at the time of this trial) and the user was asked to indicate which of the recommended users they would likely follow. There are two important points to make here: (1) none of the users existing followees or followers were included in these recommendation-lists  X  they were filtered out pre-recommendation; (2) participants understood that for the purpose of this trial their indicating that they would likely follow a given user would not in anyway effect their live-Twitter social graph (in other words they wouldn X  X  actually end up following the user in question).

On average, the 34 participants indicated a willingness to follow an average of 6.9 users per recommendation-list and the majority of these relevant recommendations appeared towards the top of the recommendation-lists. For exam-ple, Figure 7 shows a histogram of the number of relevant recommendations for different recommendation-list position ranges and we can see that 120 out of a total of 236 rele-vant recommendations appeared in the top 10 recommended users. We view this result to be very positive. Every partic-ipant found at least some new users worth following in their recommendation-list and an average of almost 7 new users to follow per recommendation-list would certainly help to drive  X  X ollowee relationships X  in the Twitter universe.
During this trial we also provided users with an oppor-tunity to test the query-based search functionality of Twit-tomender. Very simply, users were encouraged to enter a standard query with a view to receiving recommendations for users who are likely to be relevant to this query. Out of the 34 participants, 31 tested the search service. They Figure 8: A Wordle tag cloud of the search query terms submitted to Twittomender. Posi3on Ranges Figure 9: The number of relevant search results for different recommendation-list position ranges. submitted queries with an average of 3.7 terms on a variety of topics and once again received recommendation-lists con-taining 30 users; for convenience we have summarised their query terms in the form of a Wordle tag cloud (wordle.com) in Figure 8. We tracked how often a user received a search result representing a user they would be inclined to follow; once again we filtered-out any users any existing followees and followers from these result-lists. This time users indi-cated they would be willing to follow an average of 4.9 of the suggested users, per search. Obviously this indicates a lower number of relevant users, compared to the 6.9 relevant users per recommendation-list for the profile-based recom-mendations, but this is probably to be expected since the short search queries provided by users carry far less (albeit perhaps more focused) information than the richer profile queries used during recommendation. Nevertheless, we view an average of 5 new users worth following per search to be again a very strong result from a Twitter perspective. In Figure 9 we show a histogram of the number of relevant re-sults for different recommendation-list position ranges. We see a relatively even spread of relevant users across the top 30 results, with a bias towards the top ranking results.
Our research is motivated by the availability of real-time web data and the potential use of this unique form of user-generated content to drive recommender systems. To this end it is useful to consider 3 related areas of research: (1) understanding the form and function of the real-time web; (2) the role of user-generated content in recommendation; and (3) our application area of people recommendation.
There is currently considerable research attention being paid to Twitter and the real-time web in general. RTW services provide access to new types of information and the real-time nature of these data streams provide many op-portunities and challenges. Moreover, companies like Twit-ter and Yahoo have opted to make their data available and Twitter X  X  developer API provides researchers with access to a huge volume of information for example. It is no surprise then that the recent literature includes a number of interest-ing analysis of Twitter X  X  real-time data, largely with a view to developing an early understanding of why and how peo-ple are using services like Twitter; see for example [8 X 10,12]. For instance, the work of Kwak et al [12] describes a very comprehensive analysis of Twitter users and Twitter usage, covering almost 42m users, nearly 1.5bn social connections, and over 100m tweets. In this work the authors have exam-ined reciprocity and homophily among Twitter users, they have compared a number of different ways to evaluate user influence, as well as investigating how information diffuses through the Twitter ecosystem as a result of social relation-ships and retweeting behaviour.

The research presented in this paper is obviously not fo-cused on analysing microblogging usage per se. Rather our interest is piqued by the potential to use this near-ubiquitous form of user-generated content as a source of preference and profiling information in order to drive recommendation. User-generated content is inherently noisy but it is plentiful, and recently researchers have started to consider its utility in recommendation. For example, there has been some recent work [14] on the role of tags in recommender systems, and recently researchers have started to leverage user-generated reviews as a way to recommend and filter products and ser-vices. For instance, [1] look at the use of user-generated movie reviews from IMDb as part of a movie recommender system and similar ideas are discussed in [17]. Both of these examples of related work look to mine review content as an additional source of recommendation knowledge, but they rely on the availability of detailed item reviews, which may run to hundreds of words, which may not always be the case. In this paper, we are interested in the more challenging form of user-generated content that comes from micro-blogging services like Twitter and we wish to use Twitter content as a way to drive automated recommender systems that are capable of responding to the preferences of users.

Finally, there has been considerable research over the past number of years to help users find and connect with people online [4, 5, 7, 15]. For example the work of Guy et al. [6] has looked at the use of recommender systems to identify people that you might wish to invite into your social net-work, focusing on an enterprise context. In this work the researchers explored profiling users across a number of dif-ferent sources of information in enterprise so that explicit relationships could be highlighted based on the fact that two users contributed in similar ways to similar information sources; for example users may share patent authorships or they may be closely related according to the organisation hi-erarchy within the enterprise, or they may co-author papers together or contribute to the same wikis. This information can then be used to identify similar users and proactively make recommendations to users as a way to drive relation-ship creation within social media. The results of the live-user trial confirmed that this type of contextualized followee recommendation was capable of driving a significant uplift in the formation of new relationships within the enterprise. Related work, at least in terms of its core motivation to drive relationship building, has been carried out by Freyne et al [4] and Geyer et al [5] who have explored a number of recommendation techniques for improving user engagement within social media and social networks. We see the work of this paper fitting neatly in to this body of research  X  our interest in recommending followees is largely driven by the need to help Twitter users to create interesting connections with remote Twitter users. However, our work differs in some important ways. In particular, we focus on noisy, un-structured micro-blogging data, which is far from the more structured data (co-authorship links, community member-ship data etc.) that others have used in similar endeavours. A central and, we believe, novel contribution of this work is to demonstrate that, noisy as Twitter data is, it can still provide a useful recommendation signal. Perhaps closest to the work in this paper is very recent work by Chen et al [3] on the development and evaluation URL recommendation strategies to demonstrate the utility of using various combi-nations of tweet content and social graph information during recommendation. Like the present work, Chen et al are clar-ifying the significant role that real-time web data can play in future recommender systems research.
In this paper we propose that Twitter users can be usefully modeled by the tweets and relationships of their Twitter so-cial graphs. We have demonstrated how these profiles can be used as the basis for a followee recommender called Twit-tomender. An offline evaluation, based on real-user data, suggests that this recommender system is capable of deliv-ering high-quality recommendations, and recent results from a live-user trial of the Twittomender system supports this finding. We see the core contribution of this paper as two-fold. On the one hand we have demonstrated the potential of the real-time web, and micro-blogging services like Twitter, to serve as a useful source of recommendation information. Our analysis suggests that noisy as Twitter content is, it does provide a useful profiling and recommendation signal. We have shown how existing recommendation strategies can be usefully harnessed to solve important challenges  X  fol-lowee recommendation in this case  X  in the real-time web. This work is supported by Science Foundation Ireland under grant 07/CE/I1147 and by Amdocs Inc.. [1] S. Aciar, D. Zhang, S. Simoff, and J. Debenham. [2] J. Chen, W. Geyer, C. Dugan, M. Muller, and I. Guy. [3] J. Chen, R. Nairn, L. Nelson, M. Bernstein, and E. H. [4] J. Freyne, M. Jacovi, I. Guy, and W. Geyer.
 [5] W. Geyer, C. Dugan, D. R. Millen, M. Muller, and [6] I. Guy, I. Ronen, and E. Wilcox. Do you know?: [7] W. Hsu, A. King, M. Paradesi, T. Pydimarri, and [8] B. A. Huberman, D. M. Romero, and F. Wu. Social [9] A. Java, X. Song, T. Finin, and B. Tseng. Why we [10] C. Jensen, J. Davis, and S. Farnham. Finding others [11] J. A. Konstan, B. N. Miller, D. Maltz, J. L. Herlocker, [12] H. Kwak, C. Lee, H. Park, and S. Moon. What is [13] M. J. Pazzani and D. Billsus. Content-based [14] S. Sen, J. Vig, and J. Riedl. Tagommenders: [15] A. Seth and J. Zhang. A social network based [16] U. Shardanand and P. Maes. Social information [17] R. T. A. Wietsma and F. Ricci. Product reviews in
