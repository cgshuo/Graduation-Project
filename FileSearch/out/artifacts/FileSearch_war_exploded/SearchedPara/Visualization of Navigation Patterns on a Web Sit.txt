 W e presen t a new metho dology for visualizing na vigation patterns on a W eb site. In our approac h, w e rst parti-tion site users in to clusters suc h that only users with similar na vigation paths through the site are placed in to the same cluster. Then, for eac h cluster, w e displa y these paths for users within that cluster. The clustering approac hw e em-plo y is mo del based (as opp osed to distance based) and par-titions users according to the or der in whic h they request W eb pages. In particular, w e cluster users b y learning a mixture of rst-order Mark o v mo dels using the Exp ectation-Maximization algorithm. Our algorithm scales linearly with b oth n um b er of users and n um b er of clusters, and our imple-men tation easily handles millions of users and thousands of clusters in memory . In the pap er, w e describ e the details of our tec hnology and a to ol based on it called W ebCANV AS. W e illustrate the use of our tec hnology on user-tra X c data from msn b c.com.
 H.2.8 [ Information Systems ]: Database Managemen t| Data Mining ; I.2.6 [ Computational Metho dologies ]: Ar-ti cial In telligence| L earning, Misc el lane ous Mo del-based clustering, sequence clustering, data visualiza-tion, In ternet, W eb
Microsoft Researc h, Redmond, W A, 98052 y
Curren t a X liation Departmen t of Information and Com-puter Science z
Departmen t of Information and Computer Science, Univ er-sity of California, Irvine, CA, 92717-3425 Arguably one of the great c hallenges for computer science in the coming cen tury will b e the understanding of h uman b eha vior in the con text of \digital en vironmen ts" suc h as the W eb. Giv en our limited exp erience to date with mo d-eling suc h en vironmen ts, there are relativ ely few existing theories or rst-principles to guide an y analysis or mo deling endea v ors. On the other hand, one can readily obtain v ast quan tities of data from suc hen vironmen ts. In this con text, data-driv en exploration of digital traces (suc h as serv er-log records) is clearly an imp ortan t starting p oin t for furthering our understanding of \digital b eha vior." In this pap er, w e describ e a no v el approac h to visualization and exploratory analysis of dynamic b eha vior of individuals visiting a particular W eb site. As a test b ed for our w ork, w e use serv er logs of individual bro wsing records for man y thousands of individuals or users at the msn b c.com site. Our approac h is straigh tforw ard. First, w e rst partition users in to clusters suc h that only users with similar b eha vior on the site are placed in to the same cluster. Then, for eac h cluster, w e displa y the b eha viors of the users within that cluster.
 The fo cus of our pap er is on the visualization and clustering asp ects of suc h data, rather than on the v arious engineering issues in v olv ed in prepro cessing serv er-log data (iden ti ca-tion, \sessionization," etc.). A t this p oin t, it is su X cien t to assume a fairly abstract characterization of the data| that is, (a) the serv er-log les ha v e b een con v erted in to a set of sequenc es , one sequence for eac h user session, (b) eac h sequence is represen ted as an ordered list of discrete sym-b ols, and (c) eac h sym b ol represen ts one of sev eral p ossible categories of W eb pages requested b y the user.
 Figure 1 sho ws a sample of suc h sequences. The serv er logs from msn b c.com for a t w en ty-four-hour p erio d t ypically pro-duces roughly one million suc h sequences. The fo cus of the w ork describ ed in this pap er is the problem of exploring, visualizing, and mo deling this t yp e of large data set. There arean um b er of asp ects of the data whic h mak e the problem non-trivial.
 First, the information is inheren tly dynamic. Static displa ys (suc h as histograms of pages requested) will not fully cap-ture the dynamic nature of the underlying sur ng b eha vior. Th us, w ein v estigate dynamic mo dels (alb eit relativ ely sim-
Permission to make digital or hard copies of part or all of this work or permission and/or a fee.

KDD 2000, Boston, MA USA  X  ACM 2000 1 -58113 -233 -6/00/0 8 ...$5.00 ple Mark o v mo dels) to extract dynamic b eha vior at least to rst order. An imp ortan t p oin t in this con text is that these dynamic mo dels serv e primarily as v ehicles for data explo-ration and w e do not assume that the mo dels necessarily represen t the true data-generating pro cess. In fact, there is some evidence that W eb-sur ng b eha vior ma y b e funda-men tally non-Mark o v in nature ([3]). Nonetheless, just as univ ariate histograms serv e as a useful \data windo w" for general m ultiv ariate data analysis, our use of Mark o vmod-els in this pap er can b e view ed as a mec hanism to pro vide at least a partial (and useful) picture of dynamic W eb b e-ha vior.
 Second, dynamic b eha vior in this general con text is highly lik ely to b e quite heterogeneous. A p opulation of users of this size will tend to ha v ev astly di eren tW eb-sur ng pat-terns. T o address this heterogeneit y , w e imagine that dif-feren t users lie in di eren t clusters , where eac h cluster has a di eren t Mark o v mo del. Sp eci cally ,w e mo del the data as ha ving b een generated in the follo wing fashion: (1) A user arriv es at the W eb site and is assigned to a particu-lar cluster with some probabilit y , and (2) the b eha vior of that user is then generated from a Mark o v mo del with pa-rameters sp eci c to that cluster. W e pretend this mo del generates the W eb data w e observ e, except w e do not get to see the actual cluster assignmen ts. W e then use a standard learning tec hnique, the Exp ectation{Maximization (EM) al-gorithm, to learn the prop ortion of users assigned to eac h cluster as w ell as the parameters of eac h Mark o v mo del. In so doing, w e assign eac h user to a cluster or fraction-ally to the set of clusters. This approac h to clustering is sometimes called a mo del-b ase d approac h, and lies in con-trast with more commonly used distance-based approac hes. The clustering mo del w e learn is sometimes called a mix-tur emo del . By using a mo del-based approac h to clustering, sequences of di eren t lengths ma y b e assigned to the same cluster (e.g., sequence 1 and 5 in Figure 1 ma yv ery lik ely be generated from a single mo del corresp onding to one of the clusters). This approac h pro vides a natural and consis-ten t mec hanism for handling the problem of mo deling and clustering sequences of di eren t lengths. F ull details of the mo del and the asso ciated clustering algorithm are discussed [1].
 The third non-trivial asp ect of the data is its size. Th us, it is critical that an y algorithmic tec hnique scale in a rea-sonable fashion (e.g., linear or near-linear) as a function of the n um b er of sequences N and the n um b er of clusters K . This requiremen t rules out (e.g.) an y direct application of standard hierarc hical clustering tec hniques that scale as O ( KN 2 ) in b oth time and space complexit y . An example of suc h an approac hw ould b e agglomerativ e clustering using, for example, some form of pair-wise edit-distance b et w een sequences. In con trast, our algorithm for learning clusters of Mark o vc hains (the EM algorithm) requires memory that is linear in N and K and has a run time p er iter ation that is linear in N and K . In Section 3, w ein v estigate the o v erall scaling b eha vior of our approac h, and demonstrate b y ex-p erimen t that the total run time of the algorithm (o v er all iterations) scales linearly in b oth N and K .
 The pap er pro ceeds as follo ws. In Section 2, w e illustrate ho w the Mark o v clustering approac h can be lev eraged to supp ort an in teractiv e exploratory data analysis whic h pro-vides direct insigh tin to the heterogeneous and dynamic na-ture of this t yp e of W eb data. Section 3 then describ es issues asso ciated with learning the clusters, including a demonstra-tion that the (often assumed) near-linearit y of the computa-tional complexit y of EM-based algorithms holds in our ap-proac h. Section 4 concludes the pap er with a summary and p ossible extensions of this w ork. Related w ork is discussed in [1]. As w eha v e just discussed, our approac h to exploratory data analysis is to cluster users and then visualize the b eha vior of users in eac h cluster. W eha v e implemen ted a to ol for these tasks, called W ebCANV AS (W eb Clustering ANalysis and VisuAlization of Sequences). In this section, w e illustrate the visualization comp onen tof W ebCANV AS on data from a large W eb site.
 The data comes from In ternet Information Serv er (I IS) logs for msn b c.com and news-related p ortions of msn.com for the en tire da y of Septem b er, 28, 1999 (P aci c Standard Time). Eac h sequence in the dataset corresp onds to page views of a user during that da y . In particular, the b eha v-iors of users are not brok en do wn in to ner sessions. Eac h ev en t in the sequence corresp onds to a user's request for a page. Requests are not recorded at the nest lev el of detail|that is, at the lev el of URL, but rather, they are recorded at the lev el of page c ate gory . The categories, dev el-op ed b y one of us (S.W.), are informativ ey et small in n um-b er (sev en teen). The categories are frontpage , news , business , sports , summary , bbs (bulletin b oard service), travel , msn-news , and msn-sports . Although the time of eac h request is kno wn, w e mo del only the order in whic h the requests are requested. F urthermore, an y requests serv ed via a cac hing mec hanism are not recorded.
 The full dataset consists of appro ximately one million se-quences (users), with an a v erage of 5.7 ev en ts p er sequence. After a bit of exp erimen tation, w e found that a random sam-ple of 100,000 sequences w as more than adequate for pur-p oses of building clusters useful for visualization. Using this data, w e generated 100 clusters as describ ed in Section 3. Figure 2 sho ws W ebCANV AS's initial displa y of sixteen of the one h undred clusters. Normally , the clusters are ordered left-to-righ t and top-to-b ottom in descending order b y the n um b er of users in eac h cluster. F or this displa y ,ho w ev er, the order of the clusters are scram bled so as not to rev eal p oten tially sensitiv e information ab out the msn b c.com site. Eac h windo w corresp onds to a cluster. The windo ws are tiled and eac h can b e easily mo v ed and resized. Eac hro w of squares in a cluster corresp onds to a user sequence. Eac h square in a ro w enco des a page request in a particular cate-gory enco ded b y the color of the square. (A category legend in sho wn in the righ t side of the screen.) F or example, the second user in the second cluster has the request sequence In our exp erience with W ebCANV AS, a site administrator can iden tify useful and unexp ected information after only a few momen ts of lo oking at displa ys suc h as the one in Figure 2. In this case, the site administrator (S.W.) dis-co v ered sev eral in teresting facts: (1) there are signi can tly large groups of p eople en tering msn b c.com on tech (clusters 11 and 13) and local (cluster 22) pages; (2) there is a sig-ni can tly large group of p eople na vigating from on-air to local (cluster 12); and (3) there is surprisingly little na vi-gation b et w een tech and business sections. Eac h of these disco v eries suggest actions to b e tak en to impro v e the site. Eac h cluster windo w can b e scrolled so that a site admin-istrator can, in principle, view ev ery user in eac h cluster. Another feature of W ebCANV AS, ho w ev er, pro vides the site administrator with a summary of the con ten ts of eac h clus-ter. In particular, when an administrator righ t clic ks on a cluster, the corresp onding rst-order Mark o v mo del for that clusters is displa y ed. Figure 3 sho ws the displa y when the user clic ks on cluster 8.
 Probabilities in the displa y are enco ded b yin tensit y (higher probabilities are brigh ter). The rst column displa ys the mar ginal distribution of category requests. That is, the rst columns sho ws, for eac h category , the probabilit y that a user in the cluster will request a page in that category . The sec-ond column displa ys the probabilit y distribution o v er cate-gory requests for the rst ev en t. The middle blo c k displa ys the transition probabilities p ( i; j )|the probabilit y that a user will request category i follo w ed b y category j |for all pairs i and j . Note that, although Mark o v mo dels are often enco ded b y conditional probabilities p ( j j i ), w e ha v e found that join t probabilities p ( i; j )= p ( j j i ) p ( i ) are more informa-tiv e, b ecause they include the lik eliho o d of rst requesting category i .
 The rst-order Mark o v mo del sho wn in Figure 3 is straigh t-forw ard to in terpret. Users in the cluster start on frontpage and then ma y pro ceed to almost an y other category . Once in a category , users ma y bro wse for a while, but return to frontpage b efore mo ving to another category . Users tend to lea v e the site from frontpage and business .
 Finally , there will b e situations where a site administrator do es not care ab out the order in whic h requests are made. In this case, w e cluster users using a mo del that re ects this lac kof in terest|namely , a mixture of zeroth-order Mark o v mo dels (see Cadez et al., 2000). Figure 3: The rst-order Mark o v mo del sho wn b y righ t clic king on cluster 8 in Figure 2. In this section, w e discuss our clustering algorithms and re-lated issues including scalabilit y .
 As w e ha v e discussed, w e construct clusters b y learning a mixture of rst-order Mark o v mo dels (or a mixture of zeroth-order Mark o v mo dels when w e are in terested in visit order). Eac h mixture comp onen t of the mo del corresp onds to a cluster. F or a presp eci ed n um ber of clusters K , w e can learn the parameters (MAP estimates) of the mixture mo del using the EM algorithm ([2]). T o determine the n um-b er of clusters, w e learn mo dels for man yv alues of K and c ho ose the mo del that b est predicts new or out-of-sample data. In particular, w e c ho ose the mo del with K clusters that minimizes where K are the parameters obtained from EM, and l eng th ( x i ) is the length of the sequence for user i . Note that this score re ects the a v erage n um b er of bits required to enco de a category request made b y the user.
 W e applied this approac h to samples of our msn b c.com data. W e learned mo dels using a training set of 100,023 sequences sampled from the original one million. W e then ev aluated the mo dels using the out-of-sample score in Equation 1 on a di eren t sample of 98,687 sequences dra wn from the original data. EM w as run un til the relativ ec hange in log lik eliho o d across successiv e iterations fell b ello w 0.0001. All runs, in-cluding those describ ed in the next section, w ere p erformed on a desktop PC with a P en tium I I I Xeon pro cessor running at 500MHz with enough memory to a v oid paging. In our largest runs with N = 200 ; 000 and K = 200, only 11.5Mb of memory w ere used.
 Figure 4 sho ws the out-of-sample scores for rst-and zeroth-order Mark o v mo dels for v arious v alues of the n um ber of clusters K .W e see that the b est rst-order mo del b y our cri-terion is a mo del with K = 40 comp onen ts. In con trast, the Figure 4: Num b er of bits (on a v erage) needed to en-co de an out-of-sample ev en tv ersus n um b er of clus-ters K for a mixture of rst-order Mark o v mo dels, the same mo del constrained so that ev ery user in the cluster has the same rst page-category request, and a mixture of zeroth-order Mark o v mo dels. zeroth-order mo dels con tin ue to do b etter as K increases. Of course, when K reac hes some v alue less than N , the n um-b er of mo del comp onen ts will exceed the n um b er of distinct observ ations. A t this p oin t, the out-of-sample score cannot increase an y further with K . One last observ ation ab out these t w o curv es is that, for v alues of K of practical in terest ( K&lt; 3000), the b est zeroth-order mo del is w orse at predict-ing out-of-sample data than the w orst ( K = 1) rst-order mo del.
 In learning these mo dels, w e encoun tered a phenomenon that, to our kno wledge, has not b een rep orted in the litera-ture. Namely , when learning a mixture of rst-order Mark o v mo dels using this data, w e found that t w o or more clusters often w ere enco ded b y a single mixture comp onen t. F or in-stance, consider t w o clusters: a cluster of users who initially request category a and then c ho ose b et w een categories b and c , and a cluster of users who initially request category d and then c ho ose bet w een categories e and f . These t w o clus-ters can b e enco ded in a single comp onen t of the mixture mo del, b ecause the sequences for the separate clusters do not con tain common elemen ts.
 The presence of m ulti-cluster comp onen ts do es not a ect the predictiv e po w er of a mo del. Nonetheless, when used in conjunction with our visualization to ol, the existence of suc h comp onen ts are problematic. Sp eci cally , the b eha v-iors of users from more than one cluster are presen ted in the same windo w, often confusing or distracting the site admin-istrator. Consequen tly , there is a need to pro duce mo dels without m ulti-cluster comp onen ts. One metho d for do so is to run the EM algorithm and then p ost pro cess the resulting mo del, separating an ym ulti-cluster comp onen ts found. A second metho d is to allo w only one state (category) to ha v e a non-zero probabilit yof b eing the initial state in eac hof the rst-order Mark o v mo dels. Figure 5: Running time of the rst-order Mark o v Chain clustering algorithm. Dotted lines (linear t) are included for reference.
 Using the second metho d can ha v e the unfortunate conse-quence that a cluster of users that ha v e di eren t initial states but similar paths after the initial state are divided in to sepa-rate clusters. Nonetheless, this p oten tial problem w as fairly insigni can t for our msn b c.com data. In particular, Fig-ure 4 sho ws the out-of-sample score for mixture mo dels con-strained to ha v e the same rst request. W e see that these constrained mo dels ha v e a predictiv e po w er almost equal to that of the unconstrained mo dels. Of course, when in-tro ducing this constrain t, more comp onen ts are needed to represen t the data than in the unconstrained case. F or this particular data, a constrained mo del with 100 comp onen ts has almost the predictiv epo w er of an unconstrained mo del with 40 comp onen ts. F or our visualization in Section 2, w e used the constrained mo del with K = 100 to assign users to clusters.
 Finally , w e turn to issues of scalabilit y . As w e ha v e men-tioned, the memory requiremen ts of the EM algorithm are linear in the n um b er of sequences N and the n um b er of clus-ters K . In fact, our implemen tation can pro cess millions of users and thousands of clusters|all in memory|with RAM sizes that are t ypical for to da y's p ersonal computers. The run time of the algorithm p er iter ation is linear in N and K . Nonetheless, it is di X cult to mathematically c haracterize ho w the n um b er of iterations required to reac h con v ergence dep end on N and K . When the n um b er of sequences and particularly n um ber of clusters increase, the shap e of the lik eliho o d surface c hanges, and new lo cal maxima or saddle p oin ts can app ear. As a result, the n um ber of iterations required for the algorithm to con v erge ma y increases with N or K .
 T o address this issue, w e measured the over al l run time of the EM algorithm applied to our dataset for v arious N and K . W ev aried the n um b er of sequences from 10,000 to 200,000 and the n um b er of clusters from 10 to 200. Eac h data p oin t in the graphs represen ts the time required for our EM al-gorithm to con v erge. Figure 5 sho ws the o v erall run time as a function of K and N . The dotted lines represen t linear ts through the corresp onding data p oin ts. These results demonstrate that, at least for the msn b c.com dataset, the EM algorithm scales linearly with N and K . W e ha v e dev elop ed a simple approac h for visualizing user b eha vior on a W eb site, and implemen ted our metho d in a to ol called W ebCANV AS. In our approac h, w e rst cluster user b eha viors using a mixture of rst-order Mark o v mo dels. W e then displa y the b eha vior of all users in eac h cluster along with the rst-order Mark o v mo del for eac h cluster. In using rst-order Mark o v mo dels for clustering, w e are able to tak ein to accoun t the order in whic h eac h user requests pages. In our exp erience with data from the msn b c.com site, these metho ds ha v e rev ealed n umerous in teresting insigh ts that suggest impro v emen ts in the site.
 Our use of mo del-based clustering has the adv an tage that, w e easily can c ho ose statistical mo dels to re ect the criteria b y whic h a site administrator wishes to cluster users. F or example, if order of page request is not imp ortan t, w e can cluster users using a mixture of zeroth-order Mark o v mo dels. In addition, using a mo del-based approac h com bined with an EM algorithm for learning parameters, our approac h has a memory requiremen t and run time that scales linearly in the n um b er of sequences N and the n um b er of clusters K . This scalabilit y mak es our approac h suitable for applications on extremely large data sets.
 Finally , there are sev eral straigh tforw ard extensions to our tec hnology . W e ha v e already men tioned one: use higher-order Mark o v mo dels for mo del comp onen ts. This exten-sion allo ws us to mo del longer range dep endencies in the se-quence. Another extension is to mo del the dur ation of eac h visit. This extension can b e ac hiev ed b y using an yn um ber of duration mo dels (e.g., exp onen tial deca y) as the comp o-nen ts of a mixture mo del. In another extension, w e can use page visits at the URL lev el, in addition to category infor-mation, to cluster users. In particular, w e can use Mark o v mo dels to c haracterize the transitions among categories as w ell as the transitions among pages within a giv en category . W e thank Max Chic k ering for his commen ts on an draft of this pap er. The dataset for this pap er w as pro vided b y msn b c.com. The w ork of Igor Cadez and P adhraic Sm yth w as supp orted in part b y NSF a w ard IRI-9703120. [1] I. Cadez, D. Hec k erman, C. Meek, P .Sm yth, and [2] A. Dempster, N. Laird, and D. Rubin. Maxim um [3] B. Hub erman, P . Pirolli, J. Pitk o w, and R. Luk ose.
