 The Web has grown into one of the most important channels to communicate social events nowadays. However, the sheer volume of events available in event-based social networks (EBSNs) often undermines the users X  ability to choose the events that best fit their interests. Recommender systems appear as a natural solution for this problem, but differ-ently from classic recommendation scenarios (e.g. movies, books), the event recommendation problem is intrinsically cold-start. Indeed, events published in EBSNs are typically short-lived and, by definition, are always in the future, hav-ing little or no trace of historical attendance. To overcome this limitation, we propose to exploit several contextual sig-nals available from EBSNs. In particular, besides content-based signals based on the events X  description and collabo-rative signals derived from users X  RSVPs, we exploit social signals based on group memberships, location signals based on the users X  geographical preferences, and temporal sig-nals derived from the users X  time preferences. Moreover, we combine the proposed signals for learning to rank events for personalized recommendation. Thorough experiments using a large crawl of Meetup.com demonstrate the effectiveness of our proposed contextual learning approach in contrast to state-of-the-art event recommenders from the literature. H.3.3 [ Information Search and Retrieval ]: Information filtering; H.2.8 [ Database Applications ]: Data mining Algorithms; Experimentation Event-based social networks; recommender systems c  X 
Event-based social networks (EBSNs) are online social networks where users can create, promote and share up-coming events of any kind with other users. For instance, Meetup.com, 1 one of the largest EBSNs available today, registered 3,000 new groups and 330,000 users participat-ing in events in the first week of January, 2015 alone. 2 Meetup.com, users can create and join groups of like-minded people, promoting events (aka Meetups) that they are inter-ested in. However, the sheer volume of available events, especially in large and touristic cities, often undermines the users X  ability to find the ones that best match their interests.
Recommender systems appear as a natural solution to overcome such an information overload, as they help users discover relevant information in large data sets. Nonetheless, the event recommendation problem is arguably more chal-lenging than classic recommendation scenarios (e.g. movies and books), since event recommenders need to deal with the new item cold-start problem that arises naturally in this setting [14]. Indeed, events published in EBSNs are typi-cally short-lived and, by definition, are always in the future, having little or no trace of historical attendance. In this scenario, classic recommendation approaches may underper-form, leaving the EBSN users unsatisfied.

To overcome this limitation, we propose a context-aware approach to event recommendation, by exploiting several contextual signals generally available in EBSNs. Besides content-based signals based on the events X  description and collaborative signals derived from users X  RSVPs, 3 we exploit social signals based on group memberships, location signals based on the users X  home distance to each event, and tem-poral signals derived from the users X  time preferences. In particular, our assumption is that each of these signals has a positive influence on the users X  decision about attending an event. For example, a user may decide to attend an event not only because the event matches his or her interests and other like-minded users have RSVP X  X d to the event, but also because the event is in the user X  X  neighborhood.

To exploit the aforementioned contextual signals, we de-vise and meticulously analyse the behavior of a specialized recommendation model tailored to each signal. To combine the strengths of the various devised models, we further pro-pose a hybrid contextual recommender for learning to rank upcoming events in an EBSN. Thorough experiments using http://www.meetup.com http://blog.meetup.com/chart
RSVP stands for the French expression  X  X   X epondez s X  X l vous pla X  X t X , meaning  X  X lease respond X . a large crawl of Meetup.com demonstrate the effectiveness of our proposed contextual learning approach in contrast to state-of-the-art event recommenders from the literature. To the best of our knowledge, this is the first attempt to con-jointly exploit the aforementioned contextual evidence for the event recommendation problem. Our contributions can be summarized as follows:
In the remainder of this paper, Section 2 formalizes our problem setting and the nomenclature used throughout the paper. Section 3 describes our proposed context-aware mod-els for event recommendation. Section 4 presents the setup and the results of our experimental evaluation. Relevant related works are described in Section 5. Lastly, Section 6 provides our conclusions and directions for future work.
Traditional recommender systems typically model an in-teraction between two types of entity, namely, users and items. Context-aware recommenders, on the other hand, exploit additional signals that help further define such an interaction, including the time, location, and social environ-ment in which the interaction takes place [1]. As pointed out in Section 1, there is no interaction between users and candidate events in EBSNs, since the latter are always in the future. 4 Indeed, even when using positive RSVP data as a proxy for user-event attendance X  X s we do later in Sec-tion 3 X  X his information is still missing for the majority of events (cf. Section 4). To overcome this problem, also known as the new item cold-start problem, we propose to use the rich contextual evidence available in EBSNs.

The problem that we address in this paper can be stated as follows: given a target user and a set of contextual signals, which of the available events are more likely to be attended (i.e. RSVP X  X d  X  X es X ) by this user? We simulate this scenario by splitting the available RSVP data into two partitions, before and after a given time-stamp  X  . The (user,events) pairs occurring before  X  form the training partition, while those that occur after  X  form the test partition. Formally, in addition to the set of users U and the set of events E , we consider as contextual signals users X  temporal preferences T , the set of groups G that users can join, users X  geographic distance preferences D , and the textual content of events C . In this paper, we only consider implicit feedback data, i.e., the set S  X  U  X  E  X  T  X  G  X  D  X  C  X  D of relations between users, time, events, groups, distances and content. The task is then to find a scoring function of the form: that assigns a preference score for candidate events. Thus, for a given target user u  X  U and the contextual signals
Except for the events that occur periodically. t  X  T , g  X  G , c  X  C and d  X  D , the top-n recommendations can be computed by: where n denotes the number of events to be recommended and E u the set of events that user u has attended in the past. In top-n recommendation settings, such as this, the goal is to minimize a ranking loss function of the form: which quantifies the misfit between the recommended list (generated by  X  s  X  R E ) and the actual list (a subset of P ( E )) on test users whose actual events are unknown during train-ing. In the sequel we will use  X  s X ( u,e ) to denote a context-aware recommender that computes the relevance score of e  X  E to user u  X  U based on context X .
Data sparsity can severely hamper the performance of tra-ditional event recommenders based on a single strategy. To overcome this limitation, we propose a hybrid recommen-dation approach that leverages multiple context-aware rec-ommenders as features for learning to rank events. In the following, we describe each of the proposed features as well as our learning approach for event recommendation.
In some EBSNs, such as Meetup.com, users may join groups and interact with other users both online, through the communication tools available in the platform, and face-to-face, by means of the events promoted by the groups. Here we propose two models based on the social interactions in these two modes of communication.
As we will see in Section 4, group membership has a strong influence on the users X  decision on attending an event, spe-cially when the user is a frequent attendant of the group events. The intuition here is that the likelihood of the target user u  X  U attending event e  X  E depends on the number of events this user attended in the group that e belongs to. In other words, the more events a user attends in a group, the higher is the probability that this user will continue to attend events of this group. More formally, assuming that g represents the group associated with the candidate event e , the relevance score of this event for the target user u  X  U is calculated as follows: where E u denotes the set of all events that the user u  X  U attended, E u,g e denotes the set of events attended by u that were created by group g e  X  G , and S 1 is the social context represented by this recommender.
Although simple and effective (cf. Section 4), the method described above does not consider two important interac-tions, namely, between users and all the groups they are affiliated to and between the groups and the events created by them. By using these two sources of interactions con-jointly one might discover, for example, that users affiliated to the same or similar groups are prone to attend the same events created by these groups. The user-group relation is especially important because it enables the recommendation of cold-start events, i.e., events with zero RSVP.

To model and leverage these sources of interactions con-jointly we propose to use Multi-Relational Factorization with Bayesian Personalized Ranking (MRBPR) [8], a state-of-art recommender that solves the top-n recommendation task by optimizing a personalized ranking function (aka BPR [16]) considering multiple binary relations. In our case, the idea is to reconstruct the target relation R UE  X  U  X  E by consider-ing a joint factorization approach that includes the auxiliary relations R UG  X  U  X  G and R GE  X  G  X  E .

The parameters of the model  X  := { U , E , G } are the latent matrices associated with each considered entity. For example, the set of users U is associated with the matrix U  X  R | U | X  k , where k is the number of latent factors considered. The objective function is then expressed as follows: where L is a loss function (in our case BPR [16]) measuring the reconstruction error of the relation under consideration,  X , X , X  are application specific weights for the losses of the relations considered and  X  U , X  G , X  E are regularization pa-rameters. The intuition is that latent factors are shared between all relations that involve the same entities, i.e., in-formation is propagated between relations sharing the same entities. The parameter learning is performed via stochastic gradient descent as proposed by [8].

Once the model is learned, predicting the relevance score of an event e  X  E for the target user u  X  U is done as follows: where ~u and ~e are the latent vectors of user u and event e respectively. The key difference from a standard matrix factorization (i.e. based on a single relation) is that now the latent factors of u and e also bear group aspects that may influence the users X  decision on attending a future event.
Content-based filtering appears as a promising approach in EBSNs. In particular, besides its usual capacity of retriev-ing events with similar descriptions, it also captures recur-rent events since these events tend to have similar or near-identical content. Thus, as content-based filtering approach, we use a classic bag-of-words model based on the textual description of events. Here, each user is represented as a TF-IDF vector of the words extracted from the past events the user attended. Additionally, each event is weighted by its time distance to the recommendation instant by means of a time value of money decay function [18]. More formally, the profile of the target user u  X  U is defined as follows: where ~e is the TF-IDF representation of event e considering the terms that appear in the event X  X  description,  X  is a time decay factor and  X  ( e ) returns the number of days from the RSVP to e until the moment of recommendation. In the end, the candidate events are ranked based on their cosine similarity with respect to the target user, such that:
Other variations of this approach were also evaluated, such as Latent Dirichlent Allocation (LDA) [3], however, none of these variations outperformed the bag-of-words approach with time decay.
The mobility patterns of users within a city may vary from user to user. While someone may prefer to attend events in his neighborhood, others might like to attend events far away from their homes. Figure 3.3 depicts the estimated densities of two inhabitants of Phoenix, US, where the colored regions represent the density of attended events around their homes (depicted as map markers). Notice that while User 1 tends to concentrate his events in a single region with sporadic events in other regions, User 2 concentrates his events in two main regions.
Here we propose a kernel-based density estimation ap-proach to model the mobility patterns of individual users as distributions of geographic distances between the attended events. The relevance of a new event for a user is based on the aggregated likelihood of this event being located in any of the regions the user attended events in the past.
More formally, let L u be the sample of lat-long coordinates of the events the target user has attended in the past, i.e., where l e is the lat-long coordinate of event e  X  E u .
Assuming that L u comes from an unknown distribution f , a kernel density function  X  f is defined over L u as follows: where l is a lat-long coordinate, K H ( . ) is the bivariate Gaus-sian kernel, and H is a 2  X  2 symmetric and positive definite matrix that represents the bandwidth defined as H = ( h 1 ,h 2 )  X  I .
The geographical preferences of a given user are then rep-resented by the sum of all Gaussian distributions centered at l e , for all e  X  E u . The candidate events are now scored based on their distances to the events attended by the target user in the past as follows:
Another important factor that might affect users X  decision on attending an event is when the event occurs. Some users might prefer to attend events during the morning on week-ends, while others prefer events occurring on Friday nights. We capture this intuition by assuming that users that at-tended events in the past at certain days of the week and at certain hours of the day will likely attend events with a similar temporal profile in the future. Figure 2 exposes two interesting cases. While User 1 tends to go to events every day, but mainly at night, User 2 attends events during the week and in the afternoon only. Figure 2: Temporal distribution of attended events.
To formalize this intuition, we represent each event e as a 24  X  7-dimensional vector ~e in the space of all possible days of the week and hours of the day, with a vector component set to 1 whenever the event happened at that particular day and hour. Accordingly, each user is represented as the centroid ~u of the events he attended in the past:
Similarly to Equation (6), the temporal score for user u and event e can now be expressed as the cosine between their vector representations, such that:
To further improve the effectiveness of event recommen-dation, particularly for cold-start events, we use the afore-mentioned recommenders as features for learning to rank events. In particular, let D := { ( x 1 ,y 1 ) ,..., ( x the training set where x i := ( X  s 1 ( u,e ) ,...,  X  s m ( u,e ) , | U feature vector containing the normalized (i.e. z-score) scores generated for a given ( u  X  U,e  X  E ) pair by each of the m context-aware recommenders plus the number of RSVPs | U e the event e has received in the past. Notice that this last fea-ture refers to the sparsity of this event. Also let y i = { 0 , 1 } denote whether user u attended event e (class 1) or not (class 0) respectively. In a learning to rank setting, the classes are not nominal but ordinal (i.e. 0 &lt; 1). The goal is to learn a function h ( x ) such that for any pair of training instances ( x ,y i ) and ( x j ,y j ) the following implication holds:
For learning h ( x ), we have chosen Coordinate Ascent [12], a state-of-the-art listwise learning to rank approach. Coor-dinate Ascent directly optimizes a target ranking evaluation metric in an iterative fashion until convergence. As detailed in Section 4, in our experiments, we use NDCG@10 as the target optimization function. Once learned, we use function h ( x ) to generate the final recommendation list. We will re-fer to this method as Multi-Contextual Learning to Rank Events (MCLRE for short).
In this section, we thoroughly assess the effectiveness of our proposed context-aware learning approach for event rec-ommendation. In Section 4.1, we describe the setup that supports our evaluation, including the EBSN dataset, the evaluation protocol and metrics, and the recommendation baselines used in our experiments. In Section 4.2, we dis-cuss and analyse our experimental results.
Meetup.com is an EBSN that promotes offline and face-to-face meetings, the so called Meetups. The network is formed by a Web-based structure of groups where like-minded peo-ple can plan, create, comment, share and advertise events. After the creation of a public event, any user can RSVP to it with  X  X es X  or  X  X o X . We used the Meetup REST API 5 to crawl all public activity in the platform from January, 2010 to April, 2014, which comprises the dataset we used to evaluate the recommenders proposed in this paper.

Three cities located in the USA were selected for this in-vestigation, namely Phoenix, Chicago and San Jose. We se-lected these cities for two main reasons: (i) they are among the most populous cities in the USA, which might indicate large event activity and (ii) the cities are located in different states, thus representing some degree of cultural diversity. The data collection procedure consisted of first collecting all http://www.meetup.com/meetup_api/ the groups of a given city. Next, for each group, its members and events were collected. Finally, from each group member, we collected his or her event X  X  RSVPs. Table 4.1.1 summa-rizes salient statistics of this dataset, in terms of the number of groups ( | G | ), users ( | U | ), events ( | E | ), and RSVPs. We also report the sparsity of the dataset, as the percentage of missing links (i.e., RSVPs) between users and events. Chicago 2,321 207,649 190,927 1,375,154 99.996% Phoenix 1,661 117,458 222,632 1,209,324 99.995% San Jose 2,589 242,143 206,682 1,607,985 99.996% Table 1: Statistics of the Meetup.com dataset.

The statistics in Table 4.1.1 emphasize the extreme spar-sity of RSVPs in our dataset. In addition, Figure 4.1.1 depicts the user and event RSVP distribution per sparsity level. We show all the users (as well as events) in the test set that are associated with a specific number of  X  X es X  RSVPs. In both cases, we see that the most frequent level of sparsity is zero, which means that most of the users and events in the test partition have no history of  X  X es X  RSVPs. It is worth noticing that collaborative-filtering algorithms based solely on RSVP data will not work on these cases. Figure 3: Distribution of positive RSVPs per spar-sity level for (a) users and (b) events.
In order to simulate a realistic event recommendation sce-nario in our evaluation, we select 12 timestamps equally spaced in time across the 52 months covered by our dataset. By having multiple such timestamps, we can assess the ef-fectiveness of each recommender through a sliding training window. In particular, each timestamp simulates a moment in time when an event recommendation must be generated. As illustrated in Figure 4, we consider as candidate events those created within the 6 months immediately before the target timestamp and that are scheduled to take place any-time after the timestamp. Accordingly, the RSVPs issued for a candidate event during the 6 months window preced-ing the target timestamp are used for training, whereas those issued after the timestamp form test instances to be recom-mended to the corresponding users. For each city, of the 12 train-test partitions induced by the chosen timestamps, the four initial partitions are used as validation sets for tuning the possible (hyper)parameters of the recommender mod-els. The selected models are then tested by averaging their performance across the remaining eight partitions.

Since the top-n item recommendation problem is usually related to personalized ranking (in our case, a ranked list of events to which a user is likely to RSVP  X  X es X ), we use the well-known normalized discounted cumulative gain (NDCG) ranking evaluation metric truncated to the top 10 recom-mendations.
To assess the effectiveness of our MCLRE model, we com-pare it to the following state-of-the-art event recommenders:
The parameters used for all models were defined by a grid search on the validation sets. The following contex-tual model parameters were defined to Chicago, Phoenix and San Jose respectively:  X  s T (Equation (13)) considered 65, 50 and 100 neighbors;  X  s D (Equation (11)) used band-width parameters h 1 and h 2 set to 0 . 001, 0 . 00075, 0 . 00075; and the time decay factor  X  of  X  s C (Equation (7)) was set to 0 . 005, 0 . 01 and 0 . 005. The following models had the same parameter values for all cities: the MRBPR (Equation (5)) and BPR-MF parameters were set to k = 300 (number of latent factors), learn rate 0 . 1 (step size of gradient descent), number of iterations 1500 (stop criterion); MRBPR relation weights were defined as 0 . 1 to R UE , 0 . 22 to the R UG 0 . 68 to R GE ; BPR-NET was set with k = 200, learn rate 0 . 1 and number of iterations 600. In this section, we assess the effectiveness of our proposed MCLRE model for event recommendation. In particular, we aim to answer the following research questions: Q1. How effective is MCLRE for event recommendation? Q2. How robust is MCLRE to sparsity in the RSVP data? Q3. Which contextual features are effective recommenders?
In the remainder of this section, we address each of these research questions in turn.
To address Q1, we assess the effectiveness of MCLRE by comparing it to three state-of-the-art event recommenders from the literature, as discussed in Section 4.1.3: MP, BPR-MF, and BPR-NET. Figure 5 shows the result of this com-parison in terms of NDCG@10 for events recommended in the three cities comprised in our dataset (Chicago, Phoenix, and San Jose). In particular, the distribution of NDCG@10 figures for the test users considered in each case is repre-sented in a boxplot, highlighting the 25th, 50th (i.e., the median), and 75th percentiles inside the box, and possible outliers outside the box.
 Figure 5: Event recommendation effectiveness.

From Figure 5, we first observe that MCLRE consistently outperforms all baselines in all three cities. Indeed, MCLRE improves upon the strongest baseline (BPR-NET) by 64% for Chicago, 72% for Phoenix, and 79% for San Jose in terms of the median NDCG@10. Recalling question Q1, this at-tests the effectiveness of our proposed model in contrast to state-of-the-art recommenders from the literature.
One of the main reasons for the effective performance of our proposed model is that it is able to mitigate the cold-start problem for both users and events, which is intrinsic to EBSNs. To further assess the robustness of our model to data sparsity and hence address question Q2, we evaluate the effectiveness of MCLRE compared to the aforementioned baselines for various user and event sparsity levels. Figure 6 shows the result of this comparison in terms of NDCG@10 for event recommendations in Phoenix. 6 Each sparsity level on the x-axis denotes the number of RSVPs available for events (resp. users) at that sparsity level.

From Figure 6, we observe that MCLRE shows a higher resilience to data sparsity for both users and events com-pared to the other event recommenders. Even in the extreme case, when users and events have absolutely no past RSVP (i.e., the sparsity level 0), our model is able to provide rec-ommendations with reasonable accuracy. BPR-NET is the only approach, besides ours, that is able to recommend for cold-start users, which is explained by its ability to exploit user-user interactions in terms of the shared groups these users are affiliated to. On the other hand, MCLRE is the only method able to recommend for cold-start events, mainly due to the content, geographic, and time-aware methods used as features. Notice that both BPR-NET and BPR-MF (and in fact any other recommendation algorithm that relies on user-event interaction) are not able to recommend cold-start events. Recalling question Q2, these results attest the robustness of our approach to sparse RSVP data.
To address Q3, we further analyse the effectiveness of our proposed approach in terms of its constituent contex-tual features. In particular, Figure 7 shows the NDCG@10 performance of our proposed context-aware recommenders compared to MCLRE, which combines them for learning to rank events. From the figure, we first note that MCLRE outperforms all individual recommenders. Recalling Q3, the social context appears as the most informative signal, with the multi-relational model (Equation (5)) achieving the best result followed by the simple but efficient group frequency heuristic (Equation (3)). The content-aware recommender (Equation (7)) also achieves good results, probably due to its ability to recommend cold-start events. The least in-formative contexts are the geographical and temporal ones (Equations (11) and (13), respectively), which is somewhat expected since they capture less specific aspects of the user preferences for events. Notice however that they are still better than the MP baseline.
In this section, we summarize the most relevant related works on event recommendation. Minkov et al. [13] pro-posed a hybrid approach for recommending future events. Because no direct feedback exists for such events, users X  pref-erences for an event were inferred based upon their prefer-ence for past events with similar content. In addition, they proposed to distinguish content dimensions shared collabo-ratively among users from dimensions unique to individual users. In a small user study in the domain of academic events, they demonstrated the effectiveness of the proposed hybrid approach in contrast to a pure content-based rec-ommender. Additionally to using historical data of events attendance and the content of events, we exploit other con-
Results for Chicago and San Jose show similar trends and are omited due to space constraints. Figure 7: Per-feature recommendation effectiveness. texts, such as the groups of users, location and temporal preferences. Moreover, we conduct a large scale experiment on data collected from a popular EBSN.
 Another hybrid approach was proposed by Khrouf and Troncy [7] for recommending music-related events. In par-ticular, their approach leveraged an enriched content-based representation of events by exploiting category information from DBPedia about the artists associated with each event. In addition, they modeled the cohesiveness of each user X  X  content-based profile in order to avoid drifting from the user X  X  core preferences. Lastly, this enriched content-based model was further combined with a collaborative model that exploited social interactions among users in an EBSN. Ex-periments on three music-oriented EBSNs demonstrated the effectiveness of the proposed extensions. Considering the multitude of domains found in general purpose EBSNs, such as Meetup.com, it may not be feasible to rely on DBPedia since many of these domains may not be covered. We do not make this assumption and leverage only the data di-rectly available in the EBSN under consideration.

Liu et al. [9] proposed to exploit online and offline patterns of interaction in EBSNs for recommending new events. By exploiting only the topological structure of an EBSN, they proposed different information flow models to infer a user X  X  interest for a given event based upon the manifested inter-est of other EBSN users for the same event. They demon-strated that community-based diffusion models, which favor the flow of information within (as opposed to across) com-munities, are particularly effective signals for event recom-mendation. This approach was later extended by Qiao et al. [15], who proposed a Bayesian matrix factorization ap-proach to event recommendation [16], by employing social regularization factors inspired by users X  interactions in an EBSN. Zhang et al. [20] showed that the proposed model improves upon ordinary and non-regularized matrix factor-ization models. Our work is complementary to these, by ex-ploiting, additionally to RSVP and group information, other contextual data. Furthermore, Zhang et al. [20] compared their approach only against matrix factorization methods, while some recent works (see [11]) have shown that pure matrix factorization (based only on user-event interactions) performs poorly on EBSN data in comparison to simpler methods due to the high level of sparsity of these data sets.
There is a large body of research on venue recommenda-tion in location-based social networks (LBSNs) [2, 4, 5, 6, 19, 10]. LBSNs share similar properties with EBSNs, e.g., location information of users and venues. However, LBSNs do not suffer from the new item cold-start problem as EBSNs do, since venues usually do not have an expiration date.
In a previous study [11], we performed a large-scale anal-ysis of several factors that impact a user X  X  propensity to reply positively to future events in an EBSN. In particular, based upon two years worth of user, event, and RSVP (i.e., user-event interactions) data from three representative US cities on Meetup.com, we found that users tend to provide RSVPs close to the occurrence of the events. We also found that state-of-the-art matrix factorization algorithms for top-n recommendation did not perform better than simpler col-laborative filtering algorithms such as user-based k -NN. This motivated us to try other approaches that consider explicit features instead of latent ones.
In this paper, we tackled the event recommendation prob-lem through a learning to rank approach that takes sev-eral context-aware recommenders as input features. Besides content-based signals based on the events X  description and collaborative signals derived from RSVPs, we exploited so-cial, geographic, and temporal signals. We used Coordinate Ascent, a state-of-the-art learning to ranking algorithm that learns a personalized ranking from the output scores of the context-aware recommenders by optimizing NDCG@10 di-rectly. To the best of our knowledge, this is the first attempt to leverage, collectively, the aforementioned contextual sig-nals for the event recommendation problem.

In a thorough evaluation on a large crawl of Meetup.com, we showed that our approach improves upon a state-of-the-art context-aware event recommender based on matrix fac-torization with social regularization by up to 79%. From our results, we can draw many interesting conclusions, such as: We have several ideas to extend this work in the future. First, we will repeat the experiments with cities in different countries. Second, we will exploit other contexts and ap-proaches to leverage these contexts. We also intend to ex-ploit other kinds of EBSNs such as, e.g., Facebook events.
This work is partially supported by the National Institute of Science and Technology for Software Engineering (INES), funded by CNPq and FACEPE, grants 573964/2008-4 and APQ-1037-1.03/08; and Hewlett-Packard Brasil Ltda., through the FRH-Analytics 2013 project, and used incentives from the Brazilian Informatics Law (n. 8.2.48/1991). We also want to thank Lucas Drumond for generously sharing the implementation of his MRBPR method. [1] G. Adomavicius and A. Tuzhilin. Context-aware [2] J. Bao, Y. Zheng, and M. F. Mokbel. Location-based [3] D. M. Blei, A. Y. Ng, and M. I. Jordan. Latent [4] C. Cheng, H. Yang, I. King, and M. R. Lyu. Fused [5] H. Gao, J. Tang, X. Hu, and H. Liu. Exploring [6] B. Hu and M. Ester. Spatial topic modeling in online [7] H. Khrouf and R. Troncy. Hybrid event [8] A. Krohn-Grimberghe, L. Drumond, C. Freudenthaler, [9] X. Liu, Q. He, Y. Tian, W.-C. Lee, J. McPherson, and [10] X. Liu, Y. Liu, K. Aberer, and C. Miao. Personalized [11] A. Q. Macedo and L. B. Marinho. Event [12] D. Metzler and W. Bruce Croft. Linear feature-based [13] E. Minkov, B. Charrow, J. Ledlie, S. Teller, and [14] S.-T. Park and W. Chu. Pairwise preference regression [15] Z. Qiao, P. Zhang, C. Zhou, Y. Cao, L. Guo, and [16] S. Rendle, C. Freudenthaler, Z. Gantner, and [17] S. Rendle, C. Freudenthaler, Z. Gantner, and [18] T. Sandholm and H. Ung. Real-time, location-aware [19] M. Ye, P. Yin, W.-C. Lee, and D. L. Lee. Exploiting [20] W. Zhang, J. Wang, and W. Feng. Combining latent
