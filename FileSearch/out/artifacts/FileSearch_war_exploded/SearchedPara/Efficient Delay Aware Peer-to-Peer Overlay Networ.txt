 Peer-to-Peer (P2P) networks have become the fast growing and the most popular Internet application in recent years. Traditionally, P2P network can be roughly divided into two aspects according to its or ganization: unstructured and structured. 
Whether being an unstructured or structured network, there is a same point. Peers in P2P network communicate in a logical overlay network. In this way, the path namely the logical distance between two nodes. But, in fact, the routing efficiency of P2P overlay network largely depends on the end-to-end delay in network level, geography, some requests may route across different Autonomous System (AS), while other requests only hop in the same network. That the actual topology of network is inconsistent with overlay network may lead to a problem: the shortest path in overlay network level can not ensure the efficiency in real world. 
We propose a new P2P system model DAPS that consider both overlay and physical networks, and use end-to-end delay as the performance metrics to achieve efficient routing. 
The rest of the paper is organized as follows. Section 2 introduces and describes the related work on P2P systems. Section 3 introduces the concepts and design behind DAPS. Section 4 presents early results from our simulation environment and some conclusions are drawn in Section 5. Tapestry [3], Chord [4] and Can [5], all offering DHT service. Their common theme is that they arrange keys (such as lookup items, files, services, etc) and peer nodes in the same identifier space. 
Although all these P2P networks work efficiently in the overlay network level, they neglect the real geographic layout more or less. So to some extent, these overlay overlay networks built on existing physical network. Thus, the structure of overlay and physical topology both affect the performance of the whole P2P network. Some P2P overlay network mentioned above doesn X  X  care much about the topology of network. 
Some researches [6] have revealed the importance of the topology of physical network, and propose topology-aware overlay network. In order to achieve good performance, the topology-aware overlay network care both the organization of the overlay network and consider some factors of the physical network. 
Geographic layout [8] was explored as one topology-aware technique to improve the routing performance in CAN. The technique attempts to map the d-dimensional space onto the physical network such that nodes that are neighbors in the d dimensional space are close in the physical network. This technique can achieve good performance but has the disadvantage that it is not fully self-organizing; it requires a set of well-known landmark servers. In addition, it may cause significant imbalances in the distribution of nodes in the CAN space, leading to hot-spots. 
Proximity routing [9] is another kind of topology aware routing. With proximity routing, the overlay is constructed without regard for the physical network topology. space. The idea is to select, among the possible next hops, the one that is closest in the physical network or one that represents a good compromise between progress in the id performance, but this improvement is limited by the fact that a small number of nodes nodes that are closest in the network topology. 
Miguel Castro [7] presents a kind of proximity neighbor selection to build structured P2P overlay network with topology-aware routing. Its routing algorithm Proximity neighbor selection can improve the performance of the P2P network based on matching, such as Tapestry and Pastry. In Tapestry and Pastry, a message is normally forwarded in each routing step to a nearby node, according to the proximity metric, among all nodes whose node ID shares a longer prefix with the key. Moreover, the expected distance traveled in each consecutive routing step increases exponentially, because the density of nodes decreases exponentially with the length of the prefix match. The routing algorithms in Pastry and Tapestry claim that they allow effective proximity neighbor selection b ecause there is freedom to choose nearby routing table entries from among a large set of nodes. 3.1 Overview of DAPS DAPS (Delay Aware P2P System) is not a comprehensive peer-to-peer system, but a time of L for a lookup request and improve the total performance of the P2P system. from low to high, and source node will define a delay boundary, namely, the pruning factor, L t . Request messages will only send to the nodes whose delay is not more than L . Compared with traditional flooding, the request message is largely reduced and realize  X  X runing flood X  with the help of its routing table. 
The overlay network of DAPS organizes loosely and sends routing messages with the total performance,  X  X runing flood X  can lower the network traffic, reduce the complexity of locating algorithm and find expected results efficiently. 
With clustered entry in the routing table and the loose organization, the overlay network of DAPS is between structured and unstructured. So, it supports partial-match query and nearly does not need to care much about when the nodes join, leave network. 3.2 Routing Table Each DAPS node maintains a routing table which indicated where to find the destination of lookup request. The structure of routing table is organized on the base of delay, which is divided into clusters from low to high. Nodes in the same clusters have the same range of delay. row of the routing table contains the nodes whose delay is between  X  n-1 and  X  n ,. ... nodes into several sectors according the delay between them. 3.3 Locating and Routing In some unstructured P2P system, flooding is a simple solution to route request depth limit has been reached. Because the number of nodes at each depth grows reduce the number of visited nodes, DAPS uses  X  X runing flood X  to route request. 
Pruning flood is an iterative deepening, multiple breadth-first search with a pruning delay boundary, namely, the pruning factor, L t . It means the request must be satisfied requested node then receives and processes the message. If the node has the expected result, it stops the query immediately and returns results to the source node. Otherwise the node will resend the request to the nodes in its routing table where i  X   X  L t . Just less. 
Assume that there exist N nodes in the network and each node records N/r nodes in the delay range. So there are N/ (qr) nodes in each sectors in average. If L t =  X  k , in the worst condition, the number of request message that nodes totally send in one lookup procedure will be (N/qr) (N/qr + 1) k-1 . 
And, M~ O ((N/qr) k ) , M is the number of request message. In the traditional unstructured P2P system, such as Gnutella, it sends message by flooding. The number of its request messages will be O (N t ), t is the TTL of request messages. As it can be seen, if we appropriately choose the parameters of q, r, k, the message number can be largely reduced, and realize  X  X runing flood X . 
The source node starts looking up request with boundary L t =3  X  . At first, it only sends request message to nodes whose delay is not more than 3  X  . When message reaches node A and finds expected results, it will stop searching and return results at once. Node B receives the request but not find the expected result, so it will forward exceeding its pruning boundary, E forwards re quest to H where the result is found and return it to the source node. As for node F, if there doesn X  X  exist expected results, node (
The algorithm of DAPS is a kind of proximity routing. It adopts end-to-end delay as the performance metrics, as it is more sensitive to user. When searching a request, DAPS select a set of nodes with low delay. It may increase hops in overlay network, but it delivers the lowest delay to user as much as possible. We test the algorithms by simulation on GT-ITM [10] Internet. Figure 2 shows the quality of DAPS routing algorithms. With the increase of pruning factor, the percentage of successful lookup is increasin g fast. Nearly about 90% expected results can be found in the delay range (pruning factor) of 800.Further simulation results reveal that we can find nearly all the results with the increase of L t . In most P2P systems, the topology of physical network is often inconsistent with that of overlay network, which may lower the efficiency the routing algorithm. Based on this reason, we propose DAPS which sends request messages by pruning flooding. Compared with some unstructured P2P system, DAPS can efficiently find expected results in the given delay time and the number of request message is largely reduced. 
The overlay of DAPS is loosely structured so that the maintenance is much easier and simpler than that of the structured P2P system. DAPS uses pruning flood to send messages, so the number of request messages is still more than that of structured systems which often use DHT to eliminate flooding. So DAPS is not an ideal solution in the large network currently, but the search is more flexible than structured system, DHT into DAPS so as to reduce the request number and improve its routing efficiency further. 
