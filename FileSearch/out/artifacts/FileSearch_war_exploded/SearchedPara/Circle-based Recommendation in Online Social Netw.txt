 Online social network information promises to increase rec-ommendation accuracy beyond the capabilities of purely rating/feedback-driven recommender systems (RS). As to better serve users X  activities across different domains, many online social networks now support a new feature of X  X riends Circles X , which refines the domain-oblivious  X  X riends X  con-cept. RS should also benefit from domain-specific  X  X rust Circles X . Intuitively, a user may trust different subsets of friends regarding different domains. Unfortunately, in most existing multi-category rating datasets, a user X  X  social con-nections from all categories are mixed together. This paper presents an effort to develop circle-based RS. We focus on inferring category-specific social trust circles from available rating data combined with social network data. We out-line several variants of weighting friends within circles based on their inferred expertise levels. Through experiments on publicly available data, we demonstrate that the proposed circle-based recommendation models can better utilize user X  X  social trust information, resulting in increased recommenda-tion accuracy.
 H.2.8 [ Database Management ]: Database Applications X  Data Mining Algorithms collaborative filtering, friends circles, online social networks, recommender systems
Recommender Systems (RS) deal with information over-load by suggesting to users the items that are potentially of their interests. Traditional collaborative filtering approaches Now at Netflix Inc. Work was done while at Bell Labs. predict users X  interests by mining user rating history data [1], [2], [4], [6], [16], [23] and [24]. The increasingly popu-lar online social networks provide additional information to enhance pure rating-based RSes. Several social-trust based RSes have recently been proposed to improve recommenda-tion accuracy, to just name a few, [9], [10], [11], [12], [13], [15], [17], [18], and [19]. The common rationale behind all of them is that a user X  X  taste is similar to and/or influenced by her trusted friends in social networks. Meanwhile, an-other obvious fact is that users X  social life, being online or offline, is intrinsically multifaceted .Tobetterserveauser X  X  activities across different domains, many online social net-works now support a new feature of  X  X riends Circles X , which refines the domain-oblivious  X  X riends X  concept. Google+ is the first to introduce  X  X ircles X , the function that let users assign classmates, family members, colleagues and others to different groups. Facebook, which has long had Friend lists, also launched its  X  X roups X  feature to assign users to groups for finer granular information sharing: a user can share dif-ferent information with different groups. In Twitter, users can organize people who they follow (followees) into  X  X ists X . When a user clicks to view a list, she will see a stream of Tweets from all her followees in that list.

RSes should also benefit from domain-specific  X  X rust Cir-cles X . Intuitively, a user trusts different subsets of friends in different domains. For example, in the context of multi-category recommendation, a user u may trust user v in Cars category while not trust v in Kids X  TV Show category. Therefore, u should care less about v  X  X  ratings in Kids X  TV Show category than in Cars category. Ideally, if we know users X  trust circles in different categories, to predict ratings in one category, we probably should only use trust circles specific to that category. We call it circle-based recommen-dation . Unfortunately, in most existing multi-category rat-ing datasets, a user X  X  social connections from all categories are mixed together. So if we use all social trust informa-tion for rating prediction in a specific category, we mis-use social trust information from other categories, which compromises the rating prediction accuracy. Apart from that, even if the circles were explicitly known, e.g. Circles in Google+ or Facebook, they may not correspond to par-ticular item categories tha t a recommender system may be concerned with. Therefore, inferred circles concerning each item-category may be of value by themselves, besides the explicitly known circles.
 This paper presents an effort to develop circle-based RS. We focus on inferring category-specific social trust circles from available rating data combined with social network data where social trust links across all categories are mixed together. We propose a set of algorithms to infer category-specific circles of friends and to infer the trust value on each link based on user rating activities in each category. To infer the trust value of a link in a circle, we first estimate a user X  X  expertise level in a category based on the rating activities of herself as well as all users trusting her . We then assign to users trust values proportional to their expertise levels. The reconstructed trust circles are used to develop a low-rank matrix factorization type of RS. Through experiments on publicly available data, we demonstrate that the proposed circle-based RSes can better utilize user X  X  social trust infor-mation and achieve more accurate recommendation than the traditional matrix factorization approaches that do not use any social trust information, and the existing social-trust based RSes that use mixed social trust information across all categories.

The rest of the paper is organized as follows. Section 2 presents the related work. In Section 3, we first introduce the concept of trust circle, then propose three variants of assigning weights to users within each circle. Finally, we present circle-based training models, based on either ratings from one category or ratings from all categories. Experimen-tal results are presented in Section 4. The paper is concluded in Section 5.
In this paper, we focus on low-rank matrix factorization models, as they were found to be one of the most accurate single models for collaborative filtering [5,7,8,20,21]. In the following, we briefly review the ones relevant to this paper.
While there are various sophisticated approaches (e.g. [5, 7, 8, 20, 21]), we here briefly review the basic low-rank ma-trix factorization (MF) approach, which will be extended towards social network information in the remainder of this paper. The matrix of predicted ratings  X  R  X  R u 0  X  i 0 ,where u 0 denotes the number of users, and i 0 the number of items, is modeled as: with matrices P  X  R i 0  X  d and Q  X  R u 0  X  d ,where d is the rank (or dimension of the latent space), with d i 0 ,u 0 , and r m  X  R is a (global) offset value.

This model is trained on the observed rating data by min-imizing the square error (with the usual Frobenius/L2-norm regularization) (see also [5,20]): where  X  R u,i denotes the ratings predicted by the model in Eq. (1); and R u,i are the actual rating values in the training data for item i from user u . This objective function can be minimized efficiently using gradient descent method [13].
Once the low-rank matrices P and Q have been learned, rating values can be predicted according to Eq. (1) for any user-item pair ( u, i ).
The usage of social network data has been found to im-prove the prediction accuracy of rating values, and various models for integrating these two data sources have been proposed, like Social Recommendation (SoRec) [11], Social Trust Ensemble (STE) [9], Recommender Systems with So-cial Regularization [12], Adaptive social similarities for rec-ommender systems [14], among which the SocialMF model [13] was found to achieve a particularly low RMSE value, and is hence used as a baseline model in our experimental comparison study.
The SocialMF model was proposed in [13], and was found to outperform SoRec and STE with respect to RMSE. The social network information is represented by a matrix S  X  0  X  u 0 ,where u 0 is the number of users. The directed and weighted social relationship of user u with user v (e.g. user u trusts/knows/follows user v ) is represented by a positive value S u,v  X  (0 , 1]. An absent or unobserved social relation-ship is reflected by S u,v = s m , where typically s m =0. Each of the rows of the social network matrix S is normalized to 1, resulting in the new matrix S  X  with S  X  u,v  X  S u,v ,and
The idea underlying SocialMF is that neighbors in the social network may have similar interests. This similarity is enforced by the second term in the objective function in equation (3), which says that user profile Q u should be sim-ilar to the (weighted) average of his/her friends X  profiles Q (measured in terms of the square error): where the ratings  X  R u,i predicted by this model are ob-tained according to Eq. (1). Note that we omitted the logistic function from the original publication [13], as we found its effect rather negligible in our experiments. The trade-off between the feedback data (ratings) and the social network information is determined by a weight  X   X  0. Ob-viously, the social network information is ignored if  X  =0, and increasing  X  shifts the trade-off more and more towards the social network information.

Eq. (3) can be optimized by the gradient descent approach (see the update equations (13) and (14) in [13]).

Once the model is trained, the soft constraint that neigh-bors should have similar user profiles is captured in the user latent feature matrix Q . The rating value for any user con-cerning any item can be predicted according to Eq. (1).
Our proposed Circle-based Recommendation (CircleCon) models may be viewed as an extension of the SocialMF model [13] to social networks with inferred circles of friends.
We infer the circles of friends from rating (or other feed-back) data concerning items that can be divided into different categories (or genres etc.) . The basic idea is that a user may trust each friend only concerning certain item categories but not regarding others. For instance, the circle of friends con-cerning cars may differ significantly from the circle regarding kids X  TV shows. (, , ) ccc (, ) cc (,) cc 13 (, ) cc Figure 2: Illustration of expertise-based trust-assignment in category c .

To this end, we divide the social network S of all trust relationships into several sub-networks S ( c ) ,eachofwhich concerning a single category c of items.

Definition (Inferred Circle): Regarding each category c ,auser v is in the inferred circle of user u , i.e., in the set C u , if and only if the following two conditions hold: where N ( c ) u denotes the number of ratings that user u has assigned to items in category c . Otherwise, user v is not in the circle of u concerning category c , i.e., v  X  X  ( c ) u
This is illustrated for a toy example in Figure 1.
The trust values between friends in the same inferred circle (based on item category c ) are captured in a social network matrix S ( c ) , such that S ( c ) u,v =0if v  X  X  ( c ) u , S v  X  X  ( c ) u . In the following, we consider three variants of defining the positive values S ( c ) u,v &gt; 0whenuser v is in the inferred circle of user u regarding category c .Theyarethen experimentally evaluated in Section 4.
We start with the simplest variant of defining trust val-ues S ( c ) u,v &gt; 0 within inferred circles regarding item cate-gory c :eachuser v in the inferred circle of user u gets as-signed the same trust value, i.e., S ( c )  X  u,v =constif v The constant is determined by the normalization constraint
In this section, we outline two variants of assigning differ-ent trust values to friends within a trust circle. The goal is to assign a higher trust value or weight to the friends that are experts in the circle / category. As an approximation to their level of expertise, we use the numbers of ratings they assigned to items in the category. The idea is that an expert in a category may have rated more items in that category than users who are not experts in that category.

We formalize this as follows. We consider directed trust relationships; undirected/mutual trust relationships (e.g., friendship) can be viewed as a special case of directed trust. If user u trusts user v in category c ,wesay u follows v in category c , i.e., u is the follower of v ,and v is a followee of u .Allofuser u  X  X  followees in category c form the trust circle C ( c ) u of u in c .Wealsodenote u  X  X  followers in category c as F ( c ) u . Finally, a user u  X  X  expertise level in category c is denoted as E ( c ) u . This is illustrated in Figure 2.
We assign trust values to u  X  X  followees in circle C ( c ) proportional to their expertise levels in category c .Based on this idea, we consider two variants in the following:
The previous circle inference and trust value assignment essentially assume that if u issues a trust statement towards v ,and u and v simultaneously have ratings in a category c , then u trusts v in c . The trust value assignment is done in each circle separately. In practice, user u might issue a trust statement towards v just because of v  X  X  ratings in a subset of categories in which they simultaneously have ratings. The trust value of u towards v in category c should reflect the likelihood that u issues the trust statement towards v due to v  X  X  ratings in c . One simple heuristic is to make the like-lihood proportional to the number of v  X  X  ratings in category c .Inotherwords,giventhat u trusts v ,if v has more ratings in category c 1 than in c 2 , it is more likely that u trusts v because of v  X  X  ratings in c 1 than v  X  X  ratings in c 2 .Nowif u and v simultaneously have ratings in multiple categories, the trust value of u towards v should be split cross those commonly rated categories.
 Essentially, we now normalize trust values across c ,
To illustrate this trust splitting , let us look at Figure 1: user u 2 trusts user u 1 and both of them have ratings in category c 1 and c 2 . Assume the number of ratings u 1 issued in category c 1 and c 2 are 9 and 1 respectively. The trust value in original social network is S u 2 ,u 1 =1. Nowafter
Like before, we then also normalize each row of S ( c ) matrix (across v ), as to make the trust values independent of the activity levels of the users in each circle:
We note that the normalizations across c and then v may also be viewed as the first step of an iterative procedure called iterative proportional fitting [25]. In short, when this procedure is iterated until convergence, it results in an exact joint normalization regarding both c and v : c v S ( c ) u,v const ,where c S ( c ) u,v =1foreach v ,and v S ( c ) u,v for each c . While the iterative procedure yields exact nor-malization, it is computationally expensive. For the latter reason, the reported results in our experiment section are obtained after only one iteration.
Using the (normalized) trust network S ( c )  X  , as defined above, we train a separate matrix factorization model for each category c . For each kind of inferred circles of friends, we obtain a separate user profile Q ( c ) and item profile P for each c . Similar to the SocialMF model [13], but with the crucial difference of using inferred social circles of friends, we use the following training objective function +  X  2 +  X  where we only use ratings R ( c ) u,i in category c ;  X  R predicted rating of item i in category c , where we define the global bias term r ( c ) m as the average value of observed training rating in category c (see also Table 4). The summation in Eq. (6) extends over all observed user-item pairs ( u, i )whereitem i belongs to category c .Note that this model only captures user and item profiles in cat-number of items in category c and Q ( c )  X  R u 0  X  d .Eq.(6) can be minimized by the gradient decent approach, analo-gous to [13]: +  X   X   X  where cat ( i ) is the category of item i . where I R ( c ) u,i is the indicator function that is equal to 1 if u has rated i in category c , and equal to 0 otherwise. The initial values of Q ( c ) and P ( c ) are sampled from the normal distribution with zero mean. In each iteration, Q ( c ) and P are updated based on the latent variables from the previous iteration.

Once Q ( c ) and P ( c ) are learned for each category c ,this model can be used to predict ratings for user-item pairs ( u, i ) according to Eq. (7), where the category c of item i deter-mines the matrices Q ( c ) u and P ( c ) i to be used.
As an alternative training objective function, we also con-sidered using all ratings in the data, instead of only the ratings in category c . The only difference to Eq. (6) is that the first line is replaced by where the summation extends over all observed user-item pairs ( u, i ) from all categories. As before, we train a separate model for each category c , i.e., Q ( c ) and P ( c ) ,with P
In this section, we evaluate our different variants of Circle-based recommendation and compare them to the existing approaches using the Epinions dataset 1 .
Epinions is a consumer opinion website where users can review items (such as cars, movies, books, software,...) and also assign them numeric ratings in the range of 1 (min) to http://www.epinions.com/ Figure 7: Distribution of Number of Ratings across Categories. 5 (max). Users can also express their trust to other users, such as reviewers whose reviews and ratings they have con-sistently found to be valuable. Each user has a list of trusted users. A user issues a trust statement to another user by adding the user to her trust list. In the Epinions dataset, the trust values between users are binary: if user B is in user A X  X  trust list, then user A X  X  trust value towards B is 1, otherwise it is 0.

We use the version of the Epinions dataset 2 published by the authors of [3]. It consists of ratings from 71 , 002 users who rated a total of 104 , 356 different items from 451 categories. The total number of ratings is 571 , 235. The distribution of the ratings cross all categories is plotted in Figure 7. A large number of ratings fall into a small number of large categories. The distribution of users and items in the top-10 categories is presented in Table 1.
 The total number of issued trust statements is 508 , 960. We apply the circle inference algorithms presented in Sec-tion 3.1 to the Epinions dataset. The fraction of trust links the entire original social network is shown in Table 1 column Trust Fraction . We can see that the inferred social network of each category is much smaller than the original one. For users who have ratings in each category, we also compare http://alchemy.cs.washington.edu/data/epinions/ Figure 3: Impact of social information weight  X  on the RMSE performance using all category ratings in CircleCon3. Figure 4: Impact of social information weight  X  on the MAE performance using all category ratings in CircleCon3. Figure 5: Impact of social information weight  X  on the RMSE performance using one category ratings in CircleCon3. Figure 6: Impact of social information weight  X  on the MAE performance using one category ratings in CircleCon3. their followee numbers in the original social network with those in the inferred circles for that category. The average number of followees in the original social network is shown in Table 1 column Original Degree . The average number of followees in the inferred circles is shown in Table 1 column Degree in Circle . A pair of users connected by a trust link in the original social network are not always in the same in-ferred circle. For instance, recommendations in the Videos &amp; DVDs category are based on about 72% of a user X  X  friends on average, and in the Kids X  TV Shows category only about 40% of friends are relevant on average.
We perform 5-fold cross validation in our experiments. In each fold, we use 80% of data as the training set and the remaining 20% as the test set. The evaluation metrics we use in our experiments are Root Mean Square Error (RMSE) and Mean Absolute Error (MAE), as these are the most popular accuracy measures in the literature of recommender systems. RMSE is defined as where R test is the set of all user-item pairs ( u, i )inthetest set. MAE is defined as
As to demonstrate the effectiveness of the proposed circle reconstruction approaches, we compare the recommendation results of the following approaches: The standard deviations of the results are about 0 . 005 . 1.098 1.109 1.091 1.089 &amp;DVDs 8.15% 3.65% 5.04% 1.002 1.000 0.991 0.992 5.88% 3.09% 3.76% 0.979 0.982 0.973 0.973 6.22% 1.75% 2.92% 1.005 0.999 1.000 0.999 8.36% 3.63% 5.50% 0.990 0.995 0.988 0.984 9.18% 3.94% 4.56% 1.189 1.182 1.190 1.182 &amp;Services 11.05% 4.31% 5.95% 1.072 1.075 1.061 1.066 7.54% 2.50% 3.76% 0.961 0.959 0.963 0.955 7.49% 3.03% 3.85% 1.076 1.080 1.073 1.070 4.66% 1.35% 2.12% 1.052 1.051 1.042 1.046 Shows 9.28% 3.48% 4.50% The standard deviations of the results are about 0 . 005 . 0.863 0.874 0.862 0.860 &amp;DVDs 7.66% 3.44% 4.54% 0.812 0.809 0.797 0.799 7.36% 4.23% 5.16% 0.794 0.798 0.788 0.788 7.14% 2.27% 2.80% 0.786 0.781 0.781 0.780 9.49% 3.67% 5.35% 0.777 0.782 0.773 0.770 10.31% 4.69% 5.38% 0.955 0.947 0.953 0.947 &amp;Services 9.78% 4.77% 6.03% 0.841 0.842 0.831 0.835 8.23% 2.64% 3.93% 0.766 0.766 0.769 0.759 9.40% 4.44% 5.37% 0.832 0.828 0.829 0.825 4.86% 1.08% 1.90% 0.813 0.812 0.802 0.808 Shows 10.13% 4.49% 5.23% In all our experiments, we set the dimensionality for low-of the results are about 0 . 005 .
 rank matrix factorization to be d = 10 and the regularization constant to be  X  =0 . 1.
In this section, we consider the variant of using all ratings for training the various models, as outlined in Section 3.3.2. The other variant, which uses only the ratings of a single category at a time, will be evaluated in the next section.
In detail, regarding BaseMF , we use all ratings from all categories as input to train for the latent features of all items and all users; for SocialMF , we use all category ratings and all trust links as input to train for the latent features of all items and all users. For all the circle-based methods, we conduct separate trainings for individual categories, as discussed in Section 3.3.2.

When trained with all ratings, for SocialMF ,theopti-mal social information weight is  X  = 15. For CircleCon1 , CircleCon2 and CircleCon3 ,theoptimalsocialinforma-tion weights are all around  X  = 20. We plot the RMSE and MAE of CircleCon3 as a function of  X  in Figures 3 and 4, respectively. The trends for CircleCon1 and Cir-cleCon2 are similar. This is because after we filtered out the trust links which do not belong to the current category, the similarity between a follower and followee connected by a surviving trust link should be higher. In  X  CircleCon1, we set  X  = 15.

The performance of the five methods are compared in Ta-bles 2 and 3 regarding RMSE and MAE, respectively. The standard deviations of the results are about 0 . 005. Values that are within the standard deviation of the best result are highlighted in bold. We can see from the tables that Circle-Con1 is better than SocialMF ,and  X  CircleCon1 is worse than SocialMF , in terms of both RMSE and MAE. This demonstrates from two sides the benefit of reconstructing trust circles for individual categories. Over all categories, CircleCon3 has the best performance, but CircleCon2b is slightly (but not significantly) better than CircleCon3 in the categories of Books, Software and Kids X  TV Shows.
As outlined in Section 3.3.1, another training alternative is to use only the ratings pertaining to the category that the model is trained for. In detail, for BaseMF ,weonlyuse ratings in the current category as input. For SocialMF , we use ratings in the current category and all trust links as input. For circle-based RSes, as discussed in 3.3.1, we use ratings in the current category and weighted trust links obtained from circle construction methods. Among the dif-ferent variants, we only presents results for CircleCon3 in this section, as we found it to be the best approach in the previous section.

When trained with per-category ratings, for SocialMF the optimal social information weight is  X  = 15. As il-lustratedinFigures5and6,for CircleCon3 ,theoptimal social information weight is  X  = 30. Similar to the case of training with all ratings, this is again because the latent fea-tures between friends in circles established for each category should be more similar to each other. The detailed results of per-category training are shown in Table 4.

We can see from Table 4, CircleCon3 is better than So-cialMF in terms of RMSE and MAE. Comparing the performance of BaseMF in Table 2 and Table 4 (also Table 3 and Table 4), we can see that more rating information enables BaseMF to learn user X  X  interest more accurately. The same conclusion holds when compar-ing the performance of SocialMF in Table 2 and Table 4 (also Table 3 and Table 4). Comparing CircleCon3 in Ta-ble 2 and Table 4 (also Table 3 and Table 4), we can see that all category ratings combined with per-category Circle trust relationships provides the best prediction accuracy in all the compared cases. This is because all category ratings provide us more information to learn user X  X  interests, and circles reconstructed for individual categories alleviate the ambiguity resulting from the mixed trust statements issued cross different categories.

Thus, we find that the proposed variant CircleCon3 with all category ratings achieves the lowest RMSE and MAE values overall.
In this paper, we presented a novel approach to improving recommendation accuracy by introducing the concept of X  X n-ferred circles of friends X . The idea is to determine the best subset of a user X  X  friends, i.e., an inferred circle, for making recommendations in an item category of interest. As these inferred circles are tailored towards the various item cate-gories, they may differ from explicit circles of friends that have recently become popular in online social networks. We proposed methods for inferring category-specific circles, and to assign weights to the friends within each circle. In our experiments on publicly available data, we showed signifi-cant improvements over existing approaches that use mixed social network information. The authors would like to thank Debasis Mitra and Shiv Panwar for initiating this collaboration. H.S. would also like to thank Tin Kam Ho for her encouragement and support of this work. [1] G. Adomavicius and A. Tuzhilin. Toward the next [2] R. Bell, Y. Koren, and C. Volinsky. Modeling [3] M. Richardson and P. Domingos. Mining [4] M. Jahrer, A. Toscher, and R. Legenstein.
 [5] S. Funk. Netflix update: Try this at home, 2006. [6] Y. Zhang, B. Cao, and D. Y. Yeung. Multi-domain [7] R. Keshavan, A. Montanari, and S. Oh. Matrix [8] Y. Koren. Factorization meets the neighborhood: a [9] H. Ma, I. King, and M. R. Lyu. Learning to [10] X. Yang, Y. Guo and Y. Liu.  X  X ayesian-inference [11] H. Ma, H. Yang, M. R. Lyu, and I. King. Sorec: Social [12] H. Ma, D. Zhou, C. Liu, M. R. Lyu, and I. King. [13] M. Jamali and M. Ester. A matrix factorization [14] L. Yu, R. Pan, and Z Li. Adaptive social similarities [15] P. Bedi, H. Kaur, and S. Marwaha. Trust based [16] Y. Koren. Collaborative filtering with temporal [17] F. Liu and H. J. Lee. Use of social network information [18] P. Massa and P. Avesani. Trust-aware recommender [19] J. O  X  X onovan and B. Smyth. Trust in recommender [20] A. Paterek. Improving regularized singular value [21] R. Salakhutdinov, A. Mnih, and G. Hinton. Restricted [22] R. Salakhutdinov and A. Mnih Probabilistic matrix [23] J. Wang, A. P. de Vries, and M. J. T. Reinders. [24] G -R Xue, C Lin, Q Yang, W Xi, H -J Zeng, [25] W. Deming and F. Stephan, On least square
