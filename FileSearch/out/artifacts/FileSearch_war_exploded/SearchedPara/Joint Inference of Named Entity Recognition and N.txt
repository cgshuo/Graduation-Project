 Tweets, short messages of less than 140 characters shared through the Twitter service 1 , have become an important source of fresh information. As a re-sult, the task of named entity recognition (NER) for tweets, which aims to identify mentions of rigid designators from tweets belonging to named-entity types such as persons, organizations and locations (2007), has attracted increasing research interest. For example, Ritter et al. (2011) develop a sys-tem that exploits a CRF model to segment named entities and then uses a distantly supervised ap-proach based on LabeledLDA to classify named en-tities. Liu et al. (2011) combine a classifier based on the k-nearest neighbors algorithm with a CRF-based model to leverage cross tweets information, and adopt the semi-supervised learning to leverage unlabeled tweets.

However, named entity normalization (NEN) for tweets, which transforms named entities mentioned in tweets to their unambiguous canonical forms, has not been well studied. Owing to the informal nature of tweets, there are rich variations of named enti-ties in them. According to our investigation on the data set provided by Liu et al. (2011), every named entity in tweets has an average of 3.3 variations 2 . As an illustrative example, we show  X  X nneke Gron-loh X , which may occur as  X  X w.,Gronloh X ,  X  X nneke Kronloh X  or  X  X evrouw G X . We thus propose NEN for tweets, which plays an important role in entity retrieval, trend detection, and event and entity track-ing. For example, Khalid et al. (2008) show that even a simple normalization method leads to im-provements of early precision, for both document and passage retrieval, and better normalization re-sults in better retrieval performance.

Traditionally, NEN is regarded as a septated task, which takes the output of NER as its input (Li et al., 2002; Cohen, 2005; Jijkoun et al., 2008; Dai et al., 2011). One limitation of this cascaded approach is that errors propagate from NER to NEN and there is no feedback from NEN to NER. As demonstrated by Khalid et al. (2008), most NEN errors are caused by recognition errors. Another challenge of NEN is the dearth of information in a single tweet, due to the short and noise-prone nature of tweets. Re-portedly, the accuracy of a baseline NEN system based on Wikipedia drops considerably from 94% on edited news to 77% on news comments, a kind of user generated content (UGC) with similar style to tweets (Jijkoun et al., 2008).

We propose jointly conducting NER and NEN on multiple tweets using a graphical model, to address these challenges. Intuitively, improving the performance of NER boosts the performance of NEN. For example, consider the following two tweets:  X   X  X  X  Alex X  X  jokes. Justin X  X  smartness. Max X  X  randomnes  X  X  X   X  and  X   X  X  X  Alex Russo was like the best character on Disney Channel  X  X  X   X . Identify-ing  X  X lex X  and  X  X lex Russo X  as PERSON will en-courage NEN systems to normalize  X  X lex X  into  X  X lex Russo X . On the other hand, NEN can guide NER. For instance, consider the following two tweets:  X   X  X  X  she knew Burger King when he was a Prince!  X  X  X   X  and  X   X  X  X  I X  X  craving all sorts of food: mcdonalds, burger king, pizza, chinese  X  X  X   X . Sup-pose the NEN system believes that  X  X urger king X  cannot be mapped to  X  X urger King X  since these two tweets are not similar in content. This will help NER to assign them different types of labels. Our method optimizes these two tasks simultaneously by en-abling them to interact with each other. This largely differentiates our method from existing work.
Furthermore, considering multiple tweets simul-taneously allows us to exploit the redundancy in tweets, as suggested by Liu et al. (2011). For exam-ple, consider the following two tweets:  X   X  X  X  Bobby Shaw you don X  X  invite the wind  X  X  X   X  and  X   X  X  X  I own yah ! Loool bobby shaw  X  X  X   X . Recognizing  X  X obby Shaw X  in the first tweet as a PERSON is easy owing to its capitalization and the following word  X  X ou X , which in turn helps to identify  X  X obby shaw X  in the second tweet as a PERSON.

We adopt a factor graph as our graphical model, which is constructed in the following manner. We first introduce a random variable for each word in every tweet, which represents the BILOU (Begin-ning, the Inside and the Last tokens of multi-token entities as well as Unit-length entities) label of the corresponding word. Then we add a factor to con-nect two neighboring variables, forming a conven-tional linear chain CRFs. Hereafter, we use t m to denote the m th tweet , t i m and y i m to denote the i th word of of t m and its BILOU label, respectively, and f m to denote the factor related to y for each word pair with the same lemma, denoted by t m and t denoted by z ij mn , whose value indicates whether t i m and t j n belong to two mentions of the same entity. Fi-nally, for any z ij mn we add a factor, denoted by f ij mn to connect y i m , y j n and z ij mn . Factors in the same group ( { f ij mn } or { f i m } ) share the same set of fea-ture templates. Figure 1 illustrates an example of our factor graph for two tweets.

It is worth noting that our factor graph is differ-ent from the skip-chain CRFs (Galley, 2006) in the sense that any skip-chain factor of our model con-sists not only of two NE type variables ( y i m and y j n which is the case for skip-chain CRFs, but also a nor-malization variable ( z ij mn ). It is these normalization variables that enable us to conduct NER and NEN jointly.

We manually add normalization information to the data set shared by Liu et al. (2011), to eval-uate our method. Experimental results show that our method achieves 83.6% F1 for NER and 82.6% Accuracy for NEN, outperforming the baseline with 80.2%F1 for NER and 79.4% Accuracy for NEN.

We summarize our contributions as follows. 1. We introduce the task of NEN for tweets, and 2. We evaluate our method on a human annotated
Our paper is organized as follows. In the next sec-tion, we introduce related work. In Section 3 and 4, we formally define the task and present our method. In Section 5, we evaluate our method. And finally we conclude our work in Section 6. Related work can be divided into two categories: NER and NEN. 2.1 NER NER has been well studied and its solutions can be divided into three categories: 1) Rule-based (Krupka and Hausman, 1998); 2) machine learning based (Finkel and Manning, 2009; Singh et al., 2010); and 3) hybrid methods (Jansche and Abney, 2002). Ow-ing to the availability of annotated corpora, such as ACE05, Enron (Minkov et al., 2005) and CoNLL03 (Tjong Kim Sang and De Meulder, 2003), data driven methods are now dominant.

Current studies of NER mainly focus on formal text such as news articles (Mccallum and Li, 2003; Etzioni et al., 2005). A representative work is that of Ratinov and Roth (2009), in which they system-atically study the challenges of NER, compare sev-eral solutions, and show some interesting findings. For example, they show that the BILOU encoding scheme significantly outperforms the BIO schema (Beginning, the Inside and Outside of a chunk). A handful of work on other genres of texts exists. For example, Yoshida and Tsujii build a biomedi-cal NER system (2007) using lexical features, or-thographic features, semantic features and syntactic features, such as part-of-speech (POS) and shallow parsing; Downey et al. (2007) employ capitaliza-tion cues and n-gram statistics to locate names of a variety of classes in web text; Wang (2009) intro-duces NER to clinical notes. A linear CRF model is trained on a manually annotated data set, which achieves an F1 of 81.48% on the test data set; Chiti-cariu et al. (2010) design and implement a high-level language NERL which simplifies the process of building, understanding, and customizing com-plex rule-based named-entity annotators for differ-ent domains.

Recently, NER for Tweets attracts growing inter-est. Finin et al. (2010) use Amazons Mechani-cal Turk service 3 and CrowdFlower 4 to annotate named entities in tweets and train a CRF model to evaluate the effectiveness of human labeling. Rit-ter et al. (2011) re-build the NLP pipeline for tweets beginning with POS tagging, through chunk-ing, to NER, which first exploits a CRF model to segment named entities and then uses a distantly su-pervised approach based on LabeledLDA to clas-sify named entities. Unlike this work, our work de-tects the boundary and type of a named entity si-multaneously using sequential labeling techniques. Liu et al. (2011) combine a classifier based on the k-nearest neighbors algorithm with a CRF-based model to leverage cross tweets information, and adopt the semi-supervised learning to leverage un-labeled tweets. Our method leverages redundance in similar tweets, using a factor graph rather than a two-stage labeling strategy. One advantage of our method is that local and global information can in-teract with each other. 2.2 NEN There is a large body of studies into normalizing various types of entities for formally written texts. For instance, Cohen (2005) normalizes gene/protein names using dictionaries automatically extracted from gene databases; Magdy et al. (2007) address cross-document Arabic name normalization using a machine learning approach, a dictionary of person names and frequency information for names in a collection; Cucerzan (2007) demostrates a large-scale system for the recognition and semantic dis-ambiguation of named entities based on informa-tion extracted from a large encyclopedic collection and Web search results; Dai et al. (2011) employ a Markov logic network to model interweaved con-straints in a setting of gene mention normalization.
Jijkoun et al. (2008) study NEN for UGC. They report that the accuracy of a baseline NEN system based on Wikipedia drops considerably from 94% on edited news to 77% on UGC. They identify three main error sources, i.e., entity recognition errors, multiple ways of referring to the same entity and am-biguous references, and exploit hand-crafted rules to improve the baseline NEN system.

We introduce the task of NEN for tweets, a new genre of texts with rich entity variations. In contrast to existing NEN systems, which take the output of NER systems as their input, our method conducts NER and NEN at the same time, allowing them to reinforce each other, as demonstrated by the experi-mental results. A tweet is a short text message with no more than 140 characters. Here is an example of a tweet:  X  X y-craftingworld: #Win Microsoft Office 2010 Home and Student #Contest from @office http://bit.ly/  X  X  X   X , where  X  X ycraftingworld X  is the name of the user who published this tweet. Words beginning with  X # X  like  X  X #Win X  are hash tags; words starting with  X  X  X  like  X  X office X  represent user names; and  X  X ttp://bit.ly/ X  is a shortened link.

Given a set of tweets, e.g., tweets within some pe-riod or related to some query, our task is: 1) To rec-ognize each mention of entities of predefined types for each tweet; and 2) to restore each entity mention into its unambiguous canonical form. Following Liu et al. (2011), we focus on four types of entities, i.e., PERSON, ORGANIZATION, PRODUCT, and LO-CATION, and constrain our scope to English tweets. Note that the NEN sub-task can be transformed as follows. Given each pair of entity mentions, decide whether they denote the same entity. Once this is achieved, we can link all the mentions of the same entity, and choose a representative mention, e.g., the longest mention, as their canonical form.

As an illustrative example, consider the following three tweets:  X   X  X  X  Gaga X  X  Christmas dinner with her family. Awwwwn  X  X  X   X ,  X   X  X  X  Lady Gaaaaga with her family on Christmas  X  X  X   X  and  X   X  X  X  Buying a maga-zine just because Lady Gaga X  X  on the cover  X  X  X   X . It is expected that  X  X aga X ,  X  X ady Gaaaaga X  and  X  X ady Gaga X  are all labeled as PERSON, and can be re-stored as  X  X ady Gaga X . In contrast to existing work, our method jointly conducts NER and NEN for multiple tweets. We first give an overview of our method, then detail its model and features. 4.1 Overview Given a set of tweets as input, our method recog-nizes predefined types of named entities and for each entity outputs its unambiguous canonical form.
To resolve NER, we assign a label to each word in a tweet, indicating both the boundary and entity type. Following Ratinov and Roth (2009), we use the BILOU schema. For ex-ample, consider the tweet  X   X  X  X  without you is like an iphone without apps; Lady gaga with-out her telephone  X  X  X   X , the labeled sequence us-ing the BILOU schema is:  X   X  X  X  without O you O is telephone O  X  X  X   X  , where  X  X phone U  X  P RODUCT  X  indi-cates that  X  X phone X  is a product name of unit length;  X  X ady B  X  P ERSON  X  means  X  X ady X  is the beginning of a person name while  X  X aga L  X  P ERSON  X  suggests that  X  X aga X  is the last token of a person name.
To resolve NEN, we assign a binary value label z mn to each pair of words t i m and t same lemma. z ij mn = 1 or -1, indicating whether t i m and t j n belong to two mentions of the same entity 5 . For example, consider the three tweets presented in Section 3.  X  X aga 1 1  X  6 and  X  X aga 1 3  X  will be assigned a  X 1 X  label, since they are part of two mentions of the same entity  X  X ady Gaga X ; similarly,  X  X ady 1 2  X  and  X  X ady 1 3  X  are connected with a  X 1 X  label. Note that there are no NEN labels for pairs like  X  X er 1 1  X  and and  X  X ith X  are stop words.

With NE type and normalization labels obtained, we judge two mentions, denoted by t i 1  X  X  X  i k m and t n , respectively, refer to the same entity if and only if: 1) The two mentions share the same entity and 3) z ij mn = 1 , i = i 1 ,  X  X  X  , i k and j = j 1 ,  X  X  X  if z ij mn exists. Still take the three tweets presented in Section 3 for example. Suppose  X  X aga 1 1  X  and  X  X ady Gaga 1 3  X  are labeled as PERSON, and there is only one related NE normalization label, which is associated with  X  X  X aga 1 1  X  and  X  X aga 1 3  X  and has 1 as its value. We then consider that these two men-tions can be normalized into the same entity; in a similar way, we can align  X  X ady 1 2 Gaaaaga X  with  X  X ady 1 3 Gaga X . Combining these pieces informa-tion together, we can infer that  X  X  X aga 1 1  X ,  X  X ady 1 2 Gaaaaga X  and  X  X ady 1 3 Gaga X  are three mentions of the same entity. Finally, we can select  X  X ady 1 3 Gaga X  as the representative, and output  X  X ady Gaga X  as their canonical form. We choose the mention with the maximum number of words as the representa-tive. In case of a tie, we prefer the mention with an Wikipedia entry 7 .

The central problem with our method is infer-ring all the NE type ( y -serial ) and normalization ( z -serial ) variables. To achieve this, we construct a factor graph according to the input tweets, which can evaluate the probability of every possible assign-ment of y -serials and z -serials , by checking the characteristics of the assignment. Each character-istic is called a feature. In this way, we can select the assignment with the highest probability. Next we will introduce our model in detail, including its training and inference procedure and features. 4.2 Model We adopt a factor graph as our model. One advan-tage of our model is that it allows y -serials and z -serials variables to interact with each other to jointly optimize NER and NEN.

Given a set of tweets T = { t m } N m =1 , we can build a factor graph G = ( Y, Z, F, E ) , where: Y and Z denote y -serials and z -serials variables, respec-tively; F represents factor vertices, consisting of { f f pends on F , and consists of edges between y i  X  1 m and y m , and those between y
G = ( Y, Z, F, E ) defines a probability distribu-tion according to Formula 1. where  X  ij mn = 1 if and only if t i m and t j n have the same lemma and are not stop words, otherwise zero. A factor factorizes according to a set of features, so that: {  X  {  X  set or parameter set of G . Each feature has a real value as its weight.
 Training  X  is learnt from annotated tweets T , by maximizing the data likelihood, i.e., To solve this optimization problem, we first calcu-late its gradient:  X   X  ln P ( Y, Z | T ;  X ) Here, the two marginal probabilities p ( y i  X  1 m , y i m | T ;  X ) and p ( y i m , y j n , z ij computed using loopy belief propagation (Murphy et al., 1999). Once we have computed the gradient,  X   X  can be worked out by standard techniques such as steepest descent, conjugate gradient and the limited-memory BFGS algorithm (L-BFGS). We choose L-BFGS because it is particularly well suited for optimization problems with a large number of variables.
 Inference Supposing the parameters  X  have been set to  X   X  , the inference problem is: Given a set of testing tweets T , output the most probable assignment of Y and Z , i.e., We adopt the max-product algorithm to solve this inference problem. The max-product algorithm is nearly identical to the loopy belief propagation al-gorithm, with the sums replaced by maxima in the definitions. Note that in both the training and test-ing stage, the factor graph is constructed in the same way as described in Section 1.
 Efficiency We take several actions to improve our model X  X  efficiency. Firstly, we manually compile a comprehensive named entity dictionary from vari-ous sources including Wikipedia, Freebase 8 , news articles and the gazetteers shared by Ratinov and Roth (2009). In total this dictionary contains 350 million entries 9 . By looking up this dictionary 10 , we generate the possible BILOU labels, denoted by Y m hereafter, for each word t sider  X   X  X  X  Good Morning new 1 1 york 1 1  X  X  X   X . Suppose  X  X ew York City X  and  X  X ew York Times X  are in our dictionary, then  X  X ew 1 1 york 1 1  X  is the matched string with two corresponding entities. As a re-sult,  X  X -LOCATION X  and  X  X -ORGANIZATION X  will be added to Y new 1  X  X -ORGANIZATION X  will be added to Y york 1 Y testing that y i m  X  Y i m , to reduce the search space.
Secondly, in the testing phase, we introduce three rules related to z ij mn : 1) z ij mm = 1 , which says two words sharing the same lemma in the same tweet denote the same entity; 2) set z ij mn to 1, if the sim-ilarity between t m and t n is above a threshold (0.8 in our work), or t m and t n share one hash tag; and 3) z mn ij =  X  1 , if the similarity between t m and t n is below a threshold (0.3 in work). To compute the similarity, each tweet is represented as a bag-of-words vector with the stop words removed, and the cosine similarity is adopted, as defined in Formula 7. These rules pre-label a significant part of z -serial variables (accounting for 22.5%), with an accuracy of 93 . 5% . Note that in our experiments, these measures reduce the training and testing time by 36.2% and 62.8%, respectively, while no obvious performance drop is observed. 4.3 Features ing NE-type labels, i.e., y i  X  1 m and y i m , while a fea-labels and its associated normalization label, i.e., y m , y 4.3.1 Feature Set One: {  X  (1) k } K 1 k =1 We adopts features similar to Wang (2009), and Ratinov and Roth (2009), i.e., orthographic features, lexical features and gazetteer-related features. These features are defined on the observation. Combining them with y i  X  1 m and y i m constitutes {  X  (1) k } K 1 Orthographic features : Whether t i m is capitalized or upper case; whether it is alphanumeric or contains any slashes; wether it is a stop word; word prefixes and suffixes.
 Lexical features : Lemma of t i m , t i  X  1 m and t i +1 respectively; whether t i m is an out-of-vocabulary tively; whether t i m is a hash tag, a link, or a user account.
 Gazetteer-related features : Whether Y i m is empty; the dominating label/entity type in Y i m . Which one is dominant is decided by majority voting of the en-tities in our dictionary. In case of a tie, we randomly choose one from the best. 4.3.2 Feature Set Two: {  X  (2) k } K 2 k =1
Similarly, we define orthographic, lexical features and gazetteer-related features on the observation, y i m and y j n ; and then we combine these features with z mn , forming Orthographic features : Whether t i m / t j n is capital-ized or upper case; whether t i m / t j n is alphanumeric or contains any slashes; prefixes and suffixes of t i m . Lexical features : Lemma of t i m ; whether t i m is have the same POS; whether y i m and y j n have the same label/entity type.
 Gazetteer-related features : Whether Y i m Y dominating label/entity type in Y i m is the same as that in Y j n . We manually annotate a data set to evaluate our method. We show that our method outperforms the baseline, a cascaded system that conducts NER and NEN individually. 5.1 Data Preparation We use the data set provided by Liu et al. (2011), which consists of 12,245 tweets with four types of entities annotated: PERSON, LOCATION, ORGA-NIZATION and PRODUCT. We enrich this data set by adding entity normalization information. Two annotators 12 are involved. For any entity mention, two annotators independently annotate its canonical form. The inter-rater agreement measured by kappa is 0.72. Any inconsistent case is discussed by the two annotators till a consensus is reached. 2 , 245 tweets are used for development, and the remainder are used for 5-fold cross validation. 5.2 Evaluation Metrics We adopt the widely-used Precision, Recall and F1 to measure the performance of NER for a partic-ular type of entity, and the average Precision, Re-call and F1 to measure the overall performance of NER (Liu et al., 2011; Ritter et al., 2011). As for NEN, we adopt the widely-used Accuracy, i.e., to what percentage the outputted canonical forms are correct (Jijkoun et al., 2008; Cucerzan, 2007; Li et al., 2002). 5.3 Baseline We develop a cascaded system as the baseline, which conducts NER and NEN sequentially. Its NER module, denoted by S BR , is based on the state-of-the-art method introduced by Liu et al. (2011); and its NEN model , denoted by S BN , follows the NEN system for user-generated news comments proposed by Jijkoun et al. (2008), which uses handcrafted rules to improve a typical NEN system that normalizes surface forms to Wikipedia page ti-tles. We use the POS tagger developed by Ritter et al. (2011) to extract POS related features, and the OpenNLP toolkit to get lemma related features. 5.4 Results Tables 1-2 show the overall performance of the baseline and ours (denoted by S RN ). It can be seen that, our method yields a significantly higher F1 (with p &lt; 0 . 01 ) than S BR , and a moderate im-provement of accuracy as compared with S BN (with p &lt; 0 . 05 ). As a case study, we show that our system successfully identified  X  X axon 1 1  X  as a PERSON in the tweet  X   X  X  X  come to see jaxon 1 1 someday  X  X  X   X , which is mistakenly labeled as a LOCATION by S BR . This is largely owing to the fact that our system aligns  X  X axon 1 1  X  with  X  X axson 1 2  X  in the tweet  X   X  X  X  love Jaxson 1 2 ,Hes like my little brother  X  X  X   X , in which  X  X axson 1 2  X  is identified as a PERSON. As a result, this encourages our system to consider  X  X axon 1 1  X  as a PERSON. We also find cases where our system works but S BN fails. For example,  X  X oldman 1 1  X  in the tweet  X   X  X  X  Goldman sees massive upside risk in oil prices  X  X  X   X  is normalized into  X  X lbert Gold-man X  by S BR , because it is mistakenly identified as a PERSON by S BS ; in contrast, our system recog-nizes  X  X oldman 1 2 Sachs X  as an ORGANIZATION, and successfully links  X  X oldman 1 2  X  to  X  X oldman 1 1  X , resulting that  X  X oldman 1 1  X  is identified as an ORGA-NIZATION and normalized into  X  X oldman Sachs X .
Table 3 reports the NER performance of our method for each entity type, from which we see that our system consistently yields better F1 on all entity types than S BR . We also see that our system boosts the F1 for ORGANIZATION most significantly, re-flecting the fact that a large number of organizations that are incorrectly labeled as PERSON by S BR , are now correctly recognized by our method. F o + F l + F g 83.6 82.6
Table 4 shows the overall performance of our method with various feature set combinations, where F o , F l and F g denote the orthographic fea-tures, the lexical features, and the gazetteer-related features, respectively. From Table 4 we see that gazetteer-related features significantly boost the F1 for NER and Accuracy for NEN, suggesting the im-portance of external knowledge for this task. 5.5 Discussion One main error source for NER and NEN, which accounts for more than half of all the errors, is slang expressions and informal abbreviations. For instance, our method recognizes  X  X alifornia 1 1  X  in the tweet  X   X  X  X  And Now, He Lives All The Way In California 1 1  X  X  X   X  as a LOCATION, however, it mis-takenly identifies  X  X ali 1 2  X  in the tweet  X   X  X  X  i love Cali so much  X  X  X   X  as a PERSON. One reason is our system does not generate any z -serial variable for  X  X alifornia 1 1  X  and  X  X ali 1 2  X  since they have differ-ent lemmas. A more complicated case is  X  X S 1 1  X  in the tweet  X   X  X  X  I, bobby shaw, am gonna put BS 1 1 on everything  X  X  X   X , in which  X  X S 1 1  X  is the abbreviation of  X  X obby shaw X . Our method fails to recognize  X  X S 1 1  X  as an entity. There are two possible ways to fix these errors: 1) Extending the scope of z -serial variables to each word pairs with a common prefix; and 2) developing advanced normalization compo-nents to restore such slang expressions and informal abbreviations into their canonical forms.

Our method does not directly exploit Wikipedia for NEN. This explains the cases where our system correctly links multiple entity mentions but fails to generate canonical forms. Take the following two tweets for example:  X   X  X  X  nitip link win7 1 1 sp1  X  X  X   X  and  X   X  X  X  Hit the 3TB wall on SRT installing fresh Win7 1 2  X  X  X   X . Our system recognizes  X  X in7 1 1  X  and  X  X in7 1 2  X  as two mentions of the same product, but cannot output their canonical forms  X  X indows 7 X . One possible solution is to exploit Wikipedia to compile a dictionary consisting of entities and their variations. We study the task of NEN for tweets, a new genre of texts that are short and prone to noise. Two chal-lenges of this task are the dearth of information in a single tweet and errors propagated from the NER component. We propose jointly conducting NER and NEN for multiple tweets using a factor graph, to address these challenges. One unique characteristic of our model is that a NE normalization variable is introduced to indicate whether a word pair belongs to the mentions of the same entity. We evaluate our method on a manually annotated data set. Experi-mental results show our method yields better F1 for NER and Accuracy for NEN than the state-of-the-art baseline that conducts two tasks sequentially.
In the future, we plan to explore two directions to improve our method. First, we are going to develop advanced tweet normalization technologies to re-solve slang expressions and informal abbreviations. Second, we are interested in incorporating knowl-edge mined from Wikipedia into our factor graph. We thank Yunbo Cao, Dongdong Zhang, and Mu Li for helpful discussions, and the anonymous review-ers for their valuable comments.
