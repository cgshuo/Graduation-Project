 There is considerable academic and commercial in-terest in processing subjective content in text, where subjective content refers to any expression of a pri-vate state such as an opinion or belief (Wiebe et al., 2005). Important strands of work include the identification of subjective content and the determi-nation of its polarity , i.e. whether a favourable or unfavourable opinion is expressed.

Automatic identification of subjective content of-ten relies on word indicators, such as unigrams (Pang et al., 2002) or predetermined sentiment lex-ica (Wilson et al., 2005). Thus, the word positive in the sentence  X  X his deal is a positive development for our company. X  gives a strong indication that the sentence contains a favourable opinion. How-ever, such word-based indicators can be misleading for two reasons. First, contextual indicators such as irony and negation can reverse subjectivity or po-larity indications (Polanyi and Zaenen, 2004). Sec-ond, different word senses of a single word can ac-tually be of different subjectivity or polarity. A typ-ical subjectivity-ambiguous word, i.e. a word that has at least one subjective and at least one objec-tive sense, is positive , as shown by the two example senses given below. 1 We concentrate on this latter problem by automat-ically creating lists of subjective senses, instead of subjective words, via adding subjectivity labels for senses to electronic lexica, using the exam-ple of WordNet. This is important as the prob-lem of subjectivity-ambiguity is frequent: We (Su and Markert, 2008) find that over 30% of words in our dataset are subjectivity-ambiguous. Informa-tion on subjectivity of senses can also improve other tasks such as word sense disambiguation (Wiebe and Mihalcea, 2006). Moreover, Andreevskaia and Bergler (2006) show that the performance of auto-matic annotation of subjectivity at the word level can be hurt by the presence of subjectivity-ambiguous words in the training sets they use.
We propose a semi-supervised approach based on minimum cut in a lexical relation graph to assign subjectivity (subjective/objective) labels to word senses. 2 Our algorithm outperforms supervised min-imum cuts and standard supervised, non-graph clas-sification algorithms (like SVM), reducing the error rate by up to 40%. In addition, the semi-supervised approach achieves the same results as the supervised framework with less than 20% of the training data. Our approach also outperforms prior approaches to the subjectivity recognition of word senses and per-forms well across two different data sets.

The remainder of this paper is organized as fol-lows. Section 2 discusses previous work. Section 3 describes our proposed semi-supervised minimum cut framework in detail. Section 4 presents the ex-perimental results and evaluation, followed by con-clusions and future work in Section 5. There has been a large and diverse body of research in opinion mining, with most research at the text (Pang et al., 2002; Pang and Lee, 2004; Popescu and Etzioni, 2005; Ounis et al., 2006), sentence (Kim and Hovy, 2005; Kudo and Matsumoto, 2004; Riloff et al., 2003; Yu and Hatzivassiloglou, 2003) or word (Hatzivassiloglou and McKeown, 1997; Turney and Littman, 2003; Kim and Hovy, 2004; Takamura et al., 2005; Andreevskaia and Bergler, 2006; Kaji and Kitsuregawa, 2007) level. An up-to-date overview is given in Pang and Lee (2008).

Graph-based algorithms for classification into subjective/objective or positive/negative language units have been mostly used at the sentence and document level (Pang and Lee, 2004; Agarwal and Bhattacharyya, 2005; Thomas et al., 2006), instead of aiming at dictionary annotation as we do. We also cannot use prior graph construction methods for the document level (such as physical proxim-ity of sentences, used in Pang and Lee (2004)) at the word sense level. At the word level Taka-mura et al. (2005) use a semi-supervised spin model for word polarity determination, where the graph is constructed using a variety of information such as gloss co-occurrences and WordNet links. Apart from using a different graph-based model from ours, they assume that subjectivity recognition has already been achieved prior to polarity recognition and test against word lists containing subjective words only. However, Kim and Hovy (2004) and Andreevskaia and Bergler (2006) show that subjectivity recogni-tion might be the harder problem with lower human agreement and automatic performance. In addition, we deal with classification at the word sense level, treating also subjectivity-ambiguous words, which goes beyond the work in Takamura et al. (2005).
Word Sense Level: There are three prior ap-proaches addressing word sense subjectivity or po-larity classification. Esuli and Sebastiani (2006) de-termine the polarity (positive/negative/objective) of word senses in WordNet. However, there is no eval-uation as to the accuracy of their approach. They then extend their work (Esuli and Sebastiani, 2007) by applying the Page Rank algorithm to rank the WordNet senses in terms of how strongly a sense possesses a given semantic property (e.g., positive or negative). Apart from us tackling subjectivity instead of polarity, their Page Rank graph is also constructed focusing on WordNet glosses (linking glosses containing the same words), whereas we concentrate on the use of WordNet relations.
Both Wiebe and Mihalcea (2006) and our prior work (Su and Markert, 2008) present an annota-tion scheme for word sense subjectivity and algo-rithms for automatic classification. Wiebe and Mi-halcea (2006) use an algorithm relying on distribu-tional similarity and an independent, large manually annotated opinion corpus (MPQA) (Wiebe et al., 2005). One of the disadvantages of their algorithm is that it is restricted to senses that have distributionally similar words in the MPQA corpus, excluding 23% of their test data from automatic classification. Su and Markert (2008) present supervised classifiers, which rely mostly on WordNet glosses and do not effectively exploit WordNet X  X  relation structure. 3.1 Minimum Cuts: The Main Idea Binary classification with minimum cuts (Mincuts) in graphs is based on the idea that similar items should be grouped in the same cut. All items in the training/test data are seen as vertices in a graph with undirected weighted edges between them specifying how strong the similarity/association between two vertices is. We use minimum s-t cuts: the graph con-tains two particular vertices s (source, corresponds to subjective) and t (sink, corresponds to objective) and each vertex u is connected to s and t via a weighted edge that can express how likely u is to be classified as s or t in isolation.

Binary classification of the vertices is equivalent to splitting the graph into two disconnected subsets of all vertices, S and T with s  X  S and t  X  T . This corresponds to removing a set of edges from the graph. As similar items should be in the same part of the split, the best split is one which removes edges with low weights. In other words, a minimum cut problem is to find a partition of the graph which minimizes the following formula, where w ( u,v ) ex-presses the weight of an edge between two vertices. Globally optimal minimum cuts can be found in polynomial time and near-linear running time in practice, using the maximum flow algorithm (Pang and Lee, 2004; Cormen et al., 2002). 3.2 Why might Semi-supervised Minimum We propose semi-supervised mincuts for subjectiv-ity recognition on senses for several reasons.
First, our problem satisfies two major conditions necessary for using minimum cuts. It is a bi-nary classification problem (subjective vs. objective senses) as is needed to divide the graph into two components. Our dataset also lends itself naturally to s-t Mincuts as we have two different views on the data. Thus, the edges of a vertex (=sense) to the source/sink can be seen as the probability of a sense being subjective or objective without taking similar-ity to other senses into account, for example via con-sidering only the sense gloss. In contrast, the edges between two senses can incorporate the WordNet re-lation hierarchy, which is a good source of similar-ity for our problem as many WordNet relations are subjectivity-preserving , i.e. if two senses are con-nected via such a relation they are likely to be both subjective or both objective. 3 An example here is the antonym relation, where two antonyms such as good X  X orally admirable and evil, wicked X  X orally bad or wrong are both subjective.

Second, Mincuts can be easily expanded into a semi-supervised framework (Blum and Chawla, 2001). This is essential as the existing labeled datasets for our problem are small. In addition, glosses are short, leading to sparse high dimensional vectors in standard feature representations. Also, WordNet connections between different parts of the WordNet hierarchy can also be sparse, leading to relatively isolated senses in a graph in a supervised framework. Semi-supervised Mincuts allow us to import unlabeled data that can serve as bridges to isolated components. More importantly, as the unla-beled data can be chosen to be related to the labeled and test data, they might help pull test data to the right cuts (categories). 3.3 Formulation of Semi-supervised Mincuts The formulation of our semi-supervised Mincut for sense subjectivity classification involves the follow-ing steps, which we later describe in more detail. 1. We define two vertices s (source) and t (sink), 2. For the test and unlabeled examples, we see 3. WordNet relations are used to construct the 4. After graph construction we then employ a We now describe the above steps in more detail.
Selection of unlabeled data: Random selection of unlabeled data might hurt the performance of Mincuts, as they might not be related to any sense in our training/test data (denoted by A ). Thus a basic principle is that the selected unlabeled senses should be related to the training/test data by WordNet rela-tions. We therefore simply scan each sense in A , and collect all senses related to it via one of the WordNet relations in Table 1. All such senses that are not in A are collected in the unlabeled data set.

Weighting of edges to the classification ver-tices: The edge weight to s and t represents how likely it is that an example vertex is initially put in the cut in which s (subjective) or t (objective) lies. For unlabeled and test vertices, we use a supervised classifier (SVM 4 ) with the labeled data as training data to assign the edge weights. The SVM is also used as a baseline and its features are described in Section 4.3. As we do not wish the Mincut to re-verse labels of the labeled training data, we assign a high constant weight of 5 to the edge between a la-beled vertex and its corresponding classification ver-tex, and a low weight of 0.01 to the edge to the other classification vertex.

Assigning weights to WordNet relations: We connect two vertices that are linked by one of the ten WordNet relations in Table 1 via an edge. Not all WordNet relations we use are subjectivity-preserving to the same degree: for example, hy-ponyms (such as simpleton ) of objective senses (such as person ) do not have to be objective. How-ever, we aim for high graph connectivity and we can assign different weights to different relations to reflect the degree to which they are subjectivity-preserving. Therefore, we experiment with two methods of weight assignment. Method 1 (NoSL) assigns the same constant weight of 1.0 to all Word-Net relations.

Method 2 (SL) reflects different degrees of pre-serving subjectivity. To do this, we adapt an un-supervised method of generating a large noisy set of subjective and objective senses from our previ-ous work (Su and Markert, 2008). This method uses a list of subjective words (SL) 5 to classify each WordNet sense with at least two subjective words in its gloss as subjective and all other senses as ob-jective. We then count how often two senses re-lated via a given relation have the same or a dif-ferent subjectivity label. The weight is computed by #same / (#same + #different). Results are listed in Table 1.
 Example graph: An example graph is shown in Figure 1. The three example vertices correspond to the senses religious  X  X xtremely scrupulous and conscientious, scrupulous  X  X aving scruples; aris-ing from a sense of right and wrong; principled ; and flicker , spark, glint X  X  momentary flash of light respectively. The vertex  X  X crupulous X  is unlabeled data derived from the vertex  X  X eligious X (a test item) by the relation  X  X imilar-to X . 4.1 Datasets We conduct the experiments on two different gold standard datasets. One is the Micro-WNOp corpus, which is representative of the part-of-speech distri-bution in WordNet 6 . It includes 298 words with 703 objective and 358 subjective WordNet senses. The second one is the dataset created by Wiebe and Mihalcea (2006). 7 It only contains noun and verb senses, and includes 60 words with 236 ob-jective and 92 subjective WordNet senses. As the Micro-WNOp set is larger and also contains adjec-tive and adverb senses, we describe our results in more detail on that corpus in the Section 4.3 and 4.4. In Section 4.5, we shortly discuss results on Wiebe&amp;Mihalcea X  X  dataset. 4.2 Baseline and Evaluation We compare to a baseline that assigns the most frequent category objective to all senses, which achieves an accuracy of 66.3% and 72.0% on Micro-WNOp and Wiebe&amp;Mihalcea X  X  dataset respectively. We use the McNemar test at the significance level of 5% for significance statements. All evaluations are carried out by 10-fold cross-validation. 4.3 Standard Supervised Learning We use an SVM classifier to compare our proposed semi-supervised Mincut approach to a reasonable baseline. 8 Three different feature types are used.
Lexical Features (L): a bag-of-words representa-tion of the sense glosses with stop word filtering.
Relation Features (R): First, we use two features for each of the ten WordNet relations in Table 1, de-scribing how many relations of that type the sense has to senses in the subjective or objective part of the training set, respectively. This provides a non-graph summary of subjectivity-preserving links. Second, we manually collected a small set (denoted by SubjSet ) of seven subjective verb and noun senses which are close to the root in WordNet X  X  hypernym tree. A typical example element of SubjSet is psy-chological feature  X  X  feature of the mental life of a living organism , which indicates subjectivity for its hyponyms such as hope  X  the general feeling that some desire will be fulfilled . A binary feature de-scribes whether a noun/verb sense is a hyponym of an element of SubjSet .

Monosemous Feature (M): for each sense, we scan if a monosemous word is part of its synset. If so, we further check if the monosemous word is col-lected in the subjective word list (SL). The intuition is that if a monosemous word is subjective, obvi-ously its (single) sense is subjective. For example, the sense uncompromising, inflexible X  X ot making concessions is subjective, as  X  X ncompromising X  is a monosemous word and also in SL.

We experiment with different combinations of features and the results are listed in Table 2, prefixed by  X  X VM X . All combinations perform significantly better than the more frequent category baseline and similarly to the supervised Naive Bayes classifier (see S&amp;M in Table 2) we used in Su and Mark-ert (2008). However, improvements by adding more features remain small.

In addition, we compare to a supervised classifier (see Lesk in Table 2) that just assigns each sense the subjectivity label of its most similar sense in the training data, using Lesk X  X  similarity measure from Pedersen X  X  WordNet similarity package 9 . We use Lesk as it is one of the few measures applicable across all parts-of-speech. 4.4 Semi-supervised Graph Mincuts Using our formulation in Section 3.3, we import 3,220 senses linked by the ten WordNet relations to any senses in Micro-WNOp as unlabeled data. We construct edge weights to classification vertices us-ing the SVM discussed above and use WordNet re-lations for links between example vertices, weighted by either constants (NoSL) or via the method illus-trated in Table 1 (SL). The results are also summa-rized in Table 2. Semi-supervised Mincuts always significantly outperform the corresponding SVM classifiers, regardless of whether the subjectivity list is used for setting edge weights. We can also see that we achieve good results without using any other knowledge sources (setting LR-NoSL).

The example in Figure 1 explains why semi-supervised Mincuts outperforms the supervised ap-proach. The vertex  X  X eligious X  is initially assigned the subjective/objective probabilities 0.24/0.76 by the SVM classifier, leading to a wrong classification. However, in our graph-based Mincut framework, the vertex  X  X eligious X  might link to other vertices (for example, it links to the vertex  X  X crupulous X  in the unlabeled data by the relation  X  X imilar-to X ). The mincut algorithm will put vertices  X  X eligious X  and  X  X crupulous X  in the same cut (subjective category) as this results in the least cost 0.93 (ignoring the cost of assigning the unrelated sense of  X  X licker X ). In other words, the edges between the vertices are likely to correct some initially wrong classification and pull the vertices into the right cuts.

In the following we will analyze the best mini-mum cut algorithm LRM-SL in more detail. We measure its accuracy for each part-of-speech in the Micro-WNOp dataset. The number of noun, adjec-tive, adverb and verb senses in Micro-WNOp is 484, 265, 31 and 281, respectively. The result is listed in Table 3. The significantly better performance of semi-supervised mincuts holds across all parts-of-speech but the small set of adverbs, where there is no significant difference between the baseline, SVM and the Mincut algorithm.
We will now investigate how LRM-SL performs with different sizes of labeled and unlabeled data. All learning curves are generated via averaging 10 learning curves from 10-fold cross-validation. Performance with different sizes of labeled data: we randomly generate subsets of labeled data A 1 , A 2 ... A n , and guarantee that A 1  X  A 2 ...  X  A n . Results for the best SVM (LRM) and the best min-imum cut (LRM-SL) are listed in Table 4, and the corresponding learning curve is shown in Figure 2. As can be seen, the semi-supervised Mincuts is consistently better than SVM. Moreover, the semi-supervised Mincut with only 200 labeled data items performs even better than SVM with 954 training items (78.9% vs 75.3%), showing that our semi-supervised framework allows for a training data re-duction of more than 80%.

Performance with different sizes of unlabeled data: We propose two different settings.

Option1: Use a subset of the ten relations to generate the unlabeled data (and edges between example vertices). For example, we first use { antonym, similar-to } only to obtain a unlabeled dataset U 1 , then use a larger subset of the relations like { antonym, similar-to, direct-hyponym, direct-hypernym } to generate another unlabeled dataset U 2 , and so forth. Obviously, U i is a subset of U i +1 .
Option2: Use all the ten relations to generate the unlabeled data U . We then randomly select subsets of U , such as subset U 1 , U 2 and U 3 , and guarantee that U 1  X  U 2  X  U 3  X  ...U .
The results are listed in Table 5 and Table 6 re-spectively. The corresponding learning curves are shown in Figure 3. We see that performance im-proves with the increase of unlabeled data. In addi-tion, the curves seem to converge when the size of unlabeled data is larger than 3,000. From the results in Tabel 5 one can also see that hyponymy is the re-lation accounting for the largest increase.
Furthermore, these results also show that a super-vised mincut without unlabeled data performs only on a par with other supervised classifiers (75.9%). The reason is that if we exclude the unlabeled data, there are only 67 WordNet relations/edges between senses in the small Micro-WNOp dataset. In con-trast, the use of unlabeled data adds more edges (4,586) to the graph, which strongly affects the graph cut partition (see also Figure 1). 4.5 Comparison to Prior Approaches In our previous work (Su and Markert, 2008), we re-port 76.9% as the best accuracy on the same Micro-WNOp dataset used in the previous sections, using a supervised Naive Bayes (S&amp;M in Tabel 2). Our best result from Mincuts is significantly better at 84.6% (see LRM-SL in Table 2).

For comparison to Wiebe and Mihalcea (2006), we use their dataset for testing, henceforth called Wiebe (see Section 4.1 for a description). Wiebe and Mihalcea (2006) report their results in precision and recall curves for subjective senses, such as a pre-cision of about 55% at a recall of 50% for subjective senses. Their F-score for subjective senses seems to remain relatively static at 0.52 throughout their pre-cision/recall curve.

We run our best Mincut LRM-SL algorithm with two different settings on Wiebe . Using Micro-WNOp as training set and Wiebe as test set, we achieve an accuracy of 83.2%, which is similar to the results on the Micro-WNOp dataset. At the recall of 50% we achieve a precision of 83.6% (in compari-son to their precision of 55% at the same recall). Our F-score is 0.63 (vs. 0.52).

To check whether the high performance is just due to our larger training set, we also conduct 10-fold cross-validation on Wiebe . The accuracy achieved is 81.1% and the F-score 0.56 (vs. 0.52), suggesting that our algorithm performs better. Our algorithm can be used on all WordNet senses whereas theirs is restricted to senses that have distributionally similar words in the MPQA corpus (see Section 2). How-ever, they use an unsupervised algorithm i.e. they do not need labeled word senses, although they do need a large, manually annotated opinion corpus. We propose a semi-supervised minimum cut algo-rithm for subjectivity recognition on word senses. The experimental results show that our proposed ap-proach is significantly better than a standard super-vised classification framework as well as a super-vised Mincut. Overall, we achieve a 40% reduction in error rates (from an error rate of about 25% to an error rate of 15%). To achieve the results of standard supervised approaches with our model, we need less than 20% of their training data. In addition, we com-pare our algorithm to previous state-of-the-art ap-proaches, showing that our model performs better on the same datasets.

Future work will explore other graph construc-tion methods, such as the use of morphological re-lations as well as thesaurus and distributional sim-ilarity measures. We will also explore other semi-supervised algorithms.
