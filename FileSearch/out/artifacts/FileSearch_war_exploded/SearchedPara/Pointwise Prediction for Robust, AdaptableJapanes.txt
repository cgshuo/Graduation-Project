 Japanese morphological analysis (MA) takes an un-segmented string of Japanese text as input, and out-puts a string of morphemes annotated with parts of speech (POSs). As MA is the first step in Japanese NLP, its accuracy directly affects the accuracy of NLP systems as a whole. In addition, with the prolif-eration of text in various domains, there is increasing need for methods that are both robust and adaptable to out-of-domain data (Escudero et al., 2000).
Previous approaches have used structured predic-tors such as hidden Markov models (HMMs) or con-ditional random fields (CRFs), which consider the interactions between neighboring words and parts of speech (Nagata, 1994; Asahara and Matsumoto, 2000; Kudo et al., 2004). However, while struc-ture does provide valuable information, Liang et al. (2008) have shown that gains provided by struc-tured prediction can be largely recovered by using a richer feature set. This approach has also been called  X  X ointwise X  prediction, as it makes a single indepen-dent decision at each point (Neubig and Mori, 2010).
While Liang et al. (2008) focus on the speed ben-efits of pointwise prediction, we demonstrate that it also allows for more robust and adaptable MA. We find experimental evidence that pointwise MA can exceed the accuracy of a state-of-the-art structured approach (Kudo et al., 2004) on in-domain data, and is significantly more robust to out-of-domain data.
We also show that pointwise MA can be adapted to new domains with minimal effort through the combination of active learning and partial annota-tion (Tsuboi et al., 2008), where only informative parts of a particular sentence are annotated. In a realistic domain adaptation scenario, we find that a combination of pointwise prediction, partial annota-tion, and active learning allows for easy adaptation. Japanese MA takes an unsegmented string of char-acters x I 1 as input, segments it into morphemes w J 1 , and annotates each morpheme with a part of speech t . This can be formulated as a two-step process of first segmenting words, then estimating POSs (Ng and Low, 2004), or as a single joint process of find-ing a morpheme/POS string from unsegmented text (Kudo et al., 2004; Nakagawa, 2004; Kruengkrai et al., 2009). In this section we describe an existing joint sequence-based method for Japanese MA, as well as our proposed two-step pointwise method. 2.1 Joint Sequence-Based MA Japanese MA has traditionally used sequence based models, finding a maximal POS sequence for en-tire sentences as in Figure 1 (a). The CRF-based method presented by Kudo et al. (2004) is gener-ally accepted as the state-of-the-art in this paradigm. CRFs are trained over segmentation lattices, which allows for the handling of variable length sequences that occur due to multiple segmentations. The model is able to take into account arbitrary features, as well as the context between neighboring tags.

We follow Kudo et al. (2004) in defining our fea-ture set, as summarized in Table 1 1 . Lexical features were trained for the top 5000 most frequent words in the corpus. It should be noted that these are word-based features, and information about transitions be-tween POS tags is included. When creating training data, the use of word-based features indicates that word boundaries must be annotated, while the use of POS transition information further indicates that all of these words must be annotated with POSs. 2.2 2-Step Pointwise MA In our research, we take a two-step approach, first segmenting character sequence x I 1 into the word se-quence w J 1 with the highest probability, then tagging each word with parts of speech t J 1 . This approach is shown in Figure 1 (b).

We follow Sassano (2002) in formulating word segmentation as a binary classification problem, es-timating boundary tags b I 1 1 . Tag b i = 1 indi-cates that a word boundary exists between charac-ters x i and x i +1 , while b i = 0 indicates that a word boundary does not exist. POS estimation can also be formulated as a multi-class classification prob-lem, where we choose one tag t j for each word w j . These two classification problems can be solved by tools in the standard machine learning toolbox such as logistic regression (LR), support vector machines (SVMs), or conditional random fields (CRFs).
We use information about the surrounding charac-ters (character and character-type n -grams), as well as the presence or absence of words in the dictio-nary as features (Table 2). Specifically dictionary features for word segmentation l s and r s are active if a string of length s included in the dictionary is present directly to the left or right of the present word boundary, and i s is active if the present word boundary is included in a dictionary word of length s . Dictionary feature d jk for POS estimation indi-cates whether the current word w j occurs as a dic-tionary entry with tag t k .

Previous work using this two-stage approach has used sequence-based prediction methods, such as maximum entropy Markov models (MEMMs) or CRFs (Ng and Low, 2004; Peng et al., 2004). How-ever, as Liang et al. (2008) note, and we confirm, sequence-based predictors are often not necessary when an appropriately rich feature set is used. One important difference between our formulation and that of Liang et al. (2008) and all other previous methods is that we rely only on features that are di-rectly calculable from the surface string, without us-ing estimated information such as word boundaries or neighboring POS tags 2 . This allows for training from sentences that are partially annotated as de-scribed in the following section. NLP is now being used in domains such as medi-cal text and legal documents, and it is necessary that MA be easily adaptable to these areas. In a domain adaptation situation, we have at our disposal both annotated general domain data, and unannotated tar-get domain data. We would like to annotate the target domain data efficiently to achieve a maximal gain in accuracy for a minimal amount of work.
Active learning has been used as a way to pick data that is useful to annotate in this scenario for several applications (Chan and Ng, 2007; Rai et al., 2010) so we adopt an active-learning-based ap-proach here. When adapting sequence-based predic-tion methods, most active learning approaches have focused on picking full sentences that are valuable to annotate (Ringger et al., 2007; Settles and Craven, 2008). However, even within sentences, there are generally a few points of interest surrounded by large segments that are well covered by already an-notated data.

Partial annotation provides a solution to this prob-lem (Tsuboi et al., 2008; Sassano and Kurohashi, 2010). In partial annotation, data that will not con-tribute to the improvement of the classifier is left untagged. For example, if there is a single difficult word in a long sentence, only the word boundaries and POS of the difficult word will be tagged.  X  X if-ficult X  words can be selected using active learning approaches, choosing words with the lowest classi-fier accuracy to annotate. In addition, corpora that are tagged with word boundaries but not POS tags are often available; this is another type of partial an-notation.

When using sequence-based prediction, learning on partially annotated data is not straightforward, as the data that must be used to train context-based transition probabilities may be left unannotated. In contrast, in the pointwise prediction framework, training using this data is both simple and efficient; unannotated points are simply ignored. A method for learning CRFs from partially annotated data has been presented by Tsuboi et al. (2008). However, when using partial annotation, CRFs X  already slow training time becomes slower still, as they must be trained over every sequence that has at least one an-notated point. Training time is important in an active learning situation, as an annotator must wait while the model is being re-trained. In order to test the effectiveness of pointwise MA, we did an experiment measuring accuracy both on in-domain data, and in a domain-adaptation situa-tion. We used the Balanced Corpus of Contempo-rary Written Japanese (BCCWJ) (Maekawa, 2008), specifying the whitepaper, news, and books sections as our general domain corpus, and the web text sec-tion as our target domain corpus (Table 3).
As a representative of joint sequence-based MA described in 2.1, we used MeCab (Kudo, 2006), an open source implementation of Kudo et al. (2004) X  X  CRF-based method (we will call this JOINT ). For the pointwise two-step method, we trained logistic re-gression models with the LIBLINEAR toolkit (Fan et al., 2008) using the features described in Section 2.2 (2-LR ). In addition, we trained a CRF-based model with the CRFSuite toolkit (Okazaki, 2007) using the same features and set-up (for both word Train Test JOINT 2-CRF 2-LR GEN GEN 97.31% 98.08% 98.03% GEN TAR 94.57% 95.39% 95.13% GEN + TAR TAR 96.45% 96.91% 96.82% segmentation and POS tagging) to examine the con-tribution of context information (2-CRF ).
To create the dictionary, we added all of the words in the corpus, but left out a small portion of single-tons to prevent overfitting on the training data 3 . As an evaluation measure, we follow Nagata (1994) and Kudo et al. (2004) and use Word/POS tag pair F-measure, so that both word boundaries and POS tags must be correct for a word to be considered correct. 4.1 Analysis Results In our first experiment we compared the accuracy of the three methods on both the in-domain and out-of-domain test sets (Table 4). It can be seen that 2-
LR outperforms JOINT , and achieves similar but slightly inferior results to 2-CRF . The reason for accuracy gains over JOINT lies largely in the fact that while JOINT is more reliant on the dictionary, and thus tends to mis-segment unknown words, the two-step methods are significantly more robust. The small difference between 2-LR and 2-CRF indicates that given a significantly rich feature set, context-based features provide little advantage, although the advantage is larger on out-of-domain data. In addi-tion, training of 2-LR is significantly faster than 2-CRF . 2-LR took 16m44s to train, while 2-CRF took 51m19s to train on a 3.33GHz Intel Xeon CPU. 4.2 Domain Adaptation Our second experiment focused on the domain adaptability of each method. Using the target do-main training corpus as a pool of unannotated data, we performed active learning-based domain adapta-tion using two techniques.
 For both methods, 100 words (or for SENT until the end of the sentence in which the 100th word is reached) are annotated, then the classifier is re-trained and new probability scores are generated. Each set of 100 words is a single iteration, and 100 iterations were performed for each method.

From the results in Figure 2, it can be seen that the combination of PART and 2-LR allows for sig-nificantly faster adaptation than other approaches, achieving accuracy gains in 15 iterations that are achieved in 100 iterations with SENT , and surpassing 2-CRF after 15 iterations. Finally, it can be seen that JOINT improves at a pace similar to PART , likely due to the fact that its pre-adaptation accuracy is lower than the other methods. It can be seen from Table 4 that even after adaptation with the full corpus, it will still lag behind the two-step methods. This paper proposed a pointwise approach to Japanese morphological analysis. It showed that de-spite the lack of structure, it was able to achieve re-sults that meet or exceed structured prediction meth-ods. We also demonstrated that it is both robust and adaptable to out-of-domain text through the use of partial annotation and active learning. Future work in this area will include examination of performance on other tasks and languages.

