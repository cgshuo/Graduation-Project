 Recent advances in Statistical Machine Translation (SMT) are widely centred around two concepts: (a) hierarchical translation processes, frequently employing Synchronous Context Free Grammars (SCFGs) and (b) transduction or synchronous rewrite processes over a linguistic syntactic tree. SCFGs in the form of the Inversion-Transduction Grammar (ITG) were first introduced by (Wu, 1997) as a formalism to recursively describe the trans-lation process. The Hiero system (Chiang, 2005) utilised an ITG-flavour which focused on hierarchi-cal phrase-pairs to capture context-driven translation and reordering patterns with  X  X aps X , offering com-petitive performance particularly for language pairs with extensive reordering. As Hiero uses a single non-terminal and concentrates on overcoming trans-lation lexicon sparsity, it barely explores the recur-sive nature of translation past the lexical level. Nev-ertheless, the successful employment of SCFGs for phrase-based SMT brought translation models as-suming latent syntactic structure to the spotlight.
Simultaneously, mounting efforts have been di-rected towards SMT models employing linguistic syntax on the source side (Yamada and Knight, 2001; Quirk et al., 2005; Liu et al., 2006), target side (Galley et al., 2004; Galley et al., 2006) or both (Zhang et al., 2008; Liu et al., 2009; Chiang, 2010). Hierarchical translation was combined with target side linguistic annotation in (Zollmann and Venu-gopal, 2006). Interestingly, early on (Koehn et al., 2003) exemplified the difficulties of integrating lin-guistic information in translation systems. Syntax-based MT often suffers from inadequate constraints in the translation rules extracted, or from striving to combine these rules together towards a full deriva-tion. Recent research tries to address these issues, by re-structuring training data parse trees to bet-ter suit syntax-based SMT training (Wang et al., 2010), or by moving from linguistically motivated synchronous grammars to systems where linguistic plausibility of the translation is assessed through ad-ditional features in a phrase-based system (Venu-gopal et al., 2009; Chiang et al., 2009), obscuring the impact of higher level syntactic processes.
While it is assumed that linguistic structure does correlate with some translation phenomena, in this work we do not employ it as the backbone of trans-lation. In place of linguistically constrained trans-lation imposing syntactic parse structure, we opt for linguistically motivated translation. We learn latent hierarchical structure, taking advantage of linguistic annotations but shaped and trained for translation.
We start by labelling each phrase-pair span in the word-aligned training data with multiple linguisti-cally motivated categories, offering multi-grained abstractions from its lexical content. These phrase-pair label charts are the input of our learning al-gorithm, which extracts the linguistically motivated rules and estimates the probabilities for a stochastic SCFG, without arbitrary constraints such as phrase or span sizes. Estimating such grammars under a Maximum Likelihood criterion is known to be plagued by strong overfitting leading to degener-ate estimates (DeNero et al., 2006). In contrast, our learning objective not only avoids overfitting the training data but, most importantly, learns joint stochastic synchronous grammars which directly aim at generalisation towards yet unseen instances.
By advancing from structures which mimic lin-guistic syntax, to learning linguistically aware latent recursive structures targeting translation, we achieve significant improvements in translation quality for 4 different language pairs in comparison with a strong hierarchical translation baseline.

Our key contributions are presented in the fol-lowing sections. Section 2 discusses the weak in-dependence assumptions of SCFGs and introduces a joint translation model which addresses these is-sues and separates hierarchical translation structure from phrase-pair emission. In section 3 we consider a chart over phrase-pair spans filled with source-language linguistically motivated labels. We show how we can employ this crucial input to extract and train a hierarchical translation structure model with millions of rules. Section 4 demonstrates decoding with the model by constraining derivations to lin-guistic hints of the source sentence and presents our empirical results. We close with a discussion of re-lated work and our conclusions. Our model is based on a probabilistic Synchronous CFG (Wu, 1997; Chiang, 2005). SCFGs define a SBAR \ WHNP  X   X  VP/NP L NP R  X  (b) language over string pairs, which are generated be-ginning from a start symbol S and recursively ex-panding pairs of linked non-terminals across the two strings using the grammar X  X  rule set. By crossing the links between the non-terminals of the two sides re-ordering phenomena are captured. We employ bi-nary SCFGs, i.e. grammars with a maximum of two non-terminals on the right-hand side. Also, for this work we only used grammars with either purely lexi-cal or purely abstract rules involving one or two non-terminal pairs. An example can be seen in Figure 1, using an ITG-style notation and assuming the same non-terminal labels for both sides.

We utilise probabilistic SCFGs, where each rule is assigned a conditional probability of expanding the left-hand side symbol with the rule X  X  right-hand side. Phrase-pairs are emitted jointly and the over-all probabilistic SCFG is a joint model over parallel strings. 2.1 SCFG Reordering Weaknesses An interesting feature of all probabilistic SCFGs (i.e. not only binary ones), which has received sur-prisingly little attention, is that the reordering pat-tern between the non-terminal pairs (or in the case of ITGs the choice between monotone and swap ex-pansion) are not conditioned on any other part of a derivation. The result is that, the reordering pattern with the highest probability will always be preferred (e.g. in the Viterbi derivation) over the rest, irre-spective of lexical or abstract context. As an ex-ample, a probabilistic SCFG will always assign a higher probability to derivations swapping or mono-tonically translating nouns and adjectives between English and French, only depending on which of the two rules NP  X  [ NNJJ ] , NP  X   X  NNJJ  X  has a higher probability. The rest of the (sometimes thousands of) rule-specific features usually added to SCFG translation models do not directly help either, leaving reordering decisions disconnected from the rest of the derivation.

While in a decoder this is somehow mitigated by the use of a language model, we believe that the weakness of straightforward applications of SCFGs to model reordering structure at the sentence level misses a chance to learn this crucial part of the translation process during grammar induction. As (Mylonakis and Sima X  X n, 2010) note,  X  X lain X  SCFGs seem to perform worse than the grammars described next, mainly due to wrong long-range reordering de-cisions for which the language model can hardly help. 2.2 Hierarchical Reordering SCFG We address the weaknesses mentioned above by re-lying on an SCFG grammar design that is similar to the  X  X exicalised Reordering X  grammar of (Mylon-akis and Sima X  X n, 2010). As in the rules of Fig-ure 1, we separate non-terminals according to the reordering patterns in which they participate. Non-terminals such as B L , C R take part only in swap-ping right-hand sides  X  B L C R  X  (with B L swap-ping from the source side X  X  left to the target side X  X  right, C R swapping in the opposite direction), while non-terminals such as B, C take part solely in mono-tone right-hand side expansions [ B C ] . These non-terminal categories can appear also on the left-hand side of a rule, as in rule (c) of Figure 1.
In contrast with (Mylonakis and Sima X  X n, 2010), monotone and swapping non-terminals do not emit phrase-pairs themselves. Rather, each non-terminal NT is expanded to a dedicated phrase-pair emit-ting non-terminal NT P , which generates all phrase-pairs for it and nothing more. In this way, the pref-erence of non-terminals to either expand towards a (long) phrase-pair or be further analysed recur-sively is explicitly modelled. Furthermore, this set of pre-terminals allows us to separate the higher or-der translation structure from the process that emits phrase-pairs, a feature we employ next.

In (Mylonakis and Sima X  X n, 2010) this grammar design mainly contributed to model lexical reorder-ing preferences. While we retain this function, for the rich linguistically-motivated grammars used in this work this design effectively propagates reorder-ing preferences above and below the current rule ap-plication (e.g. Figure 1, rules (a)-(c)), allowing to learn and apply complex reordering patterns.
The different types of grammar rules are sum-marised in abstract form in Figure 2. We will subse-quently refer to this grammar structure as Hierarchi-cal Reordering SCFG (HR-SCFG). 2.3 Generative Model We arrive at a probabilistic SCFG model which jointly generates source e and target f strings, by augmenting each grammar rule with a probability, summing up to one for every left-hand side. The probability of a derivation D of tuple  X  e , f  X  begin-ning from start symbol S is equal to the product of the probabilities of the rules used to recursively gen-erate it.
 We separate the structural part of the derivation D , down to the pre-terminals NT P , from the phrase-emission part. The grammar rules pertaining to the structural part and their associated probabilities de-fine a model p (  X  ) over the latent variable  X  de-termining the recursive, reordering and phrase-pair segmenting structure of translation, as in Figure 4. Given  X  , the phrase-pair emission part merely gener-ates the phrase-pairs utilising distributions from ev-ery NT P to the phrase-pairs that it covers, thereby defining a model over all sentence-pairs generated given each translation structure. The probabilities of a derivation and of a sentence-pair are then as fol-lows:
By splitting the joint model in a hierarchical struc-ture model and a lexical emission one we facilitate estimating the two models separately. The following section discusses this. 3.1 Phrase-Pair Label Chart The input to our learning algorithm is a word-aligned parallel corpus. We consider as phrase-pair spans those that obey the word-alignment con-straints of (Koehn et al., 2003). For every train-ing sentence-pair, we also input a chart containing one or more labels for every synchronous span, such as that of Figure 3. Each label describes differ-ent properties of the phrase pair (syntactic, semantic etc.), possibly in relation to its context, or supply-ing varying levels of abstraction (phrase-pair, deter-miner with noun, noun-phrase, sentence etc.). We aim to induce a recursive translation structure ex-plaining the joint generation of the source and target sentence taking advantage of these phrase-pair span labels.

For this work we employ the linguistically mo-tivated labels of (Zollmann and Venugopal, 2006), albeit for the source language. Given a parse of the source sentence, each span is assigned the following kind of labels: Phrase-Pair All phrase-pairs are assigned the X label Constituent Source phrase is a constituent A Concatenation of Constituents Source phrase la-belled A+B as a concatenation of constituents A and B, similarly for 3 constituents.
 Partial Constituents Categorial grammar (Bar-Hillel, 1953) inspired labels A/B, A \ B, indicating a partial constituent A missing constituent B right or left respectively.

An important point is that we assign all applica-ble labels to every span. In this way, each label set captures the features of the source side X  X  parse-tree without being bounded by the actual parse structure, as well as provides a coarse to fine-grained view of the source phrase. 3.2 Grammar Extraction From every word-aligned sentence-pair and its la-bel chart, we extract SCFG rules as those of Figure 2. Binary rules are extracted from adjoining syn-chronous spans up to the whole sentence-pair level, with the non-terminals of both left and right-hand side derived from the label names plus their reorder-ing function (monotone, left/right swapping) in the span examined. A single unary rule per non-terminal NT generates the phrase-pair emitting NT P . Unary rules NT P  X   X / X  generating the phrase-pair are created for all the labels covering it.

While we label the phrase-pairs similarly to (Zoll-mann and Venugopal, 2006), the extracted grammar is rather different. We do not employ rules that are grounded to lexical context ( X  X ap X  rules), relying in-stead on the reordering-aware non-terminal set and related unary and binary rules. The result is a gram-mar which can both capture a rich array of trans-lation phenomena based on linguistic and lexical grounds and explicitly model the balance between memorising long phrase-pairs and generalising over yet unseen ones, as shown in the next example.
The derivation in Figure 4 illustrates some of the formalism X  X  features. A preference to reorder based on lexical content is applied for is / ist. Noun phrase NP R is recursively constructed with a preference to constitute the right branch of an order swapping non-terminal expansion. This is matched with VP/NP L which reorders in the opposite direction. The labels VP/NP and SBAR \ WHNP allow linguistic syntax context to influence the lexical and reordering trans-lation choices. Crucially, all these lexical, attach-ment and reordering preferences (as encoded in the model X  X  rules and probabilities) must be matched to-gether to arrive at the analysis in Figure 4. 3.3 Parameter Estimation We estimate the parameters for the phrase-emission model p ( e , f |  X  ) using Relative Frequency Estima-tion (RFE) on the label charts induced for the train-ing sentence-pairs, after the labels have been aug-mented by the reordering indications. In the RFE estimate, every rule NT P  X   X / X  receives a prob-ability in proportion with the times that  X / X  was covered by the NT label.

On the other hand, estimating the parameters un-der Maximum-Likelihood Estimation (MLE) for the latent translation structure model p (  X  ) is bound to overfit towards memorising whole sentence-pairs as discussed in (Mylonakis and Sima X  X n, 2010), with the resulting grammar estimate not being able to generalise past the training data. However, apart from overfitting towards long phrase-pairs, a gram-mar with millions of structural rules is also liable to overfit towards degenerate latent structures which, while fitting the training data well, have limited ap-plicability to unseen sentences.

We avoid both pitfalls by estimating the grammar probabilities with the Cross-Validating Expectation-Maximization algorithm (CV-EM) (Mylonakis and Sima X  X n, 2008; Mylonakis and Sima X  X n, 2010). CV-EM is a cross-validating instance of the well known EM algorithm (Dempster et al., 1977). It works it-eratively on a partition of the training data, climb-ing the likelihood of the training data while cross-validating the latent variable values, considering for every training data point only those which can be produced by models built from the rest of the data excluding the current part. As a result, the estima-tion process simulates maximising future data likeli-hood, using the training data to directly aim towards strong generalisation of the estimate.

For our probabilistic SCFG-based translation structure variable  X  , implementing CV-EM boils down to a synchronous version of the Inside-Outside algorithm, modified to enforce the CV criterion. In this way we arrive at cross-validated ML estimate of the  X  parameters while keeping the phrase-emission parameters of p ( e , f |  X  ) fixed. The CV-criterion, apart from avoiding overfitting, results in discarding the structural rules which are only found in a single part of the training corpus, leading to a more com-pact grammar while still retaining millions of struc-tural rules that are more hopeful to generalise.
Unravelling the joint generative process, by mod-elling latent hierarchical structure separately from phrase-pair emission, allows us to concentrate our inference efforts towards the hidden, higher-level translation mechanism. 4.1 Decoding Model The induced joint translation model can be used to recover arg max e p ( e | f ) , as it is equal to arg max e p ( e , f ) . We employ the induced proba-bilistic HR-SCFG G as the backbone of a log-linear, feature based translation model, with the derivation probability p ( D ) under the grammar estimate being one of the features. This is augmented with a small number n of additional smoothing features  X  i for derivation rules r : (a) conditional phrase translation probabilities, (b) lexical phrase translation probabil-ities, (c) word generation penalty, and (d) a count of swapping reordering operations. Features (a), (b) and (c) are applicable to phrase-pair emission rules and features for both translation directions are used, while (d) is only triggered by structural rules.
These extra features assess translation quality past the synchronous grammar derivation and learning general reordering or word emission preferences for the language pair. As an example, while our probabilistic HR-SCFG maintains a separate joint phrase-pair emission distribution per non-terminal, the smoothing features (a) above assess the condi-tional translation of surface phrases irrespective of any notion of recursive translation structure.
The final feature is the language model score for the target sentence, mounting up to the follow-ing model used at decoding time, with the feature weights  X  trained by Minimum Error Rate Training (MERT) (Och, 2003) on a development corpus. p ( D  X   X   X  e , f  X  )  X  p ( e )  X  lm p G ( D )  X  G 4.2 Decoding Modifications We use a customised version of the Joshua SCFG decoder (Li et al., 2009) to translate, with the fol-lowing modifications: Source Labels Constraints As for this work the phrase-pair labels used to extract the grammar are based on the linguistic analysis of the source side, we can construct the label chart for every input sen-tence from its parse. We subsequently use it to con-sider only derivations with synchronous spans which are covered by non-terminals matching one of the labels for those spans. This applies both for the non-terminals covering phrase-pairs as well as the higher level parts of the derivation.

In this manner we not only constrain the trans-lation hypotheses resulting in faster decoding time, but, more importantly, we may ground the hypothe-ses more closely to the available linguistic informa-tion of the source sentence. This is of particular interest as we move up the derivation tree, where an initial wrong choice below could propagate to-wards hypotheses wildly diverging from the input sentence X  X  linguistic annotation.
 Per Non-Terminal Pruning The decoder uses a combination of beam and cube-pruning (Huang and Chiang, 2007). As our grammar uses non-terminals in the hundreds of thousands, it is important not to prune away prematurely non-terminals covering smaller spans and to leave more options to be con-sidered as we move up the derivation tree.

For this, for every cell in the decoder X  X  chart, we keep a separate bin per non-terminal and prune to-gether hypotheses leading to the same non-terminal covering a cell. This allows full derivations to be found for all input sentences, as well as avoids ag-gressive pruning at an early stage. Given the source label constraint discussed above, this does not in-crease running times or memory demands consid-erably as we allow only up to a few tens of non-terminals per span.
 Expected Counts Rule Pruning To compact the hierarchical structure part of the grammar prior to decoding, we prune rules that fail to accumulate 10  X  8 expected counts during the last CV-EM iter-ation. For English to German, this brings the struc-tural rules from 15M down to 1.2M. Note that we do not prune the phrase-pair emitting rules. Over-all, we consider this a much more informed pruning criterion than those based on probability values (that are not comparable across left-hand sides) or right-hand side counts (frequent symbols need many more expansions than a highly specialised one). 4.3 Experimental Setting &amp; Baseline We evaluate our method on four different lan-guage pairs with English as the source language and French, German, Dutch and Chinese as tar-get. The data for the first three language pairs are derived from parliament proceedings sourced from the Europarl corpus (Koehn, 2005), with WMT-07 development and test data for French and Ger-man. The data for the English to Chinese task is composed of parliament proceedings and news arti-cles. For all language pairs we employ 200K and 400K sentence pairs for training, 2K for develop-ment and 2K for testing (single reference per source sentence). Both the baseline and our method decode with a 3-gram language model smoothed with modi-fied Knesser-Ney discounting (Chen and Goodman, 1998), trained on around 1M sentences per target language. The parses of the source sentences em-ployed by our system during training and decod-ing are created with the Charniak parser (Charniak, 2000).

We compare against a state-of-the-art hierarchi-cal translation (Chiang, 2005) baseline, based on the Joshua translation system under the default training and decoding settings ( josh-base ). Apart of eval-uating against a state-of-the-art system, especially on the English-Chinese language pair, the compar-ison has an added interesting aspect. The heuristi-cally trained baseline takes advantage of  X  X ap rules X  to reorder based on lexical context cues, but makes very limited use of the hierarchical structure above the lexical surface. In contrast, our method induces a grammar with no such rules, relying on lexical content and the strength of a higher level translation structure instead. 4.4 Training &amp; Decoding Details To train our Latent Translation Structure (LTS) sys-tem, we used the following settings. CV-EM cross-validated on a 10-part partition of the training data and performed 10 iterations. The structural rule probabilities were initialised to uniform per left-hand side.

The decoder does not employ any  X  X lue grammar X  as is usual with hierarchical translation systems to limit reordering up to a certain cut-off length. In-stead, we rely on our LTS grammar to reorder and construct the translation output up to the full sen-tence length.

In summary, our system X  X  experimental pipeline is as follows. All input sentences are parsed and label charts are created from these parses. The Hierarchi-cal Reordering SCFG is extracted and its parame-ters are estimated employing CV-EM. The structural rules of the estimate are pruned according to their expected counts and smoothing features are added to all rules. We train the feature weights under MERT and decode with the resulting log-linear model.
The overall training and decoding setup is appeal-ing also regarding computational demands. On an 8-core 2.3GHz system, training on 200K sentence-pairs demands 4.5 hours while decoding runs on 25 sentences per minute. 4.5 Results Table 1 presents the results for the baseline and our method for the 4 language pairs, for training sets of both 200K and 400K sentence pairs. Our system ( lts ) outperforms the baseline for all 4 language pairs for both BLEU and NIST scores, by a margin which scales up to +1.92 BLEU points for English to Chinese translation when training on the 400K set. In addition, increasing the size of the training data from 200K to 400K sentence pairs widens the per-formance margin between the baseline and our sys-tem, in some cases considerably. All but one of the performance improvements are found to be statis-tically significant (Koehn, 2004) at the 95% confi-dence level, most of them also at the 99% level.
We selected an array of target languages of increasing reordering complexity with English as source. Examining the results across the target lan-guages, LTS performance gains increase the more challenging the sentence structure of the target lan-guage is in relation to the source X  X , highlighted when translating to Chinese. Even for Dutch and German, which pose additional challenges such as compound words and morphology which we do not explicitly treat in the current system, LTS still delivers signif-icant improvements in performance. Additionally, the robustness of our system is exemplified by deliv-ering significant performance increases for all lan-guage pairs.

For the English to Chinese translation task, we performed further experiments along two axes. We first investigate the contribution of the linguistic annotations, by comparing our complete system ( lts ) with an otherwise identical implementation ( lts-nolabels ) which does not employ any lin-guistically motivated labels. The latter system then uses a labels chart as that of Figure 3, which however labels all phrase-pair spans solely with the generic X label. The results in Table 2(a) indicate that a large part of the performance improvement can be attributed to the use of the linguistic annotations ex-tracted from the source parse trees, indicating the potential of the LTS system to take advantage of such additional annotations to deliver better trans-lations.

The second additional experiment relates to the impact of employing a stronger language model dur-ing decoding, which may increase performance but slows down decoding speed. Notably, as can be seen in Table 2(b), switching to a 4-gram LM results in performance gains for both the baseline and our sys-tem and while the margin between the two systems decreases, our system continues to deliver a con-siderable and significant improvement in translation BLEU scores. In this work, we focus on the combination of learning latent structure with syntax and linguistic annotations, exploring the crossroads of machine learning, linguistic syntax and machine translation. Training a joint probability model was first dis-cussed in (Marcu and Wong, 2002). We show that a translation system based on such a joint model can perform competitively in comparison with con-ditional probability models, when it is augmented with a rich latent hierarchical structure trained ade-quately to avoid overfitting.

Earlier approaches for linguistic syntax-based translation such as (Yamada and Knight, 2001; Gal-ley et al., 2006; Huang et al., 2006; Liu et al., 2006) focus on memorising and reusing parts of the struc-ture of the source and/or target parse trees and con-straining decoding by the input parse tree. In con-trast to this approach, we choose to employ lin-guistic annotations in the form of unambiguous syn-chronous span labels, while discovering ambiguous translation structure taking advantage of them.
Later work (Marton and Resnik, 2008; Venugopal et al., 2009; Chiang et al., 2009) takes a more flex-ible approach, influencing translation output using linguistically motivated features, or features based on source-side linguistically-guided latent syntactic categories (Huang et al., 2010). A feature-based ap-proach and ours are not mutually exclusive, as we also employ a limited set of features next to our trained model during decoding. We find augment-ing our system with a more extensive feature set an interesting research direction for the future.
An array of recent work (Chiang, 2010; Zhang et al., 2008; Liu et al., 2009) sets off to utilise source and target syntax for translation. While for this work we constrain ourselves to source language syntax annotations, our method can be directly applied to employ labels taking advantage of linguistic annota-tions from both sides of translation. The decoding constraints of section 4.2 can then still be applied on the source part of hybrid source-target labels.
For the experiments in this paper we employ a la-bel set similar to the non-terminals set of (Zollmann and Venugopal, 2006). However, the synchronous grammars we learn share few similarities with those that they heuristically extract. The HR-SCFG we adopt allows capturing more complex reordering phenomena and, in contrast to both (Chiang, 2005; Zollmann and Venugopal, 2006), is not exposed to the issues highlighted in section 2.1. Nevertheless, our results underline the capacity of linguistic anno-tations similar to those of (Zollmann and Venugopal, 2006) as part of latent translation variables.
Most of the aforementioned work does concen-trate on learning hierarchical, linguistically moti-vated translation models. Cohn and Blunsom (2009) sample rules of the form proposed in (Galley et al., 2004) from a Bayesian model, employing Dirich-let Process priors favouring smaller rules to avoid overfitting. Their grammar is however also based on the target parse-tree structure, with their system surpassing a weak baseline by a small margin. In contrast to the Bayesian approach which imposes external priors to lead estimation away from degen-erate solutions, we take a data-driven approach to arrive to estimates which generalise well. The rich linguistically motivated latent variable learnt by our method delivers translation performance that com-pares favourably to a state-of-the-art system. Mylonakis and Sima X  X n (2010) also employ the CV-EM algorithm to estimate the parameters of an SCFG, albeit a much simpler one based on a hand-ful of non-terminals. In this work we employ some of their grammar design principles for an immensely more complex grammar with millions of hierarchi-cal latent structure rules and show how such gram-mar can be learnt and applied taking advantage of source language linguistic annotations. In this work we contribute a method to learn and apply latent hierarchical translation structure. To this end, we take advantage of source-language lin-guistic annotations to motivate instead of constrain the translation process. An input chart over phrase-pair spans, with each cell filled with multiple lin-guistically motivated labels, is coupled with the HR-SCFG design to arrive at a rich synchronous gram-mar with millions of structural rules and the capacity to capture complex linguistically conditioned trans-lation phenomena. We address overfitting issues by cross-validating climbing the likelihood of the train-ing data and propose solutions to increase the effi-ciency and accuracy of decoding.

An interesting aspect of our work is delivering competitive performance for difficult language pairs such as English-Chinese with a joint probability generative model and an SCFG without  X  X ap rules X . Instead of employing hierarchical phrase-pairs, we invest in learning the higher-order hierarchical syn-chronous structure behind translation, up to the full sentence length. While these choices and the related results challenge current MT research trends, they are not mutually exclusive with them. Future work directions include investigating the impact of hierar-chical phrases for our models as well as any gains from additional features in the log-linear decoding model.

Smoothing the HR-SCFG grammar estimates could prove a possible source of further perfor-mance improvements. Learning translation and re-ordering behaviour with respect to linguistic cues is facilitated in our approach by keeping separate phrase-pair emission distributions per emitting non-terminal and reordering pattern, while the employ-ment of the generic X non-terminals already allows backing off to more coarse-grained rules. Neverthe-less, we still believe that further smoothing of these sparse distributions, e.g. by interpolating them with less sparse ones, could in the future lead to an addi-tional increase in translation quality.

Finally, we discuss in this work how our method can already utilise hundreds of thousands of phrase-pair labels and millions of structural rules. A fur-ther promising direction is broadening this set with labels taking advantage of both source and target-language linguistic annotation or categories explor-ing additional phrase-pair properties past the parse trees such as semantic annotations.
 Both authors are supported by a VIDI grant (nr. 639.022.604) from The Netherlands Organization for Scientific Research (NWO). The authors would like to thank Maxim Khalilov for helping with experimental data and Andreas Zollmann and the anonymous reviewers for their valuable comments.
