 In this situation, Angela has to clarify her first statement because two questions were posed simultaneously. One solution to the problem is to implement a new threaded chat that provides more contextual information from threading, specifically the message to which a response is directed. However, the threaded chat has disadvantages. In BRIDGE, distributed users collaborate on projects and communicate through chat. The threaded chat does not represent the chronological sequence of messages. Therefore, the relationship between the current message and the message before is not revealed when they are about different topics. This information is important in understanding the collaboration process, e.g., how the decision is made in the group, why the members cover several topics in the discussion, and how they switch topics from one to another. Another disadvantage of the threaded chat is that there is no single focus point in the threaded chat in the threaded chat. Compared to the standard chat that presents a consistent place, i.e., the bottom of the chat screen, to display new messages, users need to scroll back and forth to find the new message just sent by their collaborators in the threaded chat. We propose a new type of chat that addresses the message out-of-order issue in current BRIDGE chat, integrating the causal relationship between messages of the threaded chat into the existing sequential model. Text chat is a fundamental communication tool that has both synchronous and asynchronous interaction modes depending on the situation such as a one-time discussion about homework versus a long-term collaboration of the term project. The CORK-Based chat tool supports both modes of interaction. With the feature of persistent a chat log, the tool can also be used as a message board for fully asynchronous conversations. In BRIDGE, when the user opens the created chat instance, all the messages from previous conversations are displayed, and the user can continue to chat with partners with the opened chat instance (i.e., chat archive and dynamic chat discussion share the same chat display). The implemented chat feature works as follows, illustrated by Figure 1 and Figure 2: for each message posted by users, there is a number associated with it, and the number is displayed at the beginning of the line. To respond to a particular message, a user types in the number of the message first, and then the response message (Figure 1). After the user hits the  X  X end X  button, the The message-ordering feature also helps bring back previous discussion points with ease in the case that current discussion is a continuation of a previous discussion. As the scenario presented in both Figures shows, by listing the previous message at the end of the current message in this case, Lucy makes it easier for John, Mike, and Jane to recall the conversation they had in the last discussion. Note that the message of  X (the meeting finished ... about the construction site) X  is not a real chat message.  X  Direct response to the particular user In addition to displaying the previous message that the current message corresponds to, the username of the user who posted the previous message is displayed as well to help direct the response to a particular user in the group. In the f ace-to-face situation that a group of people chat together, when a person A refers to something another person B said, A usually uses visual cues to let B acknowledge that she/he is responding to her/him, such as making eye contact, gesturing, or turning head towards B. In a virtual chat environment, there is lack of such visual cues in the communication space. Providing the name of the user in the response message helps direct the response to that particular user.  X  Help manage parallel chat sessions The message-ordering feature helps users engage in the communication context when managing multiple chat sessions in parallel by providing the previous message when posting the corresponding message.  X  Help understand the chat archive The traditional chat log only shows the temporal order of the messages. By using the message ordering feature, the logical relationship between the two messages is shown in the chat log, thus helping people, especially outsiders, understand the conversation better. The major drawback of the message-ordering feature is its input technique that requires a user to specify the number of the message to reply to. In face-to-face conversation, we don X  X  c ount the number of messages and refer to the number of the message when we want to respond to someone. Future work is needed to research for a better technique to refer to the previous message. There are cases where the current message refers to some topic discussed before, not necessarily one specific message. Therefore, the current message-ordering feature does not help much. Future work is needed for situations of responding to a previous topic in general that requires greater prior knowledge. [1] Donath, J. A Semantic approach to visualizing online [2] Smith, M., J. Cadiz and B. Burkhalter (2000). Conversation 
