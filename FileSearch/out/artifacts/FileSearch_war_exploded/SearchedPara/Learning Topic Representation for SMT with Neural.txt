 Making translation decisions is a difficult task in many Statistical Machine Translation (SMT) sys-tems. Current translation modeling approaches usually use context dependent information to dis-ambiguate translation candidates. For exam-ple, translation sense disambiguation approaches (Carpuat and Wu, 2005; Carpuat and Wu, 2007) are proposed for phrase-based SMT sys-tems. Meanwhile, for hierarchical phrase-based or syntax-based SMT systems, there is also much work involving rich contexts to guide rule selec-tion (He et al., 2008; Liu et al., 2008; Marton and Resnik, 2008; Xiong et al., 2009). Although these methods are effective and proven successful in many SMT systems, they only leverage within-sentence contexts which are insufficient in explor-ing broader information. For example, the word driver often means  X  X he operator of a motor ve-hicle X  in common texts. But in the sentence  X  X i-nally, we write the user response to the buffer, i.e., pass it to our driver X , we understand that driver means  X  X omputer program X . In this case, people understand the meaning because of the IT topical context which goes beyond sentence-level analy-sis and requires more relevant knowledge. There-fore, it is important to leverage topic information to learn smarter translation models and achieve better translation performance.

Topic modeling is a useful mechanism for dis-covering and characterizing various semantic con-cepts embedded in a collection of documents. At-tempts on topic-based translation modeling in-clude topic-specific lexicon translation models (Zhao and Xing, 2006; Zhao and Xing, 2007), topic similarity models for synchronous rules (Xiao et al., 2012), and document-level translation with topic coherence (Xiong and Zhang, 2013). In addition, topic-based approaches have been used in domain adaptation for SMT (Tam et al., 2007; Su et al., 2012), where they view different topics as different domains. One typical property of these approaches in common is that they only utilize parallel data where document boundaries are ex-plicitly given. In this way, the topic of a sentence can be inferred with document-level information using off-the-shelf topic modeling toolkits such as Latent Dirichlet Allocation (LDA) (Blei et al., 2003) or Hidden Topic Markov Model (HTMM) (Gruber et al., 2007). Most of them also assume that the input must be in document level. However, this situation does not always happen since there is considerable amount of parallel data which does not have document boundaries. In addition, con-temporary SMT systems often works on sentence level rather than document level due to the effi-ciency. Although we can easily apply LDA at the sentence level, it is quite difficult to infer the topic accurately with only a few words in the sentence. This makes previous approaches inefficient when applied them in real-world commercial SMT sys-tems. Therefore, we need to devise a systematical approach to enriching the sentence and inferring its topic more accurately.

In this paper, we propose a novel approach to learning topic representations for sentences. Since the information within the sentence is insufficient for topic modeling, we first enrich sentence con-texts via Information Retrieval (IR) methods using content words in the sentence as queries, so that topic-related monolingual documents can be col-lected. These topic-related documents are utilized to learn a specific topic representation for each sentence using a neural network based approach. Neural network is an effective technique for learn-ing different levels of data representations. The levels inferred from neural network correspond to distinct levels of concepts, where high-level rep-resentations are obtained from low-level bag-of-words input. It is able to detect correlations among any subset of input features through non-linear transformations, which demonstrates the superior-ity of eliminating the effect of noisy words which are irrelevant to the topic. Our problem fits well into the neural network framework and we expect that it can further improve inferring the topic rep-resentations for sentences.

To incorporate topic representations as trans-lation knowledge into SMT, our neural network based approach directly optimizes similarities be-tween the source language and target language in a compact topic space. This underlying topic space is learned from sentence-level parallel data in or-der to share topic information across the source and target languages as much as possible. Addi-tionally, our model can be discriminatively trained with a large number of training instances, without expensive sampling methods such as in LDA or HTMM, thus it is more practicable and scalable. Finally, we associate the learned representation to each bilingual translation rule. Topic-related rules are selected according to distributional similarity with the source text, which helps hypotheses gen-eration in SMT decoding. We integrate topic simi-larity features in the log-linear model and evaluate the performance on the NIST Chinese-to-English translation task. Experimental results demonstrate that our model significantly improves translation accuracy over a state-of-the-art baseline. Deep learning is an active topic in recent years which has triumphed in many machine learning research areas. This technique began raising pub-lic awareness in the mid-2000s after researchers showed how a multi-layer feed-forward neural network can be effectively trained. The train-ing procedure often involves two phases: a layer-wise unsupervised pre-training phase and a su-pervised fine-tuning phase. For pre-training, Re-stricted Boltzmann Machine (RBM) (Hinton et al., 2006), auto-encoding (Bengio et al., 2006) and sparse coding (Lee et al., 2006) are most fre-quently used. Unsupervised pre-training trains the network one layer at a time and helps guide the pa-rameters of the layer towards better regions in pa-rameter space (Bengio, 2009). Followed by fine-tuning in this parameter region, deep learning is able to achieve state-of-the-art performance in var-ious research areas, including breakthrough results on the ImageNet dataset for objective recognition (Krizhevsky et al., 2012), significant error reduc-tion in speech recognition (Dahl et al., 2012), etc.
Deep learning has also been successfully ap-plied in a variety of NLP tasks such as part-of-speech tagging, chunking, named entity recog-nition, semantic role labeling (Collobert et al., 2011), parsing (Socher et al., 2011a), sentiment analysis (Socher et al., 2011b), etc. Most NLP research converts a high-dimensional and sparse binary representation into a low-dimensional and real-valued representation. This low-dimensional representation is usually learned from huge amount of monolingual texts in the pre-training phase, and then fine-tuned towards task-specific criterion. Inspired by previous successful re-search, we first learn sentence representations us-ing topic-related monolingual texts in the pre-training phase, and then optimize the bilingual similarity by leveraging sentence-level parallel data in the fine-tuning phase. In this section, we explain our neural network based topic similarity model in detail, as well as how to incorporate the topic similarity features into SMT decoding procedure. Figure 1 sketches the high-level overview which illustrates how to Figure 1: Overview of neural network based topic similarity model. learn topic representations using sentence-level parallel data. Given a parallel sentence pair  X  f,e  X  , the first step is to treat f and e as queries, and use IR methods to retrieve relevant documents to enrich contextual information for them. Specifi-cally, the ranking model we used is a Vector Space Model (VSM), where the query and document are converted into tf-idf weighted vectors. The most relevant N documents d f and d e are retrieved and converted to a high-dimensional, bag-of-words in-put f and e for the representation learning 1 .
There are two phases in our neural network training process: pre-training and fine-tuning. In the pre-training phase (Section 3.1), we build two neural networks with the same structure but differ-ent parameters to learn a low-dimensional repre-sentation for sentences in two different languages. Then, in the fine-tuning phase (Section 3.2), our model directly optimizes the similarity of two low-dimensional representations, so that it highly cor-relates to SMT decoding. Finally, the learned rep-resentation is used to calculate similarities which are integrated as features in SMT decoding proce-dure (Section 3.3). 3.1 Pre-training using denoising In the pre-training phase, we leverage neural network structures to transform high-dimensional sparse vectors to low-dimensional dense vectors. The topic similarity is calculated on top of the learned dense vectors. This dense representation should preserve the information from the bag-of-words input, meanwhile alleviate data sparse prob-lem. Therefore, we use a specially designed mech-anism called auto-encoder to solve this problem. Auto-encoder (Bengio et al., 2006) is one of the basic building blocks of deep learning. Assum-ing that the input is a n -of-V binary vector x rep-resenting the bag-of-words ( V is the vocabulary size), an auto-encoder consists of an encoding pro-cess g ( x ) and a decoding process h ( g ( x )) . The objective of the auto-encoder is to minimize the reconstruction error L ( h ( g ( x )) , x ) . Our goal is to learn a low-dimensional vector which can preserve information from the original n -of-V vector.
One problem with auto-encoder is that it treats all words in the same way, making no distinguish-ment between function words and content words. The representation learned by auto-encoders tends to be influenced by the function words, thereby it is not robust. To alleviate this problem, Vincent et al. (2008) proposed the Denoising Auto-Encoder (DAE), which aims to reconstruct a clean,  X  X e-paired X  input from a corrupted, partially destroyed vector. This is done by corrupting the initial in-put x to get a partially destroyed version  X  x . DAE is capable of capturing the global structure of the input while ignoring the noise. In our task, for each sentence, we treat the retrieved N relevant documents as a single large document and convert it to a bag-of-words vector x in Figure 2. With DAE, the input x is manually corrupted by apply-ing masking noise (randomly mask 1 to 0) and get-ting  X  x . Denoising training is considered as  X  X illing in the blanks X  (Vincent et al., 2010), which means the masking components can be recovered from the non-corrupted components. For example, in IT related texts, if the word driver is masked, it should be predicted through hidden units in neural networks by active signals such as  X  X uffer X ,  X  X ser response X , etc.

In our case, the encoding process transforms the corrupted input  X  x into g (  X  x ) with two layers: a linear layer connected with a non-linear layer. Assuming that the dimension of the g (  X  x ) is L , the linear layer forms a L  X  V matrix W which projects the n -of-V vector to a L -dimensional hid-den layer. After the bag-of-words input has been transformed, they are fed into a subsequent layer to model the highly non-linear relations among words: where z is the output of the non-linear layer, b is a Figure 2: Denoising auto-encoder with a bag-of-words input.
 L -length bias vector. f (  X  ) is a non-linear function, where common choices include sigmoid function, hyperbolic function,  X  X ard X  hyperbolic function, rectifier function, etc. In this work, we use the rectifier function as our non-linear function due to its efficiency and better performance (Glorot et al., 2011):
The decoding process consists of a linear layer and a non-linear layer with similar network struc-tures, but different parameters. It transforms the L -dimensional vector g (  X  x ) to a V -dimensional vector h ( g (  X  x )) . To minimize reconstruction error with respect to  X  x , we define the loss function as the L2-norm of the difference between the uncor-rupted input and reconstructed input:
Multi-layer neural networks are trained with the standard back-propagation algorithm (Rumelhart et al., 1988). The gradient of the loss function is calculated and back-propagated to the previous layer to update its parameters. Training neural net-works involves many factors such as the learning rate and the length of hidden layers. We will dis-cuss the optimization of these parameters in Sec-tion 4. 3.2 Fine-tuning with parallel data In the fine-tuning phase, we stack another layer on top of the two low-dimensional vectors to maxi-mize the similarity between source and target lan-guages. The similarity scores are integrated into the standard log-linear model for making transla-tion decisions. Since the vectors from DAE are trained using information from monolingual train-ing data independently, these vectors may be in-adequate to measure bilingual topic similarity due to their different topic spaces. Therefore, in this stage, parallel sentence pairs are used to help con-necting the vectors from different languages be-cause they express the same topic. In fact, the ob-jective of fine-tuning is to discover a latent topic space which is shared by both languages as much as possible. This shared topic space is particularly useful when the SMT decoder tries to match the source texts and translation candidates in the tar-get language.

Given a parallel sentence pair  X  f,e  X  , the DAE learns representations for f and e respectively, as z f = g ( f ) and z e = g ( e ) in Figure 1. We then take two vectors as the input to calculate their similar-ity. Consequently, the whole neural network can be fine-tuned towards the supervised criteria with the help of parallel data. The similarity score of the representation pair  X  z f , z e  X  is defined as the co-sine similarity of the two vectors:
Since a parallel sentence pair should have the same topic, our goal is to maximize the similar-ity score between the source sentence and target sentence. Inspired by the contrastive estimation method (Smith and Eisner, 2005), for each paral-lel sentence pair  X  f,e  X  as a positive instance, we select another sentence pair  X  f 0 ,e 0  X  from the train-ing data and treat  X  f,e 0  X  as a negative instance. To make the similarity of the positive instance larger than the negative instance by some margin  X  , we utilize the following pairwise ranking loss:
L ( f,e ) = max { 0 , X   X  sim ( f,e ) + sim ( f,e 0 ) } where  X  = 1 this criterion is, the smaller sim ( f,f 0 ) is, the more we should penalize negative instances.

To effectively train the model in this task, neg-ative instances must be selected carefully. Since different sentences may have very similar topic distributions, we select negative instances that are dissimilar with the positive instances based on the following criteria: 1. For each positive instance  X  f,e  X  , we select e 0 2. If we cannot find such e 0 , remove  X  f,e  X  from
The model minimizes the pairwise ranking loss across all training instances:
We used standard back-propagation algorithm to further fine-tune the neural network parameters W and b in Equation (1). The learned neural net-works are used to obtain sentence topic representa-tions, which will be further leveraged to infer topic representations of bilingual translation rules. 3.3 Integration into SMT decoding We incorporate the learned topic similarity scores into the standard log-linear framework for SMT. When a synchronous rule  X   X , X   X  is extracted from a sentence pair  X  f,e  X  , a triple instance I = (  X   X , X   X  ,  X  f,e  X  ,c ) is collected for inferring the topic representation of  X   X , X   X  , where c is the count of rule occurrence. Following (Chiang, 2007), we give a count of one for each phrase pair occurrence and a fractional count for each hierarchical phrase pair. The topic representation of  X   X , X   X  is then cal-culated as the weighted average: where T denotes all instances for the rule  X   X , X   X  , z  X  and z  X  are the source-side and target-side topic vectors respectively.

By measuring the similarity between the source texts and bilingual translation rules, the SMT de-coder is able to encourage topic relevant transla-tion candidates and penalize topic irrelevant candi-dates. Therefore, it helps to train a smarter transla-tion model with the embedded topic information. Given a source sentence s to be translated, we de-fine the similarity as follows: where z s is the topic representation of s . The similarity calculated against z  X  or z  X  denotes the source-to-source or the source-to-target similarity.
We also consider the topic sensitivity estimation since general rules have flatter distributions while topic-specific rules have sharper distributions. A standard entropy metric is used to measure the sen-sitivity of the source-side of  X   X , X   X  as: where z  X i is a component in the vector z  X  . The target-side sensitivity Sen (  X  ) can be calculated in a similar way. The larger the sensitivity is, the more topic-specific the rule manifests.

In addition to traditional SMT features, we add new topic-related features into the standard log-linear framework. For the SMT system, the best translation candidate  X  e is given by: where the translation probability is given by: P ( e | f )  X  where  X  j ( f,e ) is the standard feature function and w j is the corresponding feature weight.  X  k ( f,e ) is the topic-related feature function and w k is the feature weight. The detailed feature description is as follows:
Standard features : Translation model, includ-ing translation probabilities and lexical weights for both directions (4 features), 5-gram language model (1 feature), word count (1 feature), phrase count (1 feature), NULL penalty (1 feature), num-ber of hierarchical rules used (1 feature).
Topic-related features : rule similarity scores (2 features), rule sensitivity scores (2 features). 4.1 Setup We evaluate the performance of our neural net-work based topic similarity model on a Chinese-to-English machine translation task. In neural net-work training, a large number of monolingual doc-uments are collected in both source and target lan-guages. The documents are mainly from two do-mains: news and weblog. We use Chinese and English Gigaword corpus (Version 5) which are mainly from news domain. In addition, we also collect weblog documents with a variety of top-ics from the web. The total data statistics are presented in Table 1. These documents are built which can be efficiently retrieved by the paral-lel sentence pairs. The most relevant N docu-ments are collected, where we experiment with N = { 1 , 5 , 10 , 20 , 50 } .
 Table 1: Statistics of monolingual data, in num-bers of documents and words (main content).  X  X  X  refers to million and  X  X  X  refers to billion.
We implement a distributed framework to speed up the training process of neural networks. The network is learned with mini-batch asynchronous gradient descent with the adaptive learning rate procedure called AdaGrad (Duchi et al., 2011). We use 32 model replicas in each iteration during the training. The model parameters are averaged after each iteration and sent to each replica for the next iteration. The vocabulary size for the input layer is 100,000, and we choose different lengths for the hidden layer as L = { 100 , 300 , 600 , 1000 } in the experiments. In the pre-training phase, all parallel data is fed into two neural networks re-spectively for DAE training, where network pa-rameters W and b are randomly initialized. In the fine-tuning phase, for each parallel sentence pair, we randomly select other ten sentence pairs which satisfy the criterion as negative instances. These training instances are leveraged to optimize the similarity of two vectors.

In SMT training, an in-house hierarchical phrase-based SMT decoder is implemented for our experiments. The CKY decoding algorithm is used and cube pruning is performed with the same default parameter settings as in Chiang (2007). total, the datasets contain nearly 1.1 million sen-tence pairs. Translation models are trained over the parallel data that is automatically word-aligned using GIZA++ in both directions, and the diag-grow-final heuristic is used to refine symmetric word alignment. An in-house language modeling toolkit is used to train the 5-gram language model with modified Kneser-Ney smoothing (Kneser and Ney, 1995). The English monolingual data used for language modeling is the same as in Table 1. The NIST 2003 dataset is the development data. The testing data consists of NIST 2004, 2005, 2006 and 2008 datasets. The evaluation metric for the overall translation quality is case-insensitive BLEU4 (Papineni et al., 2002). The reported BLEU scores are averaged over 5 times of running MERT (Och, 2003). A statistical sig-nificance test is performed using the bootstrap re-sampling method (Koehn, 2004). 4.2 Baseline The baseline is a re-implementation of the Hiero system (Chiang, 2007). The phrase pairs that ap-pear only once in the parallel data are discarded because most of them are noisy. We also use the fix-discount method in Foster et al. (2006) for phrase table smoothing. This implementation makes the system perform much better and the translation model size is much smaller.

We compare our method with the LDA-based approach proposed by Xiao et al. (2012). In (Xiao et al., 2012), the topic of each sentence pair is ex-actly the same as the document it belongs to. Since some of our parallel data does not have document-level information, we rely on the IR method to retrieve the most relevant document and simulate this approach. The PLDA toolkit (Liu et al., 2011) is used to infer topic distributions, which takes 34.5 hours to finish. 4.3 Effect of retrieved documents and length We illustrate the relationship among translation accuracy (BLEU), the number of retrieved docu-ments ( N ) and the length of hidden layers ( L ) on different testing datasets. The results are shown in Figure 3. The best translation accuracy is achieved when N =10 for most settings. This confirms that enriching the source text with topic-related doc-uments is very useful in determining topic repre-sentations, thereby help to guide the synchronous rule selection. However, we find that as N be-comes larger in the experiments, e.g. N =50, the translation accuracy drops drastically. As more documents are retrieved, less relevant information is also used to train the neural networks. Irrel-evant documents bring so many unrelated topic words hence degrade neural network learning per-formance.

Another important factor is the length of hid-den layers L in the network. In deep learning, this parameter is often empirically tuned with human efforts. As shown in Figure 3, the translation accu-racy is better when L is relatively small. Actually, there is no obvious distinction of the performance when L is less than 600. However, when L equals 1,000, the translation accuracy is inferior to other settings. The main reason is that parameters in the neural networks are too many to be effectively trained. As we know when L =1000, there are a total of 100 , 000  X  1 , 000 parameters between the linear and non-linear layers in the network. Lim-ited training data prevents the model from getting close to the global optimum. Therefore, the model is likely to fall in local optima and lead to unac-ceptable representations. 4.4 Effect of topic related features We evaluate the performance of adding new topic-related features to the log-linear model and com-pare the translation accuracy with the method in (Xiao et al., 2012). To make different methods comparable, we set the dimension of topic rep-resentation as 100 for all settings. This takes 10 hours in pre-training phase and 22 hours in fine-tuning phase. Table 2 shows how the accuracy is improved with more features added. The results confirm that topic information is indispensable for SMT since both (Xiao et al., 2012) and our neural network based method significantly outperforms the baseline system. Our method improves 0.86 BLEU points at most and 0.76 BLEU points on average over the baseline. We observe that source-side similarity is more effective than target-side similarity, but their contributions are cumulative. This proves that bilingually induced topic repre-sentation with neural network helps the SMT sys-tem disambiguate translation candidates. Further-more, rule sensitivity features improve SMT per-formance compared with only using similarity fea-tures. Because topic-specific rules usually have a larger sensitivity score, they can beat general rules when they obtain the same similarity score against the input sentence. Finally, when all new fea-tures are integrated, the performance is the best, preforming substantially better than (Xiao et al., 2012) with 0.39 BLEU points on average.

It is worth mentioning that the performance of (Xiao et al., 2012) is similar to the settings with N =1 and L =100 in Figure 3. This is not simply coincidence since we can interpret their approach as a special case in our neural net-work method: when a parallel sentence pair has  X  X verage X  setting is the averaged result of four datasets. document-level information, that document will be retrieved for training; otherwise, the most rel-evant document will be retrieved from the mono-lingual data. Therefore, our method can be viewed as a more general framework than previous LDA-based approaches. 4.5 Discussion In this section, we give a case study to explain why our method works. An example of transla-tion rule disambiguation for a sentence from the NIST 2005 dataset is shown in Figure 4. We find that the topic of this sentence is about  X  X escue af-ter a natural disaster X . Under this topic, the Chi-nese rule  X   X   X  X X  should be translated to  X  X e-liver X X  or  X  X istribute X X . However, the baseline system prefers  X  X end X X  rather than those two can-didates. Although the translation probability of  X  X end X X  is much higher, it is inappropriate in this context since it is usually used in IT texts. For example,  X   X   X  X  X   X  , send emails  X  ,  X   X   X   X   X  , send messages  X  and  X   X   X   X   X  , send data  X  . In contrast, with our neural network based approach, the learned topic distributions of  X  X eliver X X  or  X  X istribute X X  are more similar with the input sen-tence than  X  X end X X , which is shown in Figure 4. The similarity scores indicate that  X  X eliver X X  and  X  X istribute X X  are more appropriate to translate the sentence. Therefore, adding topic-related features is able to keep the topic consistency and substan-tially improve the translation accuracy. Topic modeling was first leveraged to improve SMT performance in (Zhao and Xing, 2006; Zhao and Xing, 2007). They proposed a bilingual topical admixture approach for word alignment and assumed that each word-pair follows a topic-specific model. They reported extensive empir-ical analysis and improved word alignment ac-curacy as well as translation quality. Follow-ing this work, (Xiao et al., 2012) extended topic-specific lexicon translation models to hierarchical phrase-based translation models, where the topic information of synchronous rules was directly in-ferred with the help of document-level informa-tion. Experiments show that their approach not only achieved better translation performance but also provided a faster decoding speed compared with previous lexicon-based LDA methods.

Another direction of approaches leveraged topic modeling techniques for domain adaptation. Tam et al. (2007) used bilingual LSA to learn latent topic distributions across different languages and enforce one-to-one topic correspondence during model training. They incorporated the bilingual topic information into language model adaptation and lexicon translation model adaptation, achiev-ing significant improvements in the large-scale evaluation. (Su et al., 2012) investigated the rela-tionship between out-of-domain bilingual data and in-domain monolingual data via topic mapping using HTMM methods. They estimated phrase-topic distributions in translation model adaptation and generated better translation quality. Recently, Chen et al. (2013) proposed using vector space model for adaptation where genre resemblance is leveraged to improve translation accuracy. We also investigated multi-domain adaptation where explicit topic information is used to train domain specific models (Cui et al., 2013).

Generally, most previous research has leveraged conventional topic modeling techniques such as LDA or HTMM. In our work, a novel neural net-work based approach is proposed to infer topic representations for parallel data. The advantage of
The acknowledgments should go immediately be-fore the references. Do not number the acknowl-edgments section. Do not include this section when submitting your paper for review.
 Yoshua Bengio, Pascal Lamblin, Dan Popovici, and Hugo Larochelle. 2006. Greedy layer-wise train-ing of deep networks. In B. Sch  X  olkopf, J. Platt, and T. Hoffman, editors, Advances in Neural Informa-tion Processing Systems 19 , pages 153 X 160. MIT Press, Cambridge, MA.

Yoshua Bengio. 2009. Learning deep architectures for ai. Found. Trends Mach. Learn. , 2(1):1 X 127, Jan-uary.

David M. Blei, Andrew Y. Ng, and Michael I. Jordan. 2003. Latent dirichlet allocation. J. Mach. Learn. Res. , 3:993 X 1022, March.

Marine Carpuat and Dekai Wu. 2007. Context-dependent phrasal translation lexicons for statistical machine translation. Proceedings of Machine Trans-lation Summit XI , pages 73 X 80.

David Chiang. 2007. Hierarchical phrase-based trans-lation. Computational Linguistics , 33(2):201 X 228. Ronan Collobert, Jason Weston, L  X  eon Bottou, Michael Karlen, Koray Kavukcuoglu, and Pavel Kuksa. 2011. Natural language processing (almost) from scratch. J. Mach. Learn. Res. , 12:2493 X 2537, November.
 G. E. Dahl, Dong Yu, Li Deng, and A. Acero. 2012. Context-dependent pre-trained deep neural networks for large-vocabulary speech recognition. Trans. Au-dio, Speech and Lang. Proc. , 20(1):30 X 42, January. John Duchi, Elad Hazan, and Yoram Singer. 2011. Adaptive subgradient methods for online learning and stochastic optimization. J. Mach. Learn. Res. , 12:2121 X 2159, July.

George Foster, Roland Kuhn, and Howard Johnson. 2006. Phrasetable smoothing for statistical machine translation. In Proceedings of the 2006 Conference on Empirical Methods in Natural Language Pro-cessing , pages 53 X 61, Sydney, Australia, July. As-sociation for Computational Linguistics.
 Amit Gruber, Michal Rosen-zvi, and Yair Weiss. 2007.
Zhongjun He, Qun Liu, and Shouxun Lin. 2008. Im-Geoffrey E. Hinton, Simon Osindero, and Yee-Whye
Reinhard Kneser and Hermann Ney. 1995. Im-
Philipp Koehn. 2004. Statistical significance tests for
Alex Krizhevsky, Ilya Sutskever, and Geoff Hinton.
Honglak Lee, Alexis Battle, Rajat Raina, and An-
Qun Liu, Zhongjun He, Yang Liu, and Shouxun Lin. Zhiyuan Liu, Yuzhou Zhang, Edward Y. Chang, and our method is that it is applicable to both sentence-level and document-level SMT, since we do not place any restrictions on the input. In addition, our method directly maximizes the similarity between parallel sentence pairs, which is ideal for SMT de-coding. Compared to document-level topic mod-eling which uses the topic of a document for all sentences within the document (Xiao et al., 2012), our contributions are:  X  We proposed a more general approach to  X  We used neural networks to learn topic repre- X  We directly optimized bilingual topic simi-In this paper, we propose a neural network based approach to learning bilingual topic representa-tion for SMT. We enrich contexts of parallel sen-tence pairs with topic related monolingual data and obtain a set of documents to represent sen-tences. These documents are converted to a bag-of-words input and fed into neural networks. The learned low-dimensional vector is used to obtain the topic representations of synchronous rules. In SMT decoding, appropriate rules are selected to best match source texts according to their similar-ity in the topic space. Experimental results show that our approach is promising for SMT systems to learn a better translation model. It is a significant improvement over the state-of-the-art Hiero sys-tem, as well as a conventional LDA-based method.
In the future research, we will extend our neural network methods to address document-level trans-lation, where topic transition between sentences is a crucial problem to be solved. Since the transla-tion of the current sentence is usually influenced by the topic of previous sentences, we plan to leverage recurrent neural networks to model this phenomenon, where the history translation infor-mation is naturally combined in the model.
 We are grateful to the anonymous reviewers for their insightful comments. We also thank Fei Huang (BBN), Nan Yang, Yajuan Duan, Hong Sun and Duyu Tang for the helpful discussions. This work is supported by the National Natural Science Foundation of China (Granted No. 61272384)
