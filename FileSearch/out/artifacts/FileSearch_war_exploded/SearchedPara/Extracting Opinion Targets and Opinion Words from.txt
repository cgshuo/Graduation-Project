 In opinion mining, extracting opinion targets and opinion words are two fundamental subtasks. Opinion targets are objects about which users X  opinions are expressed, and opinion words are words which indicate opinions X  polarities. Ex-tracting them can provide essential information for obtaining fine-grained analysis on customers X  opinions. Thus, it has attracted a lot of attentions (Hu and Liu, 2004b; Liu et al., 2012; Moghaddam and Ester, 2011; Mukherjee and Liu, 2012).

To this end, previous work usually employed a collective extraction strategy (Qiu et al., 2009; Hu and Liu, 2004b; Liu et al., 2013b). Their intuition is: opinion words usually co-occur with opinion targets in sentences, and there are strong modifi-cation relationship between them (called opinion relation in (Liu et al., 2012)). If a word is an opinion word, other words with which that word having opinion relations will have highly proba-bility to be opinion targets, and vice versa. In this way, extraction is alternatively performed and mu-tual reinforced between opinion targets and opin-ion words. Although this strategy has been widely employed by previous approaches, it still has sev-eral limitations. 1) Only considering opinion relations is in-sufficient . Previous methods mainly focused on employing opinion relations among words for opinion target/word co-extraction. They have in-vestigated a series of techniques to enhance opin-ion relations identification performance, such as nearest neighbor rules (Liu et al., 2005), syntactic patterns (Zhang et al., 2010; Popescu and Etzioni, 2005), word alignment models (Liu et al., 2012; Liu et al., 2013b; Liu et al., 2013a), etc. How-ever, we are curious that whether merely employ-ing opinion relations among words is enough for opinion target/word extraction? We note that there are additional types of relations among words. For example,  X  LCD  X  and  X  LED  X  both denote the same aspect  X  screen  X  in TV set domain, and they are topical related. We call such relations between homogeneous words as semantic relations. If we have known  X  LCD  X  to be an opinion target,  X  LED  X  is naturally to be an opinion target. Intuitively, besides opinion relations, semantic relations may provide additional rich clues for indicating opin-ion targets/words. Which kind of relations is more effective for opinion targets/words extraction? Is it beneficial to consider these two types of relations together for the extraction? To our best knowl-edge, these problems have seldom been studied before (see Section 2). 2) Ignoring word preference . When employ-ing opinion relations to perform mutual reinforc-ing extraction between opinion targets and opin-ion words, previous methods depended on opin-ion associations among words, but seldom consid-ered word preference . Word preference denotes a word X  X  preferred collocations. Intuitively, the confidence of a candidate being an opinion tar-get (opinion word) should mostly be determined by its word preferences rather than all words hav-ing opinion relations with it. For example  X  This camera X  X  price is expensive for me.  X   X  It X  X  price is good.  X   X  Canon 40D has a good price.  X  In these three sentences,  X  price  X  is modified by  X  good  X  more times than  X  expensive  X . In tradi-tional extraction strategy, opinion associations are usually computed based on the co-occurrence fre-quency. Thus,  X  good  X  has more strong opinion association with  X  price  X  than  X  expensive  X , and it would have more contributions on determining  X  price  X  to be an opinion target or not. It X  X  un-reasonable.  X  Expensive  X  actually has more re-latedness with  X  price  X  than  X  good  X , and  X  expen-sive  X  is likely to be a word preference for  X  price  X . The confidence of  X  price  X  being an opinion target should be influenced by  X  expensive  X  in greater ex-tent than  X  good  X . In this way, we argue that the extraction will be more precise. Figure 1: Heterogeneous Graph: OC means opin-ion word candidates. TC means opinion target candidates. Solid curves and dotted lines respec-tively mean semantic relations and opinion rela-tions between two candidates.

Thus, to resolve these two problems, we present a novel approach with graph co-ranking. The col-lective extraction of opinion targets/words is per-formed in a co-ranking process. First, we oper-ate over a heterogeneous graph to model seman-tic relations and opinion relations into a unified model. Specifically, our heterogeneous graph is composed of three subgraphs which model differ-ent relation types and candidates, as shown in Fig-ure 1. The first subgraph G tt represents semantic relations among opinion target candidates, and the second subgraph G oo models semantic relations among opinion word candidates. The third part is a bipartite subgraph G to , which models opinion relations among different candidate types and con-nects the above two subgraphs together. Then we perform a random walk algorithm on G tt , G oo and dence, and the entries with higher confidence than a threshold are correspondingly extracted as opin-ion targets/words. The results could reflect which type of relation is more useful for the extraction.
Second, a co-ranking algorithm, which incor-and G to into a unified process, is proposed to perform candidate confidence estimation. Differ-ent relations may cooperatively affect candidate confidence estimation and generate more global ranking results. Moreover, we discover each can-didate X  X  preferences through topics. Such word preference will be different for different candi-dates. We add word preference information into our algorithm and make our co-ranking algorithm be personalized. A candidate X  X  confidence would mainly absorb the contributions from its word preferences rather than its all neighbors with opin-ion relations, which may be beneficial for improv-ing extraction precision.

We perform experiments on real-world datasets from different languages and different domains. Results show that our approach effectively im-proves extraction performance compared to the state-of-the-art approaches. There are many significant research efforts on opinion targets/words extraction (sentence level and corpus level). In sentence level extraction, previous methods (Wu et al., 2009; Ma and Wan, 2010; Li et al., 2010; Yang and Cardie, 2013) mainly aimed to identify all opinion target/word mentions in sentences. They regarded it as a se-quence labeling task, where several classical mod-els were used, such as CRFs (Li et al., 2010) and SVM (Wu et al., 2009).

This paper belongs to corpus level extraction, and aims to generate a sentiment lexicon and a target list rather than to identify mentions in sen-tences. Most of previous corpus-level methods adopted a co-extraction framework, where opin-ion targets and opinion words reinforce each other according to their opinion relations. Thus, how to improve opinion relations identification perfor-mance was their main focus. (Hu and Liu, 2004a) exploited nearest neighbor rules to mine opinion relations among words. (Popescu and Etzioni, 2005) and (Qiu et al., 2011) designed syntactic patterns to perform this task. (Zhang et al., 2010) promoted Qiu X  X  method. They adopted some spe-cial designed patterns to increase recall. (Liu et al., 2012; Liu et al., 2013a; Liu et al., 2013b) em-ployed word alignment model to capture opinion relations rather than syntactic parsing. The exper-imental results showed that these alignment-based methods are more effective than syntax-based ap-proaches for online informal texts. However, all aforementioned methods only employed opinion relations for the extraction, but ignore consider-ing semantic relations among homogeneous can-didates. Moreover, they all ignored word prefer-ence in the extraction process.

In terms of considering semantic relations among words, our method is related with sev-eral approaches based on topic model (Zhao et al., 2010; Moghaddam and Ester, 2011; Moghad-dam and Ester, 2012a; Moghaddam and Ester, 2012b; Mukherjee and Liu, 2012). The main goals of these methods weren X  X  to extract opin-ion targets/words, but to categorize all given as-pect terms and sentiment words. Although these models could be used for our task according to the associations between candidates and topics, solely employing semantic relations is still one-sided and insufficient to obtain expected performance.
Furthermore, there is little work which consid-ered these two types of relations globally (Su et al., 2008; Hai et al., 2012; Bross and Ehrig, 2013). They usually captured different relations using co-occurrence information. That was too coarse to obtain expected results (Liu et al., 2012). In ad-dition, (Hai et al., 2012) extracted opinion tar-gets/words in a bootstrapping process, which had an error propagation problem. In contrast, we per-form extraction with a global graph co-ranking process, where error propagation can be effec-tively alleviated. (Su et al., 2008) used heteroge-neous relations to find implicit sentiment associ-ations among words. Their aim was only to per-form aspect terms categorization but not to extract opinion targets/words. They extracted opinion tar-gets/words in advanced through simple phrase de-tection. Thus, the extraction performance is far from expectation. In this section, we propose our method in detail. We formulate opinion targets/words extraction as a co-ranking task. All nouns/noun phrases are re-garded as opinion target candidates, and all ad-jectives/verbs are regarded as opinion word candi-dates, which are widely adopted by pervious meth-ods (Hu and Liu, 2004a; Qiu et al., 2011; Wang and Wang, 2008; Liu et al., 2012). Then each can-didate will be assigned a confidence and ranked, and the candidates with higher confidence than a threshold will be extracted as the results.
Different from traditional methods, besides opinion relations among words, we additionally capture semantic relations among homogeneous candidates. To this end, a heterogeneous undi-rected graph G = ( V,E ) is constructed. V = opinion target candidates v t  X  V t and opinion word candidates v o  X  V o . E denotes the edge set, where e ij  X  E means that there is a relation between two vertices. E tt  X  E represents the se-mantic relations between two opinion target candi-dates. E oo  X  E represents the semantic relations between two opinion word candidates. E to  X  E represents the opinion relations between opinion target candidates and opinion word candidates. Based on different relation types, we used three weights between any two vertices, respectively. Section 3.4 will illustrate how to construct them. 3.1 Only Considering Opinion Relations To estimate the confidence of each candidate, we use a random walk algorithm on our graph to per-form co-ranking. Most previous methods (Hu and Liu, 2004a; Qiu et al., 2011; Wang and Wang, 2008; Liu et al., 2012) only considered opinion relations among words. Their basic assumption is as follows.
 In this way, candidates X  confidences ( v t or v o ) are collectively determined by each other iteratively. It equals to making random walk on subgraph G to = ( V,E to ) of G . Thus we have where C t and C o respectively represent confi-dences of opinion targets and opinion words. i,j  X  M to means the association weight between the ith opinion target and the jth opinion word ac-cording to their opinion relations.

It X  X  worthy noting that I t and I o respectively de-note prior confidences of opinion target candidates and opinion word candidates. We argue that opin-ion targets are usually domain-specific, and there are remarkably distribution difference of them on different domains (in-domain D in vs. out-domain D out ). If a candidate is salient in D in but common in D out , it X  X  likely to be an opinion target in D in . Thus, we use a domain relevance measure (DR) (Hai et al., 2013) to compute I t .
 where R ( t,D ) =  X  w t P domain D . w tj = (1 + logTF tj )  X  log N is a TF-IDF-like weight of candidate t in doc-ument j . TF tj is the frequency of the candi-date t in the jth document, and DF t is docu-ment frequency. N means the document num-ber in domain D . R ( t,D ) includes two mea-sures to reflect the salient of a candidate in D . 1) w term is mentioned in a particular document. W j denotes the word number in document j . 2)  X  w t quantifies how significantly a term is mentioned across all documents in D .  X  w t = 1 denotes average weight across all documents for t . s t = standard variance of term t . We use the given reviews as in-domain collection D in and Google n-gram corpus 1 as out-domain collection D out . Finally, each entry in I t is a normalized DR ( t ) score. In contrast, opinion words are usually domain-independent. Users may use same words to express theirs opinions, like  X  X ood X ,  X  X ad X , etc. But there are still some domain-dependent opinion words, like  X  X elicious X  in the restaurant domain,  X  X owerful X  in the car domain. It X  X  difficult to dis-criminate them from other words by using statisti-cal information. So we simply set all entries in I o to be 1.  X   X  [0 , 1] in Eq.1 determines the impact of the prior confidence on results. 3.2 Only Considering Semantic Relations To estimate candidates X  confidences by only con-sidering semantic relations among words, we make two separately random walks on the sub-graphs of G , G tt = ( V,E tt ) and G oo = ( V,E oo ) . The basic assumption is as follows: In this way, the confidence of the candidate is determined only by its homogeneous neighbours. There is no mutual reinforcement between opinion targets and opinion words. Thus we have where  X  has the same role as  X  in Eq.1. 3.3 Considering Semantic Relations and To jointly model semantic relations and opinion relations for opinion targets/words extraction, we couple two random walking algorithms mentioned above together. Here, Assumption 1 and As-sumption 2 are both satisfied. Thus, an opinion target/word candidate X  X  confidence is collectively determined by its neighbours according to differ-ent relation types. Meanwhile, each item may make influence on it X  X  neighbours. It X  X  an iterative reinforcement process. Thus, we have where  X   X  [0 , 1] determines which type of rela-tions dominates candidate confidence estimation.  X  = 0 means that each candidate X  X  confidence is estimated by only considering opinion relations among words, which equals to Eq.1. Otherwise, when  X  = 1 , candidate confidence estimation only considers semantic relations among words, which equals to Eq.3.  X  , I o and I t have the same meaning in Eq.1. Our algorithm will run iteratively until it converges or in a fixed iteration number Iter . In experiments, we set Iter = 200 .

Obtaining Word Preference . The co-ranking algorithm in Eq.4 is based on a standard random walking algorithm, which randomly selects a link according to the association matrix M to , M tt and M oo , or jumps to a random node with prior confi-dence value. However, it generates a global rank-ing over all candidates without taking the node preference (word preference) into account. As mentioned in the first section, each opinion tar-get/word has its preferred collocations, it X  X  reason-able that the confidence of an opinion target (opin-ion word) candidate should be preferentially de-termined by its preferences, rather than all of its neighbors with opinion relations.

To obtain the word preference, we resort to top-ics. We believe that if an opinion word v i o is topical related with a target word v j t , v i o can be regarded as a word preference for v j t , and vice versa. For example,  X  price  X  and  X  expensive  X  are topically related in phone X  X  domain, so they are a word preference for each other.

Specifically, we use a vector P T i = [ P preference of the ith opinion target candidate. P potential opinion target for the kth potential opinion words. To compute P T i Kullback-Leibler divergence to measure the semantic distance between any two candidates on the bridge of topics. Thus, we have
D ( v i ,v j ) = where KL z ( v i || v j ) = p ( z | v i ) log p ( z | v i KL-divergence from candidate v i to v j based on topic z . p ( z | v ) = p ( v | z ) p ( z ) probability of the candidate v to topic z (see Sec-tion 3.4). p ( z ) is the probability that topic z in reviews. p ( v ) is the probability that a candidate occurs in reviews. Then, a logistic function is used to map D ( v i ,v j ) into [0 , 1] .
 Then, we calculate P T i score, i.e. P T i stration, we give some examples in Table 1, where each entry denotes a SA ( v i ,v j ) score between two candidates. We can see that using topics can suc-cessfully capture the preference information for each opinion target/word. Table 1: Examples of Calculated Word Preference
And we use a vector P O j = [ P the preference information of the jth opin-ion word candidate. Similarly, we have P
Incorporating Word Preference into Co-ranking . To consider such word preference in our co-ranking algorithm, we incorporate it into the random walking on G to . Intuitively, prefer-ence vectors will be different for different can-didates. Thus, the co-ranking algorithm would be personalized. It allows that the candidate confidence propagates to other candidates only in its preference cluster. Specifically, we make modification on original transition matrix M to = preference in it. Let  X  M to = (  X  M to 1 ,  X  M to 2 ,..., be the modified transition matrix, which records the associations between opinion target candi-umn vector in M to and  X  M to , respectively. And let Diag ( P T k ) denote a diagonal matrix whose eigenvalue is vector P T k , we have denotes the kth row vector in M T to and  X  M T to , re-spectively. Diag ( P O k ) denote a diagonal matrix whose eigenvalue is vector P O k . Then we have
In this way, each candidate X  X  preference is in-corporated into original associations based on opinion relation M to through Diag ( P O k ) and Diag ( P T k ) . And candidates X  confidences will mainly come from the contributions of its prefer-ences. Thus, C t and C o in Eq.4 become: 3.4 Capturing Semantic and Opinion In this section, we explain how to capture seman-tic relations and opinion relations for constructing transition matrices M tt , M oo and M to .

Capturing Semantic Relations: For captur-ing semantic relations among homogenous candi-dates, we employ topics. We believe that if two candidates share similar topics in the corpus, there is a strong semantic relation between them. Thus, we employ a LDA variation (Mukherjee and Liu, 2012), an extension of (Zhao et al., 2010), to dis-cover topic distribution on words, which sampled all words into two separated observations: opinion targets and opinion words. It X  X  because that we are only interested in topic distribution of opinion tar-gets/words, regardless of other useless words, in-cluding conjunctions, prepositions etc. This model has been proven to be better than the standard LDA model and other LDA variations for opinion mining (Mukherjee and Liu, 2012).

After topic modeling, we obtain the proba-bility of the candidates ( v t and v o ) to topic z , p ( z ) . Then, a symmetric Kullback-Leibler diver-gence as same as Eq.5 is used to calculate the se-mantical associations between any two homoge-nous candidates. Thus, we obtain SA ( v t ,v t ) and SA ( v o ,v o ) , which correspond to the entries in M tt and M oo , respectively.

Capturing Opinion Relations: To capture opinion relations among words and construct the transition matrix M to , we used an alignment-based method proposed in (Liu et al., 2013b). This approach models capturing opinion relations as a monolingual word alignment process. Each opinion target can find its corresponding mod-ifiers in sentences through alignment, in which multiple factors are considered globally, such as co-occurrence information, word position in sen-tence, etc. Moreover, this model adopted a par-tially supervised framework to combine syntac-tic information with alignment results, which has been proven to be more precise than the state-of-the-art approaches for opinion relations identifica-tion (Liu et al., 2013b).

After performing word alignment, we obtain a set of word pairs composed of a noun (noun phrase) and its corresponding modified word. Then, we simply employ Pointwise Mutual Infor-mation (PMI) to calculate the opinion associations among words as the entries in M to . OA ( v t ,v o ) = target candidate and an opinion word candidate, respectively. p ( v t ,v o ) is the co-occurrence prob-ability of v t and v o based on the opinion relation identification results. p ( v t ) and p ( v o ) give the in-dependent occurrence probability of of v t and v o , respectively 4.1 Datasets and Evaluation Metrics Datasets: To evaluate the proposed method, we used three datasets. The first one is Customer Review Datasets (CRD), used in (Hu and Liu, 2004a), which contains reviews about five prod-ucts. The second one is COAE2008 dataset2 2 , which contains Chinese reviews about four prod-ucts. The third one is Large , also used in (Wang et al., 2011; Liu et al., 2012; Liu et al., 2013a), where two domains are selected (Mp3 and Hotel). As mentioned in (Liu et al., 2012), Large con-tains 6,000 sentences for each domain. Opinion targets/words are manually annotated, where three annotators were involved. Two annotators were required to annotate out opinion words/targets in reviews. When conflicts occur, the third annota-tor make final judgement. In total, we respectively obtain 1,112, 1,241 opinion targets and 334, 407 opinion words in Hotel, MP3.

Pre-processing: All sentences are tagged to obtain words X  part-of-speech tags using Stanford the method in (Zhu et al., 2009) before extraction.
Evaluation Metrics: We select precision(P), recall(R) and f-measure(F) as metrics. And a sig-nificant test is performed, i.e., a t-test with a de-fault significant level of 0.05. 4.2 Our Method vs. The State-of-the-art To prove the effectiveness of the proposed method, we select some state-of-the-art methods for com-parison as follows:
Hu extracted opinion targets/words using asso-ciation mining rules (Hu and Liu, 2004a).

DP used syntax-based patterns to capture opin-ion relations in sentences, and then used a boot-strapping process to extract opinion targets/words (Qiu et al., 2011),.
 Zhang is proposed by (Zhang et al., 2010). They also used syntactic patterns to capture opin-ion relations between words. Then a HITS (Klein-berg, 1999) algorithm is employed to extract opin-ion targets.

Liu is proposed by (Liu et al., 2013a), an ex-tension of (Liu et al., 2012). They employed a word alignment model to capture opinion relations among words, and then used a random walking al-gorithm to extract opinion targets.

Hai is proposed by (Hai et al., 2012), which is similar to our method. They employed both of se-mantic relations and opinion relations to extract opinion words/targets in a bootstrapping frame-work. But they captured relations only using co-occurrence statistics. Moreover, word preference was not considered.

SAS is proposed by (Mukherjee and Liu, 2012), an extended lda-based model of (Zhao et al., 2010). The top K items for each aspect are ex-tracted as opinion targets/words. It means that only semantic relations among words are consid-ered in SAS. And we set aspects number to be 9 as same as (Mukherjee and Liu, 2012).

CR : is the proposed method in this paper by us-ing co-ranking, referring to Eq.4. CR doesn X  X  con-sider word preference.

CR WP : is the full implementation of our method, referring to Eq.6.

Hu, DP, Zhang and Liu are the methods which only consider opinion relations among words. SAS is the methods which only consider seman-tic relations among words. Hai, CR and CR WP consider these two types of relations together. The parameter settings of state-of-the-art methods are same as their original paper. In CR and CR WP, we set  X  = 0 . 4 and  X  = 0 . 1 . The experimental results are shown in Table 2, 3, 4 and 5, where the last column presents the average F-measure scores for multiple domains. Since Liu and Zhang aren X  X  designed for opinion words extraction, we don X  X  present their results in Table 4 and 5. From exper-imental results, we can see. 1) Our methods (CR and CR WP) outperform other methods not only on opinion targets extrac-tion but on opinion words extraction in most do-mains. It proves the effectiveness of the proposed method. 2) CR and CR WP have much better perfor-mance than Liu and Zhang, especially on Recall. Liu and Zhang also use a ranking framework like ours, but they only employ opinion relations for extraction. In contrast, besides opinion relations, CR and CR WP further take semantic relations into account. Thus, more opinion targets/words can be extracted. Furthermore, we observe that CR and CR WP outperform SAS. SAS only ex-ploits semantic relations, but ignores opinion re-lations among words. Its extraction is performed separately and neglects the reinforcement between opinion targets and opinion words. Thus, SAS has worse performance than our methods. It demon-strates the usefulness of considering multiple rela-tion types. 3) CR and CR WP both outperform Hai. We believe the reasons are as follows. First, CR and CR WP considers multiple relations in a unified process by using graph co-ranking. In contrast, Hai adopts a bootstrapping framework which per-forms extraction step by step and may have the problem of error propagation. It demonstrates that our graph co-ranking is more suitable for this task than bootstrapping-based strategy. Second, our method captures semantic relations using topic modeling and captures opinion relations through word alignments, which are more precise than Hai which merely uses co-occurrence information to indicate such relations among words. In addition, word preference is not handled in Hai, but pro-cessed in CR WP. The results show the usefulness of word preference for opinion targets/words ex-traction. 4) CR WP outperforms CR, especially on pre-cision. The only difference between them is that CR WP considers word preference when perform-ing graph ranking for candidate confidence esti-mation, but CR does not. Each candidate confi-dence estimation in CR WP gives more weights for this candidate X  X  preferred words than CR. Thus, the precision can be improved. 4.3 Semantic Relation vs. Opinion Relation In this section, we discuss which relation type is more effective for this task. For comparison, we design two baselines, called OnlySA and On-lyOA . OnlyOA only employs opinion relations among words, which equals to Eq.1. OnlySA only employs semantic relations among words, which equals to Eq.3. Moreover, Combine is our method which considers both of opinion relations and se-mantic relations together, referring to Eq.4 with Figure 2: Semantic Relations vs. Opinion Rela-tions  X  = 0 . 5 . Figure 2 presents experimental results. The left graph presents opinion targets extraction results and the right graph presents opinion words extraction results. Because of space limitation, we only shown the results of four domains (MP3, Ho-tel, Laptop and Phone).

From results, we observe that OnlyOA outper-forms OnlySA in all domains. It demonstrates that employing opinion relations are more useful than semantic relations for co-extracting opinion targets/words. And it is necessary to utilize the mutual reinforcement relationship between opin-ion words and opinion targets. Moreover, Com-bine outperforms OnlySA and OnlyOA in all do-mains. It indicates that combining different rela-tions among words together is effective. 4.4 The Effectiveness of Considering Word In this section, we try to prove the necessity of considering word preference in Eq.6. Besides the comparison between CR and CR WP performed in the main experiment in Section 4.2, we fur-ther incorporate word preference in aforemen-tioned OnlyOA , named as OnlyOA WP , which only employs opinion relations among words and equals to Eq.6 with  X  = 0 . Experimental results are shown in Figure 3. Because of space limita-tion, we only show the results of the same domains in section 4.3,
Form results, we observe that CR WP out-performs CR, and OnlyOA WP outperforms On-lyOA in all domains, especially on precision. These observations demonstrate that considering word preference is very important for opinion tar-gets/words extraction. We believe the reason is that exploiting word preference can provide more fine information for opinion target/word candi-dates X  confidence estimation. Thus the perfor-mance can be improved.
 Figure 3: Experimental results when considering word preference 4.5 Parameter Sensitivity In this subsection, we discuss the variation of ex-traction performance when changing  X  and  X  in Eq.6. Due to space limitation, we only show the F-measure of CR WP on four domains. Experi-mental results are shown in Figure 4 and Figure 5. The left graphs in Figure 4 and 5 present the performance variation of CR WP with varying  X  from 0 to 0.9 and fixing  X  = 0 . 1 . The right graphs in Figure 4 and 5 present the performance varia-tion of CR WP with varying  X  from 0 to 0.6 and fixing  X  = 0 . 4 .

In the left graphs in Figure 4 and 5, we observe the best performance is obtained when  X  = 0 . 4 . It indicates that opinion relations and semantic re-lations are both useful for extracting opinion tar-gets/words. The extraction performance is benefi-cial from their combination. In the right graphs in Figure 4 and 5, the best performance is obtained when  X  = 0 . 1 . It indicates prior knowledge is useful for extraction. When  X  increases, perfor-mance, however, decreases. It demonstrates that incorporating more prior knowledge into our al-gorithm would restrain other useful clues on esti-mating candidate confidence, and hurt the perfor-mance. This paper presents a novel method with graph co-ranking to co-extract opinion targets/words. We model extracting opinion targets/words as a co-ranking process, where multiple heterogenous re-lations are modeled in a unified model to make co-operative effects on the extraction. In addition, we especially consider word preference in co-ranking process to perform more precise extraction. Com-pared to the state-of-the-art methods, experimental results prove the effectiveness of our method. This work was sponsored by the National Basic Research Program of China (No. 2014CB340500), the National Natural Sci-ence Foundation of China (No. 61272332 and No. 61202329), the National High Tech-nology Development 863 Program of China (No. 2012AA011102), and CCF-Tencent Open Research Fund.

