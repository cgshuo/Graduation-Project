 Longbing Cao  X  To n y H e Abstract Trading agents are useful for developing and back-testing quality trading stra-tegies to support smart trading actions in the market. However, most of the existing trading agent research oversimplifies trading strategies, and focuses on simulated ones. As a result, there exists a big gap between the deliverables and business needs when the developed strate-gies are deployed into the real life. Therefore, the actionable capability of developed trading agents is often very limited. This paper for the first time introduces effective approaches for optimizing and integrating multiple classes of strategies through trading agent collaboration. An integration and optimization approach is proposed to identify optimal trading strategy in each category, and further integrate optimal strategies crossing classes. Positions associated with these optimal strategies are recommended for trading agents to take actions in the market. Extensive experiments on a large quantity of real-life market data show that trading agents following the recommended strategies have great potential to obtain high benefits while low costs. This verifies that it is promising to develop trading agents toward workable and satisfying business needs.
 Keywords Trading agent  X  Trading strategy  X  Optimization  X  Integration 1 Introduction Agent-based computing has been introduced into trading simulation and development, for instance, trading agent [ 5 , 6 , 22 , 23 ]. Trading agent is a concept developed to design and simulate market mechanisms, auction strategies, and supply chain management etc. For instance,competitionsandsimulations[ 3 , 5 , 23 ]havebeendevelopedintermsoftravelagents, supply chain management agents and market design.

Most of the present trading agent research either focuses only on research problems designed for specific artificial marketplaces and simulated data, or oversimplifies the market environment where trading agents live. This leads to a typical issue that the real market can benefit little from the developed strategies and trading agents. This likely results from the fact that market organizational factors and business preferences have not been sufficiently considered in the existing trading agent research. As a result, this has slowed down and even affected the roles of trading agent techniques in boosting real-life market development. It leads to our concern that is how trading agents can support the development of innovative and workable marketplaces and business decision making as highly expected by business people [ 15 ].

This paper specifically addresses the above issue, namely developing actionable trading agents that can produce optimal trading strategies to be directly used by business users to take decision-making actions in real-life market situations. The principal is as follows. We first define the problem of searching actionable trading strategies for trading agents. Market organizational factors and trader preferences are then discussed in enhancing strategy actionability. Further, we develop evolutionary trading agents to optimize parameters, and trading agent collaboration to integrate strategies for smart trading.

We use stock trading agents to illustrate the development of actionable trading agents and multi-strategy integration through agent collaboration. Extensive experiments have been conducted in developing hundreds of trading strategies in large amounts of multiple market data. It shows that our trading agents are able to lead to trading performance that beats not only naive strategies but also financial market benchmarks.

The remainder is organized as follows. Section 2 defines the problem of searching actio-nable strategies for trading agents. In Sect. 3 , business factors and expectations are discussed namely evolutionary and collaborative trading agents are developed to identify actionable trading strategies in market situations. Section 5 illustrates the use and performance of the above trading agents in stock market data. We conclude this research in Sect. 6 . 2 Problem definition 2.1 Trading strategies for trading agents Intelligent agent technology is very useful and increasingly used for developing, back-testing and evaluating automated trading techniques and program trading strategies in e-market places [ 16 ] without market costs and risks before they are deployed into the business world [ 10 ]. Currently, trading agent is mainly studied under auction market [ 18 , 19 ]and simulated market situations such as Supply Chain Management cases. Very few research works have been based on continuous markets [ 17 ] such as order-driven stock market models and real-life market requirements .

In fact, with the involvement of business lines in agent-based computational finance and economics studies, trading agent has potential to be customized for financial market requi-rements. The idea is to extend and integrate the concepts of trading agents, agent-based financial and economic computation and data mining with trading strategy development in finance to design and discover appropriate trading strategies for trading agents. Classic agent intelligence such as autonomy, adaption, collaboration and computation is also encouraged in aspects such as automated trading and trading agent collaboration for strategy integration. In this way, trading agents can dedicate to the development of financial trading strategies for market use.

A trading strategy indicates when a trading agent can take what trading actions under certain market situation. For instance, the following illustrates a general Moving Average (MA) based trading strategy.
 Example 1 (MA Trading Strategy) An MA trading strategy is based on the calculation of moving average of security prices over a specified period of time. Let n be the length (i.e. I at the time of No. i ( i &lt; n ) price occurrence. An MA at time t (which corresponds to No. n price) is calculated as MA t ( n ) : Asimple MA strategy is to compare the current price P t of security I with its MA value: MA t . Based on the conditions met, a MA strategy generates sell (denoted by  X  1), buy (denoted by 1) or hold (denoted by 0) trading signal at time t .If P t rises above MA t ( n ) ,a buy signal is triggered, the security is then bought and held until the price falls below MA, at which time a sell signal is generated and the security is sold. For any other cases, a hold signal is triggered. The pseudocode of MA strategy for generating trading signal sequence S is represented as follows.
This strategy is usually not workable when it is employed into the real world. To satisfy the real-life needs, market organizational factors , domain knowledge , constraints , trader preference and business expectation are some key factors that must be involved in developing actionable trading strategies for workable trading agents. We will discuss this in the following and Sect. 3 . 2.2 Searching actionable trading strategies As the above discussed, searching actionable trading strategies for trading agents is a process to identify trading patterns that can reflect the  X  X ost appropriate X  combination of purchase timing, position, pricing, sizing and objects to be traded under certain market situations and interest-driving forces [ 15 ]. To this end, trading agents may cooperate with each other to either search the  X  X ptimal X  solutions from a huge amount of searchable strategy space denoted by a trading pattern. In some other cases, they collaborate to synthesize multiple trading strategy fragments favored by individual agents into an integrative strategy satisfying general concerns of each agent as well as global expectation representing trader X  X  interest.
As we will discuss in Sect. 4.1 about data mining driven evolutionary trading agents, data mining can play a critical role in actionable strategy searching and trading pattern identification. Data mining in finance has potential in identifying not only trading signals, but also patterns indicating either iterative or repeatable occurrences. Therefore, developing actionable trading strategies for trading agents [ 8 , 12 ] is an interaction and collaboration process between agents and data mining [ 13 ]. The aim and objective of this process is to develop smart strategies for trading agents to take actions in the market that can satisfy trader X  X  expectation under certain market environment.
 Definition 1 (Trading Strategy) A trading strategy actually represents a set of individual instances  X  , which is a tuple defined as follows.
 s 1 to s m are instantiated trading strategies. Each of them is represented by instantiated appropriate time points when trading signals are triggered; B ={ buy , sell , hold } is the set and V ={ v 1 ,v 2 ,...,v m } are the sets of trading prices and volumes matching with corres-ponding trading times. I ={ i 1 , i 2 ,..., i m } is a set of target instruments traded.
With the consideration of environment complexities and trader X  X  favorite, the optimiza-tion of trading strategies is to search a combination set  X  in the whole candidate set  X  ,in interestingness metrics [ 10 ] in an  X  X ptimal X  or  X  X ub-optimal X  manner. Here  X  X ptimal X  refers to the maximal/minimal (in some cases, smaller is better) values of technical and business inter-estingness metrics under certain market conditions and user preferences. In some situations, it is impossible or too costly to obtain  X  X ptimal X  results. For such cases, a certain level of  X  X ub-optimal X  results are also acceptable. In this case, the sub-set  X  indicates  X  X ppropriate X  parameter combinations of trading strategies that can support trading agents to take actions to their owner X  X  advantage. As a result, in some sense, trading strategy optimization is to extract actionable strategies with multiple attributes towards multi-objective optimization in constrained market environment.
 Definition 2 (Actionable Trading Strategy) An actionable trading strategy set  X  is to achieve the following objectives: while satisfying the following conditions: tech _ int () and bi z _ int () metrics.

The performance of actionable trading strategies should satisfy expected technical interes-thepredicate X  X ptimal X  X stofindcertainparametercombinationassociatedwitheithera X  X axi-mal X  or  X  X inimal X  optimization objective. For instance, benefit is maximized while cost is minimized. Further, the performance needs to be evaluated in terms of the background market microstructure and dynamics. Only in this way the developed trading agents can assist tra-ders in taking right actions at right times with right prices and volumes on right instruments . For instance, an actionable moving average based strategy ,say MA ( x , y ) is a function with appropriate x and y to reach the best of expected business performance in certain market data. As a result, it generates a subset  X  ( MA ) of general moving average strategies  X ( MA ) .
Under different situations, technical interestingness and business expectation need to be instantiated into corresponding forms. For instance, in pair mining of trading strategies [ 7 ], coefficient and sharpe ratio are used for strategy selection. In this paper, trading agent X  X  performance is evaluated toward enhancing benefits while reducing cost and risk of host agents when they execute certain strategies in the market. This involves strategy actionability as discussed in the next section. 3 Enhancing trading agent actionability Trading agent actionability , in another word, the strategy actionability taking by a trading consistent with business expectation and market constraints. In searching actionable trading strategy for trading agents, market organizational factors and trader preferences are two major issues to be concerned. 3.1 Considering market organizational factors In practice, the development of actionable trading strategies must be based on a good unders-tanding of organizational factors in a target market [ 21 ]. Otherwise it is not possible to accurately evaluate the actionable capability of the identified trading strategies as well as trading agents.

Market organization factors relevant to the trading strategy development consist of the following fundamental entities: M ={ I , A , O , T , R , E } .Table 1 briefly explains these entities and their impact on trading strategy actionability. In particular, the entity O = { ( t , b , p ,v) | t  X  T , b  X  B , p  X  P ,v  X  V } is further represented by attributes T , B , P and V , which are attributes of trading strategy set  X  . The elements in M form the constrained market environment of trading strategy optimization. In the strategy and system design of trading strategy optimization, we need to give proper consideration of these factors.
Any particular actionable trading strategy needs to be identified in an instantiated market niche m ( m  X  M ) enclosing the above organization factors. This market niche specifies particular constraints, which are embodied through the elements in  X  and M , on trading strategy definition, representation, parameterization, searching, evaluation and deployment. The consideration of a specific market niche in trading strategy extraction can narrow down searchable strategy space in trading agent studies.

In the real world, underlying environment is more or less constrained. Constraints may be broadly embodied in terms of data, domain, interestingness and deployment aspects [ 9 ]. Constraints surrounding the development and performance evaluation of actionable trading strategy set  X  in a particular market data set form a constraint set: constraint type set covering all types of constraints in market microstructure M and data D in the searching niche, and N i is the number of constraint attributes for a specific type c i .
Correspondingly, actionable trading strategy set  X  is a conditional function of  X  ,which is described as: where  X  is an  X  X ptimal X  trading pattern instance, and  X  indicates specific constraints on the discovered pattern recommended to a trading agent a .

Let X  X explaintheaboveconceptthroughtheillustrationof MA strategies again.Supposethe trading strategy MA ( l ) being deployed in the order-driven Australian Securities eXchange (ASX) market, one instantiates it into a form of MA ( 5 ) , which is a five-transaction MA strategy, and set a benchmark  X  = AU$25.890 in trading BHP (BHP Billiton Limited) on 24 January 2007. In this situation, s/he believes MA ( 5 ) is one of the most dependable MA ( l ) . Here M is instantiated into { stock, broker, market order, continuous session, order-driven }. In Sect. 4.1 , we further discuss evolutionary trading agents for generating appropriate parameter market. 3.2 Satisfying trader preferences In financial markets, traders always pursue profitable and risk-free trading strategies to make good return on investment. As an assistant of a trader, a trading agent needs to care for trader preferences and takes actions in favor of trader X  X  expectations. For instance, trader preferences may be embodied in terms of achieving high benefit but as low cost and risk as possible when taking certain trading positions. As the representative of traders, trading agents should target those positions with high benefit per cost.

Trading positions may vary from different market models. In general, there are three types of positions: + 1,  X  1, 0 for a trading agent to take in the market. Position + 1 indicates a buy or holding buy actioninthemarket.  X  1 reflects either a sell or holding sell action. 0 indicates none of actions.
Further, different positions undertaken by a trading agent result in varying benefit and cost/risk. We define the concepts bene f i t and cost below to measure the performance of a trading agent when it takes certain trading strategies in a market.
 Definition 3 (Benefit) Benefit  X  s measures the cumulative payoff of a trading agent earned in undertaking position series { b i } in prices { p i }andvolumes{ v i }. A position and its associated price and volume are determined by a trading strategy s . Definition 4 (Cost) Cost  X  s measures the cumulative commission and transaction costs  X  i of a trading agent spent on undertaking position sequences { b i } determined by a trading strategy s .
Based on trading strategies a trading agent may follow, our goal is to increase benefit while decrease cost of a trading agent in a market scenario.  X  Increasing benefit : increasing benefit is the positive objective of a trading agent when  X  Decreasing cost :costs reflectthe negative side of a trading agent X  X  performance in conduc- X  Enhancing benefit per cost : trading agents need to select those trading strategies that can Definition 5 (Benefit-Cost Ratio) Benefit-cost ratio  X   X  X , s measures the unit of benefit per costof a trading agentin undertaking position sequences { b i }determinedbyatradingstrategy s .
In addition, existing financial metrics such as sharpe ratio [ 20 ] and empirical criteria for the evaluation benchmarks of business performance. 4 Designing smart trading agents The task of designing smart trading agents is to endow trading agents with capabilities of searching strategies in constrained market environment to satisfy trader preference. In this section, we introduce two approaches to designing smart trading agents. One is to design evolutionary trading agents , which are equipped with evolutionary computing capabilities, and can search strategies from a large candidate strategy space targeting higher benefit-cost ratio . The other is to integrate optimal instances from multiple classes of trading strategies into one combined powerful strategy through collaborative trading agents . 4.1 Evolutionary trading agents for parameter optimization Evolutionary trading agents have capabilities of evolutionary search computing. They can search trading strategies based on given optimization fitness and specified optimization objec-tives. Their roles consist of optimization requests (including base strategies and arguments), creating strategy candidates (namely chromosomes), evaluating strategy candidates, crossing over candidate strategies, mutating candidate strategies, re-evaluating candidate strategies, and filtering optimal strategies, etc.

The strategy optimization using evolutionary trading agents is as follows. A User Agent receives optimization requests from user-agent interaction interfaces. It forwards the request to Coordinator Agents , Coordinator Agents check the availability and validity of optimized Strategy Agent class with strategyClassID .Ifa Strategy Agent class is available and optimi-zable, Coordinator Agents call the Evolutionary Agents to perform corresponding roles, for instance, createStrategyCandidates , evaluateStrategyCandidates , crossoverCandidateStra-tegies , mutateCandidateStrategies , re-evaluateCandidateStrategies ,or returnOptimalStra-tegies to optimize the strategy. After the optimization process, Evolutionary Agents return Coordinator Agents the searched optimal Strategy Agent with strategyID and corresponding parameter values. Coordinator Agents further call the User Agents to present the results to traders by invoking Presentation Agents .Fig. 1 illustrates the workflow of the above evolutio-nary trading agents and their relevant collaboration process in integrating actionable trading strategies.

The following descriptive notations further illustrate one of the above roles: mutateCan-didateStrategies .
 Role R_mutateCandidateStrategies
Statement Mutation is a process that parts of a chromosome are to be changed. This role determines to what extent the parts of a chromosome in a trading agent are to be mutated. The extent is the mutation rate.
 Agent A_EvolutionaryAgent Agent A_UserAgent Agent A_StrategyAgent Agent A_CoordinatorAgent Attribute aea:A_EvolutionaryAgent Attribute constant mutrate:MutationRate Attribute paraid[]:A_InParameters Attribute aua:A_UserAgent Attribute asa:A_StrategyAgent Attribute constant strid:asa Attribute aca:A_CoordinatorAgent Protocol receiveStrategyMutationRequest Protocol checkStrategyAgentValidity Protocol openMutateSettingInterface Protocol submitStrategyMutationRequest Protocol returnStrategyMutationResponse Responsibilities
Liveness  X  strid:aca.checkStrategyAgentValidity()  X  aua.openMutateSettingInterface(aea, asa.paraid[])  X  aea.receiveStrategyMutationRequest(aua)  X  aca.submitStrategyMutationRequest(aua)  X  aea.executeStrategyMutation(aua, mutrate, aca)  X   X  t aea.returnStrategyMutationResponse(aua, aca)
Safety (Invariant) 0 &lt; mutrate &lt; 1 . 0 4.2 Trading agent collaboration for strategy integration In real-life trading, trading strategies can be categorized into many classes. To financial experts, different classes of trading strategies indicate varying principles of market models and mechanisms. A trading agent often takes series of positions generated by a specific trading strategy, which instantiates a trading strategy class. Our idea is for multiple trading agents to collaborate with each other and take concurrent positions created by multiple trading strategies to take advantage of varying strategies.

The working mechanism of trading agent collaboration for strategy integration is as fol-lows.Thereareafew Representive Trading Agents in the market. Each Representive Agent invokes an Evolutionary Agent to search for an optimal Strategy Agent from a strategy class. Coordinator Agents then negotiate with these Representive Agents and Evolutionary Agents to integrate the identified optimal strategies of Strategy Agents . An appropriate integration method is negotiated and chosen by Coordinator Agents , Representive Agents and Evolutio-nary Agents based on globally optimal objective.
 For instance, the following notations describe one of the goals of Coordinator Agents . The goal is to achieve the globally maximal benefit-cost ratio through negotiating with all Representive Agents .
 Goal integrateStrategy
Statement Coordinator agents discuss with Representative trading agents to get maxi-mally global benefit-cost ratio . Representative trading agents invoke n Evolutionary tra-ding agents to execute n classes of Strategy agents for maximally local benefit-cost ratio , respectively. The following describes the objective of agents fulfilling such a task.
Role R_StrategyOptimizer Agent A_StrategyAgent Agent A_UserAgent Agent A_RepresentativeAgent Agent A_EvolutionaryAgent Agent A_CoordinatorAgent Attribute aea : A_E v ol ut i onar y Agent i Attribute aua : A_U ser Agent Attribute asa : A_Str ategy Agent i Attribute ara : A_Repr esentati v eAgent Attribute aca : A_Coor di nator Agent Attribute constantstrid : asa Attribute constantstrid : asa Attribute an : Algo N ame Attribute ac : AlgoC od e Attribute ain [] : Algo P ar amet er s Attribute aout [] : AlgoO ut put s Creation condition  X  Existed ( ac ) Invariant condition ac . actor = Actor I D
Fulfillment condition  X  ac:AlgorithmComponent ( Figure 1 further describes the process of trading agent negotiation for strategy integration. As shown in the diagram, there are two steps of optimzation. First, locally optimal strategies are searched through Evolutionary agents on request of Representative Agents if the strategy achieves the highest benefit-cost ratio  X  . StrategyManager Agent stores the golden strategies. Second, Coordinator agents call StrategyIntegrator Agents to work out the requested global goal. Coordinator agents check StrategyManager Agent and invoke Evolutionary agents if necessary to recalculate the golden strategies based on the negotiation model. StrategyInte-grator Agents select the best golden strategies for each loop and accumulate all promising strategies for m loops to achieve the requested globally optimal goal by an agreed negotiation model.

A simple negotiation model for the above strategy integration is as follows. In the second step, mediated by Coordinator agents, StrategyIntegrator agents discuss with Representative agents for the maximum number of loops for strategy optimization. Suppose m is the agreed loop number. For the loop j ,all StrategyAgents are called by Evolutionary agents to obtain  X  of the Strategy i .The Strategy agent (suppose its id is i ) with max ( X  ) is selected for this round. Its contribution factor  X  i is then determined. Benefit-cost ratio  X   X  X , s for the loop i is then calculated. After executing the m loops of integration, the final Benefit-cost ratio is round of m loops in terms of corresponding contribution factors . 5 Real-world experiments Since 2002, we have been working on developing trading agents and strategies with indus-trial partners X  support, say CMCRC [ 1 ] and SIRCA [ 2 ]. Extensive experiments have been conducted on many years of multi-markets of data. An agent service-based platform F-Trade [ 4 , 11 , 14 ] has been built to support this effort. Some of our results have been delivered to partners. In this section, we illustrate some of the process and results in optimizing strategies through Evolutionary Trading Agents and integrating strategies via Collaborative Trading Agents .
 the bene f i t and cost of a trading agent in executing the strategy s . The development process of integrating strategies through trading agent collaboration is as follows.

Part A. Data Manager Agent prepares data: (0) UserAgent receives trader X  X  input requests; (1) DataManager agent splits two years of data for training; (2) RepresentativeAgent invokes EvolutionaryAgents to identify locally golden trading strategies with highest  X   X  X , s as discussed in part B; (3) DataManager agent splits another three years of data following the training windows for testing; (4) RepresentativeAgent invokes EvolutionaryAgents to test the identified golden strategies as discussed in part B; (5) DataManager agent slides the 2-year training and the 3-year deploying data windows one year forward to extract data sets as in A(1) and A(3); (6) RepresentativeAgent invokes EvolutionaryAgents to repeat the operations of searching golden strategies;
Part B. Evolutionary Trading Agents search golden strategies: (1) EvolutionaryAgent calls a StrategyAgent s in class S i and searches strategy instance s with max ( X  s ) for s positions; (2) EvolutionaryAgent calls a StrategyAgent s and searches strategy s with max ( X   X  X , s ) when s positions are executed; (3) RepresentativeAgent invokes EvolutionaryAgents to search all strategies s i ( i = 1 , 2 ,... ) in all strategy classes satisfying conditions in step B(2) respectively;
Part C. Collaborative Trading Agents aggregate golden strategies: (1) PositionAgents extract all positions from EvolutionaryAgents with all strategies iden-tified in step B(3) for RepresentativeAgent ; (2) EvaluationAgents check the benefits , costs and benefit-cost ratio of each Representa-tiveAgent executing the above positions; (3) DecisionAgents filter out strategies with low  X   X  X , s for each strategy class i ; (4) CoordinatorAgents call all RepresentativeAgents to execute the above filtered strategies concurrently to generate the final outcomes.

Experiments of trading agent collaboration for multi-strategy integration in stock market data have been conducted as follows:  X  Trading strategies: MA, FR, CB, SR, and OBV as shown in Table 2 ;  X  Markets and stocks: selected stocks from ASX, Hongkong, London, New York, and Japan;  X  Interday trade data consisting of times, prices, volumes from 1/1/1998 to 30/12/2006;  X  Training data: 2-year sliding window, say 1/1/1998 X 30/12/1999;  X  Testing data: 1-year sliding window, say 1/1/2000 X 30/12/2000.

Figure 2 illustrates some results of evolutionary trading agents based optimization of strategies, by which you go long at the time that the price rises by x and hold until the price falls x , at which time you close out and go short, where x  X  X  0 , 1 ] is the percentage price movement of highest high and lowest low.

Even though there is only one parameter d in this rule, it is hard to find the most favorite x in a real-life market. Evolutionary trading agent is helpful for searching such a golden x . As shown in Fig. 2 , the cumulative payoff with x = 0 . 04 always outperform other d s from the date 14 July 2003 in trading the listed security CBA (Australian Commonwealth Bank) in ASX market in 2003 X 2004.
 Table 3 further shows the signals, positions, benefits and costs of trading agents following MA-BMN Strategy , which is an identified golden strategy by evolutionary trading agents in 2004 Hongkong Exchange data.

Table 4 shows the positions recommended by each golden strategy identified by Collabo-rative Trading Agents in 2006 Hongkong United Exchange data.

Figure 3 shows the cumulative benefits MA_Ben, FR_Ben, CB_Ben, SR_Ben, OBV_Ben of trading agents taking positions recommended by golden trading strategies MA, FR, CB, SR, OBV asshowninTable 4 , as well as the benefit (Int_Ben) of executing all golden positions concurrently recommended by Collaborative Trading Agent in 2003 X 2006 Hongkong United Exchange data.

A large amount of tests in five markets of data have shown that trading agents following our recommended golden trading strategies can obtain higher benefit-cost ratios (except FR in the first few days). In particular, collaborative trading agents concurrently executing positions recommended by individual golden strategies can greatly increase benefits while control very low costs compared with those taking positions recommended by either an individual strategy or randomly chosen strategies only (see Table 5 , lift [ 12 ] measures how good a trading strategy is in all split data sets). 6 Conclusions Trading agents have demonstrated its potential in simulating market mechanism design and strategy development. However, existing trading agent research mainly focuses on artificial data and market models with limited consideration of real-life market factors and trader preferences. As a result, the studied results may not necessarily be of business interest. In fact, trading agents can contribute to traders with trading strategies that can support their smart action-taken in the market.

In this paper, we have demonstrated approaches to developing actionable trading strate-gies for trading agents. With the consideration of real-life organizational factors and trader expectations on trading agents, we have built evolutionary trading agents to search the golden strategies that can help an agent achieves highest benefit-cost ratio ,and collaborative trading agents to concurrently trade multiple classes of identified golden trading strategies.
Extensive experiments involving hundreds of trading strategies in five markets of data have been conducted. The developed trading agents have been demonstrated to brokerage firms and business people, which have shown very promising performance from not only technical but also business perspectives. For instance, most of our golden strategies likely beat transaction costs and market index return, which are viewed as practical challenges of financial strategy development. The system supporting the above research and development, F-Trade, has been demonstrated to AAMAS2007 [ 11 ] and industrial collaborators.
 References Author Biographies
