 Nowadays, to facilitate the communication and cooperation among employees, a new family of online social networks has been adopted in many companies, which are called the  X  X n-terprise social networks X (ESNs). ESNs can provide employ-ees with various professional services to help them deal with daily work issues. Meanwhile, employees in companies are usually organized into di  X  erent hierarchies according to the relative ranks of their positions. The company internal man-agement structure can be outlined with the organizational chart visually, which is normally confidential to the public out of the privacy and security concerns. In this paper, we want to study the IOC (I nference of O rganizational C hart) problem to identify company internal organizational chart based on the heterogeneous online ESN launched in it. IOC is very challenging to address as, to guarantee smooth oper-ations, the internal organizational charts of companies need to meet certain structural requirements (about its depth and width). To solve the IOC problem, a novel unsupervised method Create (C hA rT RE covE r) is proposed in this pa-per, which consists of 3 steps: (1) social stratification of ESN users into di  X  erent social classes, (2) supervision link inference from managers to subordinates, and (3) consecu-tive social classes matching to prune the redundant supervi-sion links. Extensive experiments conducted on real-world online ESN dataset demonstrate that Create can perform very well in addressing the IOC problem.
 H.2.8 [ Database Management ]: Database Applications-Data Mining Organizational Chart Inference; Enterprise Social Network; Data Mining
This work was partially done when the first author was on a summer internship at Microsoft Research.
 c 2015 ACM. ISBN 978-1-4503-3664-2/15/08 ... $15.00. Figure 1: An example of organizational chart infer-ence from online ESN.
In social sciences, people in social organizations (e.g., a country or a company) can be categorized into di  X  erent rankings of socioeconomic tiers based on factors like wealth, income, social status, occupation, power, etc. In this pa-per, we will take  X  X ompany X  as an example and the inter-nal hierarchical structure of employees in a company can be outlined with company organizational chart formally. Most company organizational charts are usually tree-structure di-agrams with CEO at the root, Executive Vice Presidents (EVPs) at the second level and so forth. Company orga-nizational chart shows the company internal management structure as well as the relationships and relative ranks of employees with di  X  erent positions/jobs, which is a common visual depiction of how a company is organized.

Nowadays, to facilitate the collaboration and communica-tion among employees, a new type of online social networks named enterprise social networks (ESNs) has been adopted inside the firewalls of many corporations. A representative example of online ESNs is Yammer 1 . Over 500,000 busi-nesses around the world are now using Yammer, including 85% of the Fortune 500 2 . Yammer provides employees with various enterprise social network services to help them deal with daily work issues and contains abundant heterogeneous information generated by employees X  online social activities. Problem Studied : Company internal organizational chart is usually confidential to the public for the privacy and se-curity reasons. In this paper, we want to infer the organi-https://www.yammer.com/ https://about.yammer.com/why-yammer/ zational chart of a company based on the heterogeneous in-formation in online ESNs launched in the company, and the problem is formally named as the I nference of O rganization C hart ( IOC ) problem.

To help illustrate the IOC problem more clearly, we also give an example in Figure 1, where the left plot is about an online ESN adopted in a company and the right plot shows the company X  X  organizational chart. In the ESN, users can have di  X  erent types of social activities, e.g., follow other users, join groups, write/reply/like posts, etc. Meanwhile, in the organizational chart, employees are connected by su-pervision links from managers to subordinates, who are or-ganized into a rooted tree of depth 2 with CEO  X  X dam X  at the root. In companies, managers can usually supervise several subordinates simultaneously, while each subordinate only reports to one single manager. For instance, in Fig-ure 1, CEO  X  X dam X  manages  X  X ob X  and  X  X andy X  concur-rently, while  X  X avid X  only needs to report to  X  X ob X .
The IOC problem is an interesting yet important prob-lem. Besides inferring company organizational chart, it can also be applied in other real-world concrete applications: (1) identifying the command structures of terrorist organiza-tions [30] based on the communication/tra c networks of their members. The command structures of terrorist orga-nizations are usually pyramid diagrams outlining their sup-port systems consisting of the leaders , operational cadre , active supporters and passive supporters [30]. Uncovering their internal operational structure and determining roles of members will be helpful for conducting precise strikes against their key leaders and avoid the tragic events, like 9/11 [22]. (2) inferring the social hierarchies of animals based on their observed interaction networks [24]. Many an-imals (like, mammals, birds and insect species) are usually organized into dominance hierarchies. Identifying and un-derstanding the organizational hierarchies of animals will be helpful to design and carry out e  X  ective conservation mea-sures to protect them.

Albeit its importance, IOC is a novel problem and we are the first to propose to study it based on online ESNs. The IOC problem is totally di  X  erent from existing works: (1)  X  hierarchy detection in social networks  X  [15], which only studies the division of the regular users of the social networks into di  X  erent hierarchies, who are not actually involved in any organizations; (2)  X  organizational intrusion  X  [12], which focuses on attacking organizations and attaining company internal information only; and (3)  X  inferring o  X  ine hierar-chy from social networks  X  X 19], which merely infers fragments of o  X  ine hierarchical ties in homogeneous networks, instead of reconstructing the whole organizational chart. Di  X  erent from all these works, in this paper, we aim at recovering the complete organizational chart of a company (including both the hierarchical tiers of employees and the supervision links from managers to subordinates) based on the heterogeneous information about the employees in online ESNs.

Meanwhile, to guarantee the smooth operations of compa-nies, the inferred organizational chart needs to meet certain structural requirements [2], including both (1) macro-level depth requirement, and (2) micro-level width requirement. Two classical organizational structures adopted by compa-nies are the vertical structure and the horizontal structure [6]. Vertical organizational structure with well-defined chains of command clearly outlines the responsibilities of each em-ployee but will result in delays in information delivery [6]. Meanwhile, horizontal organizational structure with flat com-mand system involves everyone in decision making but will lead to di culties in coordinating the activities of di  X  erent departments [6]. For instance, based on the input social net-work shown in plot A of Figure 2, we give two extreme cases of the vertical and horizontal organizational charts without depth regulation in plots B and C respectively, both of which will lead to serious management problems for large compa-nies involving tens of thousands employees. Proper regu-lation of the inferred organizational chart X  X  depth (i.e., the macro-level depth requirement) is generally desired. On the other hand, most employees in companies need good super-visors to coach and instruct their daily work, but the number of subordinates each manager can supervise is limited, which can be determined by their management capacities, available time and energy. Rationally regulating the allocation of su-pervision workload among managers (i.e., the micro-level width requirement) can improve the management e  X  ective-ness significantly. For instance, in plot D of Figure 2, we show an inferred organizational chart with depth regulation but no subordinate allocation regulation. In the plot, users in ESN are stratified into 3 tiers (which is relatively reason-able compared to the extreme cases in plots B and C) but the employees X  management workloads at tier 3 are all as-signed to one single manager, which may be beyond his/her management ability.

Despite its importance and novelty, the IOC problem is very hard to solve due to the following challenges:
To address all the above challenges, a new unsupervised organizational chart inference framework named Create (C hA rT RE covE r) is proposed in this paper. Several new concepts (e.g.,  X  class transcendence social links  X ,  X  Matthew E  X  ect based constraint  X  and  X  chart depth regulation con-straint  X ) will be introduced and Create resolves the reg-ulated social stratification challenge by minimizing the ex-istence of class transcendence social links in ESNs. Cre-ate tackles the supervision link inference challenge by ag-gregating multiple social meta paths in the ESN between to consecutive social hierarchies. Finally, Create handles the regulated supervision workload al location challenge by apply-ing network flow to match consecutive social hierarchies to preserve the K-to-one constraint on supervision links . The remaining parts of the paper are organized as follows. In Section 2, we will define some important terminologies and the IOC problem. Method Create will be introduced in Section 3. Extensive experiment results are available in Section 4. Finally, we describe the related works in Section 5 and conclude this paper in Section 6.
In this section, we will introduce the formal definitions of  X  heterogeneous social network  X  and  X  organizational chart  X  at first and then define the IOC problem with these two concepts. Definition 1 (Heterogeneous Social Networks): A hetero-geneous social network can be represented as G =( V , E ), where V = types of nodes and complex links among these nodes in the network respectively.
 As introduced in Section 1, users in online ESNs (e.g., Yammer) have various types of social activities, e.g., follow other users, join groups, write/reply/like online posts, etc. As a result, Yammer can be represented as a heterogeneous social network G =( V , E ), where V = U [ G [ P is the set of user, group and post nodes in G and E = S [ J [ W [ R [ K denotes the set of social links among users, join links between users and groups, as well as write, reply and like links between users and posts respectively.
 Definition 2 (Organizational Chart): The organization chart of a company can be represented as a rooted tree [8] T = ( N , L ,root ), where N is the set of employees , L denotes the set of directed supervision links from managers to subordi-nates in T and root represents the CEO in the company.
Based on the definitions of heterogeneous social network and organizational chart , we can define the IOC problem formally as follows: Definition 3 (Organizational Chart Inference ( IOC )): Given an online ESN G =( V , E ) launched in a company, the IOC problem aims at inferring the most likely organizational chart T =( N , L ,root ) of the company, where N = U ( U is the user set in network G ). Furthermore, considering that the node set as well as the root node in T are fixed, the IOC problem actually aims at inferring the |N 1 | most likely supervision links L among employees. The inferred supervision links together with the node set N as well as the root node can recover the original organizational chart T =( N , L ,root ) of the company.
Considering that supervision links exist merely between managers and subordinates, we propose to stratify users in enterprise social networks into di  X  erent social classes to identify their relative manager-subordinate roles in Subsec-tion 3.1. Macro-level depth requirement of the inferred chart is achieved with the depth regulation constraint in the social stratification objective function. Potential supervision links can be inferred between employees in consecutive classes by aggregating social meta paths among employees in the ESN in Subsection 3.2. To preserve the K-to-one constraint on supervision links (i.e., the micro-level width requirement), redundant non-existing supervision links will be pruned in Subsection 3.3. Generally, as shown in Figure 3, framework Create has three steps: (1) regulated social stratification, (2) supervision link inference, and (3) regulated social class matching, which will all be introduced in this section.
Supervision links merely exist between managers and sub-ordinates. Division of users into hierarchies to identify their relative manager-subordinate roles can shrink the supervi-sion link inference space greatly. The process of hierarchiz-ing users in online ESN is called social stratification formally. Definition 4 (Social Stratification): Traditional social strat-ification concept used in social science denotes the ranking and partition of people into di  X  erent hierarchies based on various factors, e.g., power, wealth, knowledge and impor-tance [32]. In this paper, we define social stratification as the partition process of users in online ESNs into di  X  erent hier-archies according to their management relationships, where managers are at upper levels, while subordinates are at lower levels.

The relative stratified levels of users in online ESN are defined as their social classes.
 Definition 5 (Social Class): Social class is a term used by social stratification models in social science and the most common ones are the upper, middle, and lower classes [13]. In this paper, we define social class of users in online ESNs as their management level in the company, where CEO belongs to social class 1, EVPs belong to class 2, and so forth.
In social stratification, users in online ESNs will be mapped to their social classes according to mapping: c : U ! Z + For each user u 2 U , his social class c ( u ) is defined recur-sively as follows: where m ( u ) represents the direct manager of u .
In social science, the working class are eager to get ac-quainted with and join the upper echelons of their class by ei-ther accumulating wealth [3], imitating their dressing styles [4], and mimicking their dialect and accents [23]. Mean-while, the upper class are very cohesive and they tend to be friends who share similar background [17]. So is the case for the social links in enterprise social networks . By analyzing the Yammer network data, we observe that the probability for users to follow upper-level managers is 31 . 9% on aver-age, while that of following subordinates is merely 11 . 2%. As a result, in online ESNs, subordinates tend to follow their managers, while people in management are reluctant to initiate the friendship with their subordinates [1]. Based on such an observation, we introduce the concept of class transcendence social links and propose to stratify users by minimizing the existence of such links in ESNs.
 Definition 6 (Class Transcendence Social Link): Link ( u, v ) (i.e., u follows v ) is defined as a class transcendence social link in online ESN G i  X  ( u, v ) 2 S and c ( u ) &lt;c ( v ) (where smaller social class denotes upper management level in the organizational chart).

In social stratification, each introduced class transcen-dence social link in the result will lead to a class transcen-dence penalty .Let c ( U )= { c ( u 1 ) ,c ( u 2 ) ,  X  X  X  ,c ( u social stratification result of all users in the ESN. For any directed social link ( u, v ) 2 S in the ESN, the class tran-scendence penalty introduced by it can be represented as
The class transcendence penalty introduced by all social links (i.e., S ) in the ESN can be represented as  X  X he rich get richer X  (i.e., the Matthew E  X  ect [25]) is a common phenomenon in social science literally referring to issues of fame or status as well as cumulative advantage of economic capital. By analyzing the Yammer network data, we have similar observations:  X  X eople at higher management level can accumulate more followers easily X . Such an obser-vation provides important hints for inferring users X  relative management levels according to their in degrees in ESN (i.e., the number of followers).
 Definition 7 (Matthew E  X  ect based Constraint): For any two given users u and v in the network, let ( u ) and ( v ) be the follower sets of u and v in the network respectively. The matthew e  X  ect based constraint on users u and v can be represented as c ( u )  X  c ( v )if | ( u ) | | ( v ) | .
Furthermore, to maximize the operation e ciency of com-panies, the inferred organizational chart needs to meet the macro-level depth requirement , which can be achieved with the following chart depth regulation constraint.
 Definition 8 (Chart Depth Regulation Constraint): The chart depth regulation constraint avoids obtaining organiza-tional chart with too short command chains (e.g., the ex-treme horizontal structure) and can be represented as where parameter  X  is used to regulate the depth of the chart, whose sensitivity analysis will be given in Section 4. Fur-thermore, term objective function to avoid obtaining charts with too long command chains (i.e., the extreme vertical structure).
Based on all the above remarks, the optimal regulated social stratification c  X  ( U ) of users in ESN can be obtained by solving the following objective function: c ( U ) = arg min s.t., p ( c ( u ) ,c ( v )) c ( v ) c ( u )+1 , 8 ( u, v ) 2 S ,
The integer programming objective function can be solved with open source toolkits, e.g., GLPK 3 , PuLP 4 , etc., very easily and the obtained results of variables c ( u 1 ) ,c ( u represent the inferred social classes of users in online ESN.
It is a challenge to estimate the supervision relations be-tween the ESN members in consecutive social classes. Here we use the meta paths concept introduced in [28, 29, 40] to identify and evaluate di  X  erent types relationship in ESN. Social Meta Paths in Enterprise Social Networks
An existing user intimacy [37] measure, Path-Sim, based on meta paths was introduced in [29], which can calculate the propagation probability between users via meta paths https://www.gnu.org/software/glpk/ https://code.google.com/p/pulp-or/ in undirected homogeneous networks . To deal with directed heterogeneous networks , we extend it and introduce a new intimacy measure, DP-intimacy (Directed Path-Intimacy), based on social meta path i ( U, U ) ,i 2 { 1 , 2 ,  X  X  X  , 7 } : DP-intimacy i ( u, v )= where PATH i ( u v ) denotes the instance set of meta path ( U, U ) going from u to v in the ESN.

Di  X  erent social meta paths capture the intimacy between users in di  X  erent aspects and overall intimacy between users can be obtained by aggregating information from all these social meta paths. Let DP-intimacy 1 ( u, v ) , DP-intimacy  X  X  X  , DP-intimacy 7 ( u, v ) be the intimacy scores between users u and v calculated based on social meta paths 1 ( U, U ) , ( U, U ) ,  X  X  X  , 7 ( U, U ) respectively. Without loss of gener-ality, we choose logistic function as the intimacy aggregation function [14], the overall intimacy between users u and v can be represented as intimacy ( u, v )= e where the value of ! i denotes the weight of social meta path i and
Meta path aggregation based supervision link inference method proposed in previous step calculate the intimacy scores of all the potential links between pairs of social classes. However, to regulate the supervision workload allocation, the number of subordinates each manager can supervise is limited by the management threshold K . In this section, we will prune the redundant non-existing supervision links with network-flow based regulated social class matching to preserve the K-to-one constraint on supervision links .
Based on the social stratification results c ( U )= { c ( u  X  X  X  ,c ( u |U| ) } , we can stratify all the users into social classes [1 , max( c ( U ))] and users in class i 2 [1 , max( c ( U ))] can be represented as set ( i )  X  U . By aggregating information in various social meta paths , we can calculate the intimacy scores of all potential supervision links between consecutive social classes , which exist between ( i ) and ( i +1)can be represented as set  X  ( i, i +1)= ( i )  X  ( i + 1). Links in  X  ( i, i + 1) are associated with certain weights (i.e., the calculated intimacy scores), which can be obtained with the mapping  X  ( i, i +1):  X  ( i, i +1) ! R .

Users in social classes i and i +1(i.e., ( i ) and ( i + 1)) together with all the potential supervision links between them (i.e.,  X  ( i, i +1)) and their intimacy scores (i.e.,  X  ( i, i + 1)) can form a weighted bipartite preference graph. Definition 9 (Weighted Bipartite Preference Graph): The weighted bipartite preference graph between users in ( i ) and ( i + 1) can be represented as B =( ( i ) [ ( i + 1) ,  X  ( i, i +1) ,  X  ( i, i +1)).

An example of weighted bipartite preference graph is shown in the upper plot of Figure 4. In the example, all the poten-tial supervision links between the upper-level and lower-level individuals are represented as the directed purple lines be-tween them, whose weights are the numbers marked on the lines. Each employee in the figure is associated with multi-ple potential supervision links and the redundant ones can be pruned with the network flow method introduced in the next subsection.
Based on the bipartite preference graph B , we propose to construct the following network flow graph first. Definition 10 (Network Flow Graph): Based on bipartite preference graph B =( ( i ) [ ( i +1) ,  X  ( i, i +1) ,  X  ( i, i + 1)), the network flow graph can be represented as H = ( N
H , L H , W H ). Node set N H includes all nodes in B and two dummy nodes: source node s and sink node t (i.e., N H = ( i ) [ ( i +1) [ { s, t } ). Besides all the links in B , we further add directed links from s to all nodes in ( i ), as well as those from all nodes in ( i +1)to t (i.e., L
H =  X  ( i, i +1) [ ( { s }  X  ( i )) [ ( ( i +1)  X  { t } )). Only the links in  X  ( i, i +1) are associated with weights, which can be obtained with mapping W H =  X  ( i, i +1).

For instance, based on the bipartite preference graph in the upper plot of Figure 4, we can construct its corresponding network flow graph (i.e., the lower plot). All the links in the network flow graph are directed denoting the flow direction. Bound Constraint of Network Flow
For each link ( u, v ) 2 L H , we allow a certain amount of flow going through within range [ lb u,v ,up u,v ], where lb and up u,v represent the lower bound and upper bound asso-ciated with link ( u, v ) respectively and where x u,v is the flow amount going through link ( u, v ).
More specifically, for links from s to the upper level indi-viduals, i.e., { s }  X  ( i ), we set its lower bound and upper bound to be lb s,u = 0 and ub s,u = K respectively and we can get where K is the management threshold, whose sensitivity analysis is available in Section 4. It is actually the constrain to preserve micro-level width requirement.

For link ( v, t ) 2 L H ,wesetits lower bound and upper bound to be lb v,t = 1 and ub v,t =1,i.e., which means exact amount 1 flow goes through link ( v, t ) (i.e., each subordinate needs to have exactly one manager).
Links ( u, v ) 2  X  ( i, i +1)  X  L H have lower and upper bounds lb u,v =0, ub u,v = 1 and the flow amount needs to be an integer, i.e., denoting whether supervision links in  X  ( i, i +1) are selected or not in the matching result.
 Mass-Balance Constraint of Network Flow
In network flow model, for each node, e.g., u , the amount of flow going into u should be equal to that going out from u ,i.e., Minimum Cost Network Flow
All links going from ( i )to ( i + 1) are associated with corresponding flow costs , which are negatively correlated to their intimacy scores. For instance, in this paper, for link ( u, v ) 2 L B with weight intimacy ( u, v ), we can represent their flow cost as 1 intimacy ( u, v ). The optimal network flow with the minimum cost (i.e., the maximum intimacy) can be obtained by addressing the following integer program-ming problem: min s.t. 0  X  x s,u  X  K, for 8 u 2 ( i ) ,
Similarly, the above integer programming problem can be addressed with open source toolkits and how to solve the equation will not be introduced here. Variables obtained by solving the above equation can lead to the minimum cost but can also meet the constraints as well. These obtained variables denote the existence scores of the corresponding supervision links, where the selected links (i.e., those cor-responding variable x = 1) will be assigned with label +1 while the rest are assigned with label 1. To examine the performance of Create in addressing the IOC problem, in this part, extensive experiments will be conducted on real-world enterprise social network : Yammer. We crawl all the Microsoft employees X  information from Yammer and obtain the complete organizational chart in-volving all these employees in Microsoft during June, 2014. The social network data covers all the user-generated con-tent (such as posts, replies, topics, etc.) and social graphs (such as user-user following links, user-group memberships, user-topic following links, etc.) by then that are set to be public. In summary, it includes more than 100 k Microsoft employees, and millions of user-generated posts published and the social links. 5
We are not able to reveal the actual numbers here and throughout the paper for commercial reasons.

All the users in yammer are registered with the o cial em-ployment ID in Microsoft, via which we can identify them in the organizational chart correspondingly. From Microsoft, the complete organization structure of all employees is ob-tained. As introduced before, the structure of the organiza-tional chart is a rooted tree with the CEO at the top.
The Create framework proposed in this paper is an un-supervised model, and the organizational chart is used for evaluation only in the experiments. To ensure the employee node set of organizational chart to be identical to that of ESN, a fully aligned [21] Yammer network and organiza-tional chart are sampled from the dataset. Initially, with the directed follow links among users in Yammer, we achieve the regulated social stratification of users by minimizing the number class transcendence social links . All the potential supervision links between pairwise consecutive social classes in the social stratification result are inferred by aggregat-ing information from various social meta paths in Yammer, whose existence likelihood is denoted as the intimacy score. For simplicity, the weights of di  X  erent social meta paths in logistic function are assigned with identical values, i.e., ! =[ 1 7 ,  X  X  X  , 1 7 ]. A subset of these inferred supervision links will be selected via the regulated social class matching based on the network-flow model to preserve the K-to-one con-straint on supervision links.

Meanwhile, to demonstrate the e  X  ectiveness of Create , we compare Create with many baseline methods, including both state-of-art and traditional methods in social stratifi-cation and organizational chart inference.
 Social Stratification Methods : Organizational Chart Inference Methods : Social Stratification Evaluation Metrics
In the social stratification step, the outputs are the in-ferred social classes of all the employees. By comparing them with individuals X  real-world social classes (i.e., the ground truth), we can calculate the mean absolute error [31], mean squared error [31] and coe cient of determina-tion (i.e., R 2 ) [26] of the results. In addition, the ratio of correctly stratified users (i.e., accuracy) can also be used to measure the performance. So, the metrics used to evaluate the performance of di  X  erent social stratification methods in-clude mean absolute error (MAE) [18], mean squared error (MSE) [27], R 2 [27] and accuracy .
 Organizational Chart Inference Evaluation Metrics
Methods Create-sl , Create-l and the traditional un-supervised link prediction can only output the confidence scores of all potential supervision links without labels, whose performance will be evaluated by metrics AU C and Preci-sion@100. Meanwhile, Create and Create-sm can output both labels and scores of potential supervision links and, besides AU C and Precision@100, we will also evaluate their performance with Precision, Recall and F1-score.
In social stratification, parameter  X  is applied to main-tain the macro-level depth requirement, which can control the depth of the organizational chart. Before comparing the performance of Create with ASD , we will analyze the sen-sitivity of parameter  X  at first. We select  X  with values accuracy scores achieved by Create as shown in Figure 5.
When parameter  X  is very small (e.g., from 1 to 3), we observe that it has no e  X  ects on the performance of Cre-ate . The possible reason can be that Matthew E  X  ect based constraint can already e  X  ectively outline the relative hierar-chical relationships among users in online ESNs, the aver-age social class of users obtained based on which is already greater than 3. When  X  becomes larger (from 4 to 6), the structure regulation constraint starts to matter more and the social stratification accuracy goes up steadily and achieve the highest value at 5 . 5, i.e., the default value of  X  in later experiments. Create performs better as  X  increases shows that the structure regulation constraint can stretch the orga-nizational structure and stratify users in their correct social classes. However, as  X  further increases (i.e., from 6 to 9), the accuracy achieved by Create decreases dramatically. The reason can be that larger  X  stretches the organizational structure too much and put lots users into the wrong so-cial classes. For example, it is nearly impossible for users to achieve 9 as the average social class, which is actually the largest social class in the sampled fully aligned organi-zational chart.

Social stratification results of Create and ASD are given in Figures 6-7, where Figure 6 shows the results achieved by Create and ASD at each social class (evaluated by preci-sion and recall respectively) and Figure 7 shows their overall performance (evaluated by Accuracy, MAE, MSE and R 2 ).
From the microscopic perspective, we observes that Cre-ate performs better than ASD consistently at all social classes. Create achieves both 1 . 0 precision and 1 . 0 recall at social classes 1 , 2, i.e., Create identifies the top 2 man-agement levels of the company correctly. The performance of Create at other social classes is also very promising. For instance, the precision scores achieved by Create at social classes 3 , 4 , 7 , 8 (besides 1 , 2) are either 1 . 0orclose to 1 . 0 and the recall scores of Create at social classes 5 , 6 are also very high, which all outperform those of ASD with significant advantages.

From a macroscopic perspective, the performance of Cre-ate in stratifying the whole user set in ESN is very excellent and much better than that of ASD . The Accuracy, MAE, MSE and R 2 scores achieved by Create are 0 . 68, 0 . 43, 0 . 71 and 0 . 37 respectively, which all outperforms those achieved by ASD . For example, the accuracy achieved Create is al-most the triple of that obtained by ASD , while the MAE and MSE obtained by Create are merely the 28% and 19% of those achieved by ASD . In addition, ASD gets negative R 2 scores in identifying social classes of users in ESNs, which denotes that the identified users X  social classes are massively disordered and have no linear correlation with the social class ground truth at all.
Create has proved its excellent e  X  ectiveness in strati-fying users in ESNs, based on which, we further study its performance in inferring the potential supervision links be-tween pairs of consecutive social classes, whose results are evaluated by AUC, Precision@100 in Table 1 as well as by Recall, Precision and F1 in Figure 8.

In Table 1, we compare Create (of di  X  erent manage-ment thresholds K ) with all the other baseline methods, where Create (with parameter K = 15 and 20) performs the best. Compared with Create-sl (or Create-s ), Cre-ate (or Create-sm ) which has the matching step can iden-tify supervision links more e  X  ectively. For instance, Cre-ate (with K = 15) outperforms Create-sl by over 20% in AUC and 6% in Precision@100, and Create-sm (with Table 1: Performance comparison of di  X  erent orga-nizational chart inference methods.
 parameter K = 15) outperforms Create-s with remark-able advantages. It demonstrates that matching step can e  X  ectively prune non-existing supervision links and preserve the micro-level width requirement (i.e., the K-to-one con-straint).

Compared with Create-sm and Create-s , Create which infers the potential supervision links based on heterogeneous information in ESNs instead of merely regarding the social links as supervision link candidates achieves much better results. For example, in Table 1, the AUC of Create is 38% higher than that of Create-sm and Create-s , while the Precision@100 of Create is also roughly 10% higher as well. In addition, in Figures 8, the Recall, Precision and F1 obtained by Create is almost triple of those achieved by Create-sm . It confirms the argument that heterogeneous information in ESNs can capture the relationships among colleagues (especially between managers and subordinates).
In addition, we also compare Create with traditional un-supervised link prediction methods, including CN, JC and AA, and the advantages of Create are very obvious accord-ing to Table 1: Create can outperform all these unsuper-vised link prediction methods with significant advantages.
In social class matching, the management threshold pa-rameter K plays a key role in constraining the number of supervision links connected to each managers. The sensitiv-ity of parameter K will be analyzed in this section, where the results achieved by Create (with di  X  erent K s) evaluated by di  X  erent metrics are available in Figure 9. Small manage-ment threshold K (e.g., 5) limits each manager X  X  subordinate number to 5 and will preserve the supervision links with ex-tremely high likelihood only but may miss many promising ones. However, as threshold K increases, more links with high likelihood will be preserved and the metric scores in-crease consistently. Meanwhile, when the threshold K goes to 25, the performance of Create degrades dramatically. The possible reason can be that, with larger threshold, each manager can have too many supervision links, which may exceed the subordinates they have in the real-world.
Enterprise social networks are important sources for em-ployees in companies to get reliable information. Ehrlich et al. [11] propose to search for experts in enterprise with both text and social network analysis techniques. They pro-pose to examine the users X  dynamic profile information and get the social distance to the expert before deciding how to initiate the contact. Enterprise social networks can lead to lots of benefits to companies and the motivations of enter-prise social network adoption in companies are studied in details in [10]. Users in enterprise social networks will con-nect and learn from each other through personal and pro-fessional sharing. People sensemaking and relation building on an enterprise social network site is studied in by DiMicco et al. [9]. In addition, social connections among users in enterprise social networks usually have multiple facets. Wu et al. [33] propose to study the study the multiplexity of so-cial connections among users in enterprise social networks, which include both professional and personal closeness.
From social networks, some works have been done to infer the hierarchies of individuals [7, 24, 15, 19]. A measure, agony, is proposed in [15], by minimizing which the authors propose a hierarchy detection method. A random graph model and markov chain monte carlo sampling is proposed by Clauset et al. in [7], which can address the problem of structural inference of hierarchies in networks. Maiya et al. propose to identify the hierarchies in social networks to achieve the maximum likelihood in [24]. All the above three papers focus on dividing individuals into di  X  erent hierarchies only. A o  X  ine hierarchical ties inference method has been proposed by Jaber et al. in [19] to discover o  X  ine links among people based on a time-based model. However, none of these papers can recover the whole organizational chart.
Cross-social-network studies has become a hot research topic in recent years. Kong et al. [21] are the first to pro-pose the concepts of  X  X nchor links X ,  X  X nchor users X ,  X  X  X ligned networks X  etc. A novel network anchoring method is pro-posed in [21] to address the network alignment problem. Cross-network heterogeneous link prediction problems are studied by Zhang et al. [35, 36, 40, 38] by transferring links across partially aligned networks. Besides link prediction problems, Jin et al. proposes to partition multiple large-scale social networks simultaneously in [20] and Zhang et al. study the community detection problem across partially aligned networks in [37, 39]. Zhan et al. analyze the infor-mation di  X  usion process across aligned networks [34].
In this paper, we have studied the organizational chart inference ( IOC ) problem based on the heterogeneous online ESNs. To address the IOC problem, a new chart inference framework Create has been proposed in Section 3. Cre-ate consists of 3 steps: (1) regulated social stratification, (2) supervision link inference with social meta paths aggrega-tion, and (3) regulated social class matching. Experiments on real-world ESN and organizational chart dataset have demonstrated the e  X  ectiveness of Create . This work is supported in part by NSF through grants CNS-1115234, Google Research Award, the Pinnacle Lab at Singapore Management University, and Huawei grants. [1] Be the boss, not a friend. [2] Organisation-organizational structure-organisational [3] Rich, poor, and middle class life. [4] The social foundations of fashion change in the late [5] L. Adamic and E. Adar. Friends and neighbors on the [6] M. Aoki. Horizontal vs. vertical information structure [7] A. Clauset, C. Moore, and M. Newman. Structural [8] R. Diestel. Graph Theory . Springer, 1997. [9] J. DiMicco, W. Geyer, D. Millen, C. Dugan, and [10] J. DiMicco, D. Millen, W. Geyer, C. Dugan, [11] K. Ehrlich, C. Lin, and V. Gri ths-Fisher. Searching [12] A. Elishar, M. Fire, D. Kagan, and Y. Elovici. [13] J. Grant. Class, definition of. In R.J. Barry Jones, [14] H. Gui, Y. Sun, J. Han, and G. Brova. Modeling topic [15] M. Gupte, P. Shankar, J. Li, S. Muthukrishnan, and [16] M. Hasan and M. J. Zaki. A survey of link prediction [17] S. Hill. Elite and upper-class families. In Families: A [18] R. Hyndman and A. Koehler. Another look at [19] M. Jaber, P. Wood, P. Papapetrou, and S. Helmer. [20] S. Jin, J. Zhang, P. Yu, S. Yang, and A. Li. [21] X. Kong, J. Zhang, and P. Yu. Inferring anchor links [22] V. Krebs. Mapping networks of terrorist cells. [23] A. Kroch. Dialect and style in the speech of upper [24] A. Maiya and T. Berger-Wolf. Inferring the maximum [25] R. Merton. The matthew e  X  ect in science, ii: [26] N. Nagappan, T. Ball, and A. Zeller. Mining metrics [27] J. Rawlings, S. Pantula, and D. Dickey. Applied [28] Y. Sun, R. Barber, M. Gupta, C. Aggarwal, and [29] Y. Sun, J. Han, X. Yan, P. Yu, and T. Wu. Pathsim: [30] US Army Training and Doctrine Command. Terrorist [31] Z. Wang, A. Bovik, H. Sheikh, and E. Simoncelli. [32] L. Warwick-Booth. Social Inequality: A Student X  X  [33] A. Wu, J. DiMicco, and D. Millen. Detecting [34] Q. Zhan, S. Wang J. Zhang, P. Yu, and J. Xie. [35] J. Zhang, X. Kong, and P. Yu. Predicting social links [36] J. Zhang, X. Kong, and P. Yu. Transferring [37] J. Zhang and P. Yu. Community detection for [38] J. Zhang and P. Yu. Integrated anchor and social link [39] J. Zhang and P. Yu. Mcd: Mutual clustering across [40] J. Zhang, P. Yu, and Z. Zhou. Meta-path based
