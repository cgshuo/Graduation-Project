 The goal of result diversification is to maximize the cover-age of query subtopics while minimizing the redundancy in the search results. Intuitively, it is more desirable for a di-versification system to cover independent subtopics since it would retrieve sets of non-overlapped relevant documents, which leads to less redundancy in the search results. Unfor-tunately, existing diversification methods assume that query subtopics are independent and ignore their relations in the diversification process. To overcome this limitation, we pro-pose to exploit concept hierarchies to extract query subtopics and infer their relations. We then apply axiomatic approaches to derive a structural diversification method that can lever-age the subtopic relations in result diversification. Exper-imental results over an enterprise collection show that the relations among query subtopics are useful to improve the diversification performance.
 H.3.3 [ Information Search and Retrieval ]: Retrieval Models Algorithm structural diversification, axiomatic approaches, enterprise search, concept hierarchy
The goal of search result diversification is to cover all subtopics of the query while minimizing the redundancy in the top-ranked documents to satisfy different informa-tion needs of all users [3]. The basic idea of the existing subtopic-based methods [1, 2, 12, 10] is to first identify a set of subtopics for a given query, and then iteratively select
Figure 1: An example of the concept hierarchy. documents to maximize the coverage of query subtopics in the search results.

One major limitation of these existing methods is that they assume query subtopics are independent and ignore the relations among query subtopics. However, the assump-tion does not hold, and most query subtopics are related to each other. Let us consider query  X  X orm X , which is used in TREC 2010 Web track. According to the full query file created by NIST assessors, the query has three subtopics:  X  X omputer worms X , X  X orms in nature X  X nd X  X onficker worm X . It is clear that the subtopic  X  X omputer worms X  is more re-lated to  X  X onficker worm X  since Conficker worm is a specific computer worm as shown in Figure 1.

Intuitively, subtopic relation is an important factor that needs to be considered in result diversification. When two subtopics are more related, they have a larger set of over-lapped relevant documents. Thus, the top-ranked docu-ments covering two independent subtopics are more desir-able than those covering two related subtopics since they will provide better coverage and less redundancy in the search results. For example, the top-ranked documents covering subtopics X  X omputer worms X  X nd X  X orms in nature X  X re more desirable than those covering  X  X omputer worms X  and  X  X on-ficker worm X  since the former can satisfy a wider range of information needs. Unfortunately, existing methods ignore the subtopic relations and would mistakenly think that these two lists are equally diversified, which leads to non-optimal diversification performance. Clearly, it is necessary to study how to incorporate relations among query subtopics to im-prove diversification performance.

In this paper, we propose a novel structural diversification framework that incorporates relations among query subtopics to diversify results based on concept hierarchies, as shown in Figure 1. We first describe how to select nodes from the hierarchy as subtopics for a query. We then use an ax-iomatic approach to derive a structural similarity function for subtopics based on their structural relations on the con-cept hierarchy. Finally, we extend an existing diversification method to incorporate the structural similarity function into the diversification process. The proposed structural diver-sification method iteratively selects documents covering im-portant subtopics that are less structurally similar to the subtopics covered by the selected documents.

The proposed structural diversification method is expected to perform well on the domains with high-quality concept hi-erarchies. Thus, we conduct experiments in the Enterprise search domain, and find that the proposed method outper-forms the state of the art diversification methods.
Diversification aims to rank documents based on both their relevance and diversity. Previous studies have shown that subtopic-based diversification methods often outper-form other methods [10, 15]. In particular, they first identi-fied subtopics, and then used different strategies to diversify documents based on the identified subtopics [1, 10, 17]. Most of the diversification methods assume that query subtopics are independent. However, the assumption does not hold. Most query subtopics are independent no matter whether they are identified using existing methods such as query suggestions [10] or by human assessors for TREC diversity collections [3, 4, 5]. The goal of this paper is to re-examine the assumption and study how to incorporate the relations among query subtopics into the diversification process.
Our work is also related to previous studies on using struc-tural relationships among concepts for retrieval [9, 6, 13]. These studies focused on finding semantically similar terms for query expansion. However, our goal is to study how much new information a subtopic can provide given an ex-isting subtopic which requires a more in-depth analysis of their positions in the concept hierarchy.
A concept hierarchy, such as an ontology, encodes domain knowledge as a hierarchically organized collection of nodes. Each node corresponds to a concept, and the links between nodes indicate semantic relationships between the concepts. The nodes at a higher level contain more general information while nodes at a lower level contain more details. There-fore, the positions of subtopics on the hierarchy can reveal whether they have any overlapped information and can be used to compute the structural similarity between subtopics.
Our basic idea is to exploit the concept hierarchy to iden-tify subtopics and then leverage the structural relations among subtopics in the concept hierarchy to diversify documents. There are two challenges that need to be solved: (1) how to discover query subtopics and infer their structural similari-ties based on a concept hierarchy; and (2) how to leverage their structural similarities to diversify results.
Given a query, we propose to use top ranked documents to find the most relevant nodes from the concept hierarchy as query subtopics. In particular, we assign every top ranked document to its most similar node, and all these selected nodes are regarded as query subtopics. The similarity be-tween document d and node n is computed based on not only the content of n itself but also all of its descendants [16], i.e., sim ( d, n )=  X   X  R ( d, n )+(1  X   X  )  X  n j  X  desc ( n ) where | desc ( n ) | is the number of descendants of n , R ( d, n ) is the relevance score between d and the description of n , and  X   X  [0 , 1] is a parameter that balances the contribution of relevance score of the node itself and average relevance score of its descendants. R ( d, n ) can be computed using any existing retrieval functions.

With the identified query subtopics, we can infer their structural similarity based on their positions on the con-cept hierarchy. Formally, let  X  ( s j | s i ) denote the structural similarity of subtopic s j to subtopic s i , which measures the proportion of information relevant to s j that is overlapped with those relevant to s i .

Note that the similarity could be asymmetric. For exam-ple,  X  ( X  computer worms | Conficker worm )mightnot bethesameas  X  ( X  Conficker worm | computer worms ) because it is used to measure how much information about s has been covered by s i .

Now the challenge is to find an appropriate implementa-tion for  X  ( s j | s i ). We propose to apply an axiomatic ap-proach to solve the challenge, and the details are discussed in Section 4.
With the identified query subtopics we now discuss how to extend existing diversification methods to derive structural diversification functions.

First, let us start with one of the state of the art diversifi-cation functions, i.e., xQuAD [10]. Given query q and previ-ously retrieved documents D , we select a document that can maximize the ranking score Score ( q,d,D ) shown as follows: where S ( q ) is the set of subtopics for query q , P ( d the relevance score of d with respect to q ,and P ( s | q )isthe importance of subtopic s in query q .  X  is a parameter bal-ancing relevance and diversity which is set to 0.6 in the ex-periment. d  X  D (1  X  SubCov ( d ,s )) measures the novelty of the subtopic given previously selected documents, where Note that the subtopic coverage SubCov ( d ,s ) is to measure how much information from subtopic s that has been covered by the previously retrieved document d .

We propose to modify the way of computing subtopic cov-erage by incorporating the structural similarity function be-tween subtopics as follows: where S ( d ) is a set of query subtopics that are relevant to a document as described in Section 3.1. P ( s | s )isthe likelihood that subtopic s can be inferred from s .Itis estimated by the normalized structural similarities between subtopics: where  X  ( s j | s i ) is the structural similarity of s j will be discussed in the next section.

Plugging Equations (3) and (4) into Equation (2), we have the following structural diversification function:
Given two subtopics and their positions on the concept hierarchy, we can know how to traverse from one subtopic to the other. We denote the traverse path from subtopic s to subtopic s j as path ( s i  X  s j ). The path consists of one or multiple segments, where each segment is a directed edge between two nodes that follows the traverse direction. The segments going from a node to its parent node are referred to as UP segments, and those going from a node to its child node are referred to as DOWN segments. UP ( s i  X  s j ) and DOWN ( s i  X  s j ) denote the set of UP and DOWN segments in path ( s i  X  s j ), respectively.

Recall that  X  ( s j | s i ) is the structural similarity of s which measures the proportion of information in s j that can be covered by s i . It is asymmetric because our goal is to penalize the novelty of the subtopic given another subtopic.
Since a node often covers more general information than its children nodes, it is a natural choice to use the traverse path to compute the structural similarities. One possible solution is given as follows: where | X | denotes the number of elements in the set X. For example, | DOWN ( s i  X  s j ) | denotes the number of DOWN segments in the path from subtopic s i to s j on the concept hierarchy. Moreover, f ( x ) is a function that controls how the length of UP or DOWN segments, i.e., x , affect the final structural similarities. Since the subtopics with shorter tra-verse path are often more similar, the function f ( x ) should be inversely proportional to the number of segments x .A possible solution is shown as follows: This function assumes that the similarity is linearly cor-related with the number of segments. In our preliminary study, we have also tried other possible functions, such as the sublinear and superlinear ones, and found that their per-formances are similar.

Note that we treat the UP and DOWN segments sepa-rately because they represent different term relations.  X  [0 , 1] is a parameter in Equation (6) that controls how these two types of segments affect the structural similarities. Un-fortunately, it is unclear how to set the parameter value. To solve this problem, we propose to use axiomatic approaches. In particular, we first define three similarity constraints that capture the desirable properties of any reasonable structural similarity functions, and then use the constraint analysis to set the parameter value so that the function would satisfy all the constraints.

Figure 2: Constraint 3 for structural similarity
Intuitively, each branch on the concept hierarchy covers a piece of information that is different from the information of other branches. A node at higher levels often contains more branches and therefore is a summary of the information con-tained in its descendants. Based on this assumption, we de-fine three constraints that measures the structural similarity of two subtopics based on the proportion of their overlapped information on the concept hierarchy.
The three constraints define a set of basic properties for the structural similarity function so that it can be leveraged in the diversification process. It is unclear whether the con-straints form a complete set of all the desirable properties, and we plan to explore more constraints in the future work.
With the constraints, we analyze the structural similarity function shown in Equation (6) to check whether it satisfies the constraints.

The function always satisfies the first constraint because
Next, we analyze Constraint 2. We denote | UP ( s i  X  s ) | = x and | UP ( s i  X  s l ) | = y .Andweknow y&gt;x  X  1 given the positions of these three subtopics. Thus, It is clear that the function satisfies the Constraint 2.
Finally, we check whether the function satisfies the last constraint. We denote | DOWN ( s i  X  s k ) | = x and | UP ( s s ) | = y ,where x  X  1and y  X  1. Thus, we have  X  ( s k | s i )  X   X  ( s l | s i )=  X  + (1
In order to satisfy the constraint, i.e.,  X  ( s k | s i ) 0, we have
Since we have x  X  1and y  X  1, we can derive the bounds for the parameter is  X   X  2 3 . Thus, we set  X  to be 2 3 .
In summary, the following structural similarity function that will be used in our structural diversification function (i.e., Equation (5)):
To evaluate the effectiveness of the proposed structural diversification method, we need to conduct experiments on an important search domain with high-quality concept hi-erarchies. We choose the enterprise search domain since, with the increasing usage of taxonomies in enterprise search [8], almost every enterprise often has its own concept hierar-chies, which are either manually built by the domain expert or automatically inferred from the enterprise data. In par-ticular, we use an enterprise search diversification data set constructed in our previous study [16]. The data set consists of: (1) a document collection with 477,800 Intranet pages; (2) a concept hierarchy related to the enterprise; (3) a query set with 50 queries. For each query, human assessors create a set of subtopics and label the relevance of the document with respect to each subtopic. The average number of subtopics per query is 4.12.

Methodology: We first retrieve a list of relevant doc-uments and use them to select subtopics from the concept hierarchy as described in Section 3.1. We then apply the structural diversification functions shown in Equation (5).
Baselines: To compare the proposed methods with the state of the art, we implemented the following methods: (1) NoDiverse , which ranks search results based on only rele-vance using Dirichlet Prior retrieval function [14]; (2) Two variants of xQuAD [10] based on the subtopic identification strategies: (a) QuerySugg , which uses suggested queries of Web search engines as subtopics [11]; and (b) FixedLevel , which selects subtopics from the top level of the concept hi-erarchy [7]. Note that all the diversification methods re-rank the results of NoDiverse .

Evaluation Measures: We use one of the official mea-sures used for the diversity task at TREC Web track [3], i.e.,  X  -nDCG @20 as the primary measure.  X  is set to 0.5. We also report the performance measured with  X  -nDCG @5 and  X  -nDCG @10.  X  -nDCG actually assumes that the subtopics are independent, which makes it difficult for the structural methods to get good performance. Therefore, it can prove that the structural method is more effective in diversifying results if it outperforms the state-of-the-art methods based on  X  -nDCG .
We first compare the optimal performance of structural diversification method and the baselines. All parameters except  X  in different diversification methods are tuned to the optimal values. The results are shown in Table 1. and indicate that the performance improvement of Structural over FixedLevel and QuerySugg are statistically significant at 0.05 level. It is clear that the proposed structural diversi-fication method can statistically significantly outperform all the baseline methods. The better performance suggests that the structural relationships among subtopics are important in the diversification process.

Another interesting observation is that existing diversifi-cation methods cannot effectively diversify the results from this enterprise collection. We find that this is caused by the quality of the subtopics. QuerySugg method uses query sug-gestions from Web search engine, which are independent to the collection and thus cannot effectively diversity the doc-uments in the enterprise collection. FixedLevel is forced to select subtopics at the top level, and these subtopics may not be the most effective ones to diversify results.
The structural diversification method is mainly different from the xQuAD methods in two components. One is the subtopics extracted from the concept hierarchy and the other is the structural diversification function. In order to check Table 3: Constraint Verification (  X  -nDCG@20) whether both parts contribute to the performance improve-ment, we also implement a variant of xQuAD that uses subtopics extracted from the concept hierarchy, which could enable us to focuses on the effectiveness of individual com-ponents. The optimal  X  -nDCG@20 performance of this vari-ant is 0.435 which is better than other variants of xQuAD , i.e., 0.375 of QuerySugg and 0.341 of FixedLevel , while worse than the performance of structural diversification method, i.e., 0.459. Clearly, both the subtopic extraction and struc-tural diversification components are effective.

Finally, we train the parameters used in the diversification methods by performing a 5-fold cross validation over the 50 queries. The training is optimized for the primary evalua-tion measure, i.e.,  X  -nDCG @20. Table 2 shows the results of cross validation. We can see that, with the trained pa-rameters, the proposed structural diversification method can still perform significantly better than the baseline methods.
We have defined three constraints to derive structural sim-ilarity functions for query subtopics. To verify whether the constraints are reasonable, we design the following experi-ments to test the effectiveness of each constraint.
First, we construct document sets from the search results to make sure that, for every set, the associated subtopic structure fits the ones described in the three constraints. For example, d i , d k and d l are three documents in the original result which are related s i , s k and s l in Figure 2, respec-tively. Therefore, { d i , d k , d l } is a combination of documents whose structure fits the constrain structures.

After that, for each document set, we generate two sets of diversification results: ConsPerf , which contains the re-rankings the documents based on the corresponding con-straint; and NonConsPerf , whose results violate the con-straint. Let us consider the above example again. The re-ranking { d i , d l , d k } satisfy constraint 3 and the re-ranking { d i , d k , d l } does not. Table 3 compares the average diver-sification performance of the two sets The performance of ConsPerf is better in every constraint, which indicates that the constraint satisfaction for a structural similarity function is related to the structural diversification performance.
The paper aims to break the limitation of existing diver-sification methods, which assume that query subtopics are independent to each other. The contribution of this paper can be summarized as follows: (1) we propose to use the structural relations among subtopics to diversify search re-sults; and (2) we use an axiomatic approach to derive the structural similarity function for subtopics based on their positions on the concept hierarchy, and then derive new di-versification methods with these similarity functions.
Enterprise search is a domain that expects to benefit the most from the proposed diversification methods, since the enterprise data often contain concept hierarchies that are more complementary to the information from enterprise doc-ument collections. Our experimental results show that the structural diversification method can significantly outper-form the state-of-the-art methods.

There are many interesting future directions. First, we will study how to adaptively apply the structural diversifi-cation method based on the quality of hierarchy. Second, we will exploit more constraints to derive new structural diversification methods.
This material is based upon work supported by the Na-tional Science Foundation under Grant Number IIS-1017026 and HP Labs Innovation Research Program. We thank the anonymous CIKM reviewers for their useful comments.
