 Sensor networks are made of autonomous devices that are able to collect, store, process and share data with other de-vices. Spatiotemporal region queries can be used for re-trieving information of interest from such networks. Such queries require the answers only from the subset of the net-work nodes that fall into the query region. If the network is redundant in the sense that the measurements of some nodes can be substituted by those of other nodes with a certain de-gree of confidence, then a much smaller subset of nodes may be sufficient to answer the query at a lower energy cost. We investigate how to take advantage of such data redundancy and propose two techniques to process spatiotemporal re-gion queries under these conditions. Our techniques reduce up to twenty times the energy cost of query processing com-pared to the typical network flooding, thus prolonging the lifetime of the sensor network.
 H.2 [ Database Management ]: Query Processing; Dis-tributed Databases Algorithms, Performance Sensor networks, Spatiotemporal region query processing
Sensor networks consist of nodes with the ability to mea-sure, store, and process data, as well as to communicate wirelessly with nodes located in their wireless range. There are many application domains where sensor networks are well suited [16], e.g., environmental monitoring, warehouse management, traffic organization and surveillance. Sensor nodes are typically battery operated, which imposes hard
This work is supported in part by NSERC Canada. We would like to thank I. Nikolaidis for valuable discussions. constraints on their lifetime since query processing requires energy-wise costly communication among nodes. Therefore, energy-efficient query processing techniques are of utmost importance within a sensor network, and that is the main focus of this paper.

In domains such as GIS [1], a typical query involves build-ing a map of values for a given region, e.g.,  X  X ind the humid-ity for each point of lot X12 at 2pm yesterday X . Since it is not practical to have a sensor node in each point of the monitored region, one has to settle for approximated values for those points where a sensor node is not present. This leads to the idea of building a map with values for each point in the map, with a confidence level attached to each value. In practice, this leads to two maps, one with the re-quested values and another one with the confidence levels. In a more general case, the values of interest could form a set of maps, one for each time point at a given time granu-larity, e.g.,  X  X ind the hourly humidity values for the past 12 hours for each point of lot X12 as long as the confidence in the value is above 40% X . We call this new type of query a SpatioTemporal Data Map (STDMap) query. An important fact to note is that in the same way some points of the map are  X  X overed X  by the approximations of one or more sensor nodes, the nodes themselves can also be covered by other sensor nodes. In effect this means that some nodes could take advantage of such coverage redundancy and not partic-ipate in the query processing, thus saving energy, without loss in the quality of the answer. As sensor nodes spend most of their energy during communication [14], we aim at minimizing the amount of data exchanged during query pro-cessing, further extending the lifetime of the network.
We study this problem over historical sensor data in a wireless sensor network, where all sensor nodes have similar capabilities, sensed measurements are stored locally, each node is only aware of the existence of the other nodes lo-cated within its communication range, and the query can be initiated at any node. The advantages of this environment are network robustness, a balanced use of sensors X  energy resources, and a wide range of application scenarios where the presented solutions can be used. An application domain where such a query and sensor network fit well is environ-mental monitoring. The sensor nodes could be deployed from a plane over a region of interest. Upon activation, each node starts observing periodically various phenomena, such as the humidity of the soil. Park rangers patrolling through the region can access the network through any node in their proximity using a laptop. When certain events such as veg-etation diseases or small fires are observed, the ranger could query the network about historical measurements, which may lead to understanding what has caused such events.
Ourmaincontributioninthispaperistheproposalof two techniques to address the problem of approximate query processing in sensor networks, namely: EFM, which is an energy-aware parallel flooding, where a node decides whether it should participate or not in the query answering based on sound criteria including the amount of energy it has; and MSM, which is a technique that uses the completion of the query answer itself as a guide to traverse the region X  X  nodes. Note that both techniques aim at taking advantage of the redundancy mentioned earlier. Through extensive experi-mentation, we show that the proposed in-network process-ing of STDMap queries reduces by up to twenty times the energy use compared to the typical network flooding that re-trieves all the relevant sensor measurements and assembles the STDMap answer off-line.

The remainder of the paper is organized as follows. Sec-tion 2 describes research related to ours. Section 3 de-fines and discusses the STDMap query. Section 4 presents the characteristics of the wireless sensor network environ-ment and introduces two algorithms for processing STDMap queries in this environment. Section 5 presents the experi-mental evaluation and Section 6 concludes the paper.
Sensor network technology lays at the confluence of sev-eral disciplines, including data management. Among the numerous issues under investigation, an important one is query processing due to its use in the retrieval of the data collected by the sensor network. Several influential works in this direction are [11, 14, 18]. They focus on retrieving real-time sensor measurements, possibly aggregated, and con-sider that each measurement is independent of one another. In real life this assumption does not generally hold due to the properties of the monitored phenomena (e.g., humidity varies smoothly between close locations). Query processing with approximate answering uses in various ways such prop-erties of the monitored phenomena to substantially reduce query processing costs. Thus, it has recently raised much interest from the research community.

In [6] the query answers are estimated using a statistical model for the sensors X  readings, where the model captures the redundancy and correlation in sensor measurements. The sensors are interrogated only when the uncertainty is high, which reduces the query processing costs substantially. To improve the fault tolerance of query processing for ag-gregations, duplicate insensitive sketches are used in [3] to produce accurate approximations of the aggregate answers. In [4], the authors exploit the correlation and temporal re-dundancy among the readings of each sensor to compress the short-term historical mea surements. Once compressed, the measurements are transmitted to a base station for long-term storage. Spatial correlation in sensor readings is used in [19] to reduce the cost of processing aggregate queries. Caching the sensors X  readings is used in [7] to reduce the cost of retrieving the sensor data, with the users specify-ing their tolerance for stale data in the query. Kotidis [13] introduces the snapshot queries as a different solution for ap-proximate answering of queries, where a snapshot query is a query processed over a representative subset of the query relevant nodes. The correlation in sensors X  measurements is also exploited in [5] to generate conditional query plans, where low cost attributes are used to determine the best plan for acquiring the high cost sensor measurements.
A common representation of information in environmen-tal remote sensing [1] is in the form of a map capturing the spatial distribution of data (Figure 1), where each map point represents a spatial area and its associated value rep-resents the state of the monitored phenomenon in the area corresponding to the point. Query support for such a rep-resentation is important for applications where the spatial distribution of data is more important than individual data values. The map representation for sensor network data can be constructed straightforward by first collecting the sensor measurements from all sensor nodes located in the region of interest, followed by the construction of the map off-line. However, collecting the measurements from all these sen-sors (called relevant nodes) may be avoided if the answers of some nodes can be approximated by the answers of other nodes. That is, the measurements from only a subset of the relevant nodes may be sufficient to construct the map. In-deed, it is not practical to have a sensor node in each point of the monitored region, and therefore the values used for most of the map points must be approximated using the answers of the sensors located nearby. As well, due to the inherent correlation among the states of physical phenom-ena at close locations, the measurement of any sensor can be approximated with a certain degree of confidence by the measurement of other sensors located nearby. A map rep-resentation for sensor data has been first used in [8], but, differently from out work, each pixel in the map represents a sensor in the monitored region and its intensity indicates the sensor measurement.

Let us consider two locations where we are interested in the state of a monitored phenomenon: location s where a sensor node S exists and location l where there is no sen-sor node. S can provide a measurement for the monitored phenomenon only at location s . For location l , we can ap-proximate a state with the measurement for location s ,with some degree of confidence. We model the confidence of a node as a function C ( s, l ), which represents the confidence of the sensor S that its measurement taken at location s is the same at location l . The choice of the function C ( s, l )de-pends on the monitored phenomenon and the capabilities of the sensing unit, and it is irrelevant with respect to the tech-niques presented in this paper. Typically C ( s, l ) decreases with the increase in the distance between s and l .Notethat our notion of confidence differs from the one used in [6]. Their confidence values represent the uncertainty with re-spect to approximated sensor readings, while ours captures the uncertainty in the validity of an actual sensor reading for a different spatial location than where it was acquired.
The SpatioTemporal Data Map (STDMap) query sup-ports the map representation of the sensor network data. Assuming a confidence function C(s,l) which is dependent of the sensor network setting but is query-independent, we denote the query by STDMap (qID,sr,tr,ct) , with the follow-ing characteristics:
Note that each sensor node has a confidence in approx-imating the state of the monitored phenomenon with its measurement for every possible location. Unfortunately, in-terpolating the measurements of all sensors for each location using their confidences is not practical. Distributed regres-sion is used in [9] to model spatiotemporal redundancy in sensors X  measurements, where the user is responsible for pro-viding the location of kernels and the set of basis functions. This is not feasible for large sensor network deployments. In this paper we associate with a map point the measure-ment with the highest confidence among all approximations obtained during query processing, reserving the problem of interpolating the sensors X  approximations for future work.
Before going further let us introduce the following defini-tions which are necessary for the remainder of the paper:
Definition 1. Given a confidence function C ( s, l ) and a confidence threshold ct , the coverage area of a sensor node is the area around the node in which the confidence of the sensor is above the threshold for every point in the area.
Definition 2. Assuming the confidence function is uni-form for all directions from a sensor node, the coverage range c r of a sensor node is the radius of the circle, cen-tered in the node, which forms its coverage area.
As coverage areas can overlap (depending on the inter-sensor distance, the confidence function and the confidence threshold), the coverage areas of some sensors may be cov-ered by other sensors. In this situation, the STDMap query
For areas where values with confidence above ct are not available, the map stores either null or values with confi-dence below ct from nodes that have answered the query. can be answered using a subset of the relevant sensor nodes, thus saving communication and processing costs. For in-stance, in Figure 2 sensor nodes A , B , C and D have con-fidence above ct in their approximations for any point of the area covered by E , and thus the measurements of E are not required for answering the query. This is possible as the STDMap query does not require in its answer the mea-surement with the highest possible confidence, but with a confidence higher than the confidence threshold ct .
Since the coverage areas of the sensor nodes located in the proximity of the query X  X  spatial region may intersect the region, finding the query answer for a location inside the query region may require contacting nodes located outside the region, leading to the following:
Definition 3. The extended query region is the region where the sensor nodes whose coverage areas intersect the query X  X  spatial region can be located.

Thus, any technique for processing STDMap queries must be able to contact the nodes located in the extended query region. Given a confidence function and a confidence thresh-old, the extended query region is formed by the extension of the query X  X  spatial region in every direction with the cover-age range as shown in Figure 3.

Due to the nature of the environment where the sensors are deployed, it is possible that the approximations of two neighboring sensors for the same location are inconsistent. This could be due, for instance, to possible obstacles affect-ing the expected variation of the monitored phenomenon. We leave the problem of inconsistent approximations for fu-ture work, and we assume in this paper that the nodes cov-ering a certain location provide consistent approximations.
We consider a wireless, peer-to-peer, sensor network with fixed nodes that have equal roles in the functionality of the network. A query can be introduced into the network through any of the sensor nodes, with query answers located in some (possibly all) of the nodes. Due to the wireless network characteristics, a sensor node can communicate di-rectly only with the sensors located within its wireless range, which form its neighborhood. We assume that each node knows its location (e.g., through GPS), as well as the loca-tion of its neighbors (collected during network activation). Sensors take measurements periodically. The collected val-ues are stored locally for future querying, and have attached the time-stamp corresponding to the time of measurement. A major constraint on sensor nodes is their limited energy supply. Since the energy required by sensing and computa-tion is up to three orders of magnitude less than the energy used for communication [14], we are interested in minimizing the energy cost of communication during query processing.
We have shown in [2] that for spatiotemporal region queries a two-phase query processing approach is more efficient that the typical network flooding. By forwarding the query to all network nodes, the network flooding contacts many nodes in addition to those that hold the query answers, which increases substantially the energy cost of processing. The main advantages of this two-phase approach are that the query is disseminated to only a small subset of the network nodes and that spatial processing of sensor data can be per-formed closer to the data sources. Thus, we also use a two-phase approach in this paper. We break each processing al-gorithm into two phases: one for finding a routing path from the query originator node to the query region sr , the other for collecting the query answers from the relevant nodes and returning the answers to the originator node.

While the proposed techniques differ in their processing strategy for the second phase, they use the same routing algorithm for the first. We use a simple greedy approach to discover a routing path from the query originator node to a node located near the center of the query X  X  spatial re-gion, called coordinator node. At each step of the route discovery, the current node forwards the query to its neigh-bor located closest to the center of the query region. Once a node located in the query X  X  spatial region receives the query and none of its neighbors is closer than itself to the cen-ter of the query area, this node assumes coordinator role. Greedy-based routing methods for position based routing have been shown to nearly guarantee delivery for dense net-work graphs [17], as it is the case for sensor networks. If the sensor network is not dense, more advanced geographic routing techniques such as GPSR [12] could be used to im-prove the route discovery for the first phase. Note that if the query originator node is located inside the query X  X  spa-tial region, which includes the case where the query window covers the whole network, the first phase is not required. We present in the following the second phase for each query processing technique. When the queries are uniformly dis-tributed over the monitored region, the coordinator role is also uniformly distributed among the sensor nodes. For non-uniform query distributions, the nodes better positioned to have coordinator role would be prone to early energy deple-tion, i.e., failure. In that case other nodes would be chosen as coordinators, not impairing the proposed techniques.
The Energy-aware Flood for STDMap (EFM) technique uses a flooding strategy in its second phase, where a node decides to participate in the query answering after consider-ing the state of its neighbors. EFM uses information about the amount of energy nodes have in order to decide which nodes should participate in query answering. Thus, EFM is an energy-aware technique.

Query processing starts when the coordinator node broad-casts the query to its neighbors, regardless of their state. A node receiving a query for the first time checks if its cover-age area is covered by its neighbors. If it is not covered, the node decides that its answer is required and sets its state to SEND. If the area is covered, the node does not have yet sufficient information about its neighbors to safely decide to skip answering, and therefore sets its own state to OPEN. Next, the node broadcasts the query and its current state.
Once a node has received the query broadcast from all its neighbors, it checks if its neighbors that have decided to an-swer are covering its area, i.e., if its area is covered by nodes in SEND state. If its area is covered, the node can safely skip answering and it sets its state to SKIP. After this check, each node broadcasts a state update message to its neigh-bors and waits for the state updates from its neighbors. If aneighbor B of a node A has changed its state from OPEN to SKIP, it means that B is fully covered by its neighbors in SEND state, and thus any overlap it has with A is also covered. Consequently, a node can safely skip answering if its area is fully covered by its neighbors in SEND or SKIP states. Such a node changes its state to SKIP, but this infor-mation is not exchanged. Not exchanging the information on this status update is safe, as any node that is counting on the coverage of its neighbor in SKIP state remains covered (through transitivity) by the nodes covering its neighbor.
At this point, a node can be in any of the three possible states (SEND, SKIP or OPEN). If a node X  X  state is SEND, the node returns its answer to the neighbor it first received the query from. If its state is SKIP, nothing has to be done as the node X  X  coverage area is covered by other nodes that will answer. If its state is OPEN, the node must decide based on the information about its neighbors whether to send or to skip. To determine correctly whether it has to send its answer, however, it needs to know if information about its own area that is covered by neighbors that are also in OPEN state will be sent (by the neighbors directly or by other nodes covering the neighbors). This is a poten-tial problem as the covering relation is symmetric 2 .Two nodes in OPEN state which partially cover each others ar-eas have to independently make a consistent decision. In particular we must avoid that two nodes decide to skip and no other node will send information about their overlapping area. The information about the current state of its neigh-bors is not sufficient to take a consistent decision. Among the possible solutions for taking a consistent decision (e.g., node ID, turns, tournaments), we choose to use the amount of energy left in nodes. This choice leads to a more balanced energy usage at the nodes, as we show in Section 5.
In EFM, we use the amount of energy left in nodes to determine which one of a pair of nodes in OPEN state with overlapping coverage areas will ensure the coverage of the overlap (the energy information can be exchanged during the broadcasting of the state update message). For each pair, the node with more energy will be responsible for the coverage of the overlapping area. Thus, a node A in OPEN state with more energy will not count on a neighbor B in OPEN state with less energy to cover its area, and vice versa, B will count on the coverage by A , i.e., B will consider A to be in SEND state. This policy guarantees that for each pair of neighboring nodes in OPEN state with overlapping areas only one node will assume that the overlap is covered by the other node. If two nodes have the same amount of energy left, they use their unique node IDs as a tie-breaker. Any other tie-braking policy would work as long as both nodes make a consistent decision. After each node updates its local representation of the state of the OPEN neighbors according to the above policy, it checks again if its area is covered by neighbors in SEND or SKIP states. If its area is not covered, the node will assume its answer is required and sends it to the coordinator node. Otherwise, if its area is covered, it skips answering. Note that if a node A skips answering, this
If the coverage areas of two neighbors overlap, each node may consider the other node covering the overlapping area. Algorithm 1: EFM Technique -Phase 2 does not affect a neighbor B with less energy that counts on A for covering their overlap, since other nodes will answer for A  X  X  area. This discussion is summarized in Algorithm 1 and the correctness is stated in the following lemma:
Lemma 1. Any area from the query X  X  spatial region cov-ered by sensor nodes will be covered in the final answer using the EFM technique.

Proof. We assume the network within the extended query region is connected and every area within the query X  X  spa-tial region it covered by the coverage areas of one or more sensor nodes. Let us assume there is an area A from the query X  X  spatial region that is covered by exactly the set of nodes { N 1 , ..., N k } ,and A is not covered in the answer, i.e., none of the nodes N 1 , ..., N k is sending its answer to the coordinator node. Thus nodes N 1 , ..., N k are in SKIP state. However, there is j  X  1 ...k such that N j has maximal energy among N 1 , ..., N k . The node N j cannot skip. There is no neighbor N  X  of N j covering A having higher energy so that node N j could count on N  X  to cover A (if such a node would exist, it would be among N 1 , ..., N k ,and N j would not be the node with the highest energy in that set). Therefore, node N j must be in SEND state, and area A is covered in the final answer. The second processing technique for STDMap queries is MSM (Map-guided Search for STDMap). Differently from the EFM technique, MSM uses a partial query answer to guide the processing. MSM finds the STDMap answer by forwarding the query and the current partial STDMap an-swer. At each step, the current sensor node forwards the query to its neighbor that can provide answers with confi-dence above the confidence threshold ct to most map points Algorithm 2: MSM Technique -Phase 2 that do not hold an answer yet. If a neighbor of the current sensor node has a coverage area where every location has already been covered with confidence higher than ct ,then the neighbor is not contacted at all during query processing.
The query message received by a node contains both the query and the partial STDMap answer as obtained so far. The node first answers the query and adds its answers to the STDMap answer. Before forwarding the query to any neigh-bor, the neighbors that are not located within the extended query area are discarded from the list of candidate neigh-bors. The algorithm goes iteratively through the candidate neighbors and forwards the new partial STDMap answer to the best of them until either the query area is fully cov-ered or there are no more candidate neighbors. The query answering is considered complete when STDMap X  X  map lay-ers have associated approximated values for every location. This procedure is formalized in Algorithm 2, where the gain function counts the number of map points covered by a node that does not have any approximated measurement associ-ated yet. The correctness is stated in the following lemma:
Lemma 2. Any area from the query X  X  spatial region cov-ered by sensor nodes will be covered in the final answer using the MSM technique.

Proof. By construction of the MSM technique. We as-sume the network within the extended query region is con-nected and every area within the query region is covered by the coverage areas of one or more sensor nodes. The MSM technique uses sequential depth-first forwarding to contact nodes and therefore all nodes within the extended query re-gion are contacted until the query region is fully covered.
Since the query is forwarded in a sequential depth-first manner, only one node is processing the query at each point in time. This process ensures that only one copy of the par-tial STDMap answer is available in the network, and each node processing the query is aware of the contribution to the STDMap answer of the nodes previously involved in the query answering. While this strategy is likely to result in a longer query processing time for each individual query than the EFM technique, it facilitates several queries being pro-cessed simultaneously by the same group of relevant sensors. Table 1: Parameters of query and sensor network
We implemented a sensor network simulator to study the performance of the proposed techniques. The placement of the sensor nodes follows a uniform distribution over a two dimensional region. The STDMap query requires the coor-dinates of a spatial region ( sr ), a temporal range ( tr )anda confidence threshold ( ct ). The query X  X  spatial region covers 4% of the monitored region, unless otherwise noted. The query X  X  temporal range covers 60 measurements, which cor-responds to one hour of measurements for a rate of one mea-surements per minute. For the answer of a STDMap query, each point of a map layer corresponds to 1 m 2 square area in the query X  X  region. If a different map granularity is required, the granularity can be added as a parameter to the STDMap query. The query originator and the center of the query X  X  region are uniformly distributed over the monitored region. The measurements are averaged over 10 randomly generated sensor networks with 10 random queries over each network. A summary of query and sensor network parameters and their default values used in our evaluation is presented in Table 1.

While our techniques are general with respect to the con-fidence function C ( s, l ) used by the sensor nodes, we need an explicit confidence function in the evaluation 3 .Weusethe Gaussian distribution function C ( s, l )= e the confidence function, where d ( s, l )representstheEu-clidean distance between the sensor node located at s and location l and  X  2 is the variance of the function. Gaussian functions have been used before (e.g., [6]) to capture the behavior of physical phenomena and the correlation in sen-sor measurements. Using this function, the confidence of a sensor is high in its proximity and decreases rapidly with increasing distance. Given a confidence function C ( s, l )and a confidence threshold ct , the coverage area of a sensor node is determined by the confidence range c r (see Section 3). When c r is smaller than half of the wireless range, the nodes that cover a sensor X  X  area are among its neighbors. When c is larger than half of the wireless range, the sensors nodes that cover a sensor X  X  area may be located outside its wireless range. We use  X  = 50 and show results for two confidence thresholds ct  X  X  0 . 4 , 0 . 8 } , which allows us to evaluate the algorithms for both situations.

We compare the performance of our techniques using two metrics. The first metric is the number of relevant sen-sor nodes used for answering the STDMap query. Using a smaller number of nodes in answering the query may in-
Identifying the right confidence function to model the char-acteristics of physical phenomena is beyond the scope of this paper. crease the energy cost of processing due to an increase in the communication cost for the control messages. Thus, we use the total energy used during query processing as our second metric. Since we are interested in energy-efficient query pro-cessing, we are mainly interested in the energy metric, but the first metric allows us to better understand the behav-ior and trade-offs of each technique. We use the formulas in [15] (see Table 1) with the following parameter values for the energy costs [10]:  X  =  X  =50 nJ/bit , n =2,and  X  =10 pJ/bit/m 2 . Similar to other sensor network eval-uations, our simulator considers that the message delivery is instantaneous and error-free between nodes communicat-ing directly. In our experiments we only measure the energy used to transmit and receive messages during query process-ing, which includes the messages used for query forwarding, for returning the answers and for status updates. We focus on the energy-efficiency of the query processing and there-fore the measurements are independent of the characteris-tics of the MAC layer (for instance 802.11 radios consume as much energy in idle mode as for receive mode, while other radios may switch to a low-energy state when idle).
We also compare our algorithms against a basic query pro-cessing solutions consisting of a network flooding with spa-tiotemporal constraints, called STF. In STF, the query orig-inator node sends the query to all the sensor nodes, but only those located in the extended query region answer the query, returning the raw sensor measu rements collected within the query X  X  temporal range to the originator. Since this solu-tion does not use a coordinator node, all query answers are returned to the originator node over the shortest path. For consistency with the format of data collected by the STF al-gorithm, the proposed techniques store the map layers as the raw measurements from which the layers can be constructed. This is reasonable as most values forming the map layers are approximations of a few measurements. In reality, the map layers could be stored as compressed images, which would substantially reduce their size.
We use the average number of neighbors per sensor node to represent the sensor network density. This parameter combines the size of the monitored region, the number of sensor nodes and the wireless range. Studying the effect of the number of neighbors helps us understand the effect of these three parameters on the investigated techniques.
Figures 4(a) and 4(b) show the percentage of relevant nodes that answered the query for each technique. Note that for the STDMap query the relevant nodes are the nodes lo-cated within the extended query region. The STF method retrieves the measurements of all the relevant nodes (i.e., 100%), and therefore it is not shown. The EFM method forwards the query to all relevant nodes, with only some of these nodes answering the query. The MSM algorithm con-tacts only the nodes that are used in answering the query. As the number of neighbors increases, both EFM and MSM select a smaller percentage of the relevant nodes to cover the query region. In the case of MSM, each node has a larger set of neighbors to choose from for the next step of the algo-rithm, which leads to a better selection of the nodes used for covering the query region. For the EFM algorithm, a larger set of neighbors increases the probability that a node X  X  con-fidence area is covered, which reflects on the lower percent-age of nodes that answer the query. The increase in the
Figure 4: The effect of the number of neighbors confidence threshold reduces the coverage range, which has a double effect on the query processing performance: both the extended query region and each node X  X  confidence area are smaller. A smaller extended query region contains a smaller number of relevant nodes, but, on the other hand, the smaller coverage areas force more nodes to answer the query in order to cover the query region. Overall, the in-crease in confidence threshold forces a larger portion of the relevant sensor nodes to answer the query in both tech-niques. This effect is amplified in the MSM because of the reduced overlap among the sensors that MSM uses for query processing. For EFM, the overlap of nodes X  coverage areas is high for ct =0 . 4, which allows EFM to have a smaller increase than MSM in the number of relevant sensors nodes used for answering the query when ct =0 . 8.

Figures 4(c) and 4(d) show the variation of the total en-ergy used for processing a query when the network density increases. The STF algorithm is the most affected due to the linear increase in the number of relevant nodes that return answers. Our techniques use only a few more relevant nodes to answer the STDMap query for denser networks, which reflects in their relatively stable energy use. As MSM uses less nodes than EFM to answer the query, it has a lower en-ergy cost for ct =0 . 4. When nodes X  coverage areas are small ( ct =0 . 8) and the network density is low, MSM contacts a larger percentage of the relevant nodes. This leads to a high energy cost for MSM. There are two reasons: the cost of transferring the STDMap partial answer to every contacted node in order to keep track of the already covered area is not negligible; and MSM uses a depth-first strategy that leads to most nodes contacted to be on the same path. Thus the STDMap answer is returned to the coordinator node over a long and costly path. Overall, the EFM technique is the least affected by the increase in network density. While MSM has the lowest energy use for low confidence thresh-olds (up to 20 times less than STF) and uses only a few of the relevant nodes to answer the STDMap query, it uses more energy than STF for a combination of low density and high confidence threshold.
In our second set of experiments, we varied the size of the query X  X  spatial region between 2 and 10 percent of the size of the monitored region. Figures 5(a) and 5(b) show the effect
Figure 5: The effect of the query X  X  spatial window of the query size on the percentage of relevant sensors that answer the STDMap query. The EFM algorithm uses each node X  X  neighborhood to decide which nodes should answer, and therefore it is not affected by the size of the query re-gion, using about the same percentage of relevant nodes to answer the query for all region sizes. In the case of MSM, larger query regions are more difficult to cover efficiently, and thus the percentage of relevant nodes that answer the query increases with the size of the query region. When the confidence threshold is high, both EFM and MSM use a higher percent of the relevant nodes to cover the query re-gion since the area that each sensor covers is smaller. Con-sistent with our observation w hen investigating the effect of network density, higher confidence thresholds lead to a higher increase in the percentage of relevant nodes used by the MSM compared to the EFM technique.

Figures 5(c) and 5(d) show the total energy used during query processing when the size of the query X  X  spatial region is varied. The MSM algorithm is affected the most due to the the larger number of nodes that it contacts and the increased length of the path over which these nodes are contacted and the answers are returned. The increase in the size of the query region also leads to an increase in the energy used by EFM as more nodes must answer the query to cover the larger query region. In addition, EFM uses two floods over the relevant sensor nodes for updating the nodes X  status. Overall, the MSM uses the least energy when the number of nodes answering the query is small, but its cost increases sharply with the increase in the number of these nodes (Fig-ure 5(d)). The EFM technique behaves better than MSM, the increase in the size of the query region causing a smaller increase in its energy costs.
To test out intuition that the EFM algorithm produces a more balanced energy use at the nodes within the extended query region, we compared it to a similar technique, called RFM, that uses a random tie-braking instead of the energy level used in EFM. We compared the effect of the EFM and RFM on the nodes X  energy levels over several execu-tions of the same query. We fixed the position and size of the query X  X  spatial region while we allowed the originator node to be randomly selected among the network X  X  nodes. We only measured the energy used for collecting the answers in the second phase of the EFM and RFM techniques. Be-fore initiating the query processing, we charged all nodes with similar energy levels. After each set of 100 executions of the query, we calculated the average energy left in the nodes within the query region, and the standard deviation of energy from the average for the same nodes. We use the standard deviation to evaluate the energy balance among the sensor nodes.

Figure 6 shows the standard deviation of energy for the nodes within the query X  X  spatial region. As more queries are processed, EFM produces a more balanced energy use compared to RFM. As RFM uses a non-energy aware tie-braking, it forces some nodes to use more energy than their neighbors, which may leads to their early failure. With the increase in the confidence threshold, the difference in the energy balance of the two technique increases. This benefit of EFM is likely to extend the quality of the query processing in the long-term since more nodes will be available, as well as possibly leading to an increased network lifetime.
In this paper we proposed the STDMap query which ex-ploits the redundancy of sensor measurements on the spatial dimension. We showed that this type of query can be effec-tively answered by only a subset of the relevant nodes using the MSM and EFM techniques in a wireless sensor network environment with fixed nodes.

We studied the performance of the proposed techniques under several conditions. The MSM algorithm is best suited for queries where the coverage range c r is larger than half the wireless range. In this case, MSM answers the STDMap query using a smaller subset of nodes than EFM and has a lower processing cost. The EFM algorithm is the most energy-efficient for most scenarios, showing consistent per-formance with respect to various network and query parame-ters. EFM also provides a balanced energy use at the sensor nodes, an important advantage in applications where the queries are not uniformly distributed. Therefore, we recom-mend EFM for processing STDMap queries as well as other queries with similar characteristics to the STDMap query.
Our investigations have revealed several issues that re-quire further analysis. The trade-off between the robustness and energy-efficiency of query processing in the case of sen-sor failures requires further attention. The natural medium may also cause measurement inconsistencies among sensors and solutions for handling them are in our focus. In this paper we considered as the most reliable approximation the one with the highest confidence. Combining the approxi-mations of several sensors based on their confidence is an open problem that has potential for improving the quality of approximations. [1] E.C. Barret and L.F. Curtis. Introduction to [2] A. Coman, M.A. Nascimento, and J. Sander. A [3] J. Considine, F. Li, G. Kollios, and J. Byers. [4] A. Deligiannakis, Y. Kotidis, and N. Roussopoulos. [5] A. Deshpande, C. Guestrin, W. Hong, and S. Madden. [6] A. Deshpande, C. Guestrin, S. Madden, J. Hellerstein, [7] A. Deshpande, S. Nath, P.B. Gibbons, and S. Seshan. [8] S. Goel, and T. Imielinski. Prediction-based [9] C. Guestrin, P. Bodik, R. Thibaux, M. Paskin, and [10] W. Heinzelman. Application-Specific Protocol [11] C. Intanagonwiwat, R. Govindan, D. Estrin, [12] B. Karp and H.T. Kung. Gr eedy perimeter stateless [13] Y. Kotidis. Snapshot queries: towards data-centric [14] S. Madden, M.J. Franklin, J.M. Hellerstein, and [15] T. Rappaport. Wireless Communications: Principles [16] A. Ricadela. Sensors everywhere. Information Week , [17] I. Stojmenovic. Position based routing in ad hoc [18] Y. Yao and J. Gehrke. Query processing in sensor [19] S. Yoon, and C. Shahabi. Exploiting spatial
