 Searc hers on the blogosphere often have a need to iden tify other key bloggers with similar interests to their own. How-ever, a main di erence of this blog distillation task from normal adho c or Web documen t retriev al is that eac h blog can be seen as an aggregate of its constituen t posts. On the other hand, we sho w that the task is similar to the exp ert searc h task, where a person's exp ertise is deriv ed from the aggregate of their publications or emails. In this pap er, we investigate sev eral asp ects of blog retriev al: Firstly , we ex-perimen t whether a blog should be represen ted as a whole unit, or as by considering eac h of its posts as indicators of its relev ance, sho wing that exp ert searc h techniques can be adapted for blog searc h; Secondly , we examine whether in-dexing only the XML feed pro vided by eac h blog (and whic h is often incomplete) is sucien t, or whether the full-text of eac h blog post should be downloaded; Lastly , we use ap-proac hes to detect the cen tral or recurring interests of eac h blog to increase the retriev al e ectiv eness of the system. Us-ing the TREC 2007 Blog dataset, the results sho w that our prop osed exp ert searc h paradigm is indeed useful in iden ti-fying key bloggers, achieving high retriev al e ectiv eness. Categories and Sub ject Descriptors: H.3.3 [Informa-tion Storage and Retriev al]: Information Searc h and Re-triev al; H.3.4 [Systems and soft ware]: User pro les and alert services General Terms: Performance, Exp erimen tation Keyw ords: Blog Distillation, Feed Searc h, Exp ert Searc h
The act of blogging has emerged as one of the popular out-comes of the \W eb 2.0" phase, where users are emp owered to create their own Web con ten t. In particular a (web)blog is a website where entries are commonly displa yed in rev erse chronological order. Man y blogs pro vide various opinions and persp ectiv es on real-life or Internet events, while other blogs cover more personal asp ects. The `blogosphere' is the collection of all blogs on the Web.

There are sev eral specialised searc h engines covering the blogosphere, while most of the main searc h engine commer-cial players have a blog searc h pro duct. In their study of user queries submitted to a blog searc h engine [20], Mishne and de Rijk e note two forms of predominan t queries: Con-text Queries , and Conc ept Queries . In con text queries, users typically app ear to be looking at how entities are though t of or represen ted in the blogosphere -in this case, the users are looking to iden tify opinions about the entity. In concept queries, the searc her attempts to locate blogs or posts, whic h deal with one of the searc her's interest areas -suc h queries are typically high-lev el concepts, and their frequency did not vary in resp onse to real-w orld events. For example, for suc h queries, users are looking for blogs that interest them, so that they can subscrib e to these blogs with their RSS reader. The blog searc h engine should suggest blogs that have posts mostly dedicated to the general topic area of the query -the objectiv e being to pro vide the user with a list of key (or `dis-tilled') blogs relev ant to the query topic area. For example, a user interested in Form ula 1 motorsp orts would wish to iden-tify blogs giving news, commen ts and perhaps gossip about races, driv ers or teams. Indeed, man y of the blog searc h en-gines suc h as Technorati and Bloglines pro vide a blog searc h facilit y in addition to their blog post searc h facilit y, while Google Blog Searc h integrates both post and blog results in one interface. Moreo ver, man y man ually-categorised blog directories exist, suc h as Blog ux and Topblogarea to name but a few. This is reminiscen t of the prev alence of the early Web directories (c.f. Yaho o!) before Web searc h matured, and suggests that there is indeed an underlying user task that needs to be researc hed [10]. This task is called blog distil lation [19]. For example, in resp onse to a query , a blog searc h engine should return blogs that could be added to a directory , or returned to a user as a suggested subscription for his/her RSS reader. Indeed, man y blog searc h engines include the feed URL in their results listing, while Google's RSS Reader pro vides an integrated feed searc h application, to allo w users to easily nd new blogs of interest.
Note that a topic distillation task was dev elop ed in the con text of the TREC Web Track [4]. In topic distillation, site relev ance was required as (i) being principally dev oted to the topic, (ii) pro viding credible information on the topic, and (iii) is not part of a larger site also principally dev oted to the topic. Blog distillation is someho w a similar task -the idea is to pro vide the users with the key blogs about a given topic. However point (iii) from the topic distillation task is not applicable in a blog setting [19].

In general, eac h blog has an (HTML) homepage, whic h presen ts a few recen t posts to the user when they visit the blog. Next, there are asso ciated (HTML) pages kno wn as permalinks, whic h con tain a given posting and any com-men ts by visitors. Finally , a key feature of blogs is that with eac h blog is asso ciated an XML feed , whic h is a mac hine-readable description of the recen t blog posts, with the title, a summary of the post and the URL of the permalink page. The feed is automatically updated by the blogging soft ware whenev er new posts are added to the blog.

Due to this common structure of eac h blog, a cen tral dif-ference of the blog distillation task from classical Web doc-umen t searc h is that a blog can be interpreted as an aggre-gate of its constituen t blog posts, and hence when searc h-ing for key blogs, eac h relev ant blog post can be considered as evidence that its corresp onding blog is relev ant to the query . A natural question is how the blog post-lev el evi-dence of relev ance should be represen ted and com bined. In this work, we examine two approac hes, namely com bining all post evidence for one blog into a large virtual documen t before scoring in resp onse to a query , or com bining blog ev-idence of relev ance after the post-lev el evidence has been scored. Moreo ver, both represen tation metho ds can be used when either the HTML posts or the summary information from the XML feeds is indexed.

Hence, in this pap er, we investigate the blog distillation task. An e ectiv e blog searc h engine will pro vide relev ant key blogs with cen tral interest in the topic areas. We inves-tigate how to pro vide an e ectiv e blog searc h engine from two angles. Firstly , is it sucien t for a blog searc h engine to only index the summary information from the XML feed for eac h blog, or should eac h permalink post be downloaded and indexed? Secondly , for both adopted indexing strategies, we explore how blogs should be interpreted for e ectiv e ranking. In particular, we investigate two interpretations: considering the blog as a whole entity; or considering it as an aggregate of its posts. Finally , we investigate how techniques suc h as clustering, cohesiv eness and date-related evidence can be used to iden tify the cen tral interest topic area of eac h blog with the aim to enhance retriev al e ectiv eness. Our exp er-imen ts are carried out using the blog distillation task test collection created at the TREC 2007 Blog trac k [19].
The exp ert searc h task, in whic h exp erts in an enterprise organisation are rank ed with resp ect to their predicted ex-pertise about a query . In a similar manner fashion to ranking blogs, an exp ert's exp ertise can be view ed as the aggregate of their publications. The task has been studied in the TREC Enterprise trac k.

The con tributions of this pap er are three-fold: Firstly , we investigate the connections between the fairly well studied exp ert searc h task and the new task of blog distillation. Sec-ondly , we explore the retriev al performance impact of index-ing only the XML feeds of the blogs, compared to indexing the HTML permalink documen t of eac h blog post. Thirdly , we investigate how sev eral intuitions about blog-sp eci c ev-idence can be mo delled and integrated into the prop osed retriev al approac h, suc h as the cen tral interests of a blogger, whether an interest is recurring, and whether the blogger has a coheren t blogging language.
 The remainder of this pap er is structured as follo ws. In Section 2 we introduce the blog distillation task of TREC 2007. Section 3 discusses how aggregates can be rank ed in resp onse to a query . We detail the exp erimen tal setup we apply in this work in Section 4, and pro vide exp erimen tal results in Section 5. In Section 6, we prop ose and evaluate a ranking extension that tak es into accoun t the num ber of Figure 1: An example RSS feed from a blog in the TREC Blog06 test collection. Structured informa-tion is pro vided about the blog (lixo.org), and one or more posts (the rst titled London Everything Meetup). posts in the blog. Section 7 investigates how bloggers with a cen tral or recurring interest in the topic area can be iden ti-ed. In Section 8, we apply other techniques to impro ve the retriev al e ectiv eness of our system. We pro vide concluding remarks in Section 9.
The TREC Blog trac k was initiated in TREC 2006 with the aims of investigating information access in the blogo-sphere, and pro viding test collections for common informa-tion seeking tasks in the blogosphere setting [19, 22]. Since then, both con text and concept queries have been investi-gated within the TREC setting. The blog distillation task, whic h investigates concept queries, rst ran in TREC 2007.
As men tioned in Section 1, a popular feature of blogs is that with eac h blog is asso ciated an XML feed, whic h is updated eac h time a new post is made to the blog. Man y online and oine tools exists for users to read the postings of all the blogs they subscrib e to in one interface (kno wn generally as RSS readers). The XML feeds are also used by blog searc h engines, to enable them to obtain a list of all the new posts to a blog, and hence signi can tly reduce both their bandwidth usage for crawling and computing resources for indexing.

Tw o common formats for XML feeds exist: Really Sim-ple Syndication (RSS), and Atom Syndication Format (com-monly kno wn as Atom). Figure 1 gives an example of an RSS XML feed for a blog. Within eac h item of the feed, there is a link to the HTML post permalink documen t, as well as the title and a description of the con ten t of the post (we de-note the title and description information the XML content of eac h post). The HTML permalink documen t con tains the full post and any reader commen ts. However, while the de-scription in the RSS feed can con tain the entire text of the blog posting, man y feeds only pro vide a few paragraphs -enough to whet the app etite of a user reading the blog via their RSS reader, who can then follo w the link to the perma-link to read the full post. There can be various reasons for this succinctness, suc h as the blogger wants to driv e users to his blog so he/she can gain rev enue from con text adv ertis-ing. Alternativ ely, if the full con ten t is given, spammers may automatically republish the blog on another site, in order to gain adv ertising rev enue [12].
 For the purp oses of the Blog trac k, TREC created a new Web test collection called Blog06, based on a rep eating crawl Table 1: Salien t statistics of the Blog06 collection, including both the XML feeds and HTML permalink posts comp onen ts. of a set of blogs [15]. In particular, the collection was created by monitoring the RSS or Atom XML feeds of over 100,000 blogs for 11 weeks, and after a two week dela y, downloading the blog posts (kno wn as permalinks). The purp ose of the two week dela y was to allo w any commen ts on the blog post to be collected. Table 1 details the salien t statistics of the TREC Blog06 test collection. Both XML feeds and HTML permalinks were pro vided in the Blog06 test collection, to al-low Blog trac k participan ts to exp erimen t with both sources of evidence.

The TREC 2007 blog distillation task was created along similar lines to other existing TREC tasks [19]. A test col-lection was created that mimics, within a rep eatable ex-perimen tal setting, the blog distillation task, where users are looking for new blogs of interest to them, to add them to their RSS readers. Systems were ask ed to iden tify key blogs, whic h exhibit a principle recurring interest in the query . In particular, queries (kno wn as topics) were con-tributed by the TREC participan ts. All participating sys-tems then gave their rankings of blogs for eac h query , whic h were then pooled for the relev ance assessing phase. Partic-ipating groups were resp onsible for the relev ance assessing of the pooled blogs for the topics they prop osed. When as-sessing the relev ance of a blog, the assessors were ask ed to read as man y or as few posts of the blog as they wish, be-fore making an informed choice of the relev ance of the blog as a whole, i.e. whether the blog is princip ally devote d to the topic and would be recommende d to subscrib e to as an inter esting feed about the topic area [19].

For a blog searc h system, the rep eated crawling of blogs is made easier by the pro vision of XML feeds, whic h list the URLs of new posts and a summary of their con ten t. An obvious question that arises is whether retriev al using only the XML feed is e ectiv e enough for an accurate searc h sys-tem, or whether eac h HTML post (permalinks) needs to also be downloaded to ensure good retriev al performance at cost of additional crawler bandwidth and indexing time. In the TREC paradigm, this corresp onds to dev eloping a system that indexes the feeds comp onen t of the Blog06 collection, or the permalinks comp onen t, resp ectiv ely.
 Consider that eac h blog is represen ted in the Information Retriev al (IR) searc h system as a large virtual document con-taining all XML con ten t for eac h blog post seen thus far by the system. An easy way to then rank blogs in resp onse to a query would be simply to rank these virtual documen ts directly . Alternativ ely, if the blogs are indexed using their comp osing posts, then we have to nd a way to compute a score for the blog based on a scoring of its constituen t posts. Inspired by an exp ert searc h approac h, whic h adapts data fusion techniques to rank candidate exp erts as the aggregate of their exp ertise-represen ting documen ts [16] (e.g. their publications), in this work we investigate the connection be-tween exp ert searc h and blog distillation. In the next two sections, we describ e both indexing and ranking strategies.
The aim of a blog searc h engine is to iden tify blogs whic h have a recurring interest in the query topic area. Our intu-itions for the blog distillation task are as follo ws: A blogger with an interest in a topic will blog regularly about the topic, and these blog posts will be retriev ed in resp onse to a query topic. Eac h time a blog post is retriev ed for a query topic, then it can be seen as an indication (a vote) for that blog to have an interest in the topic area and thus more likely that the blog is relev ant to the query . This task is then very similar to the exp ert searc h task, in that both tasks aggre-gate the documen ts that are rank ed in resp onse to a query . In particular, a candidate's exp ertise can be interpreted as the aggregate of their (e.g.) publications, and likewise a blog's interest can be interpreted from the aggregate of all its constituen t posts.

In this work, we use the adaptable Voting Mo del for Ex-pert Searc h [16]. In this mo del, candidate exp erts are rank ed by examining the ranking of documen ts with resp ect to the query . If an exp ert has man y asso ciated documen ts highly rank ed in the ranking of documen ts, then these are seen as votes that they be rank ed higher than another exp ert with less or lower rank ed documen ts. Indeed, Macdonald &amp; Ou-nis prop osed 12 voting techniques in [16], based on adapta-tions of common data fusion techniques, suc h as Com bSUM, Com bMNZ or BordaF use. Man y of the voting techniques were sho wn to perform well on the TREC Enterprise trac k exp ert searc h task when applied using sev eral statistically di eren t documen t weigh ting mo dels [18].

Follo wing the good performance of the voting techniques prop osed by Macdonald &amp; Ounis, we use four represen ta-tive techniques in this work as they apply various sources of evidence from the underlying ranking of blog posts.
In the simplest technique, called Votes, blogs are rank ed by the num ber of their posts rank ed in resp onse to a query . In particular, the retriev al score for a blog B with resp ect to a query Q , denoted scor e ( B; Q ) is: where R ( Q ) is the underlying ranking of blog posts, and posts ( B ) is the set of posts belonging to blog B . Note, that in con trast with the exp ert searc h task where a documen t can be asso ciated to more than one candidate (e.g. a publi-cation with multiple authors), in the blog setting, eac h post is asso ciated to exactly one blog.

Next, the Com bMAX voting technique scores a blog B by the retriev al score of its most highly rank ed post: where scor e ( p; Q ) is the retriev al score of blog post p as com-puted by a standard documen t weigh ting function. The set R ( Q ) \ posts ( B ) is the set of retriev ed posts belonging to blog B .

Next, the expCom bSUM technique ranks eac h blog by the sum of the relev ance scores of all the retriev ed posts of the blog, and strengthens the highly scored posts by applying the exp onen tial ( exp ()) function (strong votes evidence): Lastly , the expCom bMNZ technique is similar to exp-Com bSUM, except that the coun t of the num ber of retriev ed posts is also tak en into accoun t (num ber of votes evidence): where k R ( Q ) \ posts ( B ) k is the num ber of posts of blog B that are retriev ed in the ranking R ( Q ).

Note that this aggregate retriev al strategy based on the ranking of blog posts can be applied to both retriev al using the only XML con ten t for eac h post, or using the HTML permalink documen ts.

For a baseline ranking strategy , a simple and intuitiv e way of ranking blogs is the virtual documen t approac h, whereb y eac h blog is represen ted by a large virtual documen t con-taining all term occurrences from all of its constituen t posts (either permalink con ten t or XML con ten t) concatenated to-gether. These virtual documen ts can then be directly rank ed in resp onse to a query . This approac h was rst prop osed for the exp ert searc h task by Crasw ell et al. [5].

Other work of note is the formal language mo dels of Ba-log et al. [3]. In particular, their Mo del 1 is a formalisation of the Crasw ell virtual documen t approac h, while in their Mo del 2, the probabilit y of a candidate is calculated using the sum of the probabilit y of eac h documen t with resp ect to the query , multiplied by the degree of asso ciation between the documen t and candidate. Mo del 2 has similarities to the Com bSUM and expCom bSUM voting techniques of Mac-donald &amp; Ounis [16], in that all techniques are based on the sum of some measure of how much the documen t is about the query . Moreo ver, Balog et al. found that Mo del 2 is usu-ally sup erior to the Mo del 1 (virtual documen t) approac h on the exp ert searc h task.
As discussed above, we have two forms of alternativ e con-ten t that can be indexed for eac h post (the XML con ten t, and the HTML permalinks). Moreo ver, the two alternativ e ranking strategies -voting techniques and virtual documen ts -require di eren t index formats. Hence we index the Blog06 collection in four ways: 1. Using a virtual documen t for all the HTML permalink posts asso ciated to eac h blog. 2. Using a virtual documen t for all the XML con ten t asso-ciated to eac h blog. 3. Using the HTML permalink documen t for eac h blog post, as a separate index entity. 4. Using the XML con ten t for eac h blog post as a separate index entity.
 For approac hes 3 and 4, we use the voting techniques intro-duced in Section 3 to con vert the ranking of blog posts into a ranking of blogs, while for approac hes 1 and 2, blogs are scored and rank ed directly . Note that when indexing XML feeds, the XML con ten t for a blog post is indexed only once -i.e. on the rst occurrence of that post in the feed, and not in subsequen t fetc hes of the feed when the same post was still visible.
 Table 2: Statistics for the four created indices. #Do cs is the num ber of documen ts in the index, #T okens is the num ber of tok ens in the index.

In all cases, we index using Terrier [21], remo ving stan-dard stop words and applying Porter's English stemmer. In particular, there are 2,841,396,389 tok ens of text found by indexing all the HTML blog post documen ts, while only 213,093,984 tok ens are found when indexing the XML feeds. There is an order of magnitude di erence in the amoun t of textual con ten t obtained from either source, demonstrating how man y bloggers are choosing not to pro vide full con ten t in their XML feeds, for the reasons describ ed in Section 2. Table 2 gives an overview of the statistics of the four indices.
We rank index entities (whether virtual documen ts or posts) using the new DFRee Div ergence from Randomness [1] (DFR) weigh ting mo del, pro vided in the open source version of Terrier 2.1 1 . This new weigh ting mo del is parameter free, and performs e ectiv ely on various test collections without the need for any parameter tuning [28]. In particular, we score an entity e (i.e. a blog or a blog post) with resp ect to query Q as: scor e ( e; Q ) = X in tok ens of entity e , tf if the num ber of occurrences of term t in e , T F is the num ber of occurrences of term t in the col-lection, and T F C is the num ber of tok ens in the entire col-lection. Indeed, DFRee has no term frequency normalisation parameter that requires tuning, as this is assumed to be in-heren t to the mo del. Hence, by applying DFRee, we remo ve the presence of any term frequency normalisation parame-ter in our exp erimen ts, while still having a strong baseline. Indeed, applying other DFR mo dels, suc h as PL2 [1], whic h con tain term frequency normalisation parameters may lead to better retriev al e ectiv eness, but these would required appropriate training of their parameters.
 All our exp erimen ts are conducted using the TREC 2007 Blog trac k, blog distillation task. In particular, this task has 45 topics with blog relev ance assessmen ts [19]. While the topic pro vides the traditional TREC title, description and narrativ e elds, for our exp erimen ts we use the most realistic title-only setting. Moreo ver, the ocial ranking of systems in TREC 2007 was done by title-only systems. An example topic is sho wn in Figure 2. Retriev al performance is rep orted in terms of Mean Average Precision (MAP), Mean Recipro cal Rank (MRR), and Precision @ rank 10 (P@10).
In our exp erimen ts, we aim to dra w conclusions on sev-eral points: Firstly , can indexing using only the textual con-http://ir.dcs.gla.ac.uk/terrier Figure 2: Blog trac k 2007, blog distillation task, topic 985.
 Table 3: Exp erimen tal results comparing the virtual documen t and voting technique approac hes, com-bined with indexing feed or permalink posts. The best result for eac h index form is emphasised, and statistically signi can t degradations (calculated us-ing the Wilco xon matc hed-pairs signed rank test) from the best are denoted &lt; and for ( p &lt; = 0 : 01 ) and ( p &lt; = 0 : 05 ), resp ectiv ely. ten t from the XML feeds be as e ectiv e as using the full con ten t from the HTML permalinks blog posts; Secondly , whic h ranking strategy is most e ectiv e for ranking blogs -virtual documen ts versus voting techniques; and lastly , given that we exp erimen t with various possible voting techniques, whether there is any variance between the techniques.
The observ ed results are pro vided in Table 3. The ta-ble details the approac hes of both the virtual documen t and voting techniques forms of ranking, applied when using ei-ther the XML con ten t or the full HTML permalinks for the textual con ten t of the blog posts.
 On analysing Table 3, we can dra w sev eral conclusions. Firstly , there is a mark ed overall di erence in retriev al per-formance for indexing feeds versus blog posts. Indeed, the highest performance achiev able using the XML con ten t is 0.2163 MAP , while 0.2584 is achiev able when the entire post has been indexed. Giv en the di erence in num ber of indexed tok ens between the two sources, we suggest that it is surpris-ing that this di erence is not greater. However, on apply-ing the Wilco xon matc hed-pairs signed rank signi cance test (not sho wn in the table), we note that the MAP di erences between eac h voting technique setting on XML con ten t, and the equiv alen t setting on permalinks is statistically signi -can t (one exception is the Votes technique) in favour of those applied using the permalink con ten t, establishing that the best retriev al e ectiv eness can be found using voting tech-niques on the entire posts.

Comparing the voting techniques with the virtual docu-men t approac h, it is apparen t that the virtual documen t approac h performs better than the voting techniques for the reduced con ten t from the XML feeds -indeed, from Table 3, we note that this is signi can t for all MAP cases, and for some MRR and P@10 cases. A notable exception is the expCom bMNZ technique whic h is best for MRR, but not signi can tly better than the virtual documen t approac h.
However, when the full blog posts are indexed, the virtual documen t approac h signi can tly under-p erforms, and is un-able to achiev e the retriev al performance of some approac hes on even the XML feed con ten t. In con trast, the opp osite is observ ed for the voting techniques: while these do not per-form well on the XML feed con ten t, they pro vide excellen t performance on the full permalink con ten t. This is similar to the observ ations of Balog et al. in their comparison of Mo del 1 and Mo del 2 exp ert searc h mo dels [3].
We susp ect these di erences of performance can be ex-plained by the fact that the virtual documen t approac h does not weigh t individually the con tribution of eac h blog posts weigh t to the blog's likely relev ance, and hence will struggle to iden tify informativ e con ten t in the large virtual docu-men ts from the full blog posts. For the XML con ten t, the average size of the virtual documen t is much smaller, with often only a few sen tences con tributed from eac h blog post. In this scenario, the mean virtual documen t length is ac-tually similar to the mean HTML blog post length in the collection, meaning that the weigh ting mo del is able to dif-feren tiate easier between relev ant and irrelev ant blogs. It is of note that without an explicit documen t length normalisa-tion comp onen t, it is imp ossible to tune the DFRee mo del to any one setting.

Comparing the voting techniques, the expCom bMNZ tech-niques seems to perform best overall, mirroring previous studies by Macdonald &amp; Ounis in the exp ert searc h set-ting [16]. The surprising performance of the simple Votes technique suggests that simply coun ting the num ber of on-topic blog posts is a good indicator of the likely relev ance of the blog. This is intuitiv e, as the more a blogger blogs about the topic area, the more likely that they have a recur-ring interest in the topic area, and that a user would nd the blog interesting to subscrib e to.

The Com bMAX technique, whic h only considers the top-rank ed post for eac h blog, is less suitable in this task, as a blog whic h only con tains one on-topic post will be highly rank ed, when they do not necessarily exhibit the recurring interest in the topic area. The resp onse of the blogosphere to the London terrorist bombings was examined in [29], and this pro vides examples of why Com bMAX is not e ectiv e: man y bloggers made posts about the London bombings, but these blogs would not be relev ant to a query about `terrorism and securit y' as a blog with a really recurring and cen tral interest in the topic would be. This con trasts with the usage of Com bMAX in the exp ert searc h task, where a (e.g.) pub-lication whic h is very much about the query topic is likely to be an excellen t indicator of exp ertise of a candidate.
Overall, we conclude that it app ears that the full HTML con ten t of eac h blog post should be downloaded and indexed for a blog searc h engine to achiev e the highest retriev al per-formances. Using the voting techniques for ranking docu-men ts pro vides the best performance, and hence we will use only this approac h for the remainder of this pap er.
The best result achiev ed (MAP 0.2584) would have been rank ed as third group in the TREC 2007 Blog distillation task [19], and this was achiev ed without the training of any parameters -indeed all mo dels used thus far have been com-pletely parameter-free. The results here would likely be im-pro ved by using additional features, suc h as other weigh ting mo dels (including eld-based weigh ting mo dels and other weigh ting mo dels with tunable parameters, e.g [7]), pro xim-ity of query terms, query expansion/collection enric hmen t and the like, as used by man y of the submitted TREC runs [19]. In Section 8, we compare further to other TREC 2007 submitted runs to demonstrate the achiev able retriev al performance under similar settings.

Moreo ver, given the exp erimen tal results found above, particularly the imp ortance of the num ber of on-topic posts, we wonder if it would be possible to impro ve the voting techniques by introducing a parameter that con trols the in-uence of the blog size on the chance of the blog receiving a vote. In doing so, we would remo ve any unfair bias to-ward blogs with man y posts, whic h are likely to be retriev ed because a blog post con tained a query term randomly . Sec-tion 6 investigates the application of normalisation to im-pro ve the retriev al performance of the voting mo del. In con trast, in Section 7, we investigate further techniques to determine if the query topic is one of the main interests of the blogger.
Similar to the previous work in exp ert searc h, the best per-forming voting technique app ears to be the expCom bMNZ technique. However, an issue using suc h a technique is that proli c bloggers may gain an unfair adv antage in the rank-ing. This is because the more a blogger writes, the more likely a query term will app ear at random in a blog post (for example, man y blog posts con tain links to other recen t posts, with the title of eac h post iden tical to the link an-chor), and hence the blog will receiv e extra erroneous votes. In con trast, the relev ance of a blog is more likely to be re-lated to the qualit y of the on-topic posts, and not whether the blogger is proli c or not.
 To this end, inspired by the work done previously in the IR eld with regard to documen t length normalisation, we investigate how the imp ortance of a vote can be normalised and con trolled by the num ber of posts in the blog. Simi-larly , documen t length normalisation has been investigated in various literature [8, 24, 26] with a view to con trolling the chance that a documen t is retriev ed based on its size. In this work, we adapt a classical documen t length normalisation technique, Normalisation 2 , from the Div ergence from Ran-domness framew ork, and integrate it into the voting mo del, as Normalisation 2 was sho wn to be an e ectiv e approac h for documen t length normalisation [1]. The score of a blog is adapted as follo ws: scor e N orm ( B; Q ) = scor e ( B; Q ) log (1 + c avg l where c is a free parameter ( c &gt; 0), l is the num ber of posts in blog B , and avg l is the average num ber of posts for all blogs. Note that we can also measure the size of a blog, l , in terms of the num ber of tok ens in its constituen t posts in B , and avg l as the average num ber of tok ens asso ciated to eac h blog. In particular, we denote Norm2p as the normal-isation applied using the num ber of posts in the blog, while Norm2t denotes when the normalisation is applied using the num ber of tok ens in the blog.
 Table 4: Exp erimen ts using Blog Size Normalisa-tion. Best settings for eac h measure, voting tech-nique and index form are emphasised; statistically signi can t increases from the voting technique with-out normalisation applied are denoted &gt; and for ( p &lt; = 0 : 05 ) and ( p &lt; = 0 : 01 ), resp ectiv ely. Note that the baseline applications of expCom bSUM and exp-Com bMNZ do not have a c parameter.

We test the prop osed normalisation technique using both indices in com bination with the expCom bMNZ and exp-Com bSUM baseline techniques. Moreo ver, because this is a new task in TREC, there is not much training data on whic h to nd a good setting for the normalisation param-eter c . Therefore, we exp erimen t with a default setting of c = 1 as suggested by Amati [1]. In addition, we create sev en training queries with shallo w relev ance assessmen ts. How-ever, as these are not necessarily represen tativ e of the test set, we also pro vide the ideal setting where we assume that optimal training was available. This means that in this last setting, we have directly optimised the parameter using the test set for training. Training is performed using sim ulated annealing pro cesses to maximise MAP [11].

Table 4 presen ts the results of our normalisation exp er-imen ts. Analysing the table, we can dra w sev eral conclu-sions. Firstly , that applying normalisation can impro ve the retriev al performance of the voting techniques on both the XML and the HTML permalink con ten t. For the perma-link con ten t, mark ed increases are apparen t, whic h are of-ten statistically signi can t. Similarly , for the XML con ten t, there are often signi can t increases for MAP and P@10, for both voting techniques. On comparing expCom bMNZ with expCom bSUM, it is apparen t that expCom bMNZ performs better, regardless of the normalisation applied, on most mea-sures (one exception is MRR for permalinks con ten t).
Of the three settings for the c parameter (default, trained on training queries, optimal training), we note only small dif-ferences in retriev al e ectiv eness between eac h of the three settings, and conclude that the normalisation is not overly sensitiv e to the c parameter setting. However, as the param-eter settings were trained to maximise MAP , in some cases other measures are impaired compared to the default param-eter setting. Finally , comparing the Norm2p and Norm2t metho ds of normalisation, we note that overall Norm2p per-forms sligh tly better, inferring that coun ting the size of a blog using its num ber of posts is best. This is probably ex-plained in that the num ber of tok ens in eac h post is already tak en into accoun t by DFRee when ranking posts. Overall, we conclude that the introduction of normalisation to voting techniques allo ws them to be adapted to tak e a more re ned view of the num ber of votes for eac h blog, by ensuring that blogs with man y posts do not gain an unfair bias in the nal ranking -users do not necessarily prefer proli c bloggers that blog about man y topics including their topic of interest over bloggers that blog more con tinuously on the topic of interest.
So far, we have been exp erimen ting within the framew ork of the voting mo del applied to rank blogs. Now, we wish to investigate blog-sp eci c features that allo w us to sepa-rate the key relev ant blogs from the rest. In particular, we test sev eral retriev al enhancing techniques that aim to boost blogs for whic h the blogger has sho wn a cen tral or recurring interest in the topic area. In doing so, we aim to mo del more fully the de nition of a relev ant blog given to the assessors (as describ ed in Section 2). In this resp ect, we form three hypotheses: In the remainder of this section, we detail eac h hypothesis in turn and then pro vide the results and analysis.
Some bloggers may have a wandering atten tion span, blog-ging about man y topics. For instance, a primarily technical blog may occasionally post in resp onse to a real-w orld event, or commen t on a personal or o -topic asp ect. For example, in Thelw all's work about the London bombings [29], it was noted that the bombings had a noticeable impact on the bl-ogosphere in July 2005. However, it is of course obvious that not all of these blogs were interested in terrorist and secu-rity issues before this day, and consequen tly their interest in the London events would fade with time. In this work, we desire to iden tify blogs whic h not only con tain mainly rele-vant posts to the topic area, but where the blogger primarily blogs in the topic area of the query .

To achiev e this, clustering seems to be a good option. We cluster the set of posts asso ciated to eac h blog, hoping that clusters will form, whic h represen t the main topic areas of eac h blog. In particular, in this pap er we apply a single-pass clustering algorithm [23] to cluster all the posts of the blogs with more than posts. This pro cess is done oine at indexing time. In the clustering, the distance function is de-ned as the Cosine between the average of eac h cluster. The clusters obtained are then rank ed by the num ber of docu-men ts they con tain -the largest clusters are represen tativ es of the cen tral interests of the blog. In particular, we form a quality score , whic h measures the exten t to whic h a blog post is cen tral to a blogger's interests, by determining whic h cluster the post occurs in. This is calculated as follo ws: where cluster ( p; B ) is the rank of the cluster in whic h post p occurred for blog B (largest cluster has rank 1). The above integration of cen tral interest evidence into the vot-ing technique strengthens votes from documen ts whic h are found in larger clusters of posts, because the largest clusters are assumed to represen t the blogger's main interest areas. Moreo ver, if no clustering has been applied for the blog (i.e. the blog has less than posts), then Qscor e Cluster ( p; B ) = 0. We integrate the clusters qualit y score with the exp-Com bMNZ voting techniques for scoring a blog to a query in Equation (8) below. Note that while it may be possible to adapt other voting techniques to integrate the clusters qualit y score evidence, for our exp erimen ts we focus solely on expCom bMNZ.
In this work, we use the default setting of = 1 -i.e. we only skip blogs whic h have one or zero posts. In these cases, blogs with only a single post cannot be chec ked to have a cen tral interest, as only at most one post represen ts their interest to the system.
If a blogger has an interest in a topic area, it is likely that they will con tinue to blog about the topic area rep eatedly and frequen tly. Indeed, the de nition for a relev ant blog in the blog distillation task gives a clue that the timing of on-topic posts by a blog may have an impact on the overall relev ance of the blog. In particular, we believ e that a rel-evant blog will con tinue to post relev ant posts throughout the timescale of the collection.
 With this in mind, we break the 11 week perio d of the Blog06 collection into a series of DI equal interv als (where DI is a parameter). Then for eac h blog, we measure the prop ortion of its posts from eac h time interv al that were re-triev ed in resp onse to a query . We de ne a Qscor e Dates for eac h blog B as follo w: where dateI nter val i ( posts ( B )) is the num ber of posts of blog B in the i th date interv al. Note that we smo oth this probabilit y distribution using Laplace smo othing to com bat sparsit y problems (e.g. when a blog had no posts in a date interv al). We integrate the Qscor e Dates ( B; Q ) evidence as: scor e ( B; Q ) = scor e ( B; Q ) Qscor e Dates ( B; Q ) ! where ! &gt; 0 is a free parameter. We use DI = 3, whic h ap-pro ximates the mon th where the post was made (the corpus timespan is 11 weeks). Initial exp erimen ts found that using higher values for DI does not change the results, due to the timespan of the corpus. Finally , note that as this evidence requires kno wledge of the ranking of posts for a query , it has to be calculated during the retriev al phase, but without adding high overheads.
We believ e that relev ant blogs will likely be blogs for whic h the topic area is a main interest of the blog, and the blog will not digress onto other topics excessiv ely. Statistically , this can be measured by examining the cohesiveness of the lan-guage mo del of the set of blog posts. Indeed, cohesion has been investigated in cluster analysis, with the view to ensur-ing that a cluster mo dels a coheren t set of documen ts [27].
In [17], Macdonald &amp; Ounis examined three measures of cohesiv eness, within the con text of query expansion for ex-pert searc h. A measure of cohesiv eness examines all the documen ts asso ciated with an aggregate, and measures on average, how di eren t eac h documen t is from all the docu-men ts asso ciated to the aggregate. In this work, the cohe-siveness of a blog feed B can be measured using the Cosine measure from the vector-space framew ork as follo ws: where posts ( B ) denotes the set of blog posts asso ciated with blog feed B . Moreo ver, tf p is the term frequency of term t in post p , and tf B is the total term frequency of term t in all posts asso ciated with blog B (denoted t 2 posts ( B )) -i.e. this is similar to the cen troid of a cluster. Cohesiv eness measures the mean div ergence between every documen t in the blog and the blog itself. Note that Cohesiv eness Cos bounded between 0 and 1, where 1 means that the posts have a completely cohesiv e language mo del. We integrate the cohesiv eness score with the scor e ( B; Q ) for a blog to a query as follo ws: where ! &gt; 0 is a free parameter. Similar to the cluster-ing approac h prop osed in Section 7.1, cohesiv eness can be calculated oine for eac h blog at indexing time.
Here, we test the prop osed cen tral interest features de-scrib ed above. We test only using the expCom bMNZ voting technique using permalink con ten t, as this is the best set-ting achiev ed thus far. The results of our exp erimen ts are detailed in Table 5. In particular, we rep ort two settings for Cohesiv eness, namely when the blog cohesiv eness is calcu-lated on the HTML permalink con ten t, and when the blog cohesiv eness is calculated on the XML con ten t. We believ e that using the XML con ten t will reduce the amoun t of noise introduces by the boilerplate HTML in eac h permalink blog post. As in Section 6, we rep ort the evaluation measures when the settings are obtained using the sparse training data (with only sev en queries), and when the settings are trained using the test data.

On analysing the results in Table 5, we mak e sev eral ob-serv ations: Firstly , the Dates feature is the most promising, resulting in statistically signi can t impro vemen ts in both MAP and P@10, even when using the sparse training data. Using optimal training, even results in a further increase -as high as 0.2980 MAP . In essence, the prop osed Dates feature successfully mo delled a notion of recurrence required by the blog distillation task.

Next, the Clusters approac h also results in statistically signi can t impro vemen ts in MAP , reac hing a high of 0.2654 MAP , suggesting that this technique has poten tial for iden ti-fying the cen tral interests of eac h blogger. Further investiga-tion of this technique may focus on using di eren t clustering techniques or similarit y functions.

Unexp ectedly , the cohesiv eness measures do not result in increased retriev al performance. In general, the trained pa-rameter value for ! is typically very small, indicating that the optimisation pro cess is recommending that the feature should not be applied. As discussed above, we calculated the cohesiv eness measure on two indices, from the XML con ten t and the permalink con ten t, to assess whether the noise intro-duced by the HTML boilerplate is behind the disapp ointing performance of the cohesiv eness measure. While the cohe-siveness measures calculated on the XML con ten t performs better when trained on the training queries, for the optimal setting there is little di erence between the measures cal-culated on the di eren t indices. Perhaps other metho ds of com bining this and the other cen tral and recurring interest sources of evidence with the voting technique retriev al score should be investigated to assess the full usefulness of these sources of evidence.

Overall, we conclude that the Dates and Clusters features are good evidence, whic h seem to have encompassed some asp ects of the task, namely the cen tralit y of the query topic to the blog, and the recurrence asp ect. One would exp ect that com bining these two features is a promising prosp ect, however suc h a com bination is not straigh tforw ard. In the future, we would like to investigate fully a uniform approac h of integrating suc h evidences, when more training data be-comes available.
In comparison with the participating systems in the TREC 2007 task, the best results rep orted so far would have rank ed between rst and second groups for automatic title-only runs [19]. In this section, we apply techniques to increase the retriev al performance of our system.
 Firstly , we apply a eld-based weigh ting mo del. Various Web IR studies have sho wn that taking into accoun t the dif-feren t frequencies of query terms in the title, body of eac h blog post, and in the anc hor text of incoming hyperlinks to the post, can have an impact on the retriev al performance of a system. We adapt DFRee to be a eld-based weigh ting mo del in a similar manner to Rob ertson et al. [25], and de-note the new weigh ting mo del as DFReeF. In DFReeF, the term frequency tf is computed as tf = P f w f tf f . Hence, tf is the weigh ted sum of the term frequencies of term t in eac h eld f . w f &gt; 0 are weigh ts that con trol the in uence of eac h eld in the ranking. We train w f using the training dataset with sev en queries describ ed earlier.

As discussed earlier, other weigh ting mo dels that con tain length normalisation comp onen ts that can be tuned may be better suited for e ectiv e retriev al performance. For this rea-son, we also sho w results using PL2 [1] and its eld-based deriv ativ e PL2F [14]. In PL2F, eld term frequencies are
Approac h MAP MRR P@10 MAP MRR P@10 expCom bMNZ -0.2584 0.7747 0.4667 -0.2584 0.7747 0.4667 + Dates ! = 0 : 48 0.2788 0.7893 0.5022 ! = 3 : 49 0.2980 0.7707 0.5289 com bined after eac h frequency has been normalised with re-spect to the average length of that eld in all documen ts of the collection. This allo ws the con tribution of the term oc-currence in a eld to be prop erly weigh ted. In this work, we use the parameter setting suggested in [7] for opinion nding on the Blog06 collection.

Secondly , we tak e into accoun t dep endence and pro xim-ity of query terms in blog posts to increase the retriev al e ectiv eness of the blog distillation searc h system. We use the DFR pBiL2 mo del to weigh t the occurrences of pairs of query terms that app ear within a given num ber of terms of eac h other in the documen t [14]. pBiL2 is a useful mo del for term dep endence, as it does not consider the frequency of the query term pair in the collection (whic h can be exp en-sive to compute), instead calculating the informativ eness of the query term pair occurring in eac h documen t based on the documen t's length.

Lastly , inspired by [6], we expand the original query by us-ing another collection, kno wn as collection enric hmen t [13]. This is achiev ed by performing retriev al on the other collec-tion, expanding and rew eighing the query , then using this expanded query to retriev e blog posts. We use the Bo1 term weigh ting mo del, whic h has previously been success-fully applied for collection enric hmen t [9]. In particular, we use a cop y of the Wikip edia database from a similar time-frame as Blog06 for collection enric hmen t. This is a useful source for collection enric hmen t as it helps to expand the concept queries to con tain other related terms using the rel-evant Wikip edia articles [2, 6]. We use Terrier's default setting of expansion of 10 terms from 3 documen ts.
In Table 6, we rstly compare the DFRee and PL2 weigh t-ing mo dels, together with their eld-based equiv alen ts. We can see that while PL2 performs almost iden tically to DFRee, PL2F mark edly outp erforms DFReeF. Moreo ver PL2F sta-tistically outp erforms the DFRee.

We now com bine the other various features describ ed pre-viously , including Norm2p, Pro ximit y, Dates and collection enric hmen t, with PL2F (statistical signi cance with resp ect to PL2F is sho wn in Table 6). Where the features con tain parameters, we use settings trained on the sev en training queries describ ed above. From the results, we note the fol-lowing: Norm2p con tinues to sho w signi can t impro vemen t when applied to the stronger PL2F ranking of posts; apply-ing Pro ximit y to PL2F + Norm2p does not impro ve MAP , but does impro ve MRR. In con trast, applying Dates with Norm2p and Pro ximit y impro ves MAP and P@10 but not MRR. Collection enric hmen t sho ws to be the best perform-ing additional feature, and com bination with Dates impro ves all measures further.

Comparing to the best TREC 2007 submitted runs, we note that our best setting is close to the best submitted au-tomatic title-only runs (MAP 0.3475 vs 0.3695). Moreo ver, the P@10 and MRR exhibited are mark edly higher than any Table 6: Applying di eren t documen t weigh ting mo dels (PL2 &amp; PL2F), enric hmen t and pro ximit y features in com bination with Blog Size normali-sation (Norm2p) and Recurring Interests (Dates).
 Statistical signi cance to PL2F is sho wn. of the submitted runs to TREC (MRR 0 : 8405 &gt; 0 : 8093, P@10 0 : 6044 &gt; 0 : 5356) [19]. The high performance of MAP of the best performing group is likely due to the more ex-tensiv e training they performed. For 8 queries, Elsas et al. man ually assessed for relev ance the blogs retriev ed down to rank 50 by a baseline system [6], and this is used as a train-ing dataset. In con trast, the settings for PL2F applied in this section are those rep orted in [7] for opinion nding on the same collection. In general, all the prop osed features in Sections 6, 7 and 8 would likely be impro ved given a more suitable and larger training dataset.

Overall, we conclude that the prop osed mo del for key blog distillation can perform e ectiv ely, esp ecially for the imp or-tan t high-precision evaluation measures.
In this work, we introduced and motiv ated the blog dis-tillation task, whic h recen tly ran as part of the TREC 2007 Blog trac k. We investigated the connections between this task and the exp ert searc h task, and examined two metho ds of ranking blogs for a query , namely voting techniques and virtual documen ts. Moreo ver, we also explored whether in-dexing the XML feed of a blog is sucien t for good retriev al performance, or whether the entire HTML permalink should be indexed for eac h post in a blog. Moreo ver, we compared and con trasted what usually works on the exp ert searc h task with our exp erimen tal results on the blog distillation task. In general, we found that the e ectiv e mo dels perform well on both tasks.

Our exp erimen tal results sho wed that while indexing only the XML feeds gave a reasonable retriev al performance, this was mark edly lower than indexing the full HTML permalink con ten t for eac h blog post. For a blog searc h engine, this is an imp ortan t result, as indexing permalink documen ts in this setting requires an extra 90GB of con ten t to be down-loaded in order to achiev e full retriev al e ectiv eness. For ranking, the voting techniques previously applied in exp ert searc h performed well, particularly on the full HTML perma-link con ten t.
Next, to remo ve any bias toward proli c blogs in the searc h engine ranking, we were inspired by previous work in documen t length normalisation. We investigated adding a normalisation comp onen t to the voting techniques, and found that this could indeed impro ve the retriev al perfor-mance. Finally , we prop osed various approac hes for iden ti-fying the cen tral and recurring interests of a blog with the aim to address the speci cs of the blog distillation task. Of the prop osed approac hes, we can iden tify the cen tral inter-ests of a blog using clustering, and can iden tify bloggers with recurring interests in a topic area by the regularit y of their relev ant posts. Clustering led to a 3% impro vemen t in MAP over the baseline. Recurring interests (Dates) led to a sta-tistically signi can t impro vemen t of 7% when little training is done, to 15% when a better setting is used.

The best exp erimen tal results in this study are extremely comp etitiv e and compare well to the curren t state-of-the-art at TREC, particularly when similar additional features suc h as collection enric hmen t and recurring interests (Dates) are applied. Further impro vemen ts may be achiev able given the availabilit y of appropriate training data -the upcoming TREC 2008 blog distillation task should allo w for additional insigh ts to be dra wn on the e ectiv eness of the various blog searc h techniques. In the future, we would like to broaden our researc h in this task to cover the analysis of link age pat-terns between blogs and how this information can be utilised to enhance the retriev al performance on this task, as well as extracting and utilising tags that bloggers may have added to their posts. [1] G. Amati. Probabilistic Models for Information [2] J. Arguello, J. Elsas, J. Callan, and J. Carb onell. [3] K. Balog, L. Azzopardi, and M. de Rijk e. Formal [4] N. Crasw ell and D. Hawking. Overview of TREC-2004 [5] N. Crasw ell, D. Hawking, A.-M. Vercoustre, and [6] J. Elsas, J. Arguello, J. Callan, and J. Carb onell. [7] D. Hannah, C. Macdonald, B. He, J. Peng, and [8] B. He. Term Frequency Normalisation for Information [9] B. He, and I. Ounis. Com bining elds for query [10] A. Java, P. Kolari, T. Finin, A. Joshi, and T. Oates. [11] S. Kirkpatric k, C. Gelatt, and M. Vecchi.
 [12] P. Kolari, T. Finin, A. Java, and A. Joshi. Spam in [13] K. L. Kw ok, and M. Chan. Impro ving two-stage [14] C. Lioma, C. Macdonald, V. Plac houras, J. Peng, B. [15] C. Macdonald and I. Ounis. The TREC Blogs06 [16] C. Macdonald and I. Ounis. Voting for Candidates: [17] C. Macdonald and I. Ounis. Exp ertise Drift and [18] C. Macdonald and I. Ounis. Searc hing for Exp ertise: [19] C. Macdonald, I. Ounis, and I. Sob oro . Overview of [20] G. Mishne and M. de Rijk e. A study of blog searc h. In [21] I. Ounis, G. Amati, V. Plac houras, B. He, [22] I. Ounis, M. de Rijk e, C. Macdonald, G. Mishne, and [23] C. J. van Rijsb ergen. Information Retriev al, 2 ed . [24] S. E. Rob ertson, S. Walker, M. Hanco ck-Beaulieu, [25] S. Rob ertson, H. Zaragoza and M. Taylor. Simple [26] A. Singhal, C. Buc kley , and M. Mitra. Piv oted [27] P.-N. Tan, M. Stein bac h, and V. Kumar. Intr oduction [28] Terrier 2.1 documen tation: Examples of using Terrier [29] M. Thelw all. Bloggers during the London attac ks: Top
