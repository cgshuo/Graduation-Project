 YI ZHUANG, YUETING ZHUANG Zhejiang University, P.R.China QING LI City University of Hong Kong, HKSAR, P.R.China LEI CHEN Hong Kong University of Science and Technology, HKSAR, P.R.China ________________________________________________________________________ 1. INTRODUCTION Chinese cultural heritage. Although these scripts can be available through public libraries or Internet, they can hardly be retrieve d by optical character recognition (OCR) which performs well on machine printed characters against clean backgroun d. The reasons why no effective techniques can support the re trieval of Chinese calligraphic characters written in different styles are as follows: (2) Deformation: The same writer under different moods can generate different (3) Degradation: Many ancient calligraphic works have been degraded by nature 
Moreover, so far, no efficient techniques have been proposed to retrieve and index large Chinese calligraphic character databases. In essence, the indexing issue of Chinese which considerable research work has been done on the high-dimensional indexing issue due to their unique characteristics:  X  To depict each Chinese calligraphic charact er, a set of contour points is extracted  X  The number of contour points of each ch aracter is different from each other owing 
In this paper, we address the effective and efficient issues of retrieving Chinese calligraphic character by mainly focusing on the index scheme. We first briefly review a [Zhuang et al. 2004], then we propose an interactive high-dimensional indexing scheme based on partial distance map (PDM), which is specifically designed for indexing the large Chinese calligraphic charact ers. In PDM, every character is regarded as a reference dimensional space is transformed into the search of its one nearest neighbor (NN) character over a B + -tree in the single-dimensional space. Moreover, in the single-dimensional space, we use the NN characte r of a query one and its corresponding approximate minimal bounding sphere to reduce the search range. calligraphic characters. The specific contri butions of this paper are as follows: 1. We propose a partial distance map (PDM)-based indexing method to facilitate the 3. We present a theoretical analysis and comparison on the search cost of the 
The rest of this paper is organized as follows. Related work is surveyed in Section 2; for the purpose of self-containment, we also briefly summarize our previous work on the Section 4, a PDM-based interactive high-dimensional indexing scheme is proposed to dramatically improve the performance of retrieving Chinese calligraphic characters. effectiveness of this approach. Finally, we conclude the paper in Section 8. 2. BACKGROUND In this section, we first review representativ e works on calligraphic character retrieval in Section 2.1, and then the techniques on hi gh dimensional space indexing in Section 2.2. necessary context for our subsequently discu ssion, we also summarize our previous work on the approximate point context (APC)-based retrieval method in Section 2.4. 2.1 Calligraphic Char acters Retrieval Numerous promising research works have been done on the handwriting recognition [Palmondon and Srihari 2000], e.g., a word-m atching technology is used to recognize George Washington X  X  manuscripts [Rath et al. 2002], and the ancient Hebrew manuscripts are identified in [Itay et al. 2004]. However, no published research work has rigid visual similarity-based method woul d work on retrieving Chinese calligraphic [2002] proposed an inspirational and similar approach to ours, but their approach focuses on general shape similarity among objects, wh ich is not suitable for Chinese calligraphic character retrieval due to th eir unique characteristics. 
Our earlier work [Zhuang et al. 2004] includes applying the projecting method [Wu et al. 1992] and the Earth Movers X  Distance(EMD) method [S. Cohen and L. Guibas, 1999] to retrieval of the Chinese calligraphic charac ter retrieval; they are briefly reviewed here: 
Projecting Method: In this work, two dimensional data of a calligraphic character image is first projected into one dimensional data in several directions. Then pixel Chinese characters are composed by five prim itive strokes (see [Zhang X.Z., 1992]): dot, dash, perpendicular down stroke, left falling st roke and right falling stroke; except dot the others have directions. If the projecting direction coincides with the stroke direction, then strokes. 
EMD Method: Earth Movers X  Distance (EMD) is a partial distance measure between discrete and finite distributions [S. Cohen and L. Guibas, 1999]. One way to visualize this character C2 as holes in the ground. Then the less work the Earth Mover has to do to fill holes with dirt, the more similar C1 and C2 are. 
However, these two recognition techniques are too rigid to be applied into practical [Zhuang et al. 2004], which is not suitable for large databases. 2.2 High-dimensional Indexing There is a long stream of research on solving the high-dimensional indexing problems [Bohm et al. 2001]. Existing techniques can be divided into three categories. Berchtold at al. 1996], etc. Although these methods generally perform well at low dimensionality, their performance deteriorates rapidly as dimensionality increases and the  X  Curse of Dimensionality ". 
The second category is to represent original feature vectors using smaller, approximate data compression. It divides the data sp ace into cells which ar e allocated unique bit-strings. For search, the entire VA-file is scanned to select candidate vectors which are verified by visiting the vector files. Although VA-file reduces the number of disk lower and some upper bounds on the distance to the query point, and determine the actual distances of candidate points. The IQ-tree is proposed to maintain a flat directory containing the minimum bounding rectangles of the approximate data representations. A-tree is another tree structure based on the Virtual Bounding Rectangles (VBRs) which are approximations of minimal bounding rectangles and data objects. 
The above two categories of indexing, however, are only suitable for indexing the multi-dimensional data with fixed dimensionality and do not fit for indexing the character high-dimensional indexing. The distance-metric-based approach can be more promising for indexing character features, since it does not heavily depend on the dimensionality of a character. Examples include M-tree [P. Ciaccia, M. Patella, and P. Zezula, 1997], proposed for the generic metric space. NB-tr ee is a single reference point-based scheme, in which high-dimensional points are mapped to single-dimensional distance values by of NB-tree is that it can not significantly pr une the search region and especially when the dimensionality becomes larger. iDistance is pro posed to improve the search efficiency by appropriate. The inherent lossy transformation of data points into one-dimensional values query sphere may intersect all the partitions so that the query radius covers all the high-dimensional spaces. 2.3 Relevance Feedback Relevance feedback is a fundamental technique in CBIR, which was introduced into CBIR in the 1990s [Rui et al. 1998] from text-based information retrieval. With relevance feedback, a user can label a few (more) images as new examples for the retrieval engine if he or she is not satisfied with the current retrieval result. These new images refine the original query implicitly, which enables the relevance feedback process to bridge the gap between high-level image semantics and lo w-level image features [Zhou and Huang 2003]. From the viewpoint of machine learning, the image retrieval engine in fact images. Here an image is positive if it is relevant to the user query and negative otherwise. characteristics [Zhou and Huang 2003], namely, small sample size , asymmetrical training sample , and real time requirement . 
The small sample size problem is due to the fact that few users would be so patient to many machine learning algorith ms focusing on learning with a finite number of training examples, learning with an extremely small nu mber of training examples remains a very The first one is to design a smart mechanism that would deal with the limited number of training examples directly [Ishikawa et al. 1998] and [Zhou and Huang 2001]. The database [Zhou et al. 2006]. 
The asymmetrical training sample problem is inherent in CBIR. Although in CBIR, it is reasonable to assume that all the positive ex amples belong to the same target class, it is negative examples may belong to different irrelevant classes and the small number of negative examples can hardly be representative fo r all the irrelevant classes. Therefore, it [1996] chose image sets that most effi ciently describe positive examples under the Lippman [2000] used a Bayesian model where the classes under which negative query and then used negative examples to refine the query by considering the occurrences of features in positive and negative examples. Zhou and Huang [2003] assumed that positive examples have a compact low-dimensional support while negative examples can have any configuration, and therefore they used BDA (Biased Discriminant Analysis) to find the low-dimensional space in which pos itive examples cluster together while the negative ones scatter away. Zhang and Zhan g [2004] assumed that each negative example represents a unique potential semantic class and used a kernel density estimator to determine the statistical distribution of the irrelevant classes. 
The real time requirement problem is due to th e fact that the user usually wishes to get the retrieval results as soon as possible, and few users will be so patient to take part in a time-consuming interaction process. A reasonable way to address the real time issue is to adopt efficient image storage stru ctures, such as the hierarchical tree structure [Chen et al. 2000]. However, using such a structure may make the learning task more difficult because the structure has to be updated once new knowledge is discovered through user rapidly in processing the queries [Tieu and Viola, 2000]. 2.4 APC-Based Chinese Calligraphic Character Retrieval: a Summary isolated characters. To provide a necessary background and context for our subsequent study, in this section, we briefly summarize our previous work on the approximate point used in this paper. { V composed of two-dimensional coordinate values &lt; x,y &gt; and j [1, m ]. 
The source data for similarity matching is obtained through preprocessing, which includes the following four steps: (i) Binarization : As shown in Figure 2, the script image, which was obtained by a scanner, was first smoothed and converted to binary image since the colorful background of the image is not useful in the similarity matching process. (ii) Segmentation : As shown in Figure 3, the minimum bounding rectangles are the characters are normalized in order to keep scale invariant. In our work, the normalized scale size is 32  X  32 in pixels. Then, the information of these contour points are saved in an array instead of in a 32  X  32 matrix. For calligraphic character retrieval, shape is far more significant than color and texture. In our approach, approximate point context (APC) is used to describe shape. coordinate is more suitable to describe directional relationship of points than the Cartesian one, as shown in Figure 4. 
For directional information, we use 8 bins in the same degree to divide the whole space into 8 regions (i.e., directions). Note that 8 is an empirical value as suggested in [Zhuang et al. 2004]. As for radius, 4 bins are used with respect to the values of log 2 r . For example, when r =2, r =4, r =8, r =16 and r =32. 
Definition 1 . For each point p i of a given point set composed of m sampled points, we describe its approximate point context( APC ) by its relationship with the remainder ( m -1 ) points using coarse k bins: the k-th bin of point p i . Note that due to the shape complexity of ev ery character, the number of contour points of pixels that fall into the 25-th bin and the 31-th are 5 and 28 respectively, which can be denoted as w i (25)=5 and w i (31)=28. the point q i if and only if the following constraint is satisfied: set to 1/3 as suggested in [Zhuang et al. 2004]. matching value of these two points is defined as: minimum point matching cost for q i is as follows: 
Finally, the total matching cost of the two character images(i.e., V q and V c ) is defined as: where ED(q i ,corresp ( q i )) is the Euclidean di stance between point q i and its approximate that APC performs much better than other methods like Projecting [Wu et al. 1992] and EMD [Cohen et al. 1999] in terms of effectiveness. 3. SYSTEM OVERVIEW and indexing of the Chinese calligraphic char acter databases, as shown in Figure 5. 
First of all, a large number of Chinese callig raphic scripts are scanned as raw data, and the scanned images are isolated into some i ndividual characters before being saved in the Chinese calligraphic character database(  X  ). By preprocessing the raw image data, the database (e.g., SQL Server). Once the proc ess of feature extraction is completed, partial distance map (PDM)-based high-dimensional index for these calligraphic characters is constructed (discussed in the next section) to support fast retrieval process of the Chinese calligraphic characters. It is worth mentioning that the element in the PDM refers to the similarity measurement between two corresponding characters, which is based on the approximate point context (APC) of these two characters (see Section 2.4). 
Secondly, once the PDM index is constructed, fast retrieval of the Chinese calligraphic character is submitted, the feature extraction procedure is invoked to extract the contour query character based on the PDM index. Wh en a user receives the candidate characters query among the candidate characters through a relevance feedback process. With this process, the user X  X  indication of positive examples can be returned to the PDM index, and thus continue to correct the partial distance map . In this way, a higher precision ratio of PDM index can be expected, resulting in the fi nal answer set that contains the characters that are semantically identical to the query character submitted by the user. 4. INTERACTIVE PARTIAL DISTANCE MAP In this section, we describe a novel interactive high-dimensional indexing technique, APC-based method as reviewed in Section 2.4. 4.1 Preliminaries ( dis )similarity between characters can be derived and ordered based on their distances to a reference character. Secondly, distance is essentially a single dimensional value which enables us to reuse existing single dimensional indexes such as B + -tree; Thirdly, as to the query character could be distinguished quickly and accurately through user X  X  relevance feedback. In the case of image retrieval, as a contrast, different people may have different tastes about an image, therefor e it is not easy to identify the similarity of two images and image relevance feedback is not as effective as character relevance feedback. Finally, for a character V q , there are only a few characters whose distances from it are relatively small (similar to V q ), thus the number of characters neighboring to V q which should be returned as the result is not many. 
The Partial Distance Map (PDM) is designed to support interactive and efficient retrieval for the large Chinese calligraphic character by using the relevance feedback [Rui et al. 1998], aiming at establishing the link between semantic-level concepts of characters which characters he or she thinks are similar to the query character. During the retrieval needs. 4.2 The Data Structure Based on the observation and analysis of the search results of Chinese calligraphic candidate characters as the desired index keys. 
In PDM , each character is regarded as a reference one, the distances between the map with the constraint of the pruning distance (defined as PD below) adjustable through with the aid of its NN character V p and the PDM . upper bounding value of distance (radius) for V i and PD (V i ), adjustable by user relevance feedback, can be formally defined as: TRUE .

Initially, PD( V i ) is set to be 150 empirically, but it gets updated through user relevance V , V j  X   X  . as shown in Figure 6, if PD( V p ) is equal to 100, the largest upper bounding distance value of the character  X   X   X  is 100. Note that, each individual character V i has its own PD. Definition 3. Let V q be a query character, the Virtual Query Radius ( VQR for short ) of V is the actual search radius, denoted as VQR (V q ), where V q  X   X  . 
T HEOREM 1. Let V q be a query character, V p its NN character and r a query radius, then the Virtual Query Radius ( VQR for short) of V p can be defined as: where PD( V p ) means the distance threshold of V p set by users X  relevance feedback, V p  X   X  and V q  X   X  ,  X  refers to the distance between V q and V p . PD ( V p ) with  X  + r , viz., PD( V p )  X   X  + r and PD( V p )&lt;  X  + r . sphere centered in V q with radius r , denoted as  X  ( V q , r ), so VQR( V p )=  X  + r . VQR( V p )=PD( V p ). Based on the analysis of the above two cases, we conclude that else VQR( V p )=  X  + r . neighboring character . 
We call the adjacency list as partial di stance map because given a character V i and its pruning distance PD( V i ), the candidate characters to be indexed is limited, not other ( n -1) of candidate characters which are similar to the character V i with the constraint of its PD. into search of the PDM, it is crucial to create an index for it. 4.3 The Pruning Distance Table As mentioned in Section 4.2, different characters may have their own PD s . The basic idea of the pruning distance table is to record and update the PD of each character dynamically via users X  relevance feedbacks so as to ach ieve a high query precision consistently. pairs containing the corresponding PD s of the different characters, formally denoted as: where PD (V i ) refers to the pruning distance of the i -th character.

In the initialization stage of a PDT , the maximal pruning distance ( MPD for short) refers defined by the system. That is to say, an y two characters whose distance from each other study, let MPD be 150, i.e., the initial PD is 150 in the PDT . The PD of each character is feedback of V i is one. Otherwise, if some new char acters which are sema ntically identical to V i are added into  X  , more relevance feedback efforts are needed for V i , but not much. Figure 7 outlines the PDT incremental maintena nce algorithm. It is worth mentioning that discussed in Section 5.2). This procedure also returns V p , the one nearest character of V q refers to the largest number of candidate ch aracters which are simila r to the query one(i.e., V ) and is set 30 empirically. Thus, the total number of semantically identical characters standard B + -tree routines respectively. CharacterID ( V p ) returns the ID number of character V . 4.4 Building PDM For PDM, each character V i corresponds, in the single -dimensional space, to the 
However, since the distance values of each pa ir of characters are relatively large due to constant MPD . Therefore the key value of the i -th character is derived as follows: algorithm, the initialization of pruning distance table ( PDT) is conducted first (lines 1-3). Then the index header file of PDM is created in line 4. For each character V i , the distance between V i and its other ( n -1) characters are computed. If the distance value is less than function as shown in Eq. (9). 4.5 Index Update Algorithm The PDM structure we have described so far is suitable for static databases. However, we can also make it to handle dynamic databases. In this section, we introduce the insertion and deletion algorithm of PDM respectively. 4.5.1 Insertion of PDM We now investigate the PDM insertion problem. As shown in Figure 9, given a new calculated. If the distance value is less than the MPD (line 2) which indicates that V new may index(line4) with a small transformation effort(line 3). Meanwhile if V i has been relevantly fed back(line 6) and if the distance between these two characters is larger than V  X  X  own PD , then the character V i should be labeled as irrelevant as per user X  X  relevance feedback (lines7-8). 4.5.2 Deletion of PDM Although deletion is different from insertion, we can similarly apply the scheme dealing which are identical to V del can be obtained by scanning the whole database(  X  )(lines 1-2). keys of them are deleted in the PDM index (lines 3-7). Meanwhile these characters which are identical to V del are deleted in the PDT (line 10). 5. PSEUDO KNN SEARCH In this section, we address the problem of how to search the high-dimensional characters (denoted as HCR ) in Section 5.1. The basic idea of the HCR is to find the NN character of the concept of Pseudo k-NN search (P k -NN) which is specifically designed to support the PDM-based k -NN search. 5.1 Hyper-Centre Relocation We begin with introducing the concept of the approximate minimal bounding sphere , which is an approximate repres entation of the query sphere  X  ( V q , r ) . Then we propose the centre relocation algorithm based on the above mentioned DDM-based approach. 5.1.1 Preliminaries  X  Approximate Minimal Bounding Sphere Given a query sphere  X  ( V q , r ), the approximate minimal bounding sphere ( AMBS ) of it is and r as the radius. And a dash circle represents its approximate minimal bounding sphere character of V q , could be found by the centre relocation of V q (studied next). we proofed in Theorem 1, although in this case the AMBS of  X  ( V q , r ) dose not contain the characters in  X  , which are semantically identical to V q .  X  Clustering Characters using an agglomerative hierarchical clusteri ng algorithm (e.g., BIRCH [Zhang et al. the boundary of the cluster. Thus we mode l a cluster as a tightly bounded sphere described by its centroid and radius . radius and i  X  [1, T ]. 5.1.2 Centre Relocation Algorithm As mentioned above, the concept of AMBS is proposed to approximately represent the query sphere. We now move on to the problem of how to quickly get the new center by using a DDM-based approach consisting of both uniform-start-distance ( USD )-based and centroid-distance( CD )-based methods. The underlying idea is due to two key start-distance and centroid distance; second, in most cases these two characters are in the same cluster C i for some i  X  [1, T ]. SD( V i )= d ( V i , V o ) (10) dimensionality of V i is the same to that of V o and the two-dimensional coordinate values of each point in V o is &lt;0,0&gt;.

As mentioned before, the number of cont our points for each Chinese calligraphic character is different. So it is hard to find the NN character of the query one correctly by different dimensionalities is nonsensical. He re the dimensionality of each character dimensionality normalization to handle this problem. Definition 10( Uniform Start Distance ). Given a character V i with dimensionality d i , the U niform S tart-D istance ( USD for short) of it is formally defined as: D  X  d i , i [1,n] . the distance between V i and O j  X  the centre of cluster that V i belongs to: cluster C j . where  X  i refers to the i -th character in  X  ;  X  Cid is the ID of the cluster V i belongs to;  X  USD refers to the uniform start distance of V i as defined in Definition 10;  X  CD refers to the centroid distance of V i as defined in Definition 11; shown as follows: search ranges of USD and CD could not be overlapped.  X  are grouped into T clusters by using the BIRCH [Zhang et al. 1996] algorithm (line 1). A new B + -tree head file is then created (line 2) through the routine newDDM() . For each (line 5). Finally, the index keys are inserted into B + -tree (line 6). NN character. As different characters may correspond to diverse  X  , an important question here is how to get the appropriate value of  X  . In our study, we have used 12,000 isolated character images as experimental data to estimate the statistical distribution of  X  [Cadal. characters drop in the different range of  X  can be described using a Gaussian model. By superimposing the ( red ) curve of the estimated Gaussian distribution for the  X  , the curve nicely captures the shape of the bins showing the probability. As we know, for a random the probability of finding its NN character is 99.74%, close to 100%. So we can let  X  be 3  X  , where  X  is the minimal radius of the hyper-centre relocation, shown in Figure 14. 
The detailed steps of our hyper-centre relocation (HCR) algorithm are shown in Figure 15. The algorithm begins by scanning the auxiliary structure to identify the cluster spheres that overlap query one,  X  ( V q ,  X  ) (line2). There are three main cases to consider. hyper-centre(line 4). And then we exit the loop (line5); candidate NN character V tmp returned in the prior loop is conducted to determine which is the nearest character to V q (line8); need to examine the data space. candidate characters and V q to get its NN one, V p . 5.2 Pseudo k-NN Search Algorithm search called the Pseudo k-NN search (P k-NN), which is especially designed for PDM-based Chinese calligra phic character search. 
According to the PDM query rationale, given a query character V q , due to the characters since the number of se mantically similar characters to V q may be limited in the mentioning that P k-NN search for none-relevance-feedback-based PDM ( NRF-based PDM  X  ) is equal to the conventional k-NN search if k is not very large. Before examining the algorithm, let us briefly discuss some important routines. Routine RSearch (V p ,r) returns the candidate characters for a range search with centre V p the candidate character set. 
As shown in Figure 16, the entire query process is performed in three steps. First, when (line 9). It is worth mentioning that the symbol | S | has two meanings: 1). the total number larger than the VQR of V p , then the search is stopped (line 15). Note that, in this case, the number of characters returned by PDM is less than k . 6. THEORETICAL ANALYSIS As mentioned in Section 5.2, a Pseudo k-NN(P k -NN) search is completed through iteratively performing a range search. For simplicity of discussion, the performance of a range search with the same radius using the three indexing schemes are investigated and compared with respect to their search regions. 6.1 Search Region NB-tree [Fonseca et al. 2003], its search region is derived as: where  X  means the complementary space of that  X  stands for. follows: 
Therefore, for the range search of PDM, without loss of ge nerality, we assume that the with the query one in the range search of iDistance with the same radius r . As shown in Figure 11, the searching region of PDM could be represented as: 
T HEOREM 2. Given a query character V q , if the number of characters n is large enough, uniformly distributed character set in a normalized data space [0,1] D with n characters, D nearest-neighbor distance can be approximated by the volume of the sphere, which, on average, contains one character . The high-dimensional space with radius r can be calculated by: /2 ()
From the formula above, assuming that D is fixed, when n  X  X  X  , we have: E ( dist nn ( n , D ))  X  0, viz. E (  X  )  X  0.  X 
Due to Theorem 2, we have 0 lim region of PDM is as follows: Furthermore, as mentioned above, for the same range search, the search region of NB-tree and iDistance are as presented in Eq.s (15) and (16) respectively. When n is set large enough, the search region of NB-tree can be derived as: 
Similarly, the search region of iDistance is shown below: 
Based on the analysis above, we can conclude from Eq.s (19-20) that the number of characters( n ) has nothing to do with the search regions of iDistance and NB-tree, but has an effect on the search regi on of PDM with the same range search. Additionally, with the increase of n , the search region of PDM is gradually reduced to that of the query sphere,  X  ( V p , r ). However it is obvious that the search regions of iDistance and NB-tree are both worth mentioning that if we directly apply the DDM method to the k-NN search of V q , its search region could be derived as: becomes evidently larger than that of PDM, which also conforms with the experimental evaluation to be detailed in Section 7. 6.2 Cost Model Next, we derive a cost model of PDM in whic h query cost is measur ed by the number of nodes that have been accessed. Some frequen tly used symbols are shown in Table II. to be indexed is 
For a range search, the total query cost should be comprised of two parts: the first is to search from the root node to the leaf node and the second is the range search among the V =NN( V q ). 
We now investigate the query cost T R of the hyper-centre relocation (HCR). Both h and n should be met in Eq. (25): (DDM) is 
For a range search in the DDM index, the total number of characters accessed is where Vol (  X  ) refers to the volume of  X  . 
Based on the above analysis, the total cost( height + number of leaf nodes+ refinement ) for a range search in the DDM index where T c is the average CPU cost of the co mparison between any two characters. DDM , denoted as T R , is shown below: 
Now we get the total range query cost of the DDM by combining Eq. (24) with Eq. (29) together: 
Note that, for the hyper-centre relocation, without loss of generality, assuming that the variation of  X  . relocation of sphere T R and the cost for the range search T Q , as shown in Eq. (31). where V p =NN( V q ) and T c is the average CPU cost by co mparing each pair of characters. entries in a node, is mainly proportional to the number of characters. In Eq. (32), T and  X  are tw o tunable parameters which could affect the query performance of PDM. Therefore the moderate value of T and  X  is critically important to the query optimization of the HCR . 7. EXPERIMENTAL RESULTS In this section, we present an extensive perf ormance study to evaluate the effectiveness of PDM and compare it to the following compe titive techniques: iDistance and NB-Tree. We have implemented PDM in C language and used B + -tree as the single dimensional index structure. All the experiments are exec uted on a Pentium IV CPU at 2.0GHz with 256 Mbytes memory and index page size is set to 4096 Bytes. 
To verify the effectiveness of PDM, we us ed the Chinese Calligraphic characters image data from China-America Academic Digital Library Project [Cadal. 2005] as the experimental data which contains a set of contour point features extracted from the 12,000 characters images in which eac h feature point is composed of &lt; x axis, y axis &gt;. the performance metric. All the following experiments are measured in terms of the average disk page access, and the CPU time over 100 queries. Note that, since the dimensionality on the search performance. 7.1 Effectiveness of the Retrieval Method Chinese calligraphic characters based on PDM. aid of PDM index. The numbers below the candi date images are similarity metric values. Relevance feedbacks are used to correct the PDM step by step so as to enhance the users X  experiences of retrieving Chinese calligraphic characters. We denote the set of ground-truth as rel , and the set of results returned by a NRF-based P k-NN search as ret , the recall and precision to measure this retrieval method are defined by Eq. (33): 
Figure 18 illustrates a Recall-Precision curve for the performance comparisons among the approximate point context (APC) method, the Projecting method [Wu et al. 1992] and the EMD method [Cohen et al. 1999]. It compares the average retrieval result (the chosen from the database. Each of them has more than 4 different calligraphic styles. The result shows that the retrieval performance of the APC method is better than those of the other two methods by a large margin. 7.2 Efficiency of PDM Indexing 7.2.1 Effect of Data Size In this experiment, we measured the performance behavior with varying number of characters. As mentioned in Section 5.2, the P k-NN search for the NRF-based PDM equals conventional k-NN search. Owing to considerations of the objectivity and fairness, we compared the RF-based PDM, NRF-based PDM, iDistance and NB-tree in terms of the 10-NN search performance with a varying number of characters ranging from 2,000 to 10,000. 
In Figure 19(a), the experimental result shows that the I/O cost of NRF-based PDM is during the query process, it is an I/O intensive operation. 
Figure 19(b) shows the performance of query processing in terms of CPU cost. It is evident that RF-based PDM significantly outperforms iDistance and NB-tree methods and is slightly better than NRF-based PDM as the data size increases . (Note that the CPU cost of sequential scan is ignored since the computation cost of it is very expensive). We CPU-intensive operation. 7.2.2 Performance Behavior Over k RF-based PDM, NRF-based PDM, iDistance an d NB-tree were compared in terms of the k-NN search performance. Figures 20(a) and 20(b) both indicate that when k ranges from 10 to 40, the RF-based PDM is superior to other methods in terms of page access. Due to that its centre relocation is a CPU-intensive task, the CPU co st of RF-based PDM is only slightly better than NRF-based PDM. (Again for the same reas on as above, the CPU cost of sequential scan is ignored here). 7.2.3 Effect of T on the Efficiency of the HCR tuning factor. 7.2.4 Effect of  X  on the Efficiency of the HCR identical search radius in the hyper-centre relocation(HCR) process. Figure 22 illustrates that the number of candidate character re trieved by DDM decreases gradually as  X  increases. That is to say, DDM X  X  search efficiency cannot improve further when  X  (  X  X  X  (), i USD V  X  ) difference, namely the precision of index key, becomes smaller when compared to USD( V i ). The DDM X  X  efficiency will not improve further once  X  reaches an search region of DDM is larg er than that of iDistance. Subsequently, with the increase of  X  , DDM X  X  search efficiency gets better th an that of iDistance and NB-tree. So  X  is also a  X  =4 is an optimal value. 7.2.5 Effect of Dynamic Insertion In this experiment, we investigated the ef fect of dynamic insertion on our indexing method. (The deletion operation had similar outcomes, so we omit it here). We f irs t u s ed the 10,000 characters as the experiment data to construct PDM using 80% (8,000) of the data, and then ran some P k-NN queries and record the average total response time. Next, process is repeated until all the remaining 20% of the characters are inserted. We keep the 100% of 10,000 characters(i.e., the optimal case of PDM with no updates). The total them becomes larger as more characters are in serted, but the largest difference is within 20% even in the case of 20% newly inserted characters. As shown in Section 7.2.3, assuming that the number of clusters in the HCR is optimal at first, but as more anymore since it is still unchanged. Hence the performance becomes degraded to some extent. 7.2.6 Comparison of Index Precision Figure 24 shows the comparison of the average precision ratio of P k-NN search both for both RF-based PDM and NRF-based PDM. As before, we denote the set of ground-truth as defined in Eq. (33). This experiment indicates that with the increase of k , the average precision ratio of the RF-based PDM is larger than that of NR F-based PDM by a large margin. Especially large amount of dissimilar characters have already been pruned out through user relevance feedback sessions. 8. CONCLUSIONS AND FUTURE WORK In this paper, we have first summarized a new approach to retrieving Chinese calligraphic characters by matching character images based on approximate point correspondence (APC) algorithm. A prototype retrieval system is implemented to demonstrate the proposed a novel partial distance map (PDM)-based interactive high-dimensional have shown by extensive performance studies that our method is more efficient than other index schemes, including iDistance, NB-tree and linear scan. Furthermore, being a implemented as a stored procedure. 
The work presented in this paper motivates several directions for future work. First, the efficiency of Hyper-centre relocation may be further enhanced if more powerful pruning algorithms we have developed can have utility in domains as diverse as 3D model thus interested in applying our algorithms to these more exotic applications as well. ACKNOWLEDGEMENTS Thanks for the anonymous reviewers X  insightful comments. The authors would also like to thank the members of the CADAL project in Zhejiang University for generously providing us with the dataset of the 12,000 segmented Chinese Calligraphic character images for testing. REFERENCES 
