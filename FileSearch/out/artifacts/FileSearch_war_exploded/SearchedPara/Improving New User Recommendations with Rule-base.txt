 With recommender systems, users receive items recom mended on the basis of their profile. New users experience th e cold start problem: as their profile is very poor, the system performs very improved by exploiting the cold user data, i.e. the user data that is automatically associate the new user with a better first profile. Relying on the existing  X  -community spaces model, a rule-based induction process is used and a recommendation proc ess based on the  X  X evel of agreement X  principle is defined. The experiments show that the quality of recommendations compares t o that obtained after a classical new user technique, whil e the new user effort is smaller as no initial ratings are asked. H.3 [ Information Storage And Retrieval ]: H.3.3 Information Search and Retrieval  X  information filtering ; H.3.4 Systems and Software  X  user profiles and alert services. Algorithms, Design, Experimentation, Human Factors.
 Recommender Systems, Collaborative Filtering, Cold start Problem, New-user Problem. Rule-based Induction, Co ld User Data In collaborative filtering systems, users receive i tems on the basis of the ratings they have already provided together with the ratings compared to user U in order to focus on the ratings made by users which makes it difficult for the system to provide recommendations. This problem is one of the well-kn own cold start problems, called new-user problem [12]. There are various approaches and techniques to overcome this problem, many of which requiring new users to provide enough ratings for the system to reach a good level of recommendation qual ity. This first task is both difficult and cumbersome. In the present work, a general approach is defined, that aims at keeping the new user effort down, by exploiting of all available used to denote the new user data that is available at cold start time. It includes all the data that is readily avai lable or that can be effortlessly collected, as for instance demographic data like age, location, occupation, or any other type of data all owing users to be grouped into communities. The present work builds on the  X  -community spaces model [19] [18] that defines a general framework to explicitly group similar users into  X  -communities. An  X  -community space is a partition of the set of all users according to the similarity fa ctor denoted by In a given collaborative filtering setting, the set of available the building of |A| community spaces. In traditiona l collaborative filtering, there is one single community space, wit h the similarity of ratings. factors  X  , and allows estimating an a priori position for new user U in these  X  -communities. Collaborative filtering is then processed on each of these alternate  X  -community spaces. The goal is to obtain similar performances to those obt ained with traditional cold start techniques, together with a smaller effort required from new users. techniques is made; then the proposal is presented as well as the background knowledge useful for understanding; it i s then shown how the approach is applied to the case of MovieLen s dataset; finally the experiments are described and the resul ts analyzed, before conclusion. Cold start situations occur at the beginning of the use of a recommender system: in such cases, the system lacks data to produce appropriate recommendations. There are 3 di fferent types of cold start problems [2]: new system [15], new it em [25] [7], and new user. The focus here is on new user cold st art situations, where the user has not provided any rating yet, whi ch leads to low recommendation performance. The answers to this problem vary according to the t ype of filtering. Except from the case where external sour ces of information are available on users, the user is alw ays asked to bring a contribution. Depending on the nature of th e contribution, the user task is more or less difficult and cumbers ome, and the results are more or less reliable. For collaborative filtering [1], new users are gene rally asked to connection with the new user X  X  specific interests. This task is simple, but cumbersome. For instance, MovieLens rec ommender system [17] requires at least 15 ratings before it is able to provide recommendations, but as the set of proposed movies are not focused on the user, he/she may not be able to rate all of them; as a consequence, he/she may have to go through a very long list of movies to achieve the task. Existing work on this t opic aims at finding the best items to be shown to new users, re gardless of the particular user at stake [24]. For content-based filtering and hybrid filtering [2 ], new users are terms or example items that best describe them [13] [5]. The required effort is important, as new users have to formulate and synthesize their interests under the form of terms, or have to search for relevant example items. The latter task may be automated when external data on users is available to the system; the authors of publications [14] [15]. But in the g eneral case, this kind of data is not available and the resulting pro files are likely to be incomplete and noisy. Finally, another approach consists in associating a ny new user with a stereotype among a set of predefined ones. T he building process of these stereotypes requires learning data . Then the cold start process requires some data about the new user in order to match him/her to one of the stereotypes. This data is generally collected by the system in an interactive way, for instance by asking a series of questions [10], but also in expl oiting demographic resources such as the contents of homep ages. In [20], Pazzani studies the intrinsic capacity of the demographic approach to recommendation, in taking new users hom epages as an input to automatically feed a demographic recomm ender system; he concludes that results obtained with the demographic approach are not as good as those obtained with col laborative or content-based systems, but are nonetheless reasonab ly good. To conclude, these cold start processes all have a cost for new users, as they require an effort from them, either in terms of time spent, or through the achievement of a difficult or cumbersome task. This paper studies the quality obtained with an app roach where no users (for instance demographic data such as age, l ocation, occupation, but also potentially any other type of data that allows grouping users into classes). The presented approac h is close to the stereotypes approach, but Furthermore, the framework of  X  -community spaces in which the approach is developed, is motivated by anticipated further use cases as mentioned in [9], and such as: First, the  X  -community spaces model is briefly presented, introducing the user  X  X osition vector X . Then the le vel of agreement recommendation process is described: it i s an ad hoc approach that allows for recommendation in the cont ext of community spaces. Figure 1 gives an overview of the standard recommendation process proposed. For a given user U , his/her communities are computed, which produces a position vector P. Level of agreement recommendation can then be proce ssed in order to produce a list of recommendations for U. The last subsection shows how an incomplete positio n vector can be completed via rule-based induction: it is the he art of the present proposal that allows coping with new user s ituations by exploiting cold user data. The  X  -community spaces model [18] aims at accounting for all available user similarity factors  X  that allow grouping users in different ways, as these various groupings are expe cted In addition, and this is the main point here, this model shall serve as a basis for capturing new users profiles with a limited effort on their behalf. Figure 1. Recommendation process based on  X  -communities In a given system setting, the set of available use r similarity factors  X  is identified and denoted by A. For instance in th e well-known MovieLens setting [16], age, occupation, loca tion, favorite genre, and ratings are such  X   X  A. Every user U is then associated with a personal position vector P which defines, fo r each the community that he/she belongs to (see Figure 2) . The picture shows that a user will have different neighbors dep ending on Documentary, Gr#2]. Figure 2.  X  -communities and example of U 3 position vector All the position vectors are grouped into a communi ty table (see Table 1) that will be exploited later for induction . Users/  X  = Occupation Location Favorite genre Ratings Depending on the nature of  X  , the way communities are computed will vary. For instance, for  X  = Age, categories will be defined, such as  X  X hildren X ,  X  X eenagers X ,  X  X dults X ,  X  X eniors  X , and users easily categorized with a simple interval-based cha racteristic function. For  X  = Favorite genre, as the favorite genre of each us er basis of statistics on user past ratings for instan ce. For a clustering process will be required to produce  X  (see [18] for more about this). To conclude, every user U has a position vector P = [G where each G  X  denotes the  X  -communities he/she belongs to. A plain ad hoc recommendation process is proposed: the level of agreement recommendation process. For a given  X  -community G, factor  X  , a recommendation list is produced. More precisely , this process recommends the items that reach a sufficien t  X  X evel of agreement X  among the members of G, according to the past ratings made by these users. The selection of recommended items is made as follo ws: given an  X  -community G, The score of each movie in the recommendation list is the average rating among G members. For a given user U with position vector P = [G  X  ] |A| recommendation lists can be produced with this process: one list per  X  -community in P. In some cases, some of the positions in the vector P may be missing, or uncertain. In new user situations, posi tions will be typically missing for  X  = Favorite genre and  X  = Ratings, whereas positions will be typically available for  X  = Occupation or  X  = Location, as these similarity factors rely on co ld user data. For instance, new user U 13 may have position vector: Let A Cold denote the subset of A corresponding to similarity factors  X  that can be directly obtained from cold user data. Figure 3 gives an overview of the recommendation pr ocess proposed in new user situations. For a given user U , his/her  X  -communities are computed for  X   X  A Cold , which produces an incomplete position vector P. Rule-based induction is then processed in order to complete the position vector with the help of the past data from the system, i.e. the community t able (see Table 1), which contains all the already complete positio n vectors. Once completed, the position vector allows for level of agreement recommendation on  X  -communities for all  X   X  A. Figure 3. Recommendation process in new user situat ions The rule-based induction method [23] [3] [11] [4] i nduction approach is based on the rough-sets theory proposed by Pawlak dependence of a given attribute upon other attribut es ; this theory is chosen because of its good performance, but also because: This type of method begins with a learning phase that exploits of  X   X  A \ X called  X  X ecision X  for which the missing valu e is to be estimated. For a given user U, X is the set of remaining  X  for which the value is unknown in P. At cold-start time, X will be generally taken as equal to A Cold . Then follows the induction phase where for a given user U with premise X, an applicable rule r: X d is searched (see [23] for details). The quality of a rule  X  (r) is generally based on the two following ratios computed with the community table: 1. the support of r: 2. the confidence of r: The following rule quality measure is adopted: In order to measure the quality of the vector compl etion obtained by this method, level of agreement recommendation w ill be processed on the corresponding  X  -communities, and the quality of recommendation will be evaluated. This recommendation method is illustrated as applie d to the case of the MovieLens dataset in order to show how it co ntributes to solve the new user problem with the help of cold us er data. The MovieLens dataset [16] allows building 5 commun ity spaces: Age, Occupation, Location, Favorite genre and Ratin gs. Hence, the community table, that contains all the position vectors for existing users, has 5 columns: age, occupation, loc ation, favorite genre and ratings. For  X  = Age, users are grouped into 5 communities on the basis of the following 5 age segments: under 16, 16-25, 26-4 5, 46-60, over 60. For  X  = Occupation, occupations are grouped into the fol lowing 7 categories: teacher or student or researcher; trade sman; engineer or technician; artist or leisure; health; retired o r at home; others. For  X  = Location, communities are built by grouping user s according to the state they belong; 44 of them are represented in the dataset. Both for  X  = Favorite genre and  X  = Ratings, communities are formed with a two-step clustering process (see [18] for details) applied on vectors described in the next paragraphs . Firstly, an ant algorithm places users in a 2-D space [6] [8], as m otivated by further interactive use of the spaces; for  X  = Favorite genre, the standard Euclidian distance is used, while for  X  = Ratings the distance used is Pearson correlation. Secondly, a K -means algorithm builds the communities, chosen for its si mplicity and efficiency in most cases. For  X  = Favorite genre, the vectors on which clustering is applied are 19-dimension vectors, with one dimension for ea ch of the 19 movie genres. The weight w(U,g i ) for genre g i and user U reflects as follows: with U N the total number of ratings made by U. The weights are then normalized so that 1 ) , ( Parameters are set as follows: a=0.5, b=0.2 and c=0 .3, in order to favor the number of ratings, because users tend to rate movies they like, and not to rate movies they do not like.
 For  X  = Ratings, the vectors on which clustering is appl ied are the traditional collaborative vectors, filled with the user X  X  ratings. In a new user context, A Cold = {Age, Occupation, Location} denotes  X  factors that can be obtained directly from cold us er data, while  X  = Favorite genre and  X  = Ratings will be estimated via rule-based induction. Figure 4 illustrates a typical situation for new us er U with position Age, Occupation and Location  X  -spaces, and values are missing for Favorite genre and Ratings  X  -spaces. Figure 4. R i Recommendation lists produced for experiments Rule-based induction is used to estimate the missin g G X = {Age, Occupation, Location} and the missing G Ratings X = {Age, Occupation, Location, Genre}. Then, level of agreement recommendation is processe d on each  X  -space to directly produce 5 recommendation lists: R R combination with equal weight of the 3 demographic-like recommendation lists (R Age , R Occ and R Loc) . The aim of the experiments is to see how the recomm endation quality obtained with the present method which requ ires no initial ratings, compares to the quality obtained with a cl assical Pearson recommendation process [1] after 15 initial ratings . This baseline is reasonable as the level of agreement recommendat ion process is not an advanced one. The approach will be considere d useful if the performance is equal or better than the baselin e, as the improvement lies in the reduction of user effort an d thus a better cost/benefit ratio. The MovieLens 100.000 ratings dataset is used, with 943 users and 1682 movies pertaining to 19 genres. Rule-based induction uses the C5 method [3], which came after the popular C4.5 method [23]. Users are divided into two subsets: For new users, R Genre , R Ratings and R Demog are computed with thresholds T Rating = 4 stars and T Agreement = 25% (see Figure 4). analogy with the new user technique used by the wel l-known MovieLens system [17]: a new user is asked for 15 r atings before the first recommendation list is produced. To mimic these conditions, for each user in U New the 15 first ratings are extracted from the dataset, and a recommendation list is prod uced by classical memory-based collaborative filtering on t he basis of these 15-rating initial profiles. E; it is the set of ratings assessed by U New users, minus the set of ratings that were used to produce recommendations. In order to estimate the quality of a recommendatio n list R produced for a new user U from U New , the precision of prediction is measured with two different metrics. Firstly, the mean absolute error [24] computes the average of the difference between the scores p j predicted in R i actually assessed by user U in E, with j ranging in the set of items present in the reference set E: As the reference set of ratings E arises from the r eal use of MovieLens system, there is no guarantee that E cont ains all the items that users would have (positively) rated if a ll items had been proposed to them. As a consequence, E may have a lo w recall. Secondly, the Pearson correlation can be used to es timate the correlation between the predicted scores and the re al ratings: with e = average score in E and p = average score in R. Pearson correlation, with the evaluation made for t he top 5, top 10, top 15 and top 20 recommendations. The first gr ey line is the baseline, and the next 3 lines show the average per formance for each of the 3 recommendation lists produced as desc ribed in proposed rule-based induction; R Demog results from the direct combination of collaborative filtering on the 3 dem ographic community spaces Age, Occupation and Location. For good performances, MAE should be low and Pearso n correlation should be high. When the proposed appro ach is as good as, or better than the baseline, the figure is underlined. MAE Top5 Top10 Top15 Top20 Average R Pearson 1,76% 2,84% 4,09% 5,30% 3,50% R Genre 1,38% 2,48% 4,09% 5,91% 3,47% R Ratings 3,32% 4,30% 4,95% 4,99% 4,39% R Demog 2,59% 4,15% 4,79% 6,51% 4,51% Pearson Top5 Top10 Top15 Top2 R Pearson 28,95% 25,90% 24,02% 24,97 % 25,96% R Genre 29,92% 30,99% 31,53% 32,23 % 31,17% R Ratings 31,39% 30,40% 32,13% 30,52 % 31,11% R Demog 18,08% 19,45% 20,34% 19,20 % 19,27% R
Genre dominates the baseline and all the other recommend ation lists, both with MAE and Pearson correlation. R Demog (in italics) is not expected to give good performance, but provides a useful basis for comparison with the 2 other lines. Indeed , the R the R Ratings recommendations are produced on the basis of the same pieces of information as R Demog , but also benefit from the additional data emerging from the full community ta ble (see Table 1) via rule-based induction. The experiments show that the approach brings an im provement in new user cold start situations, as the first rec ommendations made to new users without any initial ratings asked , are as good as, or better than the recommendations made by a cl assical approach after 15 initial ratings asked. The two metrics are univocal on R Genre , that is always better than clearly good as R Genre , is probably due to the lesser inductive capacity of the Ratings similarity factor, while Fa vorite genre is more steady. This phenomenon was studied in previou s work [19] where metrics were defined to measure the inductive quality of such factors via an a priori analysis of the community table. This work is based on rough sets theory. R Demog directly exploits of cold user data, whereas R R
Ratings result from a preliminary induction process exploit ing of the same data. The results suggest that the inducti on process brings an improvement. Nonetheless, there are a number of other factors th at may have intervened in the performance of the approach, amon g which the quality of the methods that compute the community t able, the fine-tuning in the level of agreement recommendatio n process, and the way demographic recommendation lists are fu sed. But as no advanced optimization was performed on these und erlying processes, the results are even more encouraging wi th respect to the interest of the approach, as it brings a better cost/benefit ratio for new users in recommender systems. To summarize, this paper describes a method that ex ploits of cold user data to improve the first recommendations prov ided to a new user, without him/her having to rate any item. The recommendations are produced with a plain colla borative filtering method applied to various  X  -community spaces, where denotes a given user similarity factor. For new use rs, only some communities are known: those relating to cold user data (age, occupation, location, etc.). Plain collaborative fi ltering on these communities leads to bad performance. The present approach allows estimating the missing  X  -communities for new users via a rule-based inducti on process. It is shown that plain collaborative filtering on thes e estimated  X  -communities leads to better performance than a cla ssical new user technique. This method could thus be used as a preliminary step before applying another existing new user tech nique. The experimental results are encouraging, as they a re still positive although the other steps of the recommendation proc ess (production of the initial community table, level o f agreement recommendation process, etc.) have not been optimiz ed. Nonetheless further experiments could be done to co mpare this approach to other more elaborate new user technique s. This method was applied to the MovieLens context, b ut it has a more general scope: the  X  -community space model can be instantiated with other  X  similarity factors, and the rule-based induction process is also generic for any type of s uch  X  Moreover, this general setting may also be useful f or other situations such as concept drift: when user interes ts dramatically change, it is often the case that his/her feedback in terms of individual ratings, cannot reflect this change prop erly or fast enough. The induction process could be used to comp ute new estimated values for  X  -communities on the basis of the most successful  X  factors for this particular user. This work has been partly funded by the French Mini stry of Research with the program ACI Masses de Donn X es, pr oject #MD-33. [1] Breese J. S., Heckerman, D. and Kadie, C. Empirical [2] Burke, R. Hybrid Recommender Systems: Survey and [3] C5.0, Release 2.02, September 2005, [4] CBA v2.1, June 2001, http://www.comp.nus.edu.sg/~dm 2/. [5] Claypool, M,. Gokhale, A. and Miranda, T. Combining [6] Dorigo, M., Bonabeau, E. and Theraulaz, G. Ant algo rithms [7] Good, N., Schafer, J. B., Konstan, J. A., Borchers, A., [8] Handl, J., Knowles, J., Dorigo, M. On the performan ce of [9] Herlocker, J. L., Konstan, J. A., Terveen, L. G., R iedl, J. T. [10] Krulwich, B., Lifestyle Finder: Intelligent user pr ofiling [11] Liu B., Ma Y. and Wong C-K., Improving an Associati on [12] Maltz, D. and Ehrlich, E. Pointing the way: Active [13] Melville, P., Mooney, R.J. and Nagarajan, R. Conten t-[14] Middleton, S. E., Alani, H., Shadbolt, N. R. and De Roure, [15] Middleton, S.E., Shadbolt, N.R. and De Roure, D.C. [16] MovieLens dataset. http://www.grouplens.org/ [17] MovieLens system. http://www.movielens.umn.edu/ [18] Nguyen, A.-T. COCoFil2 : Un nouveau syst X me de filtrage [19] Nguyen, A.-T., Denos, N. and Berrut, C. Mod X le d X  X s paces [20] Pazzani, M., A framework for collaborative, content -based [21] Pawlak Z. Rough Sets. International Journal of Computer [22] Pawlak Z., Skowron A. Rough membership functions. I n [23] Quinlan, J. R., C4.5 : Programs for Machine Learnin g, [24] Rashid, A., Albert, I., Cosley, D., Lam, S.K., Mcne e, S.M., [25] Schein, A. I., Popescul, A., Ungar, L. H., and Penn ock, D. [26] Shafer G. A Mathematical Theory of Evidence . Princeton [27] Yao Y.-Y., A comparative study of fuzzy sets and ro ugh sets. [28] Yao Y.-Y. Generalized rough set models. In Rough Sets in [29] Zadeh L., Fuzzy Sets, Information and Control , 8 (3) , 1965. 
