 Natural language allows us to express the same in-formation in many ways, which makes natural lan-guage processing (NLP) a challenging area. Ac-cordingly, many researchers have recognized that automatic paraphrasing is an indispensable compo-nent of intelligent NLP systems (Iordanskaja et al., 1991; McKeown et al., 2002; Lin and Pantel, 2001; Ravichandran and Hovy, 2002; Kauchak and Barzi-lay, 2006; Callison-Burch et al., 2006) and have tried to acquire a large amount of paraphrase knowledge, which is a key to achieving robust automatic para-phrasing, from corpora (Lin and Pantel, 2001; Barzi-lay and McKeown, 2001; Shinyama et al., 2002; Barzilay and Lee, 2003).

We propose a method to extract phrasal para-phrases from pairs of sentences that define the same concept. The method is based on our observation that two sentences defining the same concept can be regarded as a parallel corpus since they largely convey the same information using different expres-sions. Such definition sentences abound on the Web. This suggests that we may be able to extract a large amount of phrasal paraphrase knowledge from the definition sentences on the Web.

For instance, the following two sentences, both of which define the same concept  X  X steoporosis X , in-clude two pairs of phrasal paraphrases, which are indicated by underlines 1  X  and 2  X  , respectively.
We define paraphrase as a pair of expressions be-tween which entailment relations of both directions hold. (Androutsopoulos and Malakasiotis, 2010).
Our objective is to extract phrasal paraphrases from pairs of sentences that define the same con-cept. We propose a supervised method that exploits various kinds of lexical similarity features and con-textual features. Sentences defining certain concepts are acquired automatically on a large scale from the Web by applying a quite simple supervised method.
Previous methods most relevant to our work used parallel corpora such as multiple translations of the same source text (Barzilay and McKeown, 2001) or automatically acquired parallel news texts (Shinyama et al., 2002; Barzilay and Lee, 2003; Dolan et al., 2004). The former requires a large amount of manual labor to translate the same texts in several ways. The latter would suffer from the fact that it is not easy to automatically retrieve large bodies of parallel news text with high accuracy. On the contrary, recognizing definition sentences for the same concept is quite an easy task at least for Japanese, as we will show, and we were able to find a huge amount of definition sentence pairs from nor-mal Web texts. In our experiments, about 30 million definition sentence pairs were extracted from 6  X  10 8 Web documents, and the estimated number of para-phrases recognized in the definition sentences using our method was about 300,000, for a precision rate of about 94%. Also, our experimental results show that our method is superior to well-known compet-ing methods (Barzilay and McKeown, 2001; Koehn et al., 2007) for extracting paraphrases from defini-tion sentence pairs.

Our evaluation is based on bidirectional check-ing of entailment relations between paraphrases that considers the context dependence of a paraphrase.
Note that using definition sentences is only the beginning of our research on paraphrase extraction. We have a more general hypothesis that sentences fulfilling the same pragmatic function (e.g. defini-tion) for the same topic (e.g. osteoporosis) convey mostly the same information using different expres-sions. Such functions other than definition may in-clude the usage of the same Linux command, the recipe for the same cuisine, or the description of re-lated work on the same research issue.

Section 2 describes related works. Section 3 presents our proposed method. Section 4 reports on evaluation results. Section 5 concludes the paper. The existing work for paraphrase extraction is cat-egorized into two groups. The first involves a dis-tributional similarity approach pioneered by Lin and Pantel (2001). Basically, this approach assumes that two expressions that have a large distributional simi-larity are paraphrases. There are also variants of this approach that address entailment acquisition (Geffet and Dagan, 2005; Bhagat et al., 2007; Szpektor and Dagan, 2008; Hashimoto et al., 2009). These meth-ods can be applied to a normal monolingual corpus, and it has been shown that a large number of para-phrases or entailment rules could be extracted. How-ever, the precision of these methods has been rela-tively low. This is due to the fact that the evidence, i.e., distributional similarity, is just indirect evidence of paraphrase/entailment. Accordingly, these meth-ods occasionally mistake antonymous pairs for para-phrases/entailment pairs, since an expression and its antonymous counterpart are also likely to have a large distributional similarity. Another limitation of these methods is that they can find only paraphrases consisting of frequently observed expressions since they must have reliable distributional similarity val-ues for expressions that constitute paraphrases.
The second category is a parallel corpus approach (Barzilay and McKeown, 2001; Shinyama et al., 2002; Barzilay and Lee, 2003; Dolan et al., 2004). Our method belongs to this category. This approach aligns expressions between two sentences in par-allel corpora, based on, for example, the overlap of words/contexts. The aligned expressions are as-sumed to be paraphrases. In this approach, the ex-pressions do not need to appear frequently in the corpora. Furthermore, the approach rarely mistakes antonymous pairs for paraphrases/entailment pairs. However, its limitation is the difficulty in preparing a large amount of parallel corpora, as noted before. We avoid this by using definition sentences, which can be easily acquired on a large scale from the Web, as parallel corpora.

Murata et al. (2004) used definition sentences in two manually compiled dictionaries, which are con-siderably fewer in the number of definition sen-tences than those on the Web. Thus, the coverage of their method should be quite limited. Furthermore, the precision of their method is much poorer than ours as we report in Section 4.

For a more extensive survey on paraphrasing methods, see Androutsopoulos and Malakasiotis (2010) and Madnani and Dorr (2010). Our method, targeting the Japanese language, con-sists of two steps: definition sentence acquisition and paraphrase extraction. We describe them below. 3.1 Definition sentence acquisition We acquire sentences that define a concept (defini-tion sentences) as in Example (2), which defines  X   X   X  X  X  X   X  (osteoporosis), from the 6  X  10 8 Web pages (Akamine et al., 2010) and the Japanese Wikipedia.
Fujii and Ishikawa (2002) developed an unsuper-vised method to find definition sentences from the Web using 18 sentential templates and a language model constructed from an encyclopedia. On the other hand, we developed a supervised method to achieve a higher precision.

We use one sentential template and an SVM clas-sifier. Specifically, we first collect definition sen-tence candidates by a template  X  X  X P  X  X  X  .* X , where  X  is the beginning of sentence and NP is the noun phrase expressing the concept to be defined followed by a particle sequence,  X   X   X  (comitative) and  X   X   X  (topic) (and optionally followed by comma), as ex-emplified in (2). As a result, we collected 3,027,101 sentences. Although the particle sequence tends to mark the topic of the definition sentence, it can also appear in interrogative sentences and normal as-sertive sentences in which a topic is strongly empha-sized. To remove such non-definition sentences, we classify the candidate sentences using an SVM clas-sifier with a polynominal kernel ( d = 2 ). 1 Since Japanese is a head-final language and we can judge whether a sentence is interrogative or not from the last words in the sentence, we included morpheme N -grams and bag-of-words (with the window size of N ) at the end of sentences in the feature set. The features are also useful for confirming that the head verb is in the present tense, which definition sen-tences should be. Also, we added the morpheme N -grams and bag-of-words right after the particle sequence in the feature set since we observe that non-definition sentences tend to have interrogative related words like  X   X   X  (what) or  X   X  X   X  ((what) on earth) right after the particle sequence. We chose 5 as N from our preliminary experiments.

Our training data was constructed from 2,911 sen-tences randomly sampled from all of the collected sentences. 61.1% of them were labeled as positive. In the 10-fold cross validation, the classifier X  X  ac-curacy, precision, recall, and F1 were 89.4, 90.7, 92.2, and 91.4, respectively. Using the classifier, we acquired 1,925,052 positive sentences from all of the collected sentences. After adding definition sentences from Wikipedia articles, which are typi-cally the first sentence of the body of each article (Kazama and Torisawa, 2007), we obtained a total of 2,141,878 definition sentence candidates, which covered 867,321 concepts ranging from weapons to rules of baseball. Then, we coupled two definition sentences whose defined concepts were the same and obtained 29,661,812 definition sentence pairs.
Obviously, our method is tailored to Japanese. For a language-independent method of definition acqui-sition, see Navigli and Velardi (2010) as an example. 3.2 Paraphrase extraction Paraphrase extraction proceeds as follows. First, each sentence in a pair is parsed by the depen-dency parser KNP 2 and dependency tree frag-ments that constitute linguistically well-formed con-stituents are extracted. The extracted dependency tree fragments are called candidate phrases here-after. We restricted candidate phrases to predicate phrases that consist of at least one dependency re-lation, do not contain demonstratives, and in which all the leaf nodes are nominal and all of the con-stituents are consecutive in the sentence. KNP indi-cates whether each candidate phrase is a predicate based on the POS of the head morpheme. Then, we check all the pairs of candidate phrases between two definition sentences to find paraphrase pairs. 3 In (1), repeated in (3), candidate phrase pairs to be checked include ( 1  X  decreases the quantity of bone,  X  reduces bone mass ) , ( 1  X  decreases the quantity of bone, 2  X  increases the risk of bone fracture ) , ( 2  X  makes bones fragile, 1  X  reduces bone mass ) , and ( 2  X  makes bones fragile, 2  X  increases the risk of bone fracture ) .
The paraphrase checking of candidate phrase pairs is performed by an SVM classifier with a linear kernel that classifies each pair of candidate phrases into a paraphrase or a non-paraphrase. 4 Candidate phrase pairs are ranked by their distance from the SVM X  X  hyperplane. Features for the classifier are based on our observation that two candidate phrases tend to be paraphrases if the candidate phrases them-selves are sufficiently similar and/or their surround-ing contexts are sufficiently similar. Table 1 lists the features used by the classifier. 5 Basically, they rep-resent either the similarity of candidate phrases ( f1-9 ) or that of their contexts ( f10-17 ). We think that they have various degrees of discriminative power, and thus we use the SVM to adjust their weights. Figure 1 illustrates features f8-12 , for which you may need supplemental remarks. English is used for ease of explanation. In the figure, f8 has a positive value since the candidate phrase of s 1 contains mor-phemes  X  X f bone X , which do not appear in the can-didate phrase of s 2 but do appear in the other part of s 2 , i.e. they are extra morphemes for s 1  X  X  candi-date phrase. On the other hand, f9 is zero since there is no such extra morpheme in s 2  X  X  candidate phrase. Also, features f10-12 have positive values since the two candidate phrases share two parent dependency tree fragments, (that increases) and (of fracture) .
We have also tried the following features, which we do not detail due to space limitation: the sim-ilarity of candidate phrases based on semantically similar nouns (Kazama and Torisawa, 2008), entail-ing/entailed verbs (Hashimoto et al., 2009), and the identity of the pronunciation and base form of the head morpheme; N -grams ( N =1,2,3) of child and parent contexts represented by either the inflected form, base form, pronunciation, or POS of mor-pheme; parent/child dependency tree fragments rep-resented by either the inflected form, base form, pro-nunciation, or POS; adjacent versions (cf. f15 ) of N -gram features and parent/child dependency tree features. These amount to 78 features, but we even-tually settled on the 17 features in Table 1 through ablation tests to evaluate the discriminative power of each feature.

The ablation tests were conducted using training data that we prepared. In preparing the training data, we faced the problem that the completely random sampling of candidate paraphrase pairs provided us with only a small number of positive examples. Thus, we automatically collected candidate para-phrase pairs that were expected to have a high like-lihood of being positive as examples to be labeled. The likelihood was calculated by simply summing all of the 78 feature values that we have tried, since they indicate the likelihood of a given candidate paraphrase pair X  X  being a paraphrase. Note that val-ues of the features f8 and f9 are weighted with  X  1 , since they indicate the unlikelihood. Specifically, we first randomly sampled 30,000 definition sen-tence pairs from the 29,661,812 pairs, and collected 3,000 candidate phrase pairs that had the highest likelihood from them. The manual labeling of each candidate phrase pair ( p 1 ,p 2 ) was based on bidirec-tional checking of entailment relation, p 1  X  p 2 and p This scheme is similar to the one proposed by Szpektor et al. (2007). We adopt this scheme since paraphrase judgment might be unstable between an-notators unless they are given a particular context based on which they make a judgment. As de-scribed below, we use definition sentences as con-texts. We admit that annotators might be biased by this in some unexpected way, but we believe that this is a more stable method than that without con-texts. The labeling process is as follows. First, from each candidate phrase pair ( p 1 ,p 2 ) and its source definition sentence pair ( s 1 ,s 2 ) , we create two para-phrase sentence pairs ( s 0 1 ,s 0 2 ) by exchanging p 1 and p 2 between s 1 and s 2 . Then, annotators check if s 1 entails s 0 1 and s 2 entails s 0 2 so that entailment rela-tions of both directions p 1  X  p 2 and p 2  X  p 1 are checked. Figure 2 shows an example of bidirectional checking. In this example, both entailment relations, s phrase pair ( p 1 ,p 2 ) is judged as positive. We used ( p 1 ,p 2 ) , for which entailment relations of both di-rections held, as positive examples (1,092 pairs) and the others as negative ones (1,872 pairs). 6
We built the paraphrase classifier from the train-ing data. As mentioned, candidate phrase pairs were ranked by the distance from the SVM X  X  hyperplane. In this paper, our claims are twofold.

I. Definition sentences on the Web are a treasure
II. Our method of paraphrase acquisition from
We first verify claim II by comparing our method with that of Barzilay and McKeown (2001) (BM method), Moses 7 (Koehn et al., 2007) (SMT method), and that of Murata et al. (2004) (Mrt method). The first two methods are well known for accurately extracting semantically equivalent phrase pairs from parallel corpora. 8 Then, we verify claim I by comparing definition sentence pairs with sen-tence pairs that are acquired from the Web using Ya-hoo!JAPAN API 9 as a paraphrase knowledge source. In the latter data set, two sentences of each pair are expected to be semantically similar regardless of whether they are definition sentences. Both sets con-tain 100,000 pairs.

Three annotators (not the authors) checked evalu-ation samples. Fleiss X  kappa (Fleiss, 1971) was 0.69 (substantial agreement (Landis and Koch, 1977)). 4.1 Our method vs. competing methods In this experiment, paraphrase pairs are extracted from 100,000 definition sentence pairs that are ran-domly sampled from the 29,661,812 pairs. Before reporting the experimental results, we briefly de-scribe the BM, SMT, and Mrt methods.
 BM method Given parallel sentences like multi-ple translations of the same source text, the BM method works iteratively as follows. First, it collects from the parallel sentences identical word pairs and their contexts (POS N -grams with indices indicat-ing corresponding words between paired contexts) as positive examples and those of different word pairs as negative ones. Then, each context is ranked based on the frequency with which it appears in pos-itive (negative) examples. The most likely K posi-tive (negative) contexts are used to extract positive (negative) paraphrases from the parallel sentences. Extracted positive (negative) paraphrases and their morpho-syntactic patterns are used to collect addi-tional positive (negative) contexts. All the positive (negative) contexts are ranked, and additional para-phrases and their morpho-syntactic patterns are ex-tracted again. This iterative process finishes if no further paraphrase is extracted or the number of iter-ations reaches a predefined threshold T . In this ex-periment, following Barzilay and McKeown (2001), K is 10 and N is 1 to 3. The value of T is not given in their paper. We chose 3 as its value based on our preliminary experiments. Note that paraphrases ex-tracted by this method are not ranked. SMT method Our SMT method uses Moses (Koehn et al., 2007) and extracts a phrase table, a set of two phrases that are translations of each other, given a set of two sentences that are translations of each other. If you give Moses monolingual parallel sentence pairs, it should extract a set of two phrases that are paraphrases of each other. In this experi-ment, default values were used for all parameters. To rank extracted phrase pairs, we assigned each of them the product of two phrase translation probabil-ities of both directions that were given by Moses. For other SMT methods, see Quirk et al. (2004) and Bannard and Callison-Burch (2005) among others. Mrt method Murata et al. (2004) proposed a method to extract paraphrases from two manually compiled dictionaries. It simply regards a difference between two definition sentences of the same word as a paraphrase candidate. Paraphrase candidates are ranked according to an unsupervised scoring scheme that implements their assumption. They assume that a paraphrase candidate tends to be a valid paraphrase if it is surrounded by infrequent strings and/or if it appears multiple times in the data.

In this experiment, we evaluated the unsupervised version of our method in addition to the supervised one described in Section 3.2, in order to compare it fairly with the other methods. The unsupervised method works in the same way as the supervised one, except that it ranks candidate phrase pairs by the sum of all 17 feature values, instead of the dis-tance from the SVM X  X  hyperplane. In other words, no supervised learning is used. All the feature val-ues are weighted with 1, except for f8 and f9, which are weighted with  X  1 since they indicate the unlike-lihood of a candidate phrase pair being paraphrases. BM, SMT, Mrt, and the two versions of our method were used to extract paraphrase pairs from the same 100,000 definition sentence pairs.
 Evaluation scheme Evaluation of each para-phrase pair ( p 1 ,p 2 ) was based on bidirectional checking of entailment relations p 1  X  p 2 and p 2  X  p 1 in a way similar to the labeling of the training data. The difference is that contexts for evaluation are two sentences that are retrieved from the Web and contain p 1 and p 2 , instead of definition sen-tences from which p 1 and p 2 are extracted. This is intended to check whether extracted paraphrases are also valid for contexts other than those from which they are extracted. The evaluation proceeds as follows. For the top m paraphrase pairs of each method (in the case of the BM method, randomly sampled m pairs were used, since the method does not rank paraphrase pairs), we retrieved a sentence pair ( s 1 ,s 2 ) for each paraphrase pair ( p 1 ,p 2 ) from the Web, such that s 1 contains p 1 and s 2 contains p 2 . In doing so, we make sure that neither s 1 nor s 2 are the definition sentences from which p 1 and p 2 are extracted. For each method, we randomly sample n samples from all of the paraphrase pairs ( p 1 ,p 2 ) for which both s 1 and s 2 are retrieved. Then, from each ( p 1 ,p 2 ) and ( s 1 ,s 2 ) , we create two paraphrase sentence pairs ( s 0 1 ,s 0 2 ) by exchanging p 1 and p 2 tween s 1 and s 2 . All samples, each consisting of ( p 1 ,p 2 ) , ( s 1 ,s 2 ) , and ( s human annotators to determine whether s 1 entails s 1 and s 2 entails s both directions are verified. In advance of evaluation annotation, all the evaluation samples are shuffled so that the annotators cannot find out which sample is given by which method for fairness. We regard each paraphrase pair as correct if at least two annota-tors judge that entailment relations of both directions hold for it. You may wonder whether only one pair of sentences ( s 1 ,s 2 ) is enough for evaluation since a correct (wrong) paraphrase pair might be judged as wrong (correct) accidentally. Nevertheless, we sup-pose that the final evaluation results are reliable if the number of evaluation samples is sufficient. In this experiment, m is 5,000 and n is 200. We use Yahoo!JAPAN API to retrieve sentences.

Graph (a) in Figure 3 shows a precision curve for each method. Sup and Uns respectively indi-cate the supervised and unsupervised versions of our method. The figure indicates that Sup outperforms all the others and shows a high precision rate of about 94% at the top 1,000. Remember that this is the result of using 100,000 definition sentence pairs. Thus, we estimate that Sup can extract about 300,000 paraphrase pairs with a precision rate of about 94%, if we use all 29,661,812 definition sen-tence pairs that we acquired.

Furthermore, we measured precision after trivial paraphrase pairs were discarded from the evaluation samples of each method. A candidate phrase pair ( p 1 ,p 2 ) is regarded as trivial if the pronunciation is the same between p 1 and p 2 , 10 or all of the con-tent words contained in p 1 are the same as those of p 2 . Graph (b) gives a precision curve for each method. Again, Sup outperforms the others too, and maintains a precision rate of about 90% until the top 1,000. These results support our claim II.

The upper half of Table 2 shows the number of extracted paraphrases with/without trivial pairs for each method. 11 Sup and Uns extracted many more paraphrases. It is noteworthy that Sup performed the best in terms of both precision rate and the number of extracted paraphrases.

Table 3 shows examples of correct and incorrect outputs of Sup . As the examples indicate, many of the extracted paraphrases are not specific to defini-tion sentences and seem very reusable. However, there are few paraphrases involving metaphors or id-ioms in the outputs due to the nature of definition sentences. In this regard, we do not claim that our method is almighty. We agree with Sekine (2005) who claims that several different methods are re-quired to discover a wider variety of paraphrases.
In graphs (a) and (b), the precision of the SMT method goes up as rank goes down. This strange be-havior is due to the scoring by Moses that worked poorly for the data; it gave 1.0 to 82.5% of all the samples, 38.8% of which were incorrect. We suspect SMT methods are poor at monolingual alignment for paraphrasing or entailment tasks since, in the tasks, data is much noisier than that used for SMT. See MacCartney et al. (2008) for similar discussion. 4.2 Definition pairs vs. Web sentence pairs To collect Web sentence pairs, first, we randomly sampled 1.8 million sentences from the Web corpus. We call them sampled sentences. Then, using Ya-hoo!JAPAN API, we retrieved up to 20 snippets rele-vant to each sampled sentence using all of the nouns in each sentence as a query. After that, each snippet was split into sentences, which we call snippet sen-tences. We paired a sampled sentence and a snippet sentence that was the most similar to the sampled sentence. Similarity is the number of nouns shared by the two sentences. Finally, we randomly sampled 100,000 pairs from all the pairs.

Paraphrase pairs were extracted from the Web sentence pairs by using BM, SMT, Mrt and the su-pervised and unsupervised versions of our method. The features used with our methods were selected from all of the 78 features mentioned in Section 3.2 so that they performed well for Web sentence pairs. Specifically, the features were selected by ablation tests using training data that was tailored to Web sentence pairs. The training data consisted of 2,741 sentence pairs that were collected in the same way as the Web sentence pairs and was labeled in the same way as described in Section 3.2.

Graph (c) of Figure 3 shows precision curves. We also measured precision without trivial pairs in the same way as the previous experiment. Graph (d) shows the results. The lower half of Table 2 shows the number of extracted paraphrases with/without trivial pairs for each method.

Note that precision figures of our methods in graphs (c) and (d) are lower than those of our meth-ods in graphs (a) and (b). Additionally, none of the methods achieved a precision rate of 90% using Web sentence pairs. 12 We think that a precision rate of at least 90% would be necessary if you apply auto-matically extracted paraphrases to NLP tasks with-out manual annotation. Only the combination of Sup and definition sentence pairs achieved that precision.
Also note that, for all of the methods, the numbers of extracted paraphrases from Web sentence pairs are fewer than those from definition sentence pairs.
From all of these results, we conclude that our claim I is verified. We proposed a method of extracting paraphrases from definition sentences on the Web. From the ex-perimental results, we conclude that the following two claims of this paper are verified. 1. Definition sentences on the Web are a treasure 2. Our method extracts many paraphrases from
Our future work is threefold. First, we will release extracted paraphrases from all of the 29,661,812 definition sentence pairs that we acquired, after hu-man annotators check their validity. The result will be available through the ALAGIN forum. 13
Second, we plan to induce paraphrase rules from paraphrase instances . Though our method can extract a variety of paraphrase instances on a large scale, their coverage might be insufficient for real NLP applications since some paraphrase phenomena are highly productive. Therefore, we need paraphrase rules in addition to paraphrase in-stances . Barzilay and McKeown (2001) induced simple POS-based paraphrase rules from paraphrase instances, which can be a good starting point.
Finally, as mentioned in Section 1, the work in this paper is only the beginning of our research on paraphrase extraction. We are trying to extract far more paraphrases from a set of sentences fulfilling the same pragmatic function (e.g. definition) for the same topic (e.g. osteoporosis) on the Web. Such functions other than definition may include the us-age of the same Linux command, the recipe for the same cuisine, or the description of related work on the same research issue.
 We would like to thank Atsushi Fujita, Francis Bond, and all of the members of the Information Analysis Laboratory, Universal Communication Re-search Institute at NICT.
