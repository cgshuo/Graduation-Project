 Motivation: Data centers are a critical component of mod-ern IT infrastructure but are also among the worst environ-mental offenders through their increasing energy usage and the resulting large carbon footprints. Efficient management of data centers, including power management, networking, and cooling infrastructure, is hence crucial to sustainabil-ity. In the absence of a  X  X irst-principles X  approach to man-age these complex components and their interactions, data-driven approaches have become attractive and tenable. Results: We present a temporal data mining solution to model and optimize performance of data center chillers, a key component of the cooling infrastructure. It helps bridge raw, numeric, time-series information from sensor streams toward higher level characterizations of chiller behavior, suit-able for a data center engineer. To aid in this transduc-tion, temporal data streams are first encoded into a sym-bolic representation, next run-length encoded segments are mined to form frequent motifs in time series, and finally these metrics are evaluated by their contributions to sus-tainability. A key innovation in our application is the abil-ity to intersperse  X  X on X  X  care X  transitions (e.g., transients) in continuous-valued time series data, an advantage we inherit by the application of frequent episode mining to symbolized representations of numeric time series. Our approach pro-vides both qualitative and quantitative characterizations of the sensor streams to the data center engineer, to aid him in tuning chiller operating characteristics. This system is currently being prototyped for a data center managed by HP and experimental results from this application reveal the promise of our approach.
 Categories and Subject Descriptors: H.2.8 [Database Management]: Database Applications -Data Mining; K.6.2 [Management of Computing and Information Systems]: In-stallation Management -Computing Equipment Manage-ment General Terms: Algorithms, Experimentation, Measure-ment, Management, Reliability.
 Copyright 2009 ACM 978-1-60558-495-9/09/06 ... $ 5.00. Keywords: data centers, chillers, clustering, motifs, fre-quent episodes, sustainability. Data centers have become a ubiquitous element of modern IT infrastructure, especially in the services sector that re-quires  X  X lways-on X  capability. Practically every large IT or-ganization hosts a data center, either in-house or outsourced to major vendors. Furthermore, the recent emergence of the software as a service (SaaS) paradigm or more generically cloud computing, coupled with emerging web-based busi-ness, social networking and media applications and services have led to a tremendous growth in the number, size, and power densities of data centers.

Recently, data centers have become an object of scorn for environmentalists, due to their increasing energy usage and the resulting large carbon footprints. For instance, a recent study [25] claims that a web search uses half the equivalent energy of boiling a kettle of water! The US EPA estimates that energy usage at data centers is experiencing successive doubling every five years, and that the annual electricity cost at these centers can amount to $7.4 billion by 2011, with 10% of this amount being borne by the government. Fur-thermore, to meet the projected growth in demand would require the construction of 10 power plants! Sustainable data center research is hence becoming acknowledged as an important problem with the foremost of implications for fu-ture energy consumption and its environmental impact [14].
A key goal is to adaptively manage demands on power, cooling, and energy efficiency without compromising reli-ability and performance constraints. State-of-the-art data centers today provide capabilities for adaptive, configurable operation at the level of each subsystem such as power distri-bution, cooling, and compute server racks. The traditional approach to perform such adaptation is to conduct detailed computational fluid dynamics (CFD)-based modeling of air and temperature flows [19] through a data center. However, such methods are computationally intensive, and even for a small data center (say, about 3000 sq. ft.), it can easily take several hours for a model of reasonable accuracy to converge!
The computational infeasibility of such large-scale simu-lations coupled with the relative ease of gathering real-time data from sensors has led researchers to deploy sensor net-works to track environmental data (e.g. temperature, hu-midity), operational state of systems and devices (e.g. uti-lization), and workload information (e.g. user requests). Since the sheer volume of such data precludes manual in-spection, automated data mining and knowledge discovery techniques are important to glean vital information. Fur-thermore, to close the loop between instrumentation and control/management leading to energy efficiency, what is required are high-level capabilities to transduce the data streams into actionable knowledge for the data center ad-ministrator.

While data centers constitute a mix of computing ele-ments, networking infrastructure, storage systems along with power management and cooling capabilities, all of which contribute to energy usage and sources of inefficiency, in this paper we primarily focus on the cooling infrastructure, espe-cially chillers, as a case study for illustrating the importance of data mining solutions. In particular, we show how tempo-ral data mining can bridge the gap between low-level, raw, sensor streams, and the high-level operating regions needed for an engineer to efficiently manage the data center.
This paper makes the following contributions:
Figure 1 shows a data center consisting of IT equipment (servers, storage, networking) fitted in racks arranged as rows. A large data center could contain thousands of racks occupying several tens of thousands of square feet of space. Also shown in the figure are computer room air condition-ing (CRAC) units that cool the exhaust hot air from the IT racks. Energy consumption in data center cooling comprises work done to distribute the cool air and to extract heat from the hot exhaust air. A refrigerated or chilled water cooling coil in a CRAC unit extracts the heat from the air and cools it within a range of 10  X  C to 18  X  C. The cooling infrastructure of a data center is shown in Figure 2.

Key elements of this infrastructure include CRAC units, plumbing and pumps for chilled water distribution, chiller units and cooling towers. Heat dissipated from IT equip-ment is extracted by CRAC units and transferred to the chilled water distribution system. Chillers extract heat from Figure 1: Thermal map of a data center showing racks Figure 2: Typical cooling infrastructure of a data center. the chilled water system and reject it to the environment through cooling towers or heat exchangers. In addition to the IT equipment, the data center cooling infrastruc-ture can account for up to 50% of the total power demand [2]. The CRAC units provide two actuators that can be controlled. The variable frequency drive (VFD) controls the blower speed and the chilled water value regulates the amount of chilled water flowing into a unit (between 0% and 100%). These built-in flexibilities allow the units to be ad-justed according to the workload demand in the data center. The demand is detected via temperature sensors installed on the racks throughout a data center.
The focus of this paper is on chiller units that receive warm water (at temperature, T in ) from the CRAC units, extract heat from it and recirculate the chilled water (at temperature, T out ) back to the CRAC units. Figure 3: Operational state diagram of a chiller unit. Each chiller is composed of four basic components, namely, evaporator, multi-stage centrifugal compressor, economizer and water-cooled or air-cooled condenser. Liquid refrigerant is distributed along the length of the evaporator to absorb enough heat from the water returning from the data center and circulated through the evaporator tubes to vaporize. The gaseous refrigerant is then drawn into the first stage of compressor. Compressed gas passes from the multi-stage compressor into the condenser. Cooling tower water circu-lated through the condenser tubes absorbs heat from the refrigerant, causing it to condense. The liquid refrigerant then passes through an orifice plate into the economizer. Flashed gases enter the compressor while the liquid flows into the evaporator to complete the circuit.

Starting and stopping a chiller is a complex, multi-step process. Fig. 3 shows the operational state diagram of a typical chiller. On power-on, the chiller waits for the com-pressors to start, after a prescribed delay. On startup, the chiller utilization varies to match the cooling load. Based on chiller technology, chiller compressors can throttle in discrete stages or continuously. Feedback control is used to maintain the outlet temperature, T out , close to a user-specified set-point temperature.
 Here we define some terms used in context of a data center chiller unit.
 IT cooling load. This is the amount of heat that is gener-ated (and thus needs to be dissipated) at a data center. It is approximately equivalent to the power consumed by the equipment since almost all of it is dissipated as heat. It is commonly specified in kilowatts (KW).
 COP. The coefficient of performance (COP) of a chiller unit indicates how efficiently the unit provides cooling, and, is defined as the ratio between the cooling provided and the power consumed, i.e., where L i is the cooling load on the i th chiller unit and P the power consumed by it.
 Chiller utilization. This is the percentage of the total ca-pacity of a chiller unit that is in use. It depends on a variety of factors, mainly, the mass flow rate of water that passes through a chiller and the degree of cooling provided, that is, the difference between the inlet and outlet temperatures ( T in  X  T out ). For a particular T out , an administrator can control the utilization at a chiller through power capping or by changing the mass flow rate of water.
 Chiller power consumption. This is simply the power consumed by a chiller unit. Although power meters that measure aggregate power consumption of data center infras-tructure elements are usually available, meters that measure power consumed by an individual entity or a specific group (e.g. chillers) may not always be installed. In such cases, if the capacity of the unit and average COP are known, they, together with unit utilization, can be used to estimate power consumed.
 where P i is the power consumed, U i the utilization, and C the capacity, all pertaining to the i th chiller unit. The number of chiller units required depend on the size and thermal density of a data center. While one unit may be sufficient for a small data center, several units operating as an ensemble may be required to satisfy the cooling demand of a large data center. Figure 4 shows an ensemble of chiller units that collectively provide cooling for a data center. Out of the five units shown, three are air-cooled while the remain-ing two are water-cooled. Also, to provide a highly available data center and ensure business continuity, sufficient spare capacity is usually provisioned to meet the cooling demand in the event of one or more units becoming unavailable as a result of failure or required maintenance.
 Figure 4: Five chiller units work in tandem to provide Although operating curves for individual chiller units exist, no model is available for operation of an ensemble, espe-cially one consisting of heterogeneous units. Additionally, shift and/or drift of response characteristics with time fur-ther complicate their management. The operational goals are to satisfy the cooling requirements while minimizing the total power consumption of the ensemble and maximizing the average lifespan of the units. While multiple factors im-pact the lifespan of a chiller unit, an important one is: rapid and large oscillations in utilization value. High amplitude and frequent variations in utilization due to varying load or some failure condition result in decreased lifespan, and, thus, need to be minimized.
 Why are rapid oscillations bad? Frequent start and stop cycles lead to fatigue of mechanical parts due to high torque requirements, and, deterioration of electrical circuitry due to high inrush current. Moreover, load fluctuations due to cycling can also lead to drop in power factor and poten-tial penalties from the utility. In case of data centers with on-site generation, such fluctuations can lead to reliability issues at the generators as well. Downstream of chillers, pump performance and cooling tower efficiency can also be adversely affected. Typically chillers have an MTBF (mean time between failure) of 20,000 hours or more, which can reduce exponentially due to oscillations.
While administration of a single chiller unit is not com-plicated, configuring an ensemble of chillers for optimal per-formance is a challenging task, especially in the presence of a dynamically varying cooling load [3]. Typically, heuristics and rules-of-thumb are used to make decisions regarding: Any guidance regarding questions posed above while main-taining performance and optimizing the above stated goals will be invaluable to a data center facilities administrator.
Many researchers have explored the use of data mining to optimize computer system design. For instance, modeling of rack-level temperature data specifically in relation to CRAC layout has been undertaken in [1, 23]. Optimization oppor-tunities at multiple levels of smart center architecture have also been studied in [24]. More recent work [16] focuses on sensor data mining to identify anomalous and deviant behavior. Other related work includes the InteMon system from CMU [7, 6] that dynamically tracks correlations among multiple time series [18]. Interactive visualizations for sys-tem management have also been investigated [17]. Beyond these projects, most research at the intersection of data min-ing and high performance systems has focused on compute clusters, not necessarily data centers. For instance, failure prediction in IBM Blue Gene systems by analyzing event logs has been explored [10]. While these works constitute important strides in analytics, in order to support high-level knowledge discovery capabilities, we must raise the level of abstraction at which we study and infer patterns from sensor data streams.
There are numerous formalisms available to model time series data and good surveys are in [5, 12]. One broad class of representations conducts global decompositions of the time series (e.g., PCA, DFT, wavelets) and aims to use only the most significant components to model the series. Alternatively, piecewise representations are easier to com-pute and also lend themselves to a streaming mode of oper-ation. Representations like SAX [13] first perform a piece-wise aggregate approximation (the aggregate refers to the notion of modeling the given, single, time series by a linear combination of multiple time series, each expressed as a box basis function) and symbolize the resulting representation so that techniques from discrete algorithms can be adapted toward querying, matching, and mining the time series. In our work, we seek to design representations for multivariate time series data (the works surveyed here focus on a sin-gle series) and also to enjoy the benefits of symbolization of series for ease and flexibility of analysis, as described below.
Motif mining is the task of finding approximately repeated subsequences in time series, and studied in various works, e.g., [4, 11, 19, 27]. Mining motifs in symbolized represen-tations of the time series can drawn upon the rich body of literature in bioinformatics, where motifs have been used to characterized regulatory regions in the genome. As the work closest to ours, we explicitly focus on the SAX repre-sentation, which also provides some significant advantages for mining motifs. First, a random projection algorithm is used to hash segments of the original time-series into a map. If two segments are hashed into the same bucket, they are considered as candidate motifs. In a refinement step all candidate motif subsequences are compared using a distance metric to find the set of motifs with the highest number of non-trivial matches. A contrasting framework, referred to as frequent episode discovery, is an event based framework that is most applicable to symbolic data that is not uni-formly sampled [8, 9, 15, 20]. This enables the introduction of junk, or  X  X on X  X  care X  states, into the definition of what constitutes a frequent episode.
Our primary goal is to link the multivariate, numeric, time series temperature data gathered from chiller units to high level sustainability characterizations. We decompose this goal into change point detection, motif mining, and sustain-ability characterization, thus using motifs as a crucial inter-mediate representation to aid in data reduction. The algo-rithms presented here, while being natural generalizations and combinations of prior work, have not been proposed before.
Prior work in multivariate change point detection (e.g., see [26] has posited statistical models for behavior within a segment and tracks changes in model parameters to de-note qualitative change points. Our task is exacerbated by the lack of adequate models to characterize chiller behav-ior and also because of the varying interpretations that are attachable to multivariate data.

First, a motif or a trend can manifest in a single series or in multiple series. Second, even when it manifests in multiple series, the specificity with which it manifests can be fixed or variable. For instance, a motif can be  X  X hree chiller units show oscillatory behavior X  versus  X  first three chiller units show oscillatory behavior. X  Since we seek to mine motifs so that their presence/absence can be cross-correlated with the chiller design (e.g., air cooled versus water cooled), we seek motifs of the latter form.

A multivariate time series T =  X  t 1 ,..., t m  X  is an ordered set of real-valued vectors of a particular variable. Each real-valued vector t i captures the utilizations across all the chiller units. Although a streaming algorithm would be more suit-able in the context of time series data, the current imple-mentation is intended more as a diagnostic tool than for prediction. We first perform a k-means clustering on these vectors and use the cluster labels as symbols to encode the time series. Observe that the multivariate series is now en-coded as a single symbol sequence. This sequence of cluster labels is then analyzed to detect the change points. See Fig. 5 for an illustration of this approach.
Already we have suitably raised the representation from multivariate numeric data. We raise the level of abstrac-tion further by doing a run-length encoding of the symbol sequence and noting where transitions from one symbol to another occur. This gives us a sequence of events for input to serial episode mining as illustrated below.

Symbol Sequence : d d d b a c c d d d d c b Figure 6: Illustration of motif mining in a single time-series using frequent episodes
Frequent episode mining is now conducted over this se-quence of transitions. We adopt the framework of serial episodes with inter-event constraints. The structure of a serial episode  X  is given as: Here E 1 ,...,E n are the event-types participating in the episode  X  and, for our domain, these event types are cluster symbol indices. Note that a serial episode requires a total order among the events. Each pair of event-types in  X  is associated with an inter-event constraint. For example the pair E 1  X  E 2 , is associated with (0 ,d 1 ] such that in an oc-currence of  X  event E 2 occurs no later than time d 1 of event E .
 The mining process follows the level-wise procedure ala Apriori , i.e., candidate generation followed by counting. The candidate generation scheme is based on matching the n  X  1 size suffix of one n -node frequent episode with the n  X  1 size prefix of the another n -node frequent episode at a given level to generate candidates for the next level. The time complex-ity of the candidate generation process is O ( m 2 n ), where n is the size of each frequent episode in the given level, m is the number of frequent episodes in that level, since all pairs of frequent episodes need to be compared for a prefix-suffix match.

The algorithm for counting the set of candidates episodes is given in Algorithm 1. The count or frequency measure is based on non-overlapped occurrences [8]. Two occurrences of an episode are said to be non-overlapped if the events in one occurrence appear between the events in the other oc-currence. This notion most naturally eliminates the prob-lem of trivial matches highlighted in [19] where a match is found between two slightly shifted segments of the time series. Algorithm 1 takes as input the event-sequence and a set of candidate episodes and returns the set of frequent episodes for a given frequency threshold  X  . The algorithm counts the maximum number of non-overlapped occurrences of each episode with the inter-event time constraint (0 ,T ]. This approach also allows repeated symbols or events in the episodes.

The worst case time complexity of the counting algorithm is give by O ( lnm ), where l is the number of events in the data sequence, m is number of candidate episodes and n is the size of the episode. The algorithm makes one pass of all the events in the event sequence and every time an event that belongs to an episode is seen the data structure s for the episode is updated. A hash map is used to efficiently locate only a subset of relevant episodes for each event seen in the event sequence. Since our method allows repeated symbols, in the case of such episodes the same event can update s structure at most n times. Therefore if the level-wise growth of candidates is sufficiently arrested by a suit-able choice threshold, the algorithm scales linearly with data size.

Recall here that the events in mined frequent episodes correspond to transitions from one symbol to another. Our hypothesis here is that if motif occurrences are matched at transitions under an inter-transition gap constraint, then the corresponding time series subsequences will match under a suitable distance metric. In addition the episode mining framework allows for robustness to noise and scaling. The distance metric under which such motifs can be shown to be similar needs further investigation. None-the-less this technique is found to be very effective in unearthing similar time series subsequences in real data sets.
It is difficult (and subjective) to compare two motifs in terms of their sustainability impact by inspecting them visu-ally. Therefore, it is necessary to quantify the sustainability of all motifs by computing a sustainability metric for them. This would enable quantitative comparisons between motifs; their categorization as  X  X ood X  or  X  X ad X  from the sustainabil-ity metric point-of-view; and, furthermore, this information could be used to provide guidance to an administrator or a management system regarding the most  X  X ustainable X  con-figurations of the chiller ensemble under a particular load. ology of using frequent motifs for sustainability characterization. There are several sustainability metrics, such as, power con-sumed, carbon footprint, and exergy loss [22]. Note that typically optimizing a sustainability metric, such as power consumed, also minimizes the total cost of operation. Algorithm 1 Counting occurrences of serial episodes with inter-event time constraint [0 ,T ) Input: Candidate episodes C = {  X  1 ,..., X  m } , where  X  i
E  X  i (1)  X  ...E  X  i ( N ) is a N -node episode, Inter-event time constraint T and frequency threshold  X  , Event sequence S = { ( E i ,t i ) } .
 Output: Frequent episodes F :  X   X  F if  X .count  X   X  /*Initialize*/ waits =  X  for all  X   X  C do for all ( E k ,t k )  X  S do Output F = {  X  :  X   X  C such that  X .count  X   X  }
In this paper, we estimate two sustainability metrics for each motif: (1) the average COP of the motif; and, (2) a metric reflecting the frequency and amplitude of oscillations in utilization values. The average COP is calculated using Eqn. 1, where the load during motif i , averaged over all its occurrences, is used as L i , and, the averaged power con-sumption of the motif as P i . The power is estimated using Eqn. 2 with a COP of 3.5 for the air-cooled and 6 for the water-cooled chillers. The COP of a motif quantifies the cooling effectiveness of the ensemble during that motif. In order to estimate the frequency of oscillations of a motif, we compute the number of mean-crossings, that is, the number of times the utilization crosses the mean value. This is very similar to number of zero-crossings that is commonly used in speech processing for estimation of frequency. This, to-gether with standard deviation of a motif, allows oscillatory behavior to be compared.
We applied our motif mining methodology to chiller data obtained from a large HP production data center covering 70,000 square feet with 2000 racks of IT equipment. Its cooling demand is met by an ensemble of five chiller units. The ensemble consists of two types of chillers  X  three are air-cooled and the remaining two are water-cooled. The data is spread over three different time periods: (1) July 2, 2008 to July 7, 2008; (2) November 27, 2008 to November 30, 2008; and (3) December 16, 2008 to December 26, 2008; totaling over 480 hours.
In all, 22 motifs were discovered in the chiller utilization data whose qualitative properties are summarized in Table 3 (more on this later). From a quantitative point of view these motifs can be clustered into groups based on load. One such group (Group II) is depicted in Table 1 with other quanti-tative measures. Although each group has very similar load levels, the COP within a group varies with the motifs. In Group II, for instance, motif 8 has a COP of 4.87, while motif 5 is significantly more efficient at a COP of 5.4. This information provides key insights to an administrator re-garding motifs that are more energy efficient compared to Figure 7: Characterization of operating states of the ensemble of chillers using clustering others. Furthermore, this information could be codified into rules for setting chiller ensemble configuration based on the current load.

Table 2 shows the most efficient and the least efficient mo-tifs for Group II based on power consumption, determined by the motif X  X  COP value. Also shown are the potential power savings assuming that the least efficient motif could be transformed into the most efficient one.
 Table 3 provides a qualitative description of all the motifs. They are grouped together manually based on similar uti-lization behavior of each of the chillers in the ensemble. Two factors are considered  X  the average utilization during the motif, and, the oscillatory behavior. The utilization level is labeled as low (L), medium (M) or high (H) based on the average utilization ranges of (0, 35), (35, 65) or (65, 100), re-spectively. The oscillatory behavior is marked (1) none (N)  X  which indicates steady values with minor variations; (2) small (S)  X  which indicates the values show oscillations that have a small amplitude; and finally, (3) large (L)  X  which indicates oscillations with a large amplitude. Furthermore, units that are not operating are marked  X  X FF X .
We investigate now in more detail the differences between motifs 5 and 8 of Group II. While both motifs 5 and 8 have three chillers turned on, they are of different types. In motif 8, all three operating chillers (C1, C2 and C3) are air-cooled. In motif 5, two air-cooled (C1 and C2) and one water-cooled chiller (C4) are running. The qualitative behavior of the chillers in the two motifs are show in Table 3. In motif 5, one chiller runs at high utilization (C4 at 66.5%), while the other two run at low utilizations (11.3% and 33.8%). In motif 8, one chiller runs at low utilization (17.63) while the other two operate at the medium range (49.1% and 44.3%). The amount of oscillatory behavior in the two motifs is about the same as indicated by the average rate of mean-crossings and standard deviation in Table 1. In both the motifs, one air-cooled chiller show large oscillations.
Business growth is an important factor in planning for in-vestment in infrastructure. Chillers, of the kind described in this paper, can cost upwards of $150k and typically, de-preciate over 15-20 years. In the absence of intelligent man-agement, the annual operating cost, even at 50% load, can be equally high. Maximizing utilization and efficiency is crucial to achieve a favorable return on investment. Oper-ating chillers among favorable motifs that satisfy these con-ditions will enable IT administrators to sustain growth in business without major capital or maintenance costs. It will not only prolong the useful life of the existing equipment but postpone expensive retrofits and further infrastructure investments.

The cost savings by operating in favorable motif regimes can be quite easily characterized by multiplying the kW sav-ings by 0 . 11  X  24  X  365 to obtain the annual savings in dollars ($). Here, $0.11 is assumed to be the cost per KWh (kilo watt hour) of electricity. In this case switching from motif 8 to motif 5 gives us a nearly $40,000 in annual savings! Ex-trapolating this cost saving to other similar motifs gives us an idea of the utility of data mining algorithms in helping achieve cost effectiveness.
Saving 1kWh of energy is equivalent to preventing release of 0.8 kg of carbon dioxide into the atmosphere. Based on the energy savings number, we can calculate the reduced carbon footprint.

Reduction in Carbon footprint = 41kW  X  8760  X  0.8
Observe that this is just the operational footprint; there is also an  X  X mbedded carbon footprint X  of the chiller unit (as added in its manufacturing process). By maximizing oper-ational life and utilization, we are managing this embedded carbon in the equipment as well. In other words, we are lim-iting the increase in embedded carbon in the environment while delivering the cooling required.
We have demonstrated a powerful approach to data min-ing for data centers that helps situate trends gathered from sensor streams in the context of sustainability metrics use-ful for the data center engineer. Our future work is in sev-eral categories. First, we seek to perform streaming analysis of the chiller data to provide real-time actionable input to manage the operational state of chillers. Second, we seek to explore the co-existence possibility of both short (i.e., last-ing at most a few hours) and longer motifs (e.g., spanning half a day to possibly multiple days) and use this informa-tion to perform higher order minings of motifs [21], i.e., to detect patterns composed of motifs themselves. Third, we seek to use other sustainability metrics to characterize the motif transitions to the most efficient motif in the given time period. Table 1: Summary of the quantitative measures as-sociated with motifs. Shown here are statistics for motif in one of the load groups.
 Motif (KW) (KW) COP MC Std (min) N
Group II motifs; for instance, through lifetime analysis to convert the loss in a chiller X  X  lifetime into a power number.

Eventually, we would like to use temporal data mining to uncover a complete model of the data center which can then be tuned/controlled/optimized, thus making data min-ing an integral part of the data center architecture. To achieve this, we need to model the transfer function in a way that encapsulates workload changes, manual steering of chiller operation, and other intermittent transients and re-coverable faults. We propose to use our motifs as a handle to redescribe time series data so that significant portions of time series progression can be captured via state transi-tion diagrams. Control strategies can then be assessed by superimposing their likely trajectories over the state tran-sition diagrams and quantifying their stability characteriza-tions. This will enable us to use data mining not simply as a post-processing data interpretation phase but to actu-ally form dynamic models of data center chillers and their control strategies.
We are committed to repeatability of our results. Datasets and source codes used in this paper are available at: http://neural-code.cs.vt.edu/chiller This work was supported in part by the Institute for Critical Technology and Applied Science (ICTAS), Virginia Tech. The authors also wish to thank Mohandas Mekanapurath and Vaibhav Bhatia for their support in data collection from a production data center environment. [1] L. Bautista and R. Sharma. Analysis of environmental [2] C.L. Belady. In the data center, power and cooling [3] T. Boucher et al. Viability of dynamic cooling control grouped together.
 Chiller behavior [4] B. Chiu, E. Keogh, and S. Lonardi. Probabilistic [5] H. Ding et al. Querying and mining of time series [6] E. Hoke et al. Intemon: Continuous mining of sensor [7] E. Hoke, J. Sun, and C. Faloutsos. Intemon: [8] S. Laxman, P.S. Sastry, and K.P. Unnikrishnan. [9] S. Laxman, V. Tankasali, and R.W. White. Stream [10] Y. Liang et al. Failure Prediction in IBM BlueGene/L [11] J. Lin et al. Finding motifs in time series. In [12] J. Lin et al. A symbolic representation of time series, [13] J. Lin et al. Experiencing SAX: A Novel Symbolic [14] S. Lohr. Demand for data puts engineers in spotlight. [15] H. Mannila, H. Toivonen, and A.I. Verkamo. Discovery [16] M. Marwah et al. Stream mining of sensor data for [17] P. McLachlan et al. Liverac: Interactive visual [18] S. Papadimitriou, J. Sun, and C. Faloutsos. Streaming [19] P. Patel et al. Mining Motifs in Massive Time Series [20] D. Patnaik, P.S. Sastry, and K.P. Unnikrishnan. [21] J.F. Roddick et al. Higher order mining. SIGKDD [22] A.J. Shah et al. Exergy analysis of data center [23] R. Sharma et al. Application of exploratory data [24] R. Sharma et al. On building next generation data [25] A. Wissner-Gross. Revealed: The environmental [26] X. Xuan and K. Murphy. Modeling Changing [27] D. Yankov et al. Detecting Time Series Motifs under
