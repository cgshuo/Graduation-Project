 1. Introduction known as NO x , they have a number of negative effects on air quality: they contribute to photochemical smog, visibility reduction, acid rain and also have a negative impact on human health ( Muzio and
Quartucy, 1997 ). Coal is the most popular fuel used in power plants due to its low cost and availability. However, the emission of the nitrogen oxides during coal comb ustion is a significant pollutant source in the environment ( Hill and Smoot, 2000 ).
 from coal fired utility boilers is two-fold. On the one hand, with the increasing demand for electricity especially in developing countries, many power plants would need to be built. To satisfy the strict environmental regulation, these power plants are faced with one of the most critical issues for regulations conformity concerning the availability of suitable measurements to monitor the NO x ( Tronci et al., 2002 ). Commonly, continuous emission monitoring systems (CEMSs) are used to measure the emissions. Though this hardware-based CEMS is capable of measuring stack gases with high maintain. Besides, due to the harsh environment the analyzer is frequently off-line for maintenance and some redundancy to improve system reliability is also highly desirable. A potentially attractive alternative to installing a CEMS is the use of a PEMS, which estimates the NO x emissions on the basis of their dependence on other relevant system variables using suitable algorithms. That means stack gases fromthecombustionchamberarepossibletobepredictedindirectly.
At present, the majority of industrial facilities are equipped with distributed control systems (DCSs), which supply a great deal of information on what is happening in the plant ( Copado and
Rodriguez, 2002 ). Once a suitable model between the NO x and the various process parameters of the boiler is determined, information downloaded from DCS can be used to infer the emissions at the stack. PEMS offers a number of advantages over expensive
CEMS such as in parallel with hardware sensors ( Yang et al., 2000 ), time estimation of NO x emissions ( Matsumura et al., 1998 ), the advantages of lower cost, lower maintenance and higher reliability than more traditional hardware CEMS ( Baines, 1999 ; Tronci et al., 2002 ). PEMS has been successfully applied to many different com-bustion processes including boilers, furnaces and turbines ( Kamas and Keeler, 1995 ).

On the other hand, combustion optimization ( Radl, 2000 ; Zhou et al., 2005 ) has been proved to be an effective way to realize low
NO x combustion in coal fired utility boilers, in which low NO emission is achieved by carefully setting operational parameter of the boiler using artificial intelligence such as neural network, expert system, fuzzy logic and genetic algorithms. Core of the combustion optimization system will be a NO x emissions model of the boiler incorporated in the software. In other words, the relation between the NO x emission and various operational parameters such as coal quality, load, primary and secondary air velocity, speed of mills and others must be well known. Therefore, in order to reduce NO x emissions, a model predicting NO x emissions from various parameters of the boiler must be estab-lished at first. This model can be derived from the physical processes in the boiler. However, consisting of many combustion dynamics, fluid mechanics, heat transfer and nitrogen conversion chemistry, the overall dynamics of the boiler shows the strong non-linear inter-relations and the mutual dependence of various variables; building such an accuracy model for NO x emissions is not a trivial task and sometimes impossible.

Because of the complexity of NO x emissions modeling, neural network models represent a valid alternative to this issue in the last ten years. Multi-Layer Perceptron (MLP) models were used to develop PEMS ( Baines, 1999 ; Graziani et al., 2004 ), software sensors ( Dong et al., 1995 ; Matsumura et al., 1998 ; Tronci et al., 2002 ) and have been successfully applied to industry ( Kamas and Keeler, 1995 ). The operation experience showed that PEMS predications closely match measured CEMS results with the predicted NO x values typically within 20% of the actual data as measured by hardware CEMS ( Kamas and Keeler, 1995 ). Fuzzy neural network was proposed to model NO x emissions ( Ikonen et al., 2000 ). Liu and Huang (1998) proposed a fuzzy logic model to generate a reliable emissions model and dealt with environ-mental and economic dispatching when only limited experimen-tal data was available. Various neural networks were also developed for the modeling and control of the nitrogen oxide emissions from coal-fired boilers ( Reinschmidt and Ling, 1994 ; David and Samuelsen, 1995 ; Chan and Huang, 2003 ). A BPNN-based NO x emissions model was incorporated in several combus-tion optimization software packages and showed good operation experiences ( Radl, 2000 ; Booth and Roland, 1998 ; Jia, 2007 ). A time delay ANN model was designed for the dynamic prediction of nitrogen oxides and carbon monoxide emissions from a fossil fuel power plant ( Adali et al., 1999 ). Neural network-based black box model and a genetic algorithm-based gray-box model were employed to predict the NO x emissions in a 500 MWe coal-fired power plant ( Li et al., 2003 ). A neural network model consisting of 41 input parameters of the boiler, 6 X 10 neurons in the hidden layer and 1 output neuron was developed to model the NO x emissions and other performances of a 540 MW capacity gen-erator ( Frenken et al., 1996 ). A cascading neural network was used to model the NO x emissions in a dual fired drum type boiler with full load 300 MWe with oil firing or 200 MWe with coal firing ( Dong et al., 1995 ). Later, a genetic algorithm-based neural network was developed for the identical power plant ( Li et al., 2002 ). Estimation of NO x emissions in thermal power plants using a combination of neural network and computational fluid dynamics (CFD) was also performed by Ferretti and Piroddi (2001) .NO x emissions from a combined-cycle natural gas power plant have been investigated using artificial neural networks ( Azid et al., 2000 ), and the deviation of the predicted NO emissions is less than 5% of the measured values by the CEMS system. A MLP was presented to model the gaseous emissions emanating from the combustion of coal on a chain-grate stoker-fired boiler ( Chong et al., 2001 ). Zhou et al. (2001 , 2004 ) have proposed an approach to predict the nitrogen oxides (NO x emissions characteristics of a large capacity pulverized coal fired boiler with artificial neural networks (ANNs). In summary, various variants of artificial neural networks for NO x emissions modeling have attracted much attention in last ten years, as reviewed by Kalogirou (2003) .

Despite neural networks (NNs) having been used widely in modeling NO x emissions from coal fired utility boiler, the neural network suffers from a number of weaknesses ( Vong et al., 2006 ), which include the need for numerous controlling parameters such as the number of hidden neurons and the learning rate, difficulty in obtaining a stable solution and the danger of over-fitting.
Moreover, the selection of network architecture is still proble-matic and time consuming task when developing a model for practical situation ( Niska et al., 2004 ; Benardos and Vosniakos, 2007 ). Some improvements to basic neural network have attracted much attention of many researchers. A parallel genetic algorithm (GA) is proposed to selecting the inputs and designing the high-level architecture of a multi-layer perceptron model ( Niska et al., 2004 ; Benardos and Vosniakos, 2007 ). The results show that the
GA is a capable tool for tackling the practical problems of neural network design. However, the process remains to be computa-tionally expensive and time demanding ( Niska et al., 2004 ).
In recent years, SVR has been successful in mapping the complex and highly nonlinear relationship between system input and output, such as the daily meteorological pollution prediction ( Osowski and Garanty, 2007 ), automatic signature recognition ( Frias-Martinez et al., 2006 ), bearing fault detection ( Samanta et al., 2003 ). It would appear that it also learns the relationship between the NO x emissions and the boiler operational conditions.
Compared with the MLP (for BPNN instance) models, the SVR global minimum ( Frias-Martinez et al., 2006 ). On the other hand, the training of BPNN may become trapped at a local minimum ( Vong et al., 2006 ). The second advantage is that the model parameters of
SVR are fewer than those of BPNN. With the Gaussian kernel function, there are only two design parameters that need to be tuned, i.e. the generalization parameter C and the width parameter g in the kernel good generalization because structural risk minimization principle is applied by minimizing an upper bound on the expected risk whereas the traditional empirical risk minimization is used in BPNN mini-mizing the error on the training data ( Frias-Martinez et al., 2006 ).
Nevertheless, to the authors X  knowledge, SVR has never been applied to model NO x emissions from coal fired utility boiler in the references. It is meaningful to investigate the applicability of SVR for NO x emissions modeling, which will be favorable to develop the on-line and real-time NO x emissions monitoring system and combustion optimization software package. This study will extend the use of SVR in NO x emissions modeling in two ways: (1) unlike former studies that implemented NN model on very small samples ( Zhou et al., 2001 , 2004 ), this study applied SVR in more realistic conditions characteristic of an actual power plant. Indeed, once
NO emissions model has been built, it must be able to accurately validate a new dataset, which contains in practice a large number of cases. This study contributes to the existing literature using a sufficient sample size for training and validating the SVR models in aNO x emissions framework. (2) Before the SVR can be implemen-ted, two parameters, i.e., the generalization parameters C and
Gaussian kernel parameter g , have to be optimized in order to construct an efficient prediction model. Extracting the optimal parameters is crucial when implementing SVR. Consequently, an
ACO-based technique was proposed to perform the selection procedure. ACO has been applied to optimize the weights and bias of BPNN by several researchers ( Liu et al., 2007 ; Socha and Blum, 2007 ). Theoretically, ACO can also be suitable for the selection of
SVR model parameters. The technique is also compared to com-monly used grid search method ( Hsu et al., 2003 ).

The paper is organized as follows. Section 2 presents an introduction of SVR model fundamentals and the model parameters selection technique. ACO-based SVR is also described in this section. Section 3 gives the evaluation measures adopted in this study.
Experimental data used to train and validate the SVR model for NO emissions is given in Section 4 . Section 5 presents the implementa-tion process of SVR model, while Section 6 explains the prediction results of the SVR model. The detailed performance comparison between the SVR model and the ANN models is provided in Section 7 . Finally, conclusions are drawn in Section 8 . 2. Modeling tools modeling tools were used to identify the most promising approach in the prediction of NO x emissions from a coal fired utility boiler, and they are: SVR, BPNN and GRNN. A brief description of various models is given as follows. 2.1. SVR approach 2.1.1. Fundamentals consisting of N samples with n dimensions with an output vector y i A R . The objective of SVR is to find a multivariate regression function f ( x ) based on the given dataset X to predict the desired output property (e.g., NO x emissions of the utility boiler). The multivariate regression function is approximated by the following function: y  X  f  X  x  X  X  where j ( x ) is the kernel function and w is the margin. The complete SVR theory and equations ( Cristianini and Shawe-
Taylor, 2004 ; Ustun et al., 2007 ; Wu et al., 2007 ) are fully described elsewhere, the SVR equations are only written down as follows: min s : t : where R , s.t. are the risk and constraints, respectively. x respectively, positive slack variables to deal with training samples with a prediction error larger than e ( e 4 0) and the penalization applied to these samples. The constant C 4 0 determines the trade-off between the flatness of f ( x ) and the amount up to which deviations larger than e are tolerated.
 be solved more easily in its dual formulation. The corresponding dual optimization problem is defined as ( Ustun et al., 2007 ) max s : t : where a i and a n i are the Lagrange multipliers corresponding to x
Several kernel functions have appeared in the literature. The kernel functions include polynomial, sigmoid, radial basis kernel functions, among which the Gaussian RBF kernels are very popular for their universal approximation in the widely used kernels.
After training, some a i and a n i become zero. Only those examples with nonzero values for a i and a n i are called support vectors and vectors will be equal to or less than the number of training examples. The immediate advantage of the method is that good approximating functions can be obtained with a (relatively) small set of support vectors, leading to the concept of sparsity and, in turn, to the idea of inherent compression.

Once the Lagrange multipliers a i , a n i are obtained, the optimal weights of regression are determined. w  X  and an optimal bias b  X  1 l
Hence, function (1) becomes the explicit form. For a new input vector x , the output can be determined by the expression f  X  x  X  X  w T j  X  x  X  X  b  X  2.1.2. Model parameters
The generalization performance of the SVR is heavily depen-dent on two parameters, namely generalization parameter C and the kernel function parameters g . So far, no systemic and archi-tectural methods are available to determine these parameters. In fact, selection of SVR X  X  parameters is an optimization issue. The real-value genetic algorithm was employed to determine the optimal parameters of SVR, which were then applied to construct the SVR model, referred to as GA-SVR ( Huang and Wang, 2006 ;
Wu et al., 2007 ). Particle swarm optimization has also been used to select the model parameters of SVR by several researchers ( Gao et al., 2007 ; Yuan and Chu, 2007 ). Recently, Cherkassky and Ma (2004) proposed a practical method for selecting the value of regularization parameter C directly from the training data. How-ever, the method did not give the empirical expression for the value of g . Moreover, we may not psychologically feel safe to use methods which avoid doing an exhaustive parameter search by approximations or heuristics. A  X  X  X rid-search X  X  on C and g was recommended by Chang and Lin (2001) , called Grid-SVR in this work. In the grid search method, pairs of ( C , g ) are tried and the one with the pre-specified evaluation measure is picked. It was found that trying exponentially growing sequences of C and g is a practical method to identify good parameters (for example, C  X  2 5 ,2 3 , y ,2 15 , g  X  2 15 ,2 13 , y ,2 3 ).

An estimate of the generalization error is critical to obtain a good model with good predictive accuracy on test data. To over-come the overfitting, k -fold cross-validation (CV) and leave-one-out (holdout) approaches are very popular ( Gao et al., 2007 ). In k -fold cross-validation, the training data is randomly split into k roughly equal subsets (folds). The SVR model is obtained using ( k 1) of these subsets and then tested on the subset left out. This procedure is repeated k times with each of the k subsets used as the test subset in turn. Averaging the test error over the k trials gives an estimate of the expected generalization error. Never-theless, the disadvantage of k -fold cross-validation is very demand-ing computationally, especially for a large k . The holdout method, sometimes called test sample estimation, partitions the data into two mutually exclusive subsets called a training set and a test set, or a holdout set ( Wu et al., 2007 ). To consider the tradeoff between the generalization error and the training time, the holdout method was employed. For comparison purpose, 5-fold cross-validation on the training data was also performed in this work.

As indicated above, due to lack of theoretical methods avail-able to determine ( C , g ), the approach of selecting ( C , g ) with acceptable computational effort must be further studied. In this work, ACO-based parameters selection method (referred to as ACO X  X VR) was proposed to obtain the optimal parameters, and its performance was compared to the grid search method. 2.1.3. ACO X  X VR
GA has been used to optimize ( C , g ) of the SVR model ( Huang and Wang, 2006 ; Wu et al., 2007 ). However, GA often needs too many computations to reach local minima since the probabilistic transition rules are employed and a neighborhood search mechanism is not used ( Karaboga et al., 2004 ). In this work, ACO was applied to select the parameters of the SVR model. The subsection will give a brief description of ACO, which will be incorporated into SVR implementation to optimize the model parameters. Unlike the binary code idea presented by Karaboga et al. (2004) , a more straightforward real value code algorithm was used in the current study.

For simplicity, the optimized problem consists only of one variable x . It is well known that any variable belonging to the continuous domain can be scaled to the range of [0, 1] by Eq. (8) Up are the lower and upper bounds of the variable x . x 0  X  x Lo Up Lo  X  8  X  where x 0 is a scaled variable. It is easy to derive x from x 0 by unscaling. Any random quantity in range of [0, 1] can be represented as a decimal fraction with d digits precision using a bunch of character strings consisting of number. For example, the decimal fraction 0.57895645 with 8 digits precision can be represented by a bunch of character strings, 57895645. The character string is assumed to be represented as d d y d (l 2) d (l 1) , in which l is the precision. Then, the character string can be decoded into a decimal fraction through the following formula: x  X 
The above basic idea is illustrated in Fig. 1 , in which every node can only be the value of 0, 1, 2, y ,9.Asshownin Fig. 1 ,the polygonal line connecting 8 nodes represents the 8-digits of character string, 31843356, namely the real value of the scaled variable x is 0.31843356 decoded by Eq. (9). In order to introduce the idea into ant colony optimization, some definitions are fol-nodes is referred to as the route, and each character (for d cities. Now, the regular ACS method can be applied to optimization in a continuous domain. A variable x with d digits precision can be illustrated by a route connecting d cities. The ant must in sequence travel a route from one city on the first layer to a city on the last layer in Fig. 1 . In each layer, the ant can visit any one in these 10 cities. A completion of a run of traveling will produce a route variable can be easily derived for the scaled variable x .
Let t i ( j ) be the intensity of trail information on the edge between the current city on the i th layer and the j th city on of real ants. Suppose m is the total number of ants, at iteration t according to the following probability distribution:
S  X  8 &gt; &gt; &lt; &gt; &gt; : where the constant q 0 is referred to as the exploitation probability factor and q is a random number. The pheromone on the edge between the current city on i th layer and the j th city on ( i  X  1)th layer is updated immediately after the edge is traveled by the ant.  X  j  X   X   X  1 r  X  t i  X  j  X  X  rt 0  X  11  X  where r is the pheromone decay parameter, 0 o r o 1, and (1 r ) and t 0 is the initial pheromone.

It will take an ant d steps to complete a tour traversing all the solution. The value of the objective function is calculated accord-ing to the solution. The iteration best ant can be picked out by comparing m ants of solutions. If the iteration best ant is better than the global best ant, the global best ant will be replaced by the iteration best ant. The intensity of trail information on the route traveled by the global best ant should be changed by the updating formula.  X  j  X   X   X  1 a  X  t i  X  j  X  X  a = f best  X  12  X  where a is called the local pheromone update strength parameter, 0 o a o 1, and (1 a ) represents the evaporation of t i ( j ) on the global best route and f best is the objective function value given by the global best ant.

The above presented algorithms can be very easily extended to multi-variables continuous domain optimization when all vari-ables in the optimized problem are concatenated in series.
As we know, the main purpose of finding optimum parameters pair ( C , g ) is to obtain good predictive accuracy according to pre-determined evaluation criteria. Therefore, the main idea of ACO is to optimize the evaluation criteria as a fitness function by selecting proper parameters pair ( C , g ). Fig. 2 illustrates the algorithm process of the selection of SVR model parameters based on ACO. With respect to the evaluation criteria, the detailed information is given in the next section.

The detailed description of ACO implementation ( Zheng et al., 2009 ) was provided elsewhere. For the sake of brevity, they are omitted in this study. 2.2. BP neural network feed-forward, multi-layer network, which can be considered as non-linear mapping of the input pattern to the output pattern.
The detailed description of BPNN used in this work was given elsewhere ( Zhou et al., 2004 ).
 experiences ( Zhou et al., 2001 ), a three layer MLP was used, and twenty three neurons in hidden la yer were chosen for this network.
Regarding the training algorithm, thereareanumberofvariationson the basic algorithm that are base d on other standard optimization techniques, such as conjugate gradient, Newton methods and
Levenberg X  X arquardt (LM) algorithm. In this work, LM training method was used because this algorithm appears to be the most effective one for training moderate-sized feed forward neural net-works ( Barletta et al., 2007 ). The steepest descent with momentum is the commonly used training algorithms, which were also employed for comparison with LM algorithm. 2.3. GRNN neural network from statistics ( Specht, 1991 ): ^ y  X  x  X  X 
D 2 i  X  9  X  x x i  X  9 2  X  14  X  w  X  exp vector, D i is the Euclidean distance between two input vectors, x and x i , N is the number of training samples, w i is the Gaussian kernel function, s is the smoothing (or spread) parameter. The observed values, y i , where each observed value is weighted exponentially according to its Euclidean distance from x i
A critical consideration in the effectiveness of GRNN is the determination of an optimal value for s .As s becomes very large
GRNN output approaches the mean of the training set outputs; and as s becomes very small GRNN output approaches the output pattern of the training set, which may not generalize well.
Intermediate values typically result in the best generalization ( Hansen and Meservy, 1996 ). 3. Evaluation criteria
Here, in the optimization of model parameters, some statistical metrics such as the mean relative error ( MRE ) and the correlation coefficients ( R ) between the measured value and the predicted value were adopted to evaluate the predictive accuracy of various models.

The relative error in this study is more appropriate since it exhibits independence from the range of data ( Benardos and
Vosniakos, 2007 ). The smaller the MRE , the more accurate are the prediction results to the actual values. R is used as derivation measurements between measured and predicted values. The R  X  1 gives the results of the predicted value equal to measured value. 4. Experimental setup and data analysis
For the purpose of this study, NO x emissions data from an actual power plant was used. The experiments were carried out on a 300 MW tangentially fired dry bottom boiler manufactured by
Shanghai Boiler Co. Ltd. in the 1980s with large dual-furnaces of 17 8.475 m 2 section and 45.5 m high, which is one unit of JianBi power plants located at the Jiangsu Province of China. The tilting fuel and combustion air nozzles including 4 primary air burners and 6 secondary air burners were located in each corner of the furnace.
The fuel and primary air streams were directed at the circumfer-ence of an imaginary circle of 500 mm diameter at the center of the furnace. Coal for combustion was supplied by 4 medium-speed coal pulverizers. Coal X  X ir mixtures were fed to the burners on A X  X  levels. Operation experiences showed that NO x emissions were high due to old design technology of the boiler.

Bituminite was burned in this boiler. The characteristics of the combusted coal were as follows: the volatile, the ash content, moisture content and the heating value as received were 31.96 wt%, 11.06 wt%, 13.60 wt% and 23.49 MJ/kg, respectively. NO x and O 2 concentrations were monitored continuously by
Continuous Emissions Monitoring System (Rosemount, Emerson process management) in the boiler outlet prior to the air heater.
The NO x concentrations reported here were average values over several hours of stable operation, and they were obtained under dry gas conditions. The measurements were performed a week later after the boiler switched to the pure test coal to make the boiler conditions unchanging. Six hundred and seventy tests were carried out on this boiler, changing the boiler parameters, to analyze the characteristics of NO x emissions of the tangentially fired system. The parameters range regulated in experiments are shown in Table 1 . Due to the air duct arrangement restriction, only a very narrow air velocity change range of F level of secondary air can be achieved. As shown in Table 1 , the boiler operated in a wide range, and the measured NO x emissions and operational parameters provided a rich enough dataset for devel-oping empirical models. The monitored NO x emissions are shown in Fig. 3 .

The dataset consisted of 670 cases with 22 dimensions, in which 21 inputs to the utility boiler included four levels of primary air velocity, six levels of secondary air velocity, rotation speed of four mills, the boiler load, the oxygen concentration in flue gas, total combustion air flow rate and coal quality such as the volatile matter, the ash content, the heating value and the moisture content, while the only output was NO x emissions. According to the physical analysis, the NO x emissions mainly depended on the above-mentioned 21 inputs of the boiler. There-fore, the SVR was used in this work to build the relation between the output of the boiler and its 21 inputs.

Sometimes, as a back-up monitoring system for replacing hardware-based CEMS, a mathematical model is used to estimate the NO x emissions. That currently used is a linear one, in the following form ( Graziani et al., 2004 ): C  X  boiler inputs is 21, each one is characterized by a relative importance weight w i , determined by least quadratic squared regression. Coefficients of the regression equation are given in
Table 2 . The predicted NO x emissions using the multiple linear regression equation (MLR) are also shown in Fig. 3 , as represented by open circles. The results show that the MLR model gave the maximum relative error of 37.7%, mean relative error of 3.4% and the correlation coefficient of 0.77. This result derived from the linear model is not very accurate due to the inherent nonlinear relation between the boiler inputs and the output, and the further improvement in predictive accuracy can be made by resorting to a nonlinear model such as SVR and ANNs. 5. Modeling process
Unlike traditional statistical models, BPNN, GRNN and SVR are all black box modeling tools, that means they are data-driven models and they let  X  X  X he data speak for themselves X  X , in which the user need not know the detailed  X  X  X nternal X  X  structure of the model, what is to be done is to feed the input data to get a desirable output. That means there are no differences in BPNN, GRNN and SVR model from the users X  point of view, and only the designer is responsible for the implementations of BPNN, GRNN and SVR model. Through physical utility boiler is mainly determined by 21 operational parameters, as indicated in Section 4 . In models, these boiler parameters are used for inputs and the NO x emissions as the output. After the training phase, the models can be used to obtain the answer to an input pattern. The main task in the next step includes the selection of models parameters, the implementation of models algorithms and the training of models using real life data.

In this work, total 670 cases with 21 inputs were downloaded from DCS and CEMS equipped on the boiler, as described in
Section 4 . These cases were divided into two parts, i.e., the training set D 1 and the test set D 2 . Here, 670 cases were in advance indexed by the arabic numeral, i.e., idx  X  1, 2, y Two hundred and twenty-four cases were chosen as the test set
D with the indices, idx  X  1,4,7, y , 670, while the remaining 446 cases named the training set D 1 were employed to train various models to capture the quantitative relation between the NO emissions characteristics and twenty-one operational parameters of the studied utility boiler.

NO emissions [ppm] meter of the boiler, some necessary prepossessing of the raw data before feeding them into the SVR model is needed. In this study, all the feature elements and the target values were scaled so that they fall into the range of [ 1, 1]. When using these models, the computed target value should be converted back into the same scales that were used for the original target values. 6. Results studied coal fired utility boiler through SVR are presented. The emphasis is played on the selection of model parameters, the predictive accuracy, and the time response of the SVR model. were employed in this investigation. One method is the optimiza-tion approach based on Evolution al Algorithms ACO, and another method is the grid search method for comparison purpose. 6.1. Prediction results of ACO X  X VR D 2 was employed as the objective function, as shown in Fig. 2 .
That means the MRE was employed to evaluate the predictive accuracy of the SVR model. In this study, all calculations were performed on a 2.4 GHz Intel Pentium IV PC with 1.5 GB RAM under windows XP.
 tions G  X  100 were chosen as the ACO X  X  parameters, It took nearly 5053 s to get the best parameters with the MRE of 1.5905%, the in Table 3 . Obviously, it is a time-consuming process and not suitable for the on-line built SVR model. It may typically take several seconds to train a SVR model using the training set D consisting of 446 samples with 21 inputs and one output. On average, ACO with 50 initial ants and a maximum generations
G  X  100 will try at least 5000 SVR models. The searching process is extremely CPU demanding. It is straightforward to shorten the computing time required for one ACO optimization procedure by reducing the population m and the maximum generations G .
However, the performance of ACO optimization procedure depends significantly on these two parameters. Therefore, the tradeoff between the time cost and the performance must be examined. Results derived from various combinations of the population m and the maximum generations G investigated in this work are listed in Table 3 . Each combination was repeated five times to minimize the results variability. Table 3 also gives the optimized parameters pair ( C , g ), the computing time, and the model performance such as the correlation coefficient ( R )and mean relative error ( MRE ) on training set D 1 and test set D respectively. The typical mean relative error MRE and parameters which the population m  X  5 and the maximum generations G  X  50 were employed. Obviously, the ACO can find the best parameters pair ( C , g ) within a few iterations when the mean relative error on test set D 2 was employed as the objective function. It can be concluded that the algorithms have very fast speed.

As we know, the computing time spent to execute the optimization procedure is mainly dependent on how many times the SVR model is tried and trained. Obviously, the product of the population and the maximum generations, ( m G ), can be con-sidered as the times the SVR model is recalled. The performance of SVR model characterized by MRE is plotted as a function of the product, as illustrated in Fig. 6 . Results show approximately monotonic relations between the MRE with the product, ( m G ).
Especially, the computing time is perfectly linearly correlated with the product, ( m G ). Larger products led to larger computing times. However, the MRE of SVR model will reach a plateau when the product is larger than 150. So, the tradeoff must be made between the performance and the computing time. As for this study, the product of 150, for example, the combination of ( m G )  X  (5, 30), will be suitable and sufficient.
 Mean relative error [%]
Generalization parameter C
After the ACO was applied to search for the optimal para-meters sets, the SVR X  X  prediction model was built. To check the generalization property of the model, another dataset D 2 had not been used in training, was employed to validate the models. The graphical comparisons between the actual and the predicted NO x emissions are shown in Figs. 7 and 8 . The absolute error and the relative error are very easy to calculate for all cases from the figures. As for the training set D 1 , the maximum absolute error was about 48 ppm, while the maximum relative error was 18.56%. As for the test set D 2 , the maximum absolute error was about 41 ppm, while the maximum relative error was 15.99%. 92% of cases in test data D 2 had the relative error smaller than 5%. The results are better than the reported 20% error ( Kamas and Keeler, 1995 ) and are comparable to the 5% error ( Azid et al., 2000 ).
This model produced a mean relative error ( MRE ) error of 0.6020% 0.9355 and 0.9537. It can be concluded that the predicted values were in very good agreement with the experimental values. 164 s of computing time is acceptable for on-line constructing the model for NO x emissions, which is expected in the development of PEMS and combustion optimization software package. In addition, the rela-tively small standard deviation of the performance for the SVR model indicatesthatitisquiterobust.

For comparison purpose, 5-fold cross-validation approach, in which the training data D 1 was divided into 5 subsets of equal sizes ( Hua et al., 2007 ), was also performed in this work. The comparison between 5-fold cross-validation and holdout approaches are summarized in Table 4 . The computational con-ditions were identical, namely, the population m  X  5 and the maximum generations G  X  30; the adjustable ranges of C and g were [0.1, 500] and [0.001, 3], respectively. The 5-fold cross-validation method presented worse predictive accuracy and needed much more computing time than the holdout approach.
Therefore, the holdout approach is suitable for this investigation in terms of the predictive accuracy and the computing time. 6.2. Prediction results of Grid-SVR
In the grid search method, two steps are needed in order to avoid the grid search with fine grid within a large area. Firstly, optimal values of C and g are searched for in relatively coarse grids within a relatively large area, then followed by a search in finer grids within a relatively small area. Finally the optimal values of C and g for the model are obtained. Fig. 9 shows the contour of MRE and R searched in the range of C  X  (2 5 ,2 2 ) and g  X  (2 15 ,2 13 , y ,2 3 ). From these coarse contours of raw search, a smaller area was determined where a finer search ( C  X  2 7 ,2 7.25 , y ,2 9 and g  X  2 10 ,2 9.75 , y ,2 3 ) was carried out to find the solution, as shown in Fig. 10 . Finally, the lowest value of
MRE and the highest value of R were found to be obtained at C  X  2 and g  X  2 0.75 . After obtaining the optimal values of C and g with respect to the chosen grid point resolution, the model for NO emissions was then trained using these optimal parameters. The results are given in Table 5 in terms of MRE and R on the training set D 1 and the test data D 2 . The total computing time for grid search was about 388 s, the summation of the time spent on coarse grid search and that spent on finer grid search. MRE [%] The predicted value [ppm] 280 300 320 340 360 380 400 420 The predicted value [ppm] derived from two SVR models. The ACO X  X VR model in Fig. 11 was obtained with a combination of the population m  X  5 and the maximum generations G  X  30. The horizontal axis represents the relative error ranges calculated by comparing the predicted NO emissions and the actual values, and the vertical axis represents the occurrence frequency of cases whose relative errors fall within the corresponding error range on the horizontal axis. Results in Fig. 11 show that the relative error distribution for ACO X  X VR is almost identical to that of Grid-SVR. Judged by MRE , ACO X  X VR shows slightly better results than Grid-SVR.
 composed of two aspects. On the one hand, the ACO X  X VR can automatically regulate the parameters pair ( C , g ). On the contrary,
Grid-SVR needs more manual operation. For example, two sepa-rate steps in Grid-SVR are not convenient to operate this process in automation. On the other hand, the computing time required for Grid-SVR was more than twice that of ACO X  X VR (388 s .vs. 164 s). Hence, it can be concluded that the performance of ACO X  SVR is better than that of Grid-SVR for the current study. The
ACO X  X VR is considered as the  X  X  X ptimum X  X  SVR model and will be compared to ANNs model in the next section. 6.3. Prediction results from ANNs descent method with the moment attachment and the self-adaptive learning step size (GDM) was used to train the BPNN model for NO x emissions. For comparison purpose, the results of GDM and LM algorithms employed in this study are given in
Table 6 . It shows the correlation coefficient R and the mean relative error MRE on the training dataset D 1 and the test dataset
D , respectively. The LM algorithm showed better predictive accuracy than GDM although the computing time was slightly longer. We also have tried other training algorithms such as conjugate gradient algorithms and Quasi-Newton Algorithms (Broyden X  X lechcer X  X olfarb X  X hannon, BFGS) method. However, no improvement in predictive accuracy has been achieved when compared to LM method, and the original results were omitted here. Therefore, the results derived from the LM algorithms were considered as the  X  X  X ptimum X  X  BPNN model for NO x emissions.
The training process was repeated 999 times (runs) to check the certainty and the stability of BPNN. Simulation results for all runs differed remarkably for R and MRE , namely, the BPNN produced uncertain results ( Benardos and Vosniakos, 2007 ). One
Log2(g) -14 -12 -10 -8 -6 -4 -2 0 2
Log2(g) -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 reason may be that the performance of the BPNN heavily relied on the initial weights. These weights are randomly initialized from the start of the training process. The BPNN cannot give a satisfactory R or/and MRE when the weights are ill-initialized. Unfortunately, no prior knowledge so far is available on the initial weights. Hence, one cannot predict when the good model is obtained except for comparing the evaluation criteria through repetitive trial-and-error processes. The simulation experiments presented in this work have also demonstrated that the Levenberg X  X arquart method can get 2002 ). The drawback of BPNN is detrimental to its introduction into real-time application.
 Unlike BPNN, whose training process is iterative, training of a GRNN is a one-step procedure, which helps in faster development of nonlinear input X  X utput models. Moreover, GRNN has only one model parameter, i.e., smoothing parameter s . Simulation experi-ments showed that the dependence of evaluation criteria of the model on smoothing parameter s was almost monotonic, which provided a very convenient way to select the parameter. The detailed results of GRNN model were omitted here due to page limit. The optimization process of GRNN model X  X  smoothing para-meter can be found in ( Zheng et al., 2008a , 2008b ). The summary of results is given in the next section for comparison purpose.
In the previous study ( Zheng, 2004 ), it was found that the time requirements of the GRNN were less by as much as an order of magnitude. The computing time of a run of GRNN required for the current study was less than 1 s, which was about 1/4 that of BPNN. 7. Comparison and discussion
This section compared the predictive accuracy of the SVR model for NO x emissions determined in the previous section to that of BPNN and GRNN models. As stated previously, the input data to BPNN and GRNN were the same as that for the SVR model.
In addition, the holdout approach was also performed on BPNN and GRNN to improve generalization error. The evaluation criteria for each model were the mean relative error MRE and the correlation coefficient R .

Fig. 12 compared the predicted NO x emissions derived from the  X  X  X ptimum X  X  BPNN, the  X  X  X ptimal X  X  GRNN and the  X  X  X ptimal X  X 
SVR. This figure is given as an illustration to provide insight into the performance of the models. As shown in Fig. 12 , the blue dash dotted line, by comparing with red dashed line and the green dashed line, is obviously away from the black solid line. Hence, the predicted emissions by BPNN deviated from the measured emission more than the SVR and GRNN. Therefore, the predictive performance of GRNN and SVR was better than that of BPNN.
From the observation of Fig. 12 , one cannot distinguish the predictive accuracy of SVR model from that of GRNN model. The distribution of relative error on the test data D 2 for three models was used for further comparison, as presented in Fig. 13 . The relative error distribution derived from multiple linear regression is also given in Fig. 13 . The results show that the SVR model demonstrated a slightly good performance over that of the GRNN
Frequency [%] 260 280 300 320 340 360 380 400 420
NO emissions [ppm] 0 10 20 30 40 50 60 70 80
Frequency [%] 1.15 3.45 5.76 8.06 10.36 12.66 14.97 17.27 19.57 21.87 model though the difference was very small. Additionally, the maximum relative error on the test data D 2 for the GRNN model was much larger than that of the SVR model, as shown in Fig. 13 . shows the MRE and R on training dataset D 1 , test dataset D the computing time.
 comparison is between the linear model and the non-linear models.
The latter such as BPNN, GRNN and SVR have remarkable advantage over the MLR in terms of MRE and R . The second comparison is between the BPNN model versus the SVR model. The BPNN model is important to examine because they are the traditional approaches for NO x emissions modeling employed in PEMS and combustion optimization. Obviously, the SVR model performs significantly better than the BPNN model, as examined above. models are one pass techniques, in which the certain results will be given once the model parameters (smoothing parameter for
GRNN model and C , g for SVR model), unlike the BPNN model will give uncertain results even though the structure configuration, the number of the neurons in hidden layer and the training algorithms were determined in advance. The performance of the
SVR was slightly better than the GRNN for NO x emissions predic-tion in terms of MRE and R . In addition, as indicated by Specht (1991) , some drawbacks restrict GRNN X  X  wide application to various fields. On the one hand, the estimate from the GRNN is bounded by the minimum and maximum of the observations, namely, the predicted NO x emissions for a new set of operational parameters of the boiler is always bounded between the max-imum and minimum NO x emissions of all cases because the estimated NO x emissions can be visualized as a weighted average of all of the observations. Though this feature was regarded by
Specht (1991) as one of GRNN X  X  advantages in relation to other nonlinear regression techniques, it is considered here as a disadvantage of GRNN from the combustion optimization X  X  point of view. Taking the operational parameters optimization of the boiler for example, if the GRNN model is incorporated into the optimization algorithms for optimizing the input parameter of the boiler, the optimized output will be not less than the minimum
NO x emissions in the training samples and the combustion optimization will lose its significance. So, searching tools such as GA and ACO are not suitable to be combined with the GRNN model for process optimization. On the other hand, another disadvantage of GRNN is that it requires substantial computation to evaluate new points.
 combustion optimization, the time response of modeling NO emissions is a critical consideration. Consequently, the compar-ison among algorithms is the calculation in real CPU time. The computing times are also compared in Table 7 . A run of ACO X  X VR optimization procedure can be completed in approximate 164 s, which is very suitable to on-line and real-time NO x emissions modeling in coal fired utility boilers. The process of finding the  X  X  X ptimum X  X  GRNN and BPNN model took 981 s and 4522 s, respectively. The computing time required for GRNN model may be saved with the help of other optimization algorithms for finding the smoothing parameter. The main conclusion is that the SVR model has lower prediction error, shorter computing time and a higher robustness than the BPNN model and GRNN model for NO x emissions modeling. 8. Conclusions
In this paper, different models for the estimation of NO x emissions, obtained on the basis of data acquired on the output of an actual power plant, were introduced and their estimation capabilities were described. In particular, the performance (the predictive capability and the time response) of SVR model were compared to those of both BPNN and GRNN models.

Because of its universal approximation ability, SVR can be used to model nonlinear processes. Choosing optimal parameters for the models is an important step in the modeling stage. ACO optimiza-tion in combination with the holdout method is a reliable way to determine the optimal model parameters, referred to as ACO X  X VR.
Compared to the widely used grid search method for selection of parameters pair ( C , g ), ACO X  X VR needs less computing time and shows slightly better predictive accuracy. Additionally, the ACO X 
SVR can automatically select the optimal model parameters with-out any manual operation. The model obtained this way was found to have good generalization property. 92% of cases in test data D had the relative error smaller than 5%. The predictive accuracy, characterized by mean relative error MRE and correlation coeffi-cient R , and the time response characteristics of the ACO X  X VR model are greatly dependent on the product of the population m and the maximum iterations G. The monotonic relations found between them can help us to make the tradeoff. The optimization procedure with the population m  X  5 and the maximum iterations G  X  30 took 164 s to obtain a sufficiently accurate SVR model for
NO x emissions. The computing time in scale of less than 3 min is suitable for on-line and real-time building of the SVR model.
Comparative study shows that the SVR model demonstrated much better performance than the BPNN model in terms of the predictive accuracy and the model robustness. SVR model also presented slightly better predictive accuracy than the GRNN model. The main advantage of the SVR model over the GRNN model is that the former can be incorporated into optimization algorithms such as ACO and GA to regulate the inputs of model to achieve the expected NO x emissions, which is the basic idea of combustion optimization to reduce NO x emissions from coal-fired power plants.

In summary, the study demonstrated the capability of the artificial intelligence to model the complex and highly nonlinear relation of the NO x emissions with the operational parameters of the boiler. The results of ACO X  X VR can provide a guide to develop the PEMS for on line NO x emissions monitoring and combustion optimization software package for NO x emissions reduction in coal fired power plants Acknowledgments
The financial supports from the Natural Scientific Foundation of China through the Grant nos. 60534030, 50576081 are grate-fully acknowledged.
 References
