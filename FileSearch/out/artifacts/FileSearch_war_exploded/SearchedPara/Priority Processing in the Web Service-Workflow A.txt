 Service Oriented Architecture(SOA) is an architecture that is made up of components and interconnections that stress interoperability and location transparency. SOA con-tains components, services and processes. A service is a grouping of components and these services are joined together by the processes to form a business process[4]. The web service architecture is based upon SOA pattern. Web services standards can offer lower cost options for enterprise integration, and have helped to promote the emer-gence of a new class of integration tool[7]. The essential benefit they bring to applica-tion integration is standardization[1]. The following basic specifications originally defined the Web Services space: SOAP, Web Services Description Lan-guage(WSDL), and Universal Description, Discovery, and Integration(UDDI). SOAP defines an XML messaging protocol for basic service interoperability[2]. The web service concept represents a next generation architecture that provides high level of interoperability between software components based on software industry stan-dards[4]. Web services are a relatively new way to distribute component architecture across network[8]. Key to Web service design are how a Web service processes re-service(the Web service's interaction model). The interaction model encompasses the client's interaction with the Web service. A client's interaction with a Web service can be synchronous or asynchronous, or a combination of both types of communication. When a synchronous model is followed, the application typically uses an RPC-oriented interaction. That is, interaction between web service, include component, are operated by RPC based FIFO method. But this technique increases the inefficient in processing and operating in case connecting web service increase. Also, RPC based FIFO method interaction can not carry out many components X  request in web service processing in unit time on the aspect of whole system operation. ity method. I set up the priority order of the request processing by component specification in web service. And the component applied in this proposed method is based on EJB, the server side of component model. So, I improved the operation between components in web service. 2.1 Java Based Web Service-Workflow Web services follow the service-oriented architecture model shown in Figure 1. In a Java programming environment, the Web service uses the Java API for XML Regis-tries (JAXR) to publish itself to the registry[3]. which time the client retrieves the response and proceeds with its processing. Enter-prise Application Integration(EAI)[10] uses Web services to integrate enterprise in-formation systems. A Web service for EIS integration can be a synchronous or asyn-The architecture of a Web service providing EIS integration might have a JAX-RPC[9] servlet endpoint to receive the client request[3]. 2.2 Request and Response Pro cessing in the Web Tier Interface Web services are a relatively new way to distribute component architecture across network. Components offer a set of services, usable with SOAP protocol[5]. The Web tier generally receives client requests. Incoming client requests (in the form of SOAP messages) are mapped to method calls on the classes that implement the Web service interface. Response generation, which is simply constructing the method call return endpoint. Keeping this functionality in the endpoint enables you to implement cach-ing of data to avoid extra trips to the EJB tier. The Web service endpoint handles all incoming SOAP requests and delegates to the business logic exposed in the EJB tier, possibly through a Session Facade design pattern in the EJB tier. Figure 2 shows the recommended way to handle requests and responses in the Web tier interface[3]. 3.1 Priority Order of Component Process In this research, I designed the component interaction method in web service. The component's quality characteristic value is provided in the component specification. Bean request processing time and memory use rate of the component were selected as the applied efficiency characteristic factor. The setting range of the selected efficiency value of the component was converted into the relevant weight. Therefore, the sum of questing components. Components which have minor value is handled and performed with FIFO method. 3.2 Priority Process Workflow A workflow invokes component services by sending messages to front-end modules. For a service expected to give an immedi ate response, the workflow will call the front-end synchronously(i.e., a WSDL request-response operation). Synchronous messaging with the front-end module is less vulnerable than with the original server since the messaging is done inside server clusters managed by a single service man-ager. If the front-end does not require communication with the backend during execu-tion of the workflow request, the response time will be kept short. System architecture shows in Figure 3[6]. insert priority process into Figure 2 within the (A) part in Figure 3. Figure 4 shows the proposed workflow which insert connector for priority process. 3.3 Design and Implementation of Connector for Priority Process In this research, applied component model in web service is EJB, server side compo-nent model. Figure 5 shows the class and sequence diagram to embody this system. system and registers implemented EJB components through the initialization. In the connector part, I set the attribute table according to the specification of each compo-nent and the processing priority sequence based on the processing time and used the bubble sorting algorithm to line up priority order estimations. In the sequence dia-gram, at the initial step in the client, the composition components were registered and the requesting messages were stored in the message queue. For operating and testing this system, I implemented 10 example EJB components which have different efficiency characteristics as Table 1. 
Figure 6 shows test result of the bean request processing time and the memory use rate. In the bean request processing time, on the basis of 15,000ms as the processing rate, the proposed technique decides the pr ocessing order considering each character-whole. This research makes connector X  X  priority process by component specification in web service. Component specification assigned considering the bean request processing time and memory use rate. That is, the assignment in the connector does not depend on the requested order of the component but the request of the small unit component with the small memory load and the fast b ean request processing time should be car-ried out preferentially. As these results, the efficient processing assignment and opera-tion of whole composed components is possible. reflect the references of components' specifications to the request processing. 
