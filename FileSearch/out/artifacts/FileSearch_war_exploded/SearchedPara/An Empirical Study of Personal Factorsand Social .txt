 In recent years, due to the rapid growth and increasing popularity of social networks, social recommendation [ 20 ] receives much attention. The task of social recommendation is to provide recommendations by systematically leveraging the social links [ 21 ] between users as well as their past behavior.

The link between a pair of friends has been reported effective in improving is one of the most challengeable problems which decreases the improvement of accuracy. Informally, users at both ends of a link may rate common items, but may rate different items at most occasions. As Figure 1(a) shows, given user u and u 3 is a pair of friends, they both rated item i 2 , but u while u 3 do not. Hence, a prediction of preference from u preference of u 1 to i 1 will be a slip.

We consider that user X  X  ratings are affected by (1) personal factors : user X  X  per-the following example. Given user u 1 and user u 3 are friends, and the attitude of user u 1 on item i 2 is between neutral and good (Let X  X  say 3.5 stars), but she has to choose either the neutral (3 stars) or the good (4 stars). Probably, she has chosen the rating 4 because of her friend u 3 rated 4 on item i
We aim to improve the recommender performance by capturing both personal factors and social effects. There are two challenges: (1) How to build up the relation between personal factors and social effects? (2) How to observe personal factors and social effects solely on the basis of rating logs?
To address these challenges, we propose P ersonal factors with W eighted S ocial effects Model (PWS), which is based on matrix factorization technique [ 8 ]and incorporates personal factors with weighted social effects.

To summarize, our main contributions are as follows:  X  We consider that a rating is affected by personal interests and interests of friends. In particular, we formulate the relation between personal factors and social effects in terms of rating prediction.  X  Based on the consideration, we develop PWS to learn personal factors and social effects and provide recommendations.  X  Finally, We demonstrate how the model can be applied to improve recom-mendation. We systematically compared our approaches with other algo-rithms on 3 public real datasets.

The rest of the paper is organized as follows. Section 2 provides a brief review of related work on social recommendation methods. Section 3 presents our proposed recommendation approach. Section 4 presents the experimental setup. Section 5 shows the experimental results and analyses. Finally, we conclude in Section 6. In this section, we review several popular approaches for social recommendation.
According to the way the trust links are used in each method, social recom-mendation techniques can be categorized into two types: memory-based (e.g., [ 1 , 5 , 14 , 15 ]) and model-based (e.g., [ 4 , 6 , 10 , 11 , 13 , 24 ]).
Typically, memory-based methods generate predictions via similar users or items which are usually calculated by predefined similarity functions (e.g., Cosine or Pearson similarity measurement). In trust networks, methods in this category use social trust metric to represent the similarity between two users, and the degrees of trust are estimated by means of propagation over the trust network. In [ 16 ], Massa et al. propose a trust-aware method for recommender systems. In this work, the weight for prediction function is measured by the combination of estimated degree of trust and user similarity. The experiments on Epinions dataset show that the enhancement of precision while preserving the coverage posed to improve standard collaborative filtering methods. The experimental results reveal that the social trust information can help enhance recommenda-tion performance.

In contrast, the model-based approaches use the observed ratings to train a designed learning model. User social information is fused into traditional matrix factorization framework to improve recommendation accuracy, since the effec-social trust ensemble (STE) is proposed to linearly combine user rating and friends X  rating on an item in matrix factorization framework. In [ 13 ], Ma et al. propose social regularization terms to constraint matrix factorization objec-tive functions. In cases of explicit social relations are not available, [ 10 ]pro-poses implicit social recommendation methods, and the implicit social relation is built on the top-N similar users which are calculated by Pearson Correlation Coefficient.

The aforementioned matrix factorization based social recommendation meth-ods move a nice step forward in the research of recommender systems by fusing process or embedding trust links into.

However, regularizer methods often ignore the diversity of user X  X  taste, and embedding methods can not be directly used for learning the personal factors and social effects, In this paper, we present an empirical study on PWS which provides insights for learning personal factors and social effects on rating pre-diction. In this section, we present our approaches PWS, to incorporate personal factors and social effects into a matrix factorization model for rating prediction. 3.1 Problem Definition In social rating networks (See Figure 1(a) ), we can get two major data sources: 1) the user-item rating matrix R which records users X  past behavior, and 2) the binary social trust matrix T which denotes trusts among users. Let U , I be the set of users and items, respectively, and users can assign to items. Let r ui present the entry of matrix R , which indicates the rating of user u on item i . The ratings are explicitly defined as: where V is set of integers usually in the range [1 , 5]. Let t social trust u has on v as a real number in [0 , 1], 0 means no trust and 1 means full trust. Therefore, the trust relations among users are formulated as: note that T is asymmetric in general.

The task of rating prediction is as follows: Given a user u i  X  X  for which  X  r ui is unknown, predict the rating for u on i using R and 3.2 Matrix Factorization (MF) In this subsecition, we review the matrix factorization method that is widely studied in the literature.

Given a m  X  n rating matrix R describing m users X  ratings on n items. the low-rank approach builds a rank-d representation of R , decomposing it a user-factor matrix P  X  R d  X  m and an item-factor matrix Q  X  R d  X  n with d min( m, n ), such that R  X  P T Q . The predicted rating for a user u and an item i is calculated as follows: where p u denotes the u -th column of P ,and q i denotes the i -th column of Q .
The basic MF model can be enhanced to include user and item biases [ 7 ], e.g., the tendency of users and items to deviate from the global rating mean. when biases are included, Equation 1 becomes: where  X  is the global mean rating, b u and b i indicate the observed deviations of user u and item i respectively, p u denotes the u -th column of P ,and q the i -th column of Q .

Typically, R is very sparse. This poses a challenge for training the model, which is addressed by learning P, Q, b u ,b i from observed ratings by minimising the following objective function [ 8 ]: tion, which avoid overfitting.

The optimization problem in Equation 3 is minimized by implementing a stochastic gradient descent method 1 . 3.3 PWS In this subsection, we present our approach PWS to fuse social links into the matrix factorization.
 Social Interests. We use social interests to present the taste of user X  X  friends. As the example shown in Figure 2(a) , user X  X  taste are positively (or negatively) affected by this user X  X  friends. The pattern of these interests is formulated as: where  X  X u is the estimated latent social interests vector of user u , x between user u and v ,and |T ( u ) | is the number of neighbors of user u .
In order to reduce the complexity of parameter learning, we use the user latent factor vector p v to represent the pattern of social interests x By this means, the interacted rating opinions between user and her friends will be directly connected. Hence, equation 4 is transformed to: where  X  X u means the total interests of u  X  X  friends.
 Weighted Social Effects. Due to the diversity of user X  X  taste, as Figure 2(a) influences. More realistically, for a pair of friends, the influences tend to be strengthened if their interests are more similar. By benefiting from inner product (as shown in Figure 2(b) ), we formulate the social effects as: where  X  S u denotes the effects received from friends of user u , of neighbors who are directly linked to user u ,and p u ,p of user u, v respectively.

We use the constant parameter w to control the degree of social influences from neighbors to a user. Therefore, we have: where  X  S u denotes the weighted effects received from friends of user u , the number of neighbors who are directly linked to user u .

In order to learn the social effects from ratings, we fuse the social effects into the basic rating function (Equation 2 ) and get: b and b i indicate the observed deviations of user u and item i respectively, p denotes the u -th column of P ,and q i denotes the i -th column of Q , friends of user u .

Therefore, we substitute Equation 8 into Equation 3 , and get the objective function: tion, which avoid overfitting.

As shown in Algorithm 1 , we exploit stochastic gradient descent to learn the proposed model. In order to update the parameters more easily in training pro-cess, we scan the datasets according to each user (Line 4-13). The updating rules are as follows: where and  X  is the learning rate.
 Algorithm 1. Pseudo code for minimising Equation 9 by stochastic gradient descent
Algorithm 1 exhibits the steps for learning the proposed PWS. In this section, we illustrate dataset collections, evaluation metrics, algorithm configurations and comparable methods. 4.1 Datasets Epinions Dataset. Epinions 2 is a consumer review site which allows visitors read reviews about a variety of items to help them decide on a purchase. The social relationships in epinions are directed. The Epinions dataset published by authors of [ 15 ]. Each user has on average 13.5 expressed ratings and 9.9 neighbors.
 Flixster Dataset. Flixster 4 is a social networking service in which user can rate movies 5 . Users can also add other users to their friend list and create a social network. Unlike epinions, the social relations in Flixster are undirected 5] with step size 0.5. On average each user has 8.9 friends and each users has rated 10.4 movies. However, if we ignore the many users who have not rated any movies and only consider users with at least one rating, each user has rated 55.5 movies on average.
 DouBan Dataset. DouBan 6 is a Chinese social website providing user rating, review and recommendation services for movie, book and music. Users can make friends with each other through the emails. DouBan dataset shared by Ma [ 13 ]. In this dataset, users can rate movies, books and songs in a 5-start numerical rating scale.

The general statistics of the Epinions, Flixster and DouBan dataset are shown in Table 1 . 4.2 Evaluation Metrics We adopt two metrics, the Mean Absolute Error (MAE) and the Root Mean Square Error (RMSE), to evaluate the performance of our proposed in compar-ison with traditional methods. The metric MAE is defined as: where r ij denotes the rating user i gave to item j in the test dataset R , X  r denotes the rating user i gave to item j as predicted by a method, and denotes the number of tested ratings. The metric RMSE is defined as:
We can see that a smaller MAE or RMSE value means a better performance. 4.3 Comparable Methods SR-MF . Social regularization based matrix factorization (SR-MF)[ 13 ] explicitly utilizes the social relationships to regulate the latent user factors.
Note that to make a better reading, Equations in comparable methods are represented by the symbols used in this paper.
 ASS-MF . Adaptive Social Similarity based matrix factorization [ 23 ]isproposed to alleviate the zero similarity problem among friends who are without common items.
 SWS . To study how the social influences  X  S u affects user rating behavior and performance without the interference of biases (Equation 2 ), we introduce Simple Weighted Social Effect Model (SWS) by fusing the social effects (Equation 6 ) into the basic rating function (Equation 1 ). Hence, we have: L = min u , p u denotes the u -th column of P ,and q i denotes the i -th column of Q .
In all experiments, the learning rate is set to 0.01 and the dimensionality D is set to 10. In the experiments conducted on Epinions dataset, we set  X   X  2 =0 . 01. In the experiments conducted on Flixster and DouBan datasets, we set  X  1 =0 . 005 , X  2 =0 . 02. And  X  3 is configured as 0.01 with respect to SR-MF or ASS-MF. For the proposed PWS, we configure  X  3 =  X  4 =0 . 01. networks to empirically validate the proposed Personal factors with Weighted Social effects Matrix Factorization (PWS). Our experiments are intended to address the following questions:  X  How the weight of social influence w affects the learning of social effects and recommendation performance?  X  Can personal factors and social effects be learned by the designed rating pattern?  X  Can the recommendation performance benefit from the captured personal factors and social effects? 5.1 Effects on Parameter w and recommendation, we measure the performance in terms of MAE and RMSE as w changes.

In the experiments based on SWS, we configure the step size of w as 0.2 to observed the recommendation performance, and w is still increased until the model became hard to be learned. As shown in Figure 3 , (1) the performance is greatly improved when fusing the social effect  X  S u into. (2) the optimal rec-ommendation performance can be obtained when w are set to 2.6, 5.0 and 0.4 respectively in these datasets. According to the obtained optimal w values, we can find that users tend to communicate 2.6 times (in average) on an item in Epinions.com. But users tend to deliver 0.4 messages in DouBan.com, a possi-ble reason is that users in DouBan.com are inconvenient to communicate with each other. For users in Flixster.com, each user communicates with 5.0 friend averagely, the possible reason is that item categories in Flixster.com are mainly about movies, while items are multiple in both DouBan.com and Epinions.com. (3) as w increases to a given value, the error of output of this model become larger. This phenomenon reveals that a user is affected by some of this user X  X  friend. And if w is so large, the rating noisy from this user X  X  friends (e.g., some friends tend to rate higher) would be intolerable according to this model.
Therefore, the more realistic model PWS is proposed by leveraging personal biases (See Equation 8 ). Experimental results carried on PWS show that the optimal values can be found when w is set to 0 . 01. We illustrate the experimental results of PWS in the following subsection. 5.2 Comparing with Regularization We perform 5-fold cross validation in our experiments. For each dataset used in this paper, we randomly select 80% ratings as training set and other 20% as test set. For comparison purpose, the dimensionality D is set to 10 in all the experiments conducted in this paper.

Table 2 reports the MAE and RMSE values of all comparison partners on the three datasets. The parameter w is set to 2.0 for experiments on SWS, and 0.01 for PWS. As Table 2 reveals, (1) SWS slightly improves the state-of-the-art social regularizer methods SR-MF and ASS-MF, (2) PWS outperforms the SWS on the provided three datasets, and (3) the improvement of PWS on Epinions dataset is more significant (by 28%) than other 2 datasets (by 1%-4%), which shows the effectiveness of PWS in dealing the with diversity of item, since the item classes are multiple in Epinions [ 6 ].
 It should be noted that the datasets we use in this paper are the raw data. Hence, there is a slip between the duplicated experimental results (See Table 2 ) and the result in literatures (SR-MF [ 13 ] and ASS-MF [ 23 ]), since some items are filtered out in data preprocess stage. In this paper, we focus on learning the behavior of personal factors and social effects when a user rates an item. We consider the social effects as a variation of ratings. Based on this consideration, we propose PWS to model the connection between ratings and social links, which extends matrix factorization framework. Experimental results conducted on 3 public available datasets show the effec-tiveness of rating prediction.

The study of common but differentiated weight of social effects for each user is a potential future direction of this work.

