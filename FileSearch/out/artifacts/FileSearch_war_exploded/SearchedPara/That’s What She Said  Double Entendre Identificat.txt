  X  X hat X  X  what she said X  is a well-known family of jokes, recently repopularized by the television show  X  X he Office X  (Daniels et al., 2005). The jokes con-sist of saying  X  X hat X  X  what she said X  after someone else utters a statement in a non-sexual context that could also have been used in a sexual context. For example, if Aaron refers to his late-evening basket-ball practice, saying  X  X  was trying all night, but I just could not get it in! X , Betty could utter  X  X hat X  X  what she said X , completing the joke. While somewhat ju-venile, this joke presents an interesting natural lan-guage understanding problem.

A  X  X hat X  X  what she said X  (TWSS) joke is a type of double entendre. A double entendre , or adianoeta , is an expression that can be understood in two differ-ent ways: an innocuous, straightforward way, given the context, and a risqu  X  e way that indirectly alludes to a different, indecent context. To our knowledge, related research has not studied the task of identify-ing double entendres in text or speech. The task is complex and would require both deep semantic and cultural understanding to recognize the vast array of double entendres. We focus on a subtask of double entendre identification: TWSS recognition. We say a sentence is a TWSS if it is funny to follow that sentence with  X  X hat X  X  what she said X .

We frame the problem of TWSS recognition as a type of metaphor identification. A metaphor is a figure of speech that creates an analogical map-ping between two conceptual domains so that the terminology of one ( source ) domain can be used to describe situations and objects in the other ( target ) domain. Usage of the source domain X  X  terminol-ogy in the source domain is literal and is nonliteral in the target domain. Metaphor identification sys-tems seek to differentiate between literal and nonlit-eral expressions. Some computational approaches to metaphor identification learn selectional preferences of words in multiple domains to help identify nonlit-eral usage (Mason, 2004; Shutova, 2010). Other ap-proaches train support vector machine (SVM) mod-els on labeled training data to distinguish metaphoric language from literal language (Pasanek and Scul-ley, 2008).

TWSSs also represent mappings between two do-mains: the innocuous source domain and an erotic target domain. Therefore, we can apply methods from metaphor identification to TWSS identifica-tion. In particular, we (1) compare the adjectival selectional preferences of sexually explicit nouns to those of other nouns to determine which nouns may be euphemisms for sexually explicit nouns and (2) examine the relationship between structures in the erotic domain and nonerotic contexts. We present a novel approach  X  D ouble E ntendre via N oun T ransfer (DEviaNT)  X  that applies metaphor iden-tification techniques to solving the double entendre problem and evaluate it on the TWSS problem. DE-viaNT classifies individual sentences as either funny if followed by  X  X hat X  X  what she said X  or not, which is a type of automatic humor recognition (Mihal-cea and Strapparava, 2005; Mihalcea and Pulman, 2007).

We argue that in the TWSS domain, high preci-sion is important, while low recall may be tolerated. In experiments on nearly 21K sentences, we find that DEviaNT has 12% higher precision than that of baseline classifiers that use n-gram TWSS models. The rest of this paper is structured as follows: Section 2 will outline the characteristics of the TWSS problem that we leverage in our approach. Section 3 will describe the DEviaNT approach. Sec-tion 4 will evaluate DEviaNT on the TWSS problem. Finally, Section 5 will summarize our contributions. We observe two facts about the TWSS problem. First, sentences with nouns that are euphemisms for sexually explicit nouns are more likely to be TWSSs. For example, containing the noun  X  X anana X  makes a sentence more likely to be a TWSS than contain-ing the noun  X  X oor X . Second, TWSSs share com-mon structure with sentences in the erotic domain. For example, a sentence of the form  X  X subject] stuck [object] in X  or  X  X subject] could eat [object] all day X  is more likely to be a TWSS than not. Thus, we hypothesize that machine learning with euphemism-and structure-based features is a promising approach to solving the TWSS problem. Accordingly, apart from a few basic features that define a TWSS joke (e.g., short sentence), all of our approach X  X  lexical features model a metaphorical mapping to objects and structures in the erotic domain.

Part of TWSS identification is recognizing that the source context in which the potential TWSS is uttered is not in an erotic one. If it is, then the map-ping to the erotic domain is the identity and the state-ment is not a TWSS. In this paper, we assume all test instances are from nonerotic domains and leave the classification of erotic and nonerotic contexts to fu-ture work.

There are two interesting and important aspects of the TWSS problem that make solving it difficult. First, many domains in which a TWSS classifier could be applied value high precision significantly more than high recall. For example, in a social set-ting, the cost of saying  X  X hat X  X  what she said X  inap-propriately is high, whereas the cost of not saying it when it might have been appropriate is negligible. For another example, in automated public tagging of twitter and facebook data, false positives are consid-ered spam and violate usage policies, whereas false negatives go unnoticed. Second, the overwhelm-ing majority of everyday sentences are not TWSSs, making achieving high precision even more difficult. In this paper, we strive specifically to achieve high precision but are willing to sacrifice recall. The TWSS problem has two identifying character-istics: (1) TWSSs are likely to contain nouns that are euphemisms for sexually explicit nouns and (2) TWSSs share common structure with sentences in the erotic domain. Our approach to solving the TWSS problem is centered around an SVM model that uses features designed to model those charac-teristics. We call our approach Double Entendre via Noun Transfer, or the DEviaNT approach.

We will use features that build on corpus statistics computed for known erotic words, and their lexical contexts, as described in the rest of this section. 3.1 Data and word classes Let SN be an open set of sexually explicit nouns. We manually approximated SN with a set of 76 nouns that are predominantly used in sexual contexts. We clustered the nouns into 9 categories based on which sexual object, body part, or participant they identify. Let SN  X   X  SN be the set of sexually explicit nouns that are likely targets for euphemism. We did not consider euphemisms for people since they rarely, if ever, are used in TWSS jokes. In our approximation,
SN  X  = 61. Let BP be an open set of body-part nouns. Our approximation contains 98 body parts.
DEviaNT uses two corpora. The erotica corpus consists of 1.5M sentences from the erotica section of textfiles.com/sex/EROTICA . We removed headers, footers, URLs, and unparseable text. The Brown corpus (Francis and Kucera, 1979) is 57K sentences that represent standard (nonerotic) litera-ture. We tagged the erotica corpus with the Stanford Parser (Toutanova and Manning, 2000; Toutanova et al., 2003); the Brown corpus is already tagged. To make the corpora more generic, we replaced all numbers with the CD tag, all proper nouns with the NNP tag, all nouns  X  SN with an SN tag, and all nouns 6 X  BP with the NN tag. We ignored determin-ers and punctuation. 3.2 Word-and phrase-level analysis We define three functions to measure how closely related a noun, an adjective, and a verb phrase are to the erotica domain. 1. The noun sexiness function NS ( n ) is a real-valued measure of the maximum similarity a noun n /  X  SN has to each of the nouns  X  SN  X  . For each noun, let the adjective count vector be the vector of the absolute frequencies of each adjective that mod-ifies the noun in the union of the erotica and the Brown corpora. We define NS ( n ) to be the maxi-mum cosine similarity, over each noun  X  SN  X  , using term frequency-inverse document frequency (tf-idf) weights of the nouns X  adjective count vectors. For nouns that occurred fewer that 200 times, occurred fewer than 50 times with adjectives, or were asso-ciated with 3 times as many adjectives that never occurred with nouns in SN than adjectives that did, NS ( n ) = 10  X  7 (smaller than all recorded similari-ties). Example nouns with high NS are  X  X od X  and  X  X eat X . 2. The adjective sexiness function AS ( a ) is a real-valued measure of how likely an adjective a is to modify a noun  X  SN . We define AS ( a ) to be the relative frequency of a in sentences in the erotica corpus that contain at least one noun  X  SN . Exam-ple adjectives with high AS are  X  X ot X  and  X  X et X . 3. The verb sexiness function VS ( v ) is a real-valued measure of how much more likely a verb phrase v is to appear in an erotic context than a nonerotic one. Let S E be the set of sentences in the erotica corpus that contain nouns  X  SN . Let S B be the set of all sentences in the Brown corpus. Given a sentence s containing a verb v , the verb phrase v is the contiguous substring of the sentence that con-tains v and is bordered on each side by the closest noun or one of the set of pronouns { I , you , it , me } . (If neither a noun nor none of the pronouns occur on a side of the verb, v itself is an endpoint of v .)
To define VS ( v ) , we approximate the probabilities of v appearing in an erotic and a nonerotic context with counts in S E and S B , respectively. We normal-ize the counts in S B such that P ( s  X  S E ) = P ( s  X  S Let VS ( v ) be the probability that ( v  X  s ) =  X  ( s is in an erotic context). Then, Intuitively, the verb sexiness is a measure of how likely the action described in a sentence could be an action (via some metaphoric mapping) to an action in an erotic context. 3.3 Features DEviaNT uses the following features to identify po-tential mappings of a sentence s into the erotic do-main, organized into two categories: N OUN E U -N  X  (boolean) does s contain a noun  X  SN ?,  X  (boolean) does s contain a noun  X  BP ?,  X  (boolean) does s contain a noun n such that  X  (real) average NS ( n ) , for all nouns n  X  s such S  X  (boolean) does s contain a verb that never oc- X  (boolean) does s contain a verb phrase that  X  (real) average VS ( v ) over all verb phrases v  X  s ,  X  (real) average AS ( a ) over all adjectives a  X  s ,  X  (boolean) does s contain an adjective a such
DEviaNT also uses the following features to iden-tify the B ASIC S TRUCTURE of a TWSS:  X  (int) number of non-punctuation tokens,  X  (int) number of punctuation tokens,  X  ( { 0, 1, 2+ } ) for each pronoun and each part-of- X  ( { noun, proper noun, each of a selected group 3.4 Learning algorithm DEviaNT uses an SVM classifier from the WEKA machine learning package (Hall et al., 2009) with the features from Section 3.3. In our prototype im-plementation, DEviaNT uses the default parameter settings and has the option to fit logistic regression curves to the outputs to allow for precision-recall analysis. To minimize false positives, while toler-ating false negatives, DEviaNT employs the Meta-Cost metaclassifier (Domingos, 1999), which uses bagging to reclassify the training data to produce a single cost-sensitive classifier. DEviaNT sets the cost of a false positive to be 100 times that of a false negative. The goal of our evaluation is somewhat unusual. DEviaNT explores a particular approach to solving the TWSS problem: recognizing euphemistic and structural relationships between the source domain and an erotic domain. As such, DEviaNT is at a dis-advantage to many potential solutions because DE-viaNT does not aggressively explore features spe-cific to TWSSs (e.g., DEviaNT does not use a lexical n-gram model of the TWSS training data). Thus, the goal of our evaluation is not to outperform the base-lines in all aspects, but rather to show that by using only euphemism-based and structure-based features, DEviaNT can compete with the baselines, particu-larly where it matters most, delivering high precision and few false positives. 4.1 Datasets Our goals for DEviaNT X  X  training data were to (1) include a wide range of negative samples to distinguish TWSSs from arbitrary sentences while (2) keeping negative and positive samples similar enough in language to tackle difficult cases. DE-viaNT X  X  positive training data are 2001 quoted sen-tences from twssstories.com (TS), a website of user-submitted TWSS jokes. DEviaNT X  X  negative training data are 2001 sentences from three sources (667 each): textsfromlastnight.com (TFLN), a set of user-submitted, typically-racy text messages; fmylife.com/intimacy (FML), a set of short (1 X  2 sentence) user-submitted stories about their love lives; and wikiquote.org (WQ), a set of quotations from famous American speakers and films. We did not carefully examine these sources for noise, but given that TWSSs are rare, we assumed these data are sufficiently negative. For testing, we used 262 other TS and 20,700 other TFLN, FML, and WQ sentences (all the data from these sources that were available at the time of the experiments). We cleaned the data by splitting it into individual sentences, cap-italizing the first letter of each sentence, tagging it with the Stanford Parser (Toutanova and Manning, 2000; Toutanova et al., 2003), and fixing several tag-ger errors (e.g., changing the tag of  X  X  X  from the for-eign word tag FW to the correct pronoun tag PRP ). 4.2 Baselines Our experiments compare DEviaNT to seven other classifiers: (1) a Na  X   X ve Bayes classifier on unigram features, (2) an SVM model trained on unigram fea-tures, (3) an SVM model trained on unigram and bigram features, (4 X 6) MetaCost (Domingos, 1999) (see Section 3.4) versions of (1 X 3), and (7) a version of DEviaNT that uses just the B ASIC S TRUCTURE features (as a feature ablation study). The SVM models use the same parameters and kernel function as DEviaNT.

The state-of-the-practice approach to TWSS iden-tification is a na  X   X ve Bayes model trained on a un-igram model of instances of twitter tweets, some tagged with #twss (VandenBos, 2011). While this was the only existing classifier we were able to find, this was not a rigorously approached solution to the problem. In particular, its training data were noisy, partially untaggable, and multilingual. Thus, we reimplemented this approach more rigorously as one of our baselines.

For completeness, we tested whether adding un-igram features to DEviaNT improved its perfor-mance but found that it did not. 4.3 Results Figure 1 shows the precision-recall curves for DE-viaNT and the other seven classifiers. DEviaNT and Basic Structure achieve the highest precisions. The best competitor  X  Unigram SVM w/o MetaCost  X  has the maximum precision of 59.2%. In contrast, DEviaNT X  X  precision is over 71.4%. Note that the addition of bigram features yields no improvement in (and can hurt) both precision and recall.
To qualitatively evaluate DEviaNT, we compared those sentences that DEviaNT, Basic Structure, and Unigram SVM w/o MetaCost are most sure are TWSSs. DEviaNT returned 28 such sentences (all tied for most likely to be a TWSS), 20 of which are true positives. However, 2 of the 8 false pos-itives are in fact TWSSs (despite coming from the negative testing data):  X  X es give me all the cream and he X  X  gone. X  and  X  X eah but his hole really smells sometimes. X  Basic Structure was most sure about 16 sentences, 11 of which are true positives. Of these, 7 were also in DEviaNT X  X  most-sure set. However, DEviaNT was also able to identify TWSSs that deal with noun euphemisms (e.g.,  X  X on X  X  you think these buns are a little too big for this meat? X ), whereas Ba-sic Structure could not. In contrast, Unigram SVM w/o MetaCost is most sure about 130 sentences, 77 of which are true positives. Note that while DE-viaNT has a much lower recall than Unigram SVM w/o MetaCost, it accomplishes our goal of deliver-ing high-precision, while tolerating low recall.
Note that the DEviaNT X  X  precision appears low in large because the testing data is predominantly neg-ative. If DEviaNT classified a randomly selected, balanced subset of the test data, DEviaNT X  X  preci-sion would be 0.995. We formally defined the TWSS problem, a sub-problem of the double entendre problem. We then identified two characteristics of the TWSS prob-lem  X  (1) TWSSs are likely to contain nouns that are euphemisms for sexually explicit nouns and (2) TWSSs share common structure with sentences in the erotic domain  X  that we used to construct DEviaNT, an approach for TWSS classification. DEviaNT identifies euphemism and erotic-domain structure without relying heavily on structural fea-tures specific to TWSSs. DEviaNT delivers sig-nificantly higher precision than classifiers that use n-gram TWSS models. Our experiments indicate that euphemism-and erotic-domain-structure fea-tures contribute to improving the precision of TWSS identification.

While significant future work in improving DE-viaNT remains, we have identified two character-istics important to the TWSS problem and demon-strated that an approach based on these character-istics has promise. The technique of metaphorical mapping may be generalized to identify other types of double entendres and other forms of humor. The authors wish to thank Tony Fader and Mark Yatskar for their insights and help with data, Bran-don Lucia for his part in coming up with the name DEviaNT, and Luke Zettlemoyer for helpful com-ments. This material is based upon work supported by the National Science Foundation Graduate Re-search Fellowship under Grant #DGE-0718124 and under Grant #0937060 to the Computing Research Association for the CIFellows Project. Greg Daniels, Ricky Gervais, and Stephen Mer-chant. 2005. The Office. Television series, the National Broadcasting Company (NBC).
 Pedro Domingos. 1999. MetaCost: A general method for making classifiers cost-sensitive. In
Proceedings of the 5th ACM SIGKDD Interna-tional Conference on Knowledge Discovery and Data Mining , pages 155 X 164. San Diego, CA, USA.
 W. Nelson Francis and Henry Kucera. 1979. A Stan-dard Corpus of Present-Day Edited American En-glish . Department of Linguistics, Brown Univer-sity.
 Mark Hall, Eibe Frank, Geoffrey Holmes, Bernhard
Pfahringer, Peter Reutemann, and Ian H. Witten. 2009. The WEKA data mining software: An up-date. SIGKDD Explorations , 11(1).
 Zachary J. Mason. 2004. CorMet: A computational, corpus-based conventional metaphor extraction system. Computational Linguistics , 30(1):23 X 44. Rada Mihalcea and Stephen Pulman. 2007. Char-acterizing humour: An exploration of features in humorous texts. In Proceedings of the 8th Con-ference on Intelligent Text Processing and Com-putational Linguistics (CICLing07) . Mexico City, Mexico.
 Rada Mihalcea and Carlo Strapparava. 2005. Mak-ing computers laugh: Investigations in auto-matic humor recognition. In Human Language
Technology Conference / Conference on Empir-ical Methods in Natural Language Processing (HLT/EMNLP05) . Vancouver, BC, Canada.
 Bradley M. Pasanek and D. Sculley. 2008. Mining millions of metaphors. Literary and Linguistic Computing , 23(3).
 Ekaterina Shutova. 2010. Automatic metaphor inter-pretation as a paraphrasing task. In Proceedings of Human Language Technologies: The 11th An-nual Conference of the North American Chapter of the Association for Computational Linguistics (HLT10) , pages 1029 X 1037. Los Angeles, CA, USA.
 Kristina Toutanova, Dan Klein, Christopher Man-ning, and Yoram Singer. 2003. Feature-rich part-of-speech tagging with a cyclic dependency net-work. In Proceedings of Human Language Tech-nologies: The Annual Conference of the North
American Chapter of the Association for Compu-tational Linguistics (HLT03) , pages 252 X 259. Ed-monton, AB, Canada.
 Kristina Toutanova and Christopher Manning. 2000.
Enriching the knowledge sources used in a maxi-mum entropy part-of-speech tagger. In Joint SIG-
DAT Conference on Empirical Methods in NLP and Very Large Corpora (EMNLP/VLC00) , pages 63 X 71. Hong Kong, China.
 Ben VandenBos. 2011. Pre-trained  X  X hat X  X  what she said X  bayes classifier. http://rubygems.org/ gems/twss .
