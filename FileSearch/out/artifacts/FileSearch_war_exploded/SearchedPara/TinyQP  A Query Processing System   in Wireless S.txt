 Wireless Sensor Networks (WSNs) have broad applications in the fields of disaster warning, environment monitoring, etc. WSNs can be viewed as a new type of distributed databases. Data management is one of the core technologies of WSNs. 
Nowadays there are some prototype systems. TinyDB [1] and Cougar [2] implement several basic query functions, such as aggregate (MAX, MIN, AVG, etc.), basic SQL-like query processing, etc. TinyCasper [3] monitors moving objects in WSNs while preserves their location privacy. KSpot [4] implements both snapshot and historical top-k queries in WSNs. These prototype systems implement several simple query functions or only support a separate complex query algorithm. We implements a Query Processing system (TinyQP) based on TinyOS [5] in WSNs. TinyQP simultaneously supports several complex query algorithms, supports network topology display and allows user to access the data of multiple WSNs through internet. 2.1 TinyQP Architecture Figure 1 depicts the system architecture of TinyQP. The TinyQP system includes three types of servers: Web server, application server and database server. 
The user sends query request to the Web server through the internet. The Web server forwards the request to the application server. The application server analyses the query request using the query parser. If the query request need to access the data of other sink, the application server send the query request to the application server of other sink. If the communicates with sink node through the serial port. The application server sends query command to the sink node. The sink node broadcasts the query command to all nodes in server, and then returns the required data to the Web server. The Web server returns the required data to the user through internet. 790 S. Mo et al.

TinyQP includes two subsystems: the Web subsystem and the query processing subsystem. Next we will describe these subsystems. 2.2 The Web Subsystem The Web subsystem provides a good user interface for user-customized queries and architecture, and the development language is JAVA. Figure 2 shows the module structure of the Web subsystem. The Web subsystem completes following functions: (1) Graphical user interface. User can complete the query requirement by browsing the web, clicking the mouse, selecting the drop-down list, etc. The Web subsystem automatically generates SQL-like statement and transmits it to WSNs. The query result will be returned from WSNs and be displayed to the user in the form of charts or graphics. Figure 3 depicts an example of TinyQP----Historical query. (2) Query optimizer. The query optimizer analyses the query request, produces the optimized query scheme and forms the query command. The query command includes Command Id, Command Type and Command Content. (3) Serial communication. The application server sends the query command to the sink node and receives data messages from si nk node using the serial communication. (4) Query result display. The query data will display using dynamic table. The network status, such as network topology, will be shown in a graphical way. 2.3 The Query Processing Subsystem The sink node accepts command message from the application server via serial communication port, parses command content and executes the corresponding command. Meanwhile, the sink node broa dcasts the command message to its neighbors. Neighbors broadcast the command message to their neighbors too, and so on, until all nodes in the network receive the command message. 
When ordinary node si receives a command message, si parses command content and performs the query operation based on the Command Type. Assuming the Command Type is Top-k query type, node si extracts the maximum (or minimum) k parent node of si , and so on, until reaches the sink node. When the sink node collects the required data, the sink node forwards the data to the application server. TinyQP system deployment environment are jdk1.7/ Tomcat 6.0. Database is MySQL Electronics. We demonstrate several complex query algorithms including real time demonstrate the network topology in a graphical way. Acknowledgements. This research was supported by the National Natural Science Foundation of China (61070056, 61033010), the Fundamental Research Funds for the Central Universities and the Research Funds of Renmin University of China (NO.13XNH210).

