 Radio Frequency Identification (RFID) technology represents a fundamental change in the information technology infrastructure. RFID has many applica-tions for both business and private individuals. Several of these applications will include items that change owners at least once in its lifetime. The swapping and resale of items is a practice that is likely to be popular in the future, and so any item that depends on RFID for function or convenience should be equipped to deal with change of ownership. Ownership transfer presents its own set of threats, and therefore demands the attention of security researchers.
Generally speaking, a secure ownership transfer protocol should follow the following assumptions: The old owner s hould not be able to access the tag after the ownership transfer has taken place; The new owner should be able to perform mutual authentication with the tag after the ownership transfer has taken place.
In this paper, we concentrate on desig ning a RFID ownership transfer proto-col with high efficiency and robust security and privacy properties. Our protocol consists of three sub-protocols: an authentication protocol, an ownership trans-fer protocol, and a secret update protocol. The rest of the paper is organized as follows. In Section 2, we introduce a brief overview of some ownership transfer protocols in RFID systems. Section 3 pr esents the security and threat model. Section 4 describes the proposed ownership transfer protocol. Sections 5 demon-strates security and privacy analys is. And finally, Section 6 concludes. One of the earliest protocols addressing ownership transfer with Trusted Third Party (TTP) was proposed by Saito et al.[1]. The goal of the protocol is to transfer ownership from one entity R 1 to another R 2 . The protocol steps are summarized in Fig. 1. An adversary can commit de-synchronization attacks by blocking the message from R 2 to the tag. TTP and R 2 have the new key, while the tag keep the previous one. This can be prevented by TTP and R 2 storing the previous key. Unfortunately, in this case, since R 2 knows s 1 , backward security is violated.

Kapoor and Piramuthu proposed a lightweight and secure ownership transfer protocol with TTP [2]which was shown in Fig. 2. In order to provide backward unlinkability, the new owner R 2 does not have access to the key of the previous R . In addition, R 2 does not update the shared key unless he receives an ac-knowledgment from T in order to solve de-synchronization issues. However, as the scheme relies on symmetric primitives, it suffers from linear time authenti-cation and is not suited for resource limited tags.
 Song put forward an ownership transfer protocol without TTP [3] in 2008. The protocol consists of two sub-protocols: an ownership transfer protocol P 1 , and a secret update protocol P 2 . P 1 transfers ownership from one owner R 1 to another R 2 and the second stage R 2 updates the secret. The protocol P 1 was shown in Fig. 3. The protocol suffers f rom linear complexity problems that tag authentication is linear in the number of tags. Another vulnerability is de-synchronization problems when an adversary blocks the last communication M 3 between R 2 and the tag.
 Elkhiyaoui et al. proposed an ownership transfer protocol without TTP [4](see Fig. 4) achieving constant time authentication and issuer verification. Elkhiyaoui X  X  protocol violates tag owner privacy that any legitimate owner which has been the owner of a specific tag is able to trace it by computing pairing of e ( v i ,g 2 ). 3.1 Privacy Issues RFID privacy is one of the areas which are most discussed in recent years. There are some common notions of privacy in RFID system: 1. Anonymity :anadversary A should not be able to disclose the identity of 2. Untraceability :anadversary A should not be able to trace or track the A great number of privacy-preserving RFID protocols have been proposed in the literature. Tag anonymity corresponds to anonymization protocol, one trivial ap-proach is proposed by Sarma named hash-lock[5], using meta-ID instead of real ID. Untraceability implies that the tag response d ifferently upon receiving the same request. The approach to reach untraceability is either based on the psedu-dorandom numbers or the random noise [6,7,8]. The Ohkubo-Suzuki-Kinoshita protocol (OSK) [9,10] made backward privacy possible, the scheme relies on the use of two one-way hash functions. Variants of the OSK scheme proposed in [11], making it resistant to replay attacks. An further improvement to the OSK [12] was proposed by Berbain using a pseudorandom number generator and a uni-versal family of hash functions, moreover, they provided a provable secure proof under standard model. Recently, Ma [13] gave a simpler one of [12] using tags only equipped with pseududorandom generator.

In addition to the common notions of privacy, there are two extra privacy issues dedicated for ownership transfer protocols listed as follows: 1. New owner privacy : Once ownership of a tag has been transferred to a new 2. Old owner privacy : When ownership of a tag has been transferred to a new 3.2 Attacks on Ownership Transfer Protocols An adversary A of the system is a malicious entity whose aim is to perform some attacks, either through the wirele ss communications between readers and tags (e.g., eavesdropping), or on the RFID devices themselves (e.g., corruption a device and getting all the information stored on it). We mainly consider the following attacks: 1. Replay attacks : Attackers intercept a valid response emitted by a tag and 2. Man-in-the-middle attacks : In this case, an attacker is able to insert or mod-3. Eavesdropping : Attackers listen passively to messages exchanged by legiti-4. Denial-of-service (DoS) : The attacker disturbs or impedes communications 5. De-synchronization : Attackers makes the owner and the tag no longer be Our protocol works under the following assumptions. A TTP maintains a secure database of information for all the readers and the tags that it owns, a reader have significantly greater processing ability than a tag. Each tag has a rewritable memory that may not be tamper-resistant, can generate pseudorandom numbers. We use Song X  X  protocol and Elkhiyaoui X  X  protocol as our main references, Song X  X  scheme suffers from linear complexity problems that tag authentication is linear in the number of tags, we address it by using Elgamal re-encryption mechanisms introduced by Elkhiyaoui. However, Elkhiyaoui X  X  protocol have the vulnerabilities that any legitimate owner which has been the owner of a specific tag is able to trace it. We solve this problem by updating the index I in ownership transfer process. In addition, we use only pseudorandom number generator at the tag side which is well suited for resource limited passive RFID tags. To sum up, we try to design a ownership transfer protocol satisfying the following properties: 1. Constant-time for tag ownership transfer. 2. Old owner privacy, new owner privacy. 3. Issuer verification. 4. Resist common RFID attacks such as rep lay attacks, de-synchronization etc. 4.1 Pseudorandom Number Generators A pseudorandom generator is a deterministic algorit hm that receives a short truly random seed and stretches it into a long string that is pseudorandom. Stated differently, a pseudorandom generator uses a small amount of true ran-domness in order to generate a large amount of pseudorandom.

Let g : { 0 , 1 }  X   X  X  0 , 1 } 2  X  and g =( g 1 ,g 2 ). g 1 and g 2 respectively map the input of g to the first n output bits of g and the last n output bits of g .Wetake g as the pseudorandom generator in the tag. 4.2 Protocol Description We introduce a novel RFID ownership tr ansfer protocol with high efficiency and robust security and privacy properties. Our protocol consists of three sub-protocols: an authentication protocol, an ownership transfer protocol, and a secret update protocol. Before introducing the authentication process and own-ership transfer process, we first do some initiation works including setup and tag Initialization.
 subgroups of prime order q , g 1 and g 2 are random generators of G 1 and G 2 respectively, and e : G 1  X  G 2  X  G T is a bilinear pairing. I chooses x  X  Z  X  q and computes g x 2 . I  X  X  secret key is sk = x and his public key is g x 2 . The system supplies each owner with his secret key sk =  X  i and his public key pk = g  X  i 1 . Tag Initialization: Atag T is initialized by the issuer I . I picks a random number t  X  F q . Using a cryptographic hash function H : F q  X  G 1 , I computes h = H ( t ), then computes u 0 =1and v 0 = h x ,andstores I 0 e =( u 0 ,v 0 )intothe tag, I also choose a random s  X  R { 0 , 1 }  X  as the initialized state for pseudoran-dom number generator in the tag. Before accepting the tag, the reader checks actually issued by I .
 Authentication Protocol: Our authentication protocol is based on Ma X  X  pro-posal [13] using only pseudorandom number generator as its cryptographic prim-itive, we extend the protocol from one way tag authentication protocol to mutual authentication protocol. According to the proof of Ma, the authentication proto-col satisfies backward security. We also use idea of re-encryption in Elkhiyaoui X  X  protocol. The whole process is summarized in Fig. 5.
 1. The reader R initiates the protocol by sending a random number to the tag. 2. Upon receiving a challenge N R from R ,thetag T derives two values, a new 3. On receipt of the messages, R first decrypts I e using his secret key as 4. When T receives I e  X  s and M 2 , T first verifies whether M 2 = g 1 ( s  X  N R ), Ownership Transfer Protocol: In this protocol, the new owner of a tag first requests the TTP for ownership of the tag. If the request is valid, the TTP then transfers all the information related to the tag to the new owner via a secure channel. The ownership transfer protocol is based on our authentication proto-col, since the authentication protocol satisfies backward privacy, the ownership transfer protocol follows old owner privacy innately. However, we have to up-date the tag state to protect new owner privacy. In addition, the index I must be changed in order to achieve untraceability. The protocol steps are summarized in Fig. 6 and described as follows: 1. At first, the old owner R 1 sends ID R 1 to the new owner R 2 through a secure 2. The new owner R 2 initiates the protocol by sending a random number N R 3. Upon receiving a challenge N R from R 2 ,thetag T derives two values, a new 4. R 2 then forwards I e , M 1 = g 1 ( k  X  N R ), N R , ID R 1 and ID R 2 to TTP .In 5. On receipt of the messages, TTP first decrypts I e using R 1  X  X  secret key as 6. R 2 stores info ( ID ) ,s,I ,h and forwards I e  X  s and M 2 to T . 7. When T receives I e  X  s and M 2 , T first verifies whether M 2 = g 1 ( s  X  N R ), Secret Update Protocol: The main purpose of secret update protocol is to establish new secrets to protect the new owner X  X  privacy. More specifically, we need to update the state s of the tag, our protocol is also based on authentication protocol, the whole process is summarized in Fig. 7 and described as follows: 1. The reader R initiates the protocol by sending N R and M 1 = g 1 ( g 2 ( s )  X  N R ) 2. Upon receiving a challenge N R and M 1 from R ,thetag T computes k = g 2 ( s ) 3. When R receives I e  X  k and M 2 , R first get I e by computing I e  X  k  X  g 2 ( s ), 5.1 Security Issues In this section, we mainly discuss some attacks that are commonly used by ad-versaries against RFID systems and present how our authentication protocol to resist these attacks, including Replay (RA) attacks, man-in-the-middle (MITM) attacks, backward traceability (BT) attacks, Denial of Service (DoS) attacks. In addition, we also do the analysis on how to protect new owner privacy and old owner privacy in our ownership transfer protocol. The security analysis of secret update protocol is just as authentication protocol, so we do not analyze it here due to repetitiveness.
 Replay Attack. All communicating messages between the reader and the tag always contain a dynamically generated fresh random number. Adversaries are unable to pass the authentication scheme simply by replaying messages. Man-in-the-Middle Attack(MITM). Since adversaries are unable to launch replay attacks and they do not have the tag state s , so they cannot pass our authentication scheme by masquerading as a reader or tag in an MITM attack. Backward Traceability. Backward security refers to the scenario that even if the secret of T is compromised, the adversary cannot trace past transactions. In our protocol, backward security is guaranteed because the state s of T is updated each time using PRNG, according to the conclusion of Berbain et al. [14], the previous states of T are not computable.
 DoS/Synchronization Problem. We address the DoS problem in the follow-ing way: Suppose that an adversary prevents message M 1 from reaching R .Then T will update its state s , R will not. However, R knows the previous value of s ,andcanuse g j 1 ( s ) to recover synchronization with T , j is limited to chains of length  X  . Our protocol is more effective than song X  X  proposal, because we use index I for locating the tuple in stead of searching it in the whole database. Note that the secret update protocol is also vulnerable to de-synchronization attacks if the adversary prevent M 2 from reaching R . However, R can compute g ( s  X  N R ) itself to recover synchronization with T .
 Old Owner Privacy. Old owner privacy implies that the new owner should not be able to trace past interactions between the tag and its previous owners. That property is guaranteed by backward traceability of the authentication protocol that the state s of T is updated in each session, and the previous states of T are not computable..
 New Owner Privacy. New owner privacy implies that the old owner can-not trace the tag. We use Elgamal re-encryption mechanisms introduced by Elkhiyaoui to encrypt the tag index I in each session, However, in Elkhiyaoui X  X  scheme, I keeps unchanged which can be used for adversary to trace the tag. Therefore, in our proposal, the TTP changed I when ownership transfer hap-pens. In addition, we use secret update protocol to change the state of the tag into a new one, which cannot be inferred by the old owner if he does not obtain the values of N R queried by the new owner. Under such assumption, the privacy of new owner is protected.

We compare our proposed scheme with other ownership transfer schemes in terms of the aspects as mentioned above, which is shown in Table 1.
 5.2 Performance In this section, we analyze our protocol in computation costs and proves our scheme is viable for lightweight passive RFID tags. We will mainly focus on the performance characteristics of ownership transfer protocol. T E denotes the time for one encryption or decryption; T RNG is the time to generate a random num-ber; T H is the time for one hash function; T PO stands for the time of pairing operation; and T exp denotes the time of exponentiation operation. Table 2 com-pares the performance characteristics of our ownership transfer protocol with the other proposed schemes.

To notice that, we do not consider database searching process in the Table 2. Actually, Osaka X  X  protocol, Fouladgar X  X  protocol and Song X  X  protocol do not support index, so the computation costs are much more than what we have listed in table 2. Although Kulseng X  X  protocol supports index, the index may cause de-synchronization problem (index updates asynchronously between the reader and the tag), the reader still has to search the whole database when it happens. We adopt Elkhiyaoui X  X  scheme to use re-encryption primitive to encrypt the same index in each session. It eliminates de-synchronization problem, meanwhile, increases the computation loads on the reader. Saito X  X  protocol and Kapoor X  X  protocol use symmetric encryption/decryption method at the tag side which is not suitable for resource limited RFID tags. In this paper, we presented a novel RFI D ownership transfer protocol to ad-dress security and privacy issues rela ted to RFID ownership transfer in sup-ply chains. Our proposal provides following advantages: First, we use Elgamal re-encryption mechanisms to solve linear complexity problem that authentica-tion takes a linear time in the number of tags. Second, at the tag side, we use only pseudorandom number generator as its cryptographic element which is well suited for lightweight passive RFID tags. Third, we protect old owner privacy by adopting backward security authentication protocol and preserve new owner privacy by using secret update protocol. Our analysis show that our proposed protocol provides stronger security robustness and higher performance efficiency in comparison with existing solutions.
 Acknowledgments. This work is partially supported by the HGJ National Significant Science and Technology Projects under Grant No. 2012ZX01039-004-009, Key Lab of Information Network Security, Ministry of Public Security un-der Grant No.C11606, the National Natural Science Foundation of China under Grant No. 61170263.

