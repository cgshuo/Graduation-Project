 In recent years, a number of machine learning approaches to literature-based gene function annotation have been pro-posed. However, due to issues such as lack of labeled data, class imbalance and computational cost, they have usually been unable to surpass simpler approaches based on string-matching. In this paper, we propose a principled machine learning approach based on kernel classifiers. We show that kernels can address the task X  X  inherent data scarcity by em-bedding additional knowledge and we propose a simple yet effective solution to deal with class imbalance. From exper-iments on the TREC Genomics Track data, our approach achieves better F 1 -score than two state-of-the-art approaches based on string-matching and cross-species information. H.4 [ Information Systems Applications ]: Miscellaneous; I.2.7 [ Artificial Intelligence ]: Natural Language Process-ing X  Text analysis Algorithm, Experimentation Text Classification, Kernel Methods
Since the completion of the Human Genome Project, a large number of studies have been conducted to identify the role of individual genes. However, the active research in the domain has been producing numerous publications. As a result, it is extremely labor-intensive for biomedical re-searchers alone to collect the information relevant to their need, since obtaining such information requires intensive reading. To remedy this problem, a number of organizations have been working on annotating each gene of model organ-isms with a controlled vocabulary organized as a Directed Acyclic Graph, called Gene Ontology (GO) terms, based on the contents of the published scientific articles. However, the annotation requires trained human experts with exten-sive domain knowledge. With limited human resources and the ever-growing literature, it was reported that it would never be completed at the current rate of production. To alleviate the burden, TREC 2004 Genomics Track and BioCreative targeted automatic GO domain/term annota-tion. Overall, participants from the Genomics Track re-ported the effectiveness of supervised classification techniques while participants from BioCreative mainly adopted string-matching techniques. These different strategies can be at-tributed to the fact that Genomics Track only considered the three top-level GO terms (called GO domains) while BioCreative targeted all GO terms, which can amount to up to 30,000.

In this paper, we propose a a principled machine learning approach based on kernel classifiers. Kernel are computa-tionally efficient and allow us to address the data scarcity issue by embedding additional knowledge. Moreover, exist-ing methods for automatic GO annotation usually neglect the so-called class imbalance problem. We propose a simple but effective method to deal with the problem. From exper-iments on the Genomics Track data, our approach outper-forms two existing state-of-the-art methods based on string-matching and cross-species information.
The goal of this research is to design a system that can leverage annotated articles from the scientific literature in order to learn how to automatically map the function of genes mentioned in new articles to appropriate GO terms. More precisely, for a new non-annotated article, we would like to be able to answer the question: does the article con-tain supporting evidence that gene X has GO term Y? Our system is divided into a learning phase and a prediction phase, as depicted in Figure 1. In the information extraction step, articles are represented by concatenating three kinds of textual evidence: article title, abstract and relevant text fragments extracted by gene mention matching. In the learn-ing step, since GO annotation is a multi-label task (i.e., one article can be associated with zero, one or more GO terms), we use a one-vs-all scheme, which consists in learning one binary classifier per GO term. In the post-processing step, we remove illogical GO term predictions based on the DAG structure.
To deal with class imbalance (the number of annotated articles varies quite a lot from a GO term to another), we Figure 1: System overview: the learning (left) and prediction (right) phases. employ a simple technique inspired by Osuna et al. [2] which consists in applying a stronger weight to positive examples than to negative examples. When learning the classifier for the c th GO term, we set the soft-margin SVM parameter C to  X  ( n  X  c /n c ) when an article is associated with this GO term and to  X  otherwise. Here, we defined n  X  c as the number of articles which are not labeled with the c th GO term and n the number of articles which are.  X  is optimized by stratified cross-validation. Since n  X  c &gt; n c , this consists in assigning a stronger weight to positive examples than to negative ex-amples. This simple heuristic produced better results than other techniques such as negative example downsampling.
In this research, vectors (bag of words) are very sparse and contain on average less than 300 unique words. We can therefore reasonably expect potentially discriminative words to be either absent or underrepresented in the vectors. For this reason, we propose to use the probabilistic Latent Se-mantic Analysis (pLSA) kernels [1]. Since they are esti-mated from all the articles, we can expect the latent topics used in these kernels to smooth the probability of words based on their semantic context. This is especially useful for GO terms which are annotated with only few articles. For evaluation, we used the test dataset provided for the TREC 2004 Genomics Track and supplemented it by GO term information. The resulting dataset consists of 863 test instances. Each instance is a pair, represented by a PubMed ID and a gene mentioned in the article. For training data, we used the Genomics Track training dataset (1418 instances with full text available) supplemented with GO terms in the same way and MGD database (6750 instances with abstract only). These datasets are dealing with mouse genes only. We performed the usual document preprocessing: stop-word, punctuation and long-word ( &gt; 50 characters) removal, stem-ming and lowercase conversion. As an evaluation metric, we used the F 1 score for direct comparison with the previous work.

We used SVM as our classifier and compared three differ-the results is reported in Table 1. K plsa (+U) corresponds to the results obtained when an additional 10,000 unlabeled abstracts from the MGD database were used to learn the pLSA model (semi-supervised learning). K plsa (+U + T) corresponds to the results obtained when the test set was also used to learn the pLSA model, thereby tailoring the classifiers to the task of interest (transductive learning).
For direct comparison, Table 1 provides the results of the methods of Stoica and Hearst [4] (re-implementation by the authors) and Seki et al. [3] (results taken from their paper). Our method achieves the highest precision and F 1 score. On the other hand, Stoica and Hearst accomplish the highest recall. This is because they perform string matching using the entirety of the GO term descriptors but eliminate in-consistent candidates using cross-species constraints. K plsa (+U + T +O) are our results when cross-species constraints were also used in post-processing. Based on the t-test, the difference between our best method and the method of Sto-ica and Hearst was found statistically significant at the 0.05 significance level ( p = 0 . 03).
This study proposed an approach to GO term annotation based on kernel classifiers. From the experiments on the Ge-nomics Track data, we observed that 1) our system exhibits high precision and performs better in terms of F 1 -score than two state-of-the-art methods based on string-matching and cross-species information 2) latent topics can be advanta-geously embedded into kernels and are a promising way to address the inherent data scarcity in GO term annotation 3) per-class regularization is a simple yet effective way to deal with the class imbalance problem. [1] T. Hofmann. Learning the similarity of documents: An [2] E. E. Osuna, R. Freund, and F. Girosi. Support vector [3] K. Seki, Y. Kino, and K. Uehara. Gene functional [4] E. Stoica and M. Hearst. Predicting gene functions
