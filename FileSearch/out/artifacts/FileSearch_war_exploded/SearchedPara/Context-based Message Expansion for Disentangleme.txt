 Conversational media such as the text messages found in Internet Relay Chat presents both new op-portunities and new challenges. Among the chal-lenges are that individual messages are often quite short, for the reason that conversational participants are able to assemble the required context over the course of a conversation. A natural consequence of this is that many tasks that we would like to perform on conversational media (e.g., search, summariza-tion, or automated response) would benefit from re-assembly of individual messages into complete con-versations. This task has been studied extensively in the context of email (where it is often referred to as  X  X hreading X ) (Yeh et al., 2006). The extensive meta-data associated with email and the relatively rich content of some email messages makes email some-what of a special case in the broad set of conversa-tion recovery tasks, however. At the opposite ex-treme, conversation  X  X hreading X  in multi-party spo-ken interactions (e.g., meetings) would be a com-pelling application, but the word error rate of current automated transcription techniques somewhat limits access to the lexical evidence that we know is use-ful for this task. The recent interest in identifying individual conversations from online-discussions, a task that some refer to as  X  X isentanglement, X  there-fore seems to be something of a middle ground in the research space: computationally tractable, repre-sentative to some degree of a broader class of prob-lems, and directly useful as a pre-processing step for a range of important applications.

One way to think of this task is as a clustering problem X  X e seek to partition the messages into a set of disjoint clusters, where each cluster represents a conversation among a set of participants on a topic. This formulation raises the natural question of how we should design a similarity measure. Since the messages are often too short to be meaningful by themselves, techniques based solely on lexical over-lap (e.g., inner products of term vectors weighted by some function of term frequency, document fre-quency and message length) are unlikely to be suc-cessful. For instance, consider the multi-party ex-change in Figure 1, in which a single message may not convey much about the topic without consider-ing what has been said before, and who said it.
Fortunately for us, additional sources of evidence are available. As we describe below, messages are strongly correlated both temporally (i.e., across time) and socially (i.e,, across participants). For example, in our running example in Figure 1, Ri-cardo X  X  message (19045 Ricardo)  X  X o it can read from a different input stream X  elaborates on his previous message (19034 Ricardo) to Josephina. Messages that are close in time and from the same speaker can share related meanings. Simi-larly, we see that Ricardo X  X  messages to Josephina (19034 Ricardo and 19045 Ricardo) are responses to earlier comments made by Josephina (18980 Josephina), and that fact is signaled by Ricardo in-voking Josephena X  X  name. This is an example of social correlation: lexicalized references to identity can also provide useful evidence. If we take so-cial and temporal context into account, we should be able to do better at recognizing conversations than we could using lexical overlap alone.

In recent years, several approaches have been de-veloped for detecting conversational threads in dy-namic text streams (Elsner et al., 2008; Shen et al., 2006; Wang et al., 2008). Although they use both lexical and non-lexical information (e.g., time, name mentions in message) for this task, they have ignored the temporal and social contexts a message appears in, which provide valuable cues for inter-preting the message. Correlation clustering used in a two-step approach (Elsner et al., 2008) exploits message contexts to some degree, but its perfor-mance is largely limited by the classifier used in the first-step which computes message similarity with-out considering the temporal and social contexts of each message.

Our approach exploits contextual properties (both explicit and hidden) to probabilistically expand each message to provide a more accurate message rep-resentation. The new representation leads to a much improved performance for conversation disentangle-ment. We note that this is a general approach and can be applied to the representation of non-chat data that exhibits temporal and social correlations as well. The results that we obtain with this technique are close to the limit of what we can measure using present test collections and evaluation measures. To the best of our knowledge, our work is the first to apply document expansion to the conversation dis-entanglement problem. Previous work in conversation disentanglement (i.e. thread detection) has shown the conven-tional lexical-based clustering is not suitable for text streams because messages are often too short and incomplete. They focus on using discourse/chat-specific features to bias the lexical-based message similarity (Elsner et al., 2008; Shen et al., 2006; Wang et al., 2008). These features provide the means to link messages that may not have sufficient lexical overlap but are nevertheless likely to be top-ically related. However, our work is different from them in several aspects: (1) They treat individual messages as the basic ele-ments for clustering, and ignore the social and tem-poral contexts of the messages. In our work, each message is probabilistically expanded using reliable information from its contexts and the expanded mes-sages are the basic elements for clustering. (2) Messages have different amount of explicit infor-mation. For example, messages that initiate conver-sations may have more name mentions than subse-quent messages (i.e. for establishing conversations). Previous work only uses what are explicitly present in each message, and clusters may be erroneously assigned for messages that lack enough explicit in-formation. Our work exploits both explicit and im-plicit context for each message due to how we define contexts (Section 3.2.1). (3) Most work imposes a fixed window size for clus-tering and it may break up long conversations or may not be fine-grained enough for short conversations. Given each message, we use an exponential decay model to naturally encode time effect and assign dif-ferential weights to messages in its contexts.
Another thread of related work is document ex-pansion. It was previously studied in (Singhal et al., 1999) in the context of the speech retrieval, helping to overcome limitations in the transcription accuracy by selecting additional terms from lexically simi-lar (text) documents. Document expansion has also been applied to cross-language retrieval in (Levow et al., 2005), in that case to overcome limitations in translation resources. The technique has recently been re-visited (Tao et al., 2006; Kurland et al., 2004; Liu et al., 2004) in the language modeling framework, where lexically related documents are used to enlarge the sample space for a document to improve the accuracy of the estimated document language model. However, these lexical-based ap-proaches are less well suited to conversational in-teraction, because conversational messages are often short, they therefore may not overlap sufficiently in words with other messages to provide a useful basis for expansion. Our technique can be viewed as an extension of these previous methods to text streams.
Our work is also related to text segmentation (Ji et al., 2003) and meeting segmentation (Malioutov et al., 2006; Malioutov et al., 2007; Galley et al., 2003; Eisenstein et al., 2008). Text segmentation identifies boundaries of topic changes in long text documents, but we form threads of messages from streams consisting of short messages. Meeting con-versations are not as highly interleaving as chat con-versations, where participants can create a new con-versation at any time. This section describes our technique for clustering messages into threads based on the lexical similar-ity of documents that have been expanded based on social and temporal evidence. 3.1 Context-Free Message Model To represent the semantic information of messages and threads (clusters of messages), most of the prior approaches build a document representation on each message alone (using word features and time-stamp and/or discourse features found in the message). We call such a model a context-free message model. Most commonly, a message is represented as a vec-tor (Salton, 1989). Each dimension corresponds to a separate term. If a term occurs in the message, its value in the vector is non-zero. Several dif-ferent ways of computing these values, known as term weights, have been developed. One of the best known schemes is tf-idf weighting.

However, in conversational text, a context-free model cannot fully capture the semantics of mes-sages. The meaning of a message is highly depen-dent on other messages in its context. For example, in our running example in Figure 1, to fully interpret the message 19045 Ricardo, we need to first read his previous message (19034 Ricardo) to Josephina. Further, messages on the same topic may have lit-tle or no overlap in words (Figure 1), and the mes-sages between participants are highly interactive and are often too short and incomplete to fully capture a topic on their own. 3.2 Context-Sensitive Message Model Our main idea is to exploit the temporal and so-cial aspects of the conversations to build a context-sensitive document model for each message. We do this by first identifying the temporal and social contexts for each message, then probabilistically ex-panding the content of each message with selected messages in each context. As we have seen, a mes-sage X  X  contexts provide valuable cues for interpret-ing the message. Finally, we cluster the messages into distinct conversations based on their new repre-sentation models.

We present the formal definitions of each context and discuss how to model them in Section 3.2.1. In Section 3.2.2, we show how to efficiently identify the related messages in each context, and how to use them to expand our representation of the message. 3.2.1 Social and Temporal Contexts Social contexts : we define two kinds of social con-texts: author context and conversational context. We explain them in detail below.

Author context : the author context of a message m , denoted by C written by m  X  X  author a Further, because of the nature of human conversa-tions, we would be less surprised to find messages from the same person belonging to the same conver-sation if they are close in time rather than far apart. probability that a pair of messages written by the same person belong to the same conversation as a function of the time difference between them. Not surprisingly, messages in m  X  X  author context have probabilities which are influenced by their temporal proximity to m .

We use a normal distribution (Figure 2(i)) to en-code the notion of author context. Given two mes-sages m with time-stamp t bility that m time difference d = t
The exponential decay helps to limit the influence from temporally remote messages. For message m this distribution models the uncertainty that mes-sages in its author context (i.e. other messages m from the same author) belong to the same conver-sation by assigning assigning a high value to m t  X  t i is small. The mean  X  a is chosen to be zero so that the curve is centered at each message. The vari-ance can be readily estimated from training data.
Conversational context : the second kind of so-cial context is the conversational context, which is constructed from name mentions. As pointed out by previous linguistic studies of discourse, especially analysis of multi-party conversation (ONeill et al., 2003), one key difference between multi-party con-versation and typical two-party conversation is the frequency with which participants mention each oth-ers X  names. Name mentioning is hypothesized as a strategy for participants to compensate for the lack of cues normally present in face-to-face dialogue (ONeill et al., 2003; Elsner et al., 2008). Although infrequent, name mentions (such as Azzie X  X  com-ments to Ricardo in Figure 1) provide a means for linking two speakers and their messages.
 The conversational context of m , C fined to be the set of all messages written by peo-ple whose names are mentioned in any of a sages (where a a written by author a . The conversational context of m is: where mention ( a tions a in any of a is similarly defined.
 Discussion: From the definition, m m tions the author of m vice versa. For instance, the conversational con-text for Ricardo X  X  message (19034 Ricardo) in Fig-ure 1 includes the messages from Josephina (18980 Josephina) due to the mentioning of Josephina in his message. However, it may well be the case that m cardo X  X  message to Azzie (18939 Ricardo). In this case, if Ricardo is being mentioned by another au-thor (here Azzie asks Ricardo a question by start-ing with his name in 18939 Azzie), message (18939 Ricardo) X  X  conversational context will contain all of Azzie X  X  messages (18911 and 18970 Azzie) accord-ing to the above definition. This intuitively captures the implicit question-answer patterns in conversa-tional speech: Ricardo X  X  subsequent answer is a re-sponse to Azzie X  X  comments, hence they are in each other X  X  conversational context.

Our definition also accounts for another source of implicit context. In interactive conversations name mention is a tool for getting people X  X  attention and starting a conversation. Once a participant a lishes a conversation with a tion a may stop mentioning a sages ( m message to Josephina in Figure 1. Our definition accounts for the conversation continuity between a and a sational context of subsequent messages m (note m message 19045 Ricardo continues the conversation with Josephina from 19034 Ricardo, message 19045 Ricardo thus has Josephina X  X  messages as part of its conversational context.

In general, a person can participate in multiple conversations over time, but as time goes on the topic of interest may shift and the person may start talking to other people. So the messages in the con-versational context of m with other people should be assigned a lower con-fidence value for m Ricardo may still be active, but it is unlikely he still chats with Josephina on the same topic, so the ear-lier messages by Josephina should receive a small confidence value in the conversational context of Ri-cardo X  X  later messages. We illustrate this idea in Fig-ure 2(ii). It shows the probability that message m where m as m is encoded with a normal probability distribution, N (  X  from training data. Let d = t they are topically related given m Temporal context : temporal context for message m , C where M denotes the entire set of messages. The intuition is that nearby messages to m can provide further evidence to the semantics of m . This is illus-trated in Figure 2(iii). From the viewpoint of doc-ument smoothing, this can also be regarded as us-ing temporally nearby messages to smooth the rep-resentation of m . So given m temporal context by fitting a normal probability dis-tribution N (  X  d = t lated to m 3.2.2 Constructing Expanded Messages
We have shown how to use the social and tem-poral aspects of conversational text to identify and model the contexts of each message, and how to assign confidence values to messages in its con-texts. We now show how to use a message X  X  con-texts and their associated messages to probabilisti-cally expand the given message. We hypothesize that the expanded message provides a more accurate message representation and that this improved repre-sentation can lead to improved accuracy for conver-sation disentanglement. We will test this hypothesis in the experiment section.

Each message m is represented as a vector of es-timated term counts. We expand m using the nor-malized messages in its contexts. For the expanded message m 0 of m we estimate the term counts as a linear mixture of term counts from each message in each context: c ( w, m 0 ) =  X c ( w, m ) + (1  X   X  ) {
These parameter values are tuned on training data:  X  controls how much relative weight we give to lex-ical content of m (0.45 in our experiments), and  X  to the conversational, author and temporal contexts (0.6, 0.3, and 0.1 in our experiments, respectively). A context with large variance in its normal density graph should receive a small  X  value. This is be-cause a large variance in context k implies more un-certainty on a message m m while m j is in the context k of m . In Figure 2, the conversational context (Figure 2(ii)) has the min-imum variance among all contexts, hence, it is more accurate for linking messages related in topic and it is assigned a higher  X  value (0.6), while the tempo-ral context has the lowest  X  value (0.1). Finally, for a message m how strongly we believe m m
Because of the exponential decays of the normal densities that model contexts k , messages in a con-text will contribute differentially to m distant messages will have a very low density. 3.3 Single-Pass Clustering The expanded messages are the basic elements for clustering. The cosine is used to measure similarity:
Single-pass clustering is then performed: treat the first message as a single-message cluster T ; for each remaining message m compute  X  T : For the thread T that maximizes sim ( m, T ) , if sim ( m, T ) &gt; t sim , where t sim is a threshold (0.7 in Number of Conversations 50.00 81.33 128.00 Avg. Conv. Length 6.20 10.60 16.00 Avg. Conv. Density 2.53 2.75 2.92 our experiments) empirically estimated from train-ing data, add m to T ; else, start a new cluster con-taining only m . The time complexity of this algo-rithm is O ( n 2 ) , which is tractable for problems of moderate size. The collection used in the experiments consists of real text streams produced in Internet Relay Chat, created by (Elsner et al., 2008) and annotated inde-pendently by six annotators. As an upper (human) baseline for each of the three measures reported be-low, we report the average agreement between all pairs of annotators (i.e., treating one annotator as truth and another as a  X  X ystem X ). For our experi-ment results, we report the average across all anno-tators of the agreement between our system and each annotator.

The test collection also contains both a develop-ment set and an evaluation set. We used the devel-opment set to approximate the normal densities used in our context models and the evaluation set to ob-tain the results reported below. Some statistics for the 800 annotated messages in the chat transcript of the evaluation collection are shown in Table 1. As that table shows, the average number of active con-versation at a given time is 2 . 75 , which makes thread detection a non-trivial task. 4.1 Evaluation Measures We conduct comparisons using three commonly used evaluation measures for the thread detection task. As a measure of the systems ability to group related messages we report the F -measure (Shen et al., 2006): where i is a ground-truth conversation with length n , and n is the length of entire transcript. F ( i, j ) is the harmonic mean of recall (fraction of the mes-sages in the i also present in j ) and precision (frac-tion of messages in j also present in i ), and F is a weighted sum over all ground-truth conversations (i.e., F is microaveraged).

Two other evaluation measures are  X  X ne-to-one accuracy X  and  X  X ocal agreement X  (Elsner et al., 2008).  X  X ne-to-one accuracy X  measures how well we extract whole conversations intact (e.g., as might be required for summarization). It is computed by finding the max-weight bipartite matching between the set of detected threads and the set of real threads, where weight is defined in terms of percentage over-laps for each ground truth and detected thread pair.
Some applications (e.g., real-time monitoring) may not require that we look at entire conversations ar once; in this case a  X  local agreement  X  measure might make more sense.  X  loc human annotations as the average (over all possible sets of three consecutive messages) of whether those 3 consecutive messages are assigned consistently by the ground truth and the system. For example, if both the ground truth and the system cluster the first and third messages together and place the second message in a different cluster, then agreement would be recorded. 4.2 Methods Used in Comparison We compare with the following methods: Elsner et al. 2008 (best previously known tech-nique): Message similarity is computed with lexical and discourse features, but without document expansion.
 Blocks of k : Every consecutive group of k messages is a conversation.
 Pause of k : Every pause of k seconds or more separate two conversations.
 Speaker : Each speaker X  X  messages are treated as a single conversation.
 All different : Each utterance is a separate thread. All same : The entire transcript is one conversation. 4.3 Results Figure 3 compares the effectiveness of different schemes in terms of the F measure. We show results from the best baseline, Elsner and our technique (which we call the Context model). The average F between human annotators is shown with the dotted line at 0.55; we would expect this to be an upper bound for any model. Our method substantially out-performs the other methods, with a 24% improve-ment over Elsner and 48% improvement over the best baseline (speaker). Viewed another way, our system achieves 98% of human performance, while Elsner and the best baseline achieve 79% and 66% of that bound, respectively. From this, we can conclude that our Context model is quite effective at cluster-ing messages from same conversation together.
To illustrate the impact of conversation length, we binned the lengths of ground-truth conversations from a single assessor into bins of size 5 (i.e., 3 X 7 messages, 8 X 12 messages, . . . ; there were no ground truth bins of size 1 or 2). Figure 4 plots the approx-imated microaveraged F at the center value of each bin (i.e., the F for each ground truth cluster, scaled by the number of messages in the cluster). These fine-grained values provide insight into the contri-bution of conversations of different sizes to the over-all microaveraged F . The Context model performs well for every conversation length, but particularly so for conversations containing 35 or more messages as shown by the widened gap in that region. Long conversations usually have richer social and tempo-ral contexts for each message. The context model can benefit more from drawing evidences from these sources and using them to expand the message, thus makes it possible to group messages of the same conversation together. The other two methods that ignore contextual properties do not do well in com-parison.

To measure how well we extract whole conversa-tions intact, Figure 5 shows the results in terms of the one-to-one measure, where each real conversa-tion is matched up with a distinct detected conversa-tion thread. It is computed by max-weight bipartite matching such that the total message overlap is max-imized between the sets of detected threads and real threads. The average by this measure between hu-man annotators is 0 . 53 . In this case, the proposed context model achieves an 14% increase over El-sner and 32% increase over the best baseline, and it is within 88% of human performance. This fairly clearly indicates that our Context model can disen-tangle interleaved conversations relatively well.
Finally, Figure 6 presents the results for  X  X ocal-3 X  to evaluate the system X  X  ability to do local annota-tions. The difference between the best baseline and maximum upper bound is small, implying limited room for potential improvement by any non-baseline techniques. Our result again compares favorably with the previously reported result and the best base-line, although with a smaller margin of 20% over the best baseline and 3% over Elsner as a result of the relatively high baseline for this measure. We have presented an approach that exploits contex-tual properties to probabilistically expand each mes-sage to provide a more accurate message represen-tation for dynamic conversations. It is a general ap-proach and can be applied to the representation of non-chat data that exhibits temporal and social cor-relations as well. For conversation disentanglement, it outperforms the best previously known technique. Our work raises three important questions: (1) to what extent is the single test collection that we have used representative of the broad range of  X  X ext chat X  applications?, (2) to what extent do the measures we have reported correlate to effective performance of downstream tasks such as summarization or auto-mated response?, and (3) can we re-conceptualize the formalized problem in a way that would result in greater inter-annotator agreement, and hence pro-vide scope for further refinements in our technique. These problems will be the focus of our future work.
