 With the rapid growth of the World Wide Web (WWW), images have been playing more and more important role in representing web pages. For information retrieval such as image description mining and image clustering. As shown in Figure1, many images and textual information are organized into regular structures, e.g. product list, sports, entertainment news, etc, which are called data records in [11, 18]. Describing and clustering these images can provide many value-added services (e.g. comparative shopping, convenient browsing). Traditional information retrieval technologies can pixels, color and brightness etc., are far from semantic meaning. Fortunately, images in web pages are usually associated with the context information. Mining and re-organizing images X  context information has been popular approach to convert images into some forms of semantic representation in recent years. 
Several approaches [1, 2] have been reported for image retrieval and clustering. In tra-tween two images is measured using color, brightness and texture etc. Other approaches context as the image representation. We call this method  X  X lat representation X . However, the context may include the noise information. As shown in Figure 1, the phrase  X  X roduct , , Number X  surrounding all images is useless to distinguish the different images. We notice tion, like  X  X Mac G5 Desktop X  and  X  X Book G4 Notebook X , further distinguish image1 from image2. If we extract such terms to describe the image, we can build a  X  X ierarchical representation X  and improve hierarchical images clustering. 
We call the terms which have high contributions to the description of image salient phrases . Using salient phrases, we propose  X  Hierarchical Representation (HR) Tree  X  to describe images in web pages (See Fig.2). Our basic idea is that the sub-phrases of one concept would distinguish the image with others who share the same ancestor concepts. Based on HR-Trees, hierarchical image clustering algorithm is proposed. around more concrete, more distinguishabl e concepts than their parent collection does. Meanwhile, phrases in HR-Tree are established by following the same strategy. Hierarchical representation is more suitable for user to browse. Besides, each sub-cluster is labeled with some readable phrases, which enable users to identify the group more natural and friendly. 
In this paper, we focus on images on data records. We evaluate the salience of each image describing and clustering. Good performance is achieved due to the stronger ability of HR-Tree to represent images. 
The major contributions of our paper are: 1) algorithm to mine text associated with image in web pages; 2) effective methods to extract salient phrases for the images in data records; 3) improved hierarchical representation model using HR-Tree and 4) Hierarchical Clustering algo rithm based on HR-Tree. The rest of the paper is organized as follows. Some related works are introduced in Section 3. Hierarchical Representation and corresponding algorithms are given in Section 4. In Section 5, HR-Trees are applied in clustering images. Section 6 presents the experimental results. Finally, we conclude the paper and discuss the future work. The related work covers these topics: image retrieval and clustering; data record min-ing; key word extraction; web document clustering. 
Several image retrieval system and methods have been proposed. Traditionally, image search [1] and clustering [3] used im age content to analyze its semantics. Some systems [4, 5] based on CBIR were designed and implemented. There exists the prob-visual features [2]. Some commercial image search engines like Image Google [10] and AltaVista [9] use the text extracted from HTML page to describe the image. Such flat representation does not emphasize important phrases and does not reveal the structural relationship between concepts, which is exploited by our approach to im-prove image clustering. 
Data records are important resource in web and many works have discussed the problem of mining data records from web pages. Some approaches [12, 13] proposed wrapper induction approach, which extracts rules learned from manually labeled pages and data records. Automatic methods [16, 17] discovered patterns or grammars from initial pages. They both need manual efforts. MDR [11] and DEPTA [17] identi-fied each data record by analyzing HTML tags or DOM trees. Our mining algorithm image information. Besides, we cons ider the page linked to the image. 
It is pointed out that document summarization will improve web page classification The idea of feature calculation is important for our work. Functions to calculate fea-tures are re-designed and tested to fit well with our model. 
Some research [3, 7] discussed the issues on image clustering. All of them use the text surrounding images as the text feature. They combine this feature with some others to represent images and then perform clustering. Traditional document cluster-ing was applied and the result clusters was unreadable for users. Recently, some works [19, 20] proposed new methods to identify sets of documents that share com-combine this idea with HR-Tree and propose hierarchical image clustering method. Data records are those regular structural objects [2, 11], e.g. product list, service list, list. The model can be easily expanded to other kinds of data record set. 
Before explaining the idea of hierarchical representation (HR), we briefly introduce our method to mine the text for the image in data records. We call them  X  image docu-we call  X  block text  X . In our work,  X  X lock X  means a piece of or a group of information, e.g. blue area in figure 1; 2) the description text in the linked page, if the link exists for one image, which we call text in  X  description page  X . Moreover, we consider the data record structure of web page. For an image, the con-HTML tags and DOM tree. We focus on two kinds of tags: &lt;img&gt;, which indicates occurrence of  X  X lock X . After throwing away those images with high ratio between width and height, and those with small size, (they are always noisy images), we then build the image-block tree which is a kind of variant of DOM tree, as shown in figure 3. We call the collection of several sub-trees representing the image as image-region . such regions .

According to the work of [18], adjacent image regions have the same parent and have the same, continuous structure. We have to solve: 1) where does the first image region begin and 2) how many nodes does one image region have. Our solution is try nodes ... k nodes combination and check whether the structure will repeat. We use the smallest s as the start position, and k as repeated cycle. The complexity of this algo-segment to each image [18]. 
Besides block text, we trace the link from the image to description page. We notice tree 2) Useful information is similar with block text we have already mined. Thus, we first mine these sub-trees according to 1) and then compare them with block text. We sub-tree to image document. we convert the flat image representation into hierarchal image representation by building HR-Tree. 
Traditional method treats the entire context as the description for an image. As should not be considered isolated, but in some environment. For an image of  X  X pple distinguishes this image with other brands X  products. Thus,  X  X pple X  is salient in this collection. Then consider the sub-collection full of  X  X pple X  products,  X  X otebook X  further distinguishes this with other apple products like desktops, iPods and etc. Thus,  X  X otebook X  is salient in the sub-collection. Since all images contain  X  X pple X ,  X  X pple X  is not salient now. The sub-sub-collection full of  X  X pple Notebook X ,  X  X 4 X  is salient. In this paper, we call  X  X pple X  and  X  X otebook X  as G4 X  X  ancestor phrases and the envi-ronment, i.e. a group of images, collection . Based on this fact, we propose Hierarchi-cal Representation tree (HR-Tree) to describe the image, which will benefit hierarchi-cal clustering (See Section 5). tree building. Figure 2 shows 3-level HR-Trees for the images in Figure 1. The zero collection C . Each th i level phrase is salient in C  X  X  sub-collection share all his ancestor phrases. Below is our algorithm to 1) rank salient phrases for the image in certain environment; 2) build HR-Tree recursively based on 1). Rank Salient Phrases methods to rank salient phrases for an image in a collection C , with ancestor phrases as I . We proposed four features: TFIDF; LEN; DSP; NR. Inverted Document Frequency. Our idea is th at a good candidate phrase often binds to one image (TF is high) but less appear in other places (IDF is high). words in image document. ) ( p df is the number of image documents contain p . N is the size of image collection. phrases. For example,  X  X ell phone X  is better than  X  X ell X  or  X  X hone X . DAP (Distance from Ancestor Phrases): In a sub-collection that all image documents share the phrases more likely to be a concept closely associat ed with these shared concepts and further time in image document, we choose the maximum result as the value. occurrence , i.e. one minus, the number of words that precede the phrase first appear-ance, divided by the number of words in the document. some important information. For example, in a notebook collection, we need the size of memory, hard drive to describe the image. High frequency words like  X  X AM X  and  X  X ard X  are good reminders. We consider one adjacent word: corpus containing right and left phrases adjacent to p . Performance and combination of the features are provided in experimental section. Build HR-Tree: Below is the basic algorithm to describe images in initial collection C , Based on the ranking algorithm above. P is the set of ancestor phrases.  X  is empty set 1. Main( C ) 2. For each Image I : 3. Put k sub-trees = HRTs (  X  , , I C ) under root Image ; 1. HRTs ( P I C , , ) : 2. Extract k most salient phrases 3. For each phrase 4. Rebuild sub-collection C C 5. Put trees 6. Return k trees rooted with
In our algorithm, calculation and extraction of salient phrases is based on salience ranking algorithm. When we apply the HR-Trees to cluster images, the initial collec-tion is just composed of images to be clustered. The algorithm is recursive. Each node phrases, just following the definition of Hierarchical Representation . 
One critical issue exists that whether one phrase is allowed to appear in more than lowed in the same HR-Tree. 
HR-Tree is an improved model to describe images. We should choose some pa-time to stop extending HR-Tree and the number of branches under each tree node. These issues are discussed in Section 5. clustering will group the search result into different clusters and enable users to iden-tify their required information at a glance. Given that each phrase in HR-Tree is sali-ent to describe the image in a collection C , we propose one new hierarchical cluster-tion named p . Our algorithm is soft clustering and each result cluster is labeled with some chically clusters is explained as follows. 
Firstly, we cluster initial collection height two. The algorithm stops after obtaining phrases in the first level. b) We check each phrase in first level and assign it to the images whose HR-Trees contain it. After that, images group around k phrases, which have most image assignments, are se-lected to form k clusters. Each cluster is named with a salient phrase. 
Secondly, we divide one image cluster into subgroups, each of which represents a more concrete concept. If we want to further cluster one collection The result clusters are second level sub-clusters named with two phrases: q and their i ) 1 ( + level ones, we extend the path of and repeat step b). (See Left part of Fig.6. as an example of HR-Tree phrases extend-those have very small amount of images. 
For clustering algorithm, not all HR-Trees nodes have to be extended. Branches are created only when it is necessary. This makes the algorithm efficient. 
The advantage of our algorithm is that our results are more natural since the hierar-chical representation is more reasonable for the human beings X  browse habit. Besides, giving each cluster a readable name makes it friendly for user X  X  browsing. We conduct several experiments to test the effectiveness of our methods. Firstly, we crawl web pages contained images and data records from some web sites (See Table 1). After parsing these pages, we extract images and corresponding candidate infor-mation using our mining algorithm (See sectio n 3). And then, they are used to estab-lish HR-Trees to test the effective of different feature to rank the salient phrases (See section 4). We would illustrate some example of HR-Trees to display their description ability. Then we would conduct hierarchical clustering on images and give some dem-onstration to show the advantage of HR-Tree. 6.1 Experimental Result on Mining Algorithm We test our mining algorithm using data sets in Table 2. We select 15 hot queries of 3 different types (Table 1) and submit them to 3 web sites to acquire images for prod-uct. We randomly select some images from automatically crawled data and mine their description manually, in order to guarantee the result of comparison reasonable. Then we compare image document between manual result and auto result from our algo-rithm. (See Cor/Wr/Miss column in Table 2). Two wrongs in the first row stems from the images linking to the pages in other web site. It could be solved by restricting that linking pages should be in the same web site. Type Queries Return Page Num Brand Apple; IBM; Lenovo; Hp; Acer; 10 Product Name Television; Cell Phone; Camera; Notebook; Printer; 5 General Term Movie; Tea; Flower; Travel; Shoe; 10 
URL Total Img Test Imgs Num Cor/Wr/Miss Avg Len shopping.yahoo.com 1832 30 27/2/1 179 www.compusa.com 750 15 15/0/0 281 www.shopping.com 2177 30 29/0/1 97 6.2 Ranking Salient Phrases chical clustering. Here we test their perf ormance and give a method to combine them We assume the more one feature could select salient phrases according to manual columns in Figure 4 are results. 
We see the performance of LEN, DAP and NR do not perform well in Fig.4. We notice that some common words and phrases, like  X  X ustomer X ,  X  X eview X , still have chance to get high score in LEN and NR. We improve the method that for phrases who obtained low TFIDF would have no chance to be chosen, i.e. just assign 0 to features. We re-evaluate the performance of these features, see LEN X ; DAP X  and NR X  in Fig.4. We take average of TFIDF, LEN X , DAP X  and NR X  and obtained AVG as combined result. Last column in Fig.4.displays AVG effect. Since AVG has already reach an acceptable precision, we did not use some more complicated combination. 6.3 Illustrative Example of HR-Trees in Describing Images We select 3 images in data sets and build HR-Trees with initial collection just as de-fined in section 6.2. With limited space, we let each node has 3 branches and we only display the phrases in top 4 levels. When collection is very small, we stop extending further distinguish the image. Indent indicates the next level phrases. 6.4 Cluster Result Since the purpose of image clustering is for human browsing convince, in this section, show, compared with traditional methods, ours algorithm brings good effect on clus-tering as well as convenience for browsers. only. The left frame below the query is the names and size of clusters and their layer structural. When user double clicks one cluster name, the system hierarchically cluster  X  X lower X ; the left is images in one cluster named  X  X lower, roses, romance X . 
Another demonstration, some first level clusters of query  X  X amsung X , is provided arrows represent the route to extend HR-Tree in executing hierarchical clustering. Meanwhile, we also conduct clustering experiment based on traditional K-means. We  X  X RT X  are very similar except some phrases like  X  X lasma X  and  X  X RT X . Our algorithm captures these salient phrases and form more natural clusters for browsers. pages and apply this model in image hierarchical clustering. We design some feature to select the salient phrases in data reco rds and organize these phrases in HR-Tree to of HR-Trees. Hierarchical clustering based on HR-Tree can generate reasonable clus-ters in hierarchical structure with salient phrases as cluster name. 
In future, we will further apply the model of HR-Tree on other types of images in the web. We will re-design the features for particular images. We would design some quantitative evaluation for image clustering with HR-tree and compare with other hierarchical image clustering approaches. We also expect the improved image de-scription can benefit other applications, e.g. image retrieval and classification. 
