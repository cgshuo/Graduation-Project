 Database outsourcing is an important trend which involves data owners farming out their data management needs to an external service provider. One important requirement is to maintain the integrity and authenticity of outsourced data. Whenever an outsourced database is queried, the cor-responding query reply must be demonstrably authentic. Furthermore, a reply must include a proof of completeness to convince the querier that no data matching the query predicate(s) has been omitted. In this paper, we suggest new techniques in support of ecient authenticity and com-pleteness guarantees of such query replies.
 H.2.0 [ Database Management ]: General| Security, In-tegrity Security, Algorithms Data Outsourcing, Integrity and Authenticity, Digital Sig-nature Schemes, Signature Aggregation
The Outsourced Database (ODB) model is characterized by a third-party database service provider o ering software, hardware and network resources to host its clients' databases as well as mechanisms to eciently create, update and access (query) outsourced data. The ODB model poses numer-ous research challenges. One of the prominent challenges is the security of outsourced data, since a database service provider is almost never fully trusted. It is clearly imper-ative to protect outsourced data from attacks not only by
A full version of this paper is available at http://eprint.iacr.org/2005/297 malicious outsiders (e.g., hackers) but also from the actual service providers.

In this work, we focus on integrity-critical databases which are outsourced to untrusted servers and accessed over inse-cure public networks. We provide mechanisms to ensure that query results produced by the server are: (i) correct -tuples in the result set have not been tampered with, and (ii) complete -no valid tuples have been omitted.
Other relevant prior work [3, 4] examined integrity issues in outsourced databases and suggested solutions using Au-thenticated Data Structures. Another recent result [2] in-vestigated the notion of signature aggregation which enables bandwidth-and computation-ecient integrity veri cation of query replies. However, signature aggregation mecha-nisms ensure only correctness of query replies. In this paper, we extend the work of [2] by developing new techniques to provide completeness guarantees.
The main disadvantage of the Authenticated Data Struc-tures approach proposed in [3, 4] is high overhead associated with building, storing and updating complex index struc-tures. We propose an alternative technique which is both secure and ecient, yet requires no complex data structures. We refer to our approach as D igital S ignature A ggregation and C haining or DSAC .

Our approach involves using digital signatures computed at the granularity of individual tuples. The data owner signs each tuple before outsourcing to the publisher/server's site. The server stores a tuple signature along with each tuple.
One intuitive way of providing correctness is, for each query, to have the server reply with the matching tuples and their respective signatures. However, this is neither bandwidth-nor computation-ecient. Since a query reply can contain thousands of tuples, sending, receiving and veri-fying individual tuple signatures can be prohibitively expen-sive. Furthermore, there would be no easy way to provide a proof of completeness. In the remainder of this section, we describe modi cations and enhancements to address these drawbacks.

An ideal solution for providing correctness would involve minimal querier computation overhead and constant (in terms of integrity information) querier bandwidth overhead. The work in [2] proposed the use of two specialized signature schemes to enable such ideal (or near-ideal) solutions. These schemes allow aggregation of multiple individual signatures into one aggregated signature. Verifying such a signature is equivalent to verifying ALL individual comp onen t signa-tures. The size of the aggregated signature is the same as that of a single plain signature (whic h is constan t), irresp ec-tive of either the database size or the query reply size.
Aggregated signatures can be used as follo ws. When the serv er receiv es a query , it executes it and obtains a set of tuples matc hing the query predicate(s). It then securely \com bines" individual tuple signatures to obtain an aggre-gated signature. It returns the result set of tuples and the single aggregated signature. The querier receiv es result set and veri es the aggregated signature.
 The rst signature scheme prop osed in [2] is the Condensed-RSA signature scheme. Condensed-RSA is based on the well-kno wn RSA signature scheme and allo ws aggregation of a single signer's signatures. The second is the Aggregated-BGLS scheme [1]. whic h allo ws signatures pro duced by mul-tiple signers to be aggregated into a single quan tity.
Both signature schemes in [2] o er ecien t pro ofs of cor-rectness, however, they pro vide no completeness guaran tees. To this end we prop ose secure linking of tuple-lev el signa-tures to form signatur e chains . In order to construct a signa-ture chain, we mo dify tuple signature generation as follo ws: Definition 1. Signatur e of a tuple r is compute d as: wher e h () is a crypto graphic hash function such as SHA, jj denotes conc atenation, IP R i is imme diate predecessor tuple along dimension i , l is the numb er of searchable dimensions of that relation and SK is the (private) signing key of the data owner.

The immediate predecessors of a tuple are computed as follo ws: (1) The tuples are sorted in increasing order along eac h searc hable dimension i.e., according to the attribute value for eac h searc hable attribute; (2) The immediate pre-decessor of a given tuple along a given dimension is a tuple with the highest value for that attribute that is less than the value of the given tuple (highest lower bound) along that attribute. 1 Thus, eac h tuple has as man y immediate predecessors as there are searc hable attributes (dimensions) along whic h a query can be issued.

Computed as describ ed above, a tuple signature \co vers" the hashes of all immediate predecessor tuples, thereb y ex-plicitly chaining (linking) the corresp onding signatures. We illustrate this with an example in gure 1. Supp ose that there are three searc hable dimensions. First, tuples are sorted along eac h dimension. Considerig tuple R 5 , according to the gure, its immediate predecessors along dimensions A ; A 2 and A 3 are: R 6 ; R 2 and R 7 , resp ectiv ely. We com-pute the signature of R 5 as: 2 SIGN ( R 5 ) = h ( h ( R 5 ) jj h ( R 6 ) jj h ( R 2 ) jj h ( R
With signatures chained in the above fashion, the serv er replies to a range query with: (1) all matc hing tuples, (2) the boundary tuples whic h are just beyond the query range 1 If attribute values of two tuples are the same, it is necessary to use an additional mec hanism (for example: tuple id) to break the tie. 2 The signature scheme here can be either condensed-RSA or aggregated-BGLS. To keep the discussion general, we avoid the details of the SIGN proto col. (to pro vide a pro of of completeness), as well as (3) the ag-gregated signature corresp onding to the result set. The sig-nature chain pro ves to the querier that the serv er has in-deed returned all tuples in the query range. Speci cally , the querier veri es that the values in the boundary tuples are just beyond the range posed in the query . At the same time, the querier veri es that there are no other tuples in between the boundary tuples and the immediately adjacen t tuples whic h fall within the query range. Therefore, the querier obtains a concise pro of of completeness when the serv er re-leases the boundary tuples as de ned above.

Using our DSA C approac h, it is possible to generate ef-cien t and compact pro ofs of correctness and compactness for most base-lev el relational queries suc h as selections, pro-jections, joins and other set operations. Further, it is also possible to handle dynamic database update operations suc h as tuple inserts and deletes.

Comparing with the state-of-the-art represen ted by the approac h of [4], DSA C is more ecien t in terms of compu-tation, storage and bandwidth. Our approac h also pro vides a richer set of features since it guaran tees completeness of the result set. When compared to the Authen ticated Data Structure approac h of [3], DSA C is very ecien t as far as storage and as ecien t in terms of VO size and veri cation costs.
This work explored the problem of authen ticit y and in-tegrit y of query replies in outsourced databases. In particu-lar, we dev elop ed a new approac h (DSA C) based of signature aggregation and chaining whic h achiev es authen tication of query replies. The main con tribution of this work is the prop osed signature chaining mec hanism whic h pro vides ev-idence of completeness of query result set. [1] Boneh, D., Gen try, C., Lynn, B., Shac ham, H., [2] Mykletun, E., Narasimha, M., Tsudik, G., [3] Dev anbu, P., Gertz, M., Martel, C., Stubblebine, S., [4] Pang, H., Tan, K-L., Authentic ating Query Results in
