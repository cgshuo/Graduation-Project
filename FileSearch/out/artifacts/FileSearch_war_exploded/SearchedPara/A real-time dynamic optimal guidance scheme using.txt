 1. Introduction
Despite high performance computing power, real-time imple-mentation of a complex evolutionary algorithm requires an efficient design, software coding of the algorithm, algorithm manipulation so as to exploit special features of the hardware and avoid associated shortcomings of the architecture. There have been many effort made earlier to demonstrate efficient algorithm design and software coding to achieve real-time performance ( Benoit et al., 2010 ). However, computationally complex real-time applications, for example optimal algorithms to solve nonsta-tionary system design problem in a dynamic environment, are difficult to implement by exploiting the power of high perfor-mance computing domain and/or efficient algorithm design technique and/or better software coding. In particular, the requirement of any level of online optimization for large number of data brings hard constraints and uncertainty in implementing the application in real-time. An alternative solution is to exploit algorithm manipulation, for example, performing off-line optim-sation and then replacing database of optimal parameters with learning algorithms for online execution. In implementing a computationally complex scenario like this, an artificial neural network algorithm could play a vital role in learning the dynamic features in order to achieve the real-time solution of complex evolutionary problems.

This paper considers a closed loop complex real-time missile guidance scheme to demonstrate the potentiality of the GRNN algorithm to solve an evolutionary nonstationary problem. This requires optimal dynamic inputs to the scheme based on the nonstationary enemy objects which is extremely challenging, particularly due to complex computational demand for real-time optimal guidance. There was much research reported earlier on how a missile tracks a target and what the optimal guidance law should be used ( Zarchan, 1999 , 2002 ; Lin, 1991 ; Becker, 1990 ; Hur and Song, 1990 ; Madkour et al., 2006 ; Wu et al., 2010 ; Cui et al., 2011 ; Shin, 2012 ; Sun and Xia, 2012 ). Most of these applications have considered different approaches for adapting the proportional navigation law to improve the performance of the guidance algorithms in two-dimensional environments. Moreover, missile guidance and control algorithms are very time critical. The calculation of the parameters with regard to the missile-target interception requires to be done in a specified time in a 3D defense space. Therefore, missiles guidance can be classified as a hard real-time system. In practice, guidance and control algorithms are very complex and challenging to be implemented in real-time applications.

This investigation proposes a real-time neural network based optimal guidance algorithm for a missile pursuing a maneuvering/nonmaneuvering target in a three-dimensional (3D) environment. In order to achieve a robust guidance system, it needs to address some practical con straints, for instance uncertainty particularly on the algorithm design in implementing a framework for a missile guidance system by considering that the target track-ing system provides necessary pa rameters. The proposed guidance system considers not only adapting proportional navigation law but also identifying the appropriate time (hence, the position of the target) for launching the missile. This time is referred here as to  X  X ttention time X , which is the time from the target X  X  entry to the defense zone to the missile launch. The proposed approach discretises the missile defense (destruction) zone into a large number of parameters. An off-line optimizer generates the optimal navigation constant, and the missile attentio n time for the given pattern based on the target position and its maneuvering parameters. In other words, these two parameters are the outputs for the corresponding set of target input parameters of the optimizer. These generated optimal data are used as training data for the neural network.
In this paper, genetic algorithms (GAs) is used to estimate an optimal set of the effective navigation constant and the missile attention time. The GA is selected as the optimisation technique as it is a parallel global search algorithm and easy to be implemented. It to here as (RCGA), offered better performance as compared other GA based optimization approach for problems with a few numbers of variables ( Madkour et al., 2007 ). The same RCGA approach is used in this application. The structure of the neural network used in this application is general regression neural network (GRNN) ( Specht, 1991 ; Kanmani, et al., 2004 ; Kanbuaa et al., 2005 ; Hu et al., 2010 ;
Abas, 2011 ). Finally, the proposed algorithms are implemented, tested and verified through a set of experiments. Their performances are evaluated using a simulation model for a tactical target. A compara-tive performance of the proposed algorithms is presented and discussed to demonstrate the merit s and capabilities of the approach. 2. A proposed guidance framework
The real-time implementation of any optimal guidance algo-rithm is not easy since a nonlinear two-point boundary value problem needs to be solved to obtain the optimal trajectory.
Theoretically, this missile-target dynamic is highly nonlinear due to the fact that the equations of motion are best described in
Cartesian coordinate system, whereas aerodynamic forces and moments are conveniently represented in the missile and target body axis system ( George and Siouris, 2004 ). Direct numerical solutions to this problem introduce a heavy in-flight computa-tional burden. The convergence characteristics also may not be guaranteed. Thus solving the problem in real time is often not feasible ( Song and Tahk, 2002 ; Vaidyanathan et al., 2006 ).
The basic idea of the proposed guidance is to train neural network to learn the functional form of the optimal guidance command in terms of the current states and terminal conditions, and use them for real-time guidance. Fig. 1 shows the block representation of the proposed guidance technique which can be divided into two strides. These include (i) an off-line optimal guidance algorithm to generate training data for the GRNN using the RCGA, and (ii) on-line application of this trained GRNN in real-time missile guidance under the PNG laws.

The off-line optimal algorithm minimizes a performance index which is defined by a combination of the missile flight time f the miss distance M d as denoted by j  X  min where W t and W d are weighting coefficients.

In the case of a large variation of these two values, minimizing the sum of squares of the values can be an effective approach ( Dahal and Chakpitak, 2007 ). In fact, there are two parameters which play a key role to minimize this performance index. They are listed below: ii. The target position at launching time.
 time X  can be greatly reduced by adjusting the effective navigation constant ( Lin, 1991 ; Zarchan, 2002 ; George and Siouris, 2004 ;
Jackson, 2010 ). In this application, we consider not only adjusting the navigation constant, but also  X  X  X ptimizing X  X  attention time (hence, the position of the target) for launching the missile. 2.1. Dynamic modelling of the missile and the target in Fig. 2 . It is described in a Cartesian coordinate system with origin at the launching point of the missile. The target course can be defined by its velocity vector V T , and its angles with the vertical and horizontal planes denoted as b T and a T, respectively.
The target measurements are assumed to be obtained from a typical monostatic radar station with origin at the launching point of the missile with update rate defined by st. This measure-ment set consists of the target range R T , and its line of sight (LOS) elevation angle y T and azimuth angle f T . The target equation of motion can be written as ( Lin et al., 2005 ), x  X  t  X  X  x T t 1  X  X  X  stV T  X  t  X  cos b  X  t  X  cos a  X  t  X  X  2  X  y  X  t  X  X  y T t 1  X  X  X  stV T  X  t  X  cos b  X  t  X  sin a  X  t  X  X  3  X  z  X  t  X  X  z T t 1  X  X  X  stV T  X  t  X  sin b  X  t  X  X  4  X  V  X  t  X  X  V T t 1  X  X  X  st D V  X  t  X  X  5  X  b  X  t  X  X  b T t 1  X  X  X  st D b T  X  t  X  X  6  X   X  t  X  X  a T t 1  X  X  X  st D a T  X  t  X  X  7  X  angles with the vertical and horizontal planes at scan ( t ), respectively.

Three acceleration commands are considered for the missile to hit its target at the interception point. Two accelerations are perpendicular to its velocity vector denoted as a M ? b and a the vertical and horizontal planes respectively. The other accel-eration is parallel to its velocity vector V M denoted as a commanded accelerations can be evolved under the pure propor-tional navigation guidance as ( Lin et al., 2005 ): V  X  t  X  X  V M t 1  X  X   X  sta M 99  X  t  X  X  8  X  a t  X  X  X  T M D M  X  t  X  M a  X  t  X  X  c N _ y M  X  t  X  X  10  X  a  X  t  X  X  c N _ f M  X  t  X  X  11  X  where c N is the proportional navigation constant. The notations and _ f M  X  t  X  represent the line-of-sight (LO S) rate corresponding to the elevation angle and azimuth angle at scan ( t ), respectively. The notations T T , D T and M T denote the net specific thrust, the drag, and the mass of the missile, respectively. It is worth noting that the turning rate cannot exceed a cert ain limit. Therefore, to make the proposed model more realistic, we have denoted a M ? b max a
M ? a max as the maximum missile turning rates of the azimuth and elevation angles respectively. Moreover, we assumed that the missile has maximum range, maximum altitude, and minimum altitude its destruction zone boundary (DZB) as shown in Fig. 2 .Also,allof these parameters are assumed to be constants. 2.2. DZB and estimation of optimal data using RCGA
To generate the GRNN training data, we discretised the missile destruction zone boundary (DZB) into a large number of patterns with respect to the radar station resolution. Each pattern is a  X  X  X rajectory X  X  representing missile inputs to strike a target in a certain situation defined by the target position and its maneuver-ing parameters. The problem of route planning for complex equations of motion may be viewed as one discrete multivariable functional optimization ( Vaidyanathan et al., 2001 ; 2006 ). It is noted that the target specifications cannot exceed a certain limit, therefore to make the simulation data more realistic, we assumed that the target has maximum velocity vector of V T max , minimum velocity vector of V T min , maximum altitude A T max and the mini-mum altitude A T min .The target is assumed to enter the DZB with initial velocity vector denoted by V T (0) , and initial range R time t  X  0, can be defined as R where R  X  t  X  X  and R M max is the missile maximum range. The pattern can be identified by a set of parameters denoted as C T (also see Eq. (2) X (7) ) C
This set of parameters will be considered as the GRNN inputs. We assume that the given missile battery does not deal with any target outside its DZB defined by the maximum range R M max , the maximum altitude A M max , the minimum altitude A M min and the missile max-imum flight time (see Fig. 2 ). The missile maximum flight time is the time taken by the missile from its launching point to the boundary of the destructive zone on its exit if there was no interception with the certain missile should achieve a set of conditions defined as below: i. The initial target position lies at the surface of the destruction ii. The target trajectory goes into the destruction zone. iii. The target trajectory altitude is within the destruction zone all iv. The target remains in the destruction zone not less than the
Solving the target equation of motion (2 to 4) with respect to the time taken to reach the A R max of the DBZ, and the time taken to reach the maximum and minimum missile altitudes A z max and A min , respectively, can be derived as: A max  X  2 z T sin  X  b  X  X  X  x T cos  X  b  X  cos  X  a  X  A A
The set of conditions for acceptable trajectories can be rewrit-ten as: A These conditions are used as search bound for optimization.
The arrangement time delay between the first taking measure-ments at the missile DZB and the missile fire command (missile launch time) is defined by the attention time (T A ). Then, the multivariable functional optimization problem is summarized by minimizing the performance index given by Eq. (1) interims of the navigation constant ( c N ) of the PNG algorithm and the missile attention time ( T A ) for the given initial target position. The RCGA is chosen to estimate the interims of the navigation constant ( c N ) of the PNG algorithm, and the missile attention time ( T ) for each pattern to minimize the performance index. The performance index is the combination of the missile flight time f and the miss distance M d denoted by Eq. (1) which assumes to be the RCGA fitness function. The RCGA minimizes this function by tuning the values of the PNG navigation constant ( c N ) and the missile attention time ( T A ) for every pattern to generate the corresponding output of the neural network. In fact, there is no need to generate the GRNN input data at all around the four Cartesian coordinate quarters. The GRNN can be trained by the first quarter data only as the relationship of the first quarter and the other three can easily be calculated for the nine target parameters given in Eq. (14) using (19) X (21) . It leads to a certain set of proportional navigation constant and attention time. Thus, the equivalent sets in the other three quarters will lead to the same proportional navigation constant and attention time set.  X  2 x T y T z T v T b T 180 a T D V T D b T D a T  X  19  X   X  2 x T y T z T v T b T 180  X  a T D V T D b T D a T  X  20  X   X  x 2.3. Operating procedure to use the algorithm In this section, a summary is given regarding to how the
RCGA X  X RNN technique is to be applied for a surface to air missile battery to improve the kill probability of its single shot.
This process can be divided into two stages: the off-line stage and the on-line application. The off-line stage is shown as follows: i. Consider the first quarter of the missile destruction zone bound-ii. Discard unacceptable sets according to the missile destruction iii. Estimate the navigation constant and the missile attention iv. Train a GRNN to estimate the navigation constant and the
The second stage is the on-line application, where the algorithm checks whether the target is valid for DZB according to its nine parameters. Then it estimates the na vigation constant and the missile attention for the accepted target using the trained GRNN: i. Determine the target nine parameters. ii. Make the decision of accepting or rejecting the target accord-iii. Convert the target nine parameters to their equivalent in the iv. Estimate the navigation constant and the missile attention v. Wait for this estimated time  X  X  X issile attention time X  X . vi. Fire the missile with the estimated navigation constant. 3. Algorithms for optimisation and learning 3.1. RCGA
The Traditional Crossovers Genetic Algorithm (TCGA) works on randomly selected pairs of solutions from mating pool with certain crossover rate. This operation exchanges the genes between the two randomly selected solutions. To reduce the randomization  X  X  X uck X  X  of the traditional GA crossover operator a modified approach for population inheritance is used referring to the concepts taken from the recessive property inheritance and Darwin theory of evolution. The Recessive trait Crossover Genetic
Algorithm (RCGA) produces children by selecting the common genes between both parents, and choosing the remaining genes randomly based on the fact that the complementary of all of the chromosome parts makes its survival fitness. This crossover operator has some similarities with the well known uniform crossover operator.
 parents have the eight genes chromosome as shown in Table 1 .
The uniform crossover genetic algorithm can be proceed by exchanging alternate substrings, where the offspring is con-structed by choosing every bit with a probability p (usually p  X  0.5 is considered) from either parents, as in Table 2 ( Deb, 2001 ). In the example, the first, fourth, sixth and seventh bits are exchanged between the parents. On the other hand, it has to be noted that these parents have common genes at (1, 3, 5, and 6).
Over the evolution process the survival fitness of these two parents depend on these common genes. The RCGA keeps these common genes without any change when the offspring is con-structed and tries to make better children by introducing different genes using the four possible binary combinations randomly. This is the only random operation in this crossover approach. The new solutions are shown in Table 3 .
 selection of the parents is very important as both of them should have some fitness trait carriers. Further details of RCGA and performance of the algorithm can be found in Madkour et al. (2006 ). 3.2. GRNN developed by Specht (1991 ), who claims that the algorithm in
GRNN is able to provide a smooth transition from one observed value to another, even with sparse data in a multidimensional measurement space. The GRNN is the NN architecture that can solve any function approximation problem in the sense of estimating a probability distribution function ( Kanbuaa et al., 2005 ; Hu et al., 2010 ; Abas, 2011 ). It is a powerful memory based network that could estimate continuous variables and converge to the underlying regression surface ( Kanmani et al., 2004 ). The main advantage of the GRNN approach is simplicity ( Hu et al., 2010 ). It is noted that the adjustment of only one parameter is sufficient for determining the network. GRNN approximates any arbitrary function between input and output vectors, drawing the function estimate directly from the training data. Furthermore, as the size of the training set becomes larger, the estimation error approaches zero ( Kanbuaa et al., 2005 ).

GRNN is a feed-forward NN established on the theory of non-linear regression. It is a three-layer network with one hidden layer ( Kanbuaa et al., 2005 ; Abas, 2011 ). Each layer has entirely different roles as shown in Fig. 3 .
 The input layer : Where the inputs are applied.

The hidden layer : Where a nonlinear transformation is applied on the data from the input space to the hidden space. In most applications the hidden space is of high dimensionality.
The linear output layer : Where the outputs are produced. 4. Experiments and results
A simulation of a maneuvering target is considered to demon-strate the effectiveness of the navigation constant ( c N attention time ( T A ) for each pattern by minimizing the perfor-mance index denoted in Eq. (1) . This target is assumed to enter the missile DZB with initial position, measured in Cartesian coordinate with origin at the launching point of the missile, R  X  [3780,13860,4314] m, with speed V T 0  X  220 m = s , vertical plane angle b T  X  72 3 , and horizontal plane angle a T  X  184 values yield the target to be within the missile DZB for about A  X  132 : 87 s, the time taken to reach the maximum altitude is
A  X  280 : 46 s and a time taken to reach the minimum altitude is
A  X  2 109 : 86 s. It is worth noting that the negative value of the time means that it is an imaginary time, which will never be reached. That is, this target will not reach the minimum altitude with these initial parameters. These simulation target trajectories are acceptable according to Eq. (18) as the missile maximum flight time is supposed to be f t max  X  45 s. This target maneuvers have an acceleration of D v T  X  3 m/s 2 , vertical plane angle rate of D b
T  X  2 3 = s, and horizontal plane angle rate of D a T  X  4 target measurements have been obtained with sampling time st  X  0.05 s.

The missile flight time f t , the miss distance M d , and the performance index denoted by Eq. (1) are calculated to this missile-target pursuit using two sets of navigation constant and attention time denoted by c N  X  {1,1.2,1.4, y ,50}, T A  X  {1,1.2,1.4, y ,50} s , respectively. We have calculated the minimum value of the performance index using exhaustive search for all combina-tions of c N and T A . The minimum value obtained was j  X  21.0002 which is assumed to be the optimal value for this case. It is worth noting that, the execution time of this experiment was 964.487 s using MATLAB &amp; Version 7.1, which runs on a Dell PC with Intel Pentium 4 CPU 3.2 GHz and 1 GB RAM.

This experiment demonstrates that the navigation constant and the attention time play the key role in determining the flight time and the miss distance (i.e., accurate interception). The good estimation of these parameters ( c N and T A ) leads to a high single-shot kill probability and on the other hand, the bad parameters estimation may lead to a missile failure. In other words, the single-shot kill probability of a guided missile under PNG strongly depends on the estimated values of the navigation constant and the attention time. We propose GAs based optimization to determine the best value of c N and T A for every discretised pattern of the DZB. This, however, is a CPU time intensive approach, which cannot be used in real-time. Therefore, GA is used off-line to generate the optimized c N and T A . These data are then used to train neural network guidance algorithms for real-time imple-mentation. The next section discusses the application of the GA to generate the training data.

The same specifications of the missile and its maneuvering target discussed above are used for the GRNN model to demon-strate the effectiveness of our optimal guidance algorithm. The minimum value of the performance index obtained using the trained GRNN was j  X  21.1017. The execution time of this experi-ment was only 0.025 s. Table 4 summarizes the values of the navigation constant c N , and the missile attention time T the TCGA, RCGA and GRNN. It also depicts corresponding miss distance, missile flight time, and the performance index. The last column indicates the execution time for every case. It is noted that the TCGA performs worst as compared to the other methods.
In contrast, the RCGA obtained the solution within 33.078 s as compared to the time taken by the trained GRNN algorithm (0.025 s.). The execution times offered by the TCGA and RCGA algorithms are not suitable for real time implementation. In fact, these algorithms can be used off-line only to generate the GRNN training data to reduce the overall execution time for data generation. The trained GRNN offers best performance in imple-menting the algorithms within a fraction of a second. Therefore, it clearly demonstrates that the GRNN is the promising algorithm among these for real-time implementation.

Fig. 4 shows the scenario of 3D pursuit trajectory for the simulated missile pursuing its target using PNG for three algo-rithms. The dotted line in this figure depicts the optimal trajec-tory, the dashed line depicts the trajectory obtained by the RCGA, and the dash-dot line depicts the trajectory obtained by the
GRNN. It is worth noting that, the differences between those trajectories are not easy to be realized in this figure because they are very close to each other.

The same result is shown in Figs. 5 X 7 ) with the 2D missile-target pursuit trajectories. The spot represents the launching point while the square represents the target position at the missile DZB.

The change of the target range within the missile DZB is shown in Fig. 8 . The spot represents the launching point while the star indicates the interception point. The time before the launching point is the attention time, and the time between the spot and the star is the missile flight time. The path after the star is an imaginary path if there was no interception.
 4000 5000 0 0.5
This experiment demonstrates that the proposed GRNN guidance algorithm offers the best performance among the three algorithms in implementing real time system to guide missile to pursue a high maneuvering target to hit it with the minimal flight time and nearly zero miss distance. 5. Concluding remarks
This paper has presented an investigation into the computa-tionally complex optimal real-time missile guidance algorithm to intercept the maneuvering tactical targets in a 3D environment.
In this investigation, a new approach of problem discretisation, optimal parameter selection and efficient method to use optimal parameters has been proposed for real-time solution. Here, the input data was generated by discretising the missile defense zone into small patterns. Each pattern was considered as a trajectory identified by  X  X ine X  parameters. The evolutionary genetic algo-rithm was used as an off-line optimizer to estimate a set of the effective navigation constant and the missile launching time.
These parameters have been produced as outputs for the corre-sponding set of input target parameters. These input and output sets were used to generate a training data set for the GRNN.
The trained GRNN was then applied in implementing real-time missile guidance for any unknown target trajectory. The proposed algorithms were implemented, tested and verified through a set of experiments. Their performances were evaluated using a simulation model for a tactical target. A comparative performance of the proposed algorithms is presented and discussed to demon-strate the merits and capabilities of the new approach. We consider a multi-agent based co-operative control approach for multi-missile guidance as our future work.
 References 1000 2000 3000 4000 5000 6000
Z 0.9 1.1 1.2 1.3 1.4 1.5 1.6 Range (Km)
