 Mohammad Bahrani  X  Hossein Sameti  X  Mehdi Hafezi Manshadi Abstract In this paper, we present our attempts to design and implement a large-coverage computational grammar for the Persian language based on the Generalized Phrase Structured Grammar (GPSG) model. This grammatical model was developed for continuous speech recognition (CSR) applications, but is suitable for other applications that need the syntactic analysis of Persian. In this work, we investigate various syntactic structures relevant to the modern Persian language, and then describe these structures according to a phrase structure model. Noun (N), Verb (V), Adjective (ADJ), Adverb (ADV), and Preposition (P) are considered basic syntactic categories, and X-bar theory is used to define Noun phrases, Verb phrases, Adjective phrases, Adverbial phrases, and Prepositional phrases. However, we have to extend Noun phrase levels in X-bar theory to four levels due to certain com-plexities in the structure of Noun phrases in the Persian language. A set of 120 grammatical rules for describing different phrase structures of Persian is extracted, and a few instances of the rules are presented in this paper. These rules cover the major syntactic structures of the modern Persian language. For evaluation, the obtained grammatical model is utilized in a bottom-up chart parser for parsing 100 Persian sentences. Our grammatical model can take 89 sentences into account. Incorporating this grammar in a Persian CSR system leads to a 31% reduction in word error rate.
 Keywords Computational grammar  X  GPSG  X  Persian language 1 Introduction The Persian language is an Indo-European language natively spoken by about 60 million people in Iran, Afghanistan, Tajikistan, and surrounding areas. This paper focuses on the written form of modern Iranian Persian, also known as Farsi. This language has remained remarkably stable since the eighth century AD, although local environments such as the Arabic language have influenced it. The Arabic language has heavily influenced Persian, but has not changed its structure. In other words, Persian has only borrowed a large number of lexical words from Arabic. Therefore, in spite of this influence, Arabic has not affected the syntactic and morphological forms of Persian (Khanlari 1995 ).

The Persian language has a subject-object-verb (SOV) word order with a large potential to relax the order structure, especially in preposition adjunction and complements. For example, adverbs could be placed at the beginning, at the end, or in the middle of sentence, and this does not often change the meaning of the sentence. This flexibility in word ordering makes the task of Persian grammar extraction a difficult one. The written style of Persian is right to left, and it uses in ambiguities in the pronunciation of words in Persian.

During the last two decades, several different grammatical formalisms have been proposed in the domain of computational linguistics. These grammatical formalisms are used for syntactic structure representation of natural languages. Regarding these representations, syntactic analysis of sentences can be performed with the use of a parser. Some of these formalisms are the Generalized Phrase Structured Grammar (GPSG) (Gazdar et al. 1985 ), Head Driven Phrase Structure Grammar (HPSG) (Pollard and Sag 1993 ), Lexical Functional Grammar (LFG) (Kaplan and Bresnan 1982 ), and Tree Adjoining Grammar (TAG) (Joshi et al. 1975 ).

Computational linguistic studies on Persian are not frequent. Therefore, there is no standard reference for computational grammar or computational lexicons for Persian. In the domain of syntactic analysis, there are only a few sparse works (Rezaei 1993 ; Amtrup et al. 2000 ; Feili and Ghassem-Sani 2004 ; Ayat 2001 ; Valad 2006 ; Sajjadi 2006 ; Dehdari and Lonsdale 2008 ; Hafezi-Manshadi 2001 ). The common drawback of the majority of the previous works is the narrow coverage of Persian, causing the grammar to be unusable in real applications. Rezaei ( 1993 ) introduced a constraint-based grammar. It is one of the first efforts to develop the computational grammars and syntactic parsers for Persian. In the Shiraz project (Amtrup et al. 2000 ), a phrase structure grammar for Persian and a unification-based bidirectional chart parser are developed to be used in a Persian-to-English machine translation engine. Feili and Ghassem-Sani ( 2004 ) try to utilize S-TAG (Abeille  X  and Schabes 1989 ) for English-to-Persian machine translation. They have developed an S-TAG grammar for the English-Persian language pair based on the XTAG project (XTAG Research Group 1998 ). This is a specific grammar for the work specified in Feili and Ghassem-Sani ( 2004 ) and it cannot be simply utilized for other applications. Ayat ( 2001 ) developed a Persian grammar based on HPSG formalism. This grammar covers only a subset of syntactic structures of Persian. In Valad ( 2006 ), the development of a unification grammar with large coverage of Persian is reported. Semantic features are used in this grammar for syntactic ambiguity resolution. Ezafe enclitic is not considered in this grammar, causing ambiguities in boundary detection of phrases. Sajjadi ( 2006 ) represented the main syntactic structures of Persian by link grammar, but certain important syntactic structures are not mentioned, such as verb complements, complex verbs, and relative clauses. As in Valad ( 2006 ), the Ezafe enclitic is not mentioned in this grammar. In Dehdari and Lonsdale ( 2008 ), a link grammar parser for Persian is developed which integrates efficient morphology engines with a robust syntactic parser.
 In this paper, we follow the approach of Hafezi-Manshadi ( 2001 ), who uses the GPSG formalism and proposes a simplified form of GPSG that is appropriate for the Persian language. In addition, he has extracted some grammatical rules for describing simple syntactic structures of Persian. Similar to other works, this work suffers from limited coverage and inaccurate description of some syntactic structures.

In this research, we try to extend Hafezi X  X  work, and our aim is to develop a large-coverage grammar. Referring mainly to Meshkatoddini ( 2003 ), we try to investigate various syntactic structures relevant to the written form of the modern Persian language. Then we describe these structures according to the GPSG-based model mentioned in Hafezi-Manshadi ( 2001 ). We develop this grammatical model for continuous speech recognition applications. It is a very flexible grammar, however, and it can be used for any application that needs syntactic analysis of the Persian language, like Persian speech synthesis, Persian optical character recogni-tion, machine translation (translating Persian to other languages), etc.
The main justification for choosing GPSG in this work is that GPSG is a unification-based formal theory, hence is well suited for computational linguistics. GPSG is widely used for describing syntactic structures of various languages, such as French (Emirkanian et al. 1996 ), Chinese (Chu-ren 1986 ), Arabic (Edwards 1993 ), etc. The main advantage of our work, in comparison with the previous works on the Persian language, is that it considers a large variety of syntactic structures of Persian, resulting in wider coverage of this language.

This paper is structured as follows. In Sect. 2 , the simplified GPSG model proposed in Hafezi-Manshadi ( 2001 ) is briefly reviewed, and the similarities and dissimilarities of this model to GPSG are clarified. In Sect. 3 , the basic syntactic categories that we have defined for Persian are explained, and some syntactic/ semantic features specified for each category are described. In Sect. 4 , our definition of the syntactic phrases is given. In Sect. 5 , the syntactic structures not covered by our grammar are mentioned. In Sect. 6 , the results of experiments using the proposed structure are presented. Finally, our concluding remarks are given in Sect. 7 . 2 Utilizing GPSG for Persian GPSG is an extension of Phrase Structure Grammar (PSG) (Gazdar 1982 ). In the PSG formalism, each non-terminal, independent from its context, is broken down to a set of terminals and non-terminals.
 In the GPSG formalism, we use Feature Structure instead of terminal and non-terminal symbols. Each Feature Structure contains a set of features and their values. For example, we define a feature for verbs called TRANS that takes {+} value for transitive verbs and {  X  } value for intransitive verbs. Therefore, the VP rules mentioned above are written as:
GPSG presents a number of instructions for the propagation of features and the assignment of values to them. Head Feature Convention (HFC) is one of these instructions. According to HFC, one of the nodes on the right hand side of each rule is defined as the head node. All syntactic features (and their values) of the head node must propagate to the mother node in the left hand side of the rule unless the mother node takes values explicitly for some features, or this propagation violates Feature Co-occurrence Restriction (FCR) instructions.

FCR expresses invalid co-occurrence of features and imposes some constraints on propagation of features. We exploit FCR instruction differently from (Gazdar et al. 1985 ). We simply specify which features are meaningful for each syntactic category.
 Another GPSG instruction is Feature Specification Default (FSD). According to FSD, each feature that complies with FSD rules, takes its default value unless it takes other values through HFC or other instructions. One should consider that HFC has priority over FSD.

Feature Agreement Principle (FAP) is another GPSG instruction used in our grammatical model. According to FAP, GPSG accepts a syntactic structure only if feature agreement on its nodes satisfies FAP constraints. For example, suppose we have defined the feature PLU that specifies plurality 1 of nouns and verbs. A FAP constraint may express that a grammatical rule like S  X  NP VP is accepted only if the PLU features for both NP and VP take the same values. For implementing FAP constraints, we use the concept of variables in our model, i.e., we take variable values for some features in some grammatical rules. For example, the FAP constraint on plurality of NP and VP in rule. S  X  NP VP is expressed as: HFC, FCR, FSD, and FAP are four GPSG instructions used in our model. Besides these instructions, GPSG follows some instructions like Meta-Rules and the Foot Feature Principle (FFP). These instructions are not used in this research because of their complexity or lack of performance for Persian. In addition, GPSG uses two forms of grammatical rules called Immediate Dominance (ID) rules and Linear Precedence (LP) rules. We do not use ID/LP rules because of exponential complexity order of their parsing algorithms. Instead, we use phrase structure (PS) rules. 3 Syntactic categories and phrases In traditional Persian grammars, words are often categorized into seven syntactic categories (Givi and Anvari 2003 ). In this paper, the traditional Persian word categorization is not adopted because it is not able to describe complex syntactic phrases of Persian. Thus, several new categories are defined to overcome these complexities.

In our grammatical model, Noun (N), Verb (V), Adjective (ADJ), Adverb (ADV), and Preposition (P) are the basic syntactic categories. These categories can play head role for Noun phrases, Verb phrases, Adjective phrases, Adverbial phrases, and Prepositional phrases. Other syntactic categories defined in our grammatical model are summarized in Table 1 .

GPSG, according to its phrase structure nature, treats sentences as compositions of syntactic phrases. Phrase structures in GPSG formalism are partitioned into smaller phrases, and this process is continued to achieve boundaries of words. We follow X-bar theory (Radford 1988 ) for definition of syntactic phrases such as Noun phrases, Verb phrases, Adjective phrases, Adverbial phrases, and Prepositional phrases. For the definition of Noun phrases, the levels of X-bar had to be extended to four levels because of the complexities in the structure of Noun phrases in Persian. Other syntactic phrases follow two-level structure as mentioned in X-bar theory.

For each syntactic category and phrase, we specify features ; the features describe the lexical, syntactic, and semantic characteristics of words. To each feature, a name, a type, its possible values, and a default value are assigned. The feature names are selected in a manner to indicate the operation of the feature. The feature type could be binary or atomic. Binary features can take only two {+,  X  } values; for example, Indefiniteness ( INDEF ) is a binary feature. Atomic features can take several values. For example, Person ( PER ) is an atomic feature and its possible values are {1, 2, 3}. Possible values for the atomic feature TENSE are { PAST , PRES , FUTURE }. The default value for binary features is {  X  }. The atomic features have default values initially specified. For example, the default value for the atomic feature TENSE is PAST . Table 2 shows some main features specified for Noun, Verb, and Adjective categories. 4 Description of phrase structures 4.1 Noun phrases Noun phrases have complex structures in Persian. A noun may take several types of pre-modifiers such as Determiner, Number, Classifier, Quantifier, etc. In addition, a noun may take several types of post-modifiers such as Adjective phrase(s), Prepositional phrase, Noun phrase (as genitive), and relative clause; among them, adjective (or Adjective phrase) is a repeatable post-modifier. To facilitate describing these complex phrases, we consider four levels for Noun phrases in X-bar theory. The definitions of these levels are as below: N1  X  : A noun followed by Adjective(s) or Adjective phrase(s). 2 N1: N1  X  followed by other post-modifiers of noun (like Noun phrase, Prepositional phrase, and relative clause).
 N2  X  : N1 preceded by Number, or Classifier as pre-modifiers of noun.

N2: N2  X  preceded by other pre-modifiers of noun (like Determiner, Quantifier, superlative Adjective, etc.).

Rules ( 1 )to( 4 ) are four samples of rules that describe Noun phrases at different levels.

Rule ( 1 ) indicates that the combination of an indefinite noun with an adjective Rule ( 2 ) is one of the grammatical rules that describe N1. This rule shows the Noun phrase structure when the noun combines with another Noun phrase as a genitive. In this rule, N1  X  must have Ezafe enclitic ( GEN +) and non-pronoun ( PRO  X  ) head. In this paper, to prevent ambiguity, the Ezafe marker is written explicitly in the text. N2 points to a complete Noun phrase (a noun with pre-modifiers and post-modifiers). It means that a complete Noun phrase can play the role of genitive for Noun.

In addition, rule ( 2 ) shows that the other post-modifiers of noun (P2 and S) can be combined optionally. P2 points to the Prepositional phrase (Sect. 4.2 ) and S[ COMP +] points to the complement sentence (relative clause). The feature COMP with {+} value indicates that the sentence must have the complementizer  X   X   X   X  X  ke ]  X  X hat, which X  (Example 1).
 Ex. 1  X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X 
The binary feature GAP denotes the existence of object gap. 3 This means that the relative clause may have a distant object. For example, consider the Noun phrase of modifier of the word  X   X   X   X   X   X   X   X   X   X   X  [ nam X yeshn X me ]  X  X rama X , does not have any direct this long-distance dependency. According to this feature, the relative clause, which appears as post-modifier of noun, can have an object gap. The GAP feature is one of the features that comply with FSD instruction. 4 We have not specified any value for the feature GAP . This means that GAP can take {+} and {  X  } values. If GAP is not mentioned in this rule, then it would take {  X  } value according to FSD instruction.
Rule ( 3 ) is an example of rules that describe N2  X  . Rule ( 3 ) generates structures ket X b -e xub ]  X  X wo good books X . This rule emphasizes that N1 (on the right hand side of the rule) must be singular ( PLU  X  ) and have non-pronoun head ( PRO  X  ). The plurality of N2  X  results from the plurality of the Number category. The binary feature NUM with {+} value shows the presence of cardinal number in the structure of N2  X  .
 Rule ( 4 ) is a sample of rules that describe N2. Rule ( 4 ) specifies the combination of N2  X  with Quantifier and Determiner. This rule mentions that N2  X  must be plural and contain Number category ( NUM + ). In addition, this rule mentions that the position of Quantifier (QUANT) must be before Determiner (DET). Thus, it generates the of valuable metal  X  , and  X   X  [ hame -ye in se no  X  felez -e ger X n -bah X  ]  X  all of these three kinds of valuable metals  X  .

The asterisk at the right hand side of each rule indicates the head category of that rule. According to HFC instruction, the values of head node features must propagate to the mother node on the left hand side of the rule unless the mother node takes values for some features explicitly. For example, in rule ( 1 ), the values of features GEN and INDEF (also the values of other features like PER and PLU 5 ) propagate from N to N1  X  automatically and they are not specified explicitly. 4.2 Prepositional phrases The structure of Prepositional phrases in Persian is straightforward. It is constructed by a Preposition followed by a Noun phrase. We define only one X-bar level (say P2) for Prepositional phrase. Rule ( 5 ) shows the structure of P2.
 [ dar ket X bi ke diruz xaridam ]  X  X n the book which I bought yesterday X , and  X   X   X   X   X   X   X   X   X   X   X   X   X   X   X  [ b X  hame -ye tav X n -e xod ]  X  X y all of own power X . 4.3 Adjective/adverbial phrases We describe Adjective and Adverbial phrases together because their structures are very similar. Nearly all adjective types in Persian can be used as an Adverb. We define two X-bar levels for Adjective/Adverbial phrases: ADJ1/ADV1: Adjective/Adverb followed by Prepositional phrase.

ADJ2/ADV2: ADJ1/ADV1 preceded by a degree adverb.
Rule ( 6 ) is one of the rules that describe Adjective phrases. A similar rule can be set for Adverbial phrases.

This shows the combination of Adjective with Prepositional phrases. As was mentioned, Adjective phrases may be constructed by combining Adjectives and Prepositional phrases. However, not every adjective may combine with every type of Prepositional phrase. For example, comparative adjectives can only combine with be combined with any Prepositional phrase. The binary feature CMPL is defined for the Adjective category; this feature shows the ability of an adjective to combine with a Prepositional phrase. For instance, comparative adjectives take {+} value for CMPL . In addition, the atomic feature PTYPE is defined that specifies the type of Prepositional phrase, which can combine with an adjective. This feature is mean-ingful only for CMPL + adjectives. Rule ( 6 ) illustrates that the feature PTYPE for ADJ and P2 must be equal. For instance, the value of PTYPE feature for com-parative adjectives is AZ . Therefore, these adjectives combine only with AZ type other X . 4.4 Verb phrases In Persian, a verb can have many inflectional forms in different tenses. The various inflectional forms of a verb can be constructed by morphological rules (Meger-doomian 2000 ). In our grammatical model, no morphological rules are used; therefore, separate lexical entries for various inflectional forms of a verb are considered.

Verb phrases include various structures that contain the Verb category. A verb can take several modifiers like object(s) (for transitive verbs), predicate (for copulative verbs), Prepositional phrases, Adverbial phrases, etc. Because the Persian language has SOV word order, the verb is often the last word of the sentence. Therefore, the verb modifiers are often placed before the verb.

We define two X-bar levels for Verb phrases. The definition of these levels varies in different Verb phrase structures. The general definitions of these levels are as follows: V1: Verb preceded by Adverb or Prepositional phrases.

V2: V1 preceded by object (for transitive verbs) or predicate (for copulative verbs).
 Rules ( 7 ) and ( 8 ) are two examples of the rules that describe V1 and V2.
V1 ! ADV2 = P2 = N2 TEMP  X   X  V1 VTYPE TRANS 1 ; TRANS 2 fg ; PASSIVE  X 
Rule ( 7 ) shows the combination of transitive verbs with non-object modifiers (ADV2, P2, and N2 [ TEMP +]). This rule states that the verb must be active ( PASSIVE -). Because the modifiers of the verb do not follow any special word order, we use the slash character between the modifiers and allow V1 to be generated recursively (The slashes mean that only one of the three categories may be used). teleskop besy X r v X zeh mi -binam ]  X (I) see with the telescope very clearly tonight X . These structures can be completed after their combination with an N2 (as an object) through rule ( 8 ). This combination results in a new Verb phrase on level V2. For teleskop besy X r v X zeh mi -binam ]  X (I) see the planets with the telescope very clearly tonight X .

The atomic feature VTYPE specifies the transitivity type of a verb. In our grammar, several types of transitivity are defined depending on the different sentence structures that the verbs generate. For example, the values TRANS_1 and TRANS_2 for VTYPE specify that the verb needs one object (such as  X   X   X   X   X   X   X  The value TRANS_S for VTYPE specifies that the verb needs an indicative complement sentence as the object (such as  X   X   X   X   X   X  [ goftan ]  X  X o tell X  in sentences that Ali comes back soon X ). The complement sentence is added to the Verb phrase on level V1. For instance, rule ( 9 ) shows the combination of the TRANS_S verb type and the complement sentence.
 4.4.1 Verb phrases for auxiliary verbs We specify the separate syntactic category for auxiliary verbs (AUX category). In this work, our definition for auxiliary verb is different from its traditional definition in Persian grammars. In traditional Persian grammars, some verbs like [ b X yestan ]  X  X hould, must, have to X ,  X   X   X   X   X   X   X  [ d X shtan ]  X  X ave/has/had X , etc., are considered auxiliary verbs (Givi and Anvari 2003 ). We do not follow traditional definitions; instead, we adopt the following conventions:
In this work, we identify two main types for auxiliary verbs based on the Verb phrase structures that they generate. The first type contains the verb  X   X   X   X   X   X  [ b X yad ] [ be -tav X n ]  X  X an (in infinitive forms) X . These verbs cannot be inflected in plurality and person; in other words, they do not have any inflectional form. The verb  X   X   X   X   X   X  [ b X yad ]  X  X hould, must, have to X  generates two different structures: with main verb in infinitive mood such as  X   X   X   X   X   X   X   X   X  [ b X yad raft ]  X  X ne must go X , and with main verb in subjunctive mood such as  X   X   X   X   X   X   X   X   X   X  [ b X yad be -ravam ]  X (I) must/should go X . The other verbs in the first type of Auxiliary only go along with the main verbs in infinitive mood, such as  X   X   X   X   X   X   X   X   X   X   X  [ mi -tav X n goft ]  X  X ne can say X .
The second type of auxiliary verb contains the various inflectional forms of verb  X   X   X   X   X   X   X  X  d X shtan ]  X  X ave/has/had X . This verb can be inflected in plurality, person, and tense. In addition, this verb goes along with the main verb in indicative mood and it must agree with the main verb in plurality, person, and tense. For example,  X   X   X   X   X 
Separate rules for each type of auxiliary verb are specified. Rule ( 10 ) is a sample rule that describes the Verb phrase structure for the DASHT type (second type) of auxiliary verbs in past tense.
 V2 AUXL  X   X ! AUX AUX TYPE DASHT ; TENSE PAST ; PER ? x ; PLU ? y  X  4.4.2 Verb phrases for complex verbs The handling of complex verbs is one of the most difficult problems in the syntax and morphology of Persian. Complex verbs are composed of two distinct components. The first component, referred to as the nonverbal component, is usually a single word in Noun or Adjective category or more than one word that constructs a Prepositional Phrase. The second component is usually a light verb. In some complex verbs, these components can be separated within the sentence and other phrases may be inserted between them. This problem results in major difficulty in the description of the syntactic structure of sentences that contain complex verbs. There are some recent works on the computational analysis of Persian complex verbs (Mu  X  ller 2010 ; Amtrup and Megerdoomian 2007 ).
To handle this problem, we categorize the complex verbs into two types: 1-Complex verbs with bound component, 2-Complex verbs with separable component. Complex verbs with bound component are the verbs the components of These complex verbs are treated like simple verbs; thus, they must be represented in complete to form a lexical entry. Complex verbs with separable component are the she screams loudly X . These complex verbs are treated in a different way: only the second component (e.g., the light verb) is introduced as a complex verb in the lexicon and the first component is specified as its separable component. These separable components can construct a complex verb in combination with the light verb. This combination is expressed by rule ( 11 ).

The atomic feature CMPLX_TYPE specifies the type of verb complexity. For complex verbs with separable component, it can take three different values { CMPLX_N , CMPLX_ADJ , CMPLX_PP } depending on the category of the sepa-rable component (Noun, Adjective or Prepositional Phrase). For complex verbs with bound component (also for simple verbs), the value of this feature is SIMPLE .
In addition, the features N_COMP and ADJ_COMP for complex verbs are defined depending on their type of complexity. The values of these features are all of the words that can construct a complex verb in combination with the light verb. For example, the light verb  X   X   X   X  [ zad ]  X  X it X  has N_COMP feature with the values the light verb  X   X   X   X   X  [ kard ]  X  X o X  has ADJ_COMP feature with the values like  X   X   X   X  expresses that the complex verb (with complexity type CMPLX_N ) needs to combine with an N2 to construct a Verb phrase. In addition, it is necessary that V has a separable component equal to the headword (feature HEAD ) of N2. Thus, this rule 4.4.3 Verb phrases for raising verbs In Persian, some verbs in some syntactic structures have the raising property (Karimi 2008 ), such as  X   X   X   X   X   X   X   X   X   X   X   X  [ be -nazar residan ]  X  to seem  X  in sentences like sentence and leave the subject gap , for example:  X   X  [ ubenazar position).

We de fi ne the binary feature RAISING for Verb category and Verb phrases. This feature takes {+} value for verbs or Verb phrases having the raising property. For To cover raising structures, several rules are set, such as rule ( 12 ):
V2 PER ? x ; PLU ? y  X ! V1 RAISING  X   X  S SUBJ ; COMP ; PER ? x ; PLU ? y  X  xaste b X shad ]  X (he/she) seems to be tired X . In these structures, the complement sentence does not contain the subject; as a result, it may be combined with an N2 (as a subject) later. Therefore, the V2 takes the features PER and PLU from the complement sentence. 4.4.4 Verb phrases for passive verbs In Persian, passive verbs, for various tenses, are constructed by adding different inflectional forms of the copulative verb  X   X   X   X   X  [ shodan ]  X  X o become X  to past eaten X .
 The passive sentences contain a predicate and a transitive verb (in passive form). In these sentences, the subject is replaced by the object; therefore, the structure of passive Verb phrases is very similar to the structure of intransitive Verb phrases (rule ( 13 )).
 4.5 Sentence The Sentence (S) is the initial symbol in our grammatical model. If a sequence of words leads to S, after parsing by grammar, then it is a valid sentence in Persian. The Sentence is usually constructed by combination of a Noun phrase (N2) and a Verb phrase (V2). However, because of the Null-subject nature of Persian, a V2 can solely construct a sentence. In addition, two or more sentences can join and construct a complex sentence. 4.5.1 Verb and subject agreement In Persian, animate subjects must agree with the verb in plurality (number) and person, but for plural inanimate subjects, the verb of the sentence does not need the number agreement.

Rule ( 14 ) shows verb and subject agreement for animate subjects. For number agreement checking, the binary feature ANIMATE is considered for Noun phrases. The {+} value for ANIMATE describes that the specified Noun phrase is an animate one.
 S SUBJ  X   X ! N2 PER ? x ; PLU ? y ; ANIMATE  X   X  V2 PER ? x ; PLU ? y ; SUBJ  X   X  4.5.2 Other structures of sentence To cover different structures of sentence, several rules are set for Null-subject sentences (rule ( 15 )), Conjunction and coordination in sentence level (rules ( 16 ) and ( 17 )), and adjunction of various phrases (rule ( 18 )).

In all, about 120 grammatical rules were written down to describe various syn-tactic structures of Persian. Table 3 shows the number of rules set for each syntactic phrase. 5 Structures not covered In the previous sections, we mentioned the capabilities of our grammar to cover various syntactic structures of Persian. Despite its capabilities, however, the proposed grammar has several deficiencies describing certain syntactic structures. As a result, this grammar does not accept some grammatical syntactic structures. The main deficiencies of our grammar are as below:  X  This grammar has some limitations in coordination. In fact, coordination is  X  This grammar encounters some problems in the description of transitivity of Ex. 2 (a) as a transitive verb:  X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X   X  This grammar cannot describe the verb phrases containing complex verbs of  X  In the current implementation of the grammar, the words containing copula 6 Presently, these words are considered V2, N2, or ADJ2 in the lexicon. However, they must be treated as Noun or Adjective with some additional features.
The other problem is the attachment of copula to Noun phrase or Adjective Kashan X . In these cases, the copula is attached to the last word of the phrase but it really belongs to the entire phrase. This problem is not resolved in current implementation of the grammar.  X  Our grammar cannot handle reflexive pronouns (such as  X   X   X   X   X   X  [ xodam ]  X  Our grammar cannot handle the combination of preposition and object
Another deficiency of the proposed grammar, when used for real applications, is the lack of a morphological module. This deficiency makes us include various inflectional forms of each word (especially verbs) into the lexicon. Using a morphological module, one can introduce only the simple form of words into the lexicon and construct all inflectional forms of words by this module.
 Beside grammatical rules, there is a vocabulary containing the known words. The words are annotated by syntactic categories and their features. Our grammar only accepts the structures that contain the known words. Therefore, the grammar cannot handle unseen words. In this work, the size of vocabulary is about 1,200 words. 6 Experimental results To evaluate the proposed grammatical model, we arranged two types of experiments. In the first step, we used our grammar in parsing a number of Persian sentences. The Persian sentences were selected from the Large-FARSDAT speech database. The texts of the Large-FARSDAT database have been selected from recent newspaper texts, so they are suitable for evaluation of our grammar. We utilized a bottom-up chart parser (Allen 1995 ) and tried to parse 100 selected sentences by this parser. The Ezafe marker was written explicitly for the words that have Ezafe enclitic. 7 The selected sentences contained various syntactic structures of Persian. The results of parsing showed that the grammar could accept 89 of the 100 sentences. However, the accepted sentences were not necessarily parsed correctly. Examples of the accepted and rejected sentences are shown in Tables 4 and 5 . All test sentences are listed in Appendix .

To evaluate the parsing results, we calculated precision and recall based on the standard definitions (Manning and Schu  X  tze X  X  1999 ). The precision is how many brackets in the parse match those in the correct tree and the recall measures how many brackets in the correct tree are in the parse. Considering the best results of bottom-up chart parser and the correct parses of 100 sentences, the precision is 85.7% and the recall is 83.4%; therefore, the f -score will be 84.5%.
In the second step, we evaluated our grammatical model in a continuous speech recognition application. The Large-FARSDAT speech database was used for training acoustic models. The 100 utterances mentioned above were set aside and reserved for the evaluation phase. The Bigram language model was used as a statistical model in the CSR system. The vocabulary of the CSR system contained about 1,200 words. Each word was annotated by related syntactic categories and their features. We used a robust parser mentioned in Chein et al. ( 1993 ) for rescoring N-best output hypotheses of the speech recognition system. The robust parser tried to parse each hypothesis and select the hypothesis that was completely parsed with the highest acoustic score. If there was no grammatical hypothesis, the parser returned the first hypothesis that contained the largest grammatical constituent.

We arranged several CSR experiments with and without grammar and bigram model. Table 6 shows the word error rate (WER) of the CSR system. The results show that if we do not use any statistical model, our grammar improves the word error rate by about 27.7% (13.5% absolutely). In the presence of the bigram language model, our grammar improves the word error rate by about 31% (4.1% absolutely).
 7 Summary and conclusion In this work, a computational grammar for Persian based on the GPSG formalism was proposed. Several syntactic categories were introduced in addition to the basic syntactic categories, and the X-bar theory was followed for defining the syntactic phrases. After investigating various syntactic structures of modern Persian, we tried to describe them according to a simplified GPSG model. The proposed computa-tional grammar can be used in applications that need syntactic analysis of Persian; however, we developed it for continuous speech recognition application. The main advantage of this grammar, in comparison with previous works, is its wider coverage of Persian syntactic structures. It was demonstrated that this grammar is capable of covering various structures of Noun phrases (consisting of noun followed and/or preceded by different types of post-modifiers and pre-modifiers), Verb phrases (containing various transitive verbs, auxiliary verbs, complex verbs, raising verbs), Prepositional phrases, Adjective and Adverbial phrases (Adjective/Adverb followed by a Prepositional phrase and/or preceded by a degree adverb), and different types of simple and complex sentences. In addition, the proposed grammar could account for the free-word-order tendency of Persian in the construction of Verb phrases and sentences. We intend to extend the coverage of the proposed grammar and resolve its mentioned deficiencies in our future research. Appendix: Test sentences References
