 Many approaches to extracting semantic lexicons extend the unsupervised bootstrapping framework (Riloff and Shepherd, 1997). These use a small set of seed examples from the target lexicon to identify contextual patterns which are then used to extract new lexicon items (Riloff and Jones, 1999).

Bootstrappers are prone to semantic drift, caused by selection of poor candidate terms or patterns (Curran et al., 2007), which can be reduced by semantically constraining the candidates. Multi-category bootstrappers, such as NOMEN (Yangar-ber et al., 2002) and WMEB (McIntosh and Curran, 2008), reduce semantic drift by extracting multiple categories simultaneously in competition.

The inclusion of manually-crafted negative cate-gories to multi-category bootstrappers achieves the best results, by clarifying the boundaries between categories (Yangarber et al., 2002). For exam-ple, female names are often bootstrapped with the negative categories flowers (e.g. Rose , Iris ) and gem stones (e.g. Ruby , Pearl ) (Curran et al., 2007). Unfortunately, negative categories are dif-ficult to design, introducing a substantial amount of human expertise into an otherwise unsupervised framework. McIntosh (2010) made some progress towards automatically learning useful negative cate-gories during bootstrapping.

In this work we identify an unsupervised source of semantic constraints inspired by the Coupled Pat-tern Learner ( CPL , Carlson et al. (2010)). In CPL , relation bootstrapping is coupled with lexicon boot-strapping in order to control semantic drift in the target relation X  X  arguments. Semantic constraints on categories and relations are manually crafted in CPL . For example, a candidate of the relation I S -C
EO O F will only be extracted if its arguments can be extracted into the ceo and company lexicons and a ceo is constrained to not be a celebrity or politician . Negative examples such as I S -C
EO O F ( Sergey Brin , Google ) are also introduced to clarify boundary conditions. CPL employs a large number of these manually-crafted constraints to im-prove precision at the expense of recall (only 18 I S -C
EO O F instances were extracted). In our approach, we exploit open relation bootstrapping to minimise semantic drift, without any manual seeding of rela-tions or pre-defined category lexicon combinations.
Orthogonal to these seeded and constraint-based methods is the relation-independent Open Informa-tion Extraction (O PEN IE) paradigm. O PEN IE sys-tems, such as T EXT R UNNER (Banko et al., 2007), define neither lexicon categories nor predefined re-lationships. They extract relation tuples by exploit-ing broad syntactic patterns that are likely to indi-cate relations. This enables the extraction of inter-esting and unanticipated relations from text. How-ever these patterns are often too broad, resulting in the extraction of tuples that do not represent rela-tions at all. As a result, heavy (supervised) post-processing or use of supervised information is nec-essary. For example, Christensen et al. (2010) im-prove T EXT R UNNER precision by using deep pars-ing information via semantic role labelling. Rather than relying on manually-crafted category and relation constraints, Relation Guided Bootstrap-ping ( RGB ) automatically detects, seeds and boot-straps open relations between the target categories. These relations anchor categories together, e.g. I S -C
EO O F and I S F OUNDER O F anchor person and company , preventing them from drifting into other categories. Relations can also identify new terms. We demonstrate that this relation guidance effec-tively reduces semantic drift, with performance ap-proaching manually-crafted constraints.

RGB can be applied to any multi-category boot-strapper, and in these experiments we use WMEB (McIntosh and Curran, 2008), as shown in Figure 1. RGB alternates between two phases of WMEB , one for terms and the other for relations, with a one-off relation discovery phase in between.
 Term Extraction
The first stage of RGB follows the term extraction process of WMEB . Each category is initialised by a set of hand-picked seed terms. In each iteration, a category X  X  terms are used to identify candidate pat-terns that can match the terms in the text. Seman-tic drift is reduced by forcing the categories to be mutually exclusive (i.e. patterns must be nominated by only one category). The remaining patterns are ranked according to reliability and relevance , and the top-n patterns are then added to the pattern set. 1
The reliability of a pattern for a given category is the number of extracted terms in the category X  X  lex-icon that match the pattern. A pattern X  X  relevance weight is defined as the sum of the  X  2 values be-tween the pattern ( p ) and each of the lexicon terms ( t ): weight( p ) = P t  X  T  X  2 ( p,t ) . These metrics are symmetrical for both candidate terms and pattern.
In WMEB  X  X  term selection phase, a category X  X  pat-tern set is used to identify candidate terms. Like the candidate patterns, terms matching multiple cate-gories are excluded. The remaining terms are ranked and the top-n terms are added to the lexicon. Relation Discovery
In CPL (Carlson et al., 2010), a relation is instanti-ated with manually-crafted seed tuples and patterns. In RGB , the relations and their seeds are automati-cally identified in relation discovery. Relation dis-covery is only performed once after the first 20 iter-ations of term extraction, which ensures the lexicons have adequate coverage to form potential relations.
Each ordered pair of categories ( C 1 ,C 2 ) = R 1 , 2 is checked for open (not pre-defined) relations be-tween C 1 and C 2 . This check removes all pairs of terms, tuples ( t 1 ,t 2 )  X  C 1  X  C 2 with freq( t 1 ,t 2 5 and a cooccurrence score  X  2 ( t 1 ,t 2 )  X  0 . 2 If R 1 , 2 has fewer than 10 remaining tuples, it is discarded.
The tuples for R 1 , 2 are then used to find its ini-tial set of relation patterns. Each pattern must match more than one tuple and must be mutually exclusive between the relations. If fewer than n relation pat-terns are found for R 1 , 2 , it is discarded. At this stage we have identified the open relations that link cate-gories together and their initial extraction patterns.
Using the initial relation patterns, the top-n mu-tually exclusive seed tuples are identified for the re-lation R 1 , 2 . In CPL , these tuple seeds are manually crafted. Note that R 1 , 2 can represent multiple rela-tions between C 1 and C 2 , which may not apply to all of the seeds, e.g. isCeoOf and isEmployedBy . We discover two types of relations, inter-category relations where C 1 6 = C 2 , and intra-category rela-tions where C 1 = C 2 .
 Relation Extraction The relation extraction phase involves running WMEB over tuples rather than terms. If multiple re-lations are found, e.g. R 1 , 2 and R 2 , 3 , these are boot-strapped simultaneously, competing with each other for tuples and relation patterns. Mutual exclusion constraints between the relations are also forced.
In each iteration, a relation X  X  set of tuples is used to identify candidate relation patterns, as for term extraction. The top-n non-overlapping patterns are extracted for each relation, and are used to identify the top-n candidate tuples. The tuples are scored similarly to the relation patterns, and any tuple iden-tified by multiple relations is excluded.

For tuple extraction, a relation R 1 , 2 is constrained to only consider candidates where either t 1 or t 2 has previously been extracted into C 1 or C 2 , respec-tively. To extract a candidate tuple with an unknown term, the term must also be a valid candidate of its associated category. That is, the term must match at least one pattern assigned to the category and not match patterns assigned to another category.
This type-checking anchors relations to the cat-egories they link together, limiting their drift into other relations. It also provides guided term growth in the categories they link. The growth is  X  X uided X  because the relations define, semantically coher-ent subregions of the category search spaces. For example, I S C EO O F defines the subregion ceo within person . This guidance reduces semantic drift. To compare the effectiveness of RGB we consider the task of extracting biomedical semantic lexi-cons, building on the work of McIntosh and Curran (2008). Note however the method is equally appli-cable to any corpus and set of semantic categories.
The corpus consists of approximately 18.5 mil-lion MEDLINE abstracts (up to Nov 2009). The text was tokenised and POS -tagged using bio-specific NLP tools (Grover et al., 2006), and parsed using the biomedical C &amp; C CCG parser (Rimell and Clark, 2009; Clark and Curran, 2007).

The term extraction data is formed from the raw 5-grams ( t 1 , t 2 , t 3 , t 4 , t 5 ), where the set of candi-date terms correspond to the middle tokens ( t 3 ) and the patterns are formed from the surrounding tokens ( t 1 , t 2 , t 4 , t 5 ). The relation extraction data is also formed from the 5-grams. The candidate tuples cor-respond to the tokens ( t 1 ,t 5 ) and the patterns are formed from the intervening tokens ( t 2 ,t 3 ,t 4 ).
The second relation dataset (5gm + 4gm), also in-cludes length 2 patterns formed from 4-grams. The final relation dataset (5gm + DC ) includes depen-dency chains up to length 5 as the patterns between terms (Greenwood et al., 2005). These chains are formed using the Stanford dependencies generated by the Rimell and Clark (2009) parser. All candi-dates occurring less than 10 times were filtered. The sizes of the resulting datasets are shown in Table 1.
We follow McIntosh and Curran (2009) in us-ing the 10 biomedical semantic categories and their hand-picked seeds in Table 2, and manu-ally crafted negative categories: amino acid , animal , body part and organism . Our eval-uation process involved manually judging each ex-tracted term and we calculate the average precision of the top-1000 terms over the 10 target categories. We do not calculate recall, due to the open-ended nature of the categories. Table 3 compares the performance of WMEB and RGB , with and without the negative categories. For RGB , we compare intra-, inter-and mixed relation types, and use the 5gm format of tuples and relation patterns. In WMEB , drift dominates in the later iter-ations with  X  19% precision drop between the first and last 500 terms. The manually-crafted negative categories give a substantial boost in precision on both the first and last 500 terms (+11.5% overall).
Over the top 1000 terms, RGB significantly out-performs the corresponding WMEB with and with-out negative categories ( p &lt; 0 . 05 ). 3 In particu-lar, inter-RGB significantly improves upon WMEB with no negative categories (501-1000: +13.5%, 1-1000: +8.8%). In similar experiments, NEG -FINDER , used during bootstrapping, was shown to increase precision by  X  5% (McIntosh, 2010). Inter-RGB without negatives approaches the precision of WMEB with the negatives, trailing only by 2.7% overall. This demonstrates that RGB effectively re-duces the reliance on manually-crafted negative cat-egories for lexicon bootstrapping.

The use of intra-category relations was far less effective than inter-category relations, and the com-bination of intra-and inter-was less effective than just using inter-category relations. In intra-RGB the categories are more susceptible to single-category drift. The additional constraints provided by anchor-ing two categories appear to make inter-RGB less susceptible to drift. Many intra-category relations represent listings commonly identified by conjunc-tions. However, these patterns are identified by mul-tiple intra-category relations and are excluded.
Through manual inspection of inter-RGB  X  X  tuples and patterns, we identified numerous meaningful re-lations, such as isExpressedIn ( prot , cell ). Relations like this helped to reduce semantic drift within the CELL lexicon by up to 23%.

Table 4 compares the effect of different relation pattern representations on the performance of inter-RGB . The 5gm+4gm data, which doubles the num-ber of possible candidate relation patterns, performs similarly to the 5gm representation. Adding depen-dency chains decreased and increased precision de-pending on whether negative categories were used. In Wu and Weld (2010), the performance of an O
PEN IE system was significantly improved by us-ing patterns formed from dependency parses. How-ever in our DC experiments, the earlier bootstrap-ping iterations were less precise than the simple 5gm+4gm and 5gm representations. Since the chains can be as short as two dependencies, some of these patterns may not be specific enough. These results demonstrate that useful open relations can be represented using only n -grams. In this paper, we have proposed Relation Guided Bootstrapping ( RGB ), an unsupervised approach to discovering and seeding open relations to constrain semantic lexicon bootstrapping.
Previous work used manually-crafted lexical and relation constraints to improve relation extraction (Carlson et al., 2010). We turn this idea on its head, by using open relation extraction to provide con-straints for lexicon bootstrapping, and automatically discover the open relations and their seeds from the expanding bootstrapped lexicons.

RGB effectively reduces semantic drift delivering performance comparable to state-of-the-art systems that rely on manually-crafted negative constraints. We would like to thank Dr Cassie Thornley, our sec-ond evaluator, and the reviewers for their helpful feedback. NICTA is funded by the Australian Gov-ernment as represented by the Department of Broad-band, Communications and the Digital Economy and the Australian Research Council through the ICT Centre of Excellence program. This work has been supported by the Australian Research Council under Discovery Project DP1097291 and the Capital Markets Cooperative Research Centre.

