 In the next evolution step of web, termed semantic web[1], vast amounts of enriched with uniformed RDF/OWL-based semantics for automatic discovery, seamless communication and dynamic integration. Meanwhile, the Grids[2] is emerging as a building infrastructure that supports coordinated management and new paradigm where a huge amount of decentralized, independently administrated resources can be involved in the grid-scale sharing cycle. to address above challenges and provide a semantic solution capable of deployment in the user to semantically and dynamically register a database resource to an ontology-based index, query distributed databases using RDF-based queries. We have also developed a DartFlow [4] system enabling th e user to easily and conveniently register matchmaking based on semantic concepts. We explore the essential and fundamental roles played by semantics, and develop a Semantic Browser [5] with some innovative semantic functionalities such as graphically browsing RDF/OWL ontologies, visually constructing semantic queries and semantically registering the data and process resources. architecture of DartGrid, Section 3 elaborat es on the implementation of the Semantic DartGrid, Section 4 mentions some related work, and Section 5 gives the summary. collective service layer, and client layer. The main functionality and characteristics of each layer are elaborate on as follows. 2.1 Resource Layer Two types of resources are considered in Da rtGrid design; they are data and process resources within a virtual organization.  X  resources. With DartGrid, we can access, integrate, and manage these data resources in a semantically meaningful way;  X 
Process Resources: includes e-business processes, e-government processes, e-leaning processes and so on. Process management in DartGrid refers to the management of process lifecycle, including process design, process verification, process execution, process monitoring and process mining. 2.2 Basic Service Layer services are designed for single data resources and process resources.  X 
Basic Services for Data Resources  X  Database Access Service: supports the typical remote operations on database  X  Database Information Service: supports the inquiring about the meta information  X 
Basic Services for Process Resources  X  Process Verification Service: supports the verification of process definition from 2.3 Semantic Service Layer networked environment, semantic is a fundamental issue to achieve the goal of seamless data integration and dynamic process coordination.  X  Data Semantic Service: DSemS DSems is used to export source database X  X  relational schema as RDF/OWL semantic description. Typically, local DBA publishes source data semantic of a specific browsing the source semantic, using the source semantic to define semantic queries or schema to its corresponding RDF/OWL description.  X  Process Semantic Service: PSemS PSemS is used to export processes as OWL-S descriptions. OWL-S is semantic markup language for web service composition. We argue that process composition is the same as service composition in grid environment. This is because all the processes service-oriented. Process designers publish the semantic description of their processes by PSemS. Others can inquire of this service to brows the process semantic, to use the process description semantic to shared ontologies.  X  Ontology Service: OntoS Ontologies could be viewed as mediated sc hema and are published by OntoS for user to browse RDF/OWL, define semantic queries and do semantic mapping between local data/process semantic to shared ontologies.  X  Semantic Registration Service: SemRS Semantic registration establishes the mappings from source data semantic and process semantic to shared ontologies. SemRS maintains the mapping information and We X  X e developed a visual tool to facilitate the mapping tasks[5].  X  Semantic Query Service: SemQS For database resources, SemQS accepts semantic queries, inquires of SemRS to converted into SQL queries. The results of SQL queries will be wrapped by RDF/OWL semantic again and what SemQS returns is always in RDF/XML format. For Process Resources, SemQS accepts semantic queries, inquires of SemRS to find function. The returned result is process definition files both in OWL-S format and its original process definition language format.
 2.4 Collective Service Layer semantic services of lower level.  X 
Collective Services for Data Resources:  X  Data Mining Service: Upon the semantic services, we X  X e developed a data  X 
Collective Services for Process Resources:  X  Process Composite Service: This service is used to compose several component  X  Process Monitoring Service: This service maintains an entire view of current 2.5 Semantic Browser Client DartGrid provides end-user with a uniform visual interface, called Semantic Browser Browser mainly offers the following functionalities:  X  Users can browse the RDF/OWL semantics graphically;  X  Users can visually construct a semantic query;  X  Users can perform semantic mapping from resource schema to RDF/OWL The principal technical characteristics of DartGrid are highlighted as below:  X  All services are defined according to ggf  X   X  X  OGSA/WSRF specification;  X  We use RDF/OWL  X  to define the mediated schema, i.e., source data semantic  X  We devise a semantic query language called Q3 [8], and follows the syntax 3.1 Semantic Browser (see figure 2), which manipulates distributed services and resources at semantic layer interactions and functionalities. Semantic browser is a lightweight client and accesses the Grid Services of DartGrid to perform high-level tasks. 
The Grid entry field, navigator bar and main menu on Semantic Browser, are just in Semantic Browser, which distinguish it from others. For various Grid Services, we accordingly develop semantic plug-ins, which are independent and optional functional modules in Semantic Browser. A semantic plug-in usually contains Grid Service stubs and remotely accesses a specific category of Grid Services.  X 
VO Plug-in accesses the core Globus services and dynamically creates an intuitive tree view on various Grid Services delivered in the DartGrid VO. Users can select a needed service simply by clicking a tree node and ask Semantic Browser to access the right service through the GSH. The description about a Grid Service can be viewed by expanding a tree node, which stands for a service instance.  X 
Ontology Plug-in accesses the Ontology Service and provides users with a hierarchical class tree. Users can browse the RDF/OWL semantics graphically just by expanding class tree nodes, which is so called Semantic Browse.  X 
End-users can use Data Registration Plug-in to dynamically register new data 
Semantic Browse.  X  Process Registration Plug-in provides users with the function similar to Data dynamically (see Figure 3).  X  Semantic Query Plug-in generates a dynamic query interface (the floating panel in constraint X , in the querying menu (see Figure 2). When users carry out one of the will be automatically constructed in the Q3 query panel. By combining a group of sequential operations, a complete Semantic Query request will be generated. Query results are returned as semantic information and displayed as RDF semantic graphs. 3.2 Data Management in DartGrid query, by two working scenarios from TCM application domain. 3.2.1 Semantic Registration for Database sharing purpose. SemRS maintains a semantic registry functioning as : 1. An ontology-based index for database. It maintains a taxonomy for classifying and enables the automatic discovery of data objects; 2. A global repository maintaining information about the mapping from local database relational schema to shared RDF/OWL ontologies. 
The following TCM scenario illustrates how to register a db-resource to SemRS. In this case, a TCM database provider wants to add his compound-medicine ( ) database resources into the TCM-VO for sharing. Publish his databases as a Data Service; Step 1. Visit the data service from Semantic Browser. This will retrieve the data Step 2. Schema of the databases and display it in the db-registering panel. Step 3. At the same time, he opens the TCM ontology service and locates the concept compound-medicine in it. Firstly, he maps the concept to the compound-medicine registration entry in XML format. entry are valid. 3.2.2 Semantic Query Processing in DartGrid complex queries using RDF/OWL semantic in DartGrid. The following TCM working scenario illustrates how user can semantically query what tcm-compound-medicine could help treat influenza from a TCM database grid.
 navigates in the TCM-ontologies by semantic browser. Step 2. Visual Semantic Query Construction: user locates the concept of tcm-compound-medicine( ) in the tcm-ontology; selects its properties he/she want to retrieve, for example, the name property of ; by the semantic-link  X  X uredBy X  defined in tcm-ontology between the concept Medicine and Disease , user the procedure of constructing a semantic query. Step 3. Semantic Query Parsing: The Q3 query string will be submit to the SemQS for semantic query processing. Firstly, SemQS inquire of SemRS about which ontologies and database schema; secondly, with the mapping information ,SemQS databases for data retrieval.
 stream in RDF/XML format in which all semantics of the concepts such as ( ) are added. As a result, user could browse the result semantically again. 3.3 Process Management in DartGrid Process management here refers to the management of serviceflow in DartGrid[4]. It serviceflow mining. All phases in the lifecycle can be divided into two categories, the build-time phase and the run-time phase. 3.3.1 Process Management in Build-Time Phase While building a serviceflow, there is some initial work to be done. Component web service or grid service needs to be register ed into the service community in DartGrid services. To do that, a graphic service registration portal as Figure 3 shows has been implemented for service providers to register their applied services at semantic level. Using this portal, service providers only need to do some mappings between ontology mapping information between ontology concepts and service elements. Based on the semantic information embodied in those applied services, automatic service discovery DartGrid. 
When the service community has been filled with all kinds of applied web service flexibility and usability to serviceflow, DartGrid supports both static activity node and dynamic activity node in serviceflow. The former refers to those nodes combined with with an OSQL statements. OSQL (Ontology Service Query Language) is designed to these two kinds of nodes. generated. After that, the Process Verification Service will be invoked to validate the serviceflow from both logic aspect and syntax aspect. 3.3.2 Process Management in Run-Time Phase s h o w n a s F i g u re 5. mapping including domain mapping and document structure mapping; The focus of Edutella [12] is to provide query and storage services for RDF, but with the ability to use many different underlying stores including database. 
The other goal of DartGrid is to management of service-oriented workflow or serviceflow. This issue has allured much attraction both from industry and Distributed Information Systems (LSDIS) Lab at the University of Georgia to build a and composition. SELF-SERV [14] is a platform where web services are declaratively composed and executed in a peer-to-peer environment. A DAML-S based prototype for semi-automatic composition of services is proposed in [15]. The detail comparison between DartGrid and other systems can be found in [4]. the challenge of web-scale information sharing; secondly, we have explored the process management; thirdly, we X  X e designed and implemented several service for control and optimize the query processing. We are also planning to develop a complete and integrated management console for database grid and service flow. 
