 Although community discovery has been studied extensively in the Web environment, limited res earch has been done in the case of free text. Co-occurrence of words and entities in sentences and documents usually implies conn ections among them. In this paper, we investigate the co-occu rrences of nam ed entities in text, and mine com munities am ong these entities. We show that identify ing com munities from free text can be transform ed into a graph clustering problem. A hierarchical clustering algorithm is then proposed. Our experiment shows that the algorithm is effective to discover nam ed entity com munities from text documents. H.3 [ Information storage and retrieval ]: Ge neral I.5.3 [ Cluste ring ]: Algorithms. Algorithms, Experimentation. com munity , graph clustering, nam ed entities. Knowledge discovery in social networks has attracted much attention due to its successful app lication in Web search engines. PageRank [1] and HITS [5] are two well-known Web page ranking algorithms. They regard a collection of Web pages as a social network, and evaluate individual page importance by analy zing the Web link structure. In addition, HITS discovered that there exist m ultiple Web com munities am ong relevant Web pages when the query term has multiple m eanings. A W eb community can be defined as a group of Web pages that are more closely linked to their group peers than those outside of the group. It usually consists of Web pages with the same them e. A ty pical exam ple is that query  X  X aguar X  returns three m ajor W eb com munities, respectively on the video game, the Football team, a nd the autom obile m odel. We believe that the concept of co mmunity also exists in free text. Different from Web pa ges, text documents do not contain any explicit linkage. However, there are m any nam ed entity term s in text documents. We believe that there are relationships among those nam ed entities co-occurring in the sam e context, which can be cons idered as an im plicit link between them . To identify nam ed entity com munities from text, we first convert text docum ents into a nam ed entity graph by mapping each nam ed entity to a vertex, and each sentence containing nam ed entities to an edge. Then we use a bottom up (agglomerative) clustering algorithm to obtain the final com munities. The work on community structure discovery on the Web first appeared in the HITS algorithm [5] . [3] approached the W eb com munity is sue in a W eb graph from a local pers pective. The authors introduced the concept of  X  curvature X  for each vertex v to meas ure how well connected v  X  X  neighborhood is. Moreover, the authors have made an observa tion that community expands predominantly by triangles sharing a common side. The com munity concept has als o been s tudied in other cas es. [2] applied it in Word Sense Disambiguation problem.  X  X ommunity  X  in their work consists of words having similar senses. Another related research focused on clustering relations of named entities in text corpora [4] . There are two major tasks in our work. The first one is to acquire the weighted graph consisting of nam ed entities. Thereafter, we cluster the nam ed entity graph into com munities. First, we need a collection of documents regarding a certain nam ed entity . W e issue m ajor com pany nam es to the Financial Times (FT) corpus as queries. If th e term frequency in an article is larger than 1, we regard this article as relevant. The number of retrieved article ranges from 300-500. Second, we extract all the sentences containing more than one entity  X  X  nam e from the docum ent collection. F inally , we m ap the s elected s entences into a weighted undirected graph. The ve rtices in this graph are entity nam es, and the edges are co-occurrences of nam es.
 We propose a hierarchical clustering algorithm to generate com munities from the nam ed entity graph. Let us introduce som e definitions below.
 Edge weight : We use the mutual information between vertices a and b, I (a ,b), as the edge weight. The following is the equation ( a , b ). f(v) , v  X  V , is the incidence probability of vertex v . Triangle : In a graph G = ( V , E ), if a  X  V , b  X  V , c  X  V , and edges (a, b)  X  E , (a, c)  X  E , and (b, c)  X  E , we s ay vertices a, b, c form a triangle. The cohesion of a triangle is measured by the weight of its weakes t edge. Similarity between Triangles : If two triangles share an edge, we assign the sum of the cohesion value of two triangles as their similarity . If two triangles do not share any edge, we assign their sim ilarity to 0. Two triangles are fully linked if m erging the two triangles by the common edge can generate a complete graph of four vertices. There are two assumptions for our algorithm: 1. Each com munity has a cor e , which is composed by strongly 2. Each triangle belongs to only one com munity , but each vertex The procedures of our cluste ring algorithm are as follows : 1. Triangle Extraction. We extract all triangles from the graph 2. Sim ilarity Calculation. From the triangles extracted, we 3. Pre-clustering. W e extract all fully linked triangle pairs. If any 4. Triangle Clustering. We traverse the sorted triangle pairs. For Clearly , our algorithm us es autom atically form ed cores as seeds and does not need the number of clus ters to be s pecified by us er. Table 1 shows our experim ent results. Colum n 1 gives the entity nam e. Colum n 2 lists the com munity entities in descending order of their im portance, which was m eas ured by the mutual inform ation sum between the entity and its com munity peers. To summarize a community theme, we extracted nouns from co-occurrence sentences, and listed the top nouns in column 3. We also m anually added rem arks on the com munities in colum n 4. This paper studied the problem of m ining com munities from free text. By exploiting the nam ed entity co-occurrence, we m apped free text docum ent into a nam ed entity graph. Moreover, we proposed an effective hierarchical clustering algorithm. Our experimental results show th at our clustering algorithm can effectively discover interesting com munities. [2] Dorow, B. and Widdows, D. Discovering corpus-specific [3] Eckmann, J., and Moses, E. Curvature of co-links uncovers [4] Hasegawa, T., and Sekine, S ., and Grishman, R. Discovering [5] Kleinberg, J. Authoritative sources in a hy perlinked 
