 Pattern classification approaches to analyzing functional neuroimaging data have become increas-ingly popular [12] [3] [4]. These approaches allow one to use well-founded classification methods to test whether the imaging data contains enough information to discriminate between different con-ditions. They may also lead to insight into underlying neural representations, highlighting brain regions that are most informative with respect to particular experimental variables.
 One difficulty in applying these models is the paucity of data: the number of images available to analyze is typically very small relative to the data dimensionality, particularly if one does not want to restrict a priori the input to subsets of the voxels. Generative models are therefore of great interest, because building a density model of the imaging data itself can often uncover features of the data that are useful for classification as well as for generation. In regimes in which the number of training examples is relatively small, it has been shown that classifiers based on generative models can out-perform discriminative classifiers, e.g., naive Bayes classifiers can beat logistic regression [11]. In this paper we investigate ways of using generative models to improve the discrimination of dif-ferent conditions in functional neuroimaging data. Our primary interest with respect to the imaging data is to elucidate the brain changes that occur during recovery from a stroke. Towards this aim, we define an early-late discrimination task to see if the learning approach can find properties that distinguish pre-recovery from post-recovery scans. A set of fMRI volumes can be modeled using a two-layer network called a  X  X estricted Boltzmann Machine X  (RBM) [5], in which stochastic  X  X isible units X  are connected to stochastic  X  X idden units X  using symmetrically weighted connections. The visible units of the RBM correspond to voxels, while the hidden units can be thought of as feature detectors. In the typical RBM, both visible and hidden units are binary, but we use a version in which the visible units are continuous and have Gaussian marginal distributions [15] [7] [1]. For simplicity, and since we are free to scale the data, we choose unit variance for the marginal distributions of the visible units.
 The energy of the joint configuration ( v , h ) of the visible and hidden units is where w ij ,b i ,c j are fixed parameters. The joint distribution over visible and hidden variables is with partition function Z := R d u P g exp (  X  E ( u , g )) .
 The marginal distribution over the visible units can be expressed as: where F is the free energy : The marginal distribution over the visible units is typically intractable because of the partition func-tion Z . However Gibbs sampling can be used to sample from an approximation to the marginal distribution, since the conditional probability distributions P ( v | h ) and P ( h | v ) are tractable: the hidden units are the same as for binary-only RBMs.
 The aim of generative training of an RBM is to model the marginal distribution of the visible units P ( v ) . In maximum likelihood learning, the aim is to minimize the negative log probability of the training data, where S is the training set and  X  is the vector of all parameters w ij ,b i ,c j . The gradient of this function is intractable, however there is an approximation to maximum likelihood learning called Contrastive Divergence (CD), which works well in practice [5]. We use a n -step version of CD, with n equal to either 3 or 6 . At each iteration, the parameter increments are: In this definition, angle brackets denote expected value over a certain distribution over the visible 0 indicates that the data distribution is used, i.e., visible units are given values corresponding to ob-served fMRI volumes; while a subscript n indicates that n steps of Gibbs sampling have been done, beginning at data points, to give an approximation to an expected value over the true distribution P ( v ) . We consider binary classification tasks. The methods clearly generalize to arbitrary numbers of classes. 3.1 Classification via (mostly) generative training We begin by generatively training two independent RBMs, one for each data class. For maximum likelihood learning, the cost function is the negative log probability of the training data: where S A and S B are the training data from classes A and B , and  X  A and  X  B are the parameter vectors for the two RBMs. In practice we regularize by adding a term to this cost function that corresponds to putting a prior distribution on the weights w ij .
 In general, given probabilistic generative models for each of two classes, A and B, data can be classified by Bayes X  theorem. For brevity, we write  X  X  X  for  X  v is of class A X , and similarly for B. If we assume that v is a priori equally likely to belong to both classes, then If the distributions P ( v | A ) and P ( v | B ) are defined by RBMs, then they can be expressed in terms of free energies F A and F B and partition functions Z A and Z B , as in Equation (3). Substituting this into Bayes X  theorem gives where T := log ( Z A /Z B ) . The free energies in this formula can be calculated easily using (4). However the partition functions are intractable for RBMs with large numbers of hidden and visible units. For this reason, we replace the unknown  X  X hreshold X  T with an independent parameter  X  , and fit it discriminatively . (Thus this method is not pure generative training.) The aim of discrim-inative training is to model the conditional probability of the class labels given the visible units. In maximum likelihood learning, the cost function to be minimized is the negative log conditional probability of the class labels of the training data, 3.2 Classification via discriminative training As an alternative to generative training, the function L disc (defined in the previous equation) can be minimized directly, with respect to all parameters simultaneously: the w ij ,b i and c j of both RBMs and the threshold parameter  X  . We use exactly the same model of P ( class of v | v ) as before, summarized in Equation (7). By substituting Equations (7) and (4) into Equation (8) the gradient of L disc with respect to all parameters can be calculated exactly.
 Substituting Equations (7) into Equation (8) gives where S A and S B are the sets of training data in classes A and B .
 The free energies depend on the weights of the RBMs (suppressed in the above equation for ease of notation). If the parameters for the two RBMs are not linked in any way, then any given parameter  X  affects either model A or model B but not both, so either  X  X  B / X  X  = 0 or  X  X  A / X  X  = 0 . From (4) it follows that derivatives for the parameters of model A are: where p j := P A ( h j | v ) . The formulae for model B are the same with opposite sign, and with p j := P B ( h j | v ) . Note that there is no need to assume that both RBMs have the same number of hidden units. We note that discriminative training of a single RBM was suggested in [6] and [8]. 4.1 Data and preprocessing For our numerical experiments, we use the fMRI data from a study of recovery from stroke de-scribed in [14]. A stroke permanently damages part of the brain ( the  X  X esion X ), resulting in loss of the corresponding function. Some function can be recovered over a period of months or years. Since the lesion is still present, the patient must have learned to used other parts of the brain to compensate. Studying stroke patients during recovery with fMRI can help determine what changes in brain function occur during recovery, and to what degree these changes correlate with degree of recovery. The study of [14] analysed mean volumes of activation over 4 regions of interest in each hemisphere. The main conclusion of that paper is that patients with good recovery have higher activations (averaged over all sessions) in the ipsilateral cerebellum.
 Twelve subjects were studied at 1,2,3 and 6 months post-stroke. Due to data irregularities, we study only 9 of these subjects in this paper; Each of the four imaging sessions consisted of four continuous recording runs. During each run, the subject alternated two kinds of hand movement: tapping finger and thumb together, or wrist flexion/extension; with rest breaks in between. The movement was paced auditorily at 1Hz. During a single run, only one hand moved; during the following run, the other hand moved. Within a run, the experimental design was : (3 seconds rest, 6 seconds finger tap, 3 seconds rest, 6 seconds wrist flexion), repeated 8 times.
 The fMRI images, called  X  X olumes X , are recorded every 4 seconds. The volumes are made up of 24 axial (i.e. horizontal) slices of thickness 6mm, and within each slice the pixel size is 2mm  X  2mm . The data for all 9 subjects has been co-registered and motion-corrected using the Automated Image Registration (AIR) package [16]. For computational ease, we retain only 7 horizontal fMRI slices out of an available 24 (slices 2,3,4,5,21,22,23, with 24 being the top of the head), resulting in 10499 voxels. The choice of slices is based on prior assumptions about what parts of the brain are involved in finger and wrist motion. We temporally filter the data by dividing each  X  X ctive X  image (finger or wrist) by the mean of the previous two rest images. We linearly scaled all of the data for each subject in such a way that the each voxel has mean 0 and variance approximately 1 . So as to avoid the long transients intrinsic in fMRI imaging, we discard the first image from each movement block, and all rest images. 4.2 Classification tasks We have studied two binary classification tasks. The first task is to predict whether a given fMRI volume was recorded  X  X arly X  in the study, defined as the first or second recording session (1 or 2 months post-stroke) or  X  X ate X  in the study, defined as the third or fourth recording session (3 or 6 months post-stroke). This task addresses our interest in the long-term changes in brain organisation and function during stroke recovery. The second task is to predict whether the volume was recorded during finger or wrist movement. Both classification tasks are complex, in the sense that each of the two classes is known to be heterogeneous. For example, in the early vs. late task, the  X  X arly X  group is known to contain volumes in four sub-classes: healthy finger movement, healthy wrist movement, impaired finger movement and impaired wrist movement; and similarly for the  X  X ate X  group. In addition, there are many sources of variability between volumes that are extraneous to the classification task and that are present in any fMRI study, including physiological noise, fatigue and attention. 4.3 Classification methods and testing procedures We used compared four basic methods: generatively-and discriminatively-trained pairs of RBMs; logistic regression and K nearest neighbours. Each method was tested on individual fMRI slices and also on the set of 7 slices described above. For the RBMs, minimization of the cost function was by gradient descent, while for logistic regression we used the conjugate gradient algorithm as implemented by Carl Rasmussen X  X  minimize.m . 1 Data for each subject is treated separately. For each subject, the data is split into three subsets: 75% training, 12 . 5% validation and 12 . 5% test. The splitting is done by first partitioning the data into 32 half-runs, each of which contains either all of the finger movement volumes or all of the wrist movement volumes for one run. One half-run contains 8 groups of 5 consecutively-recorded volumes. From each of these half-runs, one of the 8 groups was randomly chosen and assigned to the validation set, a second group was randomly assigned to the test set, and the remaining 6 were assigned to the training set. This random splitting of each half-run into training, validation and test sets was done 20 times with different random seeds, leading to 20 uncorrelated splittings. Each classification method is evaluated on each of the 20 different random splits for each subject. Logistic regression was L1-regularized, and the value of the regularization hyperparameter was chosen by validation. The number of nearest neighbours, K , was also chosen by validation. The RBMs were Cauchy-regularized, which we found to be a slight improvement over L1 regularization. When testing on individual fMRI slices (which vary in size), we used 500 hidden units; while 3500 hidden units were used when testing on the larger set of 7 slices, which contained 10499 voxels. The RBM training algorithm has many variations and hyperparameters, and is very slow to run on data of this size, so rather than doing formal validation, we adjusted the algorithm informally via many experiments on data from two of the subjects, mostly using only slice 4 but sometimes using all 7 slices. These subjects were then included in the test data, so we have not observed a strict separation of training and test data for the RBM-based methods. We note that our implementation of the discriminative gradient inadvertently used a residual variance of 1 / 2 instead of 1 . We also studied various blends of generative and discriminative training of a pair of RBMs, in which the cost function is a convex combination of the negative log likelihood functions, 4.4 Results The following two tables show mean misclassification errors, averaged over all 9 subjects and all 20 splittings of the data from each subject. Following each mean error is the standard deviation of the means for the 9 subjects. The first table shows mean misclassification errors early vs. late classification task: In all cases, the generatively-trained RBMs outperform all of the other methods tested. We omit-ted discriminative training an RBM pair for the large dataset of all 7 slices together, due to the computional expense. 2 The next table shows mean error rates for the finger vs. wrist classification task: For this task, we did discriminatively train an RBM pair on the entire dataset, however due to the computational expense we used only 1000 hidden units instead of the the 3500 used in generative training. Experiments on one subject suggests that the results for discriminative training are not very sensitive to the number of hidden units.
 Figure 1 shows the performance of several convex blends of generative and discriminative training, tested on fMRI Slice 4. Due to the computational intensity, only 5 splittings of the data were tested for each blend. Note that the for the early vs. late task, pure generative training outperforms all other blends; while for the finger vs. wrist task, pure discriminative training outperforms all other blends. This study shows that generative models, and in particular, Restricted Boltzmann Machines, can be very useful in discrimination tasks. It is been shown before that generative training can make use of unlabelled data to improve discriminative performance [7] [6]. The present study, like that of Ng and Jordan [11], shows that generative training can improve discriminative performance even if all data is labelled. Figure 1: Misclassification rates for a combination of (1  X   X  ) times generative training plus  X  times discriminative training, as in Equation (9). The  X  axis has been warped to emphasize values near 0 and 1 . For each  X  value, the mean error rate across all subjects is marked with a circle. The smaller dots, joined by a vertical bar, show mean error rates for individual subjects.
 We studied two methods of training a pair of RBM models: one almost entirely generative, and one discriminative. To use the terminology of Ng and Jordan, the two algorithms form a generative-discriminative pair, since they use exactly the same models of the input data and differ only in the training criterion. We found that training a pair of RBM models generatively rather than discrimina-tively yielded better discriminative performance for one of the two tasks studied. This is consistent with the results of Ng and Jordan, who studied the generative-discriminative pair consisting of naive Bayes and logistic regression and found that naive Bayes can outperform logistic regression. Their theoretical and experimental results suggest that generative training is more likely to be superior to discriminative training when the number of training examples is small compared to the dimension of the input data space. Since fMRI studies are in this regime, generative training looks promising for fMRI-based classification tasks.
 The two tasks studied in the present work are: (i) classify fMRI volumes as having been recorded in either the earlier or later part of the study; and (ii) classify fMRI volumes as corresponding to either finger or wrist movement. We found that generative training yielded better results for the early vs. late task, while discriminative training was superior for the finger vs. wrist task.
 Why does the relative performance of the two methods vary so much between the two tasks? One general observation is that generative training is trying to model many different features at once, many of which may be irrelevant to the discrimination task; whereas, by definition, discriminative models always focus on the task at hand. Thus there is a possibility for generative models to be  X  X istracted X  (from the point of view of discrimination) by rich structure in the data that is extraneous to the discrimination task. It seems reasonable that, the more structure there is in the images that is irrelevant to the discrimination task, the poorer will be the discriminative power of the generative models. We hypothesize that a lot of the complex structure in the fMRI volumes is relevant to early vs. late classification, but that most of it is irrelevant to finger vs. wrist classification. In other words, we hypothesise that the long-term changes during stroke recovery are complex and distributed throughout the brain; and that, by contrast the differences in brain activation between finger and wrist movements are relatively simple.
 It is interesting to compare these results with those of [13] which shows, using the same data as the present study, that linear classification methods perform better than non-linear ones on the finger vs. wrist classification task, while for the early vs. late classification task the reverse is true. We have evaluated blends of generative and discriminative training, as other authors have found that a combination can out-perform both pure generative and pure discriminative training [9][2]. However this did not occur in our experiments for either of the classification tasks.
 From the point of view of neuroscience or medicine, this work has two ultimate aims. The first is to elucidate neural changes that occur during recovery from a stroke. This is why we chose to study the early vs. late task. This classification task may shed light on neural representations, as the regions that change over time will be those that are useful for making this discrimination. The present study identifies a specific method that is very successful at the early vs. late classification task, but does not go on to address the problem of  X  X pening the box X , i.e. shedding light on how the classification method works. Interpreting a set of RBM parameters is known to be more difficult than for linear models, but there are avenues available such as automatic relevance determination [10] that can indicate which voxels are most significant in the discrimination. The second aim is find general classification methods that can eventually be applied in clinical studies to classify patients as likely responders or non-responders to certain treatments on the basis of fMRI scans. We have shown that RBM-based models warrant further investigation in this context. In future work we intend to evaluate such models for their power to generalize strongly across subjects and recording sessions. Acknowledgments We thank Natasa Kovacevic for co-registering and motion-correcting the fMRI data used in this study. This work was supported by the Brain Network Recovery Group through a grant from the James S. McDonnell Foundation (No. 22002082).

