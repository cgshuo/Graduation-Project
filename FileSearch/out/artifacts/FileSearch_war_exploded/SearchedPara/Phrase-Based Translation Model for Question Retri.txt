 Over the past few years, large scale question and answer (Q&amp;A) archives have become an important information resource on the Web. These include the traditional Frequently Asked Questions (FAQ) archives and the emerging community-based Q&amp;A services, such as Yahoo! Answers 1 , Live QnA 2 , and Baidu Zhidao 3 .
Community-based Q&amp;A services can directly re-turn answers to the queried questions instead of a list of relevant documents, thus provide an effective alternative to the traditional adhoc information re-trieval. To make full use of the large scale archives of question-answer pairs, it is critical to have func-tionality helping users to retrieve historical answers (Duan et al., 2008). Therefore, it is a meaningful task to retrieve the questions that are semantically equivalent or relevant to the queried questions. For example in Table 1, given question Q 1 , Q 2 can be re-turned and their answers will then be used to answer Q 1 because the answer of Q 2 is expected to partially satisfy the queried question Q 1 . This is what we called question retrieval in this paper.
 The major challenge for Q&amp;A retrieval, as for most information retrieval models, such as vector space model (VSM) (Salton et al., 1975), Okapi model (Robertson et al., 1994), language model (LM) (Ponte and Croft, 1998), is the lexical gap (or lexical chasm ) between the queried questions and the historical questions in the archives (Jeon et al., 2005; Xue et al., 2008). For example in Table 1, Q 1 and Q 2 are two semantically similar questions, but they have very few words in common. This prob-lem is more serious for Q&amp;A retrieval, since the question-answer pairs are usually short and there is little chance of finding the same content expressed using different wording (Xue et al., 2008). To solve the lexical gap problem, most researchers regarded the question retrieval task as a statistical machine translation problem by using IBM model 1 (Brown et al., 1993) to learn the word-to-word translation probabilities (Berger and Lafferty, 1999; Jeon et al., 2005; Xue et al., 2008; Lee et al., 2008; Bernhard and Gurevych, 2009). Experiments consistently re-ported that the word-based translation models could yield better performance than the traditional meth-ods (e.g., VSM. Okapi and LM). However, all these existing approaches are considered to be context in-dependent in that they do not take into account any contextual information in modeling word translation probabilities. For example in Table 1, although nei-ther of the individual word pair (e.g.,  X  X tuffy X / X  X old X  and  X  X ose X / X  X old X ) might have a high translation probability, the sequence of words  X  X tuffy nose X  can be easily translated from a single word  X  X old X  in Q 2 with a relative high translation probability.
In this paper, we argue that it is beneficial to cap-ture contextual information for question retrieval. To this end, inspired by the phrase-based statistical machine translation (SMT) systems (Koehn et al., 2003; Och and Ney, 2004), we propose a phrase-based translation model (P-Trans) for question re-trieval, and we assume that question retrieval should be performed at the phrase level. This model learns the probability of translating one sequence of words (e.g., phrase) into another sequence of words, e.g., translating a phrase in a historical question into an-other phrase in a queried question. Compared to the traditional word-based translation models that ac-count for translating single words in isolation, the phrase-based translation model is potentially more effective because it captures some contextual infor-mation in modeling the translation of phrases as a whole. More precise translation can be determined for phrases than for words. It is thus reasonable to expect that using such phrase translation probabili-ties as ranking features is likely to improve the ques-tion retrieval performance, as we will show in our experiments.

Unlike the general natural language translation, the parallel sentences between questions and an-swers in community-based Q&amp;A have very different lengths, leaving many words in answers unaligned to any word in queried questions. Following (Berger and Lafferty, 1999), we restrict our attention to those phrase translations consistent with a good word-level alignment.

Specifically, we make the following contribu-tions:  X  we formulate the question retrieval task as a  X  we linearly combine the phrase-based transla- X  we propose a linear ranking model framework  X  finally, we conduct the experiments on
The remainder of this paper is organized as fol-lows. Section 2 introduces the existing state-of-the-art methods. Section 3 describes our phrase-based translation model for question retrieval. Section 4 presents the experimental results. In Section 5, we conclude with ideas for future research. 2.1 Language Model The unigram language model has been widely used for question retrieval on community-based Q&amp;A data (Jeon et al., 2005; Xue et al., 2008; Cao et al., 2010). To avoid zero probability, we use Jelinek-Mercer smoothing (Zhai and Lafferty, 2001) due to its good performance and cheap computational cost. So the ranking function for the query likelihood lan-guage model with Jelinek-Mercer smoothing can be written as: where q is the queried question, D is a document, C is background collection,  X  is smoothing parameter. #( t, D ) is the frequency of term t in D , | D | and | C denote the length of D and C respectively. 2.2 Word-Based Translation Model Previous work (Berger et al., 2000; Jeon et al., 2005; Xue et al., 2008) consistently reported that the word-based translation models (Trans) yielded better per-formance than the traditional methods (VSM, Okapi and LM) for question retrieval. These models ex-ploit the word translation probabilities in a language modeling framework. Following Jeon et al. (2005) and Xue et al. (2008), the ranking function can be written as: where P ( w | t ) denotes the translation probability from word t to word w . 2.3 Word-Based Translation Language Model Xue et al. (2008) proposed to linearly mix two dif-ferent estimations by combining language model and word-based translation model into a unified framework, called TransLM. The experiments show that this model gains better performance than both the language model and the word-based translation model. Following Xue et al. (2008), this model can be written as: 3.1 Phrase-Based Translation Model Phrase-based machine translation models (Koehn et al., 2003; D. Chiang, 2005; Och and Ney, 2004) have shown superior performance compared to word-based translation models. In this paper, the goal of phrase-based translation model is to translate a document 4 D into a queried question q . Rather than translating single words in isola-tion, the phrase-based model translates one sequence of words into another sequence of words, thus in-corporating contextual information. For example, we might learn that the phrase  X  X tuffy nose X  can be translated from  X  X old X  with relative high probabil-ity, even though neither of the individual word pairs (e.g.,  X  X tuffy X / X  X old X  and  X  X ose X / X  X old X ) might have a high word translation probability. Inspired by the work of (Sun et al., 2010; Gao et al., 2010), we assume the following generative process: first the document D is broken into K non-empty word se-quences t 1 , . . . , t K , then each t is translated into a new non-empty word sequence w 1 , . . . , w K , and fi-nally these phrases are permutated and concatenated to form the queried questions q , where t and w de-note the phrases or consecutive sequence of words.
To formulate this generative process, let E denote the segmentation of D into K phrases t , . . . , t K , and let F denote the K translation phrases w 1 , . . . , w K  X  we refer to these ( t i , w i pairs as bi-phrases . Finally, let M denote a permuta-tion of K elements representing the final reordering step. Figure 1 describes an example of the genera-tive procedure.

Next let us place a probability distribution over rewrite pairs. Let B ( D, q ) denote the set of E , F , M triples that translate D into q . Here we as-sume a uniform probability over segmentations, so the phrase-based translation model can be formu-lated as: As is common practice in SMT, we use the maxi-mum approximation to the sum:
Although we have defined a generative model for translating D into q , our goal is to calculate the rank-ing score function over existing q and D , rather than generating new queried questions. Equation (8) can-not be used directly for document ranking because q and D are often of very different lengths, leav-ing many words in D unaligned to any word in q . This is the key difference between the community-based question retrieval and the general natural lan-guage translation. As pointed out by Berger and Laf-ferty (1999) and Gao et al. (2010), document-query translation requires a distillation of the document, while translation of natural language tolerates little being thrown away.

Thus we attempt to extract the key document words that form the distillation of the document, and assume that a queried question is translated only from the key document words . In this paper, the key document words are identified via word align-ment. We introduce the  X  X idden alignments X  A = a 1 . . . a j . . . a J , which describe the mapping from a word position j in queried question to a document word position i = a j . The different alignment mod-els we present provide different decompositions of P ( q , A | D ) . We assume that the position of the key document words are determined by the Viterbi align-ment, which can be obtained using IBM model 1 as follows: strict our attention to those E , F , M triples that are consistent with  X  A , which we denote as B ( D, q ,  X  A ) . Here, consistency requires that if two words are aligned in  X  A , then they must appear in the same bi-phrase ( t i , w i ) . Once the word alignment is fixed, the final permutation is uniquely determined, so we can safely discard that factor. Thus equation (8) can be written as:
For the sole remaining factor P ( F | D, E ) , we make the assumption that a segmented queried ques-tion F = w 1 , . . . , w K is generated from left to right by translating each phrase t 1 , . . . , t K indepen-dently: where P ( w k | t k ) is a phrase translation probability, the estimation will be described in Section 3.3.
To find the maximum probability assignment ef-ficiently, we use a dynamic programming approach, somewhat similar to the monotone decoding algo-rithm described in (Och, 2002). We define  X  j to be the probability of the most likely sequence of phrases covering the first j words in a queried ques-tion, then the probability can be calculated using the following recursion: (1) Initialization : (2) Induction : (3) Total : 3.2 Phrase-Based Translation Model for In Q&amp;A, a document D is decomposed into (  X  q ,  X  a ) , where  X  q denotes the question part of the historical question in the archives and  X  a denotes the answer part. Although it has been shown that doing Q&amp;A retrieval based solely on the answer part does not perform well (Jeon et al., 2005; Xue et al., 2008), the answer part should provide additional evidence about relevance and, therefore, it should be com-bined with the estimation based on the question part. culated with equations (12) to (14). So P ( q | D ) will be written as: where  X  1 +  X  2 = 1 .

In equation (15), the relative importance of ques-tion part and answer part is adjusted through  X  1 and  X  . When  X  1 = 1 , the retrieval model is based on phrase-based translation model for the question part. When  X  2 = 1 , the retrieval model is based on phrase-based translation model for the answer part. 3.3 Parameter Estimation 3.3.1 Parallel Corpus Collection In Q&amp;A archives, question-answer pairs can be con-sidered as a type of parallel corpus, which is used for estimating the translation probabilities. Unlike the bilingual machine translation, the questions and an-swers in a Q&amp;A archive are written in the same lan-guage, the translation probability can be calculated through setting either as the source and the other as the target. In this paper, P (  X  a |  X  q ) is used to denote the translation probability with the question as the source and the answer as the target. P (  X  q |  X  a ) is used to denote the opposite configuration.

For a given word or phrase, the related words or phrases differ when it appears in the ques-tion or in the answer. Following Xue et al. (2008), a pooling strategy is adopted. First, we pool the question-answer pairs used to learn P (  X  a |  X  q ) and the answer-question pairs used to learn P (  X  q |  X  a ) , and then use IBM model 1 (Brown et al., 1993) to learn the combined translation probabilities. Suppose we use the collection { collection { (  X  a ,  X  q ) 1 , . . . , (  X  a ,  X  q ) m used here to learn the combination translation prob-ability P pool ( w i | t j ) . 3.3.2 Parallel Corpus Preprocessing Unlike the bilingual parallel corpus used in SMT, our parallel corpus is collected from Q&amp;A archives, which is more noisy. Directly using the IBM model 1 can be problematic, it is possible for translation model to contain  X  X nnecessary X  translations (Lee et al., 2008). In this paper, we adopt a variant of Tex-tRank algorithm (Mihalcea and Tarau, 2004) to iden-tify and eliminate unimportant words from parallel corpus, assuming that a word in a question or an-swer is unimportant if it holds a relatively low sig-nificance in the parallel corpus.

Following (Lee et al., 2008), the ranking algo-rithm proceeds as follows. First, all the words in a given document are added as vertices in a graph G . Then edges are added between words if the words co-occur in a fixed-sized window. The num-ber of co-occurrences becomes the weight of an edge. When the graph is constructed, the score of each vertex is initialized as 1, and the PageRank-based ranking algorithm is run on the graph itera-tively until convergence. The TextRank score of a word w in document D at k th iteration is defined as follows: where d is a damping factor usually set to 0.85, and e i,j is an edge weight between i and j .

We use average TextRank score as threshold: words are removed if their scores are lower than the average score of all words in a document. 3.3.3 Translation Probability Estimation After preprocessing the parallel corpus, we will cal-culate P ( w | t ) , following the method commonly used in SMT (Koehn et al., 2003; Och, 2002) to ex-tract bi-phrases and estimate their translation proba-bilities.

First, we learn the word-to-word translation prob-ability using IBM model 1 (Brown et al., 1993). Then, we perform Viterbi word alignment according to equation (9). Finally, the bi-phrases that are con-sistent with the word alignment are extracted using the heuristics proposed in (Och, 2002). We set the maximum phrase length to five in our experiments.
After gathering all such bi-phrases from the train-ing data, we can estimate conditional relative fre-quency estimates without smoothing: where N ( t , w ) is the number of times that t is aligned to w in training data. These estimates are useful for contextual lexical selection with sufficient training data, but can be subject to data sparsity is-sues (Sun et al., 2010; Gao et al., 2010). An alter-nate translation probability estimate not subject to data sparsity is the so-called lexical weight estimate (Koehn et al., 2003). Let P ( w | t ) be the word-to-word translation probability, and let A be the word alignment between w and t . Here, the word align-ment contains ( i, j ) pairs, where i  X  1 . . . | w | and j  X  0 . . . | t | , with 0 indicating a null word. Then we use the following estimate:
We assume that for each position in w , there is ei-ther a single alignment to 0, or multiple alignments to non-zero positions in t . In fact, equation (18) computes a product of per-word translation scores; the per-word scores are the averages of all the trans-lations for the alignment links of that word. The word translation probabilities are calculated using IBM 1, which has been widely used for question re-trieval (Jeon et al., 2005; Xue et al., 2008; Lee et al., 2008; Bernhard and Gurevych, 2009). These word-based scores of bi-phrases, though not as effective in contextual selection, are more robust to noise and sparsity.

A sample of the resulting phrase translation ex-amples is shown in Table 2, where the top 5 target phrases are translated from the source phrases ac-cording to the phrase-based translation model. For example, the term  X  X xplorer X  used alone, most likely refers to a person who engages in scientific explo-ration, while the phrase  X  X nternet explorer X  has a very different meaning. 3.4 Ranking Candidate Historical Questions Unlike the word-based translation models, the phrase-based translation model cannot be interpo-lated with a unigram language model. Following (Sun et al., 2010; Gao et al., 2010), we resort to a linear ranking framework for question retrieval in which different models are incorporated as features.
We consider learning a relevance function of the following general, linear form: where the feature vector  X  ( q , D ) is an arbitrary function that maps ( q , D ) to a real value, i.e.,  X  ( q , D )  X  R .  X  is the corresponding weight vec-tor, we optimize this parameter for our evaluation metrics directly using the Powell Search algorithm (Paul et al., 1992) via cross-validation.

The features used in this paper are as follows:  X  Phrase translation features (PT) :  X  Inverted Phrase translation features (IPT) :  X  Lexical weight feature (LW) :  X  Inverted Lexical weight feature (ILW) :  X  Phrase alignment features (PA) :  X  Unaligned word penalty features (UWP) :  X  Language model features (LM) :  X  Word translation features (WT) : 4.1 Data Set and Evaluation Metrics We collect the questions from Yahoo! Answers and use the getByCategory function provided in Yahoo! Answers API 5 to obtain Q&amp;A threads from the Ya-hoo! site. More specifically, we utilize the resolved questions under the top-level category at Yahoo! Answers, namely  X  X omputers &amp; Internet X . The re-sulting question repository that we use for question retrieval contains 518,492 questions. To learn the translation probabilities, we use about one million question-answer pairs from another data set. 6
In order to create the test set, we randomly se-lect 300 questions for this category, denoted as  X  X I TST X . To obtain the ground-truth of ques-tion retrieval, we employ the Vector Space Model (VSM) (Salton et al., 1975) to retrieve the top 20 re-sults and obtain manual judgements. The top 20 re-sults don X  X  include the queried question itself. Given a returned result by VSM, an annotator is asked to label it with  X  X elevant X  or  X  X rrelevant X . If a returned result is considered semantically equivalent to the queried question, the annotator will label it as  X  X el-evant X ; otherwise, the annotator will label it as  X  X r-relevant X . Two annotators are involved in the anno-tation process. If a conflict happens, a third person will make judgement for the final result. In the pro-cess of manually judging questions, the annotators are presented only the questions. Table 3 provides the statistics on the final test set.
We evaluate the performance of our approach us-ing Mean Average Precision (MAP) . We perform a significant test, i.e., a t-test with a default signif-icant level of 0.05. Following the literature, we set the parameters  X  = 0 . 2 (Cao et al., 2010) in equa-tions (1), (3) and (5), and  X  = 0 . 8 (Xue et al., 2008) in equation (6). 4.2 Question Retrieval Results We randomly divide the test questions into five subsets and conduct 5-fold cross-validation experi-ments. In each trial, we tune the parameters  X  1 and  X  2 with four of the five subsets and then apply it to one remaining subset. The experiments reported be-low are those averaged over the five trials. Table 4 presents the main retrieval performance. Row 1 to row 3 are baseline systems, all these meth-ods use word-based translation models and obtain the state-of-the-art performance in previous work (Jeon et al., 2005; Xue et al., 2008). Row 3 is simi-lar to row 2, the only difference is that TransLM only considers the question part, while Xue et al. (2008) incorporates the question part and answer part. Row 4 and row 5 are our proposed phrase-based trans-lation model with maximum phrase length of five. Row 4 is phrase-based translation model purely based on question part, this model is equivalent to setting  X  1 = 1 in equation (15). Row 5 is the phrase-based combination model which linearly combines the question part and answer part. As expected, different parts can play different roles: a phrase to be translated in queried questions may be translated from the question part or answer part. All these methods use pooling strategy to estimate the transla-tion probabilities. There are some clear trends in the result of Table 4: (1) Word-based translation language model (TransLM) significantly outperforms word-based translation model of Jeon et al. (2005) (row 1 vs. row 2). Similar observations have been made by Xue et al. (2008). (2) Incorporating the answer part into the models, either word-based or phrase-based, can significantly improve the performance of question retrieval (row 2 vs. row 3; row 4 vs. row 5). (3) Our proposed phrase-based translation model (P-Trans) significantly outperforms the state-of-the-art word-based translation models (row 2 vs. row 4 and row 3 vs. row 5, all these comparisons are sta-tistically significant at p &lt; 0 . 05 ). 4.3 Impact of Phrase Length Our proposed phrase-based translation model, due to its capability of capturing contextual information, is more effective than the state-of-the-art word-based translation models. It is important to investigate the impact of the phrase length on the final retrieval per-formance. Table 5 shows the results, it is seen that using the longer phrases up to the maximum length of five can consistently improve the retrieval per-formance. However, using much longer phrases in the phrase-based translation model does not seem to produce significantly better performance (row 8 and row 9 vs. row 10 are not statistically significant). 4.4 Effectiveness of Parallel Corpus Question-answer pairs collected from Yahoo! an-swers are very noisy, it is possible for translation models to contain  X  X nnecessary X  translations. In this paper, we attempt to identify and decrease the pro-portion of unnecessary translations in a translation model by using TextRank algorithm. This kind of  X  X nnecessary X  translation between words will even-tually affect the bi-phrase translation.

Table 6 shows the effectiveness of parallel corpus preprocessing. Row 11 reports the average number of translations per word and the question retrieval performance when only stopwords 7 are removed. When using the TextRank algorithm for parallel cor-pus preprocessing, the average number of transla-tions per word is reduced from 69 to 24, but the performance of question retrieval is significantly im-proved (row 11 vs. row 12). Similar results have been made by Lee et al. (2008). 4.5 Impact of Pooling Strategy The correspondence of words or phrases in the question-answer pair is not as strong as in the bilin-gual sentence pair, thus noise will be inevitably in-troduced for both P (  X  a |  X  q ) and P (  X  q |  X  a ) .
To see how much the pooling strategy benefit the question retrieval, we introduce two baseline meth-ods for comparison. The first method (denoted as ity with the question as the source and the answer as the target. The second (denoted as P (  X  a |  X  q ) ) is used to denote the translation probability with the answer as the source and the question as the target. Table 7 provides the comparison. From this Table, we see that the pooling strategy significantly outperforms the two baseline methods for question retrieval (row 13 and row 14 vs. row 15). In this paper, we propose a novel phrase-based trans-lation model for question retrieval. Compared to the traditional word-based translation models, the proposed approach is more effective in that it can capture contextual information instead of translating single words in isolation. Experiments conducted on real Q&amp;A data demonstrate that the phrase-based translation model significantly outperforms the state-of-the-art word-based translation models.
There are some ways in which this research could be continued. First, question structure should be considered, so it is necessary to combine the pro-posed approach with other question retrieval meth-ods (e.g., (Duan et al., 2008; Wang et al., 2009; Bunescu and Huang, 2010)) to further improve the performance. Second, we will try to investigate the use of the proposed approach for other kinds of data set, such as categorized questions from forum sites and FAQ sites.
 This work was supported by the National Natural Science Foundation of China (No. 60875041 and No. 61070106). We thank the anonymous reviewers for their insightful comments. We also thank Maoxi Li and Jiajun Zhang for suggestion to use the align-ment toolkits.

