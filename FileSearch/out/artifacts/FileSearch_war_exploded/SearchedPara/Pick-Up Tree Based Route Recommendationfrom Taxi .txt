
Haoran Hu 1 ,ZhiangWu 2 , ,BoMao 2 ,YiZhuang 3 , Jie Cao 2 , and Jingui Pan 1 The rapid growth of wireless sensors and development of Global Positioning System (GPS) technologies [1] make it increasingly convenient to obtain the time-stamped trajectory data of taxis. I n practice, cab drivers wish to be recom-mended a fastest route to pick up passengers. Such a large number of trajectories provide us unprecedented opportunity to mine useful knowledge and to recom-mend efficient routes for cab drivers. This recommender system not only helps cab drivers to raise the income, but also decreases the gasoline consumption which is good for environmental protection.

In the literature, a great deal of research has been devoted to mobile recom-mendations. These studies mainly focus on the following subareas: the mobile tourist recommender systems [2, 3, 4, 5], ta xi driving fraud detection systems [6], driving direction recommender systems [7, 8], and routes for carrying passengers recommendation [9], which have greatly ad vanced the research to a higher level.
The scope of this paper belongs to th e field of recommending routes for car-rying passengers. The idea of this paper stems from the work in [9] which aims to recommend a travel route for a cab driver in a way such that the potential travel distance before carrying passeng ers is minimized. In their approach, for the length of suggested driving route L ,thereare C L K candidate routes where K is the number of pick-up points. Then, routes which are not dominated by any other route are recommended to cab drivers. The main task in [9] is to search the best routes among these C L K candidate routes. Although a satisfying strategy called SkyRoute is proposed [9], it is still time-consuming as the increase of
L and K . In the meanwhile, a multitude of routes are recommended to cab drivers in the equal possibilities without considering the number of passengers and driving distance of the routes, as shown in the left side of the Fig. 1. If we consider the scene that many taxis head for a narrow route with few passengers, conflict for carrying customers or even the traffic jam in that route may happen.
To meet this dilemma, a data structure named pick-up tree is presented which takes the current position as its root node and connects all pick-up points is presented. The better routes are recommended in a high probability as shown in thick line in right side of Fig. 1. More over, if we assume there are a set of cabs around CP , by adopting our recommendation, most of cabs will cruise along with the better routes and other relatively worse routes will also be covered by less cabs. There remain two problems to solve when we follow this idea:  X  An objective function measuring the global profit of the set of taxis by adopt- X  Finding the optimal value of objective function among all routes is a combi-In this paper, we focus on the recommendation and minimization of the gasoline consumption which is close related to idle driving distance for a set of cabs around a position, rather than one cab . Historical pick-up points are extracted and clustered, and routes connecting the centroids ar e taken as recommendation choise. We then propose a heuristic to construct a pick-up tree to cover all centroids. The model for estimating oil consumption before carrying passengers of every route is presented. By adopting the oil consumption as the weight of every route, the recommendation method for the set of taxis is proposed. Let C be the set of K potential pick-up points C = { C 1 ,C 2 ,  X  X  X  ,C K } .Wethen assume there are W target taxis around a position CP , T = { T 1 ,T 2 ,  X  X  X  ,T W } . The probability that a taxi could carry passengers in the pick-up point C i is written P ( C i ), and the set of mutually independence probability is written P = { P ( C 1 ) ,P ( C 2 ) ,  X  X  X  ,P ( C K ) } .

The route recommendation aims to generate W routes for every taxi, and minimize the global gasoline consumption before picking up passengers for all taxis. So, we have the objective function as follows: Definition 1 (Global Gasolin e Consumption Function). Given W rec-ommended routes R = { R 1 , R 2 ,  X  X  X  , R W } , the global oil consumption function: In the definition 1, CP is the current position of taxis, the set of all possible routes is known as  X  , and we try to find a subset of  X  with size of W for minimization. The problem is NP hard due to the exponential scale of  X  .Theoil consumption of a route is measured by the C (  X  ) function which will be addressed in Section 4. Note that the problem should not only minimize the global gasoline consumption, but also attempt to cover all pick-up points. In this section, we propose a route recommendation method, named CabRec, for cab drivers. To illustrate it, we first present a heuristic algorithm to generate a pick-up tree. Then, we show how to compute the gasoline consumption for each route. Finally,we describe the weighted Round-Robin recommendation process. 3.1 Pick-Up Tree Generation The problem is to construct a tree which uses CP as the root and connects all points in C . The straightforward way is to add an edge between any of two nodes, but the derived network will be too complex to process. In our solution, edges between a point and its skyline points are added. The set of skyline points consists of the points that are not dominated by any other point [10]. We should begin with the definition of the point dominance.
 Definition 2 (Point Dominance). Let CP denote the current node, C i and C j are two different pick-up points. These two pick-up points can be described by two dimensions C i =( P ( C i ) ,D ( C i ,CP )) and C j =( P ( C j ) ,D ( C j ,CP )) .We say that point C i dominates point C j iff one of the cases happens: (1) P ( C i )= D ( C j ,CP ) ;(3) P ( C i ) &gt;P ( C j ) and D ( C i ,CP ) &lt;D ( C j ,CP ) . The pseudocode of the pick-up tree generation algorithm is given as follows. Lines 2 and 3 are about initialization. The FindSkyline function in line 2 finds skyline points for the current position CP . Then, in line 5, we use a heuristic metric with maximum ratio of pick-up probability to distance to select the next expanding node. The algorithm stops when all points in C are added to the pick-up tree.
 Discussion. If we construct a rectangular coordinate system with CP as its origin, all remaining pick-up points in C can be depicted by C i = ( P ( C i ) ,D ( C i ,CP )). That there is at least a skyline point for CP .So,ineach while loop, at least a point is added to the pick-up tree. The pick-up tree guar-antees to include all points in C .
 Algorithm 1. Pick-up Tree Generation Algorithm It can be seen clearly that skyline c omputation encapsulated in the FindSkyline function can be done in polynomial time. The straightforward method is to compare each point with all the other points to check whether it can be dominated by some points. If so, remove it, otherwise mark this point as a skyline point. The time complexity of this method is O (2 n 2 ), but with the increase of the number of pick-up points, the performance FindSkyline will be-come the bottleneck. In this article, we use a sort-based skyline computation to implement FindSkyline .

Obviously, FindSkyline is much more faster than the straightforward way, because comparison is made just on the skyline points and all the points only need to visit once. Also, Theorem 1 is presented to guarantee the correctness of the process of FindSkyline .
 Theorem 1. After sorting on the data set D , the one with the maximum value will be certainly the skyline point.
 Proof: If the maximum point p max is not a skyline point, it must be dominated by at least one point represented by q .Accordingtothe definition 1, P ( q )  X  D ( q,CP ) &gt;P ( p max )  X  D ( p max ,CP ) is surely satisfied. So, p max is not the maximum point and contradiction appears. Proof done.
 Algorithm 2. Sort-based Skyline Computation Algorithm 3.2 Computational Issues We assume the oil consumption increases proportionately with the driving dis-tance before carrying passengers. Let k max denote the length of the route R r = {
C 1 ,C 2 ,  X  X  X  ,C k max } . Two cases may happen when a taxi selects the route: (1) the taxi carries a customer in one of the k max nodes; (2) the taxi does not carry any customer in that route. 1. Assume the taxi carries a passenger in C k ( k =1 , 2 ,  X  X  X  ,k max ), the travel 2. The event that a taxi does not carry a customer in a route may also happen. We then define a cost function to combine above-mentioned two cases: In Eq. (6), an exponential function is employed to magnify P  X  .Weset  X &gt; 1to make the cost monotone increasing with both P  X  and F (  X  ). 3.3 Recommendation Method Assume the pick-up tree has N ( N  X  K ) leaf nodes, so there are N possible routes R = { R 1 , R 2 ,  X  X  X  , R N } . In this subsection, we introduce the method for recommending the N routes to W target taxis. We propose to use a standard weight to measure the importance of a route. The cost for each route is obtained by Eq. (6). We then define the weight of each route as follows: Obviously, weights for all routes are normalized, N i =1  X  ( R i ) = 1. A Round-Robin method is used to make recommendation for multiple cabs in [9], and k optimal routes are used to generate the circle list. The Round-Robin approach recommends routes in the circle list to the coming empty cabs in turn. If there are more than k empty cabs, recommendations are repeated from the first route again after the k th empty cab.

In this paper, we firstly generate the circle list according to the weight of each R r . Also, we randomly arrange routes in the circle list and employ the Round-Robin method to generat e a recommended route for each cab. We benefits the proposed recommendation method from two aspects: (1) each route appears in the circle list at least once, so none pick-up point is ignored; (2) the route with low cost has more opportunities appearing in the circle list, so more cabs will cruise to that route.
 Discussion. In section 2, the green recommendation problem is formulated a combinatorial optimization problem which is NP hard. So, our proposed CabRec is a heuristic in essence. However, the cost estimation for a route and the recommendation method are deterministic. In fact, we apply heuristic during construction of the pick-up tree, and once the pick-up tree is generated, the rec-ommendation list can be produced. This strategy is more efficient The proposed CabRec does not always recommend the best route to cabs, but recommend better routes with high probability. In this section, we demonstrate the effect iveness of the proposed CabRec. Specif-ically, we will show: (1) An example of the pick-up tree and the cost and weight of every route; (2) The superior per formance of CabRec compared with LCP on driving distance before carrying passengers and time-cost. 4.1 Experiment Setup Data Sets. For our experiments, we use a real-world data set containing GPS location traces of approximately 500 taxis collected around 30 days in the San Francisco Bay Area, USA. To distinguish from other works, state variance points are deemed to be the potential pick-up points. The state of the pick-up point is 1(= occupied ), and the state of its previous point is 0(= free ). Then, we extract the pick-up points of all cab drivers (536 cabs) on two time periods: 2PM-3PM and 6PM-7PM . In total, 25973 points are obtained during 2PM-3PM , and 6203 points are obtained during 6PM-7PM . Simple K-means provided by WEKA 1 is used for clustering where X  X uclidean Distance X  function, X 10 X  seed and  X 500 X  max iterations are set.
 Methods. Two types of route recommendation methods are implemented for performance comparison. The first one is the proposed CabRec, and another one is
LCP proposed in [9], coded by ourselves in Java. We use LCP LCP method of which the length of recommended route is x .
 4.2 Results of Pick-Up Tree In this subsection, we illustrate the output of the pick-up trees with different CP and the number of clusters K . To facilitate the exhibition, we limit the range of map with the latitude in the interval [37.80654, 37.70846] and the longitude in the interval [-122.49979, -122.3794]. We then extract all state variance points of 536 cabs during 2PM-3PM and obtain 25973 potential pick-up points. The current position CP is located at the point (37.7941, -122.4080) which is the China Town in the San Francisco Bay Area. All potential pick-up points are clustered into 10 clusters. The way to estimate P ( C i )ofthe i th centroid is as follows: finding the adjacent points in the i th cluster for every taxi and computing average difference two adjacent points implicate the taxi has carried passengers, since the point in each cluster represents state variance from free to occupied . Table 1 lists the information of the 10 centroids, and the derived pick-up tree is shown in Fig. 2.
In this example, there are 6 routes from CP to the leaf nodes. We set  X  =1 . 5 to get the values of cost function by Eq. (6), and then obtain the standard weights of every route by Eq. (7). Table 2 shows the cost and weight of these 6 recommended routes. 4.3 Performance Comparison Here, we compare the proposed CabRec with LCP on the driving distance before carrying passengers and time-cost. We design the procedure of our experiment as follows:  X  Step 1: Pick-Up Points Generation by Clustering. The state variance  X  Step 2: Route Recommendation. We employ CabRec and LCP for route  X  Step 3: Simulation of Taxis to Pick Up Passengers. In this step, we In the above-mentioned procedure, we ar e readily to compute the average driving distance of W taxis before carrying passengers. Note that if the taxi does not carry any passenger in the reco mmended route we extra add 10 km to its driving distance as penalty. We set K = 20 and range W in different scale according to the number of state variance points of different time period. Fig. 3 show the comparison results on two time periods. As can be seen, CabRec works much more better than both LCP 3 and LCP 4 , especially when W is large. The reason lies in that since CabRec has estimated the cost of every route and taken it as the weight, more cabs will cruise along with the high-weight routes with the increase of W . In contrast, LCP takes every route as equal and many taxis head for the routes with few passengers, which reduce the performance dramatically.
We also observe the execution time of CabRec and LCP .Fig.4showsthe execution time with the increase of the number of pick-up points ( K centroids). As can be seen, the execution time of LCP 4 goes up sharply. Although the time-cost of LCP 3 is not very high, our CabRec performs even more fast than LCP To sum up, we have two conclusions from the experiments: (1) The proposed CabRec can successfully decrease the ave rage driving distance of the set of taxis before carrying passengers. (2) The time-cost of our CabRec is also lower than the existing methods. With the prevalent of the ubiquitous computing, it is more and more convenient to obtain the information about location, time, trajectory, surrounding, etc. Mobile recommender systems have attracted more attentions. Some research opportunities on mobile recommender systems were discussed in [12]. Quercia et al. have designed a social events recommender system using mobile phone location data [13]. Several kinds of mobile tourist recommender systems have been presented in [2, 3, 4, 5].

In addition, great research efforts have been taken to use GPS trajectories of cabs for analysis. Liu et al.focused on cabdriver operation patterns analy-sis rather than recommendation based on the large scale cabdrivers X  behavior in Shenzhen, China [14]. A mobility-based clustering analysis method is used for identifying hot spots of moving vehicles [15]. Chang et al. have proposed a context-aware prediction model for taxi demand hotspots [16]. Wu et al. in-vestigated service site selection using GIS data [17]. Zheng and Xie et al. have conducted many studies on knowledge discovery from GPS trajectory data in Beijing, China. For instance, the computation method of user similarity based on location history is proposed in [18], friends and locations recommendation method is then studied in [19], and the knowledge extracted from GPS data is also used to solve the congested traffic problems [20, 8]. Chen et al. studied a new problem of searching the k Best Connected Trajectories ( k -BCT) by locations from a database, in which context the query is only a small set of locations [21]. Chen et al. also discovered the Most Popular Route(MPR) between two loca-tions by observing the traveling behaviors of many previous users [22]. In this article, we focus on green recommendation for cab drivers, and our experiments utilize the cab traces data set in the San Francisco Bay Area, which is also used by [9, 6]. Upon taxi trajectories data, this paper proposes a system called CabRec for route recommendation. In CabRec, the state variance points that imply the taxis have carried passengers are clustered, and the centroids are taken as potential pick-up points. Then, a heuristic is employed to construct the pick-up tree which takes the current position as its root node and connect all centroids. A probability model to estimate the weight of every route and the weighted Round-Robin recommendation method for the set of taxis is proposed. Our experimental re-sults on real-world taxi trajectories d ata set have shown the effectiveness and efficiency of the CabRec.

There are a wealth of research directio ns that we are currently considering, such as implementing a cab recommender system with dynamic visualization, employing several large-scale data sets, and expanding other recommender ap-plications in the area of intelligent transportation system, and more. Acknowledgments. This research is supported by National Natural Science Foundation of China (No.61103229, 71072172, and 61003074), Industry Projects in the Jiangsu Science &amp; Technology Pillar Program (No.BE2011198), Jiangsu Provincial Colleges and Universities Outstanding Science &amp; Technology Inno-vation Team Fund(No.2001013), International Science &amp; Technology Coopera-tion Program of China (No.2011DFA12910), National Key Technologies R&amp;D sub Program in 12th five-year-plan (No. SQ2011GX07E03990), Jiangsu Provin-cial Key Laboratory of Network and Information Security(Southeast Univer-sity) (No.BM2003201), Natural Science Fo undation of Jiangsu Province of China (BK2010373) and Postgraduate Cultivat ion and Innovation Foundation of Jiangsu Province (CXZZ11 0045).

