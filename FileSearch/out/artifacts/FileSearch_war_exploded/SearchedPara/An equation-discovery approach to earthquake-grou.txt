 1. Introduction
An earthquake is a natural phenomenon that manifests itself as a violent, rapid, earth tremor and happens unexpectedly, without prior notice. Strong earthquakes usually cause a lot of difficulties for people and communities; hence, the engineer X  X  task is to properly design a structure, bearing in mind that a devastating earthquake could occur during its lifetime. In the earthquake engineering domain, the correspondence with physi-cal reality must be taken as the strongest criterion for the acceptability of the developed models along with the estimated prediction accuracy. The ground-motion prediction equations (GMPEs) or attenuation relations, the common name that was used for them ( Douglas, 2003 ), are some of the key elements used by engineers to estimate a possible earthquake load at the site of a structure.

One of the ground-motion parameters is the peak ground acceleration (PGA), the prediction of which is the focus of the present study. More than 250 papers concerning PGA modeling have been published over the past 50 years, which means the area has been well investigated (see Douglas, 2011 ). Traditionally, the
PGA is modeled as a single mathematical formula based on an author X  X  knowledge about the problem. The parameters included in such a formula are then fitted to the data by using a regression analysis for the prediction accuracy. Consequently, the resulting models are based on various assumptions and data sets and differ significantly in qualitative terms as well as quantitatively. Eq. (1) from the study of Akkar and Bommer (2010) is presented here for illustrative purposes and can be described as a typical example of a GMPE. The variables used in Eq. (1) are: (i) the PGA in [cm/s (ii) the moment magnitude M w ; (iii) the Joyner X  X oore distance R in [km]; (iv) the average soil shear-wave velocity in the upper 30 m of soil underneath the observation spot V s , 30 in [m/s]; and (v) the faulting mechanism F ( Akkar and Bommer, 2010 ).
Recently, researchers involved in earthquake engineering have experimented with new approache s when predicting the PGA that do not assume an equation form and have drawn different conclusions. Peru  X  s and Fajfar (2010) used a conditional average estimator (CAE) method, which in contrast to conventional approaches does not make any apriori assumption, and found this method to be a simple but powerful tool, log 10  X  PGA  X  X  1 : 04159  X  0 : 91333 M w 0 : 08140 M 2 w especially in the research environment. Kuehn et al. (2011) used
Bayesian networks and concluded that the model they obtained is the maximum a posteriori model; i.e., the most pr obable model given the data. Alavi et al. (2011) used multi expression programming (MEP), a machine-learning technique, and found that the generated models predict better than, or comparable with, the previously published regression-based models and, in their opinion, provide relatively simple equations, as opposed to t he more complicated models from the Next Generation Attenuation (NGA) project. In summary, the use of non-conventional methods has so far concentrated on improving the prediction results.

With the development of computers a new scientific area was founded, where authors propose machine algorithms that try to imitate learning as an important human property. In equation discovery (ED), a sub-area of machine learning, the algorithms try to find a proper equation formulation that best fits a given data set. All ED systems use some kind of language bias that limits the hypothesis space, which is the space of all the possible equations constructed from a given set of operators, functions and variables.
Such a space is usually infinite, and is therefore restricted by the means of the algorithm. The state-of-the-art, Lagramge, ED system used in this study employs a declarative bias in the form of a context-free grammar (CFG) to limit the hypothesis space, which is given as input information to the system ( Todorovski and Dz  X  eroski, 1997 ). With such a formalism, domain knowledge can be easily provided to the ED system and so guide it toward the expected equation formulations.

Because of the fact that almost all GMPEs take the form of equations, the use of an ED system as an aid in earthquake-engineering design studies may come as a natural choice.
Our investigation revealed that ED systems have not been used in earthquake engineering, to the bes t of our knowledge. Therefore, a specific goal of the present study is to propose a method for using the Lagramge system when modeling the PGA, which is used as a case study because of a particularly large domain knowledge. Bearing in mind the extensive expe rt requirements when modeling
GMPEs, a careful investigation of the ED system is necessary before its usage for modeling the PGA is proposed. Moreover, it is necessary to appropriately incorporate the existing domain knowledge into the ED process, because the experim ental set-up itself, if correctly designed, has the potential to yield high-quality results. With the system X  X  heuristic or exhaustiv e exploration of defined hypothesis space it is possible to investigate thousands of equation formula-tions and based on quantitative criteria, such as the mean squared error (MSE) and qualitative criteria like physicality, select the best equation. This procedure is crucial in order that the proposed ED method gains acceptance within the earthquake-engineering com-munity. Fortunately, as we had access to powerful distributed-computing infrastructures, in our experiments all the calculations were pushed to their limits. The goal of this study was also to compare the results obtained w ith already existing GMPEs. The rest of the paper is organized as follows. In Section 2 the
Lagramge ED system and its input parameters along with the CFG and the data-set requirements are thoroughly explained. We describe the whole process of the application of the Lagramge ED system to the problem of predicting the PGA in Section 3 . Descriptive tables and figures showing the results and the best equation found, together with their explanations, are presented in Section 4 .Weconcludethis study with Section 5 , where we discuss and evaluate the presented results and provide some i deas for future research. 2. Lagramge
Equation discovery (ED) is an emerging machine-learning discipline that is closely related to system identification, inductive logic programming and genetic programming. About a dozen ED systems have been described in the literature, among which Bacon of Langley et al. (1987) , Lagrange of Todorovski and Dz  X  eroski (1995) and Lagramge of Todorovski and Dz  X  eroski (1997) 1 received particular attention in the machine-learning community.
The Lagramge system seems to be the most suitable for the PGA modeling task at hand, particularly because it uses CFG to specify prior knowledge. For this reason it was selected and used in the present study.

The Lagramge ED system has already been applied to several scientific fields of interest. The first experiments with the
Lagramge system were made in the area of ecological modeling, e.g., the prediction of phytoplankton growth in the studies of
Todorovski et al. (1998) and Kompare et al. (2001) . Todorovski and Dz  X  eroski (2001) also applied it to population dynamics, predicting the behavior of prey X  X redator dependence and found that the integration of specific domain knowledge in the CFG significantly improved the prediction results. Some of the latest applications of the Lagramge system include discovering mathe-matical models of a mechanically ventilated lung by Ganzert et al. (2010) and the financial forecasting of commodity prices from the London Metal Exchange by Alzaidi and Kazakov (2011) .

The problem given to the Lagramge system is denoted with two input files: a data set D and a CFG ( Todorovski and Dz  X  eroski, 1997 ). The input data D  X f M , v d , W g consists of one or more tables of measurements or records M of variables W  X f v 1 , v 2 , ... , v
Among the variables, one must be selected as a dependent variable v d A W . So as to make it easier to understand the grammar building described in the following paragraphs, let us assume that we want to design a CFG that will be able to generate the first three terms of Eq. (1) .

A tuple CFG  X f N , T , P , S g prescribes the syntax of the right-hand side of an equation. It contains finite disjunctive sets of non-terminals ( N ) and terminals ( T ). The Lagramge system uses a special non-terminal symbol V A N , which denotes any of the independent variables from the input data set W \ v d ; otherwise, any symbol can be used to denote a non-terminal. The set T consists of all the independent variables v i A W \ v d and a special symbol const , whose syntax in the Lagramge system is as follows: const  X  name : lowest value : starting value : highest value  X  2  X  In the case of our example, the set of non-terminals is
N  X f Linear , Term , V g and the set of terminals is T  X f M
The productions P  X f P 1 , P 2 , ... , P n g denote the grammatical rules that relate the non-terminals among themselves (recursion is possible) and to the terminals. The standard form of a produc-tion P is A -a , where A A N , a A N [ T and the operators or functions used are (already or user-) defined in the programming language C. If we want to reference to an explicit variable in a grammar, we must use variable _ in front of its name. However, the productions for V are added to the grammar automatically during the run-time, as the Lagramge system reads the variables X  names from the input data file, i.e., 8 v i A W \ v d : V
We use the annotation with the logical or operator A -a 1 9 9 ... 9 a n for productions A -a 1 , A -a 2 , ... , A -a derive the first three terms of Eq. (1) , only addition and multi-plication are needed, which are both already predefined in C.
Finally, S A N is a special, non-terminal symbol, from which the derivation of the expressions starts. In the case of our example, it is denoted by the symbol Linear .

The definition of the developed example polynomial grammar is provided in Table 1 . Its first four productions provide enough syntax to build the desired polynomial. The first two productions succeeding the non-terminal symbol Linear generate any number of terms. The second two productions succeeding the non-terminal symbol Term derive these terms into degrees. Note that the last production V -variable_M is automatically added by the Lagramge system during the run-time and must not be manually included in the grammar, but it is added to Table 1 for completeness.

During the derivation process the Lagramge system continu-ously applies productions to all the non-terminals until all the symbols in the expression are terminals. This process can be best depicted with the growth of a derivation tree, as can be seen in
Fig. 1 for our example. When we include at least one recursive production in the CFG (e.g., Table 1 , the first production), the hypothesis space and the length of the derivation process are infinite. Therefore, we bound the complexity of expressions with the maximum-tree-depth parameter d , urging the Lagramge system to ensure that all the symbols at the prescribed depth are terminals. In our example, the appropriate value would be d  X  4, as shown on the left-hand side of Fig. 1 .

At the end of the derivation process, the generated expression from the CFG can be obtained by reading all the end leaves of the derivation tree from left to right. The expression generated with the derivation tree on Fig. 1 is const  X  ...  X  const  X  ... M w  X  const  X  ... M w M w  X  3  X 
Such an expression contains one or more special terminal symbols const A T . A non-linear fitting method (downhill simplex or Levenberg X  X arquardt algorithm) is used by the Lagramge system to determine the values of these parameters that best fit the given data set. With them the Lagramge system minimizes the value of the MSE function, which is calculated according to the formula MSE  X  1 n where n is the number of records in the data set and v d , i , measured and v d , i , predicted are the measured and predicted values of the dependent variable, respectively. For the purpose of this study we also used other measures, which are discussed in detail in Section 4.1 .

The Lagramge system also provides options for the manipula-tion of the search process. The user can decide whether to search for an ordinary or differential dependence, i.e., v d  X  E or respectively, where E is an expression derived from the CFG. Other than the possibility of an exhaustive search strategy, where all possible equation structures in the limited hypothesis space are tried, it is also possible to use a heuristic beam search strategy. This starts with a number of expressions (e.g., 20) and derives all their first successors, then saves the same number (i.e., 20) of those with the lowest MSE among all of them and repeats. The user can set the number of equations the Lagramge system saves in each step with the value of the input parameter b , also referred to as the beam width. Three stopping criteria are implemented: (i) when all of the possible equation structures have been derived and tested; (ii) when the Lagramge system finds the first expres-sion with a lower MSE function than the one prescribed by the user; or (iii) when a user-defined CPU time is exceeded ( Todorovski and Dz  X  eroski, 1997 ).

Having analyzed the Lagramge algorithm, which is needed to properly design an ED task, the following section focuses on the application of the Lagramge system to the earthquake-engineering problem of forecasting the PGA, i.e., the implementa-tion of domain knowledge. 3. PGA modeling
Natural phenomena and various systems are frequently mod-eled on the basis of collected data. In such studies, the common goal is to capture the relationships underlying the data. Since the resulting models need to be evaluated and validated, the expert knowledge must be available in an easily understood form. Typically, the simplest and most useful relationships for engi-neers are mathematical relations. Therefore, when designing the experimental set-up the following aspects were taken into con-sideration: (i) the selection of the data set; (ii) the definition of the CFG; and (iii) the physicality of the equations. The data set, the grammar that was used to induce the equations, as well as our choice of values for all the input parameters are described in the following subsections. 3.1. Data selection
Before running an experiment to explore a real-world problem a careful choice of data must be made as a prerequisite for obtaining good results. In the engineering domain this means that the gathering, filtering and selection of appropriate data must be made on the basis of a clear vision of the problem itself. The selection of data usually plays an important role when inducing a new GMPE and can depend on a specific purpose.
The significant seismological aspects that influence the ground-motion parameters are considered to be the following: (i) the source; (ii) the travel path; and (iii) the site effects. The source effect can basically be described by the level of stress drop in an earthquake event, the static measure of the released energy in an earthquake (magnitude), the depth of the epicentre and by the mechanism of faulting. A variety of magnitudes are used in the literature, e.g., the local magnitude (also called the Richter magnitude), the surface-wave magnitude, the moment magnitude and many more. The site effect is most commonly characterized by the soil X  X  shear-wave velocity; however, it can also be considered in a generic way by using site categories (e.g., rock, stiff soil and soft soil in the study of Akkar and Bommer, 2010 ). The travel-path effect is generally represented by the distance of the observation site from the fault, and there are many defined, e.g., the epicentral distance, the hypocentral distance, the rupture distance, the Joyner X  X oore distance and many more (see Douglas, 2003 for a detailed description).
In the past, earthquakes have been systematically recorded and the data assembled for research purposes by institutes around the world, e.g., the Pacific Earthquake Engineering
Research Center gathered 3551 strong-motion earthquake record-ings in a large database for its NGA project ( Chiou et al., 2008 ).
For various reasons not all of the available data is used for experiments. In many cases only earthquakes located within a country or a tectonic region are taken into account, or all the aftershocks are excluded; thus, reducing the initial data set, as is necessary for the particular purpose. For example, by following the data-selection process of Abrahamson and Silva (2008) ,
Kuehn et al. (2011) started with the full NGA data set of 3551 earthquake recordings and reduced it to 3342 by selecting only the representatives of free-field conditions and excluding some records from the Chi X  X hi sequence, duplicate records and those records missing a horizontal component. Sometimes, the researchers use additional non-conventional independent vari-ables, e.g., the variable depth-to-top of rupture Z top in the study of Abrahamson and Silva (2008) .

Throughout the literature there are a lot of combinations of variables used to determine GMPEs. As in Peru  X  s and Fajfar (2010) and Akkar and Bommer (2010) , the independent variables we use in this study are: (i) the moment magnitude M w , which as stated by Chiou and Youngs (2008) is the simplest measure for correlat-ing the amount of energy released in an earthquake; (ii) the source-to-site Joyner X  X oore distance R jb in [km]; (iii) the style-of-faulting F ; and (iv) the average soil shear-wave velocity in the upper 30 m of soil underneath the observation spot V s , 30 as they enable an easier comparison with other studies and are the most modern choice. The PGA parameter is the dependent variable, measured in [g]-units, and is defined as the geometrical average of both horizontal components. Previous studies have shown that strong-motion amplitudes are log-normally distrib-uted (e.g., see Douglas and Smit, 2001 ), which we incorporated into our study by stating the ED problem as follows: ln  X  PGA  X  X  f  X  M w , R jb , V s , 30 , F  X  X  5  X 
Peru  X  s and Fajfar (2010) assembled two new databases for their experiments with the CAE method from which the larger PF-L database is also used in this study. It is a union of databases used in the following studies, which all root from the common NGA database, except for the last, which roots from Europe: Abrahamson and Silva (2008) , Boore and Atkinson (2008) ,
Campbell and Bozorgnia (2008) , Chiou and Youngs (2008) , Idriss (2008) and Akkar and Bommer (2010) . The whole data set consists of 3550 recordings and includes aftershocks. All of the variables are continuous, except for the style-of-faulting variable
F . It is defined as a non-dimensional parameter that has a value of (i) F  X  0 for normal faults; (ii) F  X  0.5 for strike-slip faults; and (iii)
F  X  1 for reverse faults ( Peru  X  s and Fajfar, 2010 ). The descriptive statistics of the PF-L data set are presented in Table 2 . For illustrative purposes Fig. 2 presents the moment magnitude
M vs. the Joyner X  X oore distance R jb and the faulting mechanism
F data distribution. From Table 2 and Fig. 2 can be seen that the data set is very unbalanced, especially for high magnitudes and short distances.

Based on the problem statement in Eq. (5) , the original PF-L data set was preprocessed by converting the actual values of the
PGA into their logarithmic values. This arrangement resulted in much faster calculations and better performance of the parameter-fitting algorithms implemented in the Lagramge sys-tem. The whole data set was randomly split 10 times into the learning and testing sets in a 90% to 10% proportion, with the purpose of a 10-fold cross-validation. That is, the testing set will not be seen by the algorithm during the ED process, but will be used as  X  X  X uture recordings X  X  that we are trying to forecast with the new formula and the models selected for comparison. 3.2. Developing grammar for PGA
In this section we analyze various aspects of the works related to the problem of modeling the PGA. The design of a CFG that would incorporate the existing domain knowledge was one of the most difficult tasks undertaken. In the course of this study it was necessary to systematically examine all the existing equation structures for the PGA that may form the basis for the specifica-tion and use of existing domain knowledge in the ED process and specify the grammar productions. Here, we provide a summary of the equation structures that were considered as information and prior-knowledge sources for the specification of a new CFG.
A worldwide summary of all the found GMPEs that take the form of an equation, published until 2010 with a detailed explanation of the derivation of each equation, can be found in Douglas (2011) .
We observed that each of the studies made slightly different assumptions and/or used modern m odeling approaches, therefore the existing PGA models vary significantly in terms of their complex-ity and the use of various rules. Some equation structures have over 30 elements and are difficult to explain to non-experts, e.g., the model derivedinthestudyof Campbell and Bozorgnia (2008) .However,a careful examination reveals that each equation element (partial function) is based on some physical assumption and the authors X  observations and knowledge about the problem. On the other hand, some authors started by specifying a simple functional form and added complexity to the equation gradually, by observing the statistical significance of each modification and its influence on the prediction error, e.g., in the example of Cauzzi and Faccioli (2008) , where the authors experimented by including (i) an anelastic decay term; (ii) a quadratic magnitude dependence; and (iii) a magnitude-dependentdecayterm,tofindoutthatnoneoftheseadditional equation elements contributes significantly to the prediction accuracy of the initial PGA equation.

Along with this ED process, the strongest criterion for the selection of the best possible equation must be its correspondence with the natural phenomenon. As a baseline, in reality the para-meter PGA represents the maximum ground acceleration that happens during an earthquake event and can never take negative values. For example, if a polynomial function is assumed as a model for the PGA, it is difficult to effectively ensure, by means of the CFG, that the induced equations will take only positive values.
However, as we defined the problem statement in Eq. (5) ,the calculated PGA values will never take negative values because the antilogarithm of the right-hand side is always positive.
For the purpose of this study, we defined one grammar, con-veniently named Katja for reference (see Table 3 ). It was designed in order to take into account the prior knowledge at a high level of detail. The actual productions of this grammar were defined by systematically studying the formu lae designed by earthquake engi-neersoverthepast50yearscollectedby Douglas (2011) .

The Katja CFG can be used to generate almost all the existing simple formulae, even those that have split a variable in classes and require the use of if-clauses. Its use in the Lagramge system first leads from the root symbol Eq to a number of non-terminal functions (see Table 3 ). These functions are named FM, FR, FV and
FF after the dependence they model, i.e., f  X  M w  X  , f  X  R f ( F ), respectively. This trend of explicitly dividing the effects among variables and summarizing them is seen in the latest studies, e.g., in the study of Campbell and Bozorgnia (2008) .In their study, however, the f dis  X  f  X  M , R RUP  X  , which we have also incorporated in the Katja grammar with the production FR -Ko FM1 FR1, i.e. FR can also be f  X  M w , R jb  X  . Each of these functions can then be succeeded with their own special sub-functions, which have been gathered during the process of a literature review. Note that these are not all of the possibilities seen in the literature, but just the most often modeled depen-dencies of the variables used in this study. In the Katja CFG we incorporated the possibility for the functions f  X  V s , 30 zero with the productions FV1 -K0 and FF -K0. The parameter const used in the productions for FV1 is limited to values between 0 and 4000 with a starting value of 800, which is the division value between the rock and the soil classes.

It is very beneficial that the Lagramge system makes it possible to build productions with all the operators or functions defined in the C programming language ( Todorovski and Dz  X  eroski, 1997 ). In order to employ if-structures in the grammar, the functions ifl and ife were defined that allow a comparison of two values for their smallness or equality, respectively. For their definition see the top of Table 3 . We also defined 11 auxiliary productions to improve the readability of the whole grammar, even though including such productions in the grammar is not obligatory. Four productions (Ma, Ra, Vs, Fa) lead from the variables X  symbols to the variables X  addresses known to the Lagramge algorithm. The remaining 7 productions lead to constant parameters, and all except for the parameter Ko are set to a single value. Note that numbers cannot be used in the grammar explicitly. The parameter(s) const succeeding Ko, which are fitted to data after the derivation, are limited to values between 100 and 100, as those are greater than the largest values seen in the literature.

The use of the Katja CFG makes it possible to limit the space of possible equations to only those that are the most plausible according to the studied domain knowledge. Thus, the grammar is an important instrument in the research and experimentation process that directs the ED system towards more appropriate equation models. 3.3. Input parameters
After defining the Katja CFG to be used for the experiments, it was also necessary to properly set the various parameters that control the exploration of the hypothesis space of possible equations. The following is a brief overview of these parameters.
Tree depth d . The parameter maximum tree depth, d , limits the depth of the production tree. The algorithm implemented in the Lagramge system evaluates the equations that are composed of only terminals at the prescribed depth, as described in Section 2 . With increasing d , the hypothesis space for the Katja grammar increases by approximately a factor of 75, as can be seen in Table 4 in the first and second columns. We were able to run an exhaustive search with d  X  5, which makes it possible to generate almost all the existing simple equation formulations taken from the study of Douglas (2011) using the Katja grammar. The other columns in Table 4 are the maximum and minimum length of an expression, the maximum number of terminal symbols const in an expression and the total number of productions applied when deriving the maximum-length expression. The value 1 means that the property cannot be calculated.

Beam width b . The Lagramge system can operate in two search modes, i.e., heuristic and exhaustive; the latter is the default option. Ideally, if time permits, the Lagramge system can gradu-ally generate and evaluate all the possible equations and find the best one according to the chosen criterion. As is clear from Table 4 , an exhaustive search beyond d  X  5 is not a good option, since at d  X  6 the Lagramge system would produce 7 : 4 10 expressions with the Katja CFG, i.e., if the derivation and fitting of one equation takes only 1 s to calculate, the whole procedure takes three months to complete. For this reason it was necessary to use the heuristic search algorithm by setting the parameter beam width b when exploring deeper in the hypothesis space. Its value determines the number of best equations that the Lagramge system will retain at each step of the search process.
This makes it possible to observe the influence of the value of the parameter b on the prediction accuracy. Increasing b is recom-mended as long as the prediction accuracy increases.
 Many times when experimenting with various grammars, the
Lagramge system exhausted the available memory due to a too big value of b . The memory consumption depends largely on the choice of the CFG, and for the Katja grammar presented in this paper, it was practically impossible to experiment with b  X  100 or more because the Lagramge system exhausted all the available virtual memory, although we also aimed at values of 200, 500 and more. This is why the values chosen for experiments are b A f 1 , 2 , 5 , 10 , 20 , 50 g .
Parameter fitting restarts m . Each time an equation is generated it contains many terminals const (see Table 3 , production Ko) and is tested against the input learning data set, which involves the use of parameter-fitting methods. These methods are likely to catch in local minimums; therefore, we can determine the number of restarts with the parameter m , and it was also necessary to observe its influence on the results. For its values we chose m A f 1 , 10 , 100 g , as we did not expect major differences with smaller steps or with greater values. 3.4. Running experiments
Bearing in mind the computatio nal complexity, we speeded up the calculation by relying on our Slovenian National Grid Infrastruc-ture and the experience gained in the course of the European projects DataMiningGrid, InteliGrid and th e ongoing mOSAIC Cloud project.
This resulted in systems that are used for the development and management of distributed applications as in Stankovski et al. (2008a,b) . As a result, it was possible to make calculations that would normally take many years on a single computer in just a few days.
In the course of this study, various grammars, operating modes and parameters for the Lagramge system were investigated. In grid-computing terminology, a series of experiments that represent independent computational tasks is also referred to as a multi-job.
In most cases the multi-jobs contained 180 experiments: m
A  X  1 , 10 , 100 , b A  X  1 , 2 , 5 , 10 , 20 , 50 , and each calculation was performed for one learning data set out of the 10 random splits (90% for learning and 10% for testing data). The diagram of the experimental set-up can be seen in Fig. 3 .Whileexperimenting,we pushed the required memory for running the Lagramge system to its limits, also on the Slovenian National Grid Infrastructure  X  sometimes approximately 200 GB of virtual memory were required to run a single instance of the Lagramge system. 4. Results
In the following subsections the obtained results of the final series of experiments corresponding to the Katja grammar are presented, both in terms of the different quantitative and quali-tative criteria, i.e., the best equation that was obtained in the experiments. 4.1. Quantitative analysis
The Lagramge system evaluated each derived equation with a parameter-fitting method by minimizing the MSE on the learning data set. The equations were then sorted in ascending order according to the calculated MSE. The best equation found which reached the lowest MSE on its learning data set is Eq. (6) . It was found when running the Lagramge system with the heuristic beam search, d  X  8, b  X  100, m  X  50 for the first learning data set with the Katja CFG. For this equation the calculated MSE on the first learning data set is 0.3828, while the calculated MSE for the corresponding testing data set is 0.3823. ln  X  PGA  X  X  4 : 57353 1 : 69293 M w  X  0 : 2417 M 2 w
For the purpose of observing the b and m parameters X  influence on the results, the equation with the minimum MSE on the learning data set was selected in each trial of the multi-job. Then, the MSE was also calculated on the testing (not previously used) data set. In Table 5 we present the average MSE on the testing data set for each 10-fold cross-validation and for all combinations of the b and m values.
Table 6 contains the corresponding standard deviation for the MSE on the testing data sets. It is clear that the standard deviation is relatively low, especially for large b values, which means that the obtained results for the MSE can be compared among each other.
The calculated MSE decreases by 15% at b  X  20 when compared to that at b  X  5, which supports the use of big b values in future experiments. It is a general ob servation that the MSE does not decrease significantly with higher values of m .

Existing studies have used various data sets and variables, making it difficult to systematically compare the obtained mathematical models. Therefore, we provide additional criteria, following the studies of Alavi and Gandomi (2011) and Gandomi et al. (2011) : correlation coefficient R R  X  root mean-squared error RMSE
RMSE  X  mean absolute error MAE MAE  X  1 n where m i and p i are the measured and predicted values of the PGA of the i th record with an average of m and p , respectively, and n is the number of records. Note that a higher R value and lower RMSE and MAE values indicate a more precise model. As marked in Eq. (8) ,the RMSE is the square root of the MSE, defined with Eq. (4) . The average and standard deviation on all 10 testing data sets of these criteria for three models are shown in Table 7 : (i) in the first column for Eq. (6) , discovered by Lagramge; (ii) in the second column for Eq. (1) proposed by Akkar and Bommer (2010) ; and (iii) in the third column for the CAE method of Peru  X  sandFajfar(2010) . According to the calculated values, this method performs better than the method of Akkar and Bommer (2010) , but worse than the CAE method of Peru  X  sandFajfar(2010) . Note, however, that the CAE method does not provide a formula that could be used in the engineers X  daily work.

Fig. 4 shows predicted vs. measured values of the PGA for the whole database. It is clear that the points are scattered on both sides of the ideal-fit line y  X  x with a majority slightly below it. Also, the maximum calculated prediction of PGA 0 : 85 g can be seen. Six measured values for PGA exceed the value of 1 g and are not depicted in the graph. 4.2. Qualitative analysis
When we observe the very structure of the found Eq. (6) ,wecan see that two constants reached their maximum value, one in the denominator with R jb at value 100 and the other in the V value 4000. In the equation there are three M w ,one R jb one V s , 30 and one F dependencies. The Lagramge system found that the V s , 30 and F terms are not negligible, even though the algorithm could choose such productions. The V s , 30 term was found as a continuous dependency, rathe r than divided into classes. Eq. (6) , which was found during our experiments with the Lagramge system is compared with formulae designed in the course of the NGA project, published by Abrahamson and Silva (2008) , Boore and Atkinson (2008) , Campbell and Bozorgnia (2008) , Chiou and Youngs (2008) and Idriss (2008) and with the formula designed by Akkar and Bommer (2010) .Eq. (6) is labeled Lagramge for conve-nience and its graph is aligned with the graphs corresponding to the formulae of these authors in Figs. 5 and 6 ,drawnformagnitudesof 6 and 7, respectively. It is clear that Eq. (6) found by the Lagramge system models the PGA completely in the range of these models, although somewhat at the lower border.

The quantitative results are relevant, bearing in mind that the graphs of Eq. (6) found by the Lagramge system are well aligned with the graphs of other existing equations. In such a case the importance of the prediction accuracy on previously unknown testing data sets should not be underestimated.
 Predicted PGA [g]
For engineers it is important to know the application range of any newly proposed equation. A common observation is that any extrapolation of the developed models outside the boundaries of the used data-set range is to be avoided (e.g., see Bommer et al., 2010 ). The majority of data lies between the values of 4 : 9 r M w r 7 : 6 and 0 km r R jb r 200 km (see Fig. 2 ), therefore, according to the data, the newly induced equations could be applied within these borders. However, it is clear from Fig. 7 , that this equation models physically only up to M w  X  7, as the graph of the predicted PGA for M w  X  8 is physically not acceptable, because the PGA for higher magnitudes cannot be lower than that of lower magnitudes. This feature of the data set, however, was also found with the use of Bayesian networks in the study of
Kuehn et al. (2011) . 5. Conclusions
This study presents a new methodology for using ED methods in earthquake engineering and an application of the Lagramge ED system for modeling the PGA. In the field of earthquake engineer-ing in a large number of studies published so far, conventional research methods are still in use. Machine-learning methods have been applied in just a few cases, e.g., MEP in the study of Alavi et al. (2011) . Compared to MEP and other machine-learning techniques, our results indicate that the Lagramge system as an emerging algorithm deserves attention from the engineering communities for several reasons.

First, the use of a CFG, where we can include prior domain knowledge and guide the algorithm towards expected results, is very convenient, bearing in mind that mathematical formulae are frequently used in the engineers X  daily work.

Second, in our study, an extensive literature review revealed various equation structures for the PGA, which were modeled by productions of the designed grammar. The best equation found is in the range of existing NGA studies with respect to the qualita-tive criterion; however, equally importantly, the calculated quan-titative criteria for the new equation are better than those obtained for the equation of Akkar and Bommer (2010) . Since the CAE method of Peru  X  s and Fajfar (2010) is obviously perform-ing better, further improvements of the obtained formulae could be made.

Third, using shear computing power it is possible to formulate and fit a much greater range of equations, unlike conventional methods. For such reasons, grid-computing and the recently developed cloud-computing infrastructures and associated approaches (as in Stankovski et al., 2008b ) could be used to speed up the calculations and explore a large hypothesis space of possible equations.

The application range of Eq. (6) is according to the qualitative analysis 4 : 0 r M w r 7 : 0 and 0 km r R jb r 200 km. The extrapola-tion outside the magnitude boundaries should be avoided and outside the distance boundaries made with great caution.
The results presented in this study suggest that ED systems should be regarded as a useful aid in engineering design, parti-cularly because they are capable of exploring a much wider space of possible equation formulations, defined by a CFG. 5.1. Further work
In future studies, possible gains in prediction accuracy could be obtained both by improving the CFG or the data set. The Katja grammar, presented in this study, cannot express all of the developed equations reported in Douglas (2011) ; therefore, its definition could be improved. It could also be specialized based on the designated use of the PGA equation, or include some other functions defined by various authors (e.g., min and max in the study of Chiou and Youngs, 2008 ). A refined selection of the data set and/or the inclusion of more variables and/or the inclusion of more records could provide better prediction results and perhaps reveal not yet discovered knowledge about the problem of predicting the PGA.

The method itself could also be improved to be able to account for the inter-and intra-event variability, which is common investigation approach in earthquake engineering studies. Faster calculations could be obtained by the parallelization of the Lagramge algorithm.

This method may initiate a whole range of ED studies in the domain of earthquake engineering. The ground motion parameter
PGA, modeled in this study, is not the commonly used intensity measure for structural design anymore; it is nowadays being replaced by the elastic spectral acceleration, the prediction of which could be the focus of future studies, because the Lagramge system shows good performance and results.
 Acknowledgments
The authors are grateful to Iztok Peru  X  s and Peter Fajfar for fruitful discussions, for providing the PF-L data set, which was used for the experiments in this study and for the PGA graphs of various authors. Special thanks go to Ljupc  X  o Todorovski for guidance when using his Lagramge ED system. The authors are also grateful to ARNES for making available the National Grid
Infrastructure for our purposes. This research is partially funded by the European Grant FP7-ICT-2009-5-256910 mOSAIC-cloud.eu. References
