 In relation extraction, one challenge that is faced when building a machine learning system is the generation of training examples. One common technique for coping with this difficulty is distant supervision (Mintz et al., 2009) which assumes that if two entities have a relationship in a known knowledge base, then all sentences that mention these two entities will express that relationship in some way. Figure 1 shows an example of the auto-Figure 1: Training instances generated through distant supervision. Upper sentence: correct la-beling; lower sentence: incorrect labeling. matic labeling of data through distant supervision. In this example, Apple and Steve Jobs are two re-tain these two entities are selected as training in-stances. The distant supervision strategy is an ef-fective method of automatically labeling training data. However, it has two major shortcomings when used for relation extraction.

First, the distant supervision assumption is too strong and causes the wrong label problem. A sen-tence that mentions two entities does not necessar-ily express their relation in a knowledge base. It is possible that these two entities may simply share the same topic. For instance, the upper sentence indeed expresses the  X  X ompany/founders X  relation in Figure 1. The lower sentence, however, does not express this relation but is still selected as a train-ing instance. This will hinder the performance of a model trained on such noisy data.
 Second, previous methods (Mintz et al., 2009; Riedel et al., 2010; Hoffmann et al., 2011) have typically applied supervised models to elaborately designed features when obtained the labeled data through distant supervision. These features are often derived from preexisting Natural Language Processing (NLP) tools. Since errors inevitably exist in NLP tools, the use of traditional features leads to error propagation or accumulation. Dis-tant supervised relation extraction generally ad-Figure 2: The sentence length distribution of Riedel X  X  dataset. dresses corpora from the Web, including many informal texts. Figure 2 shows the sentence length distribution of a benchmark distant super-vision dataset that was developed by Riedel et al. (2010). Approximately half of the sentences are longer than 40 words. McDonald and Nivre (2007) showed that the accuracy of syntactic pars-ing decreases significantly with increasing sen-tence length. Therefore, when using traditional features, the problem of error propagation or ac-cumulation will not only exist, it will grow more serious.
 In this paper, we propose a novel model dubbed Piecewise Convolutional Neural Networks (PC-NNs) with multi-instance learning to address the two problems described above. To address the first problem, distant supervised relation extraction is treated as a multi-instance problem similar to pre-vious studies (Riedel et al., 2010; Hoffmann et al., 2011; Surdeanu et al., 2012). In multi-instance problem, the training set consists of many bags, and each contains many instances. The labels of the bags are known; however, the labels of the in-stances in the bags are unknown. We design an objective function at the bag level. In the learning process, the uncertainty of instance labels can be taken into account; this alleviates the wrong label problem.

To address the second problem, we adopt con-volutional architecture to automatically learn rel-evant features without complicated NLP prepro-cessing inspired by Zeng et al. (2014). Our pro-posal is an extension of Zeng et al. (2014), in which a single max pooling operation is utilized to determine the most significant features. Al-though this operation has been shown to be effec-tive for textual feature representation (Collobert et al., 2011; Kim, 2014), it reduces the size of the hidden layers too rapidly and cannot capture the structural information between two entities (Gra-ham, 2014). For example, to identify the relation between Steve Jobs and Apple in Figure 1, we need to specify the entities and extract the structural features between them. Several approaches have employed manually crafted features that attempt to model such structural information. These ap-proaches usually consider both internal and exter-nal contexts. A sentence is inherently divided into three segments according to the two given entities. The internal context includes the characters inside the two entities, and the external context involves the characters around the two entities (Zhang et al., 2006). Clearly, single max pooling is not suf-ficient to capture such structural information. To capture structural and other latent information, we divide the convolution results into three segments based on the positions of the two given entities and devise a piecewise max pooling layer instead of the single max pooling layer. The piecewise max pooling procedure returns the maximum value in each segment instead of a single maximum value over the entire sentence. Thus, it is expected to exhibit superior performance compared with tra-ditional methods.

The contributions of this paper can be summa-rized as follows.
 Relation extraction is one of the most important topics in NLP. Many approaches to relation ex-traction have been developed, such as bootstrap-ping, unsupervised relation discovery and super-vised classification. Supervised approaches are the most commonly used methods for relation extraction and yield relatively high performance (Bunescu and Mooney, 2006; Zelenko et al., 2003; Zhou et al., 2005). In the supervised paradigm, re-lation extraction is considered to be a multi-class classification problem and may suffer from a lack of labeled data for training. To address this prob-lem, Mintz et al. (2009) adopted Freebase to per-form distant supervision. As described in Sec-tion 1, the algorithm for training data generation is sometimes faced with the wrong label problem. To address this shortcoming, (Riedel et al., 2010; Hoffmann et al., 2011; Surdeanu et al., 2012) de-veloped the relaxed distant supervision assump-tion for multi-instance learning. The term  X  X ulti-instance learning was coined by (Dietterich et al., 1997) while investigating the problem of predict-ing drug activity. In multi-instance learning, the uncertainty of instance labels can be taken into ac-count. The focus of multi-instance learning is to discriminate among the bags.

These methods have been shown to be effec-tive for relation extraction. However, their per-formance depends strongly on the quality of the designed features. Most existing studies have con-centrated on extracting features to identify the relations between two entities. Previous meth-ods can be generally categorized into two types: feature-based methods and kernel-based methods. In feature-based methods, a diverse set of strate-gies is exploited to convert classification clues (e.g., sequences, parse trees) into feature vec-tors (Kambhatla, 2004; Suchanek et al., 2006). Feature-based methods suffer from the necessity of selecting a suitable feature set when convert-ing structured representations into feature vectors. Kernel-based methods provide a natural alterna-tive to exploit rich representations of input classifi-cation clues, such as syntactic parse trees. Kernel-based methods enable the use of a large set of fea-tures without needing to extract them explicitly. Several kernels have been proposed, such as the convolution tree kernel (Qian et al., 2008), the sub-sequence kernel (Bunescu and Mooney, 2006) and the dependency tree kernel (Bunescu and Mooney, 2005).

Nevertheless, as mentioned in Section 1, it is difficult to design high-quality features using ex-isting NLP tools. With the recent revival of in-terest in neural networks, many researchers have investigated the possibility of using neural net-works to automatically learn features (Socher et al., 2012; Zeng et al., 2014). Inspired by Zeng et al. (2014), we propose the use of PCNNs with multi-instance learning to automatically learn fea-tures for distant supervised relation extraction. Di-etterich et al. (1997) suggested that the design of multi-instance modifications for neural net-works is a particularly interesting topic. Zhang and Zhou (2006) successfully incorporated multi-instance learning into traditional Backpropagation (BP) and Radial Basis Function (RBF) networks and optimized these networks by minimizing a sum-of-squares error function. In contrast to their method, we define the objective function based on the cross-entropy principle. Distant supervised relation extraction is formu-lated as multi-instance problem. In this section, we present innovative solutions that incorporate multi-instance learning into a convolutional neu-ral network to fulfill this task. PCNNs are pro-posed for the automatic learning of features with-out complicated NLP preprocessing. Figure 3 shows our neural network architecture for distant supervised relation extraction. It illustrates the procedure that handles one instance of a bag. This procedure includes four main parts: Vector Rep-resentation , Convolution , Piecewise Max Pooling and Softmax Output . We describe these parts in detail below. 3.1 Vector Representation The inputs of our network are raw word tokens. When using neural networks, we typically trans-form word tokens into low-dimensional vectors. In our method, each input word token is trans-formed into a vector by looking up pre-trained word embeddings. Moreover, we use position fea-tures (PFs) to specify entity pairs, which are also transformed into vectors by looking up position embeddings. 3.1.1 Word Embeddings Word embeddings are distributed representations of words that map each word in a text to a  X  X  X -dimensional real-valued vector. They have re-cently been shown to capture both semantic and syntactic information about words very well, set-ting performance records in several word similar-ity tasks (Mikolov et al., 2013; Pennington et al., 2014). Using word embeddings that have been trained a priori has become common practice for Kojo Annan and Kofi Annan . enhancing many other NLP tasks (Parikh et al., 2014; Huang et al., 2014).

A common method of training a neural network is to randomly initialize all parameters and then optimize them using an optimization algorithm. Recent research (Erhan et al., 2010) has shown that neural networks can converge to better local minima when they are initialized with word em-beddings. Word embeddings are typically learned in an entirely unsupervised manner by exploiting the co-occurrence structure of words in unlabeled text. Researchers have proposed several methods of training word embeddings (Bengio et al., 2003; Collobert et al., 2011; Mikolov et al., 2013). In this paper, we use the Skip-gram model (Mikolov et al., 2013) to train word embeddings. 3.1.2 Position Embeddings In relation extraction, we focus on assigning labels to entity pairs. Similar to Zeng et al. (2014), we use PFs to specify entity pairs. A PF is defined as the combination of the relative distances from the current word to e 1 and e 2 . For instance, in the following example, the relative distances from son to e 1 ( Kojo Annan ) and e 2 ( Kofi Annan ) are 3 and -2, respectively. Two position embedding matrixes ( PF 1 and PF 2 ) are randomly initialized. We then transform the relative distances into real valued vectors by looking up the position embedding matrixes. In the example shown in Figure 3, it is assumed that the size of the word embedding is d w = 4 and that the size of the position embedding is d p = 1 . In combined word embeddings and position embed-dings, the vector representation part transforms an instance into a matrix S 2 R s  X  d , where s is the sentence length and d = d w + d p 2 . The matrix S is subsequently fed into the convolution part. 3.2 Convolution In relation extraction, an input sentence that is marked as containing the target entities corre-sponds only to a relation type; it does not predict labels for each word. Thus, it might be necessary to utilize all local features and perform this predic-tion globally. When using a neural network, the convolution approach is a natural means of merg-ing all these features (Collobert et al., 2011).
Convolution is an operation between a vector of weights, w , and a vector of inputs that is treated as a sequence q . The weights matrix w is regarded as the filter for the convolution. In the example shown in Figure 3, we assume that the length of the filter is w ( w = 3 ); thus, w 2 R m ( m = w d ). We consider S to be a sequence f q 1 , q 2 , , q s g , where q i 2 R d . In general, let q i : j refer to the concatenation of q i to q j . The convolution op-eration involves taking the dot product of w with each w -gram in the sequence q to obtain another where the index j ranges from 1 to s + w 1 . Out-of-range input values q i , where i &lt; 1 or i &gt; s , are taken to be zero.

The ability to capture different features typi-cally requires the use of multiple filters (or feature maps) in the convolution. Under the assumption that we use n filters ( W = f w 1 , w 2 , , w n g ), the convolution operation can be expressed as fol-lows: The convolution result is a matrix C = f c an example in which we use 3 different filters in the convolution procedure. 3.3 Piecewise Max Pooling The size of the convolution output matrix C 2 in the sentence that is fed into the network. To apply subsequent layers, the features that are ex-tracted by the convolution layer must be com-bined such that they are independent of the sen-tence length. In traditional Convolution Neural Networks (CNNs), max pooling operations are of-ten applied for this purpose (Collobert et al., 2011; Zeng et al., 2014). This type of pooling scheme naturally addresses variable sentence lengths. The idea is to capture the most significant features (with the highest values) in each feature map.
However, despite the widespread use of single max pooling, this approach is insufficient for rela-tion extraction. As described in the first section, single max pooling reduces the size of the hidden layers too rapidly and is too coarse to capture fine-grained features for relation extraction. In addi-tion, single max pooling is not sufficient to cap-ture the structural information between two enti-ties. In relation extraction, an input sentence can be divided into three segments based on the two selected entities. Therefore, we propose a piece-wise max pooling procedure that returns the max-imum value in each segment instead of a single maximum value. As shown in Figure 3, the output of each convolutional filter c i is divided into three segments f c i 1 , c i 2 , c i 3 g by Kojo Annan and Kofi Annan . The piecewise max pooling procedure can be expressed as follows:
For the output of each convolutional filter, we can obtain a 3-dimensional vector p i = f p i 1 , p i 2 , p i 3 g . We then concatenate all vectors p 1: n and apply a non-linear function, such as the hyperbolic tangent. Finally, the piecewise max pooling procedure outputs a vector: where g 2 R 3 n . The size of g is fixed and is no longer related to the sentence length. 3.4 Softmax Output To compute the confidence of each relation, the feature vector g is fed into a softmax classifier. o 2 R n 1 is the final output of the network, where n 1 is equal to the number of possible relation types for the relation extraction system.

We employ dropout (Hinton et al., 2012) on the penultimate layer for regularization. Dropout pre-vents the co-adaptation of hidden units by ran-domly dropping out a proportion p of the hidden units during forward computing. We first apply a  X  X asking X  operation ( g  X  r ) on g , where r is a vec-tor of Bernoulli random variables with probability p of being 1. Eq.(5) becomes:
Each output can then be interpreted as the con-fidence score of the corresponding relation. This score can be interpreted as a conditional probabil-ity by applying a softmax operation (see Section 3.5). In the test procedure, the learned weight vec-tors are scaled by p such that  X  W 1 = p W 1 and are used (without dropout) to score unseen instances. 3.5 Multi-instance Learning In order to alleviate the wrong label problem, we use multi-instance learning for PCNNs. The PCNNs-based relation extraction can be stated as a quintuple  X  = ( E , PF 1 , PF 2 , W , W 1 ) 2 . The in-put to the network is a bag. Suppose that there are T bags f M 1 , M 2 , , M T g and that the i -th bag contains q i instances M i = f m 1 The objective of multi-instance learning is to pre-dict the labels of the unseen bags. In this paper, all instances in a bag are considered independently. Given an input instance m j parameter  X  outputs a vector o , where the r -th component o r corresponds to the score associated Algorithm 1 Multi-instance learning 1: Initialize  X  . Partition the bags into mini-2: Randomly choose a mini-batch, and feed the 3: Find the j -th instance m j i ( 1 i b s ) in each 4: Update  X  based on the gradients of m j i ( 1 5: Repeat steps 2-4 until either convergence or with relation r . To obtain the conditional probabil-ity p ( r j m,  X  ) , we apply a softmax operation over all relation types: The objective of multi-instance learning is to dis-criminate bags rather than instances. To do so, we must define the objective function on the bags. Given all ( T ) training bags ( M i , y i ), we can define the objective function using cross-entropy at the bag level as follows: where j is constrained as follows: Using this defined objective function, we max-imize J (  X  ) through stochastic gradient descent over shuffled mini-batches with the Adadelta (Zeiler, 2012) update rule. The entire training pro-cedure is described in Algorithm 1.

From the introduction presented above, we know that the traditional backpropagation algo-rithm modifies a network in accordance with all training instances, whereas backpropagation with multi-instance learning modifies a network based on bags. Thus, our method captures the nature of distant supervised relation extraction, in which some training instances will inevitably be incor-rectly labeled. When a trained PCNN is used for prediction, a bag is positively labeled if and only if the output of the network on at least one of its instances is assigned a positive label. Our experiments are intended to provide evidence that supports the following hypothesis: automat-ically learning features using PCNNs with multi-instance learning can lead to an increase in perfor-mance. To this end, we first introduce the dataset and evaluation metrics used. Next, we test several variants via cross-validation to determine the pa-rameters to be used in our experiments. We then compare the performance of our method to those of several traditional methods. Finally, we evalu-ate the effects of piecewise max pooling and multi-4.1 Dataset and Evaluation Metrics that was developed by (Riedel et al., 2010) and has also been used by (Hoffmann et al., 2011; Sur-deanu et al., 2012). This dataset was generated by aligning Freebase relations with the NYT corpus, with sentences from the years 2005-2006 used as the training corpus and sentences from 2007 used as the testing corpus.

Following previous work (Mintz et al., 2009), we evaluate our method in two ways: the held-out evaluation and the manual evaluation. The held-out evaluation only compares the extracted rela-tion instances against Freebase relation data and reports the precision/recall curves of the experi-ments. In the manual evaluation, we manually check the newly discovered relation instances that are not in Freebase. 4.2 Experimental Settings 4.2.1 Pre-trained Word Embeddings In this paper, we use the Skip-gram model NYT corpus. Word2vec first constructs a vocab-ulary from the training text data and then learns vector representations of the words. To obtain the embeddings of the entities, we concatenate the to-kens of a entity using the ## operator when the entity has multiple word tokens. Since a compar-ison of the word embeddings is beyond the scope Batch size = 50  X  = 0 . 95 ,  X  = 1 e  X  6 p = 0 . 5 of this paper, our experiments directly utilize 50-dimensional vectors. 4.2.2 Parameter Settings In this section, we experimentally study the ef-fects of two parameters on our models: the win-dow size, w , and the number of feature maps, n . Following (Surdeanu et al., 2012), we tune all of the models using three-fold validation on the train-ing set. We use a grid search to determine the op-timal parameters and manually specify subsets of the parameter spaces: w 2f 1 , 2 , 3 , , 7 g and n 2f 50 , 60 , , 300 g . Table 1 shows all parame-ters used in the experiments. Because the position dimension has little effect on the result, we heuris-tically choose d p = 5 . The batch size is fixed to 50. We use Adadelta (Zeiler, 2012) in the up-date procedure; it relies on two main parameters,  X  and  X  , which do not significantly affect the per-formance (Zeiler, 2012). Following (Zeiler, 2012), we choose 0 . 95 and 1 e  X  6 , respectively, as the val-ues of these parameters. In the dropout operation, we randomly set the hidden unit activities to zero with a probability of 0.5 during training. 4.3 Comparison with Traditional Approaches 4.3.1 Held-out Evaluation The held-out evaluation provides an approximate measure of precision without requiring costly hu-man evaluation. Half of the Freebase relations are used for testing. The relation instances discovered from the test articles are automatically compared with those in Freebase.

To evaluate the proposed method, we select the following three traditional methods for com-parison. Mintz represents a traditional distant-supervision-based model that was proposed by (Mintz et al., 2009). MultiR is a multi-instance learning method that was proposed by (Hoffmann et al., 2011). MIML is a multi-instance multi-label model that was proposed by (Surdeanu et al., 2012). Figure 4 shows the precision-recall curves for each method, where PCNNs+MIL denotes our method, and demonstrates that PCNNs+MIL achieves higher precision over the entire range of recall. PCNNs+MIL enhances the recall to ap-Figure 4: Performance comparison of the pro-posed method with traditional approaches.
 Table 2: Precision values for the top 100, top 200, and top 500 extracted relation instances upon man-ual evaluation. proximately 34% without any loss of precision. In terms of both precision and recall, PCNNs+MIL outperforms all other evaluated approaches. No-tably, the results of the methods evaluated for com-parison were obtained using manually crafted fea-tures. By contrast, our result is obtained by au-tomatically learning features from original words. The results demonstrate that the proposed method is an effective technique for distant supervised re-lation extraction. Automatically learning features via PCNNs can alleviate the error propagation that occurs in traditional feature extraction. Incorpo-rating multi-instance learning into a convolutional neural network is an effective means of addressing the wrong label problem. 4.3.2 Manual Evaluation It is worth emphasizing that there is a sharp de-cline in the held-out precision-recall curves of PC-NNs+MIL at very low recall (Figure 4). A manual check of the misclassified examples that were pro-duced with high confidence reveals that the ma-jorities of these examples are false negatives and are actually true relation instances that were mis-classified due to the incomplete nature of Free-base.

Thus, the held-out evaluation suffers from false negatives in Freebase. We perform a manual eval-uation to eliminate these problems. For the manual evaluation, we choose the entity pairs for which at least one participating entity is not present in Freebase as a candidate. This means that there is no overlap between the held-out and manual can-didates. Because the number of relation instances that are expressed in the test data is unknown, we cannot calculate the recall in this case. Instead, we calculate the precision of the top N extracted rela-tion instances. Table 2 presents the manually eval-uated precisions for the top 100, top 200, and top 500 extracted instances. The results show that PC-NNs+MIL achieves the best performance; more-over, the precision is higher than in the held-out evaluation. This finding indicates that many of the false negatives that we predict are, in fact, true re-lational facts. The sharp decline observed in the held-out precision-recall curves is therefore rea-sonable. 4.4 Effect of Piecewise Max Pooling and In this paper, we develop a method of piecewise max pooling and incorporate multi-instance learn-ing into convolutional neural networks for distant supervised relation extraction. To demonstrate the effects of these two techniques, we empirically study the performance of systems in which these techniques are not implemented through held-out evaluations (Figure 5). CNNs represents convolu-tional neural networks to which single max pool-ing is applied. Figure 5 shows that when piecewise max pooling is used ( PCNNs ), better results are produced than those achieved using CNNs . More-over, compared with CNNs+MIL , PCNNs achieve slightly higher precision when the recall is greater than 0.08. Since the parameters for all the model are determined by grid search, we can observe that CNNs cannot achieve competitive results com-pared to PCNNs when increasing the size of the hidden layer of convolutional neural networks. It means that we cannot capture more useful infor-mation by simply increasing the network param-eter. These results demonstrate that the proposed piecewise max pooling technique is beneficial and Figure 5: Effect of piecewise max pooling and multi-instance learning. can effectively capture structural information for relation extraction. A similar phenomenon is also observed when multi-instance learning is added to the network. Both CNNs+MIL and PCNNs+MIL outperform their counterparts CNNs and PCNNs , respectively, thereby demonstrating that incorpo-ration of multi-instance learning into our neural network was successful in solving the wrong label problem. As expected, PCNNs+MIL obtains the best results because the advantages of both tech-niques are achieved simultaneously. In this paper, we exploit Piecewise Convolutional Neural Networks (PCNNs) with multi-instance learning for distant supervised relation extraction. In our method, features are automatically learned without complicated NLP preprocessing. We also successfully devise a piecewise max pooling layer in the proposed network to capture structural in-formation and incorporate multi-instance learning to address the wrong label problem. Experimental results show that the proposed approach offers sig-nificant improvements over comparable methods. This work was sponsored by the National Basic Research Program of China (no. 2014CB340503) and the National Natural Science Foundation of China (no. 61272332 and no. 61202329). We thank the anonymous reviewers for their insight-ful comments.
