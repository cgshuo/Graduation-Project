 Translation consistency is an important factor for large-scale translation, especially for domain-specific translations in an industrial environment. For example, in the translation of technical docu-ments, lexical as well as structural consistency is es-sential to produce a fluent target-language sentence. Moreover, even in the case of translation errors, con-sistency in the errors (e.g. repetitive error patterns) are easier to diagnose and subsequently correct by translators.
In phrase-based SMT, translation models and lan-guage models are automatically learned and/or gen-eralised from the training data, and a translation is produced by maximising a weighted combination of these models. Given that global contextual informa-tion is not normally incorporated, and that training data is usually noisy in nature, there is no guaran-tee that an SMT system can produce translations in a consistent manner.

On the other hand, TM systems  X  widely used by translators in industrial environments for enterprise localisation by translators  X  can shed some light on mitigating this limitation. TM systems can assist translators by retrieving and displaying previously translated similar  X  X xample X  sentences (displayed as source-target pairs, widely called  X  X uzzy matches X  in the localisation industry (Sikes, 2007)). In TM sys-tems, fuzzy matches are retrieved by calculating the similarity or the so-called  X  X uzzy match score X  (rang-ing from 0 to 1 with 0 indicating no matches and 1 indicating a full match) between the input sentence and sentences in the source side of the translation memory.

When presented with fuzzy matches, translators can then avail of useful chunks in previous transla-tions while composing the translation of a new sen-tence. Most translators only consider a few sen-tences that are most similar to the current input sen-tence; this process can inherently improve the con-sistency of translation, given that the new transla-tions produced by translators are likely to be similar to the target side of the fuzzy match they have con-sulted.

Previous research as discussed in detail in Sec-tion 2 has focused on using fuzzy match score as a threshold when using the target side of the fuzzy matches to constrain the translation of the input sentence. In our approach, we use a more fine-grained discriminative learning method to determine whether the target side of the fuzzy matches should be used as a constraint in translating the input sen-tence. We demonstrate that our method can consis-tently improve translation quality.

The rest of the paper is organized as follows: we begin by briefly introducing related research in Section 2. We present our discriminative learning method for consistent translation in Section 3 and our feature design in Section 4. We report the exper-imental results in Section 5 and conclude the paper and point out avenues for future research in Section 6. Despite the fact that TM and MT integration has long existed as a major challenge in the localisation industry, it has only recently received attention in main-stream MT research. One can loosely combine TM and MT at sentence (called segments in TMs) level by choosing one of them (or both) to recom-mend to the translators using automatic classifiers (He et al., 2010), or simply using fuzzy match score or MT confidence measures (Specia et al., 2009).
One can also tightly integrate TM with MT at the sub-sentence level. The basic idea is as follows: given a source sentence to translate, we firstly use a TM system to retrieve the most similar  X  X xample X  source sentences together with their translations. If matched chunks between input sentence and fuzzy matches can be detected, we can directly re-use the corresponding parts of the translation in the fuzzy matches, and use an MT system to translate the re-maining chunks.

As a matter of fact, implementing this idea is pretty straightforward: a TM system can easily de-tect the word alignment between the input sentence and the source side of the fuzzy match by retracing the paths used in calculating the fuzzy match score. To obtain the translation for the matched chunks, we just require the word alignment between source and target TM matches, which can be addressed using state-of-the-art word alignment techniques. More importantly, albeit not explicitly spelled out in pre-vious work, this method can potentially increase the consistency of translation, as the translation of new input sentences is closely informed and guided (or constrained) by previously translated sentences.
There are several different ways of using the translation information derived from fuzzy matches, with the following two being the most widely adopted: 1) to add these translations into a phrase table as in (Bic  X ici and Dymetman, 2008; Simard and Isabelle, 2009), or 2) to mark up the input sentence using the relevant chunk translations in the fuzzy match, and to use an MT system to translate the parts that are not marked up, as in (Smith and Clark, 2009; Koehn and Senellart, 2010; Zhechev and van Gen-abith, 2010). It is worth mentioning that translation consistency was not explicitly regarded as their pri-mary motivation in this previous work. Our research follows the direction of the second strand given that consistency can no longer be guaranteed by con-structing another phrase table.

However, to categorically reuse the translations of matched chunks without any differentiation could generate inferior translations given the fact that the context of these matched chunks in the input sen-tence could be completely different from the source side of the fuzzy match. To address this problem, both (Koehn and Senellart, 2010) and (Zhechev and van Genabith, 2010) used fuzzy match score as a threshold to determine whether to reuse the transla-tions of the matched chunks. For example, (Koehn and Senellart, 2010) showed that reusing these trans-lations as large rules in a hierarchical system (Chi-ang, 2005) can be beneficial when the fuzzy match score is above 70%, while (Zhechev and van Gen-abith, 2010) reported that it is only beneficial to a phrase-based system when the fuzzy match score is above 90%.

Despite being an informative measure, using fuzzy match score as a threshold has a number of limitations. Given the fact that fuzzy match score is normally calculated based on Edit Distance (Lev-enshtein, 1966), a low score does not necessarily imply that the fuzzy match is harmful when used to constrain an input sentence. For example, in longer sentences where fuzzy match scores tend to be low, some chunks and the corresponding trans-lations within the sentences can still be useful. On the other hand, a high score cannot fully guarantee the usefulness of a particular translation. We address this problem using discriminative learning. 3.1 Formulation of the Problem Given a sentence e to translate, we retrieve the most similar sentence e  X  from the translation memory as-sociated with target translation f  X  . The m com-mon  X  X hrases X   X e m tified. Given the word alignment information be-tween e  X  and f  X  , one can easily obtain the corre-sponding translations  X  f  X  m  X e pairs X  &lt;  X  e the translations of the matched phrases in the input sentence. The remaining words without specified translations will be translated by an MT system.
For example, given an input sentence e e e e i +1 ,  X  f  X  = f  X  j f  X  j +1 derived from the fuzzy match, we can mark up the input sentence as: Our method to constrain the translations using TM fuzzy matches is similar to (Koehn and Senel-lart, 2010), except that the word alignment between e and f  X  is the intersection of bidirectional GIZA++ (Och and Ney, 2003) posterior alignments. We use the intersected word alignment to minimise the noise introduced by word alignment of only one direction in marking up the input sentence. 3.2 Discriminative Learning Whether the translation information from the fuzzy matches should be used or not (i.e. whether the input sentence should be marked up) is determined using a discriminative learning procedure. The translation information refers to the  X  X hrase pairs X  derived us-ing the method described in Section 3.1. We cast this problem as a binary classification problem. 3.2.1 Support Vector Machines SVMs (Cortes and Vapnik, 1995) are binary classi-fiers that classify an input instance based on decision rules which minimise the regularised error function in (1): where ( x stances that are mapped by the function  X  to a higher dimensional space. w is the weight vector,  X  is the relaxation variable and C &gt; 0 is the penalty param-eter.
 Solving SVMs is viable using a kernel function K in (1) with K ( x i , x j ) =  X ( x i ) T  X ( x j ) . We per-form our experiments with the Radial Basis Func-tion (RBF) kernel, as in (2):
When using SVMs with the RBF kernel, we have two free parameters to tune on: the cost parameter C in (1) and the radius parameter  X  in (2).

In each of our experimental settings, the param-eters C and  X  are optimised by a brute-force grid search. The classification result of each set of pa-rameters is evaluated by cross validation on the training set.

The SVM classifier will thus be able to predict the usefulness of the TM fuzzy match, and deter-mine whether the input sentence should be marked up using relevant phrase pairs derived from the fuzzy match before sending it to the SMT system for trans-lation. The classifier uses features such as the fuzzy match score, the phrase and lexical translation prob-abilities of these relevant phrase pairs, and addi-tional syntactic dependency features. Ideally the classifier will decide to mark up the input sentence if the translations of the marked phrases are accurate when taken contextual information into account. As large-scale manually annotated data is not available for this task, we use automatic TER scores (Snover et al., 2006) as the measure for training data annota-tion.

We label the training examples as in (3):
Each instance is associated with a set of features which are discussed in more detail in Section 4. 3.2.2 Classification Confidence Estimation We use the techniques proposed by (Platt, 1999) and improved by (Lin et al., 2007) to convert classifica-tion margin to posterior probability, so that we can easily threshold our classifier (cf. Section 5.4.2).
Platt X  X  method estimates the posterior probability with a sigmoid function, as in (4): where f = f ( x ) is the decision function of the esti-mated SVM. A and B are parameters that minimise the cross-entropy error function F on the training data, as in (5): where z = ( A, B ) is a parameter setting, and N and negative examples, respectively, for the label y These numbers are obtained using an internal cross-validation on the training set. The features used to train the discriminative classi-fier, all on the sentence level, are described in the following sections. 4.1 The TM Feature The TM feature is the fuzzy match score, which in-dicates the overall similarity between the input sen-tence and the source side of the TM output. If the input sentence is similar to the source side of the matching segment, it is more likely that the match-ing segment can be used to mark up the input sen-tence.

The calculation of the fuzzy match score itself is one of the core technologies in TM systems, and varies among different vendors. We compute fuzzy match cost as the minimum Edit Distance (Leven-shtein, 1966) between the source and TM entry, nor-malised by the length of the source as in (6), as most of the current implementations are based on edit distance while allowing some additional flexi-ble matching. where e is the sentence to translate, and s is the source side of an entry in the TM. For fuzzy match scores F , h 4.2 Translation Features We use four features related to translation probabil-ities, i.e. the phrase translation and lexical probabil-ities for the phrase pairs &lt;  X  e ing the method in Section 3.1. Specifically, we use the phrase translation probabilities p (  X  f  X  abilities p lated in (Koehn et al., 2003). In cases where mul-tiple phrase pairs are used to mark up one single input sentence e , we use a unified score for each of the four features, which is an average over the corresponding feature in each phrase pair. The intu-ition behind these features is as follows: phrase pairs &lt;  X  e m ,  X  f  X  m &gt; derived from the fuzzy match should also be reliable with respect to statistically produced models.

We also have a count feature, i.e. the number of phrases used to mark up the input sentence, and a binary feature, i.e. whether the phrase table contains at least one phrase pair &lt;  X  e mark up the input sentence. 4.3 Dependency Features Given the phrase pairs &lt;  X  e the fuzzy match, and used to translate the corre-sponding chunks of the input sentence (cf. Sec-tion 3.1), these translations are more likely to be co-herent in the context of the particular input sentence if the matched parts on the input side are syntacti-cally and semantically related.

For matched phrases  X  e tence and the source side of the fuzzy match, we de-fine the contextual information of the input side us-ing dependency relations between words e and the remaining words e
We use the Stanford parser to obtain the depen-dency structure of the input sentence. We add a pseudo-label S YS P UNCT to punctuation marks, whose governor and dependent are both the punc-tuation mark. The dependency features designed to capture the context of the matched input phrases  X  e are as follows:
Coverage features measure the coverage of de-pendency labels on the input sentence in order to obtain a bigger picture of the matched parts in the input. For each dependency label L , we consider its head or modifier as covered if the corresponding in-put word e Our coverage features are the frequencies of gov-ernor and dependent coverage calculated separately for each dependency label.

Position features identify whether the head and the tail of a sentence are matched, as these are the cases in which the matched translation is not af-fected by the preceding words (when it is the head) or following words (when it is the tail), and is there-fore more reliable. The feature is set to 1 if this hap-pens, and to 0 otherwise. We distinguish among the possible dependency labels, the head or the tail of the sentence, and whether the aligned word is the governor or the dependent. As a result, each per-mutation of these possibilities constitutes a distinct binary feature.

The consistency feature is a single feature which determines whether matched phrases  X  e a consistent dependency structure, instead of being distributed discontinuously around in the input sen-tence. We assume that a consistent structure is less influenced by its surrounding context. We set this feature to 1 if every word in  X  e other word in  X  e 5.1 Experimental Setup Our data set is an English X  X hinese translation mem-ory with technical translation from Symantec, con-sisting of 87K sentence pairs. The average sentence length of the English training set is 13.3 words and the size of the training set is comparable to the larger TMs used in the industry. Detailed corpus statistics about the training, development and test sets for the SMT system are shown in Table 1.

The composition of test subsets based on fuzzy match scores is shown in Table 2. We can see that sentences in the test sets are longer than those in the training data, implying a relatively difficult trans-lation task. We train the SVM classifier using the libSVM (Chang and Lin, 2001) toolkit. The SVM-training and validation is on the same training sen-tences 1 as the SMT system with 5 -fold cross valida-tion.

The SVM hyper-parameters are tuned using the training data of the first fold in the 5 -fold cross val-idation via a brute force grid search. More specifi-cally, for parameter C in (1), we search in the range [2  X  5 , 2 15 ] , while for parameter  X  (2) we search in the range [2  X  15 , 2 3 ] . The step size is 2 on the exponent.
We conducted experiments using a standard log-linear PB-SMT model: G IZA ++ implementation of IBM word alignment model 4 (Och and Ney, 2003), the refinement and phrase-extraction heuristics de-scribed in (Koehn et al., 2003), minimum-error-rate training (Och, 2003), a 5-gram language model with Kneser-Ney smoothing (Kneser and Ney, 1995) trained with SRILM (Stolcke, 2002) on the Chinese side of the training data, and Moses (Koehn et al., 2007) which is capable of handling user-specified translations for some portions of the input during de-coding. The maximum phrase length is set to 7. 5.2 Evaluation The performance of the phrase-based SMT system is measured by BLEU score (Papineni et al., 2002) and TER (Snover et al., 2006). Significance test-ing is carried out using approximate randomisation (Noreen, 1989) with a 95% confidence level.

We also measure the quality of the classification by precision and recall. Let A be the set of pre-dicted markup input sentences, and B be the set of input sentences where the markup version has a lower TER score than the plain version. We stan-dardly define precision P and recall R as in (7): 5.3 Cross-fold translation In order to obtain training samples for the classifier, we need to label each sentence in the SMT training data as to whether marking up the sentence can pro-duce better translations. To achieve this, we translate both the marked-up versions and plain versions of the sentence and compare the two translations using the sentence-level evaluation metric TER.

We do not make use of additional training data to translate the sentences for SMT training, but instead use cross-fold translation. We create a new training corpus T by keeping 95% of the sentences in the original training corpus, and creating a new test cor-pus H by using the remaining 5% of the sentences. Using this scheme we make 20 different pairs of cor-pora ( T the original training corpus is in exactly one H some 1  X  i  X  20 . We train 20 different systems using each T corresponding H of H The development set is kept the same for all systems. 5.4 Experimental Results 5.4.1 Translation Results Table 3 contains the translation results of the SMT system when we use discriminative learning to mark up the input sentence (M ARKUP -DL). The first row (B
ASELINE ) is the result of translating plain test sets without any markup, while the second row is the result when all the test sentences are marked up. We also report the oracle scores, i.e. the up-perbound of using our discriminative learning ap-proach. As we can see from this table, we obtain sig-nificantly inferior results compared to the the Base-line system if we categorically mark up all the in-put sentences using phrase pairs derived from fuzzy matches. This is reflected by an absolute 1.4 point drop in BLEU score and a 1.8 point increase in TER. On the other hand, both the oracle BLEU and TER scores represent as much as a 2.5 point improve-ment over the baseline. Our discriminative learning method (M ARKUP -DL), which automatically clas-sifies whether an input sentence should be marked up, leads to an increase of 0.7 absolute BLEU points over the B ASELINE , which is statistically signifi-cant. We also observe a slight decrease in TER com-pared to the B ASELINE . Despite there being much room for further improvement when compared to the Oracle score, the discriminative learning method ap-pears to be effective not only in maintaining transla-tion consistency, but also a statistically significant improvement in translation quality. 5.4.2 Classification Confidence Thresholding To further analyse our discriminative learning ap-proach, we report the classification results on the test set using the SVM classifier. We also investigate the use of classification confidence, as described in Sec-tion 3.2.2, as a threshold to boost classification pre-cision if required. Table 4 shows the classification and translation results when we use different con-fidence thresholds. The default classification con-fidence is 0.50, and the corresponding translation results were described in Section 5.4.1. We inves-tigate the impact of increasing classification confi-dence on the performance of the classifier and the translation results. As can be seen from Table 4, increasing the classification confidence up to 0.70 leads to a steady increase in classification precision with a corresponding sacrifice in recall. The fluc-tuation in classification performance has an impact on the translation results as measured by BLEU and TER. We can see that the best BLEU as well as TER scores are achieved when we set the classification confidence to 0.60, representing a modest improve-ment over the default setting (0.50). Despite the higher precision when the confidence is set to 0.7, the dramatic decrease in recall cannot be compen-sated for by the increase in precision.

We can also observe from Table 4 that the recall is quite low across the board, and the classification results become unstable when we further increase the level of confidence to above 0.70. This indicates the degree of difficulty of this classification task, and suggests some directions for future research as dis-cussed at the end of this paper. 5.4.3 Comparison with Previous Work As discussed in Section 2, both (Koehn and Senel-lart, 2010) and (Zhechev and van Genabith, 2010) used fuzzy match score to determine whether the in-put sentences should be marked up. The input sen-tences are only marked up when the fuzzy match score is above a certain threshold. We present the results using this method in Table 5. From this ta-ble, we can see an inferior performance compared to the B ASELINE results (cf. Table 3) when the fuzzy match score is below 0.70. A modest gain can only be achieved when the fuzzy match score is above 0.8. This is slightly different from the conclusions drawn in (Koehn and Senellart, 2010), where gains are observed when the fuzzy match score is above 0.7, and in (Zhechev and van Genabith, 2010) where gains are only observed when the score is above 0.9. Comparing Table 5 with Table 4, we can see that our classification method is more effective. This confirms our argument in the last paragraph of Sec-tion 2, namely that fuzzy match score is not informa-tive enough to determine the usefulness of the sub-sentences in a fuzzy match, and that a more compre-hensive set of features, as we have explored in this paper, is essential for the discriminative learning-based method to work.

To further validate our assumption, we analyse the training sentences by grouping them accord-ing to their fuzzy match score ranges. For each group of sentences, we calculate the percentage of sentences where markup (and respectively without markup) can produce better translations. The statis-tics are shown in Table 6. We can see that for sen-tences with fuzzy match scores lower than 0.8, more sentences can be better translated without markup. For sentences where fuzzy match scores are within the range (0 . 8 , 0 . 9] , more sentences can be better translated with markup. However, within the range (0 . 9 , 1 . 0] , surprisingly, actually more sentences re-ceive better translation without markup. This indi-cates that fuzzy match score is not a good measure to predict whether fuzzy matches are beneficial when used to constrain the translation of an input sentence. 5.5 Contribution of Features We also investigated the contribution of our differ-ent feature sets. We are especially interested in the contribution of dependency features, as they re-flect whether translation consistency can be captured using syntactic knowledge. The classification and translation results using different features are re-ported in Table 7. We observe a significant improve-ment in both classification precision and recall by adding dependency (D EP ) features on top of TM and translation features. As a result, the translation quality also significantly improves. This indicates that dependency features which can capture struc-tural and semantic similarities are effective in gaug-ing the usefulness of the phrase pairs derived from the fuzzy matches. Note also that without including the dependency features, our discriminative learning method cannot outperform the B ASELINE (cf. Ta-ble 3) in terms of translation quality. 5.6 Improved Translations In order to pinpoint the sources of improvements by marking up the input sentence, we performed some manual analysis of the output. We observe that the improvements can broadly be attributed to two rea-sons: 1) the use of long phrase pairs which are miss-ing in the phrase table, and 2) deterministically using highly reliable phrase pairs.

Phrase-based SMT systems normally impose a limit on the length of phrase pairs for storage and speed considerations. Our method can overcome this limitation by retrieving and reusing long phrase pairs on the fly. A similar idea, albeit from a dif-ferent perspective, was explored by (Lopez, 2008), where he proposed to construct a phrase table on the fly for each sentence to be translated. Differently from his approach, our method directly translates part of the input sentence using fuzzy matches re-trieved on the fly, with the rest of the sentence trans-lated by the pre-trained MT system. We offer some more insights into the advantages of our method by means of a few examples.

Example 1 shows translation improvements by using long phrase pairs. Compared to the refer-ence translation, we can see that for the underlined phrase, the translation without markup contains (i) word ordering errors and (ii) a missing right quota-tion mark. In Example 2, by specifying the transla-tion of the final punctuation mark, the system cor-rectly translates the relative clause  X  X hat you select X . The translation of this relative clause is missing when translating the input without markup. This improvement can be partly attributed to the reduc-tion in search errors by specifying the highly reliable translations for phrases in an input sentence. In this paper, we introduced a discriminative learn-ing method to tightly integrate fuzzy matches re-trieved using translation memory technologies with phrase-based SMT systems to improve translation consistency. We used an SVM classifier to predict whether phrase pairs derived from fuzzy matches could be used to constrain the translation of an in-put sentence. A number of feature functions includ-ing a series of novel dependency features were used to train the classifier. Experiments demonstrated that discriminative learning is effective in improving translation quality and is more informative than the fuzzy match score used in previous research. We re-port a statistically significant 0.9 absolute improve-ment in BLEU score using a procedure to promote translation consistency.

As mentioned in Section 2, the potential improve-ment in sentence-level translation consistency us-ing our method can be attributed to the fact that the translation of new input sentences is closely in-formed and guided (or constrained) by previously translated sentences using global features such as dependencies. However, it is worth noting that the level of gains in translation consistency is also dependent on the nature of the TM itself; a self-contained coherent TM would facilitate consistent translations. In the future, we plan to investigate the impact of TM quality on translation consistency when using our approach. Furthermore, we will ex-plore methods to promote translation consistency at document level.

Moreover, we also plan to experiment with phrase-by-phrase classification instead of sentence-by-sentence classification presented in this paper, in order to obtain more stable classification results. We also plan to label the training examples using other sentence-level evaluation metrics such as Me-teor (Banerjee and Lavie, 2005), and to incorporate features that can measure syntactic similarities in training the classifier, in the spirit of (Owczarzak et al., 2007). Currently, only a standard phrase-based SMT system is used, so we plan to test our method on a hierarchical system (Chiang, 2005) to facilitate direct comparison with (Koehn and Senellart, 2010). We will also carry out experiments on other data sets and for more language pairs.
 This work is supported by Science Foundation Ire-land (Grant No 07/CE/I1142) and part funded under FP7 of the EC within the EuroMatrix+ project (grant No 231720). The authors would like to thank the reviewers for their insightful comments and sugges-tions.

