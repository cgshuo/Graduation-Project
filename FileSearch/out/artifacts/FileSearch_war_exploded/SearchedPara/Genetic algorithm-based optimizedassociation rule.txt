 Department of MCA, SAN International Info. School, Anna University of Technology, Coimbatore, India Department of MCA, Kongu Engineering College, Erode, Tamilnadu, India 1. Introduction
There is a massive quantity of information available in databases belonging to different enterprises as a result of the extensive computerization and affordable storage facilities. To attain aggressive benefits the decisive objective of this huge data collection is the utilization of this information by determining previously unrevealed patterns in data that can express the process of decision making. Hence, the need of the hour is developing tools and approaches to determine knowledge concealed in the databases. For discovering knowledge hidden in databases data mining has been emerging as an efficient solution. Data Mining has been properly defined as  X  X he non-trivial extraction of implicit, previously unknown and potentially useful information from data in databases X  [1,2]. Data mining, the core step of Knowledge Discovery in Databases (KDD), is the process of applying computational techniques that, under satisfac-tory computational efficiency boundaries, generate a particular enumeration of patterns over the data [3]. In large data sets data mining involves the use of sophisticated data analysis tools to determine previ-ously unidentified, valid patterns and associations. These tools comprise statistical models, mathematical algorithms, and machine learning methods [4 X 8].

Association Rule Mining (ARM) is one of the most vital and well researched descriptive data mining techniques used today and is a developed field of research. In 1993 the task of association rule mining was primary introduced by Agarwal et al. [13]. Since its introduction, the task of association rule mining has acknowledged a great deal of attention. To extract interesting correlations, associations among sets of items in the transaction databases or other data repositories association rule mining is used to rec-ognize relationships between items in very large databases [14]. The association rule mining is mainly concentrate on single relational database, i.e. the databases that have only intra-relations between their tables and objects. The traditional relational database systems have been powered up by the concept of multirelational databases. So, mining algorithm for multirelational databases has turned into predictable. Propositional approach and structura l approach two alternative approaches on which the multi-relational data mining methods are typically based on. A transformation of relational learning problems into clas-sical attribute-value representations agreeable for conventional data mining methods is performed in propositionalisation whereas the whole hypothesis space is directly explored by the mining method in structural approach [12]. All main data mining tasks, including association analysis, classification, clus-tering, learning probabilistic models and regression are considered in existing MRDM approaches.
In the field of data mining, the multi-relational data mining grabbed a position, because of the partic-ular features which are exhibited by the multi-relational data mining algorithms prepared them accepted along with the normal data mining algorithms. In this paper, we have proposed a mining algorithm, which is powered with the mostly used association rule mining algorithm. The multi relational associa-tion rule mining algorithm concentrate on generating rules in relation with the multirelational database. The main problem face in the multirelational data mining is the generation of numerous rules, which may relevant or irrelevant. In order to avoid this difficult, the proposed approach come up with an op-timizing algorithm. The genetic algorithm (GA) is used for the optimization of the rules generated by the multi relational data mining algorithm. The GA produces most relevant results with accuracy and efficiency; because of that reason the proposed approach is adapting GA for the optimization purposes.
The main contribution of the paper is organized as follows:  X  Develop an approach for discovering optimal multi-relational rules  X  Adapted the GA to obtain the optimal rules  X  Designed a new fitness measure for GA to obtain the optimal rules  X  Experiment the proposed optimal algorithm with synthetic data.

The remaining part of the paper is organized with literature survey in the successive section. The third section illustrates the motivational algorithm behind the research. The detailed explanation of proposed approach furnished in the fourth section. The results are explained in the 5 th section of the document. The paper is concluded in the 6 th section and after that the references of the paper is listed. 2. Literature survey Literature presents with a copious number of researches that accomplish multi-relational data mining. The most commonly researched tasks include, multi-relational rule mining, multi-relational clustering and multi-relational classification. Among the various researchers available, this section presents with a handful of significant researches that performs effectual multi-relational data mining.

Wenxiang Dou et al. [15] have presented a distributed data-mining technique to mine vital rules in multiple tables. To impr ove the mining efficiency, the methods are combined with ge netic algorithm since the algorithm is in charge of finding antecedent rules and aggregate of transaction set that produces the subsequent rule from the chief attributes. According to, the matching transaction set produced the antecedent rule in a distributed way, Apriori and statistic method is in charge of mining subsequent rules from the rest relational attributes of other tables.
 Kavurucu et al. described an ILP-based concept discovery method named Confidence-based Concept Discovery (C2D) [16], in which tough declarative biases and user-defined terms are relaxed. Also, their method directly works on relational databases and a confidence-based pruning was used in their tech-nique. Jingfeng Guo et al. proposed a multi-relational association rule mining algorithm with guidance of user [17]. They have introduced the idea of the user X  X  control this approach has improved user X  X  satisfac-tion with the mining result. When compared with the conventional algorithms, the algorithm improves the precision and supports multi-relational databases directly.
 Teredesai et al. [18] have proposed an approach for multi-relational expansion to the FP-tree algorithm. The motivation for using multi-relational association rule mining for multimedia data mining was to demonstrate the potential accorded by multiple descriptions for the identical image. Two streams of preceding work prolog databases and datalog queries have dealt with the detection of association rules over multiple relations. Liang et al. [19] have in troduced an algorithm, Extended-MRI-cube, which is based on the MRI-Cube algorithm, to handle the cyclic join path situation. It is shown from the experiments that it is more appropriate and efficient than the preceding one.

Jim X nez et al. [36] have proposed an approach to mine multirelational databases. Their approach was based on the representation of multirelational databases as sets of trees, for which they proposed two alternative representation schemes. Tree mining techniques was applied as the basis for multirela-tional data mining techniques, such as multirelationa l classi?cation or m ultirelati onal clustering. They analyzed the differences between identifying induced and embedded tree patterns in the proposed tree-based representation schemes and they studied the relationships among the sets of tree patterns that can be discovered in each case.

Malerba et al. [22] have proposed a relational classification algorithm, named TRANSC, which works in a transductive background and employs a probabilistic approach for classification. They have con-sidered the case of examples represented as a set of many tables of a relational database. To recognize borderline examples, the transductive learning strategy iterates on a k-NN based re-classification of la-beled and unlabeled examples, and to bootstrap the transductive algorithm, the relational probabilistic classifier Mr-SBC is used. Guo and Viktor [23] have reported a multiple view strategy for mining re-lational databases where neither improvement nor destruction was necessary. To build a final model, the approach learns from multiple views of a relational database, and then integrates the information acquired by individual view learners. In terms of precision obtained and running time required, their empirical studies have shown that their method compares well in association with the classifiers induced by the majority of multi-relational mining systems.

Lee et al. [24] have proposed a multi-relational g-mean decision tree algorithm. This algorithm was developed to solve the unnecessary problem in a multi-relational database. Their approach can more pre-cisely mine a multi-relational imbalanced database as shown in their experiments. Yin et al. [25] have proposed an approach named CrossMine. This approach includes a set of novel and influential meth-ods for multi-relational categorization which includes 1) tuple ID propagation, a proficient and flexible method for virtually combination relations, which enables suitable search among different relations, 2) definitions for predicates and decision-tree nodes, which involve aggregated information to supply nec-essary statistics for categorization, and 3) a selective sampling method for improving scalability with regard to the number of tuples. With these techniques as base, two scalable and precise methods for multi-relational categorization: CrossMine-Rule, a rule-based method and CrossMine-Tree, a decision-tree-based method were proposed.

The optimized algorithm of our work considered a new fitness for measuring the importance of the relational rules generated. But [15,16] have provided confidence measure for relational pattern mining. In [17], rules are mined based on the user input but, the optimized algorithm discovers most important rules through the optimization process [17]. Then, FP-algorithm was adapted in [18], tree structure was used in [36], and query processing was used in [19]. At the same time, the optimization procedure of GA is adapted to mine the relational patterns in the proposed method. The works presented in [22 X 25] were used to mine the relational patterns for classification. But, here, we have mined the relational patterns for finding the useful relationship. 3. Motivational algorithms 3.1. Association rule mining algorithm
Association Rule Mining (ARM) is one of the most significant and well researched expressive data mining techniques used today and is a developed field of research. In 1993 the task of association rule mining was primary introduced by Agarwal et al. [13]. The task of association rule mining has received a great deal of attention from the time when it is introduced. To extract interesting correlations, associa-tions among sets of items in the transaction databases or other data repositories association rule mining is used to recognize relationships between items in very large databases [14]. In market basket analysis, association rule mining provides answers to the following questions:  X  X f a customer purchases product A, how likely is he to purchase product B? X  and  X  X hat product will a customer buy if he buys product A? X . In addition to many other varied fields Association Rule Mining techniques have established their well-known application in marketing and retail communities [9,26,27]. An association rule generated is of the structure A  X  B, where A and B are disjoint conjunctions of attribute-value pairs. The mining process of an association rule can be divided into two steps. 1. Frequent Itemset Generation : produce all sets of items that have support better than a certain thresh-2. Association Rule Generation : from the common itemsets, generate all association rules that have 3.2. Multi-relational data mining
Relational data mining (RDM) approaches [10,29], many of which are based on inductive logic pro-gramming (ILP [30]), look for patterns that involve multiple tables (relations) from a relational database. RDM is frequently referred to as multi-relational data mining (MRDM) to highlight the information [31]. Multi-Relational Data Mining is stimulated by the relational model [32 X 35]. To store, influence and re-cover complex and structured data in a database that consists of a set of tables, a number of techniques are offered by the relational model. During the last decades, it has been the dominant paradigm for indus-trial database applications. It is at the center of all chief commercial database systems which is usually referred to as relational database management systems (RDBMS). Information about associations be-tween tables are also provided by RDBMS. It involves specifications of how records in one table relate to records in another table. Associations can be seen as minor generalizations of the foreign key notion. They indicate that two tables are related, and also establish a number of information with reference to the relationship. A relational database consists of a set of named tables, frequently referred to as relations that independently behave as the single table. However, in practice along with the essential referential integrity constraint an association in a relational database will always come out as a primary key-foreign key pair.

Multi-relational data mining methods are characteristically based on two other approaches namely a propositional approach and a structural approach. The alteration of relational learning problems into classical attribute-value representations amenable for conventional data mining methods is performed in propositional approach whereas the whole hypothesis space is directly explored by the mining method in the structural approach [12]. All chief data mining tasks, including association analysis, classifica-tion, clustering, learning probabilistic models and regression are considered in the existing MRDM ap-proaches. The pattern languages used by single-table data mining approaches for these data mining tasks have been extended to the multiple-table case. Relational pattern languages comprise relational associ-among others. To mine for patterns expressed in relational pattern languages MRDM algorithms have been developed.

Generally, data mining algorithms look for patterns in data. Multi-relational data mining (MRDM) ap-proaches look for patterns that engage multiple tables (relations) from a relational database whereas most accessible data mining approaches look for patterns in a single data table [11,28]. To illustrate a new ap-proach for relational learning the term multi-relational data mining was first used by Knobbe et al. [10]. Multi-Relational Data Mining (MRDM) is a multi-disciplinary field which deals with knowledge detec-tion from relational databases consisting of multiple tables. As the normalized representation of such ob-jects in a relational database requires multiple tables, mining data which consists of complex/structured objects also falls inside the range of this field. The field aims at integrating consequences from existing fields such as inductive logic programming, KDD, machine learning and relational databases; producing new techniques for mining multi-relational data; and practical applications of such techniques. To the easy transactional data model multi-relational data mining has been considered as an annex. On the other hand, addressing the problem in the full generality has proved to be a daunting task. 3.3. Genetic algorithm
GAs offers a tough non-linear search technique that is predominantly appropriate to problems involv-ing large numbers of variables. To a population of individuals the power of genetic algorithms is the technique of applying a recombination operator like crossover and mutation. In spite of their random-ized nature, GAs is not an easy random search. GAs takes advantage of the old knowledge held in a parent population to produce new solutions with enhanced performance. Thus, at each generation the population undergoes simulated evolution. Relatively good solutions reproduce; relatively bad ones die out and are replaced by fitter offspring. An important characteristic of genetic algorithms is the fact that they are very effective when searching or optimizing spaces those are not smooth or continuous. These are very difficult or impossible to search using calculus based methods, e.g. hill climbing.
Initialization: In the beginning, to form a primary population several individual solutions are randomly generated. The population size depends on the nature of the problem, but in general it contains several hundreds or thousands of possible solutions. Usually, the population is generated accidentally, allowing the complete range of possible solutions. Occasionally, the solutions may be  X  X eeded X  in areas where best solutions are likely to be found.
Selection: During each consecutive generation to raise a new generation, a proportion of the existing population is selected. Individual solutions are chosen during a fitness-based process, where fitter so-lutions are typically more probable to be selected. Certain selection methods preferentially choose the best solutions by evaluating the fitness of each solution. Other methods rate just a random sample of the population, as the latter process may be very time-consuming.

Reproduction: The next step is to create a second generation population of solutions from those chosen through genetic operators: crossover (also called recombination), and/or mutation. A pair of  X  X arent X  so-lutions is selected for breeding from the group selected previously for each new solution to be produced. By means of the above methods of crossover and mutation, a new solution is created which typically ing, colonization-extinction, or migration in genetic algorithms even though Crossover and Mutation are known as the chief genetic operators.
 Termination: Until a termination condition has been reached this generational process is repeated. Common terminating circumstances are: 1) A solution is found that satisfies minimum criteria, 2) Fixed number of generations reached, 3) Allocated budget reached, 4) The highest ranking solution X  X  fitness is reaching or has reached a plateau such that successive iterations no longer produce better results, 5) Manual inspection, and 6) Combinations of the above. 4. The proposed GA optimized association rule mining algorithm for multi-relational data
In the field of data mining, the optimization of the mining methods has got special attention in the recent days. The quan tity and quality of the input da ta is the key reason behind this strategy. When we consider the method of association rule mining, it produces rule in association with the item sets in it. database is considered, the rules generated are innumerous, so that much of rules are to be optimized to a minimum level. In the current scenario, we are dealing with multi-relational database, and applying the mining algorithm in it. The processes, which are concerned with the proposed approach is the mining of multi-relational data and optimizing it with genetic algorithm. 4.1. Mining the multi-relational data
The initial process of the proposed approach is the m ining the multi-relational data. The proposed approach adapts the apriori algorithm for association rule mining. Generally, the multi-relational asso-ciation rules introduce the notion of a frequent query and query subsumption. Instead of the frequent itemsets of the single relation case, in the multi-relational case there are frequent queries. The support pared to something. For this purpose a focus T query is chosen. The relative support of a query is then the number of tuples returned by the query divided by the number of tuples returned by the focus query. A frequent query is one that has higher support than a user supplied constant  X  . For two queries l and, l subsumes l Subsumption is a semantic notion, it holds for all possible database instances, so the tuples returned by are always a subset of the tuples returned by. The query is also said to be a specialization or refinement of l .

Defenition 1 . A multi-relational association rule l  X  l exists, where l and l are two queries and single relation case, a significant rule is one with higher support and confidence than the user supplied constants  X  and  X  . 4.2. Optimizing rules using genetic algorithm
The general behavior of a genetic algorithm is searching and optimizing the problem in the problem space. The GA has achieved a promin ent positio n in the area of optimizatio n algorithms. The proposed approach also considering the best features of the genetic algorithm for the optimization of the rules generated from the multi  X  relational association mining. The rules generated from the multi-relational mining algorithm are numerous, so there has to be a resolution to optimize the rules generated by the algorithm. The GA, with its distinct features, will suit for solving the current problem. As we discussed in the above section, the GA performs the following operations, 1. Initialization, 2. Selection, 3. Crossover, 4. Mutation and 5. Termination. In GA, there should be a population in which we apply the optimization. In the proposed approach, we consider the set of rules as the population. The aim of the proposed approach is the filter out the best rules from the problem space using the Genetic algorithm. 4.2.1. Initialization
The initialization is the start up process of the GA, which will set the data input ready for the further association rule mining. The multi relational database contains a different tables interrelated with some characteristics such primary key or foreign key. The rules are also generated in relation to the multi relational databases.
 tables are contained with data and mining is done on them to generate multi-relational rules. The tables can be represented as follows, Where d 1 ,d 2 ,d 3  X  D and they represent the data points in the tables T 1 ,T 2 and T 3 . We process the tables with the multi-relational association rule mining algorithm so that we get the rules accordingly. The set of rules is represented below, We input this set of rules into the GA for further processing, the initial population is composed from this input data. The input data to the GA is slightly different from the generated rules. The input is a set of patterns from the generated rules. The patterns contain the data that are part of the rules. Where, P represents the set of patterns. In the initialization process, the GA generates the initial pop-ulation as the set rules, according to the multi relational association rule mining. The initial population generated by the GA is, the further processing in the GA. This initial popul ation is used to created new population according to the defined fitness function.
 Consider an example multi-relational database D 1 , which is having tables as follows After the mining process, we get The pattern set, P =[ { a, b, d } , { b, c, a } , { a, c } , { d, c, a } , { b, e } ] From the patterns set, the initial population can be generated as This is the generated initia l population for the optimization proce ss. This generation is considered for the further processing of the GA ; we will illustrate s the processing of the genetic algorithm with the help of above mentioned Example. 4.2.2. Selection
The selection is the process to find the new chromosomes for the creation of new generation as per the fitness function. The new generation is made according to the fitness rate, which we defined in the GA. The fitness function is the main feature that determines feasibility of each chromosome in the existing generation. In order to select the best individuals for creating the new generation, the fitness of the individuals has to be calculated. Those individuals that have fitness enough to be in the new generation are selected and rests of them are discarded. The criteria to find the relevant individuals are the defined as the fitness function. The proposed approach also defined a fitness function on the basis of the multi relational association rule mining and the genetic algorithm. The fitness function is defined as, Here, as f ( c )= fitness of the chromosome c . conf ( r )= confidence of rule r . sup port ( r )= support of the set of rules k = No of pieces in a rule, k = k ( r )+ k ( l ) k ( r )= no of pieces in right side of the rule separator k ( l )= no of pieces in left side of the rule separator
According to the above furnished fitness function, fitness of each rule is calculated and those rules, which are fit for the next generation are selected and rest are discarded. The rules, which are fit or not individuals. In our proposed approach the fitness rate is set as 75%. The fitness of each individual are sorted and stored in a list. The sorted list is then filtered with the fitness rate, f r .
As shown in the above Table 1 the 75% of the rules are selected from the fitness list, as they satisfy the criteria fitness rate.

Consider D1 database, here the fitness of the rule a, b  X  d can be calculated as, is set as 75%. The individuals, which are survived are then subjected fo the third phase, the reproduction phase. 4.2.3. Reproduction
In this phase, new generation is created from the individuals, which are obtained after the selection process. The new generation is created by applying genetic operators to the individuals. The genetic operators, which we use are 1. Crossover and 2. Mutation 4.2.3.1. Crossover
In crossover, we generate offspring from two parents by interchanging their characteristics. The crossover is done to strengthen the reliability of the new generation. There are different techniques used for the crossover operation such as,
In the proposed approach, we adopt the technique of one point crossover. The one point crossover is done by selecting a single crossover point in both the parents and crossing them accordingly.
The newly generated offspring will have characters of both the parents. In the proposed approach, the parents or chromosomes are encoded using the tree encoding technique. In detail, the data points are represented in terms of a tree structure. The tree encoding is mainly used for representing data which have symbols in it. The parents can be represented as the following,
The parents are represented in the above figure marked with crossover point. The offspring generated as per the one point crossover. The generated offsprings are shown in the Fig. 2.

When considering the D1 database, the crossover can be illustrated as, 4.2.3.2. Mutation
The mutation is another genetic operator for the generation of new generations. The mutation is done to strengthen the offspring generated after the crossover. Similar to the crossover operator, mutation also have different techniques. In the proposed approach, we use initial type of mutation technique. The mutation technique, we use in our proposed approach  X  X lip bit mutation X . In the flip bit mutation, we generate an offspring by flipping a
The highlighted bits in the two offsprings are flipped to get the new offsprings according to the muta-tion operation.

As mentioned, we are using the tree encoding for encoding the chromosomes, we have to mutate the offspring according to the tree encoding. The offspring generated from crossover is selected for the mutation purposes.

In the similar way, every element in the population is treated for crossover and mutation till a new generation is obtained. 4.2.4. Termination The termination criteria are set for genetic algorithm in order to stop the genetic algorithm iteration. The termination criteria may be either no of iteration or some conditions. When the termination condition is met, the GA stops and produces the relevant result. In our proposed approach, the no of iteration to generate the new generations is set as the termination criteria. We select such a criteria because, there no other feasible criteria which will satisfy the requirement of our proposed approach.
 The pseudocode of the optimized algorithm for mining multi-relation patterns is described as follows: 5. Results and analysis
In this section, the proposed approach is experimentally analyzed in order to evaluate the performance of it. The experimentation is detailed in the following sections and all algorithms are implemented in java language with JDK 1.6 in a system configured with Intel core i5 processor, 4 GB RAM and 500 GB hard disk. 5.1. Dataset description
We have used the synthetic dataset, where the data source is a customer order data containing 10,000 orders. The synthetic dataset used for experimentation is described as set of four relations order relation, which has one tuple for every new order and the order table consists of four different fields such as orderID, customerID, productID and time. The customer relation, which has five different fields (cus-tomerID, name, age, house type and city) describing the details of the customer. This table contains 40 records where, tuples represents the customers who order the products. The product relation that has three different fields (productID, quantity and price). This table consists of 100 records that describe the details of product. The vehicle relation that has five different fields (vehicleID, customerID, type, model, color). This relational table includes 20 records and every record indicates the details of vehicle. 5.2. Performance analysis The performance of the optimized rule generation algorithm is evaluated under the synthetic dataset. The evaluation factors that we incorporate here are the number of rules optimized from the total number of rules under a given threshold. The second factor that we taken into consideration is the run time of the algorithm for mining the rules generated. Finally, we considered the memory usage as the third evaluation factor for the assessment of the performance provided by the proposed approach. The three evaluation described above are processed under predefined thresholds. The thresholds are generated from the fitness value we consider for the genetic algorithm. In the current scenario, we use three fitness values within a specific range from the obtained threshold values. The thresholds are set randomly from the fitness values, which helps in finding most precise outputs. The experiments are done under a an optimum support value and the optimum value is set as 60 for the proposed approach. The detailed analysis is plotted in figures below.

The above plotted are performance evaluation results of the proposed approach under different fitness thresholds. The Fig. 6 represents the number of rules optimized for the different fitness value, and we can see that the proposed approach optimizes the rules according to its relevance. The difference in number of rules represents the efficiency of the proposed approach. When we consider the analysis of the runtime, it is showed that the proposed approach even cause less time for optimizing the rules. The case in memory usage also finds no difference from the others as the memory usage increases proportionally with increase in time. 5.3. Comparative study
The comparative analysis of the proposed approach with the previous approach is plotted in this sec-tion. The comparison is based on the number of rules optimized is plotted in the Fig. 9, which states that the proposed approach significantly improved the optimization of the rules by selecting the most relevant rules. The comparative study is based on varying the support values by setting the fitness threshold in a fixed range. From the Fig. 9, it is clear that as the support increases the number of rules optimized decreases in both the cases. The higher the support is the lower will be optimized rules and after a par-ticular support value the rules optimized becomes a constant value; from this we can understand that the proposed approach efficiently optimizes the mined rules. The runtime evaluation is plotted in the Fig. 10, from which, we can understand that the runtime is little high for the proposed approach at higher sup-port values as compared to the other algorithm like A X da Jim X nez et al. [36] The comparison of proposed approach with the previous technique based on memory usage is plotted in Fig. 11. Here, the memory usage of the algorithm is obtained for the rule optimization procedure once we obtain the rules from the previous algorithm. From the graph, the memory usage of the proposed is less compared with existing work for the lower support values. 6. Conclusion
We have discussed the multi relational data mining and the rules generation regarding the multi rela-tional database. After considering the number of methods, we plotted a genetic algorithm for optimizing the generated rules. The GA successfully optimized the rules and provided significant results for the proposed approach. The generated rules undergo the typical process of GA and the rules are get opti-mized according to the input given. The responses from the output states that the proposed approach optimizes the rules in an appreciating manner under specific threshold like fitness, support, etc. The results showed that the proposed approach has improved the mining of multi relational databases with GA. The comparison study reveal that the propsed approach has improved optimization level of the rules mined and reduced the runtime and reduced memory usage as compared to the previous approach. The most optimized rules are 198 obtained for a support value of 60.
 References
