 Recently, there has been significant increase in interest on Sm art Grid security. Researchers have proposed various techniques to detect cyber-attacks using sensor data. How-ever, there has been little work to distinguish a cyber-attack from a power system physical fault. A serious operational failure in physical power grid may occur from the mitiga-tion strategies if fault is wrongly classified as a cyber-attack or vice-versa. In this paper, we utilize a data-driven ap-proach to accurately differentiate the physical faults from cyber-attacks. First, we create a realistic dataset by gener-ating different types of faults and cyber-attacks on the IEEE 30 bus benchmark test system. Next, we provide a data-driven approach where labelled data are projected in a new low-dimensional subspace using Principal Component Anal-ysis (PCA). Next, Sequential Minimal Optimization (SMO) based Support Vectors are trained using the new projection of the original dataset. With both simulated and practical datasets, we have observed that the proposed classification method outperforms other existing popular supervised clas-sification approaches considering the cyber-attack and fault datasets.
 [ J .7 Computers in Other Systems ]: Industrial control False Data Injection Attack, Smart Grid, Faults, Anomaly
State Estimator (SE), which is a key operational module us ed in an Energy Management System (EMS) to estimate the system states (e.g., voltage magnitudes and angles) from the sensor measurements by minimizing estimation error. A bad data detector module (BDD) works in conjunction with the SE module to identify anomalies in the measurement data [1, 5]. In recent studies, it has been revealed that the c smart grid key operational modules (e.g., SE and BDD) are vulnerable to a class of cyber-attacks [10, 4], known as False Data Injection (FDI) Attack.

In [10], Liu et al. shows for the first time, that an at-tacker can construct an FDI attack which can bypass the traditional anomaly detection modules (BDD) of an EMS and remains hidden. Most of the proposed anomaly detec-tion techniques for EMS as well as existing BDD works based on some threshold derived from normal stable behaviour of the system and detects the existence of attack if the mea-surement data deviates from that threshold. Interestingly, these approaches may provide a good detection accuracy of the anomalous data but can not differentiate the classes of anomalies. Note, other than cyber-attacks, measurement data will also show anomalous behaviour in the presence of physical faults which produce different power flow patterns than that of a normal stable profile. Current approaches for detecting cyber-attack in smart grid ignores the pres-ence of faults. In this paper, we create a realistic dataset by generating different types of faults and cyber-attacks on the IEEE 30 bus benchmark test system. With extensive experiments, we observe that most of the established super-vised methods perform poorly for the classification of faults and cyber-attacks. To improve the classification accuracy, we use a Principal Component Analysis (PCA) based tech-nique to enhance the classification accuracy of the Sequen-tial Minimal Optimization (SMO) based Support vector Ma-chines (SVM). We conduct experiments on both simulated and practical datasets using the proposed method, as well other supervised classification methods. For this specific classification problem, we observed that the proposed tech-nique outperforms other existing well performed supervised classification methods.
Both fault and cyber-attack data for smart grid is simu-l ated considering IEEE benchmark 30 bus test system [16]. Fig. 1 provides a conceptual diagram of data preparation where fault data is prepared using EPRI X  X  smart grid tool-OpenDSS and matlab platform considering sequence-modelling of the benchmark system. All FDI attack is simulated using Matlab for the same test system considering similar operat-ing conditions following state-of-the-art techniques. Simu-lating attacks or faults, we obtain system states which are voltage angles and magnitudes of all nodes. Finally, all in-jection attacks and fault data are stored in a database with 2000 instances. A detailed description of the whole proce-dure is discussed below: We include both symmetrical and asymmetrical faults. T he asymmetrical faults are further classified as Single Line-to-Ground (SLG) fault, Double Line-to-Ground (DLG) fault and Line-to-Line (LL) fault. For a three-phase power sys-tem line section with A,B,C phases and ground denoted by G, the SLG fault occurs when any of the three phases of the conductor is shorted with the ground which includes the scenarios A-G, B-G, and C-G. A DLG fault occurs when two of the phases are grounded, such as (A,B)-G, (A,C)-G and (B,C)-G. The LL fault occurs when one phase is shorted with another, such as A-B, B-C and C-A. These faults can happen anywhere in the network, e.g., there are 41 line sec-tions in IEEE 30 bus test system. So, fault can be occurred in any of the phases of the 41 line sections and the magni-tude of the fault will depend on the fault resistance. During the data preparation, we used OpenDSS which can handle symmetrical component modelling for fault analysis. First we model 30 bus system considering positive, negative and zero sequence line parameters. Next, we apply faults using a monte carlo simulation of 500 samples by varying fault lo-cations , fault magnitudes and fault types . For each sample, we obtain voltage magnitudes and angles for all nodes of the test system. Since IEEE 30 bus test system has 30 nodes and each node has 3 phases, we obtain 90 voltage magni-tudes and 90 phase angles as attributes for each case 1 .
In this work, we have considered three different types of i njection attacks for smart grid. First we review the defi-nition of injection attacks and then discuss the attack con-structions.
Recently, Yu et al. have that PCA can be used to trans-fo rm the measurement data matrix into a new subspace, pre-serving the spatial characteristics as much as possible [18]. Hence, authors construct FDI attacks based on the data of data can be obtained from goo.gl/niINZU the new projected space. In this paper, similar approach has been adopted to construct blind FDI attacks vector a following: where c is an arbitrary non-zero vector of length n  X  1 [18] and H pca is the first n principal components of the measure-ment matrix where n is the total number of states of the sys-tem. Detail procedure of the blind FDI attack construction can be obtained from [18]. In this experiment, we have used Matlab based tool MatPower [19] to generate measurement matrix. 500 different values of c vectors are considered ran-domly to create the FDI attack vectors. Adding these attack vectors with the original measurements, we conduct a state
Electric Network Database contain information on the p hysical properties or a  X  X lueprint X  of the power system in-formation that is critical to the correct operation of many as-pects of the power grid; from planning to real-time operation and control. Recently, it has been shown that the Electric Network DB is also vulnerable to cyber attacks [16, 13]. By gaining access to the SCADA network, an attacker can ma-nipulate the database. Based on the manipulated database, SE/OPF will produce incorrect system states that do not represent the actual physical system. Consequently, this will lead to the network operator taking incorrect decisions. Sometimes, these actions may result in the destabilization of the whole system. In this work, we have created the DB manipulation attack by modifying the line resistance and reactance parameters following [16, 13]. Here, we have con-ducted 500 attack cases where line parameters (resistance and reactance) have been varied between 10% to 190% of its original values.
This paper also considers the practical cyber attack and fa ult dataset obtained from [2, 7]. The measurements of the 2-class dataset includes 37 power system events of a 3-bus 2 generator power system as shown in Fig. 1 (b). Short circuit fault data, and injection attack data (remote tripping command injection, relay setting change, data injection) are considered as two separate classes [2, 7].
Most of the well-performed supervised technique for clas-s ification performs poorly for the above datasets, specially for the practical dataset. Note, it is important to classify the attack and fault very accurately. Even an operational decision based on a small fraction of miss classification can cause a severe damage in the physical grid. Hence, we fo-cus on enhancing the overall classification performance by adopting a two step procedure. First, we obtain the labelled cyber-attack and fault data. Next, the covariance matrix of attack data and fault data are calculated separately. Next, the coefficients of Principal Components (PC) both for at-tack and fault data are calculated and stored. Based on the eigenvalues of the PCs, we plot a scree plot and determine the optimal number of PCs we want to consider to make a good approximation of the original datasets obtained sep-arably from fault and attack instances. A new projection of these original data are then obtained by multiplying the Dataset1 26.29 77.84 23.76 90.21 77.85 79.54 80.085 99.99 Dataset2 33.75 70.073 31.4 86.74 69.54 75.02 75.01 99.99 Dataset3 33.77 70.37 30.75 89.76 70.38 76.65 74.94 99.99 Dataset4 37.51 65.39 36.23 87.61 67.05 76.98 71.01 99.99 Dataset5 31.97 71.3 30.3 89.4 71.3 76.8 77.07 99.99 Dataset6 34.24 70.26 30.96 87.23 70.26 71.87 72.58 99.99 Dataset7 29.5 74.67 26.5 89.11 74.67 80.71 78.78 99.99 Dataset8 59.84 71.28 30.23 90.21 70.93 76.74 72.81 99.96 Dataset9 35.37 66.94 34.92 84.88 66.94 71.31 68.83 99.99 Dataset10 33.84 70.4 31.33 89.28 70.4 74.87 73.46 99.99 Dataset11 26.58 75.5 25.36 89.08 75.58 77.05 77.91 99.99 Dataset12 37.74 67.57 36.4 87.98 67.93 73.35 69.91 99.99 Dataset13 27.85 78.12 23.16 90.76 78.12 80.06 79.89 99.96 Dataset14 29.02 73.54 27.39 89.23 73.58 76.05 75.52 99.99 Dataset15 37.75 64.72 35.51 85.29 64.72 77.14 69.23 99.99
Simulated 87 81.25 99.95 99.95 94.90 99.97 99.55 99.99 fault and attack data with their corresponding PC coeffi-cients. Then, a new transformed dataset is created with the new projection of the fault and attack data along with their labels. Finally, this transformed dataset is used as an input in the SVM module. A step-by-step procedure is discussed below: 1. Projecting Data into a new subspace using PCA: For a dataset Z , we obtain attack ( Z A ) and fault data ( Z according to the class label. Both the attack and fault data are standardized separately according to Z s = Z  X  mean ( Z ) where Z s is the standardized data. Next, we apply the PCA technique on the standardized data. PCA is a mul-tivariate statistical technique widely used for dimensional-ity reduction and data transformation. It can transform the correlated observations into uncorrelated variables which is known as principal components. These orthogonal princi-pal components are the linear combinations of the original observations. After a successful PCA transformation, we obtain the PC coefficients, A A , A F and the eigenvalues of PCs,  X  A ,  X  F , for attack and fault data respectively. Now, the new projection of the original standardized data (  X  be obtained as  X  Z = Z s A for both attack data and fault data. Then, these projected fault and attack data are stored with their corresponding labels and fed to SVM for classification. 2. Classification using SMO based SVM: SVM is a set of supervised learning methods which are built on sta-tistical learning theory. SVM searches for an optimal sepa-rating plane which could separate training samples with the least error by finding maximum margin width between the two parallel bounding planes. The data points which are closer to the separating hyper plane are so-called support vectors. The w T x + b = 0 is separating plane in original space and w T  X (x) + b = 0 is separating plane in high dimen-sional space. In both of these cases w is a perpendicular to the classification of surface vector, x is the input vector, and b is a constant.  X (x) is a nonlinear function which map the training sample to a high dimensional feature space. In our experiment we used radial basis function (RBF) kernel given training SVMs performs an iterative decomposition strategy which focuses on working set selection in order to solve QP problems without requiring complex QP solver software. In this work, SMO based decomposition strategy is employed to perform SVM on the new projected datasets of fault and attack instances. We have used a well-established machine learning tool-W eka [8] to evaluate the performance of the proposed method as well other popular techniques. For performance evalu-ation, we use the following classifiers-probabilistic classi-fier (e.g., Naive Bayes), non-probabilistic binary classifier (e.g., SVM), rule based (e.g., OneR, JRipper), decision-tree based (e.g., Random forests, Random tree). Description of these techniques can be obtained from [8]. The above men-tioned methods and the proposed method is tested using both simulated and practical datasets considering a 10-fold cross validation. Results obtained from the 16 datasets (15 practical datasets and one simulated) are presented in Ta-ble 1 and the average accuracy is plotted in Fig 2. We see that the classification accuracy for all methods except ex-isting SMO based SVM and Naive Bayes are satisfactory for simulated data. However, all existing methods perform extremely poor for practical datasets. Among the existing techniques, JRip has the highest accuracy which is around 90% in average and OneR has the lowest accuracy that is below 40%. SVM has an average accuracy of 71.83%. For all test cases, SVM accuracy remains less than 80% consid-ering practical datasets and has just 81% for simulated data. JRip, the best performing among the considered existing al-gorithms, also shows its weakness for practical datasets. It could never cross the margin of 91% for any of the 15 prac-tical datasets. Considering all of these 16 datasets, the pro-posed technique outperforms all other techniques for all test setups. The average classification accuracy is 99.986% and it is consistent for both simulated and practical datasets. To evaluate the performance of all methods in a more compre-hensive manner, we also consider other measures including, recall, precision and F-measure [8]. For the space limitation, we only discuss the top three performing algorithms-Pro-posed, JRip and Random Forest. Considering Dataset2, we observe that the Random Forest has recall, precision and F-measure as 0.75, 0.798 and 0.687 respectively. For the same indicators, we obtain 0.868,0.866 and 0.864 respectively for JRip algorithm. All three indicators are close to one for our proposed method. Similar observations are made for other test datasets. From these observations, we conclude that the proposed method outperforms all of the above consid-ered benchmark algorithms for these cyber-attack and fault classification datasets.
In this paper we evaluate the performance of different s tate-of-the-art supervised machine learning techniques. In this paper, we generate a realistic dataset of faults and in-jection attacks considering benchmark power test system. We also consider practical dataset that includes the distur-bances (faults) as well as cyber-attacks. We observe that our proposed method significantly improves the classifica-tion accuracy which is essential for stable smart grid op-eration. We have validated the results obtained from the proposed method using existing well-performed classification techniques. Author are grateful to Tommy Morris, Uttam Adhikari, She ngyi Pan from Mississippi State University and, Ray-mond Borges, Justin Beaver of Oak Ridge National Labora-tories (ORNL) for sharing their ICS dataset. [1] A. Abur and A. Exp  X osito. P ower System State [2] U. Adhikari, T. Morris, and S. Pan. A cyber-physical [3] A. Anwar and A. Mahmood. Cyber security of smart [4] A. Anwar and A. Mahmood. Vulnerabilities of smart [5] A. Anwar, A. N. Mahmood, and Z. Tari. Identification [6] S. Bi and Y. J. Zhang. Graphical methods for defense [7] R. Borges Hink, J. Beaver, M. Buckner, T. Morris, [8] M. Hall, E. Frank, G. Holmes, B. Pfahringer, [9] J. Kim, L. Tong, and R. Thomas. Subspace methods [10] Y. Liu, P. Ning, and M. K. Reiter. False data injection [11] Y. Liu, P. Ning, and M. K. Reiter. False data injection [12] R. McMillan. Siemens: Stuxnet worm hit industrial [13] S. Mousavian, J. Valenzuela, and J. Wang. Real-time [14] S. Pan, T. Morris, and U. Adhikari. Developing a [15] The Industrial Control Systems Cyber Emergency [16] J. Valenzuela, J. Wang, and N. Bissinger. Real-time [17] Q. Yang, J. Yang, W. Yu, D. An, N. Zhang, and [18] Z.-H. Yu and W.-L. Chin. Blind false data injection [19] R. Zimmerman, C. Murillo-Sanchez, and R. Thomas.
