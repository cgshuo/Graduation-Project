 Previous research on spatiotemporal database were mainly focused on spatiotemporal data models [1], spatiotemporal indexes [2], and spatiotemporal query processing [2], whereas little work has been done in the implementation of real spatiotemporal data-base management systems. Although there are some prototypes proposed in recent tions, because of their incompatibilities with SQL and standard relational DBMS. Some researchers proposed to implement spatiotemporal DBMS based on Oracle [4], however, to our best knowledge, there are no real systems built so far. 
Aiming at providing practical support of spatiotemporal data management for vari-ous commercial applications, we present a spatiotemporal extension of Oracle in this paper, which is called STOC (SpatioTemporal Object Cartridge). STOC is based on our previous work on spatiotemporal data model [5] and system implementation [6]. Unlike the OSTM extension in [6], STOC is built on Oracle Spatial (while the spatial types in OSTM are defined by ourselves.) and provides more support on spatiotem-poral query optimization. STOC is developed using the cartridge technology provided by Oracle, which enables us to add new data types as well as functions and indexing methods into the kernel of Oracle. The unique features of STOC can be summarized as follows: (1) It is SQL-compatible and built on a widely-used commercial DBMS ( see Sec-applications and provides a practical solution for spatiotemporal data management under current database architecture. (2) It supports various spatiotemporal data types ( see Section 2.2 ), such as moving number , moving bool , moving strin g, moving point , moving line , and moving region . Combined with the ten types of spatiotemporal operations ( See Section 2.3 ) supported by those new data types, users can represent many types of spatiotemporal data in-volved in different spatiotemporal appli cations and query different spatiotemporal scenarios. 2.1 Architecture of STOC The detailed implemental architecture of STOC is shown in Fig.1. The PL/SQL speci-fication provides the signature definition and implementation of all spatiotemporal data types and functions in the STORM model. The STOC cartridge is the component that actually brings spatiotemporal support into Oracle. Once installed, it becomes an integral part of Oracle, and no external modules are necessary. When STOC is in-Oracle. No external work imposes on users. 2.2 The Type System of STOC STOC extends two categories of new data types into Oracle, namely spatiotemporal data types and temporal data types (as shown in Fig.2). As Oracle has already sup-ported spatial data management from its eighth version, which is known as Oracle Spatial, we build STOC on the basis of Oracle Spatial so as to utilize its mature tech-nologies in spatial data management. The spatiotemporal data types contain moving real world, while the latter refers to those numeric, Boolean, or string values changing with time. All the new data types are implemented by PL/SQL using the CREATE TYPE statement. Fig.3 shows the definition of moving point in STOC. 2.3 The Data Operations in STOC STOC implements ten types of spatiotemporal operations, which are (1) object data management operation, (2) object attribute operations, (3) temporal dimension project operations, (4) value dimension project operations, (5) temporal selection operations, (6) quantification operations, (7) moving Boolean operations, (8) temporal relation operations, (9) object relation operations, and (10) distance operations. All the opera-tions are implemented by PL/SQL and as member functions of spatiotemporal data types, as shown in Fig.4. For the space limitation, we will not discuss the details about each spatiotemporal operation. However, in the demonstration process, we will show how to use those operations to answer different spatiotemporal queries. describing the movements of the taxi cars in Beijing, China. We will first use STOC to create a spatiotemporal database schema and then transform the original GPS data into the database. After that, we will show how STOC answer different types of spati-otemporal queries. All the queries are conducted through a Web-based client interface (see Fig.5), which uses Google Maps as the spatial reference framework. We provide two methods for users to input a spatiotemporal query, either by entering a SQL statement or by a query builder. The self-inputted SQL statements can represent generate specific queries. The query builder is designed for those who are not experts spatiotemporal queries. This work is supported by the National High Technology Research and Development Program ("863" Program) of China (No. 2009AA12Z204), the National Science Foundation of China (no. 60776801), the Open Projects Program of National Labora-tory of Pattern Recognition (20090029), the Key Laboratory of Advanced Information Science and Network Technology of Beijing (xdxx1005), and the USTC Youth Inno-vation Foundation. The management of unstructured data has been recognized as one of the most attract-ing problems in the information technology industry. With the consistent increase of computing and storage capacities (due to hardware progress) and the emergence of many data-centric applications (e.g. web applications), a huge volume of unstructured data has been generated. Over 80% of world data today is unstructured with self-contained content items. Since most techniques and researches that have proved so successful performing on structured data don't work well when it comes to unstruc-tured data, how to effectively handle and utilize unstructured data becomes a critical issue to these data-centric applications. 
The 2nd International Workshop on Unstructured Data Management (USDM 2011) aims at bringing together researchers, developers, and users to discuss and present current technical developments in the area. We have held The 1st Workshop on Unstructured Data Management (USDM 2010) in APWeb 2010 (April 6, 2010, semination of research results in unstructured data management. In this year, we have received 7 submissions from diverse topics of interest, and 3 of them are selected as accepted papers which resolve some issues in unstructured data querying, retrieval, analysis, and mining, and also in applications of unstructured data management. The Program Committee worked very hard to select these papers through a rigorous re-view progress and extension discussions, and finally composed a diverse and exciting program for USDM 2011. Here we take a brief look at the techniques involved in this program. 
With the popularity and development of information technology, increasingly growth of data on the internet is generated. It brings many challenge topics on analyz-ing and mining this unstructured data, including querying and searching based on text similarity. During these years, many researches are proposed in leading confer-ence[1,2] to study similarity search. Techniques including Approximate String Joins focus on how to process on the explosive growth of data and provide quick response. In this program, authors of Batch Text Similarity Search with MapReduce study the problem of batch text similarity search. Specifically, the authors try to solve two prob-lems within the MapReduce environment, i.e. online text similarity search and variable thresholds, and provide real-time online search. 
Besides text similarity search, sentiment analysis, which is also referred as senti-negative. Although diverse models, such as generative model[3] that jointly models sentiment words, topic words and sentiment polarity in a sentence as a triple, or global structured model[4] that learns to predict sentiment of different levels of granu-larity in text, are proposed in droves, sentiment analysis nowadays often maintains a low accuracy. One possible reason is that the rapid growth of the internet makes it too costly or impractical for some models on large scale data. In this program, authors of An Empirical Study of Massively Parallel Bayesian Networks Learning for Senti-ment Extraction from Unstructured Text propose an algorithm for large scale Bayes-ian Network structure learning within MapReduce framework. This parallel algorithm could capture the structure of Bayesian Network and obtain a vocabulary for analyz-ing sentiments. 
Nowadays, it is more and more popular to use Resource Description Framework (RDF[5]) in knowledge management. It can maintain data relation, automatically build tables for RDBMS deployment, link across diverse content sets, and etc. There have been many RDF Knowledge Bases, but most of them are with limited sizes. Authors of ITEM: Extract and Integrate Entities from Tabular Data to RDF Knowledge Base presents a new system ITEM to enlarge the existing RDF datasets for using them in knowledge management. 
The workshop will be a forum not only for presenting new research results but also for the discussions of practical experiences that can help shaping and solving critical problems in unstructured data management. We sincerely hope it provides partici-pants a chance to get more knowledge in this field. 
We would like to thank the many people who volunteered their to help making the workshop a success. We thank Steering Chairs Professor Xiaoyong Du and Professor PC members: Professor Hongyan Li, Professor Chaokun Wang and Professor Jiaheng Lu. We thank Zou Miao servicing as USDM workshop local organization chair. Fi-nally, we would also like to thank all the speakers and presenters at the workshop, and all the participates to the workshop, for their engaged and fruitful contributions. 
