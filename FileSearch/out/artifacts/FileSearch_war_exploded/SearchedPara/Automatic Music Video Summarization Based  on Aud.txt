 In this paper, we propose a novel approach for automatic music video summarization based on audio-visual-text analysis and alignment. The music video is separated into the music and video tracks. For the music track, the chorus is detected based on music structure analysis. For the video track, we first segment the shots and classify the shots into close-up face shots and non-f ace shots, then we extract the lyrics and detect the most repeated lyrics from the shots. The music video summary is generated based on the alignment of boundaries of the detected chorus, shot class and the most repeated lyrics from the music video. The experiments on chorus detection, shot classification, and lyrics detection using 20 English music videos are described. Subjective user studies have been conducted to evaluate the quality and effectiveness of summary. The comparisons with the summaries based on our previous method and the manual method indicate that the results of summarization using the proposed method are better at meeting users X  expectations. H.3.1 [ Information Storage and Retrieval ]: Content Analysis and Indexing  X  abstract methods, indexing methods. Algorithms, Performance, Experimentation Music video, summarization, chorus, shot, lyrics, alignment The music video genre began to have wide popularity and influence in the early 1980s and it has attracted an increasingly large viewer-and content of music videos have strongly influenced advertising, television, film, and popular culture as a whole. With the rapid development of various technologies for multimedia content capture, storage, high bandwidth/speed transmission and compression standards, the production and distribution of music videos have increased rapidly and become more available. Nowadays, many music content providers and companies are putting their music videos on the websites and customers can purchase these music videos through the websites. However, an average customer would prefer to watch the highlights first before deciding their purchase. Although music video summaries are available at most music websites, they are generated manually, which is a very laborious process. Therefore, how to automatically create a concise and informative summary of an original music video is a challenging task and it is commercially relevant to come up with an automatic summarization approach for music videos. Automatic music summarization and video summarization have attracted research activity in the past few years. Automatic music summarization approaches can be classified into machine learning based approaches [1,2,3] and pattern matching based approaches [4,5,6]. The challenge in music summarization is to determine the relevant features and make the final summary boundaries correspond to the meaningful music section (e.g. chorus) boundaries. Automatic video summarization approaches have been successfully applied to sports video [7], news video [8], home video [9] and movies [10], but relatively little work focused on music video analysis and summarization. We proposed a music video summarization method [11], which generated music summary and shot clusters separately. The final music video summary is created by aligning the music summary and clustered video shots. An obvious drawback of this method is the boundaries of music segments in the final summary are discontinuous. A r ecent met hod [12,13] has also proposed a music video summarization system, etc. However, these metadata, especially the lyrics, are not easy to be obtained directly from the music video content. Therefore, assumption of availability of these metadata makes the problem easier and is not applicable to automatic summarization based on music video content only. In this paper, we propose a novel automatic music video summarization approach, which combines the complementary strengths of low-level features and high-level music knowledge. We believe that the combination of bottom-up and top-down approaches is powerful to analyze and summarize music video content. The proposed method automatically extracts the metadata from low-level audio/visual/text features and music knowledge instead of assuming the availability of these metadata as in [12,13]. Figure 1 illustrates the workflow of the proposed music video summarization approach. The music video is separated into music track and video track. For the music track, choruses are detected based on music structure analysis. For the video track, the video shots are segmented and classified into close-up face shots and non-face shots. Then the lyrics are detected and recognized from the shots. The most repeated lyrics are further identified. The music video summary is created by the alignment of the boundaries of the detected chorus, shot class and repeated lyrics. The rest of the paper is organized as follows. Analysis of music, video and text extracted from the music video content is described in section 2, 3, and 4 respectively. Music video summarization scheme is discussed in section 5. Experimental and evaluation results are reported in section 6. We conclude the paper with hints for future work in section 7. The unique characteristic of the music video genre is that the music plays the dominant role in a music video, while in other genres such as sports video and home video the dominant part is the visual track. Therefore, the music video summarization should be based on music structure analysis, which is different from the existing approaches of video summarization. Based on the music knowledge [14], the chorus is melodically stronger than other parts and can be used as a thumbnail for the music content. The earlier approaches on music structure analysis [15,16] have not fully exploited music knowledge and addressed how to estimate the boundaries of music sections. To tackle this issue, we have developed a music structure analysis method for popular music with 4/4 time signature [17]. We will discuss how to detect the chorus from the music in the following subsections. Typical audio including music segmentation approaches use fixed length intervals (20~40 ms) to segment audio signals. It works well for speech [18] but may not be appropriate for music. Compared to speech, music signals are heterogeneous because the signal sources change when the music score progresses with time. Thus it is difficult to judge the size of the signal section which can be considered as quasi-stationary unless the music domain knowledge is applied. According to music composition theory [14] the ideal segmentation for more accurate vocal/instrumental boundary detection and melody contour extraction is to segment the music based on the length of individual music notes. In order to perform such segmentation, it is required to have an accurate onset detector to find all the note onsets in a music song. However it is very difficult to detect all the onsets because of the poly phonic nature of the music signals. From theory of music [14], we know that usually smaller length melody with the rhythm of the lyrics and fill the gap between lyrics. Thus we propose a novel segmentation scheme to detect the length of the smallest note (eighth or sixteenth note) and segment the music into the smallest note length frames. Figure 2 illustrates the steps to detect the smallest note length. We first decompose the music signal into 8 sub-bands, whose frequency ranges are in octave scale (Table 1), based on the consideration that music harmonic structures are in octaves [18]. Both the frequency and energy transients are analyzed for each sub-band. An energy-based detector is used for the upper sub-bands (05-08) to detect the strong transient note onset, while a frequency-based distance measure is used for the lower sub-bands (01-04), because f undamental frequencies (F0s) and harmonics of music notes are strong in these sub-bands. In order to detect the rhythm progression in different note level, we take the weighted summation (Equation (1)) of onsets detected in each sub-band, where On(t) is the sum of onsets detected in all eight sub-bands Sb i (t) at time  X  t  X  in the music signal. In our experiments, it is noticed that hard onsets generated from bass drums, bass guitar and bass notes of piano are found in sub-band 01 and 02. The timing of snares and side drums are highlighted in sub-band 06 to 08. These onsets indicate the bar timing. The soft onsets (treble clef notes) are typically found in sub-band 03 to 05. Thus the weight matrix w = {0.6, 0.9, 0.7, 0.9, 0.7, 0.5, 0.8, 0.6} is empirically found to be the best set for calculating hard and soft onsets to extract the inter-beat time lengths. autocorrelation over the detected onsets. We employ the dynamic programming approach to check for patterns of equally spaced strong and weak beats among the detected onsets and compute both inter-beat length and the smallest note length. Figure 3 (a) is a 10-second song clip. The detected onsets are shown in Figure 3 (b). The autocorrelation of the detected onsets is shown in Figure 3 (c). The sixteenth note level segmentation is shown in Figure 3 (d). The sixteenth note length is 112.10625 ms. Music structure is important information for music semantic understanding. Its components, e.g. Introduction (Intro), Verse, Chorus, Bridge, Instrumental and Ending (Outro), construct the melody-based similarity regions and content-based similarity regions. We define melody-based similarity regions as similar pitch contours constructed from the chord patterns and content-based similarity regions as the regions which have both similar vocal content and similar melody. For example, Verse sections in a song can be considered as melody-based similarity regions while Chorus sections as content-based similarity regions. The first step for music structure analysis is to segment the music into frames with the smallest note length using the method proposed in the previous section. Then the melody-based and content-based similarity regions are detected. Finally, the music structure is formulated and choruses are extracted based on detected melody-based and content-based similarity regions and music knowledge. 2.2.1 Melody-based similarity region detection The melody-based similarity regions have the similar chords patterns. Therefore, in order to detect the melody-based similarity regions, the chords of each segment are detected and sub-chord patterns are matched with the whole music song using dynamic programming [19]. simultaneously. Thus the key idea to identify the chord is to detect the fundamental frequencies (F0s) of notes which comprise the chord. We use a method similar to the one described in [20] for chord detection. The Pitch Class Profile (PCP) features, which are highly sensitive to the F0s of notes, are extracted from training samples to model the chord with Hidden Markov Model (HMM) [17]. We use 48 HMMs to model 12 Major, 12 Minor, 12 Diminished and 12 augmented chords. Each model has 5 states and 3 Gaussian Mixtures (GM) for each hidden state. The mixture weights, means and covariance of all GMs and initial and transition state probabilities are computed using Baum-Welch algorithm [21]. The Viterbi algorithm [21] is applied to find the efficient path from starting to end state in the models. In our experiments, we find that sometimes the observed final state probabilities of HMMs corresponding to the chord pairs are high and close to each other. This may lead to wrong chord detection. Thus we apply heuristic rules based on music composition to correct the detected chords and the time alignment of the chords [17]. 2.2.2 Content-based similarity region detection The melody-based similarity regions which have similar vocal content are defined as content-based similarity regions. Therefore, after melody-based similarity regions are detected, it is important to decide which regions have similar vocal content. Singing voice boundary detection is the first step to analyze the vocal content. We use the  X  Octave Scale  X  to calculate Cepstral coefficients [22] to represent the music content because the sung vocal lines always follow the instrumental line such that both pitch and harmonic structure variations are in octave scale. In our approach we divide the whole frequency band into 8 sub-bands corresponding to the Octaves in music. Cepstral coefficients are extracted from the Octave Scale [22]. Singular value decomposition is applied to find the uncorrelated Cepstral coefficients for Octave scale. We use the order range of 10-16 coefficients for Octave scale. Support vector machine [23] with radial based kernel function (RBF) is used to identify the instrument and vocal frames. Then the similarities are measured between the similar melody-based similarity regions, and the regions with high similarity are defined as the content-based similarity regions [17]. 2.2.3 Chorus detection Based on detected melody-based and content-based similarity regions and music knowledge [17], music structure can be identified. The choruses are detected from the content-based similarity regions. The details can be found in [17]. The detected i th chorus in a music song is represented as: chorus i B boundaries of the chorus. The purpose of video analysis is to detect and classify video shots as well as help detect lyrics from the video frames so as to align the detected music chorus to create a continuous and meaningful music video summary. Video analysis includes camera shot boundary detection and semantic shot classification. The camera shot is the basic unit of any video. Therefore, we segment the raw video sequence into a structured dataset where boundaries of all camera shots are identified using the method in [24]. The original video sequence can be represented by the shot set S = { s 1 , s 2, ... , s n } where n is the number of shot detected. frame of the shot. To detect the most salient lyrics appearing stably the shot instead at the two ends of the shot boundary, because the shot boundaries commonly contain transition frames which will blur the lyrics caption. The lyrics detection will be discussed in section 4. In order to better represent the semantic meaning of the shots, we further classify the detected shots into two categories: close-up face shot and non-face shot. Face is an important characteristic in music videos, which may indicate the singer or actor/actress in the music video. Therefore, the music summary should contain the f ace shots. The face and non-f ace shots alternatively appear in the music video, when the semantic meaning changes for the video content. The most salient difference between the close-up face shot and non-face shot is camera motion and the features of the object (i.e. face). This motivates us to use following features for shot classification: (1) Camera motion: As the camera always follows the movement of the object, the camera motion provides a useful cue to represent the activity and characteristic of the object. In our approach, we use  X  X verage motion magnitude X ,  X  X otion entropy X ,  X  X ominant motion direction X ,  X  X amera pan parameter X ,  X  X amera tilt parameter X  and  X  X amera zoom parameter X . These features are computed using the Motion Vector Field extracted from the compressed video. (2) Face: Face is an important characteristic of the close-up shot. If faces are detected in the shot, this shot s hould be close-up shot. We use a skin color based method [25] for face detection. To accurately classify the shot candidates, the above features from individual shots are fed into a classifier. We use support vector machine (SVM) here since SVM is a useful statistical machine learning technique that has been successfully applied in the pattern recognition area [23]. In our approach, the SVM kernel function is a Gaussian Kernel. The i th shots in the music video can be represented as: shot B, End-B, Class&gt;, where Start-B and End-B denote the start and ending boundaries of the shot and Class indicates that the shot is close-up or non-close-up. The purpose of text analysis is to make use of lyrics appearing in the music video to help align the chorus to create music video summary. Note that many music videos do have the lyrics of the video appear as visual text superimposed on the video frames. Lyrics are good cues indicating the structure information of the music video. Here we extract the lyrics directly from music video frames. The text analysis includes three steps. Firstly, for each frame in the representative frame set, we detect whether the frame contains lyrics or not. Secondly, the lyrics recognition is applied to those frames with the lyrics. Finally, repeated lyrics are grouped together to find the most repeated lyrics. Given the representative frame set F = { f 1 ,f 2 ,..., f applied to each representative frame f i , using the method proposed in [26 ]. Several heuristic rules related to lyrics of the music video are used to facilitate the lyrics detection. a) Lyrics always appear in the lower half part of the frame. b) Lyrics caption is a bar whose width is larger than height. The frames containing the lyrics are used to generate the lyrics frame set F X  , where F X  ={ f X  1 ,f X  2 ,..., f X  m }  X  F . For each frame in the lyrics frame set F X  , the content of each lyrics is recognized. The low resolution of video (typically 72 dpi) is a major source of problems in text recognition. OCR (Optical Character Recognition) systems have been designed to recognize text in documents, which were scanned at a resolution of at least 200dpi to 300dpi resulting in a minimal text height of at least 40 pixels. In order to obtain good results with standard OCR system, it is necessary to enhance the resolution of segmented text lines. In our experiment, we use cubic interpolation to rescale the text height (normally about 20 pixels) into 40 pixels while preserving the aspect ratio. It should be noted that although there is no OCR software can achieve 100% accuracy, it will not affect the final result much, as the error can be supplemented by the following approximate string matching operation. After text recognition, the recognition results are saved in a lyrics text content of frame f X  i in lyrics frame set F X  . The aim of repeated lyrics detection is to find the most salient part of a music video. We assume that the most salient part of a music video happens in the most salient music part (i.e. chorus). Although what makes a music part distinguished among a music work is not clear, current research typically assumes it to be the most repeated part. Generally, chorus of a song contains the most repeated music phrases. In this paper, a music phrase is defined as a short musical passage, which is similar to linguistic sentence in the speech. music phrase lasts for several shots which may correspond to several continuous lyrics in the lyrics set C , we need to merge these corresponding to it. After the merging process, the music phrase set P = { p 1 ,p 2 ,..., p t } is formulated. Given the music phrase set P , we use dynamic programming [19] to match each lyrics (i.e., p i ) with the lyrics sequence starting from this matching that allows errors, or called approximate string matching. lyrics sequence starting from this lyric (denoted as Y ), we should cost of a sequence of modification (insertion, deletions and D ( k , l ) represents the minimum number of modifications that are following: 
Initial: D i ( k ,0)= k ; D i (0, l )=0; 1  X  k  X  | X |, 1  X  l  X  | Y | Recurrence: i  X   X  where ) , ( the length of string X and Y respectively. The rationale for above formula can be explained as follows. D and D i (0, l ) represent the edit distance between a string of the are needed on the non-empty string. While for D i (0, l ), because we allow that any text position in Y can be the potential start matching empty pattern matches with zero errors at any text position. The last row of Matrix D i ( X,Y ) is defined as function h It measures how well the string X matches with different locations repetition detection results for the music video  X  X esterday Once More X . It can be seen from Figure 4 that except for p i itself (the first local minimum denoted with circle in Figure 4), there are other three matching points, also denoted with circles. These three matching points are not equal to zero (the best possible) because of the OCR errors. We can set a threshold to find the local minimum of function h ( r ). In our implementation, the threshold is set to 2*(1-OCR accuracy) multiplying the length of text p i . h i r) Thus, the task to find the salient part of the music can be converted to the task to find the most repeated music phrase in the set P . The detailed algorithm is described below: 1) Take the first element in set P, and use dynamic programming to find the repeated music phrases in set P . 2) Select the first element in set P , together with its repeated music phrases found to construct a subset R j . Meanwhile, delete these music phrases in set P . Increase j . Repeat step 1) and 2) until P is empty. represents a cluster containing the same music phrase in set P . By counting the number of element for each subset R j in set R , we can find the subset containing the most repeated music phrase, represented as: lyrics i =&lt;LyricStart-B i , LyricEnd-B LyricStart-B i and LyricEnd-B i denote the start and ending boundaries of the lyrics in time line. The final music video summary is created based on the most salient part detected from both music track and visual track. For the music track, the Chorus is the strongest and most repeated part of the song [14]; while for the visual track, the most salient part contains the most repeated lyrics. However, since the chorus detected in the music track is not always consistent in time line with the most repeated lyrics detected in the visual track, we need to align the music and visual part to make the final music video summary meaningful and smooth. The purpose of music-visual-text alignment is to synchronize the most salient parts detected from the music track and visual track so as to make the final music video summary meaningful and smooth. represented as: lyrics i =&lt;LyricStart-B i , LyricEnd-B the time line of Start-B i is not equal to LyricStart-B i B equal to LyricEnd-B i due to two reasons. The first reason is that the lyrics in the music video generally appear earlier and last longer than the corresponding singing voice in time line. This will result in LyricStart-B i less than Start-B i and LyricEnd-B i bigger than End-B The second reason is that the shots which are considered as unstable (last less than 0.3 seconds) are discarded in our approach. This will result in LyricStart-B i bigger than Start-B i B less than End-B i . In light of this, we create the music video summary based on the following rules: 1) Construct a dataset  X  containing all choruses and its 2) For each chorus in dataset  X  , we compare the start time and Table 2: The music phrase length of the different note levels
Sixteenth note level 16*  X  4*16*  X  (64  X  ) * The smallest note length detected is  X  If the summary is shorter than the required length, the preceding or succeeding music phrases will be integrated into the selected chorus to satisfy the length requirement for the summary. According to music theory [27], one music phrase is usually four bars in length. Therefore, the rhythm information is useful for aligning music phrases such that the generated summary has a smooth melody. For example, with the assumption that time-signature of an input song is 4/4, if the smallest note length we detected is  X  , the length of the music phrase can be calculated according to the different note level of this smallest note. Table 2 lists the different music phrase length calculation schemes corresponding to three different note levels to which the smallest note commonly belongs in popular songs. Figure 5 illustrates how to include the music phrases anterior or posterior to the selected chorus to get the desired length of the final summary. Similarly, in order to make the music and visual content synchronal, the visual content is selected according to the time line of music part selected as the summary. The experiments include the accuracy of chorus detection, shot classification and lyrics detection. The evaluation is to conduct user study to evaluate the quality of music video summaries. We use 20 popular English music videos (the details are listed in Table 3) for the experiments and evaluation. The lengths of the music videos range from 2m00s to 4m44s. All the music tracks in music videos are sampled at 44.1 kHz with 16 bits per sample and stereo format. 
No. MTV Song Name Duration Singer/Band Name 1. Five Hundred Miles 3m32s Peter,Paul&amp; Mary 2. Only You 2m40s Harry Connick Jr 3. Yesterday Once More 4m02s Carpenters 4. Sound of Silence 3m05s Paul Simon 5. Let It Be 3m48s Beatles 6. Cloud Number 9 3m45s Bryan Adams 7 Love Me Tender 2m48s Elvis Presley 8 Evergreen Tree 2m40s Cliff Richards 9 The End of the World 2m39s Skeeter Davis 10 When A Child Is Born 2m34s Richard Johns 13. You Are Still the One 3m33s Shania Twain 14. Here I Am 4m44s Bryan Adams 16. Take Me to Your Heart 3m58s MLTR 18 Island Girl 3m43s Elton John 20 Come On Over 2m52s Shania Twain We extracted music tracks from all music videos to detect choruses in these music tracks. We use chorus detection accuracy formulated in Equation (3) to evaluate the result of detected chorus. Here correctly detected chorus means the start and ending boundaries of the detected chorus should fall into  X 2 seconds of the start and the ending boundaries of the original chorus in music. The results of chorus detection accuracy of each music video are tabulated in Table 4. In Table 4, TnoC denotes the total number of the chorus contained in a music track, and CDA denotes the chorus detection accuracy. From Table 4, we can see that our music structure analysis algorithm, which takes chorus as a stable element and aligns the corresponding visual part to it. The purpose of shot classification is to find the close-up face shots in the video track and use these shots to construct the music video summary. We investigate the accuracy of SVM classifier which is used for shot classification. We need to select training data for SVM before we use it for classification. In order to make training results statistically significant, training data should be sufficient and cover various music videos. We use 1000 shots (500 are Close-Up Face and 500 are Non-F ace) manually selected from various music videos as the training set to train SVM (the previous 20 English music videos are not included in this training set), and we employ the radial basic function (RBF) with Gaussian kernel as the kernel function in SVM training. The radial basic function (RBF) with Gaussian kernel can be defined as following: where x denotes the vector drawn from the input sp ace, x In our experiment, we set c =2. detected in our test set which contains 20 popular English music videos listed in Table 3. Totally there are 532 Close-Up F ace shots and 763 Non-F ace shots. The classification results are show in Table 5. Close-Up 
Non-Face 763 667 83 87.42% 88.93% The lyrics detection accuracy is defined in Equation (5): Here the correctly detected lyrics means the actual number of lyrics detected using our proposed method and the start and ending boundaries of the detected lyrics should fall into  X 2 seconds of the start and the ending boundaries of the original lyrics chorus in the music video. Due to the limitation of shot detection algorithm, some lyrics in certain shot cannot be detected if one shot contains detection accuracy from music videos is 97.6%. Since there is no objective measure available to evaluate the quality of a music video summary, we adopt a subjective user study [28] to evaluate the performance of our music video summarization method. access the users X  perception of the pr oposed method. The following attributes are considered for music video summary. a. Clarity : This pertains to the clearness and comprehensibility of the music video summary. b. Conciseness : This pertains to the terseness of the music video summary and how much of the music video summary captures the essence of the music video. c. Coherence : This pertains to the consistency and natural drift of the segments in the music video summary. We have evaluated our proposed method on a test set of 20 music videos. The length of the summary for each sample is set to 20s. We invited 12 participants with music experience to evaluate the music video summaries. Most of the participants are students of the School of Computing in National University of Singapore. Their ages ranged from 18 to 30 year old. Before the tests, the subjects could watch each testing sample for as many times as needed till he/she grasped the theme of the sample. Then the subjects watched summaries generated from test samples and rated the summaries in four categories (Clarity, and Conciseness, Coherence, and Overall Quality) on a scale of 1-5, corresponding to the worst and best respectively. We employ the overall quality of the video as an attribute to evaluate a summary because it pertains to the general perception of the users to the video summaries. The average grade of summaries from all subjects is the final grade. In order to make comparison, we also asked the subjects to rate the summaries generated using our previous summarization method [11] and the summaries manually generated by two music experts from our institute (they are not subjects). In order to avoid potentially biased evaluation results, we present the music video summaries generated by different methods in a random order so that the subjects do not know which method had been used to generate each summary before they rate them. Table 6 shows the average scores of the user evaluation to the summaries generated using proposed method, our previous method, and manual method respectively. From the test results, it can be seen that the summaries using proposed method performed quite well, especially in the coherence attribute, compared with our previous method. This is b ecause our previous method just focused on the most frequent music segments which may occur in different places in a song, and the summary is created by concatenating these segments together. As a result, the discontinuity will happen either in the summarized segment beginning from the middle of music phrase or in the boundary of two different summarized segments. These two problems are avoided in our proposed method as we made the music video summary based on the continuous music phrases. It also can be seen that proposed method is comparable to the manual summarization method. It is quite surprising that the proposed method performs better than the manual summarization in terms of coherence. This is probably because the summaries generated by the proposed method contain the entire music phrases while music experts may sometimes break in the middle the music phrases at the beginning or ending of the music video summary for the purpose of not exceeding the desired length. Proposed Previous We have presented a novel approach to create music video summary using audio-video-text analysis and alignment. The proposed approach has combined music knowledge with low-level feature analysis to provide a powerful tool for music video analysis and summarization. The user study has illustrated the created summaries using proposed approach are promising and superior to existing methods. The future work will focus on three directions. Firstly, we need to improve and refine the algorithms for chorus detection, shot approach on a large scale of music videos. Thirdly, we will explore more applications based on proposed approach. For example, some potential applications can be music video semantic indexing and retrieval, singer identification, etc. [1] Logan B and Chu S , Music Summarization Using Key [2] Xu C, Zhu Y and Tian Q, Automatic music summarization [3] Lu L, and Zhang H , Automated Extraction of Music Snippets, [4] Bartsch M A and Wakefield G H, To Catch a Chorus: Using [5] Cooper M and Foote J, Automatic Music Summarization via [6] Chai W and Vercoe B, Music Thumbnailing via Structural [7] Yow, D., Yeo, B.L., Yeung, M., and Liu, G., Analysis and [8] Gong, Y., Liu, X., and Hua, W., Creating motion video [9] Foote, J., Cooper, M., and Girgensohn, A., Creating Music [10] Pfeiffer, S., Lienhart, R., Fischer, S., and Effelsberg, W., [11] Shao, X., Xu, C., and Kankanhalli, M.S., Automatically [12] Agnihotri, L., Dimitrova, N., Kender, J., and Zimmerman, J., [13] Agnihotri, L., Dimitrova, N., and Kender, J., Design and [14] Ten Minute Master No 18: Song Structure. MUSIC TECH [15] Goto M A, Chorus-section detecting method for musical audio [16] Dannenberg R B and Hu N, Discovering music structure in [17] Maddage C. N, Xu.C, Kankanhalli M.S , Shao X, Content-[18] Rossing, T.D., Moore, F.R., and Wheeler, P.A., Science of [19] Navarro, G. A guided tour to approximate string matching, [20] Sheh, A., and Ellis, D.P.W., Chord Segmentation and [21] Young S et al ., The HTK Book , Dept. of Engineering, [22] Deller, J. R., Hansen, J.H.L., and Proakis, H. J. G. Discrete-[23] Collobert, R., and Bengio, S. SVMTorch: Support Vector [24] Smoliar, S., and Zhang, H., Content-based video indexing and [25] Li S. Z., Zhu L. , Zhang Z. Q. , Blake A. , Zhang H. J. and [26] Hua X. S., , Chen X. R., Liu W., Zhang H. J. , Automatic [27] Rudiments and Theory of Music. The Associated Board of the [28] John .P.C. , Virginia A. Diehl and Kent L.N, Development of 
