 Iftekhar Naim inaim@cs.rochester.edu Daniel Gildea gildea@cs.rochester.edu Department of Computer Science, University of Rochester Rochester, NY 14627, USA Clustering is a widely used exploratory data analysis tool that has been successfully applied to biology, so-cial science, information retrieval, signal processing, and many other fields ( Jain et al. , 1999 ). In many of these applications (for example, biological data analy-sis, anomaly detection, image segmentation, etc.), the goal is to identify rare groups or small clusters (in terms of number of members) in the presence of other larger clusters. In this paper, we focus on the par-ticular problem of clustering large datasets with high dynamic range in cluster sizes.
 The Gaussian mixture model is a powerful model for data clustering ( McLachlan &amp; Peel , 2000 ). It models the data as a mixture of multiple Gaussian distribu-tions where each Gaussian component corresponds to one cluster. Let X = { x 1 , x 2 , . . . , x N } be N i.i.d. ran-dom vectors that follow a K component Gaussian mixture distribution. The j th Gaussian component in the mixture is defined by its mean  X  j , covari-ance  X  j , and the mixing coefficient  X  j (  X  j &gt; 0 and P j =1  X  j = 1). These parameters together are repre-sented as the parameter vector  X  = [  X  j ,  X  j ,  X  j ] K j =1 Our goal is to estimate model parameters  X  given the data X . The parameter estimation is typically accom-plished by the Expectation-Maximization (EM) algo-rithm ( Dempster et al. , 1977 ). In this paper, we em-pirically show that EM exhibits slow convergence if one of the Gaussian mixture components has a very small mixing coefficient compared to others, and there exists some overlap among the mixture components. We explain this slow convergence of EM for a mixture with unbalanced mixing coefficients using the conver-gence analysis framework presented by Xu and Jor-dan ( 1996 ), and Ma et al. ( 2000 ).
 We present a solution to this problem based on De-terministic Annealing ( Rose , 1998 ; Ueda &amp; Nakano , 1998 ). It is well known that deterministic anneal-ing can help prevent the EM algorithm from getting trapped in local optima ( Ueda &amp; Nakano , 1998 ). Tra-ditional deterministic annealing follows a monotoni-cally decreasing temperature schedule by slowly in-creasing the inverse temperature parameter (  X  ) from 0 to 1. We propose a novel non-monotonic temperature schedule that can improve the speed of convergence as well. We call this modified annealing schedule Anti-annealing . We start with a traditional temperature schedule by slowly increasing  X  from 0 to 1. Next we continue increasing  X  beyond 1, up to a chosen upper bound, and finally slowly decrease  X  down to 1. Our experiments demonstrate the effectiveness of the pro-posed Anti-annealing schedule to improve the speed of convergence of the EM algorithm for unbalanced mix-tures. Finally, we extend our results to the Dirichlet Process Gaussian Mixture Models (DP-GMM). 2.1. Related Work The EM algorithm is guaranteed to monotonically con-verge to local optima under mild continuity condi-tions ( Dempster et al. , 1977 ; Wu , 1983 ). Redner and Walker ( 1984 ) show that EM has linear rate of con-vergence and suggest that Newton X  X  or Quasi-Newton methods should be preferred over the EM algorithm. They also experimentally show that EM converges slowly in the presence of overlapping clusters. Xu and Jordan ( 1996 ) analyze the rate of convergence of the EM algorithm and show that EM exhibits a super-linear rate of convergence as the overlap among the mixture components goes to zero ( Xu &amp; Jordan , 1996 ). They forge a connection between the EM algorithm and gradient ascent and prove that rate of convergence of the EM algorithm depends on the condition number of a projected Hessian matrix E T P ( X   X  ) H ( X   X  ) E , where  X   X  is the optimum parame-spanning the constrained parameter space (satisfying the constraint P K j =1  X  j = 1), P ( X   X  ) is a projection matrix, and H ( X   X  ) is the Hessian of the log-likelihood function. Later, Ma et al. ( 2000 ) extend this result and show that the rate of convergence of EM is a higher order infinitesimal of maximum pairwise over-lap among the mixture components. Salakhutdinov et al. ( 2003 ) propose the Expectation Conjugate Gradi-ent (ECG) algorithm for highly overlapping Gaussian mixtures. ECG allows faster convergence than the tra-ditional EM algorithm in the presence of high overlap among mixture components. Therefore, the impact of component overlap on the convergence of EM has been known for more than a decade. While overlap among components is the major factor that influences rate of convergence of EM, we show that mixing co-efficients can also significantly influence the speed of convergence in the presence of some overlap. To our knowledge, this is the first work that addresses the im-pact of mixing coefficients on the rate of convergence of EM. 2.2. Convergence of EM for Small Clusters We investigate the convergence of the EM algorithm for Gaussian mixtures with some small mixing coeffi-cients. We start with 3 simulation examples. First, we create synthetic data with a 2-component uni-variate Gaussian mixture with the parameters  X  = (0 . 025 , 0 . 975) T , (  X  1 ,  X  2 ) = (  X  5 . 0 , 5 . 0), ( X  (6 . 25 , 6 . 25) (as shown in Figure 1(a) ). We perform 2-component EM fitting and after 100 iterations, we get a parameter estimate of  X   X  = (0 . 059 , 0 . 9410) T , (  X   X  1 ,  X   X  2 ) = (  X  0 . 497 , 5 . 08) , ( In this simple setting, the inaccurate result is due to the slow speed of convergence. If we allow EM to run for many more iterations, it usually converges to the true parameter values.
 Next, we create another dataset (Figure 2(a) ) with bal-anced mixing coefficients (  X  = (0 . 5 , 0 . 5) T ) and leave the other parameters the same. Under the same over-lap (since means are not changed), EM converges to almost accurate parameters much faster, after only 12 iterations. This simulation implies that under the same amount of overlap, more balanced mixing co-efficients yield faster convergence of EM. Finally, we create a synthetic dataset with skewed mixing coeffi-cients, but relatively less overlap (Figure 3(a) ). Means efficients at  X  = (0 . 025 , 0 . 0975) T , and covariance val-ues at ( X  1 ,  X  2 ) = (6 . 25 , 6 . 25). Despite having very small mixing coefficient values, EM converged to the true parameters in only 23 iterations. This example emphasizes the critical impact of overlaps on speed of convergence. However, the first example also im-plies that under some overlap, mixing coefficients have strong influence on the speed of convergence. 2.3. Why Slow Convergence? Next, we explore the reason that EM shows slow con-vergence in the presence of small clusters. We ex-plain it using the framework proposed by Xu and Jor-dan ( 1996 ). Xu and Jordan (and later Ma et al. ( 2000 )) have shown that the rate of convergence of EM is up-per bounded by the norm I + E T P ( X   X  ) H ( X   X  ) E ) i.e. the condition number of the projected Hessian  X  E T P ( X   X  ) H ( X   X  ) E . As the condition number  X   X  1, the log-likelihood surface is spherical and allows fast convergence. On the other hand, a larger value of the condition number of the effective Hessian implies an elongated log-likelihood function which can cause slow convergence for any linearly convergent method. Our simulation results show that, in the presence of some overlap, the condition number of the Hessian matrix increases as one of the mixing coefficients decreases. We verify this by computing the condition number of the projected Hessian matrix E T P ( X   X  ) H ( X   X  ) E at the true parameter values for 3 different 2-component mix-ture configurations. For all the mixture configurations, we keep one of the means fixed at  X  2 = 0 . 0 and then we vary the mean of the other components to  X  1 = 10, 20, and 30. The variance of the components are set to 9. Then, we vary the mixing coefficients of the first component  X  1 from 0.01 to 0.99 and compute the con-dition numbers for each case and plot them in Figure 4 . The results are quite intuitive. In the case of non-overlapping clusters (  X  1 = 20 or  X  1 = 30), the condi-tion number did not change much for extreme values of  X  . However, for the overlapping case (  X  1 = 10 . 0), the condition number of the projected Hessian became a lot larger for extreme values (both higher and smaller values) of  X  1 . To confirm this intuition, we performed another simulation where we generated 2 different 2-component Gaussian mixtures with varying mixing co-efficients and looked at their log-likelihood surface. For simplicity, we plot log-likelihood as a function of only the means of the mixture components, and assume the mixing coefficients and covariances to be fixed. Fig-ure 5 shows the log-likelihood surfaces (on the right) for the corresponding Gaussian mixtures (on the left). As one of the mixing coefficients becomes significantly smaller compared to the others, the log-likelihood sur-face tends to become flatter and elongated, which is in agreement with our intuition. In this section, we propose a variation of the Deter-ministic Annealing EM ( Ueda &amp; Nakano , 1998 ) to ad-dress the speed of convergence issue explained above. We compare the result with two other well-known op-timization techniques: Expectation Conjugate Gra-dient (ECG) ( Salakhutdinov et al. , 2003 ) and Quasi-Newton Method (BFGS) ( Liu &amp; Nocedal , 1989 ). 3.1. Deterministic Anti-Annealing Deterministic Annealing is a well-known technique to improve the convergence behavior for non-convex op-timization problems. Ueda and Nakano ( 1998 ) pro-posed a Deterministic Annealing Expectation Maxi-mization (DAEM) algorithm that varies the temper-ature from high to low temperature, and determinis-tically optimizes the objective function at each tem-perature. Conventionally, DAEM is used to provide reliable global convergence. In EM, we estimate the posterior membership probabilities h j ( t ) (the proba-bility that x t belongs to the j th Gaussian component) using the following equation: The DAEM algorithm modifies the E-step update rule using the scheduling parameter  X  : In the M-step, the model parameters are estimated using this h j ( t ) values in exactly the same manner as the traditional EM algorithm. The parameter  X  can roughly be interpreted as the inverse of temperature. DAEM typically starts at  X   X  0 and slowly increases  X  up to 1. At each  X  value, DAEM iterates the E-step ( 2 ) and the M -step until convergence. The algorithm can be described as follows: 1. Initialize: 2. Iterate until convergence: 3. Increase  X  4. If  X   X  1, go back to step 2. 5. If  X  &gt; 1, return.
 Initially, for  X   X  0, all the clusters are overlap-ping and the posterior probability becomes uniform, i.e. h j ( t )  X  1 /K for all j . On the other hand, as  X  be-comes larger, DAEM allows less and less overlap and for  X   X   X  it becomes analogous to the winner-take-all ( Kearns et al. , 1998 ) approach, i.e. h j ( t ) = 1 for only one j , and h i ( t ) = 0 ,  X  i 6 = j . For  X  = 1, it is reduced to the original posterior distribution given current  X .
 Traditionally, DAEM starts with  X   X  0 and slowly monotonically increases to  X  = 1. For tiny clusters, we observe that EM gives highly overlapping param-eter estimates even after hundreds of iterations, and converges very slowly. We can improve the speed by starting from  X  &gt; 1 and slowly decreasing it down to 1.0, where the objective function is same as that for EM. Let us call this scheduling strategy Anti-annealing scheduling. Although this improves the speed of con-vergence by restricting the amount of overlaps, the ob-jective function becomes more irregular and EM tends to converge to poor local optima more frequently. In order to solve this problem, we follow a hybrid sched-ule, where we start with  X  min &lt; 1 and slowly increase it to a value  X  max &gt; 1 and then again decrease back to  X  = 1.
 The proposed anti-annealing schedule (Figure 6(b) ) improves the speed of convergence and helps avoid poor local optima as well. However, it is necessary to choose a slow enough temperature schedule, par-ticularly for complicated data with a large number of clusters. We also need to perturb the estimated pa-rameters after each iteration. At lower  X  values, the effective number of clusters is often less than K , as many components share the same parameters. As we increase  X  , the clusters start to move around and ef-fective number of clusters increases as a result of split-ting. We must perturb the estimated parameters with a small noise term to enable the clusters to split. In our implementation, we add a small amount of random noise to the mean of each of the Gaussian components along the first principal component dimension of the associated cluster.
 How Does Anti-Annealing Speed up Convergence? Using the results shown by Ma et al. ( 2000 ), we explain the faster convergence of the proposed Anti-annealing method. Let e ij ( X   X  ) be the measure of overlap be-tween the i th and j th Gaussian component: e and let the maximum component-wise overlap be: e ( X   X  ) = max i,j e ij ( X   X  ). Ma et al. ( 2000 ) show that the rate of convergence r is a higher order infinitesi-mal of e ( X   X  ): r  X  lim During the Anti-annealing phase (  X  &gt; 1), the pair-wise overlap values e ij ( X   X  ) decreases due to relatively harder membership probabilities. For the extreme case  X   X   X  , the posterior probabilities h i ( t ) values are either zero or one, which causes e ij ( X   X  )  X  0 for all i, j  X  { 1 , . . . , K } leading to superlinear convergence. In general, it can be easily shown that e ( X   X  ) decreases as  X  increases. 3.2. Expectation Conjugate Gradient (ECG) The Conjugate Gradient method is known to outper-form gradient descent methods for special cases when the objective function is elongated, and the conjugate direction is a better direction than the steepest gra-dient direction. Salakhutdinov et al. ( 2003 ) proposed an expectation conjugate gradient (ECG) method for optimizing the log-likelihood functions in the case of highly overlapping clusters. We evaluate the perfor-mance of the ECG algorithm for the small cluster scenario. The EM algorithm automatically satisfies several constraints on the parameter space:  X  i  X  0, P i  X  i = 1, and  X  0. To ensure that the ECG algo-rithm satisfies the same set of constraints, Salakhutdi-nov et al. ( 2003 ) propose to re-parameterize the model parameters:  X  j = e  X  j is the upper triangular matrix obtained by Cholesky decomposition of  X  j . Due to space limitation, exact formulation of gradients under the re-parameterization is presented in the Appendix. We apply the standard conjugate gradient optimization algorithm using these gradient values and a cubic line search (Matlab Li-brary, Carl E. Rasmussen, 2006). 3.3. Quasi-Newton Method: BFGS Quasi-Newton methods (for example, BFGS, LBFGS, etc.) approximate the Hessian using gradient values and usually converge faster than first order gradient based methods. However, these methods (without line search) lack the convergence guarantee of EM and re-quire line search that introduces additional computa-tion. We implement BFGS using the same gradient functions as for conjugate gradient and the Matlab Op-timization Toolbox, and compare with our algorithm. The Dirichlet process mixture model (DPMM) ( Rasmussen , 2000 ) has gained signifi-cant attention for flexible density estimation. Unlike the traditional mixture models, DPMM does not as-sume a fixed number of density components and allows the model complexity to grow as more data points are seen. We have extended the variational Bayesian Dirichlet process mixture model ( Blei &amp; Jordan , 2006 ) using Deterministic Anti-annealing. The variational Bayesian DPMM is based on the truncated stick-breaking representation. Let X represent the random variable that follows the Dirichlet process mixture model, and let the latent variables be W = { V ,  X   X  , Z } representing the stick lengths, individual mixture component parameters, and cluster memberships respectively. Let q ( v ,  X   X  , z ) denote the factorized variational distribution and T be the truncation parameter. The posterior responsibility of a data point x t to a mixture component j  X  { 1 , . . . , T } is represented as  X  ij , which is computed as: where S j = E q [log V j ] + P j  X  1 l =1 E q [log(1  X  V l E [log p ( x i | z i )].
 The deterministic annealing approach can be easily extended to DPMM by a straight-forward modification of equation ( 3 ) ( Katahira et al. , 2008 ): 5.1. Datasets We experiment with three different datasets. 1 The first dataset consists of samples drawn from a two component mixture of Gaussians, where the cluster sizes are 200k and 200 data points respectively (Fig-ure 7(a) ). We deliberately set the means and covari-ances so that there exists some overlap among the mix-ture components. The second dataset is also composed of a synthetic mixture of 4 Gaussians (Figure 7(b) ), having 150k, 100k, 50k, and 150 data points each. Finally, we experiment with the MNIST handwritten digits dataset, which consists of high dimensional im-ages of handwritten digits (0-9). We have randomly selected 5000 images of handwritten digit  X 4 X , and 250 images of handwritten digit  X 8 X . Then we com-bine these samples and reduce the dimensionality of the combined dataset down to two dimensions using PCA. We choose these two particular digits because of their nice elliptical shape in 2D PCA projection (Figure 7(c) ). We can approximate the density of this dataset by fitting a 2-component mixture of Gaussians. 5.2. Experimental Results We observe the convergence behavior of all the four dif-ferent algorithms: EM, Deterministic Anti-annealing, BFGS, and ECG, on all the three datasets described above. Each algorithm terminates when it satisfies the stopping criterion: | L ( X  k +1 )  X  L ( X  k ) | / | L ( X  k Here, L ( X  k ) represents the log-likelihood value at the k th iteration and  X  is the tolerance parameter. For all the algorithms except Determinisitc Anti-annealing, we set the tolerance variable  X  = 10  X  10 . For Deter-ministic Anti-annealing, we set the tolerance parame-ter to 10  X  6 . Since anti-annealing is capable of speeding up convergence at the later scheduling stages, we do not need a conservative tolerance. For the first and third experiment, the temperature schedule is set to quire slower temperature scheduling for a larger num-ber of clusters. We estimate error with respect to the true parameter values by summing up the symmetric KL divergence between estimated and true Gaussian parameters for each mixture component. In order to measure the accuracy of clustering, we need to perform an assignment task to match clusters. For this task, we use the symmetric KL divergence between multivariate Gaussians and then perform a minimum weighted bi-partite matching that finds a one-to-one mapping that minimizes the cumulative error with respect to true clustering. The symmetric KL divergence is defined as: For two Gaussian distributions, D s [ N ( x |  X  i ,  X  i ) , N ( x |  X  j ,  X  j )] = The approximate error for the estimated parameter  X  err (  X   X  ,  X   X  ) = where {  X  j } K j =1 is the one-to-one mapping estimated by minimum weight bipartite graph matching.
 For each of the datasets, we apply all four algorithms for Gaussian mixture model fitting. We execute each algorithm 10 times on each dataset and observe the rate of convergence both for the best case (minimum error) and average case, as shown in Figure 7 . 2 For EM and deterministic anti-annealing, we initialize the means of mixture components with randomly chosen sample points from the data. The mixing coefficients and covariances are initialized to the uniform distribu-tion (1 /K ) and the covariance of entire data respec-tively. For BFGS and ECG, we initialize the parame-ters with the outcome of a few EM iterations. We experimented with the Dirichlet process Gaussian mixture models on synthetic Gaussian mixture models with high dynamic ranges in cluster sizes. We created a two-component Gaussian mixture, where the larger component consists of 50k points, and the smaller com-ponent consists of only 100 points. Then, we applied both the variational Bayes DPMM and the Determin-istic Anti-annealing based DPMM. The VB-DPMM incorrectly estimated five components, where four components were fitted to the same Gaussian com-ponent. On the other hand, Anti-annealing DPMM resulted in the correct estimation of two components. The reason is the winner-take-all behavior during the anti-annealing. 5.3. Discussion The experimental results demonstrate that both the deterministic anti-annealing method and BFGS signif-icantly improve the speed of convergence compared to traditional EM. For the minimum error case scenario, BFGS outperforms deterministic anti-annealing by a small margin. However, deterministic anti-annealing is more stable on average and has better convergence behavior. Both BFGS and ECG exhibit significant amount of variability, particularly for the second (4 Gaussians) dataset. They often end up in poor degen-erated local optima, where one or more of the mix-ing coefficients are clamped to zero. Therefore, deter-ministic anti-annealing outperforms BFGS on average. Salakhutdinov et al. ( 2003 ) proposed a hybrid EM-ECG algorithm, that estimates the entropy of cluster memberships as a measure of missing information (in other words, cluster overlap), and chooses to apply ECG if the entropy value is larger than certain thresh-old. Although the entropy-based method works well for balanced but highly overlapping mixtures, it is not general enough for the case of unbalanced mixtures. The entropy value decreases with the increasing skew in the mixing coefficients. Moreover, our experimental results show that neither ECG nor EM works well for such unbalanced overlapping mixtures. The proposed Deterministic Anti-annealing scheme has lots of potential for faster convergence for datasets with smaller clusters. It offers several key advantages such as: 1) more robust global convergence, 2) faster convergence for small clusters via anti-annealing, 3) simple to implement, no line search required, 4) pa-rameter constraints are satisfied without requiring reparameterization. Our experimental results demon-strate that deterministic anti-annealing EM outper-forms all the other three algorithms on average, both in terms of speed and correctness of convergence. However, the temperature scheduling of Determinis-tic Annealing often requires some tuning ( Rangarajan , 2000 ). A thorough study of temperature schedule can be an interesting future direction. As a general guide-line, the schedule should be guided by the complexity of the data. The more complex the data, the more slowly we should vary the temperature parameter. We would like to thank Daniel  X  Stefankovi X c, Gaurav Sharma, and Suprakash Datta for many useful com-ments and feedback. Funded in part by NSF award IIS-0910611.

