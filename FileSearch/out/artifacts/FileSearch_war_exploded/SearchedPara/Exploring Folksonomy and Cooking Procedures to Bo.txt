 of various resources on the Internet. Nevertheless, what the overwhelming information choices bring to people is not greater convenience, but more complexity component of information filtering, recommender systems have become prevalent since mid-1990s, aiming to make personalized information recommendations through So far, the recommendation techniques have got success mainly in the domains of entertainment resources sharing, such as movies, music, images, etc. Similar to these activity in which user experiences can be greatly improved by adopting Different from other domains, however, recipe domain has its own characteristics. For which introduces the cooking flow of a recipe. Even two recipes share similar `features X , e.g., ingredients and cooking actions, but if the sequences of cooking actions on their ingredients are different, and then the tastes, smells and appearances of two recipes would be quite different. 
Although there have been some pieces of work done in the cooking and food features, etc., in a computer-readable way. Traditional recommendation works can be filtering (CF) and the hybrid of the first two. However, due to the differences between recipe domain and other domains, the traditional methods have limitations and content-based recommendation methods do not provide a way to model and describe cooking procedures of recipes (but only a flat feature vector). For collaborative filtering methods, they can apply the social or collaborative techniques to recommend into consideration, and ignore the conten t analysis of recipes. Such CF methods fail over the recipe characteristics. 
In our viewpoint, an ideal recipe recommender system should be aware of users X  specific interests from a more comprehensive perspective, like the cooking skills, taste features, etc. Recently, folksonomy (also named collaborative tagging) provides a way to let user annotate resources, and users can express their subjective feeling, perception and perspectives on resources. To achieve effective recommendation in such a specific domain, we present in this paper a data model to represent recipes by exploiting cooking procedures and combining the advantages of folksonomy. Based on the recipe data model, we then propose a recipe recommendation framework. The characteristics of our proposed framework and the contributions of our work are as follows. 1. A cooking recipe model is devised from the perspectives of cooking procedures 2. We design a folksonomy-driven, hybrid recipe recommendation strategy, by 3. Experiments are conducted on a real data set to evaluate our method. The results related works. Section 3 introduces our recipe data model. In section 4, we present our recommendation strategy in detail. Empirical studies and experiment results are given in section 5. We conclude the paper in section 6. In this section, we review some existing works related to the cooking and food topics, as well as some recommendation and folksonomy techniques relevant to our work. Cooking &amp; Food Related Research. Research on the cooking-related topics by getting collaborative-filtering based recommendations, and giving feedbacks. Wang et al. [13] proposed a graphical representatio n of the cooking procedure of recipes, named as cooking graph, where the cooking materials, actions are modeled as nodes, connected by directed edges indicating th e ingredient and cooking flows; a sub-structure similarity metric between the cooking-graphs was also brought up in that work. Sobecki et al. [7] presented a hybrid recipe recommendation strategy based on demographic, content-based, and collaborative filtering methods, as well as the compared the recommendation strategies from both food and recipe levels, using the content-based, collaborative filtering and hybrid approaches. Other than applying the general social-based recommendation strategies to the cooking and food domain, none of the above works have provided an explicit and comprehensive content model for the recipe data.. One of the major objectives of our work is to overcome this problem, so as to provide an efficient content-based approach. Recommender Systems. The recommender systems can be generally classified into four categories based on their different recommendation strategies: content-based, knowledge-based, collaborative filtering and hybrid ones [1].

The content-based recommendations concentrate on learning user preference with similar content to the user X  X  favorite ones. Pazzani et al. did a survey to content-based recommender systems in [8], and introduced methods of item representations, user profiling methods, and the comparison metrics of user-item profile relevance. Collaborative recommendations focus on identifying neighborhoods with similar preferences of a particular user, and recommend to him/her the items with the highest ratings among the neighbors. Herlocker et al. evaluated research on collaborative recommender systems comprehensively in [6] from aspects like user tasks, data sets, accuracy metrics, etc. The collaborative filtering techniques have got great popularity and success in systems like MovieLens 1 . There are also knowledge-based recommendations, which make advices based on predicting how a particular item would match a user X  X  needs/requirements [2]. Since each recommendation technique has both strengths and limitations, there are also systems trying to use hybrid approaches to make better recommendations. The combination types and example systems were introduced in [2]. Folksonomy. Folksonomy, also named collaborative tagging, has gained great allowing user to annotate resources with personalized tags. In the multimedia resource tool to share users X  comments on their interested resources. 
In the research field, folksonomy work mainly focuses on investigating and analyzing the features of user-generated free tags, and attempting to use them in overview of the tag usage patterns, and user activities in collaborative tagging systems has been done in [9]. Tags can be used to construct user profiles to facilitate comparisons were presented by Michlmayr et al. In [11], the authors proposed a hierarchical clustering method to get the highly relevant tag clusters, and use them to make personalized recommendations. In [14], Zhen et al. suggested to utilize the tags in the collaborative filtering procedure, so as to improve the recommendation accuracy by calculating user similarity based on their tag-based profiles. To measure the semantic similarity between tag-based profiles, multiple metrics were surveyed in [3], and empirical experiments were also conducted to evaluate these metrics. model, and then introduce a cooking recipe data model which represents the recipe features into cooking oriented and user perspective features. As exemplified by Figure 1, a typical cooking recipe usually appears as a (multimedia) document this section, we categorize such information into two aspects, namely, the cooking procedures and user X  X  subjective perception. 3.1 Cooking Oriented Features Different from other domains, in the recipe domain, there are procedures telling users how to cook dishes out. A typical cooking process may include a preparation step to get the cooking materials in required condition, and a boiling step to heat the dish. This process involves elements like food ingredients, seasonings, cooking actions, cooking constraints namely cooking temperature, cooking time, etc. We name these most basic but important information of food recipes as cooking oriented features (COFs) . Besides, the relationships between these elements are complicated, information indicating when to perform which steps. Such complexities determine the difficulty in modeling the cooking oriented features. 
To overcome the inconvenience of viewing cooking oriented features by reading the long textual directions and make it computer readable, we adopt here the cooking graph model previously proposed by our group [13], for representing the cooking flows of various recipes. More specifically, th e cooking flow of a recipe is formulated by a graph composed of four elements: nodes, Cons is the set of constraints associated with either action nodes or edges, and Ingr is the set of ingredients needed to cook the dish. Figure 1 shows an example of graphical presentation of the recipe `Chinese Braised Spare Ribs X . From Figure 1 we can see that the cooking process of the recipe cooking constraints, and connected by the so-called 'Action Flow X  edges. The 'Ingredient Flow X  indicates the state changes of ingredients by connecting the relevant ingredient-and action-nodes. One benefit of this graphical representation is that users can view the cooking process in an easy and intuitive way, which has not been considered by other previous works. 3.2 User Perceptual Features In the recipe domain, there are some features mainly involving the taste, smell, texture (whether the food is hard or tender), temperature, and all the other properties features (UPFs) . For example, the UPFs of cheese cakes are usually described as subjective perception of users and often not shown in traditional recipe cooking procedure description. 
Depicting the UPFs of foods is not an easy task, due to people X  X  subjective perceptions of them. This can be easily understood if we recall some common scenarios in our daily life. Taking the Japanese Sushi as an example, people who love fresh seafood would regard it as very delicious food, while those who cannot get used brutal) to prescribe statically user subjective perceptions on recipes. Inspired by the prosperous collaborative tagging applications, we observe that the Internet users are quite active in contributin g content to the online systems, especially for sharing their comments on resources. Collaborative tagging provides a way to collect the common point of view on a reso urce. According to the observation on our prototype system, we find that users like to tag their perceptual feeling. Motivated by this, we adopt the folksonomy mechanism into our system for deriving the UPFs of recipe are formulated by a tag vector as follows: all users. 
Considering collaborative tagging would become effective only if the users are knowledge besides those which can be directly read from the resources. For example, onion X , then it would be meaningless for the sharing purpose as the ingredient information has already been described in the resource. we propose a hybrid recipe recommendation method which leverages the folksonomy mechanism and cooking procedures to pr edict users X  preferences on recipes. 4.1 Content-Based Relevance COF Similarity. The cooking oriented feature (COF) similarity is to measure how a recipe is similar to another via the cooking flow perspective. This factor is important when making recommendations as the cooking skills of users usually vary from one to another, and recommending a delicious but difficult-to-cook dish to an amateur cooking learner would not make sense. Since the cooking flow in our work is modelled by the cooking graph, we compute the similarity based on the sub-structure similarity between two cooking graphs, as presented in [14]: where graphs S x where x = [1, .., m] ; 
E and and  X  are adjustable weights for action and ingredient edges; (, ) shared percentage of common ReciSet (defined as two connected nodes with a directed edge in the graph). A larger value of (, ) recipes share more similar cooking flows. UPF Similarity. The purpose to evaluate the user perceptual feature (UPF) similarity textures, etc., from a folksonomy perspective. No matter cooking at home or eating at the cosine similarity: recipes i and j , respectively. The larger value of (, ) UPF UPF two recipes are more similar from the users X  perceptual point of view. Recipe Content Relevance for Users. Suppose each user has a set of recipes in his/her favourite list, and analyzing the features of such recipes can help understand a user X  X  content relevance for a user by comparing a candidate recipe with the ones which are the user X  X  favours according to his/her past history. The overall content relevance is a weighted combination of two similarities:
RScore U R sim R R sim R R  X  X  compared, (, ) feature perspective. 4.2 Measuring User (Interests) Similarity decision making. This factor could also be significant for the recommender systems, recommendation) techniques. According to the characteristics of recipe domain, which are different from other domains, we consider the `friends X  (i.e., similar users) preferences on structurally similar recipes for a . 
In cooking recipe domain, it is important and indispensable to measure the structural similarity between two recipes to find recipes which are similar in terms of their cooking procedures to help a cook. Besides, the subjective features of recipes are derived from users X  tagging in our system, whose values are often user-dependent. users share the similar taste and common preference in cooking procedure. 
The interest similarity between two users is defined as a combination of average structurally similarity and personomy similarity of their favorite recipes, i.e.: sim U U avg sim R R correspondingly, (( , )) CG CG share similar tastes . 4.3 Folksonomy Boosted Recommendation For the reason that a user X  X  choice on items is usually influenced by multiple factors, recommendations/comments are more dominant, thus we incorporate both factors into our recommendation strategy. Our overall prediction of users X  preference on recipes is recommendations from the discovered 'friends '. Specifically, , the predicted rating of a user a on a recipe j can be calculated as follows: ranked by their ,  X  () aj pr values in descending order. As a part of our research, we have developed a prototype system implementing the proposed recommendation strategy, based on which some experimental studies are conducted. In this section, we introduce the experiment setup and methodologies to evaluate our proposed strategy and discuss the experiment results. 5.1 Experiment Setup experiment is based on a data set collected from 203 users with various backgrounds in our prototype system. Each of them was as ked to select at least 10 favorite recipes recipes and providing 39 tags. 
By analyzing on the user-generated tags, we found that 51% of these are about the aspects, and also 7% remaining tags talk about users X  impressions, emotional feelings, etc. on the recipes. An overall distribution of the annotated tags is shown in Figure 2. recommender systems [11] to measure how many items in the recommendation lists algorithm. The calculation of HR is defined as follows: where top-N returned recipes; the overall Hit Rate of the top-N results is computed as average personal Hit Rate for all users in the test data set. 
In addition, we also use Improvement ( imp ) [8] as the second metric in our experiment. Its purpose is to evaluate how the ranks of the hit recommendations have been improved by a recommendation algo rithm when compared with a baseline approach. The formal definition of imp metric is as follows. where () rR and number of users. Baseline Methods. In order to evaluate our proposed approach, we compare our method with two baseline methods implemented in [5]: We divide the whole data set randomly into 5 groups, and each time use 80% of them as the training data (e.g. for a user with 15 preferred recipes, 12 of them will be used validation to reduce random noises, and the final HR is calculated as an average of the five results. 5.2 Experiment Results The comparisons between our approach (denoted as FolkBo ) and the baseline approaches CN and CF are shown in Figures 3, where the horizontal coordinate @N means the top-N recipes to be recommended to users. We can observe from Figure 3 that the three methods have very tiny difference for and CN, reaching at around 10% (or 0.1). The improvement trend keeps increasing with the value of N, and at @50 it achieves a hit rate of 43.7%, outperforming the CF method by 11.7% and the CN method by 16.1%. We consider that the better performance comes from both our refined data model of recipe features, and the folksonomy-based approach to predict users X  interest relevance. Admittedly, the overall HR of our approach is still a bit low comparing to the recommendation accuracy in other applications, such as movie lens, due to that the preference data in our training set is a bit small (only 12 for each user on average) to make the algorithm converged. improves the rankings of the hit recipes in the recommendation list. The result of imp with the recommendation list length as 50 is presented in Figure 4. 
According to Figure 4, our method improves the overall rankings of the target recipes by around 5.8% comparing to CF, wh ich means the target recipes on average ascend 2.8 positions higher in the recommendation list. And comparing to the CN method, the improvement is more significant, reaching around 9.5%, indicating on important in the real-life applications, as we know that users would seldom go to the first page is more useful to achieve better recommendation quality. recipe recommendation. Firstly, we analyze the domain-specific characteristics of recipes from both objective and subjective feat ures, and present a recipe data model to represent these features. Based on the proposed recipe data model, we have presented a recipe recommendation framework. Experiments are conducted on a real data set to evaluate our method and the results show that our method outperforms baseline methods on recipe recommendation. 
Currently, we are working on further issues related recipe recommendation and management, including context-aware recipe recommendation based on user community information, and personalized recipe retrieval and adaptation based on (dynamic) user profiles. The research work presented in this paper has been supported, substantially, by a grant from the Research Grants Council, the Government of the Hong Kong SAR, China [Project No. CityU 117608]. 
