 University of Aberdeen dependent meaning of the adjectives in them. Second, we show how this type of analysis can inform algorithms for the generation of vague descriptions from numerical data. Third, we ask when such descriptions should be used. The article concludes with a discussion of salience and pointing , which are analyzed as if they were gradable adjectives. 1. Introduction: Vagueness of Gradable Adjectives 1.1 Vague Descriptions
Vague or gradable expressions pose problems to models of language, caused by their context dependence, and by the fact that they are applicable to different degrees. This article focuses on gradable adjectives , also called degree adjectives. we shall explore how referring expressions containing gradable adjectives can be pro-duced by a Natural Language Generation ( NLG ) program. Following Pinkal (1979), such expressions will be called vague descriptions even though, as we shall see, the vagueness of the adjective does not extend to the description as a whole. It will be useful to gen-eralize over different forms of the adjective, covering the superlative form (e.g., largest ) adjective. Vague descriptions are worth studying because they use vagueness in a comparatively transparent way, often combining clarity of reference with indeterminacy of meaning; as a result, they allow us to make inroads into the difficult area of research on vagueness. Generation offers an interesting perspective because it forces one to ask when it is a good idea to use these descriptions, in addition to asking what they mean.
Corpus (BNC), for example, shows at least seven of the ten most frequent adjectives vague adjectives among their first dozens of words (Peccei 1994) and understand some intricacies include what Ebeling and Gelman call perceptual context dependence, as when a set of objects is perceptually available and the adjective is applied to an element visible). 1.2 Vagueness in NLG
Some NLG systems produce gradable adjectives. The FOG weather-forecast system, for example, uses numerical input ( Rain[Tuesday] = 45 mm ) to generate vague output ( Heavy rain fell on Tuesday, Goldberg, Driedger, and Kitteridge 1994). F appear to have generic rules governing the use of gradable notions: it does not compute the meaning of a vague term based on the context, but uses fixed boundary values instead. A more flexible approach is used by Reiter and Sripada (2002), where users can specify boundary values for attributes like rainfall, specifying, for example, rain counts as moderate above 7 mm/h, as heavy above 20 mm/h, and so on. A third approach was implemented in Dial Your Disc ( DYD ), where the extension of a gradable adjective like famous was computed rather than specified by hand (van Deemter and Odijk 1997). To determine, for example, whether one of Mozart X  X  piano sonatas could be called a famous sonata , the system looked up the number x of compact disc recordings of this sonata (as listed in an encyclopedia) and compared it to the average number y of CD recordings of each of Mozart X  X  sonatas. The sonata was called a famous sonata if x &gt;&gt; y .Like work reported in this article will abandon the use of fixed boundary values for gradable adjectives, letting these values depend on the context in which the adjective is used. perception or verbal reports) is itself inexact. Such cases can be modeled by letting systems take vague information (e.g., Rain[Wednesday] = heavy ) as their input. We shall focus on the more challenging case where the output of the generator is less precise than the input, as is the case in FOG and DYD . This can be a hazardous affair, since vague expressions tend to be interpreted in different ways by different people (Toogood 1980), sometimes in stark contrast with the intention of the speaker/writer (Berry, Knapp, and Raynor 2002). We shall therefore focus X  X nlike earlier computational accounts X  X n vague descriptions , that is, vague expressions in definite descriptions. Here, the context vet X  X  surgery in the company of two dogs: a big one on a leash, and a tiny one in your arms. The vet asks  X  X ho X  X  the patient? X , and you answer  X  X he big dog. X  This answer will allow the vet to pick out the patient just as reliably as if you had said  X  X he one on the leash X ; the fact that big is a vague term is irrelevant. You omit the exact size of the dog, just like some of its other properties (e.g., the leash), because they do not improve the description. This shows how vague properties can contribute to the precise task of identifying a referent. 1.3 Plan of This Article
We will show how existing algorithms for the generation of referring expressions (GRE) can do justice to gradable properties, whether they originate from the gradable adjec-tives in a vague description, or from some entirely different source (such as the degree of salience of the referent). Considerable attention will be paid to the many open questions in this area, which will have to be resolved before NLG can be said to contain a proper treatment of vague expressions. We start with two preliminary sections, containing a 196
Algorithm that generates references to sets (Section 3). Section 4 describes the core of one particular algorithm for generating vague descriptions. Section 5 discusses prag-correct but clumsy. Section 6 discusses linguistic realization. Section 7 summarizes some empirical results. Section 8 explores non-incremental versions of our algorithm.
Section 9 shows how our approach can be extended to include nouns, salience, and pointing. Section 10 sums up our main findings. 2. The Meaning of Vague Descriptions 2.1 Linguistic Motivation
We shall be studying vague descriptions of various forms: They may or may not contain a numeral n (positioned before or after the adjective); and the gradable adjective (Adj) may at least be in base ( large ) or superlative form ( largest ): (1) The (n) Adj(est) N (singular/plural) (2) The Adj(est) (n) N (singular/plural)
If Adj is in the base form, we focus on the word order (1); if Adj is superlative, we focus on (2). (Little will hinge on this decision.) We are limiting ourselves to referential uses of these expressions, excluding cases like This must be the largest tree in the world , in which the expression ascribes a property to an already-identified object. Likewise, we exclude intensional ones (e.g., Consider the smallest element of this set , in a mathematical proof, when the identity of the element may not be known).
 average, larger than most, larger than some given baseline, and so on. It is doubtful that any one of these analyses makes sense for all definite descriptions. To see this, consider a domain of three mice, sized 5, 8, and 10 cm. 2 Here one can speak of (3) The large mouse (= the one whose size is 10 cm) (4) The two large mice (= the two whose sizes are 8 and 10 cm) but is open to fiat : the speaker may decide that 8 cm is enough, or the speaker may the standards employed (Kyburg and Morreau 2000; DeVault and Stone 2004): (3), for how noun phrases like the ones in (3) and (4) can be generated, without asking how they constrain, and are constrained by, other uses of large and related words. This will allow us to make the following simplification: In a definite description that expresses only properties that are needed for singling out a referent, we take the base form of the adjective to be semantically equivalent to the superlative form (and, analogously, the comparative):
Viewed in this way, gradable adjectives are an extreme example of the  X  X fficiency of language X  (Barwise and Perry 1983): Far from meaning something concrete like  X  X arger than 8 cm X  X  X  concept that would have very limited applicability X  X r even something more general like  X  X arger than the average N, X  a word like large is applicable across a wide range of different situations. 2.2 Caveat: Full NP Anaphora
Having said this, there are pragmatic differences between the base form and the superla-tive (Section 5). For example, the equivalence does not take anaphoric uses into account, such as when the large mouse is legitimized by the fact that the mouse has been called large before, as in (5) I was transfixed by a large mouse on the chimney; then suddenly, dozens where the mouse on the chimney may be smaller than those on the ground. We focus on
Ebeling and Gelman X  X  (1994) perceptual context dependence (Section 1), pretending that the only contextually relevant factor is the  X  X omparison set X : those elements of the noun denotation that are perceptually available. We disregard functional context dependence, as when the small hat is the one too small to fit on your head. 2.3 Caveat: Evaluative Adjectives
What we said above has also disregarded elements of the  X  X lobal X  (i.e., not immediately available) context. For some adjectives, including the ones that Bierwisch (1989) called evaluative (as opposed to dimensional ), this is clearly inadequate. He argued that evalu-ative adjectives (such as beautiful and its antonym ugly ; smart and its antonym stupid , etc.) can be recognized by the way in which they compare with antonyms. For example (after Bierwisch 1989), (6a) Hans is taller than Fritz  X  Fritz is shorter than Hans. (6b) Hans is smarter than Fritz  X  Fritz is more stupid than Hans.
 for him to be the least intelligent male in the local context; he also has to be a fairly 198 205 cm, respectively, then it seems questionable to describe Fritz as the short man ,evenif Hans is the only other man in the local context (but see Sedivy et al. 1999, discussed in
Section 7.2). Be this as it may, we shall henceforth focus on local context, assuming that additional requirements on the global context can be made if necessary.
 the different types of expressions to mean. For ease of reading, concrete examples (e.g., large ) will replace abstract labels (e.g.,  X  X dj X ), but the analysis is meant to be general.
Pragmatic refinements are discussed in Section 5. Our analysis is limited to NPs that contain only one vague adjective. Doubly-graded descriptions tend to cause ambiguity, since they involve a trade-off between several dimensions. An NP like the tall fat giraffe, for example, might describe a referent that is neither the tallest nor the fattest giraffe, as long as a combination of height and fatness singles it out. Some of the problems that come up in such cases will be discussed in Section 9.1. 3. Generation of Crisp Descriptions Arguably the most fundamental task in the generation of referring expressions ( tended referent. Various CD algorithms have been proposed, most of which approximate the minimal number of properties that are needed to identify the target. Approxima-tions differ in terms of their computational complexity and the degree to which they match the way in which people use referring expressions (see Dale and Reiter [1995] for a survey). As we shall see in Section 8, any one of these algorithms could be used as a basis for our task. For concreteness, we focus here on Dale and Reiter X  X  Incremental
Algorithm ( IA ). We shall use a form of the IA that can refer to sets as well as individuals, as long as the sets are individuated via their elements (i.e., distributively, as opposed to collectively, cf., Stone [2000]). This version of the IA will be called and extensions, see van Deemter 2000, 2002.) 3.1 The Incremental Algorithm
Put simply, IA accumulates semantic properties until the target objects are the only ones in the domain of which all the accumulated properties are true. This can be done by arranging the properties in a list and by checking, for each property in the list, whether is included in the description, after which the next property is given the same treatment.
This process of checking and including goes on until the target objects are the only ones of which all the properties in the list are true (i.e., until there are no distractors left). color ) and a Value (e.g., white), written Attribute,Value . (Attributes can be viewed as grouping together a number of related properties.) Attributes are ordered in a list A ,andthis preference order determines the order in which properties are examined (and possibly added to the description) by the algorithm. Suppose S is the target set, and C the set of all objects that play a role at a given stage of the algorithm (we call these the confusables). The algorithm iterates through A ; for each Attribute, it checks whether, by specifying a Value for it, one can rule out at least one member of C that has not yet been ruled out; if so then the Attribute is added to a set L , with the best possible
Value (as determined by FindBestValue ). Confusables that are ruled out are removed from C . The expansion of L and the contraction of C continue until C = S :
FindBestValue selects the  X  X est value X  from among the Values of a given Attribute, assuming that these are linearly ordered in terms of specificity. The function selects the
Value that removes most distractors, but in case of a tie, the least specific contestant commonly occurring and psychologically most fundamental level, Rosch 1978). can refer to individuals as well as sets, since reference to a target individual r can be modeled as reference to the singleton set { r } . 3.2 The Existing Treatment of Gradables Plur deals with vague properties in essentially the same way as size are treated as if they were not context dependent: Their Values always apply to the same objects, regardless of what other properties occur in the description. In this way, could never describe the same animal as the large chihuahua and the small brown dog, for example. This approach does not do justice to gradable adjectives, whether they are used in the base form, the superlative, or the comparative. Suppose, for example, one set a fixed quantitative boundary, making the word large true of everything above it, and at all since, presumably, every chihuahua would be small and every alsatian large, making each of the combinations { large , chihuahua } (which denotes the empty set) and { large , alsatian } (the set of all alsatians) useless. In other words, existing treatments of
Perry 1983; see our Section 2). 200 4. The Generation of Vague Descriptions
We now turn to the question of how vague descriptions may be generated from nu-merical data. We focus on semantic issues, postponing discussion of pragmatics until
Section 5, and linguistic realization until Section 6. We shall make occasional reference to a PROLOG program called V AGUE , designed by Richard Power, which implements a version of the algorithm described in this section. Code and documentation for V can be found at http://www.csd.abdn.ac.uk/  X  kvdeemte/vague.html. 4.1 Expressing One Vague Property 4.1.1 Numerical Properties. We shall assume that gradable properties are stored in the Knowledge Base ( KB ) as Attributes with (decimal) numerical Values, where the numbers can be the result of physical measurements. We will sometimes speak of these numerical Values as if they represented exact Values even though they typically represent approximations. 3 For concreteness, we shall take them to be of the form n cm, where n is a positive real number. For example, properties like L = { yellow, mouse, 9 cm } , for example, exploiting the Attribute size .
The result could be the NP The9-cmyellowmouse, for example. The challenge formulated in Section 1, however, is to avoid unnecessary precision by avoiding numerical values replaced by a superlative Value ( X  X eing the unique largest element of C  X ) whenever all distractors happen to have a smaller size. This list can then be realized in several ways, using either the superlative, the comparative, or the base form (e.g., the largest yellow mouse , the larger yellow mouse, or the large yellow mouse ). 4.1.2 Exploiting Numerical Properties, Singular. To (almost tion contains a property expressible as a noun, we shall assume that the type Attribute is more highly preferred than all others. Suppose also, for now, that properties related to size are less preferred than others. As a result, all other properties that turn up in the
NP are already in the list L when size is added. Suppose the target is c property that makes it into L is  X  X ouse, X  which removes p The resulting list is
This might be considered the end of the matter, since the target has been singled out. But we are interested in alternative lists, to enable later modules to use gradable adjectives.
One way in which such a list can be computed is as follows. Given that 14 cm happens to be the greatest size of any mouse, size ( x ) = 14 cm can be replaced, in L , by the property of  X  X eing the sole object larger than all other elements of C  X  (notation: size ( x ) = max properties earlier-introduced into L , it becomes essential that L is an ordered list: 4.1.3 Exploiting Numerical Properties, Plural. If plural descriptions were generated us-ing the replacement strategy sketched above, it would be impossible to characterize sets whose elements have different sizes. To make this possible, we have to use inequalities, we compile the KB into a more elaborate form by replacing equalities by in equalities of the form size ( x ) &gt; X  or size ( x ) &lt; X  . The new KB only: for every n such that the old KB contains an equality of the form size ( x ) = n cm, the new KB contains all those inequalities whose truth follows from the equalities in the old KB . For example, c , c 5 , p 5 are domain objects of which a given Attribute , Value combination is true. The procedure is analogous to the treatment of negations and disjunctions in van Deemter (2002): Properties that are implicit in the KB are made available for nient to view properties of the form size ( x ) &lt; X  as belonging to a different Attribute than those of the form size ( x ) &gt; X  , because this causes the Values of an Attribute to be linearly ordered: Being larger than 12 cm implies being larger than 10 cm, and so on.
More importantly, it will now become normal for an object to have many Values for the these Values has equal status, so the notion of a basic-level Value cannot play a role (cf.,
Dale and Reiter 1995). If we abstract away from the role of basic-level Values, then Dale and Reiter X  X  FindBestValue chooses the most general Value that removes the maximal 202 number of distractors, as we have seen. The problem at hand suggests a simpler ap-proach that will always prefer logically stronger inequalities over logically weaker ones, even when they do not remove more distractors. 5 (Thus, size ( x ) &gt; m is preferred over size ( x ) &gt; n iff m &gt; n ; conversely, size ( x ) &lt; m is preferred over related property is selected, later size -related properties do not remove any distractors and will therefore not be included in the description.
 its two elements as having different sizes (12 cm and 14 cm, respectively), hence they do not share a property of the form size ( x ) =  X  . They do, however, share the property size ( x ) &gt; 10 cm. This property is exploited by IA Plur first selecting the property  X  X ouse, X  then the property size ( x ) &gt; 10 cm. (The property
Consequently, this inequality can be replaced by the property  X  X eing a set of cardinality 2, whose elements are larger than all others X  (notation: size ( x ) = max such as the largest (two) mice :
Note that size ( x ) = max 2 is true of a pair of mice: Strictly speaking, the step from L translates a distributive property ( X  X eing larger than 10 cm X ) into a collective one. The case in which the numeral is 1 corresponds with the singular (e.g., the largest mouse ).
Optionally, we can go a step further and replace size ( x ) = max property size ( x ) = max , which abbreviates  X  X eing a set of cardinality greater than 1, all of whose elements are larger than all other elements in C . X  The result may be realized as the largest mice.
 4.1.4 Ordering of Properties. Even if comparative properties are at the bottom of the preference order, while stronger inequalities precede weaker ones, the order is not fixed completely. Suppose, for example, that the KB contains information about height as width &gt; x ,and(d) width &lt; x . Which of these should come first? Hermann and Deutsch (1976; also reported in Levelt 1989) show that greater differences are most likely to be chosen, presumably because they are more striking. In experiments involving candles of different heights and widths, if the referent is both the tallest and the fattest candle, subjects tended to say  X  X he tall candle X  when the tallest candle is much taller than all others whereas the same candle is only slightly wider than the others; if the reverse is the case, the preference switches to  X  X he fat candle. X  Hermann and Deutsch X  X  findings may be implemented as follows. First, the Values of the different Attributes should be normalized to make them comparable. Second, preference order should be calculated dynamically (i.e., based on the current value of C , and taking the target into account), preferring larger gaps over smaller ones. (It is possible, e.g., that width is most suitable algorithm remains unchanged. 4.1.5 Beyond Content Determination (CD). Assuming the analysis of Section 2.1, the n large mouse/mice is semantically equivalent to the n largest mouse/mice. Consequently, there is no need to distinguish between the two at the level of the ones in L 2 and L 3 are neutral between the superlative and the base form. Pragmatic constraints determine which of these expressions [ the (n) largest, the (n) larger, the (n) large ] is most appropriate in a given situation (Section 5). 4.1.6 Inference. The replacement strategy, whereby one list of properties is transformed into another, is essentially a simple kind of logical inference. L guaranteed to single out the same set, given that exactly two mice are larger than 10 cm; given the content of the KB , the two lists are co-extensive. Once the numeral is dropped, however, as in L 3 , there is real loss of information: L a number of sets, including the one characterized by L 2 . In any case, the properties in these lists are logically distinct, so the choice between them belongs to 4.2 Expressing Several Vague Properties
If the KB contains several gradable Attributes, a description can make use of several of them, as in example (7). Even if only one gradable Attribute is represented, descriptions may contain different adjectives, expressing opposites, as in example (8). (7) The tallest two of the smallest three mice. (8) The mice that are taller than 2 cm but shorter than 4 cm. (The latter may be better expressed as the mice that are between 2 and 4 cm tall .) Let us see how the algorithm of the previous sections can be extended to these cases. 4.2.1 Descriptions Using (In)equalities. When opposites are part of the need for representing equalities separately, since they arise automatically, as combina-tions of opposites. Every equality of the form  X  size ( x ) = m cm X  is equivalent to the com-
Given the content of the following KB , for example, saying that the size of an object is between 6 and 12 cm amounts to saying that its size is 10 cm, and this is implemented by adding appropriate transformations to the generator. 204
Different measures have to be taken when several vague Attributes are involved. Sup-pose height has these Values:
After recompiling these into the form of inequalities (reiterating type s): since crisp properties are more preferred than vague ones (Result: C =
The sequel depends on preference order. Omitting the property of being a mouse for brevity, possible results include the following: inference, even more so than before; likewise, there are pitfalls, more than before. 4.2.2 Adjectives in Superlative and Base Form. To generate descriptions like the ones in examples (7) and (8), we need to transform a comparative property into a superlative property, moving from properties of the form  X  height &gt; x  X  to properties of the form  X  X he tallest n . X  This can be done in different ways. For example, L
Once we know which of these outcomes is preferable, the algorithm may be fine-tuned. (If brevity is an issue, e.g., then one might let a generation program vary the preference order used by the IA , then choose the outcome that is shortest.) The transformations described so far rest on logical equivalence (modulo the KB well, the result is usually no longer equivalent of course, and the description is at risk of becoming almost entirely uninformative (e.g., L 2 ): The algorithm outlined in this and the previous section can be summarized as follows:
GRE for Vague Descriptions (using IA ) : 1. Construct KB using Attributes and Values, assigning numerical Values to 2. Recompile the KB , replacing equalities by inequalities, for all gradable 3. Determine the preference order between the different groups of Attributes. 4. Run IA Plur (Section 3.2), resulting in a list of properties that jointly identify 5. Apply inferences to the list of properties. For example, replace 6. Perform linguistic realization (Section 6).

If gradable properties are less preferred than crisp ones (point 3) then this algorithm will only use gradable properties if an entirely crisp distinguishing description is impossible.
This may well cause gradable properties to be underused. For this and other reasons, we shall consider non -incremental versions of these ideas in Section 8. 4.3 Computational Complexity
We will examine the worst-case complexity of interpretation as well as generation to shed some light on the hypothesis that vague descriptions are more difficult to process than others because they involve a comparison between objects (Beun and Cremers original IA . If the running time of FindBestValue ( r , A Values of the Attribute A i , then the worst-case running time of where n a equals the number of Attributes in the language and n of Values of all Attributes. This is because, in the worst case, all Values of all Attributes need to be attempted (van Deemter 2002). As for the new algorithm, we focus on the crucial phases 2, 4, and 5. 206
Phase 2 : Recompilation of the KB forces one to compare all domain elements with each other. This takes at most quadratic time (i.e., O ( n 2 ), where n is the number of elements in the domain). This can be done off-line, once and for all.

Phase 4 : Content Determination. The initial list of properties, which contains inequal-ities (e.g., L = mouse &gt; 5cm ), is calculated by IA Plur Attribute/Value pairs into account as a result of the recompilation of the does not change its theoretical complexity (using n v and n
Phase 5 : Inference. The only inference step described so far replaces an inequality (e.g., height &gt; n cm) by a  X  X uperlative X  property (e.g., height = no computation to speak of: For any given inequality that appears in the description, the value of m can be read off the input to the generator in O ( n number of distractors. (This comes down to counting the number of elements in the extension of the inequality.) Therefore, if the number of inequalities in the description is n then the complexity is O ( n d n i ).
 first is quadratic and can be performed off-line, the second has a worst-case running time of O ( n v n a ), and the third one has a worst-case running time of O ( n gradable GRE takes only polynomial time, and if we focus on the part that cannot be done off-line, it takes only linear time. In other words, gradable time than nongradable GRE , but the difference seems modest.
 (though again only to a modest extent) when we focus on the hearer. First, consider a non-vague description consisting of a combination of n properties, P its referent, the denotation of the Boolean expression P 1 which takes just n  X  1 calculations of the form
If computing the intersection of two sets takes constant time then this makes the com-plexity of interpreting non-vague descriptions linear: O ( n context dependent. Worst case, calculating the set corresponding with such a property, algorithm: cf. [Aho et al. 1983] Chapter 8). Once again, the most time-consuming part of the calculation can be performed off-line, since it is the same for all referring expressions.
 be computed off-line takes O ( n d log n d ) calculations. The part that has to be computed for each referring expression separately takes O ( n d ) calculations. Once again, there is a difference with the nongradable case, but the difference is modest, especially regarding the part that cannot be done off-line. One should bear in mind that worst-case theo-retical complexity is not always a good measure of the time that a program takes in the kinds of cases that occur most commonly, let alone the difficulty for a person. For example, it seems likely that hearers and speakers will have most difficulty dealing with differences that are too small to be obvious (e.g., two mice that are very similar in size). 5. Pragmatic Constraints
NLG has to do more than select a distinguishing description (i.e., one that unambigu-ously denotes its referent; Dale 1989): The selected expression should also be felicitous.
Consider the question, discussed in the philosophical logic literature, of whether it is legitimate, for a gradable adjective, to distinguish between  X  X bservationally indifferent X  entities: Suppose two objects x and y , are so similar that it is impossible to distinguish answer would not be psychologically plausible, since x and y are indistinguishable; but a negative answer would prohibit any binary distinction between objects that are large and objects that are not, given that one can always construct objects x and y ,oneof which falls just below the divide while the other falls just above it. This is the strongest version of the sorites paradox (e.g., Hyde 2002).

Felicity is naturally thought of as a gradable concept. There is therefore no need for a generator to demarcate precisely between felicitous and infelicitous expressions, as long as all the utterances generated are felicitous enough. When in doubt, a generator should avoid the expression in question. If x and y are mice of sizes 10 and 9 . 9 cm, for example, then it is probably better to describe x as the largest mouse than as the large mouse . the following constraints should be taken into account:
To keep matters simple, linguistic realization could choose the base form if and only if the gap between s  X  and s + surpasses a certain value, which is specified interactively by the user. (This approach was chosen for the VA G U E program.) different  X  X elievable X  patterns of linguistic behavior. A cautious generator might only omit the numeral when the pragmatic principles happen to enforce a specific extension the generator to use vague expressions, but only where they result in a description that is itself unambiguous.
 straints of the present section experimentally. 208 6. Linguistic Realization
Some recent GRE algorithms have done away with the separation between content de-termination and linguistic realization, interleaving the two processes instead (Stone and
Webber 1998; Krahmer and Theune 2002). We have separated the two phases because, in the case of vague descriptions, interleaving would tend to be difficult. Consider, for instance, the list of properties L = size &gt; 3 cm, size &lt; 9cm . If interleaving forced us to realize the two properties in L one by one, then it would no longer be possible to combine them into, for example, the largest mouse but one (if the facts in the it), or even into the mice between 3 and 9 cm (since size &gt; 3 cm is realized before size &lt; 9 cm). Clearly, sophisticated use of gradable adjectives requires a separation between
CD and linguistic realization, unless one is willing to complicate linguistic realization considerably.
 easy to draw. We propose to think of it as separating the language-independent, logical aspect of referring expressions generation from its language-dependent, linguistic as-pect. Our algorithm suggests a distinction into three phases, the first two of which can be thought of as part of CD : 1. CD proper , that is, the production of a distinguishing list of properties L ; 2. An inference phase, during which the list L is transformed; 3. A realization phase, during which the choice between base, superlative,
One area of current interest concerns the left-to-right arrangement of premodifying adjectives within an NP (e.g., Shaw and Hatzivassiloglou 1999; Malouf 2000). Work (e.g., Precentral, Central, Postcentral, and Prehead), which predict adjectives X  relative position. Interestingly, vague properties tend to be realized before others. Quirk et al. (1985), for example, report that  X  X djectives denoting size, length, and height normally precede other nonderived adjectives X  (e.g., the small round table is usually preferred to the round small table ).
 small(-est) [N] , for example, the words preceding N select the three smallest elements of [N]. It follows that, to denote the three smallest elements of the set of round tables, the only option is to say the three small round tables, rather than the three round small tables.
The latter would mean something else, namely, the three round ones among the n small(est) tables (where n is not specified). It actually seems quite possible to say this, but only when some set of small tables is contextually salient (e.g., I don X  X  mean those small tables,
I mean the three round ones ). Given that n is unspecified, the noun phrase would tend to be very unclear in any other context.
 nongradable ones, choosing some simple (and sometimes stilted) syntactic patterns. 7. Empirical Grounding
A full validation of a GRE program that generates vague descriptions would address the following questions: (1) When is it natural to generate a vague description (i.e., a qualitative description as opposed to a purely quantitative one)? (2) Given that a vague generated descriptions properly understood by hearers and readers? Much is unknown, but we shall summarize the available results in these three areas very briefly, referring readers to the literature for details. 7.1 Human Speakers X  Use of Vague Descriptions
Common sense (as well as the Gricean maxims; Grice 1975) suggests that vague de-scriptions are preferred by speakers over quantitative ones whenever the additional information provided by a quantitative description is irrelevant to the purpose of the communication. We are not aware of any empirical validation of this idea, but the fact that vague descriptions are frequent is fairly well documented. Dale and Reiter (1995), for example, discussed the transcripts of a dialogue between people who assemble relative modifiers, such as the long bolt  X  (Dale and Reiter 1995). periment, for example, 34 students at the University of Brighton were shown six pieces of paper, each of which showed two isosceles and approximately equilateral triangles. each sheet, one of the two triangles had been circled with a pencil. We asked subjects to imagine themselves on the phone to someone who held a copy of the same sheet, but not necessarily with the same orientation (e.g., possibly upside down), and to complete the answers in the following:
This setup was used for testing a number of hypotheses. What is relevant for current purposes is that all except one subject used qualitative size-related descriptions ( the big used such descriptions in all cases.
 were offered an easy way to determine the relevant measurements (e.g., if a ruler was provided). As it was, subjects went for the easy option, relying on a comparison of sizes rather than on an estimation of their absolute values. Further experiments are needed before we can say with more confidence under what circumstances vague descriptions are favored over absolute ones.
 kind of numerical representations that our algorithm has used as input. Although psy-chological plausibility is not our aim, it is worth noting that the in equalities computed as step 2 of the algorithm of Section 4 might be psychologically more plausible, since they are essentially no more than comparisons between objects. 210 7.2 Testing the Correctness of the Generated Expressions
Sedivy et al. (1999) asked subjects to identify the target of a vague description in a visual scene. Consider the tall cup. The relevant scene would contain three distractors: (1) a less of object that previous studies had shown to be intermediate in height (e.g., a pitcher that, while being taller than both cups, was neither short nor tall for a pitcher), and (3) a different type of object to which the adjective is inapplicable (e.g., a door key). Across the different conditions under which the experiment was done (e.g., allowing subjects to study the domain before or after the onset of speech), it was found not to matter much whether the adjective applied  X  X ntrinsically X  to the target object (i.e., whether the target was tall for a cup): Hearers identifed the target without problems in both types of situations. The time subjects took before looking at the target for the first time was measured, and although these latency times were somewhat greater when the referent were not intrinsically tall than when they were, the average difference was tiny at 554 versus 538 miliseconds. Since latency times are thought to be sensitive to most of the dimensional adjectives, it is forgivable to disregard global context.
 readers, we showed subjects sequences of numbers, exactly two of which appeared in brackets, along with the following instructions:
The outcomes of the experiment suggested that readers understand plural vague de-scriptions in accordance with the semantics of Section 2 (van Deemter 2000). In other words, they judged the description to be correct if and only if the two highest numbers in the sequence appeared in brackets.
 from the point of view of interpretation. 7.3 Testing the Felicity of the Generated Expressions How can we choose between the different forms that a vague description can take?
Reiter and Sripada (2002) showed that the variation in corpora based on expert authors can be considerable, especially in their use of vague expressions (e.g., by evening, by late evening, around midnight ). We confirmed these findings using experiments with human subjects (van Deemter 2004), focusing on the choice between the different forms of the adjective. Informally: 1. The dichotomy constraint of Section 5 did not hold up well: Even when 2. When base forms were used, the gap was almost invariably large. 3. Yet, the Minimality constraint of Section 5 turned out to be difficult to
The validity of these results can be debated (van Deemter 2004) but, taking them at face value, one could base different generation strategies on them. For example, one might use the superlative all the time, since this was X  X urprisingly X  X he most frequent form overall. Based on point (2), however, one might also defend using the base form when-ever the gap is large enough (as was done in the V AGUE program). Future experiments should allow us to refine this position, perhaps depending on factors such as genre, communicative goal, and type of audience. 8. Incrementality: Help or Hindrance? The account sketched in Section 4 was superimposed on an incremental
Reiter 1995). But IA may be replaced by any other reasonable example, one that always exactly minimizes the number of properties expressed, or one that always  X  X reedily X  selects the property that removes the maximum number of distractors. Let G be any such GRE algorithm, then we can proceed as follows:
GRE for Vague Descriptions (version not relying on IA ) : 1. Construct KB using Attributes and Values, assigning numerical Values to 2. Recompile the KB , replacing equalities by inequalities. 3. Let G deliver an unordered set of properties which jointly distinguish the 4. Impose a linear ordering on the properties produced by (3). (If one wishes 212 5. Apply inferences (in the style of Section 4.1) to the list of properties. 6. Perform linguistic realization.

Imposing a linear order (4) is a necessary preparation for (5) because the super-context dependent. For example, mouse, size ( x ) = max { c short(est) black mouse if there is only one black mouse, because this might invite false implicatures. 8.1 Problems with Incrementality
While IA is generally thought to be consistent with findings on human language pro-duction (Hermann and Deutsch 1976; Levelt 1989; Pechmann 1989; Sonnenschein 1982), the hypothesis that incrementality is a good model of human redundant descriptions can result if the  X  X rong X  preference order are chosen.) We shall see that vague descriptions pose particular challenges to incrementality.
 incremental interpretation . If human speakers and/or writers perform then why are properties not expressed in the same order in which they were selected?
This question is especially pertinent in the case of vague expressions, since gradable properties are selected last, but realized first (Section 6). This means that the linguistic realization cannot start until CD is concluded, contradicting eye-tracking experiments suggesting that speakers start speaking while still scanning distractors (Pechmann 1989). A similar problem is discussed in the psycholinguistics of interpretation (Sedivy et al. 1999): Interpretation is widely assumed to proceed incrementally, but vague de-scriptions resist strict incrementality, since an adjective in a vague description can only be fully interpreted when its comparison set is known. Sedivy and colleagues resolve refine their interpretation of gradable adjectives. Summarizing the situation in gener-ation and interpretation, it is clear that the last word on incrementality has not been said. 8.2 Low Preference for Gradable Properties?
It has been argued that, in an incremental approach, gradable properties should be given a low preference ranking because they are difficult to process (Krahmer and
Theune 2002). We have seen in Section 4.3 that generation and interpretation of vague descriptions does have a slightly higher computational complexity than that of non-vague descriptions. Yet, by giving gradable properties a low ranking, we might cause the algorithm to underuse them, for example, in situations where gradable properties are highly relevant to the purpose of the discourse (e.g., a fist fight between people of very different sizes). Luckily, there are no semantic or algorithmic reasons for giving gradables a low ranking. Let us see how things would work if they were ranked more highly.
 transformation into superlative properties, this alternative preference ranking could lead to a list like mouse, size ( x ) = min 4 , brown, weight ( x ) = max dinary properties are separated by a superlative one. A direct approach to realization might word this as the two heaviest brown ones among the smallest four mice. To avoid such awkward expressions, one can change the order of properties after 4 above), moving the inequalities to the end of the list before they are transformed into the appropriate superlatives. The effect would be to boost the number of occurrences of gradable properties in generated descriptions while keeping 9. Extensions of the Approach 9.1 Relational Descriptions
Some generalizations of our method are fairly straightforward. For example, consider a relational description (cf., Dale and Haddock 1991) involving a gradable adjective, as in the dog in the large shed. CD for this type of descriptions along the lines of Section 4 is not difficult once relational descriptions are integrated with a standard (Krahmer and Theune 2002, Section 8.6.2): Suppose an initial description is generated description happens to distinguish an individual dog then this legitimizes the use of the noun phrase the dog in the large shed. Note that this is felicitous even if the shed is not means that a is contained by b ):
In other words, the dog in the large shed denotes  X  X he dog such that there is no other shed that is equally large or larger and that contains a dog  X . Note that it would be odd, in the above-sketched situation, to say the dog in the larg est shed. 9.2 Boolean Combinations
Generalizations to complex Boolean descriptions involving negation and disjunction (van Deemter 2004) appear to be largely straightforward, except for issues to do with 214 opposites and markedness. For example, the generator will have to decide whether to say the patients that are old or the patients that are not young. 9.3 Multidimensionality 9.3.1 Combinations of Adjectives. When objects are compared in terms of several dimensions, these dimensions can be weighed in different ways (e.g., Rasmusen 1989).
Let us focus on references to an individual referent r , starting with a description that can safely refer to an element b in a situation like the one below, where b is the only dimension:
Cases like this would be covered if the decision-theoretic property of Pareto optimality (e.g., Feldman 1980) was used as the sole criterion: Formally, an object r
Pareto-optimal combination of Values V iff there is no other x
In our example, b is the only object that has a Pareto-optimal combination of Values, predicting correctly that b can be called the tall fat giraffe. It seems likely, however, that people use doubly graded descriptions more liberally. For example, if the example is be the only reasonable referent of the tall fat giraffe. Many alternative strategies are pos-sible. The Nash arbitration plan , for example, would allow a doubly graded description whenever the product of the Values for the referent r exceeds that of all distractors (Nash 1950; cf. Gorniak and Roy 2003; Thorisson 1994, for other plans). 9.3.2 Multidimensional Adjectives (and Color). Multidimensionality can also slip in through the backdoor. Consider big , for example, when applied to 3D shapes. If there exists a formula for mapping three dimensions into one (e.g., length then the result is one dimension ( overall-size ), and the algorithm of Section 4 can be applied verbatim .Butif big is applied to a person then it is far from clear that there is one canonical formula for mapping the different dimensions of your body into one overall dimension, and this complicates the situation. Similar things hold for multifaceted properties like intelligence (Kamp 1975).
 nosity, for instance, then an object a may be classified as greener than b on one dimension (e.g., saturation), but less green than b on another (e.g., hue). This would considerably complicate the application of our algorithm to color terms, which is otherwise mostly straighforward (Section 9.3). ( The green chair, said in the presence of two greenish chairs, difficult to assess which of two objects is greener even on one dimension (Berlin and Kay 1969, pages 10 X 12). (Ideally, GRE should also take into account that the meaning of color words can differ across different types of referent. Red as in red hair , e.g., differs from red as in red chair. ) be cautious and to keep aiming for distinguishing descriptions in the strict sense. In this case, the program should limit the use of vague descriptions to situations where there exists a referent that has a Pareto-optimal combination of Values. Alternatively, one could allow referring expressions to be ambiguous. It would be consistent with this attitude, for example, to map multiple dimensions into one overall dimension, perhaps by borrowing from principles applied in perceptual grouping , where different perceptual dimensions are mapped into one (e.g., Thorisson 1994). The empirical basis of this line of work, however, is still somewhat weak, so the risk of referential unclarity looms large.
Also, this attitude would go against the spirit of GRE , where referring expressions have always been assumed to be distinguishing . 9.4 Salience as a Gradable Property
We shall see that a natural treatment of salience falls automatically out of our treatment of vague descriptions. As we shall see, this will allow us to simplify the structure of algorithms, and it will explain why many definite descriptions that look as if they were distinguishing descriptions are actually ambiguous. 9.4.1 A New Perspective on Salience. Krahmer and Theune (2002) have argued that
Dale and Reiter X  X  (1995) dichotomy between salient and nonsalient objects (where the objects in the domain are the salient ones) should be replaced by an account that takes degrees of salience into account: No object can be too unsalient to be referred to, as long as the right properties are available. In effect, this proposal (which measured salience numerically) analyzes the black mouse as denoting the unique most salient object in the domain that is both black and a mouse. Now suppose we let other gradable Attributes. Suppose there are ten mice, five of which are black, whose degrees of salience are 1, 1, 3, 4, and 5 (the last one being most salient), while the other objects in the domain (cats, white mice) all have a higher salience. Then our algorithm might generate this list of properties:
This is a distinguishing description for the black mouse whose salience is 5: the most salient black mouse. The simpler description the black mouse can be derived by stipulating
Attribute has to be taken into account by CD , however, and this can be ensured in various ways. For example, instead of testing whether C  X  [[ A i , V is the most salient element of C  X  [[ A i , V i ]]. Alternatively, the algorithm might proceed as usual, performing the usual test (involving C  X  [[ A i a reduced domain, consisting of the things that are at least as salient as the target r : 216
Domain : = { x  X  Domain: salience ( x )  X  r } . The two approaches are equivalent in many situations. 9.4.2 Salience + + + Plurality = = = Ambiguity. It is now easy to see why plural descriptions are often ambiguous. Taking salience into account as suggested above, the singular the black mouse can only refer to the most salient mouse. But the mice can refer to the most salient two (sized 5 and 4), the most salient three (sized 5, 4, and 3), or to all of them. To disambiguate the description, something like a number can be used (e.g., the two mice ), just as in the case of vague descriptions.
 is even greater. Consider the large(st) dog. Our analysis predicts ambiguity when size and salience do not go hand in hand.

If we are interested in the three most salient dogs ( d 1 designates d4 , but if we are interested in the four most salient ones ( d then it designates d 3 , for example. In other words, the description is ambiguous between d3 and d4 , depending on whether we attach greater importance to salience or size. This is borne out by our generation algorithm. Consider the simpler of the two treatments of salience, for example, which starts out with a reduced domain. If d reduced domain (consisting of all things at least as salient as the target) is dog narrows this down to { d 1 , d 2 , d 4 } , after which size = max
But if d 3 is the target then the same procedure applies, this time starting with the full domain (since no element is less salient that d 3 ) and the same description is generated to refer to a different animal. For a reader, clearly, salience and gradable adjectives are a problematic combination. This should come as no surprise, since salience itself is a gradable property, and combinations of gradable properties are always problematic, as we have seen in the previous section. 9.4.3 Salience as a Multidimensional Property. Note that salience itself is multidimen-sional. Consider two people talking about the railway station, when one railway station is near but of only minor importance (e.g., only few trains stop there), while another is further afield but of greater significance for travel. In such a situation, it can be unclear which of the two railway stations is intended. Without more empirical research, we cannot know how people combine salience with other dimensions.
 salience is taken into account (especially in combination with plurals and/or other gradable dimensions) it becomes difficult to generate descriptions that are immune to being misunderstood. 9.5 Beyond Vague Descriptions: Nouns, and Pointing 9.5.1 Nouns. Two other generalizations are worth mentioning. The first involves a for example (cf., Section 9.1), are applicable to different degrees, and the same is true for many other nouns, such as girl, which involves a vaguely defined age. Similar claims can be made about less obvious cases. Consider a gathering containing one famous professor ( a ), one junior lecturer ( b ), one Ph.D. student ( c ), and a policewoman of the following referring expressions appears viable, mirroring examples 3 and 4 of
Section 2: These descriptions are easily generated on the basis of a resenting degrees of being an academic, the more so because our approach generalizes to ordinal measurements (except for Small Gaps (Section 5), which requires an inter-
Values). Note that this treatment could cover all those nouns that are used with various degrees of strictness. It is difficult to say how many nouns fall in this category, but the phenomenon is believed to be widespread. This is, for example, one of the central tenets of Prototype Theory (Rosch 1975). An uncomfortable consequence of these observations is that it is no longer obvious which words denote a crisp property, and which a gradable property. (For example, it is not clear whether GRE should treat academic as gradable.) 9.5.2 Pointing. To show that vagueness is also inherent in multimodal communication, imagine the same gathering, but with some more people present. Suppose someone points at the centre of the gathering. (See below, where W denotes women.) If the distance between pointer and pointee is considerable then the boundaries of the region pointed to are not exactly defined: e is definitely pointed at, but d and f might be doubtful:
Here, { e } is a possible referent, and so are { d , e , f is not, since there is a gap between its two elements. If precise pointing is represented as a crisp property whose denotation equals the set of elements pointed at (Krahmer and Van der Sluis 2003), then vague pointing can be incorporated in our algorithm by representing it by a gradable property: We let the generator use a numerical degrees of being pointed at, where this degree is highest for e , next highest for d and f , and so on. If this is done, the generator can generate these two women, along with a pointing gesture like the one in our example, to refer to the algorithm of Section 4 are necessary. A variant of this approach arises if pointing is modeled as a way of establishing degrees of salience (i.e., the closer to the center of pointing, the higher the value for the attribute SALIENCE ) in the style of Section 9.2. 218 10. Conclusion
If the usefulness of NLG resides in its ability to present data in human-accessible form, suppression of irrelevant detail. In principle, this might be done by providing the gen-erator with vague input X  X n which case no special algorithms are needed X  X ut suitably alternative is to provide the generator with  X  X risp X  (i.e., quantitative) input, allowing the generator to be hooked on to a general-purpose database. It is this avenue that we have explored in this article, in combination with various (incremental and other) approaches to believe that our approach can be applied to a variety of situations in which vagueness affects referring expressions including, for example, On the other hand, we have also met some considerable obstacles on our way:
Expressive choice (Sections 4 and 7) . By enabling the generator to produce more referring expressions, we have made it harder to choose between them. For example, when is a qualitative description preferable over a quantitative one? At a more detailed level, the generator must choose between descriptions like the heaviest two of the smallest three mice, the mice that weigh between 40 and 60 grams, and so on, each of which may single out the same individuals. Section 7.3 has summarized some experimental evidence related to such choices, focusing on the different forms of the adjective, but the evidence is far from conclusive. Much is still unknown, differences between speakers abound, and the experimental methodology for advancing the state of the art in this area is not without its problems (van Deemter 2004).
 of properties into another do not sit comfortably within the received that transforms a list of the form mouse, &gt; 10 cm into one of the form mouse, it difficult to interleave CD and linguistic realization as proposed by various authors, because properties may need to be combined before they are expressed.

Incrementality (Section 8) . Gradable adjectives complicate the notion of incrementality, in generation as well as interpretation. Focusing on generation, for example, they force us to reexamine the idea that properties can be put into words more or less as soon as they have been selected by content determination (even apart from the issue noted under Architecture).
Adjectives and presuppositions (Section 2) . Our generation-oriented perspective insensitive to standards provided by the global context: If a man X  X  height is 205 cm, refer to him as the short man. A related issue that we have not touched upon is the fact that adjectives are often used partly to pass judgement: One and the same car might be designated as the expensive car by a hesitant customer and as the luxury car by an eager salesman: Even if expense and luxury go hand in hand, the two adjectives have different connotations, and this is something that a generator would ideally be aware of.
Multidimensionality (Section 9.3) . We know roughly how to deal with one gradable dimension: the short man, for example, is the shortest man around. But in practice, we often juggle several dimensions. This happens, for example, when two adjectives are distinguishing descriptions something of an exception. (For a study of approaches to multidimensionality in a different area, see Masthoff 2004.) At some point, have to abandon the strategy of aiming for unambiguous descriptions in all situations. Acknowledgments References 220
