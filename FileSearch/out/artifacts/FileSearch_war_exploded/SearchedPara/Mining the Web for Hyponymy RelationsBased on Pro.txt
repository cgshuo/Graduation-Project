 Conceptual hierarchies, such as hyponymy and meronymy relations, are very important for various natural language processing systems. For example, query expansion in information retrieval [1,2], WebQA [3], machine translation, object information extraction by text mining [4], and so forth.

While WordNet [5,6] and Wikipedia [7,8] are being manually constructed and maintained as lexical ontologies, many r esearchers have tackled how to extract concept hierarchies from very large corpora of text documents such as the Web not manually but automatically [9,10,11,12,13,14,15]. However, their methods are mostly based on lexico-syntactic patterns, e.g.,  X  x such as y  X  X nd X  y is a/an x  X , as sufficient but not necessary conditions of concept hierarchies. Therefore, they can achieve high precision but low r ecall when using stricter patterns or they can achieve high recall but low pr ecision when using looser patterns.
To achieve high recall and not low precision, this paper proposes a method to extract hyponyms and hypernyms of a target concept from the Web based on property inheritance. Our method assumes property inheritance from a concept to its hyponyms to be necessary and sufficient conditions of hyponymy relations.
The remainder of the paper is organized as follows. First, Section 2 introduces one assumption on the relationship between hyponymy and property inheritance. Next,Section3and4describeourmethodofminingtheWebforhyponymsand hypernyms based on it, respectively. S ection 5 shows some experimental results to validate our method. Finally, we conclude the paper in Section 6. In this section, we introduce and discuss one assumption on the relationship between hyponymy and property inheritance before proposing our method of mining the Web for hyponymy relations (hyponyms and hypernyms of a target concept) based on property inheritance in the following sections.
 Assumption 1. Let C be the universal set of concepts (words). We assume that if and only if a concept x  X  C is a superordinate (hypernym) of y  X  C , in other words, a concept y is a subordinate (hyponym) of a concept x ,then the set of properties that a concept y has, P ( y ), completely includes the set of properties that a concept x has, P ( x ): where P stands for the universal set of N properties, and has( p i ,c ) indicates whether or not a concept c  X  C has a property p i  X  P , In other words, hyponym( y, x )=
It is very essential for hyponymy extraction based on the above assumption to calculate the binary value has( p i ,c )  X  X  0 , 1 } of any concept and property accurately. However, it is not easy, a nd we can only use the continuous value has( p i ,c )  X  [0 , 1] in this paper. Therefore, we suppose that the ratio of the number of properties that a concept y inherits from a concept x to the number of properties that a concept x has, p i  X  P suitable a concept y is for a hyponym of a concept x , as an approximation of whether or not a concept y is a hyponym of a concept x , hyponym( y, x ). That is to say, we consider a concept y as a hyponym of a concept x when the ratio is enough near to one, while we consider that a concept y is not a hyponym of a concept x when the ratio is not near to one.
 In this section, we propose a method to mine such a very large corpus of docu-ments as the Web for hyponyms of a target concept, by using not only lexico-syntactic patterns as sufficient (but not necessary) conditions of hyponymy, but also property inheritance as its necessary and sufficient condition.
When a target concept x  X  C is given, our method executes the following three steps to extract its hyponyms from the Web. First, a set of candidates for its hyponyms, C ( x ), is collected. Second, some weig ht of each pair of a property p  X  P and a concept c (the target concept x or its hyponym candidate y  X  C ( x )), has( p, c ) is calculated by using Web search engine indices. That is, the property vector of each concept c , P ( c ), is obtained. Last, some weight of each pair of the target concept x and its hyponym candidate y  X  C ( x ), hyponym( y, x ), is calculated based on property inheritance, and then a set of its top k hyponym candidates ordered by their weight, C k ( x ), would be outputted to the users. Step 1. Listing of candidates for hyponyms of a target concept Step 2. Extracting of typical properties of each concept Step 3. Weighting of candidates for hyponyms of a target concept In this section, we propose a method to mine such a very large corpus of docu-ments as the Web for hypernyms of a target concept, by using not only lexico-syntactic patterns as sufficient (but not necessary) conditions of hyponymy, but also property inheritance as its necessary and sufficient condition.
When a target concept x  X  C is given, our method executes the following three steps to extract its hypernyms from the Web. First, a set of candidates for its hypernyms, C ( x ), is collected. Second, some weight of each pair of a property p  X  P and a concept c (the target concept x or its hypernym candidate y  X  C ( x )), has( p, c ) is calculated by using Web search engine indices. That is, the property vector of each concept c , P ( c ), is obtained. Last, some weight of each pair of the target concept x and its hypernym candidate y  X  C ( x ), hypernym( y, x ), is calculated based on property inheritance, and then a set of its top k hypernym candidates ordered by their weight, C k ( x ), would be outputted to the users.
 Step 1. Listing of candidates for hyponyms of a target concept Step 2. Extracting of typical properties of each concept Step 3. Weighting of candidates for hyponyms of a target concept In this section, we show some experimental results to validate our method of mining the Web for hyponymy relations (hyponyms and hypernyms of a tar-get concept) based on property inheritan ce, by comparing it with a traditional syntactic pattern based hyponymy extraction and the hybrid of them. 5.1 Experiment on Mining the Web for Hyponyms We applied our method of mining the Web for hyponyms based on property inheritance to five kinds of concepts:  X  X mphibian X ,  X  X ird X ,  X  X ish X ,  X  X ammal X , and  X  X eptile X . All of them are subordinate of  X  X nimal X .

Table 1 shows the top 10 typical properties with their weight has( p, c )foreach of five target concepts and  X  X nimal X  (which is one of their common hypernyms). Note that their weights were calculated by using Yahoo! Web search API [16] in October of 2007. It shows that these subordinate concepts of  X  X nimal X  inherit such a typical property of  X  X nimal X  as  X  X ody X ,  X  X ead X  and  X  X ife X . The results seem to be also good for a meronymy extraction. For example,  X  X eak X  and  X  X ings X  seem to be characteristic components for  X  X ird X ,  X  X ills X  is for  X  X ish X , and  X  X ilk X  is for  X  X ammal X .

Table 2 compares the top 5 hyponym ca ndidates for each target concept by syntactic pattern based, property inheritance based ( n =3 , 10), or hybrid ( n =3 , 10) hyponym extraction. It shows that our hyponym extraction based on property inheritance is superior to a traditional hyponym extraction based on such a syntactic pattern as  X  X s a/an X , and the hybrid of them seems to be somewhat superior to both of them.

Figure 3 shows precision-recall graphs for each target concept and the 21-point interpolated average for all of five target concepts by syntactic pattern based, property inheritance based ( n =3 , 10), or hybrid ( n =3 , 10) hyponym extraction. Our hyponym extraction based on property inheritance and the hy-brid are completely superior to a traditional hyponym extraction based on such a syntactic pattern as  X  X s a/an X . It also shows that the bigger number of typical properties for the calculat ion of property inheritance from a target concept to its hyponym candidate, n , the more precise result, and that the hybrid ( n = 10) is superior to the others in the middle recall range (about from 0.2 to 0.9). 5.2 Experiment on Mining the Web for Hypernyms We applied our method of mining the Web for hypernyms based on property inheritance to five kinds of concepts:  X  X mphibian X ,  X  X ird X ,  X  X ish X ,  X  X ammal X , and  X  X eptile X . All of them are subordinate of  X  X nimal X ,  X  X reature X ,  X  X hysical entity X  and so forth in such a large lexical database of English as WordNet [5].
Table 3 shows the acceptabl e candidates with their rank for each target con-cept by syntactic pattern based, property inheritance based ( n =3 , 10), or hybrid ( n =3 , 10) hypernym extraction.

Figure 4 shows the 21-point interpolated average precision-recall graph for all of five target concepts by syntactic pattern based, property inheritance based ( n =3 , 10), or hybrid ( n =3 , 10) hypernym extraction. Our hypernym extraction based on property inheritance is inferior in precision to a traditional hypernym extraction based on such a syntactic pattern as  X  X s a/an X  at low recall (0 to about 0 . 2), but is completely superior at from middle to high recall. The hybrid of them is fundamentally superior to each of them. Especially, the hybrid ( n =3)is always superior to the other hypernym extractions. Possibly, we have the hybrid (the other n ) that is better than these in this paper. Therefore, it is one of our future works to invent how to find the optimal number n .
 In this paper, to achieve high recall and not low precision in automatic acquisi-tion of hyponymy relations, we assumed property inheritance from a concept to its hyponyms to be necessary and sufficient conditions of hyponymy relations, and then we proposed a method to mine the Web for hyponyms and hypernyms of a target concept based on property i nheritance. The experimental results show that our hyponymy extraction based on property inheritance is superior to a commonly-used hyponymy extraction based on such a lexico-syntactic pattern as  X  X s a/an X , and the hybrid of them is more superior to each of them.
In the future, we plan to refine a method to extract typical properties for each concept, to invent how to find the o ptimal number of typical properties for the calculation of property inheritance from a target concept to its hy-ponym candidate, and moreover, to utilize coordinate terms [17] for more robust method.
 Acknowledgments. This work was supported in part by (1) a Grant-in-Aid for JSPS (Japan Society for the Promotion of Science) Fellows (Grant#: 1955301); (2) a MEXT (Ministry of Education, Culture, Sports, Science and Technology) Grant-in-Aid for Scientific Research on Priority Areas:  X  X yber Infrastructure for the Information-explosion Era, X  Planning Research on  X  X ontents Fusion and Seamless Search for Information Explosion X  (Project Leader: Katsumi Tanaka, A01-00-02, Grant#: 18049041); and (3) the Kyoto University Global COE (Cen-ter of Excellence) Program: Informatics Education and Research Center for Knowledge-Circulating Society (Program Leader: Katsumi Tanaka).
