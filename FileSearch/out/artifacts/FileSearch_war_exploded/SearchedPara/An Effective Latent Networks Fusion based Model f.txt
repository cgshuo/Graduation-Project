 Offline ephemeral social networks (OffESNs) are the net-works created ad-hoc at a specific location for a specific purpose and lasting for a short period of time by relying on mobile social media such as Radio Frequency Identification (RFID) and Bluetooth devices. The primary purpose of peo-ple in the OffESNs is to acquire and share information via attending prescheduled events. Event Recommendation over this kind of networks can facilitate attendees on selecting the prescheduled events and organizers on making resource planning. However, because of lack of users X  preference and rating information, as well as explicit social relations, the existing recommendation methods can no longer work well to recommend the events in the OffESNs. To address the challenges such as how to derive latent preferences and so-cial relations and how to fuse the latent information in a unified model, we first construct two heterogeneous interac-tion social networks, namely an event participation network and a physical proximity network. Then, we use them to derive users X  latent preferences and latent networks on so-cial relations, including like-minded peers, co-attendees and friends. Finally, we propose an LNF (Latent Networks Fu-sion) model under a pairwise factor graph to infer event attendance probabilities for recommendation. Experiments on an RFID-based real conference dataset have demonstrat-ed the effectiveness of the proposed model compared with typical solutions.
 H.2.8 [ Data Mining ]: Database Application X  data mining  X 
This work was done when the author visited UIC.  X 
This work was done when the author was a Ph. D student at UIC.
 Event recommendation, ephemeral social networks, offline social networks, heterogeneous networks, factor graph With the growing amount of mobile social media, Off line E phemeral S ocial N etworks (OffESNs) are receiving more and more attentions. The OffESNs are defined as a new kind of social networks created ad-hoc at a specific location for a specific purpose, e.g., hosting an academic conference or an expo, and lasting for a short period of time. The net-works primarily rely on mobile social media, such as Radio Frequency Identification (RFID) and Bluetooth devices, to facilitate people connecting with each other freely [1, 5, 8, 11, 14].

Basically, the primary purpose of people in the OffESNs is to acquire and share information via attending the presche-duled events such as keynotes, talks or exhibitions. In order to facilitate attendees on selecting scheduled events and or-ganizers on making resource planning, recommending the prescheduled events is an interesting and important work in the networks.

Motivating example . Let X  X  consider a scenario of an aca-demic conference held in a specific hotel, where many peo-ple gather together for a few days to attend event such as keynotes, parallel sessions, workshops or share personal ex-periences with friends. This is a typically scenario of the OffESNs where people can make face-to-face interactions. For example, Bob is attending a conference, where there are 10 talks to be held during 10:00am  X  11:00am on the first day. Our task is to give a ranked list of the 10 talks to Bob by his individual features and latent social relations.
Given the importance of the problem, both traditional rating based and social-trust based recommendation meth-ods can no longer work well to recommend the events in the OffESNs due to the following reasons:  X  Lack of user preference and rating information . Differ-ing from the item recommendation in the Web, it is diffi-cult to ask people to provide their real preference and give comments or ratings on the occurred events in the offline environment.  X  Lack of explicit social relations information . In general, we usually don X  X  know who are close friends in the OffESNs, so that it is difficult to obtain trusted social relations for recommendation.
Therefore, it is necessary to study new methods to recom-mend the events in the OffESNs. In the paper, we focus on the following two problems:  X  How to derive users X  latent preferences and latent social relations from the observed interaction information in the networks?  X  How to fuse the latent preferences and latent social rela-tion networks into a unified model to recommend the events effectively?
To the best of our knowledge, this paper is the first work to define, construct and fuse multiple latent social networks for event recommendation in the OffESNs. Specifically, our contributions can be summarized as follows.
The rest of the paper is arranged as follows. We introduce the heterogeneous source networks and problem statement in Section 2. In Section 3, we derive users X  latent preferences and multiple latent networks on social relations. We suggest a Latent Networks Fusion (LNF) model to infer event atten-dance probabilities in Section 4. In Section 5, we verify and evaluate the performance of the proposed model under a RFID-based real dataset. Section 6 is the related works, and we conclude the paper in the end.
We classify the activities in the OffESNs into two kinds of events: prescheduled events and spontaneous events.
Prescheduled events. A prescheduled event is a scheduled social activity organized by the sponsors, e.g., an opening ceremony, a keynote or a talk. Such events usually have one or more topics.

From the prescheduled events, we can obtain a lot of ephemeral human-event interaction information.

Spontaneous events. A spontaneous event is a social ac-tivity initiated spontaneously by two or more people, such as having lunch together, talking about papers, news or else. Such events are unpredictable and generated occasionally.
Differing from the prescheduled events, in most cases, we don X  X  know what people are actually doing in the sponta-neous events. But from such events, we can obtain a great amount of sporadic human-human interactions information.
Physical proximity. If two or more people are involving in a spontaneous event for some period of time detected by the sensor devices, it is said that they are in physical proximity. i.e., they encounter in some location.

Physical proximity indicates the face-to-face contact gene-rated from the spontaneous events, which is a significant metric to quantify users X  offline behaviors [2]. For example, a person usually has much more physical proximity informa-tion with his friends than with others. Although physical proximity is related to locations, we pay more attention on the facts that two or more people stay together in the paper.
Thus, from the above two kinds of events, we can establish two observed heterogeneous source networks: an event par-ticipation network (EPN) and a physical proximity network (PPN).
 Let U t = { u i } ( i =1, 2, . . . , N ) be the set of user, and E prescheduled event occurring till time t . The heterogeneous source networks are defined formally as follows.

Definition 1 (event participation network). The event participation network is denoted as G t E = &lt; U t where an edge x =( u i , e j,k )  X  X t represents the event partici-pation relationship between u i and e j,k , and the edge weight is the duration that u i attends e j,k .

Definition 2 (physical proximity network). The physical proximity network is denoted as G t P = ( U t , Y where an edge y =( u i , u j )  X  Y t represents the physical proxi-mity relationship between u i and u j , and the edge weight of is the encounter duration.
The recommendation task discussed in this paper is to recommend the prescheduled events. Let t s be the start time of the overall social event, t e be the end time, and t  X  [ t t ]. We consider the events during [ t s , t ] as training data and the events during ( t , t e ] as testing data for recommendation. The problem to be solved is defined as follows.

Problem 1. Given G t E and G t P at time t , and a set of The goal of the work is to infer the probabilities that each user in u i  X  U t will attend each event e t +1 ,j  X  e t +1 the events based on the probabilities for personalized recom-mendation.
According to our observations, whether a user attends an event is mainly determined by his/her explicit, implic-it preferences and the actions of his/her friends. However, both the preferences and the social relations are latent in the OffESNs, we intend to use the observed heterogeneous networks to derive them. We use topics as the features of the prescheduled events. The set of topics is denoted as C = { c i } , i =1, 2, . . . , d .
In general, an event can have more than one topic, and a topic can correspond to multiple events. Whether a user likes an event is determined whether he/she likes the topics of the event.

We first use the observed network G t E to get the measures about topic participation.

Definition 3 (topic participation frequency). The topic participation frequency is the count that u i has attend-ed the events with topic c j , which is equal to the number of the edges connecting u i and th e events with c j in G denoted as P F ij .

Definition 4 (topic participation time). The topic participation time is the sum of total time that u i has attend-ed the events with c j , denoted as P T ij , i.e., where P D k ij is the duration of u i  X  X  k -th attendance on c which is equal to the weight of the corresponding edge in G
We can also obtain encounter measures from the observed network G t P .

Definition 5 (encounter frequency). The encoun-ter frequency is the count that u i and u j have encountered in the spontaneous events, which is equal to the number of the edges between u i and u j in G t P , denoted as EF ij
Definition 6 (encounter time). The encounter time is the sum of all durations that u i and u j have encountered in the spontaneous events, denoted as ET ij , i.e., where ED k ij is the duration of the k -th encounter, which is equal to the weight of the corresponding edge in G t P .
Intuitively, the longer the time that a user attends an event is, the more interests he has on the topics of the event. Thus, we intend to explore the topic participation time to represent user X  X  latent feedback.

Because a user is usually interested in multiple topics, we use a d -dimensional attribute vector z i to denote u i  X  X  latent preferences on the d topics, which j -th dimension attribute z ij represents the preference that u i on c j .

Definition 7 (latent preference). The latent topic preference z ij is the ratio between u i  X  X  participation time on c and the total session time of c j , i.e., w here ST j is each session time of c j .

Now we can compute users X  preference similarity using the adjusted cosine similarity [9].

Definition 8 (preference similarity). The prefere-nce similarity is the measure to describe the similar degree based on topic preferences between a pair of users u i and u denoted as  X  ij : w here z i and z j are the average preferences of u i and u r espectively.

For  X  ij  X  [  X  1 , 1], we normalize it by Equation (5).
W e use a weighted Jaccard X  X  Coefficient to calculate at-tendance relevancy between users.

Definition 9 (attendance relevancy). The atten-dance relevancy is the measure to describe the correlations degree that a pair of users u i and u j attend events together, denoted as  X  ij : where D i ( e ) and D j ( e ) are the durations that u i and u tended the same event e , respectively;  X ( u i ) and  X ( u the sets of events that u i and u j have attended, respectively.
Now, we can construct three latent networks according to above measures.
 Definition 10 (preference similarity network).
 The preference similarity network is denoted as G t S =( U S ), where an edge s=( u i , u j )  X  S t represents the preference similarity relationship, and the edge weight is equal to  X  Definition 11 (attendance relevancy network).
 The attendance relevancy network is denoted as G t R = ( U R ) , where an edge r = ( u i , u j )  X  R t represents the atten-dance correlation between u i and u j , and the edge weight is equal to  X  ij .

Definition 12 (encounter network). The encoun-ter network is denoted as G t Q = ( U t , Q t ) , where an edge q = ( u i , u j )  X  Q t represents the encounter relationship, and the edge weight is EF ij or ET ij .

We can obtain two kinds of encounter networks by the weight used: frequency-based encounter networks using EF ij and time-based encounter networks using ET ij .

From the three kinds of latent networks, we can obtain three kinds of social relations as follows.

Definition 13 (like-minded peers). Let KNN( i ) \ G t S be the K nearest neighbors of u i in G t S . If u j  X  KNN( i ) \ G u and u j are defined as like-minded peers.

Definition 14 (co-attendees). Let  X  be the threshold of the attendance relevancy. If r = ( u i , u j )  X  R t and  X   X  , u i and u j are defined as co-attendees.

Definition 15 (friends). Let  X  be the threshold of the encounter frequency,  X  be the threshold of the encounter time. If q = ( u i , u j )  X  Q t and EF ij  X   X  in frequency-based en-counter networks or ED ij  X   X  in time-based encounter net-works, u i and u j are defined as friends.
In this section, we propose an LNF model based on a pair-wise factor graph (PGF) [12] to infer the hidden probabilities that users will attend future events given the topics. g Figure 1: The pairwise factor graph implementation
Fig. 1 shows the fusion model under a pairwise factor graph implementation, where each factor function only in-volves two variable nodes.It is shown that all the three latent networks are captured via two types of variable nodes (the circle nodes in Fig. 1) and three types of factor function nodes (the square nodes in Fig. 1), which form the basic components of the model.

Observed variable nodes. The observed variable nodes are the user nodes U = { u i } ( i = 1 , 2 , . . . , N ) in G circle nodes in Fig. 1).

Hidden variable nodes. The hidden variable nodes Y = { y spond to the N observed variables nodes.

Attribute feature function nodes. The attribute feature func-Fig. 1) define the correlations among the hidden variables y y  X  X  corresponding observed variables u i and u i  X  X  K nearest neighbors in G t S , to represent the prior probabilities that u will attend each topic, e.g., g ( y 1 , u 1 , KN N (1) \ G
Attendance correlation function nodes. The attendance correlation function nodes f ( y i , y j ) (the yellow square nodes in Fig. 1) represent the attendance correlations between the hidden variables y i and y j , e.g., f ( y 2 , y 4 ).
Local constraint function nodes. The local constraint func-tion nodes h ( y i , y j ) (the pink square nodes in Fig. 1) reflect the constraint relations between the hidden variables y i y , e.g., h ( y 3 , y 4 ).
The attribute feature functions and the edge feature func-tions are defined as follows.

Attribute feature functions . g ( y i , u i , KN N ( i ) \ G fined on the input network G t S . It incorporates u i  X  X  attribute vector z i and the attribute vectors of u i  X  X  K nearest neigh-bors in G t S .

We use the maximum value between u i  X  X  original prefe-rence z im and the weighted average preference of u i  X  X  K nearest neighbors on topic c m as the prior probability of u attending c m , denoted as p im . p
The values of y i  X  X  m -th attribute can be computed as:
Attendance correlation functions . f ( y i , y j ) is an edge fea-ture function to describe how likely that u i and u j attend the events together, i.e., where  X  ij is an indicator function to represent whether there is an edge between u i and u j in G t R .
We represent the attendance correlation of each pair as a discretized correlations matrix CM ij . The semantic of the matrix is: the cases of y i =0, y j =0 and y i =1, y j =1 indicate that u i and u j take the same actions, and its probability is denoted as p im ; the cases of y i =1, y j =0 and y i =0, y indicate that u i and u j take different actions, and its prob-ability is denoted as 1-p im .

Local constraint functions . The local constraint function h ( y i , y j ) can be defined as an indicator function, taking friend relations in G t Q as an input, i.e.,
Note the choice of EF ij or ED ij in Equation (11) is de-termined by the weight that the encounter network uses.
Based on the PFG implementation, we can formalize the topic attendance probabilities as calculating the marginal probabilities of y i conditioned on the factor graph G ( Y ) as: den variables in the PFG, which is computed as Equation (13). where Z is a normalizing factor.
We use a widely used approximate iterative algorithm  X  loo py belief propagation (LBP)[6] to infer the joint proba-bility distribution and the marginal probabilities.
Based on marginal probabilities, we can easily rank the parallel events for each user. More details of the ranking algorithm can be found in [7]. The data set used for our experiments,  X  X ttendee Meta-Data X  (AMD), is downloaded from CRAWDAD [3]. All at-tendees in the conference received RFID badges that unique-ly identified and tracked them across the conference area in the 3 days. In the experiments, we regard the talks as the prescheduled events. For there are a lot of noisy data in the logs, we first clean them up based on statistical analysis re-sults referred as [7]. The experimental parameters are listed in Table 1.
Given we have three factors and two kinds of encounter networks, we will test following LNF models:  X  LNF-g : The LNF model only using the g factor, i.e., the G t S network.  X  LNF-gf : The LNF model using both factors g and f , i.e., the G t S and G t R networks.  X  LNF-gfh-EF . The LNF model using all three factors based on the frequency-based encounter network, i.e., all three latent networks.  X  LNF-gfh-ET . The LNF model using all three factors based on the time-based encounter network, i.e., all three latent networks.

Two baseline methods are used for comparison:  X  Naive method. This method ranks the talks only by topic preferences derived from the event participation net-work.  X  User-based collaborative filtering (UBCF) method. [13]. It uses the node attributes and neighbor relations in G t recommendation, and 5% nearest neighbors are determined.
The results are evaluated against users X  real actions (i.e. ground truths) according to the metrics of precision and normalized discounted cumulative gain (nDCG)[4].
 Parameter Description Value Cleansing condition MIN( P D ) minimal talk presence duration 3 min.
 MIN( P F ) minimal talk presence frequency 3 MIN( ED ) minimal encounter duration 3min.
 Network parameters N number of user nodes 915
M number of event nodes 45 | X | number of edges in G t E 6,976 | Y | number of edges in G t P 51,538 | R | number of edges in G t R 313,138 | Q | number of edges in G t Q 36,573 Default thresholds
K threshold of number of neighbor 6  X  threshold of encounter frequency 6  X  threshold of encounter time 30min.  X  threshold of attendance relevancy 0.4
We fi rst compare the recommendation performance be-tween our LNF based methods and two baseline methods as shown in Figs. 2(a) and 2(b). It can be clearly seen that our methods outperform the baseline methods.

In terms of the metric of precision, LNF-gfh-EF and LNF-gfh-ET methods achieves improvements of approximately 16  X  20% compared to the UBCF method, and 24  X  28% to the naive method. The two LNF methods also give a rise of 16  X  28% improvement compared to the two baseline methods in nDGC. The reason of the improvements is that the LNF methods not only consider the preference similarity, but also take the attendance relevancy and friends relationships into account.
 From the experimental results, we can find that LNF-gfh-ET can improve slightly the performance about 4% in pre-cision and 3% in nDGC respectively compared to LNF-gfh-EF. It indicates the encounter time is more suitable to be used for representing the closeness between users than the encounter frequency.

We also investigate the contributions of different factors as shown in Figs. 3(a) and 3(b).

The LNF-gf method (uses factors g and f ) can achieve performance improvements of approximately 4% compared to the LNF-g method. But its performances are worse than LNF-gfh-EF and LNF-gfh-ET, since many users who often attend common talks may be irrelevant, which misleads the probability inference. This shows the importance of inte-grating all three latent networks. Figure 2: Performance comparison between our methods and the baselines Figure 3: Performance comparison under different factors
In addition, we conduct experiments to investigate the sens itivity of different thresholds, and the results can be found in [7].
Traditional recommendation systems mainly aim to re-commend items that are likely to be interested to users, but the study on event recommendations is relatively little, especially in the offline social networks. Minkov et al. [10] demonstrated a method for collaborative ranking of future events, which recommends the events based on individuals X  preferences for past events, but it doesn X  X  consider the char-acteristics of the offline networks. Liu et al. [8] suggested event-based social networks (EBSN) containing both online and offline social interactions. It recommends events only based on the topological structures of the networks. Re-cently, the offline ephemeral social networks have attracting the attentions of people. Chin et al. [1] presented the con-cept of ephemeral social networks. It investigated how social connections can be established and examined user behaviors in the networks. Kermarrec et al. [5] described the concept, potential applications, and underlying technologies of the offline social networks. Scholz et al. [11] analyzed influ-ence factors for link prediction and the strength of stronger ties in human contact networks, and used several network proximity measures to predict new links and recurring links. Zhuang et al. [14] formalized the problem of predicting geo-graphic coincidences in the ephemeral social networks, and used a factor graph model to predict how likely two users will meet in future. However. But both prediction methods are not event-driven.
The major contribution of this work is to propose a latent networks fusion model for event recommendation in the off-line ephemeral networks. The model uses a pairwise factor graph to factor the global functions into multiple simpler local functions, and capture all the features of the latent networks on social relations. The experimental results show that the proposed methods outperform the baselines, and the contributions of different factors. This work is supported by NSF of China (No. 61262009), NSF of Jiangxi, China (20122BAB201032), Science Founda-tion of Jiangxi Provincial Department of Education, China (No. GJJ10694, GJJ12259), Building Project of Superior Innovation Team of Sci. and Tech. of Jiangxi, China (No. 20113BCB24008); US NSF through grants, CNS-1115234, DBI-0960443, and OISE-1129076, and Huawei grant. [1] A. Chin, H. Wang, B. Xu, K. Zhang, H. Wang, and [2] A. Chin, B. Xu, F. Yin, X. Wang, W. Wang, and [3] T. Goodspeed and N. Filardo. CRAWDAD trace set [4] K. Jarvelin and J. Kekalainen. Cumulated gain-based [5] A. M. Kermarrec and E. L. Merrer. Offline social [6] D. Koller and N. Friedman. Probabilistic Graphical [7] G. Liao, Y. Zhao, S. Xie, and P. S. Yu. Latent [8] X. Liu, Q. He, Y. Tian, W. C. Lee, J. McPherson, and [9] R. McLauglin and J. Herlocher. A collaborative [10] E. Minkov, B. Charrow, J. Ledlie, S. Teller, and [11] C. Scholz, M. Atzmueller, and G. Stumme. On the [12] C. Wang, J. Tang, J. Sun, and J. Han. Dynamic social [13] J. Wang, A. P. D. Vries, and M. J. T. Reinders. [14] H. Zhuang, A. Chin, S. Wu, W. Wang, X. Wang, and
