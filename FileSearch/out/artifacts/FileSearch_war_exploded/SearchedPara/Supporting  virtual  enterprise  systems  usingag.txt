
Over the past few years, multiagent systems (MAS) have been perceived as a crucial technology for building large, complex and robust distributed information-processing systems that exploit the efficiencies of organized behaviours. Agent societies, in par-ticular, seem to be the most promising candidates for the development of the virtual enterprise management (Fischer et al. 1996). Virtual enterprises (VE) are an appli-cation domain in which the MAS technol ogy is appropriate because they include generic characteristics of complex applications (Lesser 1999): 1. Distributed situation assessment, whic h emphasizes how agents, with different 2. Distributed resource scheduling and planning, which emphasize how agents 3. Distributed expert systems, which emphasize how agents share information and ne-tonomy and abilities to perceive, reason and act in their environments, as well as to socially interact and communicate with other agents (Huhns and Singh 1998). As part of MAS, agents can capture and apply the semantic constraints among hetero-geneous components in order to enact distributed workflows. Moreover, MAS are well adapted to interactive machines where the exchange is exclusively done by in-teraction (e.g. sending of messages, agen t communication language). In our context, the characteristics of an agent that can be a workflow, person, an information system or any combination of them include autonomy, social ability and proactivity (Zarour et al. 2000a). Our agents are also inform ational because they perform the role of managing, manipulating or collecting information from many distributed sources. neous, distributed, cooperative and communicating. Moreover, they use shared and dynamic environments where resources are limited. Therefore, some problems may occur, like the lack of a global state due to asynchronous communications and the management of incomplete information and partial vision of agents. In fact, the main issue is to conciliate between the local autonomy of an agent and the global co-herence of the system. We believe that this conciliation would be reached only by building appropriated coordination models.
 heterogeneous enterprises, meant to provide the adaptability to frequent organiza-tional and technical changes, and the flexibility that characterize both the openness of service activity and business process scen arios. The heterogeneity term means that the involved information resources provided by different participants are developed under different data-modeling formalisms an d platforms. On the other hand, coordi-nation strategies enable groups of agents to solve problems effectively through deci-sions about which agents should perform specific tasks and when and to whom they should communicate the results (Lesser 1999). The potential complexity involved in making these decisions can be seen in the s imple situation where one agent needs the results of a subproblem that another agent is solving. Let us assume that the producing agent has other tasks to do with their own deadlines in addition to pro-ducing a result for the other agent. To further complicate this decision process, the producing agent may have alternative methods for doing those tasks that trade off the quality of the task solution against the time to complete the task. An additional complexity is introduced when neither the time that a method takes nor the quality of its results are known precisely, but that rather can be described by a statistical distribution. Anothe r complexity of the coordination mechanism is the reactive plan-ning. A new event occurring in the environm ent may cause a reorganization of the considered system. The participating components must be able to replan their course of actions if necessary.
 concern the sharing and the exchange of heterogeneous information resources, the task assignment for business processes, as well as temporal and prerequisite con-straints among heterogeneous activities (Licci et al. 2001). Hence, in order to reach
VE global goals, these dependencies must b e rationally managed and governed. This rationality can be obtained only if the main above issues can be understood as agent coordination problems (Malone and Crowstone 1994).

With the aim of building autonomous agents that work in a coordinated manner in a dynamically changing world, the proposed approach tries to answer two sim-ple questions. The first one is how an agent chooses a particular course of actions and how its choices change in front of events happening in the world. The second question is how agents execute coordinate d actions. Actually, the answer to these questions consists in constructing agents as rational decision makers that exist within organizations. We consider an organization as a system that constrains the actions of member agents by imposing mutual obligations and interdictions. The association of obligations and interdictions is mediated by the roles that agents play in a VE.
Neither fulfilling an obligation nor interdiction is sanctioned by paying a cost or by a loss of utility. Accordingly, the interpretation of workflow processes as coordina-tion ones can be explained by the social c onstraints (social laws) (Barbuceanu 1997) to which agents in VE are subject. Once a goal is adopted, a set of plans, called conversation plans, is available to agents for effectively carrying out a coordination action. The conversation plans explicitly represent interactions by message exchange and their actions are dynamically reorde red using the theory of MDP (Markov de-cision process) (Bellman 1957) to ensure the optimization of various criteria.
The objective of this paper is to build a flexible and formal framework for en-gineering the coordination requirements of VE. This framework provides a greater flexibility than traditional systems becau se it should be possible to cancel or oth-erwise modify the plans. Another advantage of this framework is to preserve the agent autonomy, i.e. to maximize agent freedom without letting the systems evolve into chaos. The management of this autonomy lies in social constraints like obliga-tions, interdictions and permissions. The proposed framework is based on the exten-sion of the social constraint entities by adding some concepts and mechanisms like assignation, delegation, branch alternativ es, and allowing agents to carry out several conversations in parallel.

The rest of the paper is organized as follows. Section 2 describes the required infrastructure for VE, shows how the global coordination mechanism helps to model
VE and workflow management systems (WfMS). A discussion of the proposed coordination-based framework is provided in Sect. 3. Section 4 describes the im-plementation of the prototype using an application in the manufacturing domain. In
Sect. 5, we present some related works. Section 6 summarizes the contributions of this paper and gives some directions for future research.
VE typically requires combining the core competencies of several autonomous and heterogeneous enterprises in a new agile and flexible enterprise, addressing specific and original industrial business targets (Rocha and Oliveira 1999). In order to reach these targets, we have developed an age nt-based architecture, named DAArACHE (Zarour et al. 2000a), supporting a VE environment. In this architecture, an agent can be an information system, a workflow, a human or any combination of these, depend-ing on the level of automation. In this paper, the proposed coordination mechanism is implemented as a service in this environment. It permits achieving the coordinated behaviour of a VE.
In our approach, we consider two types of a gents: the leader agent, who receives a customer request and accepts achieving it, and the member agent, who agrees to cooperate after being asked by a leader ag ent indicating the capability in which it is interested. The infrastructure supporting VE management has to address two main issues: 1. the valuation of achieving a global goal and 2. the execution of VE-specific business processes.
 agent must fully recognize the goals, characteristics and principles of the business system in order to elaborate the strategic planning of the global activity (Fig. 1a). The methodology of this planning is inspired by the Brumec et al. (2000) one. The result of applying this methodology should contain the business processes, business data, technical resources and development activity plan. This planning methodology is used in our coordination infrastructure because it can be easily inspected, elaborated and possibly changed dynamically by (intelligen t, human or artificial) agents. Then the leader agent negotiates with other agents that attempt to satisfy some subgoals with some attributes of which values model the quality of service. Once the best offer from each agent is given, the leader agent e valuates whether the global goal could be achieved or not according to the required needs in terms of costs, delivery time and other performances.
 way, the communication is only established between agents, while in the second one, it is done between agents and their underlying physical entities. These two modes of communication are described more in Zarour et al. (2000b). The leader agent supervises the coordinated tasks among the VE members by taking into account agents X  commitments that ha ve been established during t he first issue. An agent that is a member of a VE can collaborate with other agents and play, in this case, the role of the leader because it must en sure at least the coordina tion between these agents.
Consequently, the interaction model be tween agents is a peer-t o-peer one because it provides agent uncoupling from both the space and time viewpoints. The peer-to-peer model allows going beyond point-to-point communication protocols, supporting location-independent disconnected workflow participant.
The coordination mechanism is composed of two parts: the global coordinating rules (Fig. 1a) that perform the supervision of an organization global behaviour and the local coordinating rules (Fig. 1b) that perform the supervision of tasks that are lo-cally executed by an agent according to an organization global behaviour. Both types of rules are represented using workflows (Fig. 1). A WfMS permits improving the process throughput, promotes better use of resources and enables efficient process tracking (Santanu et al. 1997). Moreover, because workflow applications are subject to frequent changes due to the business environments, flexibility and adaptability are key features to facing the necessary dynamic evaluation of coordination policies and to reacting suitably to unpredicted situations.
 In Fig. 1, the workflows are represented using a derived form of Petri nets like
MCT (task conceptual model) of the MERISE method (Tardieu et al. 1994), where a place represents an event (extern, intermediary or result) and a transition represents an operation, which is a sequence of uninterrupted actions. The precondition for executing an operation is expressed using the synchronization of input events. The postcondition produces events according to emission rules.

In Fig. 1a, after having received the cust omer request, the leader interprets, de-composes and schedules the global goal int o subgoals (elaboration of plan operation). Once the different roles are identified, the leader contacts several competent agents asking each of them to achieve one or more subgoals (negotiation operation). Then, based on the best offer of each subgoal, the leader tries to evaluate whether the global goal could be reached or not (evalua tion operation). Whenever the customer agrees (after a possible negotiation with the leader), the leader assigns definitive roles to agents (members) that have presented the best offers. Once the execution of subgoals starts, the leader must coordinate between distributed actions, taking into account the agents X  commitments (execution operation). If no problems occur, the global goal will be achieved according to i nitial constraints; else the leader must identify the nature of the problem and replan the course of actions (elaboration plan operation triggered by revision of planning event). The agent that has caused the problem is sanctioned.
 the leader after negotiation (negotiation operation) becomes a member of the orga-nization. Then, this member plans its course of actions (planning operation). During the execution of members X  actions (execu tion operation), if no problems occur, the subgoal will be achieved.
 operation), the subgoal will be assigned to a nother agent; else the member must re-plan its course of action. In both cases, this member will be sanctioned by the leader. However, if the problem comes from the leader, this latter will be sanctioned too. tions. A plan organizes a collection of actions that can be performed sequentially or concurrently in some specific order. Let us assume that the assembler agent plan (Fig. 2) contains four operations. The preassembly one consists of assembling avail-able pieces. The assembly1 and assembly2 operations are concurrently executed. As-sembly1 operation assembles a part of the preassembly result ( part1 event) with the complementary pieces ( pieces-X event) that are manufactured by the agent X . eration is triggered by the synchronization of the two events assembly1-done and assembly2-done (produced, respectively, by operations assembly1 and assembly2 )and the complementary pieces ( pieces-Z event) that are manufactured by the agent Z . coordinate heterogeneous activities spread over the network. In the next section, we will show how to represent workflow rules as agent coordination laws.
Research on social laws in computational environments has proved the usefulness of the law-based approach for the coordination of MAS (Fitousi and Tennenholtz 1998).
An artificial social system institutes a social law that the agents shall obey (Shoham and Tennenholtz 1992; Minsky 1991). Consequently, we explore the view that the coordinated behaviour is driven by the social constraints to which agents in VE are subject. In the following, we overview the social constraints entities, then we discuss how such a coordination-based framework c ould be fruitfully exploited in the context of VE X  X  WfMS.
Social laws are objective forces that provide the ultimate motivation for coordinated actions at the organizational level and to a large extent determine the mental states at the individual agent level. Agent desir es and intentions are concepts that are re-quested by their current obligations, knowing that otherwise there will be a cost to pay. In fact, these sanctions allow agents to apply rational decision making when choosing what to do.

The social constraints are made of agents, organizations, roles, obligations, in-terdictions, permissions, goals, constraints, plans, etc. Agents determine what obli-gations and interdictions currently apply and, on this basis, decide on their goals.
Once an agent has chosen a goal, it select s a plan to be executed. A conversation plan, which is described in a planning fo rmalism, is a description of how an agent acts and interacts in certain situations. It c onsists of states and rule-governed tran-sitions together with a control mechanism and a local database that maintains the state of the conversations. These conversations can be mapped to fully observable, discrete-state MDP. In this mapping, the conversation states correspond also to states and the conversation rules become actions.

The vocabulary of social constraints is d escribed as follows: an organization con-sists of a set of roles fulfilled by a number o f agents. Each agent has its local store of beliefs, which is taken as a database rather than mental states. A role describes a major function together with the obligations, interdictions and permissions attached to it. An agent A1 in role R1 has an obligation toward an agent A2 in role R2 for achieving a goal G with respect to some constrains C if and only if nonperformance by A1 of the required actions allows A2 to apply a sanction to A1. In the same way, the interdiction (the performance of the goal is sanctioned) and permission (neither the performance nor nonperformance are sanctioned) are defined. Semantically, in-terdictions, obligations and permissions are modeled using the reduction of deontic logic to dynamic logic due to Mayer (1988).
 a modal operator [  X  ] associated with an action  X  . The expression [ the precondition is required to ensure that the proposition been done. We, respectively, define interdiction, obligation and permission as fol-lows: i.e. agent i is obliged by agent j to execute  X  ; where V ij  X  denotes a violation by agent i of a constraint imposed by agent j with respect to  X  (associated with a cost to pay).
 cient reasoning about the obligation, interdiction and permission constraints in action networks. The main theorems that are necessary in real applications are as follows (indices are dropped for clarity), wh ere ; denotes sequential composition, terministic choice and &amp; parallel composition of actions: a sequence is forbidden iff, after executing the first action, the remaining subsequence is forbidden. a choice is forbidden iff all components are also forbidden. if at least one component of a parallel composition is forbidden, the parallel com-position is forbidden as well. a sequence is obliged iff the first action is obliged and after executing it the remaining subsequence is obliged as well. if at least one component of a choice is obliged, the choice is also obliged. a parallel composition is obliged iff all components are obliged. a sequence is permitted iff there is a way to execute the first action, after which the remaining subsequence is permitted. a choice is permitted iff at least one component of it is permitted. if a parallel composition is permitted, then all components must be permitted. if a choice is obliged and one component is forbidden while the other is permitted, then the permitted component is obliged.

The use of a formal semantics of the three constraints (obligation, interdiction and permission) allows us to verify that the coordination specifications possess cor-rectness properties, namely that the responsibilities assigned to roles are fulfilled and that constraints are maintained as a result of the coordination process execution.
In this section, we present a framework, called SoCCoF 2 , which is both a model and an infrastructure for the coordination of cooperative agents. In order to improve the performance of the global coordinated beh aviour, an agent response must not exceed the required maximum reply time. Also, this framework may be used when two agents share the same resources and allow an agent to carry out several conversations in parallel without leading the MAS to inconsistent states. In addition, the basic concepts that we use are the alternative branches , subcontracting and commitments .
Some mechanisms are cons idered in SoCCoF. The most important one is to keep the MAS in a consistent and valid state in spite of allowing agents to carry out several conversations in parallel. A hierarchical organization of conversations allows parent conversations to control the execution of their children ones. This hierarchical organization forces agents to consult t heir chronological account of commitments to avoid eventual contradictions (e.g. overlap of commitments) and to maintain the consistency of the MAS. In fact, the various conversations carried out by an agent are not independent and the negotiated s olutions are constr ained by each other. How does the framework solve the inconsistency problem?
In order to avoid contradictions, an a gent may store the chronological account of its commitments in its local database. Whenever a contractor has to take a decision, it must first consult its historical commitments. After dealing with some competent contractors for executing a task, the leader classifies them according to their offer. The task will be assigned to the contractor that has presented the best offer. ments to make new decisions. Let us consider the following rules: a contractor may lead several conversations in parallel. It negotiates with one party, not with a third one. We are only interested in contractors X  commitments (not to all conversations) that would lead to undesirable situations. We assume that a task is elementary, i.e. it is carried out by one (business) process. A task is characterized by a beginning date and a length of its execution.
 which we add some attributes that charact erize each obligation. The structure of a commitment is defined by the 4-tuple: where C = c h is the set of a contractor commitments; age several conversations in parallel without leading the MAS to inconsistent states. How does the framework face failures? The coordination processes will terminate even if there is a failure within the system.
Before bargaining, a leader must consult the contractor perception interface (Zarour et al. 2003) to verify that it is operational. Whenever a contractor withdraws before execution process and cannot inform the lead er, this latter will detect that once the contractor has exceeded the time out, and th erefore, the process with this contractor will terminate. In this case, in order to replace the abandoned agent by another one without doing a negotiation process again, the leader may consult the contractor classification to select another agent. The second case is when a member fails during a task execution; the leader will detect the failure in the same way as the previous one. Then the leader will renegotiate with other agents to select one and will take into account the propagation of delay by replanning the different tasks.
The concept of alternative branches allows two agents to explore several possibilities to find different solutions for the same problem. For example, an agent A asks an agent B if it is capable of achieving a goal G with constraints C and optimizations O ; otherwise, it gives some counterproposals (other constraints and/or optimizations).
The agent B may reply in three possible ways: 1. it cannot achieve the goal G , 2. it can achieve the goal G with the required constraints C and the required or not 3. it can achieve the goal G but with other constraints C and the required or not
We have constrained the number of conversations between two agents to secure the termination of the process and reduce its length.

The concept of subcontracting allows a VE member to subcontract with other agents, and thus, becomes itself a leader. In this case, the leader agent ignores the existence of such transactions.

The major actions on commitments are the creation, assignation, delegation and cancellation.  X  The creation is an instantiation of an obligation that links an agent to its leader. The server performs a creation only i f the leader agrees with its proposition.
Once the creation has been done, the server becomes a member of the VE and may have one or more roles.  X  The assignation allows a leader to assign another agent when it gets held up.
The assigned agent must continue to resp ect the ex-leader X  X  commitments that have been held with the VE members and ensure the coordinated actions among these members during the execution stage.  X 
The delegation permits a VE member that has had a better offer or a failure to delegate another agent to play its role in the organization. The delegated agent must respect the ex-member X  X  commitments, i.e. the delegated agent will be sanc-tioned if some obligations or interdictions are not respected.  X 
The cancellation allows an agent to remove its co mmitment to an organization by releasing the appropriate instance of obligation.

The way that an agent (leader or memb er) may pay the decommitment penalty is not detailed here; however, it is inspired by Exelente-Toledo et al. (2001), which introduces the notion of variable penalty contracts .

The mechanisms and concepts that are considered in the proposed framework are expressed using different social constraints, as will be shown in the next section. By describing the obligations and interdicti ons as relations among organizational roles, we use them to shape the social behaviour. T he internal representation of each agent and an engine for reasoning about their obligations and interdictions allow effectively integrating these entities with the agent X  X  beliefs, goals and plans, extending the BDI (beliefs, desires and intentions) model (Parsons et al. 1998) in a new direction.
Indeed, these concepts and mechanisms allow SoCCoF to provide the flexibility and adaptability required to face rapid changes in business environments, as well as to react to unpredicted situations. On the other hand, they lead to an improvement of the VE behaviour and performance.
The modern manufacturing that is naturally distributed deals with information man-agement in open environments. It involves a large number of autonomous commer-cial entities with a variety of heterogeneous information systems. Furthermore, it makes use of human decision making and f aces the realities of failure and excep-tion in physical processes and commitments. Thus, the requirements for the control of coordinated processes in manufacturing applications correspond well to our mo-tivations.

Actually, the management and manipulation of business data is a difficult task for many developers because data can take many forms. It can be a part of a corpo-rate document, a message from another system, an interface to a transaction system, a database record, or a document on a web s ite. The crucial missing element has been the ability to enable interchange be tween heterogeneous systems by adopting a universal interchange format that serves as the single output format for all ex-porting systems and the single input format for all importing systems. The XML (extensible markup language) technology can resolve the crucial problem of hetero-geneity in VE because it helps developers to build and deploy sophisticated Web applications faster and allows the VE c omponents to understand each other. XML X  X  human readability is another significant advantage for VE.
 spindle horizontal lathes production VE. A supply chain is a globally extended net-work of suppliers, factories, warehouses, distribution centers through which raw ma-terials are acquired, transformed into products, delivered to customers, serviced and enhanced. The different local factorie s are seen as cells, where each one, while oper-ating to achieve its best advantages, coopera tes with other cells to improve the overall performance of the whole system in terms of quality, costs and response time. It is obvious that the key to efficient operations of such a VE is a tight coordination among components.
 or local workflow according to the leader or member role. Then, agents communicate directly by exchanging social constraints, which also support data integrity.
We give some scenarios from the application described above about exchanged social constraints. Indeed, these scenarios show how to benefit from XML technology in
VE.
Let us consider in Fig. 3 an example that specifies the result of the planning, nego-tiation and evaluation operations of the leader activity coordination (global coordi-nating rules). First, the result of the planning operation is the set of goals obtained by the interpretation, decomposition and scheduling of the global goal. Then the result of the planning operation is used as an input for the negotiation operation, which consists of founding the best offer for each goal. Finally, the leader evalu-ates whether the global goal could be reach ed or not using the evaluation opera-tion. Hence, the result of the third operation is to assign definitive roles to selected agents (see Fig. 3) if the evaluation is positive. Thus, this result expresses the VE global goal, whereby some constraints and optimizations are associated to it and the set of roles played by a number of agents permitting achievement of the global goal.
 produce 100 monospindle horizontal lathes . The associated constraints of this goal are delay and dimensions . The execution of the goal may be optimized for time and quality . To argue about whether constraints are satisfied or not, the theory T1 ,which consists of a set of Horn clauses (Anglui n et al. 1990), which will be explained in the next section, can be used. Four agents ( studies, specialized components, treatments and assembly ), each playing some roles, participate in this VE in which the studies agent is the leader.
Let us consider an alternative branches scenario, which is done during a negotiation operation (of Fig. 1a) and involves the leader and a number of competent agents. The goal to be achieved is to assemble mechan ical systems. We si mplify this scenario by considering the leader ( L ) and only one competent agent ( A ). Three stages are required to achieve this scenario: 1. L asks A to achieve a goal using a goal definition; 2. A replies in three ways: it cannot; it can; or it counterproposes; 3. If A accepts or counterproposes and L agrees, then A and L each create an in-stance of obligation using an obligation definition.

The goal definition that is specified in 1 is presented in Fig. 4 as an XML docu-ment. In this example (Fig. 4), L asks A to achieve a goal that consists of assembling mechanical systems. The cons traints that can be meaningfully satisfied in this goal are that the subunit mounting would be complete by bolting X  X crewing and the respect of the required maximum reply time.
 Whatever plan is used for this goal, its execution may be optimized for time. Finally, to reason about whether constraints are satisfied or not, a theory theories can be used. A theory is a set of Horn clauses that can be applied to determine if constraints are satisfied.
 units of time, and theories has a clause:
Now, let us consider another scenario that describes the delegation concept during the execution operation (of Fig. 1b). We suppose that the treatment agent ( A )wants to interrupt the mechanical treatment role (due to a failure) and delegate another agent ( D ) to continue the process. Therefore, this delegation scenario goes through four stages: 1. A asks D if it accepts to delegate it; this request is expressed using the goal 2. if D accepts the delegation principle, then A sends to D a message specifying 3. if D accepts this delegation, it creates an in stance of obligatio n using the obli-4. A informs its leader about this delegation.
 content (second stage of the delegation scenario) that A (treatment agent) sends to D .
In the example of Fig. 5, A plays the mechanical tr eatment role while agent D plays the delegate mechanical treatment role. A describes the delegation detail using an
XML document to send it to D . The delegation object is that D will continue to treat horizontal lathes according to some f eatures. For instance, the model must be two pilot axes and the due date is June, 25, 2003. D does not exceed 5 units of time to reply. Finally, the execution of the delegation may be optimized for accuracy and/or time.
 of obligation (third stage of the delegation scenario) that forces it to achieve the delegation goal. This obligation definition is represented as an XML document in
Fig. 6.
The XML documents presented in Figs. 3, 4, 5 and 6 are well formed because they respect rules defined by the XML speci fication and are valid because they con-form to their XML schemas (which are not represented here).

On the one hand, we have shown how the used concepts in the framework are ex-ploited during the valuation and execution stages of the coordination mechanism and expressed using the social constraint entities. On the other hand, we have shown how to benefit from XML when exchanging messages during coordination processes in
VE. However, XML presents some limits that are inherited from the document field, such as the imposed order and the different possible representations with attributes.
To show the feasibility of SoCCoF, we have implemented a prototype using two standards, XML and CORBA. This prototype provides facilities to manage intra-VE and inter-VE conversations and execute business processes. It runs with JacORB 1.2 that is a CORBA 2.4 ORB with a Java language mapping, JDK 1.3 and XML. cesses are executed locally to each agent.
 ing with the invocation of this agent services by another one. An agent perception interface, which is described using the CO RBA IDL (interface definition language), contains the specification of these agent capabilities. The implementation of this in-terface invokes the underlying component interface, which leads to the execution of the appropriate business process (as shown in Fig. 7).
 thodology for well-controlled data interchange in VE, while CORBA enables creating sophisticated and distributed object systems on heterogeneous platforms.
The distributed, autonomous and heterogeneous nature of information services sets severe technical challenges for VE to provide coherent and compact information.
Several architectures and frameworks dealing with the coordination in open environ-ments were developed by the research community. We present those that are directly relevant to the proposed agent-based framework.

El Fallah-Seghrouchni and Haddad (1996) have proposed a recursive model for the representation and the handling of plans by means of recursive Petri nets. This re-cursive model and that (MCT) used in our framework are both based on Petri nets.
Furthermore, they present some common properties, like support of concurrent activ-ities, reaction to the environment using plan execution dynamicity, abstract actions, dynamic refinement and interaction resolution using plan coordination. However, the authors assume that no global plan is nece ssary because their approach is based on the paradigm of agent-driven planning. We think that this assumption is not conve-nient for VE applications, where the planning of a global behaviour is necessary.
Marc et al. (2003) have proposed an approach where the principle seems to be similar to ours. The global behaviour of the system is modeled at a given level of abstraction. The paper shows how it is possible to model agents X  plans by means of hybrid automata. The MAS associates with each task to be achieved a graph of dependencies that represents a decomposition of the task into subtasks. The main advantage of the formalism is the control and the validation of both individual and multiagent plans.

In Licci et al. (2001), VE and workflow managements are modeled as coor-dination issues. The TuCSoN model and technology have been introduced for the coordination of Internet agents. An objective coordination X  X hat is, coordination out-side the agents X  X as been used. It seems to provide a more effective support for the three properties: dynamicity, flexibility an d heterogeneity. In our context, contrary to the objective coordination, a subjective coordination X  X ncapsulating social laws directly within agent X  X s adopted, which also provides a more effective support for the three previous properties. Using a subjective coordination leads us to apply effec-tively the collaborating distributed agents in VE management, while the high-level control activity is distributed among all agents.

The developed approach in Jain et al. (1999) addresses the process coherence in a VE. A MAS can be viewed as a sphere of commitments. However, no spe-cific details are given with respect to the heterogeneity issue. Moreover, this ap-proach uses the nested spheres of commitments (SoCom) that are difficult to imple-ment.

In Gal and Mylopoulos (2000), the authors have constructed a layered approach toward distributed heterogeneous information services, where the coordination mech-anism is based on the agent coordinator. The semantic interoperability capabilities are supported at the application layer by using semantic-rich models (e.g. Telos and
Mirror). However, the mapping from the different models to Telos requires much ef-fort and is not usually possible. Furthermore, Telos and Mirror are neither portable nor readable by a human.

Ben-Ameur et al. (2002) have developed an agent-based approach for multimar-ket package e-procurement. Two fundamental levels are considered: the coordination level and the service level. The used coordination is implicit and semi-centralised.
However, the centralized site, which may be a single point of failure, may result in performance problems and scalability issues.

Russel and Norvig have presented an approach (Russel and Norvig 2002) that consists of building rational agents. They have proposed methods for problem solv-ing, ways to represent knowledge and how to reason logically with it and mechan-isms using these reasoning methods to decide what to do, particularly by constructing plans. The authors have used theories, which are different from ours, to give seman-tics for the mechanisms described above. For instance, the first-order logic has been used to reason and plan logically, the utility theory to make simple decisions and the dynamic decision networks to make complex decisions.

Another interesting approach to support the coordination issue in MAS is the coalition formation one. Coalitions are organ izations that provide dynamicity and flexibility to grasp situations of cooperation and competitiveness in open environ-ments (Vauvert and El Fallah-Seghrouchni 2000). Coalitions allow agents to satisfy needs requiring synergy for competences of several agents as, for example, the reso-lution of complex tasks for which agents acting alone would be unable or much less effective. In SoCCoF, the resolution of complex tasks is done through hierarchical organization of agents (Sect. 3.2.1) becau se a member of an organization may again collaborate with other agents and will play the leader role.

VE and WfMS require deployable and flexible infrastructures, enabling the inte-gration of heterogeneous resources and services and coordinating the development of business processes in terms of workflows. As manufacturing becomes increas-ingly reliant on the dynamic formation and management of extended and overlapping
VE, flexible approaches will play an efficient role. In this paper, we have consid-ered a suitable agent-based coordination infrastructure called SoCCoF, which pro-vides abstractions to address heterogeneity of systems supporting different VE par-ticipants and to represent workflow rules as agent coordination laws (social con-straints). This infrastructure may well fit the needs of a VE management in a highly dynamic and unpredictable environment. Preserving the autonomy of participating components is crucial, but unrestraine d autonomy would be risky because it may easily lead to undesirable consequences. Therefore, the social constraints that also express data and flow integrity are necessary components to coordinate the VE busi-ness processes. We have presented a formal coordination framework that goes from the fundamental social constraints (like obligations and interdictions) and concepts (like alternative branches and delegation) to the actual structured conversations by which agents directly interact. Indeed, t his framework seeks a coherent state in the ongoing interactions of the particip ating components. In addition to the pro-posed coordination infrastructure, the paper reports on a prototype implementation of the suggested framework. This prototype supports an efficient exchange of re-quests for services and processing of rules, due to the richness of mechanisms and concepts considered in the framework. F urthermore, the used communication lan-guage, XML, enabled us to prototype quickly the system and build running ver-sions demonstrating the required behaviour. We have found the approach explain-able to and usable by industrial engineers interested in modeling manufacturing pro-cesses.
 need clear semantics. One thing we are looking for is using the appropriate formal-ism, like deontic logic. For example, the failure action really denotes a complete nonaction in the sense that no action from the set of atomic actions is selected to be performed. On the other hand, our framework is designed only to be supported by the CORBA middleware. In order to permit software components and applications to communicate despite the heterogeneity of their operating systems, technologies, and programming languages and to use HTTP, which is supported by all Internet browsers and servers, we hope to integrate SOAP (Introduction to SOAP 2003), which is an XML-based protocol.

