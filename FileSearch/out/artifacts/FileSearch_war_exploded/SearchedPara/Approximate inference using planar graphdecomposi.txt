 Graphical models are a powerful tool for modeling multivariate distributions, and have been suc-cessfully applied in various fields such as coding theory and image processing. Applications of graphical models typically involve calculating two types of quantities, namely marginal distribu-tions, and MAP assignments. The evaluation of the model partition function is closely related to calculating marginals [12]. These three problems can rarely be solved exactly in polynomial time, and are provably computationally hard in the general case [1]. When the model conforms to a tree structure, however, all these problems can be solved in polynomial time. This has prompted exten-sive research into tree based methods. For example, the junction tree method [6] converts a graphical model into a tree by clustering nodes into cliques, such that the graph over cliques is a tree. The resulting maximal clique size (cf. tree width ) may nevertheless be prohibitively large. Wainwright et. al. [9, 11] proposed an approximate method based on trees known as tree re-weighting (TRW). The TRW approach decomposes the potential vector of a graphical model into a mixture over spanning trees of the model, and then uses convexity arguments to bound various quantities, such as the partition function. One key advantage of this approach is that it provides bounds on partition function value, a property which is not shared by approximations based on Bethe free energies [13].
 In this paper we focus on a different class of tractable models: planar graphs. A graph is called planar if it can be drawn in the plane without crossing edges. Works in the 1960s by physicists Fisher [5] and Kasteleyn [7], among others, have shown that the partition function for planar graphs may be calculated in polynomial time. This, however, is true under two key restrictions. One is that the variables x i are binary. The other is that the interaction potential depends only on x i x j (where x  X  { X  1 } ), and not on their individual values (i.e., the zero external field case).
 Here we show how the above method can be used to obtain upper bounds on the partition function for non-planar graphs. As in TRW, we decompose the potential of a non-planar graph into a sum over spanning planar models, and then use a convexity argument to obtain an upper bound on the log partition function. The bound optimization is a convex problem, and can be solved in polynomial time. We compare our method with TRW on a planar graph with an external field, and show that it performs favorably with respect to both pairwise marginals and the bound on the partition function, and the two methods give similar results for singleton marginals. Given a graph G with n vertices and a set of edges E , we are interested in pairwise Markov Random Fields (MRF) over the graph G . A pairwise MRF [13] is a multivariate distribution over variables x = { x 1 , . . . , x n } defined as where f ij are a set of | E | functions, or interaction potentials, defined over pairs of variables. The x i  X  { X  1 } . Furthermore, we will be interested in interaction potentials which only depend on agreement or disagreement between the signs of their variables. We define those by parameters  X  ij . We use  X  to denote the vector of parameters  X  ij , and denote the partition function by Z (  X  ) to highlight its dependence on these parameters.
 A graph G is defined as planar if it can be drawn in the plane without any intersection of edges [4]. With some abuse of notation, we define E as the set of line segments in &lt; 2 corresponding to the edges in the graph. The regions of &lt; 2 \ E are defined as the faces of the graph. The face which corresponds to an unbounded region is called the external face . Given a planar graph G , its dual graph G  X  is defined in the following way: the vertices of G  X  correspond to faces of G , and there is an edge between two vertices in G  X  iff the two corresponding faces in G share an edge. If the graph G is weighted, the weight on an edge in G  X  is the weight on the edge shared by the corresponding faces in G .
 A plane triangulation of a planar graph G is obtained from G by adding edges such that all the faces of the resulting graph have exactly three vertices. Thus a plane triangulated graph has a dual where all vertices have degree three. It can be shown that every plane graph can be plane triangulated [4]. We shall also need the notion of a perfect matching on a graph. A perfect matching on a graph G is defined as a set of edges H  X  E such that every vertex in G has exactly one edge in H incident on it. If the graph is weighted, the weight of the matching is defined as the product of the weights of the edges in the matching.
 Finally, we recall the definition of a marginal polytope of a graph [12]. Consider an MRF over a graph G where f ij are given by Equation 2. Denote the probability of the event I ( x i = x j ) under can be obtained under some assignment to the parameters  X  ij . For a general graph G the polytope M ( G ) cannot be described using a polynomial number of inequalities. However, for planar graphs, describe M ( G ) (see [3] page 434). The triangle inequalities are defined by 1 Note that the above inequalities actually contain variables  X  ij which do not correspond to edges in the original graph G . Thus the equality M ( G ) = TRI ( n ) should be understood as referring only to the values of  X  ij that correspond to edges in the graph. Importantly, the values of  X  ij for edges not in the graph need not be valid marginals for any MRF. In other words M ( G ) is a projection of TRI ( n ) on the set of edges of G . It is well known that the marginal polytope for trees is described constraints, that characterize the polytope. In this sense, planar graphs and trees may be viewed as a hierarchy of polytope complexity classes. It remains an interesting problem to characterize other structures in this hierarchy and their related inference algorithms. The seminal works of Kasteleyn [7] and Fisher [5] have shown how one can calculate the partition function for a binary MRF over a planar graph with pure interaction potentials. We briefly review Fisher X  X  construction, which we will use in what follows. Our interpretation of the method differs somewhat from that of Fisher, but we believe it is more straightforward. The key idea in calculating the partition function is to convert the summation over values of x to the problem of calculating the sum of weights of all perfect matchings in a graph constructed from G , as shown below. In this section, we consider weighted graphs (graphs with numbers assigned to their edges). For the graph G associated with the pairwise MRF, we assign weights w ij = e 2  X  ij to the edges. The first step in the construction is to plane triangulate the graph G . Let us call the resulting graph G T . We define an MRF on G T by assigning a parameter  X  ij = 0 to the edges that have been added to G , and the corresponding weight w ij = 1 . Thus G T essentially describes the same distribution as G , and therefore has the same partition function. We can thus restrict our attention to calculating the partition function for the MRF on G T .
 As a first step in calculating a partition function over G T , we introduce the following definition: a set of edges  X  E in G T is an agreement edge set (or AES) if for every triangle face F in G T one of the following holds: The edges in F are all in  X  E , or exactly one of the edges in F is in  X  E . The weight of a set  X  E is defined as the product of the weights of the edges in  X  E .
 It can be shown that there exists a bijection between pairs of assignments { x ,  X  x } and agreement edge sets. The mapping from x to an edge set is simply the set of edges such that x i = x j . It is easy to see that this is an agreement edge set. The reverse mapping is obtained by finding an assignment x such that x i = x j iff the corresponding edge is in the agreement edge set. The existence of this mapping can be shown by induction on the number of (triangle) faces.
 sponds to an AES denoted by  X  E it is easy to see that implies that Z (  X  ) = 2 c P  X  E  X   X  Q ij  X   X  E w ij , and is thus proportional to the sum of AES weights. To sum over agreement edge sets, we use the following elegant trick introduced by Fisher [5]. Construct a new graph G PM from the dual of G T by introducing new vertices and edges according to the following rule: Replace each original vertex with three vertices that are connected to each other, and assign a weight of one to the new edges. Next, consider the three neighbors of the original vertex 2 . Connect each of the three new vertices to one of these three neighbors, keeping the original weights on these edges. The transformation is illustrated in Figure 1.
 The new graph G PM has O (3 n ) vertices, and is also planar. It can be seen that there is a one to one correspondence between perfect matchings in G PM and agreement edge sets in G T . Define  X  to be the set of perfect matchings in G PM . Then Z (  X  ) = 2 c P M  X   X  Q ij  X  M w ij where we have used the fact that all the new weights have a value of one. Thus, the partition function is a sum over the weights of perfect matchings in G PM . Finally, we need a way of summing over the weights of the set of perfect matchings in a graph. Kasteleyn [7] proved that for a planar graph G PM , this sum may be obtained using the following sequence of steps: the following two key points: the partition function of a binary MRF over a planar graph with interaction potentials as in Equation 2 may be calculated in polynomial time by calculating the determinant of a matrix of size O (3 n ) . An important outcome of this result is that the functional relation between Z (  X  ) and the parameters  X  ij is known, a fact we shall use in what follows. Given a non-planar graph G over binary variables with a vector of interaction potentials  X  , we wish to use the exact planar computation to obtain a bound on the partition function of the MRF on G . We assume for simplicity that the potentials on the MRF for G are given in the form of Equation 2. Thus, G violates the assumptions of the previous section only in its non-planarity. Define G ( r ) as a G and some its edges. Denote by m the number of such graphs. Introduce the following definitions: assume that the parameters for G ( r ) are such that Then, by the convexity of the log partition function, as a function of the model parameters, we have Since by assumption the graphs G ( r ) are planar, this bound can be calculated in polynomial time. Since this bound is true for any set of parameters  X  ( r ) which satisfies the condition in Equation 5 and for any distribution  X  ( r ) , we may optimize over these two variables to obtain the tightest bound Also, define the optimum of the above w.r.t.  X  by h (  X  ) . Thus, h (  X  ) is the optimal upper bound for the given parameter vector  X  . In the following section we argue that we can in fact find the global optimum of the above problem. of  X  ( r ) , and the constraints are linear, the overall optimization is convex and can be solved effi-ciently. In the current implementation, we use a projected gradient algorithm [2]. The gradient of f (  X  ,  X ,  X  ( r ) ) w.r.t.  X  ( r ) is given by where k ( i, j ) returns the row and column indices of the element in the upper triangular matrix of Since the optimization in Equation 7 is convex, it has an equivalent convex dual. Although we do not use this dual for optimization (because of the difficulty of expressing the entropy of planar models solely in terms of triplet marginals), it nevertheless allows some insight into the structure of the problem. The dual in this case is closely linked to the notion of the marginal polytope defined in Section 1. Using a derivation similar to [11], we arrive at the following characterization of the dual where  X  ( r ) (  X  ) denotes the parameters of an MRF on G ( r ) such that its marginals are given by the pointwise maximum over (linear) convex functions in  X  and is thus convex in  X  . It therefore has no of  X  . Using a derivation similar to that in [11], the gradient of g (  X ,  X  ) can be shown to be Since the partition function for G ( r ) can be calculated efficiently, so can the entropy. We can now summarize the algorithm for calculating h (  X  ) Note that the minimization w.r.t.  X  ( r ) is not very time consuming since we can initialize it with the minimum from the previous step, and thus only a few iterations are needed to find the new optimum, provided the change in  X  is not too big. The above algorithm is guaranteed to converge to a global optimum of  X  [2], and thus we obtain the tightest possible upper bound on Z (  X  ) given our planar graph decomposition.
 The procedure described here is asymmetric w.r.t.  X  and  X  ( r ) . In a symmetric formulation the minimizing gradient steps could be carried out jointly or in an alternating sequence. The symmetric to the procedure described above. The advantage of this approach is that the exact minimization w.r.t  X  ( r ) is not required before modifying  X  . Our experiments have shown, however, that the methods take comparable times to converge, although this may be a property of the implementation. The optimization problem as defined above minimizes an upper bound on the partition function. However, it may also be of interest to obtain estimates of the marginals of the MRF over G . To obtain marginal estimates, we follow the approach in [11]. We first characterize the optimum of Equation 7 for a fixed value of  X  . Deriving the Lagrangian of Equation 7 w.r.t.  X  ( r ) we obtain the following characterization of  X  ( r ) min (  X  ) : Marginal Optimality Criterion : For any two graphs G ( r ) , G ( s ) such that the edge ( ij ) is in both graphs, the optimal parameter vector satisfies  X  ij (  X  ( r ) min (  X  )) =  X  ij (  X  ( s ) min (  X  )) . Thus, the optimal set of parameters for the graphs G ( r ) is such that every two graphs agree on the marginals of all the edges they share. This implies that at the optimum, there is a well defined set of marginals over all the edges. We use this set as an approximation to the true marginals. A different method for estimating marginals uses the partition function bound directly. We first calculate partition function bounds on the sums:  X  i (1) = P x : x P This method has the advantage of being more numerically stable (since it does not depend on deriva-tives of log Z ). However, it needs to be calculated separately for each variable, so that it may be time consuming if one is interested in marginals for a large set of variables. We study the application of our Planar Decomposition (PDC) method to a binary MRF on a square ditions for exact calculation of the partition function, even though the graph is planar. This problem is in fact NP hard [1]. However, it is possible to obtain the desired interaction form by introducing an additional variable x n +1 that is connected to all the original variables. Denote the correspond- X  i,n +1 =  X  i . It is easy to see that any property of p ( x ) (e.g., partition function, marginals) may be calculated from the corresponding property of p ( x , x n +1 ) . The advantage of the latter distribution is that it has the desired interaction form. We can thus apply PDC by choosing planar subgraphs of the non-planar graph G f . Figure 3: Comparison of the TRW and Planar Decomposition (PDC) algorithms on a 7  X  7 square lattice. TRW There are clearly many ways to choose spanning planar subgraphs of G f . Spanning subtrees are one option, and were used in [11]. Since our optimization is polynomial in the number of subgraphs, we preferred to use a number of subgraphs that is linear in planar subgraphs is to generate disconnected components of the lattice and connect x n +1 only to the external vertices of these components. Here we generate three disconnected components by isolating two neighboring columns (or rows) from the rest of the graph, resulting in three components. This is illustrated in Figure 2. To this set of 2 only of edges from the field node to all the other nodes.
 We compared the performance of the PDC and TRW methods 3 4 on a 7  X  7 lattice . Since the exact partition function and marginals can be calculated for this case, we could compare both algorithms to the true values. The MRF parameters were set according to the two following scenarios: 1) Varying  X   X  For each scenario, we calculated the following measures: 1) Normalized log partition error (log Z alg  X  log Z true ). 2) Error in pairwise marginals 1 | E | P ij  X  E | p alg ( x i = 1 , x j = 1)  X  p true ( x i = 1 , x j = 1) | . Pairwise marginals were calculated jointly using the marginal optimality criterion of Section 5. 3) Error in singleton marginals. We calculated the singleton marginals for the innermost node in the lattice (i.e., coordinate [3 , 3] ), which intuitively should be the most dif-ficult for the planar based algorithm. This marginal was calculated using two partition functions, as explained in Section 5 5 . The same method was used for TRW. The reported error measure is | p alg ( x i = 1)  X  p true ( x i = 1) | . Results were averaged over 40 random trials. Results for the two scenarios and different evaluation measures are given in Figure 3. It can be seen that the partition function bound for PDC is significantly better than TRW for almost all parameter settings, although the difference becomes smaller for large field values. Error for the PDC pairwise marginals are smaller than those of TRW for all parameter settings. For the singleton parameters, TRW slightly outperforms PDC. This is not surprising since the field is modeled by every spanning tree in the TRW decomposition, whereas in PDC not all the structures model a given field. We have presented a method for using planar graphs as the basis for approximating non-planar graphs such as planar graphs with external fields. While the restriction to binary variables limits the applicability of our approach, it remains relevant in many important applications, such as cod-ing theory and combinatorial optimization. Moreover, it is always possible to convert a non-binary graphical model to a binary one by introducing additional variables. The resulting graph will typ-ically not be planar, even when the original graph over k  X  ary variables is. However, the planar decomposition method can then be applied to this non-planar graph.
 The optimization of the decomposition is carried out explicitly over the planar subgraphs, thus limit-ing the number of subgraphs that can be used in the approximation. In the TRW method this problem is circumvented since it is possible to implicitly optimize over all spanning trees. The reason this can be done for trees is that the entropy of an MRF over a tree may be written as a function of its marginal variables. We do not know of an equivalent result for planar graphs, and it remains a challenge to find one. It is however possible to combine the planar and tree decompositions into one single bound, which is guaranteed to outperform the tree or planar approximations alone. The planar decomposition idea may in principle be applied to bounding the value of the MAP assign-ment. However, as in TRW, it can be shown that the solution is not dependent on the decomposition (as long as each edge appears in some structure), and the problem is equivalent to maximizing a lin-ear function over the marginal polytope (which can be done in polynomial time for planar graphs). However, such a decomposition may suggest new message passing algorithms, as in [10]. Acknowledgments
