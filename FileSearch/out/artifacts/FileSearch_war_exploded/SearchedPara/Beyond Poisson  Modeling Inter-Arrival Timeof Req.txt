 What are the major characteristics of job inter-arrival process in a datacenter? Could we develop a tool to create synthetic inter-arrivals that match the properties of the empirical data? Understanding the characteristics of job inter-arrivals is the key to design effec-tive scheduling policies to manage massively-integrated and virtually-shared comput-ing resources in a datacenter. Conventionally , during the development of a cloud-based scheduler, job requests are assumed (1) to be submitted independently and (2) to follow a constant rate  X  , which results in a simple and elegant model, Poisson process (PP). PP generates independent and identically distri buted (i.i.d.) inter-arrival time (IAT) that follows an (negative) exponential distribu tion [5]. However, in reality, how much does this inter-arrival process deviate from PP?
To demonstrate how the real inter-arrival process deviates from PP, we use Fig. 1 to present the histogram of the IAT for 668,000 jobs submitted and collected in an in-dustrial, large-scale datacenter. The r esolution of IAT is 1 microsecond (  X  s, 10  X  6 sec). As Fig. 1(a) shows, the IATs  X  X eem X  to follow an (negative) exponential distribution. However, in logarithmic scale as Fig. 1(b) shows, surprisingly, four distinct clusters (denoted as A , B , C and D ) with either center-or left-skewed shapes can be seen. This distribution (or a mixture of distributions) clearly does not follow an (negative) expo-nential distribution, which is always right-skewed in logarithmic scale and therefore cannot create such shapes. This phenomenon has confirmed that the i.i.d. assumption of PP barely holds since certain job reque sts may depend on one another. For exam-ple, a request of disk-backup may immediately be submitted after a request of Gmail service; this dependency violates the i.i.d assumption and thus invalidates conventional statistical analysis. In this paper we aim at solving the following two problems:  X  P1: Find Patterns. How to characterize this marginal distribution?  X  P2: Pattern-Generating Mechanism. What is a possible mechanism that can gen-
This work brings the following two contributions:  X  Pattern Discovery. Two key patterns of job inter-arrivals are provided: (1) mul- X  Generative Model. We propose H I BM, a  X  X  I erarchical Bundling Model, X  that
The remainder of this paper is organized as follows. Section 2 provides the problem definition, Section 3 details the proposed H I BM, Section 4 provides the discussions and Section 5 surveys the previous work. Finally, Section 6 concludes this paper. In this work, we use the trace from Google X  X  cluster [12], which is the first publicly available dataset that presents the diversity and dynamic behaviors of real-world service requests, from a large-scale, multi-purpose datacenter. The trace contains the scheduler requests and actions recorded from 29 days (starting at 19:00 EST, on Sunday May 1 st , 2011) of activity in a 12,500-machine cluster. Each request submitted by a user forms a job and the trace records approximately 668,000 job submissions. 2.1 Terminology and Problem Formulation First, we define the terminology used throughout this paper.
 Definition 1 (Job type and job instance).  X  X ob type X  represents a certain type of job that can occur once or multiple times, and  X  X ob instance X  is the actual occurrence of a job request.
 For example,  X  X isk-backup X  is a job type that can instantiate several requests; each request (such as  X  X isk-backup at 1:00P.M. on May 2 nd  X ) is a job instance.
 Definition 2 (Job bundle).  X  X ob bundle X  represents the association of two job types  X  if two job types are in the same job bundle, the IATs of their job instances will be correlated.
 Like the example used in Section 1, two job types  X  X isk-backup X  and  X  X mail X  are functionally-associated, and thus they are considered belonging to the same job bundle. In this case, the inter-arrival of each disk-b ackup instance will depend on the occurrence of each Gmail instance.
 Definition 3 (Job class).  X  X ob class X  represents the pri ority (or latency sensitiveness) 3 being the highest priority.

As mentioned in the Introduction, we have two goals:  X  P1: Find patterns. Given (1) the job type j , (2) the time stamp of its i th instance  X  P2: Pattern-generating mechanism. Given the patterns found in P1, design a 2.2 Dataset Exploration We begin this section by illustrating the number of job instances over time in Fig. 2(a). We collect the time stamp of each job instance when it is first submitted to the datacen-ter, and then aggregate the total number of job instances within each hour to construct a dataset of one-dimensional time-series. On average, 959.8 job instances are submitted per hour, and in general, less instances are submitted on the weekends whereas more are submitted during weekdays. Interes tingly, around 2:00 A.M. on May 19 th (Thursday), a burst of 3,152 job instances can be observed, and its amount is approximately three times higher than the amount on typical Thursday midnights.

Discrete Fourier Transform (DFT) is also performed on the job-instance series. Fig. 2(b) provides the amplitude of each discre te frequency, on which we denote four fre-quencies of high power-spectrum amplitudes: 1-week, 5-min, 4-min and 2.5-min. The reason that the 1-week signal has a high amplitude can be explained by the periodic behavior between weekends and weekdays. L ater in Section 3.1, we characterize the periodicity and show that both 5-min and 4-min periods can be found during the job inter-arrivals. 2.3 Class Interdependency Not all jobs are submitted equal: certain job types have higher priority to be scheduled and executed (class-3, e.g. , website services), whereas other jobs do not (class-0, e.g. MapReduce workloads) [12].
 Observation 1. The spike A (1  X  s) in Fig. 1(b) is attributed to the 1  X  s IAT between a class-0 and a class-2 instance.
 As shown in Fig. 2(c), the pattern of class-0 job instances (low priority) is highly similar with the pattern of class-2 instances (high priority), in terms of both trend and quantity. on May 19 th observed in Fig. 2(a). Furthermore, the correlation coefficient between class-0 and class-2 instances is 0.94, which makes us think: what is the IAT between a class-0 and a class-2 instance? Surprisingly, this IAT is exactly 1  X  s , which forms the first cluster in Fig. 1(b). This phenomenon immediately piques our interest: how to characterize and attribute the rest of three clusters ( B , C ,and D ) and the corresponding spikes? The answer lies in the  X  X undling effect X  as we will elaborate in Section 3. In this section, we introduce two major components of H I BM: cross-bundle effects (Section 3.1) and within-bundle effects (Section 3.2). The complete H I BM framework is presented in Section 3.3. 3.1 First Component: Cross-Bundle Effect Multiple periodicities To characterize the periodicity of each job type, we first calculate the IAT between every two consecutive job instances of that job type as follows: j ,and n j is the total number of instances of job type j . Fig. 3(a) shows the histogram of such IATs,  X  j,i . The histogram is symmetric and has a spike at 600 seconds (10 minutes), which means each instance of job type j arrives approximately every 10 minutes with some noise. Therefore, t j,i can be expressed as: where  X  j stands for the period ( e.g. , 10 minutes in this case) and c,i is a random variable representing the  X  X ross-bundle noise. X  As illu strated in Fig. 3(c), the cross-bundle noise ( c,i ) represents the delay of a job bundle from its scheduled time ( i example two job types j and j are in the same bundle. Here, we focus on only the job type j (the red arrows); the within-bundle noise will be elaborated in Section 3.2. In this work,  X  j is estimated by using the median of IATs of job type j ;however,what distribution c,i follows remains unclear for now.
 Observation 2. Multiple periodicities are observed: 4-min, 5-min, 10-min, 15-min, 20-min, 30-min, and 1-hr.
 One question may arise: is this periodic job type a special case, or do IATs of many job types behave like this? To find the answer, we further collect the IATs from all job types and illustrate them by using Fig. 3(b). For better visualization, only periods smaller than one hour are demonstrated. In Fig. 3(b), multiple periodicities are observed, and the two highest peaks are 4-min and 5-min, which matches the DFT results in Fig. 2(b): the frequencies with high amplitudes are 4-min and 5-min. 4-min is also the smallest period that exists in the trace. We would like to point out that the  X 10-min peak X  in Fig. 3(b) seems sharper than the peak in Fi g. 3(a); this is because Fig. 3(b) contains several job types that have the same period (10-min), whereas Fig. 3(a) contains only one such job type.

Now the question is: what random noise c,i will create such IAT distribution shown in Fig. 3(a)? Could we use famous  X  X amed X  distributions, say (negative) exponential or Pareto (power-law), to model this noise? Modeling cross-bundle noise. Among many statistical distributions, we propose to model the cross-bundle noise c,i by using Log-logistic distribution ( LL ), since it is able to model both the cross-bundle noise and the within-bundle noise (Section 3.2), leading to the unified expression in H I BM. Also, it provides intuitive explanations for sporadic, large delays. The Log-logistic distribution has a power-law tail and its defini-tion is as follows.
 Definition 4 (Log-logistic distribution). Let T be a non-negative continuous random variable and T  X  LL (  X ,  X  ) ; the cumulative density function (CDF) of a Log-logistic distributed variable T is , CDF ( T = t )= F T ( t )= 1 1+( t/ X  )  X   X  ,where  X &gt; 0 is the scale parameter, and  X &gt; 0 is the shape parameter. The support t  X  [0 ,  X  ) . Fig. 4(a) presents the cross-bundle noise c,i and three fitted distributions by using Maximum Likelihood Estimate (MLE) [3]. The distribution shows a left-skewed be-havior and sporadically, a few job instances suffer from large delays. This phenomenon is difficult to be captured b y distributions with tails decaying exponentially fast ( e.g. , negative-exponential). On the other hand, the Pareto distribution (a power-law probabil-ity distribution), which is also a heavy-tail distribution, lacks the flexibility to model a  X  X ill-shaped X  distribution. The goodness-o f-fit is tested by using Kolmogorov-Smirnov test [11] with the null hypothesis that the cross-bundle noise is from the fitted Log-logistic distribution. The resulting P-val ue is 0.2441, and therefore we retain the null hypothesis under the 95% confidence level and conclude that the cross-bundle noise follows Log-logistic distribution.

To better examine the distribution behavior both in the head and tail, we propose to use the Odds Ratio (OR) function. Lemma 1 (Odds Ratio). In logarithmic scale, OR ( t ) has a linear behavior, with a slope  X  and an intercept (  X  ln  X  ), if T follows Log-logistic distribution: As Fig. 4(c) shows, the OR of the cross-bundle noise seems to entirely follow the linear line, which serves as another evidence that its marginal distribution follows a Log-logistic distribution. The Log-logistic distribution presents a modified version of the well known phenomenon  X   X  X ich gets richer. X  We conjecture that this phenomenon can be adapted to explain the cross-bundle noise of periodic job instances  X   X  those delayed long get delayed longer . X  If the submission schedule of a job instance is delayed (or preempted) by other jobs with a higher priority, it is likely that this job instance is going to suffer from being further delayed. 3.2 Second Component: Within-Bundle Effect Bundling effect and within-bundle noise The bundling effect represents the temporal dependency between two job types j and j . If the instances of two job types ( e.g. ,Gmail and disk-backup, denoted as job type j and j , respectively) are independent from each other, the correlation coefficient of their IATs should be close to zero. However, as Fig. 5(a) shows, IATs of two job types can be highly correlated; the correlation coefficient (CC) is 0.9894. In this context, each t j,i and t j ,i must share the same c,i due the high correlation. More interestingly, the instances of job type j always occur after the corresponding instance of j , i.e. , t j,i &lt;t j ,i as illustrated in Fig. 3(c).
We further examine the IAT between job type j and j , namely, t j ,i  X  t j,i , referred as  X  X ithin-bundle noise X  ( w,i ). The concept of the within-bundle noise also is illustrated by Fig. 3(c); furthermore, Fig. 5(b) presents a bi-modal distribution of w,i : one peak at 1.5-sec observed from 2:00P.M. to 6:00A.M. and the other at 16-sec observed from 6:00A.M. to 2:00P.M.
 Observation 3. The spikes D 1 (1.5sec) and D 2 (16sec) in Fig. 1(b) are attributed to HiBM X  X  within-bundle noise in the scale of seconds.
 A possible explanation is that the submissions of job type j (class 1, latency-insensitive) are delayed or preempted by other high priority job types during the working hours from 6:00A.M. to 2:00P.M., which creates the second mode (the 16-sec peak). Therefore, we model this bi-modal distribution by using a mixture of two Log-logistic distributions. Fig. 5(c) shows the Q-Q plot between the empirical w,i and samples drawn from the fit-ted Log-logistic mixture. As it can be seen, each quantile of simulated samples matches the empirical w,i very well.

A highly similar situation can be observed from another job bundle, shown in Fig. 5(d)(e)(f). Instead of seconds, as Fig. 5(e) shows, w,i is bi-modal and in the scale of millisecond.
 Observation 4. The spikes C 1 (3ms) and C 2 (5.5ms) in Fig. 1(b) are attributed to HiBM X  X  within-bundle noise in the scale of milliseconds.
 In this case, w,i can also be modeled by a mixture of two Log-logistic distributions as Fig. 5(e)(f) show. For both cases (within -bundle noises in bot h second-and millisecond-scale), Kolmogorov-Smirnov test is performed; the null hypothesis that w,i and the fitted Log-logistic mixture follow the same distribution, is retained under the 95% con-fidence level. In addition, within-bundle noises are also observed in  X  s scale, which forms the cluster (and the spike) B in Fig. 1(b) and can also be modeled by the Log-logistic distribution. This is not shown here due to the space limit. Now we are able to explain and model all the clusters and spikes ( B , C 1 , C 2 , D 1 and D 2 ) with the Log-logistic distribution, leading to the succinctness of H I BM.

Interestingly, even if w,i exists, the IATs of job type j and of j are still highly correlated. The key to create such a phenomenon lies in the hierarchy that cross-bundle noise is always larger than within-bundle noise, c,i &gt; w,i . In the trace, the scale of c,i is approximately in the magnitude of minutes, whereas w,i is in the magnitude of seconds, millisec onds or even microseconds. Based on this observation, we propose a unified model to describe the IATs of two job types in the same bundle, which serves as the backbone of the proposed H I BM: where c,i  X  LL (  X  c, X  , X  c, X  ) , w,i  X  a mixture of two LL distributions, expressed as: p MLE and p w, X  ,  X  w, X  ,  X  w, X  ,  X  w , X  ,  X  w , X  can be estimated by Expect ation Maximization (EM) [3].
 Bundle detection algorithm. After explaining the bundling effect, the next question is how to determine if two certain job types belong to the same job bundle. We ask: given each pair of t j,i and t j ,i , how do we know these IATs, namely, | t j,i  X  t j ,i | ,are caused by within-bundle noises ( w,i ), or just coincidentally by a job instance occurring closely to another instance? What if two job types have different periods? To answer these questions, we propose a metric  X  X xpected occurrence ratio X  (EOR) that compares the empirical counts and the expected counts of within-bundle noises. EOR  X  [0 , 1] and a high EOR value indicates that job type j and j arelikelytobeinthesamejob bundle. The details of the proposed EOR are in Appendix (Section 6). The intuition is similar to hypothesis testing. We examine the EOR between each pair of job types, and the majority of pairs have EOR less than 0.3, whereas other few pairs have EOR very close to 0.8. In this work, we select an EOR of 0.3 as threshold and therefore two job types are considered unbundled if their EOR is less than 0.3. 3.3 Complete H I BM Framework By assembling the cross-bundle effect (Section 3.1) and the within-bundle effect (Sec-tion 3.2) together, we describe here the complete H I BM framework by using Algorithm 1. The inputs to H I BM are user-defined periods, the total duration T , and the parame-ters of Log-logistic distributions as described in Eq (4). In our case, the periods are set according to the empirical data as shown in Fig. 3(b), the T is set to one month as men-tioned in Section 2.2, and the parameters d escribed in Eq (4) are estimated by MLE and EM. For each job type j ,H I BM calculates its total number of instances by T  X  t j ,i or (2) t j,i is in its own job bundle (not bundled with any other job type). In the first case, t j,i is estimated according to Eq (2), whereas in the second case, t j,i is estimated according to Eq (4). The estimated t j,i is recorded in JS for all j and i . Finally, JS is sorted in ascending order and then H I BM outputs JS as job inter-arrivals. We validate H I BM by using the empirical data. The comparisons between the synthetic IATs generated by H I BM and empirical IATs are illustrated by Fig. 6. Fig. 6(a)(b) present the histogram of the empirical IATs and the synthetic IATs side by side. As it Algorithm 1. H I BM Generation can be seen, the synthetic IATs match the dis tinct characteristics of the empirical IATs: the job-instance counts (only 0.3% difference), the four clusters, and all the spikes ( A , B ,
C that each quantile of the synthetic IATs matches the corresponding quantile from the empirical data very well.

We begin the discussion with H I BM X  X  succinctness. H I BM requires only a handful of parameters as described in Algorithm 1 to generate job inter-arrivals that match the characteristics from the empirical data, even when the i.i.d. assumption is violated  X  the submissions of certain instances depend on one another. Therefore, H I BM can be used as a tool to create more realistic job inter-arrivals to design, evaluate, and optimize the cloud-based scheduler of a datacenter.

Also thanks to H I BM X  X  interpretability, we now understand the four distinct clusters observed from the empirical data can be attributed to both class interdependency ( A : tion, the 3ms and 5ms spikes ( C 1 and C 2 ) can be attributed to the within-bundle noise shown in Fig. 5(e), and similarly 1.5sec and 16sec spikes ( D 1 and D 2 ) can be attributed to the within-bundle noise shown in Fig. 5(b). Furthermore, the cross-bundle noises in H
BM provides intuitive explanation  X   X  X hose delayed long get delayed longer X   X  for the delays occurred on periodic job instances. Many papers have attempted to model the sequential and streaming data. Leland et al. [10], Wang et al. [14], and Kleinberg et al. [8] have addressed the issues of self-similar and bursty internet traffic. Saveski et al. [13] has adapted active learning to model the web services. Benson et al. [2] has proposed a network-level, empirical traffic generator for datacenters. Ihler et al. [7] has proposed a time-varying poisson process for adaptive event detection. However, none of these work has addressed the issue of inter-arrivals with both periodicity and bundling effects.
Regarding to the Log-logistic distribution, it has been developed and used for sur-vival analysis [9,1]. Recently, prior work has demonstrated its use in modeling the dura-tion of telecommunication [4] and software reliability [6]. To the best of our knowledge, this is the first work to use Log-logistic distributions to model the delays of job inter-arrivals in a datacenter. In this work, we investigate and analyze the inter-arrivals of job requests in an industrial, large-scale datacenter. Our paper has two contributions:  X  Pattern Discovery. We discover two key patterns of job inter-arrivals: (a) multiple  X  Generative Model. We propose H I BM, a succinct and interpretative model. H I BM Acknowledgements. The authors would like to thank Zhen Tang, Chulei Liu, Ilari shafer, Alexey Tumanov and anonymous reviewers for their valuable suggestions. This material is based upon work supported by the National Science Foundation under Grant No. IIS-1247489, IIS-1217559, and CNS-1314632. The research was sponsored by the U.S. Army Research Office (ARO), Defen se Advanced Research Projects Agency (DARPA) under Contract Number W911NF-11-C-0088, and Google Focused Research Award. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the Na-tional Science Foundation, DARPA, or other funding parties. The U.S. Government is authorized to reproduce and distribute reprints for Government purposes notwithstand-ing any copyright notation here on.
 The expected occurrence ratio (EOR) of job type j and j can be calculated as: where N  X  represents the number of the IATs occurred in the range of the cluster  X   X  {B , C , D} in Fig. 1(b), T is the total duration, LCM (  X  j , X  j ) is the Least Common Multiple (LCM) between two periods  X  j and  X  j , finally  X  j and  X  j are the missing rates
