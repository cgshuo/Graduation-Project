 Web 2.0 sites widely adopt online social networks as the means to connect their users with one another to encourage users to participate in information sharing (e.g., friendship network in Facebook 1 ) as well as to collaborate with one another (e.g., collaboration networks in Wikipedia 2 ). Unlike traditional social networks which involve a single type of nodes or actors and a single relation type, these online social networks are heterogeneous and of large scale , where multiple types of nodes and relations may exist in the same network.

In network analysis, the term  X  X ode X  ref ers to a distinct set of entities [14], a network with different types of objects is therefore called a Multi-Mode Network .
 Example 1. An online social network provides a platform for friends to share photos and videos. There are three types of objects in this network, namely people, photos and videos. This network is therefore a multi-mode network. We would like to make a remark about the modes here. The modes of nodes give an explicit grouping of the nodes. This grouping is however, not always informative as there are other implicit groupings of nodes that are more inter-esting. The implicit structure to be discovered should be orthogonal to the modes of the nodes, and it reveals the implicit groups from the observed interactions among the nodes. Hence, for multi-mode networks, it is important to extract their implicit structures even though the modes are known.

There are also networks with different types of relations, each representing one type of interaction. It is often that multiple relations co-exist between a pair of individuals. For example, a user in the network can send a message to another user, or comment on another user X  X  status. Since each type of interac-tion suggests a different association between two users [5], if we had only one relation to represent different types of interactions, there would have been too much loss in the network information. Therefore, we define a Multi-Relational Network to be one that describes the relatio nship from one object to another as a composition of different relations.
 Example 2. Individuals in the social network, mentioned in Example 1, send messages or comments to one another. Each user may also upload a photo or a video, or comment on others X  photos or videos. There may exist some interaction links between a photo and a video, if they are taken at the same location, or the photo is captured from the video. This network is illustrated by Figure 1, where multiple types of relations and objects can be found.
 The network in Figure 1 is multi-mode and multi-relational at the same time. A network with heterogeneous types of nodes and relations is therefore regarded as a Multi-Dimensional Network . Multi-mode networks and multi-relational networks are just special cases of multi-dimensional networks. The analysis of multi-dimensional networks is known to be harder than simple networks and is currently an active research topic [4].

As social networks grow in size, they become more difficult to analyze as there are many nodes and relation edges. A typical user can only handle less than a hundred of nodes and edges. Beyond that, visualization techniques have to be used [2,8,11]. These techniques usually summarize large social networks into smaller and simpler networks that are human-interpretable. This summa-rization process essentially groups nodes and edges in an original network into a simple network of node clusters and relationships between node clusters. The grouping however is not arbitrary. It ought to preserve information contained in the original network. Otherwise in th e extreme case, the summarized network may consist of only one node cluster containing all nodes and such a summarized network does not help user-interpretation.

Many existing network visualization and summarization techniques [10,7,13,16] are designed mainly for simple social networks, but not for multi-dimensional net-works. Recent works, OntoVis[12] and Fa cetAtlas[3], focus on visualizations of heterogeneous networks. However, OntoVis is mainly designed for multi-mode networks, as edge types are determined by node types and multiple types of relations between two nodes are not taken into consideration. FacetAtlas visu-alizes multi-dimensional networks in multiple facets. But again, their nodes are connected by at most one type of relat ion, i.e., an edge within a facet.
In this paper, we focus on visualizing multi-dimensional networks by designing and implementing a network visual analytics system, called ViStruclizer ,which presents a summarized network structure from a multi-dimensional network as an overlay over the original set of nodes and r elations for human users to interpret. Given that multi-mode and multi-relational networks are special classes of multi-dimensional networks, ViStruclizer also works well on these networks.
In the absence of research in visualizing multi-dimensional networks, we define two key research objectives for the ViStruclizer project. The first objective is to introduce a design framework that can be adopted by ViStruclizer and other future visual analytics systems for multi-dimensional networks. The framework identifies the required system components, their corresponding functionalities and how these components interact with one another. The second research ob-jective is to develop the working visual analytics system and to demonstrate features that support the important visualization requirements. To meet the above objectives, we have three major contributions in this paper, namely:  X  We propose a network visualizer system design framework that covers the  X  We have developed a visualizer called ViStruclizer to realize our proposed  X  We propose a means in ViStruclizer to allow users to exercise their own judg-In this section, we discuss the system design framework of ViStruclizer for multi-dimensional networks in three parts. We first describe the representation of multi-dimensional networks in some high level summary networks in Sec-tion 2.1. This is followed by the architecture framework of ViStruclizer and its components (see Section 2.2). We finally outline the interactive visualization requirements to be supported by ViStruclizer in Section 2.3. 2.1 Summary of Multi-Dimensional Networks Let G =( V,E,M,R,m,r ) denote a multi-dimensional network, where V is the set of vertices, E is the set of edges, M = { M 1 ,...,M t ,... } is the set of vertex modes and R = { R 1 ,...,R s ,... } is the set of relations. The second last element of G , m : V  X  M , is the mapping from vertices to their modes; each vertex V i has a definite mode m ( V i ). Compared to the vertex modes, it is more complicated to represent the edges since an edge is a combination of different type of relations. Thus the last element of G , r : E  X  R 1  X  X  X  X  X  R s  X  X  X  X  , is defined as a mapping from edges to the Cartesian product on R , i.e., r ( E i,j )=( r 1 ,...,r s ,... ), each r s is the number of times the relation R s is observed from vertex V i to V j . For example, r ( E i,j )=(1 , 1 , 2) indicates that E i,j consists of one occurrence of relation R 1 , one occurrence of R 2 , and two occurrences of R 3 . We also denote the value of r ( E i,j ) on relation R s by r s ( E i,j ).

When the network has large number of ve rtices and edges, summarizing them by a representative high level network s tructure becomes necessary. For example, one way to summarize a social network is to group individuals with similar connections into one community, and many social network visualizers focus on density-based community structures, e.g., Vizter [7] and HiMap [13].
As edges are heterogeneous in multi-dim ensional networks, not only is it neces-sary to group similar vertices, but simila r edges are also expected to be grouped. Positional and Role Analysis groups individuals into one position if they be-have similarly, and similar relationships into roles. The structure derived by this analysis treats relationships across different communities as important as relationships within a community, which is more informative than community structures. White, Boorman and Breiger [15] observed that the most informa-tive positional and role analysis requires multiple ties, i.e., a multi-relational network, and they introduced the concept of blockmodel to study roles and posi-tions. Wasserman and Faust [14] defined a blockmodel as a partition of vertices into k positions (vertex clusters). Roles from one position to another are modeled by blocks (edge clusters). Airoldi [1] extended blockmodels to mixed membership blockmodels (MMB), where the position of each vertex is modeled by a prob-abilistic distribution. Dai, Chua and Lim [5] generalized MMB [1] further on multi-relational networks. The blockmodel developed in [5] is called Generalized Stochastic Blockmodels (GSBM), which models (i) the position of each vertex by a probabilistic distribution; and (ii) each block by a multivariate distribution over the set of relations.

Without loss of generality, we assume a structural summary for a multi-dimensional network provides two kinds of clusters, vertex clusters and edges clusters. C = { C 1 ,C 2 ,...,C k } is the set of vertex clusters; for vertex V i  X  V ,  X  i,u is the membership probability of V i assigned to cluster C u , subject to u =1  X  i,u =1.The weight of the cluster C u is the accumulated probability of all vertices assigned to C u , i.e., The weight of mode M t of the cluster C u is proportional to the accumulated probability of all vertices of mode M t assigned to C u , i.e., We also define B = { B u,v | C u ,C v  X  C } astheedgeclustersfrom C u to C v in the structural. Similarly,  X  i,j,u,v is the membership probability of edge E i,j assigned to B u,v , subject to k u,v =1  X  i,j,u,v =1.The weight of an edge cluster B u,v is the accumulated probability of all its edges, that is: where r ( E i,j ) = R are positive. r ( E i,j ) can also be other form of norm. The width of an edge cluster B u,v is logarithmically proportional to the weight of the edge cluster. The weight of relation R s oftheedgecluster B u,v is proportional to the accumulated probability of relation R s , i.e., This is valid with r ( E i,j ) being the 1-norm, and it ought to be altered for other kinds of norm. 2.2 Architecture Framework ViStruclizer takes a multi-dimensional social network as input, and its primary objective is to visualize the network through its structural summary. With ver-tices and edges grouped into clusters wit h some latent semantics, it helps users to understand the original network.
The architectural framework of ViStruclizer is shown in Figure 2. There are three components in ViStruclizer , namely the structure analyzer, the back-end database and the visualizer which serves as the frontend interface of ViStruclizer .
Our objective is to make ViStruclizer general enough to accommodate differ-ent structure analyzers that can return different structural summaries. The struc-ture analyzer in ViStruclizer either takes input directly from a multi-dimensional network or reads the network from the database, and constructs a structural summary to be presented by the visuali zer. The structural summary consists of a mandatory element and another optional element, which will be discussed shortly.

The visualizer component in ViStruclizer takes both the original multi-dimensional network from the database and the structural summary as in-put and presents the network to the users, as shown by the solid arrows in Figure 2. The dash-dotted arrows show that the users can provide their feed-back to ViStruclizer . The user feedback allows the structure analyzer to further refine the structural summary, and presents the network using refined structural summary to the users.

Within the structural summary returned by the structure analyzer, the manda-tory element refers to the cluster members hip for all vertices in the original net-work. If a structure analyzer returns a hard clustering, the cluster membership for a vertex is then its cluster indicators, i.e., cluster id. In ViStruclizer ,wecon-sider mixed cluster memberships derived by soft clustering or fuzzy clustering techniques, e.g. EM algorithm [9], which are widely adopted in cluster analysis. The mixed cluster memberships are typically represented in the form of proba-bilistic distributions, i.e., a vertex is a ssigned to multiple clusters with different probabilities. In Section 2.1, such probabilities are denoted by  X  i,u , which is the probability of assigning vertex V i and cluster C u , subject to k u =1  X  i,u =1. Hence the cluster memberships in the str uctural summary are probabilistic dis-tributions for vertices assi gned to vertex clusters.

The optional element for the structure analyzer is to return the cluster mem-berships for the edges. Similar to the vertex cluster membership, the cluster membership of an edge indicates betw een which pair of clusters the edge be-longs to. If k vertex clusters are extracted by structure analyzer, there exist k 2 edge clusters, representing every possible pairs of k vertex clusters.
If a hard clustering for the vertices is adopted, for an given edge, its edge cluster is defined by the cluster of the source vertex to the cluster of the target vertex. However, when vertices are associ ated with vertex clusters with mixed memberships, the membership distributions of the edges belonging to an edge cluster become more complicated. This is denoted by  X  i,j,u,v in Section 2.1, which is the cluster membership of edge E i,j assigned to cluster pair ( C u ,C v ), subject to k u,v =1  X  i,j,u,v = 1. This issue will be discussed in greater detail in Section 3. For now, we would like to design ViStruclizer to be able to cope with both kinds of edge memberships. 2.3 Interactive Visualization Requirements of ViStruclizer For ViStruclizer to be an effective tool for analyzing multi-dimensional net-works interactively, it has to satisfy a few essential visualization requirements mentioned below: Network Search. Finding a user vertex in a large multi-dimensional network is like searching a needle in the haystack. Vertex search by label and other attributes is therefore essential. Once some target vertices are found, they can serve as the lead to explore the rest of network. When structural summary is available, vertex search ca n also return the vertex clus ters of vertices meeting the search criteria and help users to det ermine the relevance of these vertices. Summary Network Visualization. A summary network consists of vertex clusters and edge clusters, and each cluster has its own salient attributes, i.e., cluster weights, cluster modal weights. These clusters and their attributes should be visualized clearly using graphical p roperties such as shape, color and size. The composition of vertex types and edge types in clusters is also another piece of information to be visually presented clearly. In the visualizer component in ViStruclizer , the size of a vertex cluster is determined by its weight. The width of an edge cluster is also logarithmically proportional to the weight of the edge cluster. We use multiple colors to distinguish different kinds of vertices and relations in a multi-dimensional network. An edge cluster is thus represented by a directed multi-color edge from the sour ce vertex cluster to the target vertex cluster such that each color represents a different relation, and the proportion of each color represents the weight of the corresponding relation. Summary Network Exploration. For a user to find out how vertices are grouped into vertex clusters, ViStruclizer has to support user interactively ex-panding or collapsing vertex clusters. Such a visual operation can be non-trivial for very large vertex clusters each with too many vertices for the user to examine. The main challenge of summary network exploration is therefore to expand the cluster without being overwhelmed by the large number of vertices. This can be achieved by selectively expanding a verte x cluster as opposed to complete vertex cluster expansion. When vertex clusters are derived by soft clustering, one can use a probabilistic threshold to control the extent of vertex cluster expansion by expanding only the vertices with membership probabilities above this threshold. This threshold can be set globally for all vertex clusters, or locally for only one vertex cluster.
 Structure Refinement. Structural summary automatically learnt from multi-dimensional networks may not always match user expectation. When a user dis-agrees with the way a structural summary summarizes the underlying network, she may want to refine the cluster membership distribution of a vertex. Such a re-finement will require the structural summary to be revised based on user input. We therefore require the structure analyzer to be semi-supervised . Depending on how the structure analyzer clusters th e vertices, the change in one vertex X  X  membership distribution may cause change in others X  membership distributions. As the structure analyzer refines the summary structure, the visualizer has to update the summary network accordingly with three kinds of interactions: i) change the membership distribution o f one or more vertices; ii) create a new cluster, and indicate several members of the cluster; and iii) merge two existing clusters. Based on our proposed framework, a working ViStruclizer has been developed with its visualizer and structure analyzer components implemented in Javascript and C++ respectively. ViStruclizer uses MySQL database system for backend storage. In this section, we demonstrate the capabilities of ViStruclizer using a multi-dimensional network extracted from IMDb. 3.1 The IMDb Network and Its Structure We focus on the people involved in the movie industry and their network. There are more than 4 million of them and their network is very sparse. In our case study, we selected a denser subset of the network as follows. We started with a set of eleven directors, James Cameron, Chr is Columbus, Jon Favreau, Ron Howard, Doug Liman, Christopher Nolan, Guy Ritchie, Martin Scorsese, Steven Soder-bergh, Steven Spielberg and David Yate s. These directors directed 73 movies from year 2000 to year 2010. We then further expanded to 486 people, in-cluding directors, producers and actors/actresses, who are involved in at least two of the 73 movies. There are 3 modes for people in this network, namely, actors/actresses , directors and producers .

We also established three relations among the 486 people, i.e., collaborate , direct and work for . For each movie, relation collaborate is observed among actors/actress, among directors, or among producers; relation direct is from directors to their directed ac tors/actresses; and relation work for is observed from both actors/actresses and direct ors to producers. Therefore, this IMDb network is a multi-dimensional network with three modes and three relations.
We then incorporate the st ructure analyzer GSBM into ViStruclizer to vi-sualize the extracted IMDb network. Empirically, we set the number of vertex clusters in the resultant structural summary to be k = 6. Besides grouping vertices into six vertex clusters, GSBM also returns edge clusters membership distributions, which is the optional element mentioned in Section 2. In GSBM, the probability of observing r ( E i,j )inedgecluster B u,v is given by where B u,v,s is the Poisson parameter of edge cluster B u,v on relation R s .There-fore, the probability of r ( E i,j ) being modeled by B u,v is Hence, the edge cluster memb ership distribution for edge E i,j is determined.
Again, this component is optional, and not every structure analyzer provides this functionality. For those structure analyzers which do not have this compo-nent, ViStruclizer simply takes  X  i,j,u,v =  X  i,u  X  j,v with the assumption that the probabilities of observing any particular edge in all edge clusters are the same. 3.2 Visual Representations The summarized network structure of our IMDb network is shown in Figure 3. Each vertex cluster is represented by a p ie chart with a user-assigned cluster label, size and pie segments determined by the weight and modal weights of the vertex cluster respectively (as computed using Equation 1 and 2). Different colors are assigned to different vertex modes, i.e., magenta for actors/actresses ,royal blue for mode directors and purple for producers .

There are two producer clusters, the active producers who produce relatively more movies, and the other consisting of producers who may also act in the movies, as shown by the magenta sector in the pie chart of the cluster producers in Figure 3. Actors and actresses are divided into three clusters, i..e,  X  X arry potters X ,  X  X cean X  X  11/12/13 X , and  X  X ther actr/ess X . The first and second groups act in Harry Potter series and Ocean X  X  ser ies respectively, while the third group includes the others. The royal blue pie chart represents the directors cluster.
Between two vertex clusters are edges rep resenting edge clusters. The width of the edge represents the weight of the corresponding edge cluster (the self-loops on each vertex cluster are omitted), as computed by Equation 3. Three colors are also used for three relations, green for collaborate ,bluefor work for and red for direct . The proportions of the three colors tell how the two vertex clusters are related. 3.3 User Interactions in the IMDb Network The visual representation of the original network and summary network in ViStruclizer is meant to be interactive. Using the control panel at the bottom of screen (see Figure 3), one can control the expansion threshold values to be used, select the relations to be included in t he visualization, search vertices, and perform other operations on the network.

Figure 4 shows how ViStruclizer looks like after the  X  X irectors X  cluster gets expanded. An edge between the expande d vertex cluster and another vertex cluster is broken down into edges between vertices and the vertex cluster. Sim-ilarly, the edge between a vertex and a vertex cluster is aggregated from edges linking this particular vertex and all vertices in the vertex cluster. By adjusting the expansion threshold, one can choose to only expand the vertices assigned to clusters with high membership probabilities. ViStruclizer also allows any se-lected vertex to be placed at the center of the screen to use it as the focus.
One can change the membership probabilities  X  i,u of a selected vertex V i by invoking a membership refinement function. As shown in Figure 5, the mem-bership probabilities of the selected vertex in different vertex clusters can be displayed in a radar chart. Each radial axis of [0,1] value range corresponds to a vertex cluster and one can choose any point along the axis. The membership probabilities  X  i,u will then be recomputed so that the sum remains 1, and the visualization of the vertex clusters and t he edge clusters will altered accordingly. This paper presents ViStruclizer , a network visual analytics system designed and implemented based on a framework for visualizing multi-dimensional net-works using their summary network structures. Multi-dimensional network mod-els are new in social network analysis and there have not been many visualization techniques specially designed for them. ViStruclizer represents one of these pio-neering efforts. With the incorporation of a structure analyzer, which performs positional and role analysis, ViStruclizer effectively allows users to explore a multi-dimensional network along with its summary network. Its visualization capabilities on an IMDb network have also been demonstrated. To carry this work further, we plan to improve the structure analyzer and visualizer compo-nents. In particular, other network models for multi-dimensional networks and efficient learning of these models will be studied. For example, if we regard a specific topic as a type of relations, the Twitter 3 network can be visualized by different topics between clusters of user s [6]. The visualizer component can also be improved by introducing new visual constructs that help user to identify interesting communities and anomalies in the networks.

