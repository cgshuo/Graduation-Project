 1. Introduction performance, such as designing personal paging area [3], and developing data allocation strategies [4 and navigation services [8,9].
 [10]. Table 1 shows an example of call detail records, where Uid represents the identi
CDR. 2 Table 1 shows that the CDRs of a mobile user contain both spatial (i.e., base station identi movement patterns from an existing log of CDRs, thereby reducing the overhead of generating a movement log. the frequent movement behavior of users. Fig. 2 shows the movement function of a user for the example above. addressed to ef fi ciently utilize CDRs for mining user movement patterns. 1.1. Extracting frequent movement behaviors from CDRs
Fig. 1 (d) shows). The frequent movement behavior is the trajectory from his home to his of are frequently visited by users. 1.2. Determining the number of regression functions 1.3. Deriving movement functions corresponding movement functions of a user.
 behaviors of mobile users.
 mining user movement patterns. Section 4 presents performance results. Finally, Section 5 draws conclusions. 2. Related works generally classi fi ed into two categories based on their de relationships among base station identi fi cations or pre-de
In the fi rst category, the authors in [12] proposed an information movement logs of mobile users.
 with time information (i.e., transition times between two movements). parameters, such as the calling behavior and thresholds for each algorithm. 3. A regression-based approach for mining user movement patterns 3.1. An overview
Given a log of CDRs, the goal of this article is to derive movement functions that closely re user follows the same movement behavior. Consequently, a basic time slot is de
Therefore, these CDRs are further put in a movement record de 3.1.1. De fi nition: movement record
A movement record is de fi ned as a set of pairs ( BS i : N
BS i in call detail records whose occurring times are within the same time slot. (i.e., 6:00 am to 10:00 am). With the de fi nition of movement records, a movement sequence is de 3.1.2. De fi nition: movement sequence
A movement sequence MS i , denoted by b MR i ,1 , MR i ,2 is the movement record at time slot j in MS i and  X  is an adjustable parameter. indicates that a movement pattern may re-appear. Thus, the value of used in our article. The overall procedure for mining movement patterns is outlined as follows: 3.1.2.1. Execution steps in RUMP 3.2. Algorithm LS: extracting the aggregation movement sequence
In this article, a user movement trajectory is represented as a sequence of base station identi capturing the frequent moving behavior of users and aggregate them as AMS . 3.2.1. De fi nition: large movement record
MR 2, t ,..., MR w , t ) is larger or equal to min_freq .

Given fi ve movement sequences in Table 3 ,if min_freq is set to 2, LMR equal to min _ freq . Large movement records demonstrate the frequent movement behavior of a user at each speci records, which is denoted as LMS = b LMR 1 , LMR 2 ,..., LMR
Once a large movement sequence LMS is determined, we should further formulate the similarity between movement conventional similarity measurements, such as Cosine similarity [26] and extended Jaccard coef and LMS. As such, we formulate the similarity between a movement sequence (e.g., MS movement records MR i , j and LMR j , denoted by C ( MR i , j frequent base stations in LMR j . C ( MR i , j , LMR j ) is formulated as the value of C ( MR i , j , LMR j ), the more closely MR i,j
MR y , j ={ a , b , c , d , e }. It can be veri fi ed that the value of C ( MR movement sequences MS i and LMS is formulated as sim ( MS for each movement sequence MS i ,if sim ( MS i , LMS )  X  min _ sim , the movement sequence MS sequence. Consider the example in Table 3 . It can be veri ( MS 2 , LMS )=3, sim ( MS 3 , LMS )=2, sim ( MS 4 , LMS )=3, and sim ( MS are recognized as similar movement sequences.
 frequent base stations and their associated counts are determined. An aggregation movement sequence is de 3.2.2. De fi nition: aggregation movement sequence
The aggregation movement sequence is denoted as AMS = b AMR record that contains frequent base stations, which are the same in large movement record LMR accumulated from movement records at time slot j of similar movement sequences. is calculated as the sum of the count of A in MR 1,1 , that in MR procedure, we could have AMS = b { A :16, B :1},{ A :3},  X  3.2.3. Time complexity analysis
Given w movement sequences with  X  time slots, the complexity of algorithm LS can be expressed as O (
O (  X  X  ). As a result, the overall time complexity of algorithm LS is O ( Algorithm 1. Algorithm LS 3.3. Algorithm TC: clustering aggregation movement records sequence of AMS is de fi ned as follows: 3.3.1. De fi nition: time projection sequence
A time projection sequence of AMS is expressed as TP AMS = time projection sequence de fi ned as follows: 3.3.2. De fi nition: clustered time projection sequence A clustered time projection sequence of TP AMS , denoted by CTP the time slots of the clustered movement records, and k is an integer such that 1 TC generates a clustered time projection sequence of AMS (i.e., CTP clustering is to bound the variance of time slots in each group with a given threshold (i.e., min_var ).
The variance of a group CL i is de fi ned as Var CL i  X  X  = movement records in CL i and the total number of movement records in CL sequence CTP AMS such that Var ( CL i )  X  min _ var for all clusters CL To achieve the objective of clustering, algorithm TC fi rst starts coarsely clustering TP cluster CL i ,if Var ( CL i ) is smaller than min_var , the cluster CL the time slots in unmarked clusters with the updated value of remain or until  X  =1. If there are no marked clusters, CTP variance values larger than min_var , algorithm TC continues to marked cluster is constrained by the threshold value of min_var .
 with this problem, this cluster must be further partitioned into smaller clusters. The variance of each re smaller than min_var . Moreover, to guarantee that no time slots of each re
Proof. Suppose that b 1,2,3,..., n N is divided into k sub-clusters:
Var = Var ( b t i  X  1 +1,..., t i N ). Our goal is to fi nd the cutting points (i.e., t clusters with two sequences of consecutive time slots: b 1,2,3,4,5
Var ( b 7,8,9,10,11 N ). Since Var b 1 ; 2 ;:::; n N  X  X  = 1
To minimize f =  X  From the derivation above, the optimal way to divide b 1,2,3,..., n clusters each with size of n k .  X  iteration, a marked cluster is evenly divided into k sub-clusters, each with size of marked cluster will be further re fi ned into smaller sub-clusters. Consider the execution scenario in Table 4 , where the time projection sequence is TP initial cluster is b 1,2,3,4,5,9,10,14,17,18,20 N . Given min _ var =1.6, algorithm TC clusters. Table 4 shows that two marked clusters (i.e., b ( b 2, and these two marked clusters are re-examined. In the following run, the previous cluster clusters, i.e., b 14 N and b 17,18,20 N in this run. Since Var ( remain unmarked. Following the same procedure, algorithm TC partitions marked clusters until that b 1,2,3,4,5 N is still a marked cluster with Var ( b value of k is initially set at 1. Since Var ( b 1,2,3,4,5 divided into b 1,2,3 Nb 4,5 N . Of these two clusters (i.e., b 1,2,3 N is compared with the value of min_var . Since the Var (
Finally, a CTP AMS is generated as b 1,2,3 N , b 4,5 N , b 3.3.3. Time complexity analysis
Algorithm TC is of polynomial time complexity. Let TP AMS from lines 5 to 15. From lines 17 to line 25, assume that there are still s clusters with m numbers to be re Algorithm 2. Algorithm TC 3.4. Algorithm MF: deriving movement functions movement behaviors of mobile users. For each cluster, we need to derive con represented as b U 0 ( t ), E 1 ( t ), U 1 ( t ), E 2 ( t ),..., E and U i ( t ) is the linkage movement function from E i ( t )to E 3.4.1. Deriving con fi dence movement functions
For each cluster CL i of CTP AMS , the con fi dence movement function of a mobile user, expressed as E the con fi dence movement function is valid for the time interval indicated in TI
Without loss of generality, let CL i be b t 1 , t 2 ,..., t coordinates of base stations and is provided by telecompanies. Hence, given AMS and CTP ( t , x 1 , y 1 , w 1 ),( t 2 , x 2 , y 2 , w 2 ),...,( t n , x (respectively, y-coordinate) of the base station, and w i movement function.
 appearance counts. This is because the more calls a user makes at a base station, the more con
Given data points within a cluster, this article considers the derivation of the  X  ( t , x 1 , y 1 , w 1 ), ( t 2 , x 2 , y 2 , w 2 ) ,..., ( t n sum of squares x =  X  i =1 n w i e i 2 , where e i =( x i  X  must be smaller than the number of data points. The value of m is proportional to the precision of the weighted regression analysis on execution time is not signi available, the value of m should be set as large as possible.
 For ease of presentation, the following terms are de fi ned:
By solving the equation con fi dence movement function E i t  X  X  =  X  xt  X  X  ;  X  yt  X  X  For example, let AMS = b { A :16, B :1},{ A :1},  X  ,{ D :2, F :3},{ H :2} (3, 3) and (5,3), respectively. Given AMS and CTP AMS = b shows. By setting m to 3, the 3-degree polynomial  X  xt  X  X  = a determined by a regression curve that minimize the residual sum error. That is, a there are six data points with their corresponding time slots of 1, 1, 2, 4, 4 and 5, H = weights of the data points are 16, 1, 1, 2, 3 and 2, respectively. Hence, ffiffiffi 1 p , can get a =  X  2.333  X  2.133 0.867  X  0.066) T . Therefore, coordinate axis of the mobile user from t =1to t =5. Similarly, normal equation  X  yt  X  X  =2 : 529  X  2 : 386 t +1 : 021 t 2  X  0 : 105 t 3 . Fig. 3 shows that the con mine user movement patterns.
 Algorithm 3. Algorithm MF 3.4.2. Deriving linkage movement functions
Given the AMS and a cluster of CTP AMS = b CL 1 , CL 2 ,..., CL denoted as F ( t ). F ( t ) is represented as b U 0 ( t ), E cluster CL i of CTP AMS and U i ( t ) is the linkage movement function from E
However, the fi rst time slot may not be included in CL 1 generated for the boundary condition. Otherwise, U 0 ( t ) will not be valid in F ( t ). The same is true for U function is calculated by interpolation (in line 9 of algorithm MF). For example, assume that CTP AMS = b 1,2,4,5 N , b 7,9,10 0.105 t 3 ,[1,5])and E 2 ( t )=(6+1.17 t  X  0.16 t 2 ,3+0 t +0 t last time slot of b 1,2,4,5 N is 5 and the fi rst time slot of cluster ( x =6.35, y =3) is generated by applying E 2 (7). By inner interpolation, we could have U
Similarly, U 2 ( t ) can be determined. After obtaining the con movement function whose time interval includes the given time t .For F ( t )= will be used to predict the location since the given time 4 is within the time interval of E 3.4.3. Time complexity analysis the normal equation by Strassen's algorithm is  X  ( n lg 7 dominates the complexity of algorithm MF. 3.5. Estimating a user's location based on a movement function ( x , y t ), this coordinate can be transformed into a symbol which contains ( x its location and coverage area, it is easy to transform the geometric location ( x symbolic model. 4. Performance evaluation
Section 4.3. 4.1. Modeling user behaviors
User behaviors in a mobile computing environment include movement behaviors and calling behaviors. This section generate user movements.
 thus normalized to 24 hours. In both datasets, the time slot is set to 2 hours and the value of in the x -th subsection of a group is Z ( x )= x  X   X  is determined by the parameter  X  ; the larger this parameter is, the faster the decay is. For brevity, CDR ( calling behavior is modeled as  X  distribution with parameter distribution with  X  =2.
 per call E ( hn / call )isde fi ned as total hop counts number of calls with respect to the network size. Table 6 summarizes the de obtained by an average of twenty experiments. 4.2. Experiments of UMP and RUMP log. To investigate the precision ratio gained by having the additional amount of log data, this study de better to have more uniform calling behaviors to allow the call detail records fully re mining user movement patterns.
 ratio.
 movements, RUMP incurs a smaller execution time. 4.3. Sensitivity analysis of RUMP of thresholds on the mining results. 4.3.1. Impact of w fi distribution. In a Poisson distribution, with a larger value of amount of call detail records tends to increase, thereby re precision ratio of the movement patterns mined by RUMP . 4.3.2. Impact of thresholds in algorithm LS that the RUMP precision ratio tends to increase when the value of min _ freq increases from 0.1 to 0.3. This the RUMP precision ratio decreases when min _ freq exceeds than 0.3. This is because increasing min _ freq min _ freq should be determined empirically. For example, in this experiment, we set min _ freq at 0.3. behavior. With a larger value of min _ sim , only a few movement sequences are identi precision ratio performance. 4.3.3. Impact of thresholds in algorithm TC
RUMP with the values of threshold min _ var varied. This fi RUMP precision ratio is the highest.

Thus, we can set min _ var as 0.75 to obtain the highest RUMP precision ratio. 5. Conclusions movement patterns. The RUMP approach uses three algorithms. First, algorithm LS extracts CDRs that re parameters. Experimental results indicate that RUMP can ef the frequent movement behaviors of mobile users.
 Appendix A. Proof of minimizing residual error sum a linear algebra manner. All elements in W are positive and e is able to be formulated as let A =
B  X  in this article. We can have:
A T Aa  X  = A T B is viewed as the normal equation. By substituting A = ffiffiffiffiffiffi
W p
References
