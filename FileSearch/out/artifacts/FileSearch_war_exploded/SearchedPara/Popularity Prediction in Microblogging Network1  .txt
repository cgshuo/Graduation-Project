 Online social networks have become increasingly important for information shar-ing and interpersonal communication. R ecently, the study of predicting the pop-ularity of online content in social networks has drawn much attention because of its remarkable practical value in a variety of business and administrative ap-plications, including media advertising [1, 2], trend forecasting [3, 4] and under-standing the collective behaviors of users [5 X 7] etc. Future popularity of online content indicates the intensity with which people would react and hence has the potential to influence polity decisions.

Popularity prediction in microblogging network aims to predict the future popularity of a tweet based on the observation in the early stages. It is challenging since there are numerous factors to be co nsidered. Recently, several pioneering work have been made and many features have been investigated [8 X 10]. However, previous studies have not considered the impact of the time of day when a tweet is posted on its popularity in the early stages. Since the user activity varies over time, the post time of a tweet can affect its popularity in the early stages. For example, considering the number of re tweets that a tweet receives in the first hour after being posted, a tweet post ed at 11 am is expected to receive more retweets on average than a tweet posted in midnight, since users are more active in daytime. If we do not eliminate the effect of user activity, we may misinterpret the relative interestingness of a tweet on lybasedontheobservationintheearly stages. Also, users who have not retweeted the tweet but followed those who have already retweeted the tweet could be p otentially useful for prediction. For tweet popularity prediction problem, f eatures from these users have not been fully explored.
 In this paper, we study the popularity prediction problem on Sina Weibo, a Twitter-like microblogging network in China. Different from previous studies, we consider two prediction tasks, which are predicting the popularity of a tweet based on the observation in 1 Hour after being posted (PP1H) or the observa-tion of its first k retweets (PP k R). We investigate a wide spectrum of features including structural features and tempora l features to identify effective features for each prediction task. By utilizing the historical mention relationships, we construct the underlying user network and then extract two groups of structural features, i.e. retweet network features from the network formed by users who have retweeted the tweet and border network features from the network formed by users who have been exposed to the tw eet but not retweeted the tweet. Fur-ther, to mitigate the impact of tweet X  X  post time on its early-stage popularity, we introduce the notation of tweet time and use it to measure the temporal features derived from the observed retweets. The PP1H task is treated as a multi-class classification problem which predicts the popularity range of a tweet, while the PP k R task is considered as a binary classification problem which pre-dicts whether the tweet will be popular in the future. We apply five widely used classifiers for prediction, including Naive Bayes, K-Nearest-Neighbors, Support Vector Machine, Logistic Regression and Bagging Decision Trees. Experimental results show that for PP1H task, bagging decision trees with all features can achieve the best performance and the border network features are more effective than the other two groups of features. For PP k R task, we find that temporal fea-tures are more effective than structural features and the prediction performance of temporal features can be highly improved when measured by tweet time. Note that temporal features can be effortlessly extracted only based on the first few retweets, without need of the knowledge of user network. This provides new in-sights for administrative applications such as media control. Quick decisions can be made effortlessly based on only the observation of the early stages of diffusion process. Our main contributions are as follows: -We study two popularity prediction tasks on microblogging networks, i.e. -We investigate a wide spectrum of features including structural and temporal -We introduce the notation of tweet time and use it to measure the temporal The rest of paper is organized as follows . We review related work in Section 2. In Section 3, we define the research probl ems studied in this paper and present the methods. We give a detailed description of features in Section 4. The results and discussions are presented in Sectio n 5. We conclude our paper in Section 6. Online content exists in various forms such as news articles, videos, hashtags and tweets etc. There have been many studies on predicting the popularity of online content in social networks. In [11], Ts agkias et al. explored five feature sets to predict the comment volume of news articles prior to publication. Lerman et al. [12] modeled users X  vote process on D igg by considering both the interest-ingness and visibility of online content and then use the model for popularity prediction. By investigating Digg and Youtube, Szabo et al. [13] found that the final popularity is highly correlated to the popularity in the early period and then employed a direct extrapolation met hod to predict the long-term popular-ity. Recent studies on microblogging networks mainly include hashtag (or trend) popularity prediction and tweet popularity prediction. Focusing on hashtag pop-ularity prediction, Tsur et al. [3] examined features from the hashtag itself and employed a regression model to predict hashtag popularity on a weekly basis. Further, Ma et al. [4] considered both co ntent and context features and proposed to predict hashtag popularity on a daily basis. They found that the context fea-tures are more effective than content feat ures. For tweet popularity prediction, Hong et al. [8] formulated the popularity prediction problem as a classification task and investigate the important featu res which influence information propaga-tion in Twitter. Bao et al.[9] incorporated the structural characteristics of early adopters of a tweet into models developed in [13] and showed that the prediction accuracy can be significantly improved. Previous studies have not considered the impact of tweet post time on its early-stage popularity. Also, features from users who are exposed to a tweet have not been fully explored in tweet popularity prediction problem. In our study, both of these issues are addressed. In this paper, we focus on predicting the future popularity of a tweet based on the observation in the early stages. Since for most tweets in our dataset, they seldom receive retweets after being posted for 48 hours, hence we use the number of retweets that a tweet receives in 48 hours since been posted to rep-resent its future popularity. In our problem setting, we consider two different definitions of  X  X arly stages X : 1) one hour after the tweet has been posted, 2) when the tweet receives k retweets. Then, we define two prediction tasks: 1. PP1H: P redicting the P opularity of a tweet based on the observation in 1 2. PP k R: P redicting the P opularity of a tweet based on the observation of its For a given tweet s , we denote its future popularity as  X  s . Note that predicting the exact value of  X  s is extremely hard and often not necessary. Hence, we relax the problem and predict the range of popularity. We define a popularity threshold  X  and then define five ranges of popularity: [0 , X / 2), [  X / 2 , X  ), [  X , 2  X  ), [2  X , 4  X  ), [4  X , +  X  ), which represent not popular , marginally popular , popular , very popular ,and extremely popular , respectively. The PP1H task is treated as a multi-class classification problem which predicts the range of tweet X  X  future popularity. Since we use relatively small k in PP k R task, we further relax the problem to be predicting whether the popularity of a tweet will exceed  X  ,which is a binary classification problem.
 Methods. Since the key focus of this research is to identify and evaluate the effectiveness of features for prediction , we apply five widely used classifiers [14] in our experiments: NB (Naive Bayes), KNN (K-Nearest Neighbor), SVM (Sup-port Vector Machine), LR (Logistic Regression) and BDT (Bagging Decision Trees). Besides the five standard classifiers, we further apply two baseline meth-ods: Random baseline chooses tweet X  X  popularity range randomly with no bias and Distribution bias baseline chooses tweet X  X  popularity range following a prior probability distribution on all ranges. In this section, we first detail features used for popularity prediction, including two groups of structural features and a group of temporal features. Then we give a brief analysis of efforts needed to access t hese features. The features are listed in Table 1. 4.1 Structural Features User Network Construction. To extract structural features, we first con-struct a global user network G =( U,E ) by utilizing the historical mention relationships in the data collection, similar to that in [15]. In G ,auser u  X  U is a node and a directed edge e ( u p ,u q )  X  E from u p to u q is established when u p directed at least m @-messages to u q . This definition is one way of defining a proxy for the attention that user u p pays to other user u q . Here, we empirically set m to 3.
 Retweet Network Features. We illustrate an example diffusion network for a tweet in Fig. 1(a). For a given tweet s , we sort all its observed retweets in ascending time order, forming a chain of retweets C s .Weuse u s i (for i =1 , 2 ,  X  X  X  ) to denote the author of the i th retweet. Specially, we denote the author of s as u . Considering all the observed retweets in C s , we denote the union of tweet nodes in Fig. 1(a)). We consider that users in rU s form a virtual community and the popularity of tweet s can be highly affected by th e social relationships among these users, as well as their followers. By extracting relationships from G , we form a retweet network rG s =( rU s ,rE s ). From rG s , we extract 8 retweet network features. F r 1 is the number of users who have already retweeted s , i.e. | rU s | .Densityof rG s ( F r 2 ), is defined as which is the number of edges divided by the number of possible edges in the retweet network. It is a common feature in graph mining to measure the spar-sity of the graph. Diffusion depth ( F r 3 ) is the longest length of the path from the tweet author u s 0 to users in rU s . Existing study [9] has shown that there exists a strong positive near-linear correlation between the final popularity and the diffusion depth. Reciprocity of rG s ( F r 4 ) is another quantity to specifically characterize directed networks. Link reci procity measures the tendency of vertex pairs to form mutual connections between each other [16]. It is defined as which is the ratio of the number of co-links (links pointing in both directions) to the total number of links. Clustering coefficient of rG s ( F r 5 ) is defined as the average of the local clustering coefficients of all nodes in rU s [17]. Larger clustering coefficient indicates s tronger ties among users. The author-ity score is adopted to measure the influence level of users. Intuitively, if a user is followed or mentioned by many users, he or she is likely to be influential. We calculate the authority scores for all users by performing PageRank algorithm [18] on G . F r 6 is the authority score of tweet author u s 0 . F r 7 and F r 8 are the maximum and average authority score of users in rU s respectively.

Further, by considering only the retweet authors, rU s =  X  k i =1 { u s i } (blue nodes in Fig. 1(a)), we construct a strict retweet graph rG s =( rU s ,rE s ). From rG s , we extract 3 retweet network features, which are the number of connected com-ponents ( F r 9 ), the number of connected components which size is larger or equal to 2 ( F r 10 ) and the maximum size of the connected components ( F r 11 ). Border Network Features. Besides the users who have already retweeted tweet s , users who have not retweeted s but been  X  X xposed X  to s could be potentially very useful for our popularity predicting problem. We denote these users as border users (black nodes in Fig. 1(a)). More formally, based on the global network G , the border users bU s are followers of rU s who still have not retweeted tweet s , i.e. bU s = { u q | X  e ( u p ,u q )  X  E,u p  X  rU s ,u q  X  rU s } .By extracting relationships between rU s and bU s , we construct a border network bG s =( rU s ,bU s ,bE s ), which is a bipartite network. From bG s ,weextract6 border network features.

We extract the number of border users ( F b 1 ), density of bG s ( F b 2 ), reciprocity of bG s ( F b 3 ), maximum and average authority score of border users ( F b 4 and F b 5 ), in the same way as in rG s . Further, analogous to [15], we define that a border user is x -exposed to tweet s if he/she has not retweeted s , but has edges to x other users in rU s . Border users with more exposures to tweet s are expected to be more likely to retweet s .Wedenote A s ( x ) as the set of border users who are x -exposed to s . Then we get the exposure distribution vector F b 6 ,inwhich the x th dimension P ( x )= | A s ( x ) | / | bU s | is the ratio of the number of border users who are x -exposed to s to the total number of border users. Specially, we limit the maximum value of x to be 15 since there are only a few border users whose exposed times are greater than 15. When calculating P (15), we consider border users who have at least 15 edges to users in rU s .
 4.2 Temporal Features Before extracting temporal features, we first examine the hourly variations of user activity in our data collection by investigating the number of tweets posted during a given hour of a day. We show the average number of tweets posted per hour in Fig. 1(b). Clearly, we can see that user activity varies over time, namely that users are highly active during daytime and inactive in midnight. Hence, for a given tweet, the number of its retweets in the first few hours will differ greatly depending on the time of day when it is posted. Specifically, we show the average number of retweets that a tw eet receives in the first hour after being posted in Fig. 1(c) (blue curve). As ca n be expected, tweets posted at higher active periods of a day will on average receive more retweets in the first hour than tweets posted at less active periods . The Pearson correlation coefficients between the blue curve in Fig. 1(b) and the blue curve in Fig. 1(c) is 0.946, which indicates that the number of retweets t hat a tweet receives in the first hour is highly correlated with the user activity. Therefore, if we do not eliminate the effect of user activity, we may misinterpret the relative interestingness of a tweet only based on the observation made in a few hours after it has been posted.
Inspired by [13], we introduce the notion of tweet time to eliminate the effect of user activity, where we measure time not by wall time (seconds), but by the number of posted tweets. We define the tweet time t t as where t is the time of a day, N ( t ) is the average number of tweets posted from the beginning of the day to t and  X  is the average number of tweets posted per time scale. In our data collection, the average number of tweets posted per second is 9, hence when we refer to t t in tweet second,  X  is set to be 9. Similarly, we can measure t t in tweet minute and tweet hour by setting  X  to be 540 and 32400 respectively. By defining tweet time, we can mitigate the impact of tweet X  X  post time on its early-stage popularity. As can be seen from Fig. 1(b), the number of tweets posted during 10am-11am is nearly ten times larger than that during 4am-5am, thus the duration of one tweet second during 4am-5am is ten times longer than that during 10am-11am. Further, we show the average number of retweets that a tweet receives in the first tweet hour after being posted in Fig. 1(c) (red curve). We can see that t he number of retweets slightly changes over the post time, indicating that the e ffect of user activity has been largely eliminated.

From the retweet chain C s , we extract 3 temporal features and use the defined tweet time to measure them. F t 1 is k -dimensional v ector where the k th dimension is the time taken for the k th retweet to arrive. We measure the time intervals between every two adjacent retweets in the retweet chain C s and extract the maximum time interval feature F t 2 and average time interval feature F t 3 . 4.3 Efforts Needed to Access Features Inorder to extractstructuralfeatures,wefirstneedto constructtheunderlying user network. Here, the user network is constructed based on massive historical mention relationships in the data collection. However, since the network evolves with time, the constructed network can be either in complete or inaccura te. Hence, sometime it is hard to access the structural features . On the contrary, temporal features can be effortlessly extracted only based on t he first few retweets, without need of the knowledge of user network. 5.1 Experimental Setting Dataset. We used Sina Weibo dataset published by WISE 2012 Challenge 1 . First, we constructed the global user network based on mention relationships from Jan to Aug 2011. The user network consists of 10.8 million users and 87.1 million edges. Then we selected a subset of tweets that were posted in July 2011 and receive at least 10 retweets in the first hour after being posted. This gave us a dataset of 51,835 original tweets and 4,645,067 retweets from 1,031,899 users. We reserved 50% of the tweets for evaluation, using the other 50% for training. Evaluation Metrics. For multi-class classification problem PP1H, we use Ac-curacy to measure the performance of each method. For binary classification problem PP k R, we use Macro-Pr (macro-precision), Macro-Re (macro-recall), Macro-F1 (macro-F1 score), Accuracy and AUC (area under ROC curve) to evaluate the prediction performance. We give their definitions as follows. T is the set of testing samples and n = |T | is the number of testing samples. The result vector and y =( y 1 ,y 2 ,  X  X  X  ,y n ) be the ground truth vector. Then where function which returns 1 if the statement X is true and 0 otherwise.
 Implementation Details. We empirically set the popularity threshold  X  =50 and set k in PP k R to be 10. For KNN, we use Euclidian distance and set K = 15. We use the C -Support Vector Classification in LIBSVM [19] with linear kernel to implement a multi-class SVM classifier and empirically set C = 20. The number of decision trees in BDT is 60. 5.2 Results PP1H Task. We show the classification accuracies for all methods in Table 2. For each classifier, we conducted experiments with retweet network features (RN), border network features (BN), t emporal features (T) and all features (ALL) to check the effectiveness of each f eature group. We can see that baseline methods which do not use any feature perform the worst. The best performance is achieved by BDT with all features. Gener ally, for each classifier, the best per-formance is achieved by combining all fe atures. Moreover, we can see that among all feature groups, BN features performs the best and can achieve comparable good performance as all features. The only exception is NB, where the predic-tion accuracy for NB with BN features i s quite low, even worse than baseline methods and combing all features yields a worse performance than only using RN features. One possible reason is that the exposure distribution vector ( F b 6 ) contains too many zeros which makes th e NB classification model imprecise. When removing F b 6 , we observe that the accuracy for NB with BN features has been improved to 0.5444 which further confirms the effectiveness of BN features. PP k RTask. Since bagging decision trees classifier has shown its effectiveness in PP1H task, we also apply it in PP k R task. We compared the performance of BDT with all features with two baselines and present the results in the upper part of Table 3. Obviously, combining all features yields the best performance.
In order to investigate the contribution o f each feature to the prediction per-formance, we performed a stepwise forward feature selection algorithm to identify effective features. The algorithm starts with an empty feature set F 0 and runs iteratively. In the j th iteration of this algorithm, we created feature set F j by adding the best single feature which maximizes the objective function (AUC) to the set F j  X  1 . Since it only selects one feature at a time, this algorithm prevents us from adding more than a single copy of highly correlated features. We show the top-5 features selected by this algorithm in Table 4. We can see that a rela-tive small set of features can achieve comparable performance as all features. It is reasonable that the best single feature is the maximum authority score of users in rU s since if the tweet is posted or retweeted by a user with higher authority, it will have more chance to be seen and retweeted. Note that, two of the top-5 features are from the temporal feature group and there is a significant perfor-mance gain after adding these features. The other two features are from border network feature group which can be inter preted as the number of exposed users and the tie strength between retweet users and border users.

Seeing that the top features are from d ifferent feature gr oups, we further checked the effectiveness of each feature group by removing each feature group and examining how the prediction performance is affected. The results are presented in lower part of Table 3. We can see that the performance drops signif-icantly when temporal features are removed. On the contrary, when retweet net-work features or border network features are removed, the performance slightly changes. That indicates the temporal features contribute greatly to the overall performance and the combination of other features is unable to make up the loss. We highlight this by comparing the prediction performance when using  X  X ll features X   X  X emporal features X  and  X  X ithout temporal features X  of the first k retweets and show the results in Fig. 2(a). Obviously, the best performance is always achieved by combining all the features. Also, we can see that when the temporal features are removed, the performance of the other features slightly changes when k varies. On explanation is that, since we have observed that thebestsinglefeatureforPP k R task is maximum authority score of users in rG s , for a large portion of tweets which gain at least 10 retweets, maximum authority score of users in rU s is equal to the authority score of u s 0 ,whichis unchanged when k varies. It is worth noting that the performance gap between all features and temporal features gradually narrows with the increasing of k . When k = 10, the performance gap has been reduced to 0.0235. Note that, as mentioned before, sometimes it is hard t o extract structural features due to the limited knowledge of underlying user network. However, the temporal features can be effortlessly extracted only based o n the first few retweets. The results in-dicate that we can get a satisfied predict ion performance for predicting whether a tweet will be popular in the future, by only using the temporal features of the first 10 retweets.
 Effectiveness of Tweet Time. To investigate the effectiveness of tweet time, focusing on PP k R task, we compared the predict ion performance of BDT with temporal features extracted from first k retweets which are measured by wall time and tweet time respectively. The results ar e presented in Fig. 2(b). Clearly we can see that temporal features measured by t weet time show better performance for most k , indicating that by introducing the notation of tweet time, the prediction performance of temporal feature s can be significantly improved. In this paper, focusing on popularity prediction on microblogging networks, we studied two prediction problems, i.e. predicting the popularity of a tweet based on the observation in 1 hour after the tweet being posted (PP1H) and the obser-vation of the first k tweets (PP k R). To identify effective features for prediction, we extracted structural features including retweet network features and border network features from the underlying user network, and temporal features from the observed retweets. Further, to mi tigate the impact of tweet X  X  post time on its early-stage popularity, we introduced the notation of tweet time andusedit to measure the temporal features. We treated both prediction tasks as classifica-tion problems and applied five widely used classifiers, i.e. naive bayes, k-nearest-neighbor, support vector machine, logistic regression and bagging decision trees. Experiments on Sina Weibo show that, when predicting the exact range of tweet X  X  popularity (PP1H task), border network features extracted from the users who are exposed to the tweet show the best p erformance. When predicting whether a tweet will be popular in the future (PP k R task), only using the temporal features of the first 10 retweet can achie ve a satisfied prediction performance. Further we show that by introducing tweet time, we can significantly improve the prediction performance of temporal features.

In the future, we will focus on exploring other potential features and devel-oping more effective models for prediction problem.
 Acknowledgments. This work is supported by the Natural Science Foundation of China (61272240, 61103151), the Doctoral Fund of Ministry of Education of China (20110131110028), t he Natural Science founda tion of Shandong province (ZR2012FM037) and the Excellent Middle-Aged and Youth Scientists of Shan-dong Province(BS2012DX017).

