 1. Introduction
Real-time systems can span from microcontrollers in automo-bile engines to very complex applications, such as fl ight control in airport or process control in manufacturing plants. De fi event 1 scheduling in such systems is especially important as it aims towards devising a feasible schedule, subject to event characteristics, timing constraints, and resource requirements, etc. For example, an anti-lock brake system is expected to release a vehicle's brake and prevents dangerous wheel locking in a predictable time interval. This is particularly important when the to enable certain events to complete on time, minimize waiting time, and maximize utilization of resources. Usually, many real-time systems are dynamic and stochastic in nature and rely on dynamic scheduling algorithms to make a sequence of decisions at runtime. In ( Chipalkatti et al., 1989 ), a number of dynamic schemes, e.g. minimum laxity threshold and queue length threshold, had been proposed. These algorithms attempted to reduce the performance degradation by making priorities of events more adaptive. An adaptive weighted round robin was also developed by ( Joutsensalo et al., 2003 ), in which the weight parameters were updated using revenue as a target function.
Another dynamic priority-driven strategy is the earliest-deadline depending on time-based competition. Even though the EDF is known to be optimal in a large class of real-time applications ( Pedreiras and Almeida, 2002 ), it has a higher overhead and is dif fi cult to implement since it requires updating the priority of events at each arbitration. In addition, the EDF scheduling is not adequate in the presence of load variations and nonlinearity in system dynamics. Detail descriptions of the EDF can refer to our recent publication ( Chen and Yen, 2013 ). Moreover, there always exists certain degree of uncertainties in a variety of real-time systems that can affect the reliability of applied scheduling methods. For example, airport timetables are subject to change the EDF scheduling approach and man y others can eventually prevent thesystemfromaccomplishingitsobjectiveef fi ciently.
 life environment, the idea of combining intelligent control with feedback scheduling method has emerged as a promising technology.
Related literatures are reviewed. In ( Matsumoto, 1994 ), a server in a multiple queues polling system was proposed according to the neural network policy. The simulation results showed that this method is quite bene fi cial, especially for asymmetric polling systems. This approach, however, is based on the assumption that the controller has the global knowledge of system states. In ( Papadimitriou et al., 2004 ), authors also presented a learning-automata-based approach for polling in order to improve the throughput-delay performance. The learning automaton updated each client's choice probability, based on the feedback informa-tion. Siripongwutikorn et al. Siripongwutikorn et al., (2005) considered the fuzzy control concept in adaptive bandwidth control for a quantitative packet loss rate to aggregate traf packet switched networks. The fuzzy logic control was used to keep an average queue length at an appropriate value. Recently,
Xia et al. (2008, 2009) also suggested a neural (or fuzzy) feedback scheduling scheme to optimize the overall quality of control of multitasking systems. With a modular architecture, the scheduler mainly consisted of a monitor, a predictor, a regulator, and an actuator. An Elman neural network was also employed to predict the network conditions, and then the control period was dynamically adjusted in response to network utilization. Without resorting to sophisticated control law, the included learning method pref ers simpler algorithms with robust control.

Inspired by the referred researches, the authors have successfully applied the machine learning algorithm in real-time message scheduling ( Chen and Yen 2011 ). The use of radial basis function network (RBFN) as a message scheduling controller (MSC) can effectively prevent possible causes for non-uniform bandwidth allocation among requesting messages and reduce possibilities of untimely service ratio in advance. Nevertheless, RBFN is often considered as a black-box model. This black-box behavior is a serious weakness as it prevents the extraction of relevant information to explain its internal mechanisms. This is the problem of interpret-ability. Instead of the RBFN approach, fuzzy rules can represent human knowledge using linguistic descriptions and bene fi provision of explanation capabilities. As a consequence, the obtained system constitutes a promising and interpretable intelligent model rather than a black box. However, the fuzzy system may suffer from high accuracy is a contradictory issue. It is dif fi cult to trade-off between both properties. Fortunately, it is possible to combine the advantages of fuzzy rules with the learning ability of the RBFN to overcome the drawbacks of them. In this sense, the resulting neuro-fuzzy networks (NFNs) can bring the low-level learning of the RBFNs into the high-level fuzzy systems, and also provide the reasoning characteristic of fuzzy systems into the RBFNs.
This paper thus substantially extends our preliminary work ( Chen and Yen 2011 ) by applying the neuro-fuzzy networks, incorporating with structure identi fi cation and parameter learning at the same time, for multi-class message scheduling.

The rest of the paper is organized as follows. Section 2 introduces the concept and framework of the Message Queue Pool 2 (MQP) model for online multi-class message scheduling. Section 3 gives an overview of the neuro-fuzzy network. Related tunable parameters are also discussed. Detailed design procedures for NFN are described to conform to the goal of MSC in Section 4 . Section 5 reports the results of simulation experiments and conclusions are drawn in Section 6 . 2. Model descriptions
In this section, a multi-class queueing model, consisting of q fi nite-capacity parallel queues and a single server is addressed. Typically, messages arrive at the i th queue Q i , i  X  1,2,, ing to the independent Poisson process with rate  X  i and general independent service rate  X  i . This constitutes the Message Queue Pool. In the MQP, each queue is dedicated to a particular class of messages with the same priority and a class-speci fi c deadline. The deadline, which is very critical in real-time systems, of a message is the point in time before which a message must be served completely. If timing constraints cannot be met, messages could miss their deadlines and cause unpredictable performance degra-dations. Therefore, the queue service policy is responsible to allocate limited resources by dispatching messages from the MQP to achieve the desirable quality of service (QoS). Our goal thus focuses on minimizing the message waiting times W i ( t any time instant t k , especially when messages are bounded by the deadlines. As a result, the goal of the dedicated model is given by minimize  X  8 i ; k  X  i  X  t k  X  ; subject to  X  i  X  t k  X  r messages in Q i . It is obvious that  X  i increases when a message remains un-served. Intuitively, the optimal solutions of Eq. (1) depend on the queue service policy. Actually, Eq. (1) belongs to the category of constrained optimization problems ( Runarsson and Yao 2005 ) and is frequently encountered in a variety of science and engineering applications. However, the exact solutions cannot be obtained analytically. The dif fi culties come from the absence of satisfactory mathematical descriptions of the MQP model. In order to resolve this problem, a controller-plant con fi guration in Fig. 1 has been proposed to form a closed-loop feedback control ( Yen time-varying and uncertain characteristics of the MQP into the which can convert the constrained optimization problems into Nomenclature
The following notations provide some of the additional insights needed for understanding the background literature x
A R n n -dimensional input vector x  X  [x T ,1] T A R n  X  1 augmented input of x y
A R q q -dimensional output vector and q is the number
W i , W i ,H , and W i waiting time, the largest waiting time, and
D i deadline of messages in queue Q i i difference of waiting time and deadline, i.e. W i -D i A ik k th fuzzy membership function of the i th fuzzy rule c i center of the fuzzy membership of the i th fuzzy rule ik width of the k th fuzzy membership function of the i th  X  p  X  c i fi ring strength of the i th fuzzy rule f i signi fi cance of the i th fuzzy rule machine learning problems, is designed to generate a feasible control sequence to minimize  X  i ( t k ) in Eq. (1) .In Chen and Yen 2011 , the RBFN-based message scheduling controller improved scheduling performance and offered very good resistances to workload variations and runtime adaptations. Although our study reported the effectiveness of RBFN in message scheduling, the knowledge acquired by RBFN cannot be readily comprehended. Instead, a promising approach presented in this paper applies the
NFN, which combines the profound learning capability of RBFN with interpretable fuzzy rules, to overcome the aforementioned problems. 3. Neuro-fuzzy network, NFN
The neuro-fuzzy network is a special layer structure of fuzzy systems which maps data from the input space to the output space by fuzzy rules. Usually, there are two fundamental types of fuzzy systems, namely Mamdani model ( Mamdami and Assilina, 1975 ) and Tagaki-Sugeno (TS) model ( Takagi and Sugeno 1985 ). The differences between them lie in the representation of conse-quences, and thus their aggregation methods and defuzzi fi procedures differ accordingly. In the TS model, the consequence part is described as the function of input variables. In further analysis of this study, the TS model is applied as the NFN model to decide the optimal message sequences. A layered structure of NFN, which comprises the input layer, the membership layer, the rule layer, and the output layer, is illustrated in Fig. 2 for reference.
Given a r -rule, n -input, and q -output NFN, the i th fuzzy rule is formulated as
Rule i : If x 1 is A i 1  X  x 1 ;  X  p i 1  X  and  X  and x n is A Then f ij  X  x T e  X  c ij ; j  X  1 ; 2 ;:::; q  X  2  X 
The fuzzy membership function (MF) A ik is characterized by the premise parameter vector  X  p i  X f  X  p ik g k  X  1 ; 2 ;:::; n this study utilizes the Gaussian function as
A ik  X  exp  X  x k c ik  X  polynomial of inputs with consequent coef fi cient vector  X  c input vector x A R n . The projection from input space onto the vector is y  X  [ y 1 , y 2 , ... , y q ] A R q where descriptions, vector  X   X  {  X  p ,  X  c }, where  X  p  X f  X  p i comprises all adjustable parameters of the rule bases. Detail discussions of the NFN structure can also be found in ( Yen 2011 ). aspects, i.e. (1) generating input-output pairs and (2) proposing supervised learning strategy. The former one involves the selection of signi fi cant elements of input vector x and its corresponding target vector u . The latter one concerns with structure identi tion (SI) in the structure space  X  ss and parameter learning (PL) in the parameter space  X  ps . Intuitively, the input patterns and the
MQP and desired goals as much as possible. On the other hand, the optimization processes in  X  ss and  X  ps are carried out by compact NFN structure for ef fi cient parameter adaptation. These issues are discussed further in the following sections. 4. Design phase of NFN to take the application performance into account. Thus, how the signi fi cant inputs and the corresponding target values are de and extracted for message scheduling are discussed for subse-quent learning. 4.1. Input selection such that they can truly re fl ect the queueing characteristics and provide instructive feedbacks from external environments.
Although many quantities can be possible candidates, not all of them are important since some of them may be correlated, noisy, or no critical relationship with the output quantities. According to elements. If W i ,H ( t k ) is greater than the prede fi ned D constraints for the succeeding messages in Q i are de fi nitely violated. In other words, the larger the value of W i ,H ( t the probability of untimely service. In this sense, W i ,H a valuable assessment for the NFN to evaluate the QoS of the given
MQP. However, the inclusion of W i ,H ( t k ) is insuf fi changes in queue length can be too fast to track under variant temporal behaviors of the aggregated messages in queues. In fact, tracking the mean waiting time allows the allocated bandwidth to adapt to the message traf fi c. Accordingly, W i ,H and W considered as the input quantities in this study.
 the input vector is expressed as x ( t k )  X  [  X  1 ( t k ) n  X  2 q , and  X  t
 X  X  1 D
After Eq. (5) is properly determined, the corresponding target vector should also be extracted to provide useful information for further supervised learning. 4.2. Target selection In the NFN, the winner output J indicates that messages in Q gains the service. The class label of J is given by
J  X  arg max
From the classi fi cation respective, the supervised learning intends to minimize the empirical errors between target output u and network output y such that  X  i in Eq. (1) is minimized. Therefore, mulation ; no Unfortunately, there is no a prior knowledge about u in Eq. (7) .
In the following discussions, two kinds of learning, i.e. type I learning and type II learning, are devised to deduce target outputs.
In essence, type I learning ensures a fair bandwidth sharing among queues, while type II learning tries to remedy scheduling errors. As a consequence, type I learning can be viewed as a priori learning and type II learning amounts to a posterior learning. 4.2.1. Type I learning
To initiate type I learning, a global information function which measures waiting time variance among queues is calculated as  X  t
 X  X  1 q 1  X  q bandwidth allocation can be unfair among requesting messages. In the long run, the waiting times of some queued messages increase drastically). Hence, the NFN should be noti fi ed and appropriate bandwidthforcertainmessagessho uld be allocated to avoid possible time. Consequently, the corresponding target output is given by u  X  t  X  X  1 S 4.2.2. Type II learning
However, the occurrences of untimely service ratios are inevi-table, especially when some queues dominate the limited resource or message traf fi cs in the heavy load. In the worst case, many messages can starve forever. In this situation, the NFN needs a prompt recovery through effective learning. To resolve these problems, type II learning is invoked to remedy these failures.
Certainly, the corresponding target output is u  X  t  X  X  1 S
Obviously,thedifferencebetweenEqs. (9) and (10) lies in their numerators. In summary, both kinds of learning provide complemen-tary bene fi ts (1) to prevent possible causes for non-uniform band-4.3. SI and PL
As long as the inputs (Eq. (5) ) and the corresponding outputs (Eqs. (9) or (10) ) are appropriately de fi ned, an online learning proceeds by emulating a skilled human operator. The online learning consists of structure identi fi cation (SI) and parameter learning (PL). In the SI stage, the search in the structure space refers to fi nding an optimal structure such that a parsimonious fuzzy model is established. Therefore, structure identi fi involves partitioning the input space properly and determining is decided with best-effort as well as human experience. Certainly, an improper structure can lead to impaired performance. For example, too few fuzzy rules may be inadequate to achieve the desired performance. Too many fuzzy rules, on the other hand, can also induce model over fi tting and a long processing time. In the PL stage, the optimization procedure is used to guide the search of parameters with a speci fi c network structure obtained in the SI stage. This essentially entails a search for a set of parameters { ,  X  c } that endows the network with the desired input-output behavior. In fact, the parameter learning procedure in the structure-dependent parameter space  X  ps strongly depends on the given structure. There, however, can be a lot of structure-parameter combinations which make the fuzzy model behave in a satisfactory way. If SI and PL are exclusively determined without any mutual interactions, the optimization process may exhibit only loose coupling between variables. Furthermore, the feasible num-ber of structure space has a size of exponential dependence on the number of variables. As illustrated in Fig. 3 , each point in represents a possible network structure. This point also maps to a parameter space  X  ps . Likewise, the corresponding number of parameter space is also possibly unlimited. Consequently, the in fi nite combination seriously renders the optimization of SI and PL a NP-hard problem as it cannot be solved in polynomial time ( Oliveira et al., 2005 ).

The aforementioned problem becomes more serious when dealing with online message scheduling. In this case, message fl ows are often time variant or overloaded. A fi xed NFN structure is de fi nitely insuf fi cient to handle these variations. Instead of inde-pendent optimization, both SI and PL should be executed alter-nately to overcome these de fi ciencies, as shown in Fig. 4 . Therefore, the number of fuzzy rules ought to be automatically determined and the corresponding parameters of fuzzy rules are the considered model, adaptations of the network structure and parameters are performed to explore the dynamical behavior of message scheduling schemes.

To automate the design of the NFN, many constructive and destructive algorithms have been reported. While constructive algorithms build network architectures incrementally ( Honavar and Uhr 1993; Parekh 1998; Yang et al., 1999 ), destructive algo-rithms allow arbitrary networks to be pruned decrementally ( Fukumoto et al., 1995 ). In this paper, the authors make use of a minimal resource allocation network (MRAN) approach ( Yingwei et al., 1998 ) and propose the online strategy to optimize the system performance. With the extension of the MRAN method, the derived outputs with supervised parameter learning and adding/pruning fuzzy rules dynamically for online message sche-duling are integrated together. 4.4. Online learning
The online scheduling policy starts with no rule. It converts the fi rst received sample into the fi rst rule. After that the NFN sequentially processes the input samples, following with adding rule, parameter adaptation, or removing rule. In the NFN, any fuzzy rule can be viewed as a fuzzy cluster. In the process of additional/removal rules, the rule fi ring strength (  X  i any rule provides a useful gauge to evaluate the degree of the criterion for generating or removing rules, without requiring additional computations.

The conditions to designate new rule are based on (1) the distance between the current observation and the existing cluster center c i (Eq. (11) ) min (Eq. (12) ). 1
M r
It should be noted that the existing partition space cannot provide suf fi cient representation for local approximation for the current input sample if the distance measure in Eq. (11) is greater than a quite small. The rational, in this case, is to add a new rule.
Furthermore, the purpose of the sliding window in Eq. (12) is intended to reduce the effect of noise and ensure smooth change for the number of rules. Additionally, the effect of the sliding window also gives us time to aggregate prediction error informa-tion which cannot derive from the previous models. If the given are updated by the hybrid approaches. On the other hand, any rule can also be removed whenever its signi fi cance is below a thresh-signi fi cance of the rule's fi ring strength. Therefore, as the normalized output of  X  r by lately received M samples until t k . In formula,
Importantly, Eq. (13) only depends on the rules' parameters and thus its computing is simple and fast. The abovementioned parameter learning and adding/pruning rules are discussed. 4.4.1. Adding rule two parameter vectors  X  p r and  X  c r need to be determined to minimize the output errors. The subscript r denotes the new r th rule. To accommodate time-varying environments for online message scheduling, the initialization of  X  p r and  X  c r
M most recent samples. The value of M is selected to be n  X  1. The rational for this choice becomes clear later.
 initialized according to the moving average of historic samples, profound in fl uence on the performance assessment. Different values lead to different degrees of overlap between neighboring
MFs. If the widths are assigned small values, the network yields a poor representation of the underlying data distribution. On the contrary, large values of  X  rj cause an over-smoothed network's performance. In this paper, a simple and effective method is adopted to calculate the width from the variations of recent M received samples as
From our simulation results, the settings of EqS. (14) and (15) are very informative for the new MF to improve the performance of NFN.

The consequent parameter vector  X  c r  X  X   X  c r 1 ;  X  c r 2 ( n  X  1) n q values to be decided, where  X  c rj A R n  X  1 it can be expected that the new rule should minimize the error e ( t new rule to the j th output be  X  y j ( t k ) and its value can be assumed to satisfy the following condition  X  y  X  t
 X  X   X  y j  X  t k  X  X  u j  X  t k  X  X  0  X  16  X  where y j ( t k ) is attributed to the existing ( r -1) rules. Thus e  X  t  X  X   X  y j  X  t k  X  X   X  r  X  t k  X  x T e  X  t k  X   X  c rj  X  17  X 
De fi ne ~ e j  X  t k  X  X  -e j ( t k )/  X  r ( t k ) and rewrite Eq. (17) as ~ e  X  t  X  X  x T e  X  t k  X   X  c rj  X  18  X  To solve  X  c rj in the above formulation, there should exist at least
M independent measurements and M is equal to n  X  1. After that, a set of M or ( n  X  1) equations can be established as  X  t  X  t  X   X  t 2 6 6 6 6 4 squared-error method is applied to solve  X  c rj for j  X  1,2, 4.4.2. Parameter learning
If Eqs. (11) and (12) are not satis fi ed for the new observation, parameter adaptation is followed for the existing rules. To expe-dite learning ef fi ciency, an optimization procedure based on a learning is interleaving between  X  p and  X  c , as shown in Fig. 5 .In the forward phase, the consequent parameters  X  c are tuned using premise parameters  X  p are adjusted using gradient descent with fi xed 4.4.3. Removing rule
Finally, a pruning strategy is adopted to check any insigni the rule base. 5. Simulations
To illustrate the robustness of the proposed fuzzy scheduling method, two experiments were carried out to verify the effectiveness of the proposed model. In these ex periments, limited capacities scheduling problems with three queues, i.e. q  X  3, was considered.
However, the generalized results to more than three queues are very straightforward. The maximum allowable queued messages K i MSC_NFN, 3 EDF and MSC_RBFN are compared thoroughly, in terms of USRs,numberoffuzzyrules,andqualityofservice,etc.Inthesecond experiment, the performance of the NFN is further investigated with respect to its learning capability. 5.1. First experiment
In this experiment, a 3-queue problem is considered with different queue sizes and deadlines. The queue loads  X  4 are changed from 0.5 to 6. For each value of  X  in [0.5,6] with step size 0.5, 5000 messages are simulated. These messages can belong to any one of the three queues. Due to random natures, each value of  X  is repeated 20 times and the fi nal results are taken to be the average values. In the timing-constrained scheduling problem, a message is timely served if its waiting time is less than or equal to its deadline. On the other hand, a message cannot guarantee its timing constraint is noti fi ed of untimely service. Therefore, the untimely service ratio USR k of Q k is de fi ned as USR k  X 
Apparently, the lower the values of USR, the higher the MSC_NFN are fi rstly compared with the EDF. In all graphs, the USRs are nearly zero when  X  is smaller than one. Since the limited capacity problem is considered, the situations of burst load ( can frequently happen and each queue is instantly full. When becomes larger, the USRs behave differently for MSC_NFN and EDF. First of all, the USRs increase rapidly due to the fact that In fact, the EDF method prefers the messages with the earliest deadline and can result in higher selection probability for those queues with emergent messages. 5 This phenomenon can also be observed in Fig. 7 . In that fi gure, the queue selection probability P 1 of selecting Q 1 for service is higher than the others at the expense of sacri fi cing the service frequencies of Q 2 and Q P tant in order to meet deadline constraints for messages in Q much as possible. As a result, USR EDF 1 is smaller than USR smaller than USR MSC_NFN 1 . To balance quality of service and dead-line constraints, the MSC_NFN cannot only retain lower USRs in a global view point but sustain service quality. As shown in Fig. 6 (b) and (c), USR MSC_NFN 2 and USR MSC_NFN 3 are still lower than USR and USR EDF 3 and the overall USRs of the MSC_NFN in Fig. 6 (d) are de fi nitely lower than those of the EDF. These consequences are mainly attributed to the hybrid effects of type I and II learning to ensure a uniform distribution of waiting times and lower USRs. The theoretical values of queue selection probability P j and P be calculated by the following formulae P P where W 1 is the waiting time of Q 1 and K j is the maximum allowable queued messages in Q j . The results of Eq. (21) are  X  demonstrated in right side of y axis in Fig. 7 and the simulation results are also in good agreement with the theoretical values when the values of  X  become higher. Detail descriptions of Eq. (21) can be found in our recent report ( Yen 2011 ).

Although higher values of USRs are inevitable, the scheduling results of MSC_RBFN and MSC_NFN are still resistant to the variations of Inthecaseof{  X  , q }  X  {6,5}, the USRs can be smaller than 30% when compared with the EDF. Actually, the EDF becomes infeasible (over 72%) in that situation. In addition, the performances of MSC_RBFN and MSC_NFN are fairly comparable. However, the required numbers of RBFs (n_RBFs) and fuzzy rules (n_FRs) are quite different.
In Table 2 , n_FRs are reluctant to increase. In fact, n_FRs can maintain in the range of 1.4 to 4.1, without too much affected by the number of queues. On the other hand, n_RBFs can be larger than 21 especially when  X  or q becomes larger. Importantly, small values of n_FRs always imply cheap design cost and fast computa-tion and n_FRs is not necessary to be equal to the number of queues q in the message queue pool.

To further investigate the performance of NFN, the evolution of fuzzy rules is illustrated. Although many rules can be created during run time, many of them are also removed due to the pruning strategy. In Fig. 8 , only three rules are left at the end of simulation. The last column illustrates the consequent parts of fuzzy rules, which is represented by the fi rst-order polynomial of input variables. t k in the y -axis is the time instant of the rule being added. For each rule, six inputs ( n  X  2 q  X  6) are associated with it. These six inputs are divided into two parts, i.e. W in Fig. 8 can be veri fi ed from the movements of fuzzy clusters in Fig. 9 .

In Fig. 9 , only the fi rst 2-dimensional clusters, { W i ,H ( W recent publication ( Chen and Yen 2011 ), it has also shown that W is approximately half of W i ,H ( W i  X  t k  X  0 : 5 W i ; H 0 starting from (0.42,0.36) and ending at (0.5,0.49), con fi 5.2. Second experiment
In the second experiment, the in fl uence of  X   X  (the threshold of bq in Eq. (8) ) is examined in different respects. Due to the complementary effects of type I learning and type II learning, the occurrences of learning depend strongly on  X   X  . When small, the conditions of uniform bandwidth utilization are more stringent. In this circumstance, the occurrences of type I learning are more frequent to ensure fair bandwidth sharing, thereby leading to a small USR. On the other hand, a large value of can decrease (or increase) the occurrences of type I learning (or type II learning), but problems of unfair bandwidth allocation incur higher USRs. A clear understanding of the variations of versus the occurrences of learning is observed from Fig. 10 ( a ), where the left and right vertical axes are the number of occur-rences for both kinds of learning. The increasing and decreasing higher the values of  X   X  , the higher the values of USRs and the lower possibility of occurring type I learning. Similar arguments can be drawn from ( a ) and ( c ). One could argue that the value of should be kept as small as possible. However, this is not always true. In fact, when  X   X  is below 0.01, the USR decreases insignif-between computational complexity and the desired accuracy should be taken into account. Finally, the number of rules against the variations of  X   X  is also demonstrated. In ( d ), n_FRs always increase steadily. This phenomenon is mainly attributed to the robustness and effectiveness of the neuro-fuzzy system. 6. Conclusions
The performance of scheduling policy is particularly important for a variety of real-time dynamic systems when the loss of life develop an adaptive scheduling approach that retains and builds on existing knowledge to optimize performance and to handle certain degree of uncertainty. Without resorting to complex mathematical formulation, the message scheduling controller is proposed and realized by the neuro-fuzzy network. The advan-tages of the neuro-fuzzy approach are its self representation potential with learning capability. In this sense, the neuro-fuzzy network is designed with novel learning algorithms for parameter learning and structure identi fi cation to optimize scheduling per-formance. It is also noteworthy that the NFN-based message scheduling controller with novel learning strategy enforces a fair sharing of limited resource and lower untimely service ratios under different load conditions. Simulation results con fi claims in terms of untimely service ratio, quality of service, and number of fuzzy rules.
 Acknowledgments
The author would like to especially acknowledge the contribu-tion of Dr. Hao-Wei Yen for his comments and suggestions to improve the contents. In addition, this research was supported by the National Science Council under Contract No. NSC 102  X  212-013.
 References
