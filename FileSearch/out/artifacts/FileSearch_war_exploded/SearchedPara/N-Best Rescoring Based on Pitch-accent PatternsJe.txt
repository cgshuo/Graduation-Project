 Prosody refers to the suprasegmental features of nat-ural speech, such as rhythm and intonation, since it normally extends over more than one phoneme segment. Speakers use prosody to convey paralin-guistic information such as emphasis, intention, atti-tude, and emotion. Humans listening to speech with natural prosody are able to understand the content with low cognitive load and high accuracy. How-ever, most modern ASR systems only use an acous-tic model and a language model. Acoustic informa-tion in ASR is represented by spectral features that are usually extracted over a window length of a few tens of milliseconds. They miss useful information contained in the prosody of the speech that may help recognition.

Recently a lot of research has been done in au-tomatic annotation of prosodic events (Wightman and Ostendorf, 1994; Sridhar et al., 2008; Anan-thakrishnan and Narayanan, 2008; Jeon and Liu, 2009). They used acoustic and lexical-syntactic cues to annotate prosodic events with a variety of machine learning approaches and achieved good performance. There are also many studies us-ing prosodic information for various spoken lan-guage understanding tasks. However, research using prosodic knowledge for speech recognition is still quite limited. In this study, we investigate leverag-ing prosodic information for recognition in an n-best rescoring framework.

Previous studies showed that prosodic events, such as pitch-accent, are closely related with acous-tic prosodic cues and lexical structure of utterance. The pitch-accent pattern given acoustic signal is strongly correlated with lexical items, such as syl-lable identity and canonical stress pattern. There-fore as a first study, we focus on pitch-accent in this paper. We develop two separate pitch-accent de-tection models, using acoustic (observation model) and lexical information (expectation model) respec-tively, and propose a scoring method for the cor-relation of pitch-accent patterns between the two models for recognition hypotheses. The n-best list is rescored using the pitch-accent matching scores combined with the other scores from the ASR sys-tem (acoustic and language model scores). We show that our method yields a word error rate (WER) re-duction of about 3.64% and 2.07% relatively on two baseline ASR systems, one being a state-of-the-art recognizer for the broadcast news domain. The fact that it holds across different baseline systems sug-gests the possibility that prosody can be used to help improve speech recognition performance.

The remainder of this paper is organized as fol-lows. In the next section, we review previous work briefly. Section 3 explains the models and features for pitch-accent detection. We provide details of our n-best rescoring approach in Section 4. Section 5 describes our corpus and baseline ASR setup. Sec-tion 6 presents our experiments and results. The last section gives a brief summary along with future di-rections. Prosody is of interest to speech researchers be-cause it plays an important role in comprehension of spoken language by human listeners. The use of prosody in speech understanding applications has been quite extensive. A variety of applications have been explored, such as sentence and topic seg-mentation (Shriberg et al., 2000; Rosenberg and Hirschberg, 2006), word error detection (Litman et al., 2000), dialog act detection (Sridhar et al., 2009), speaker recognition (Shriberg et al., 2005), and emo-tion recognition (Benus et al., 2007), just to name a few.

Incorporating prosodic knowledge is expected to improve the performance of speech recogni-tion. However, how to effectively integrate prosody within the traditional ASR framework is a difficult problem, since prosodic features are not well de-fined and they come from a longer region, which is different from spectral features used in current ASR systems. Various research has been conducted try-ing to incorporate prosodic information in ASR. One way is to directly integrate prosodic features into the ASR framework (Vergyri et al., 2003; Ostendorf et al., 2003; Chen and Hasegawa-Johnson, 2006). Such efforts include prosody dependent acoustic and pronunciation model (allophones were distinguished according to different prosodic phenomenon), lan-guage model (words were augmented by prosody events), and duration modeling (different prosodic events were modeled separately and combined with conventional HMM). This kind of integration has advantages in that spectral and prosodic features are more tightly coupled and jointly modeled. Alterna-tively, prosody was modeled independently from the acoustic and language models of ASR and used to rescore recognition hypotheses in the second pass. This approach makes it possible to independently model and optimize the prosodic knowledge and to combine with ASR hypotheses without any modi-fication of the conventional ASR modules. In or-der to improve the rescoring performance, various prosodic knowledge was studied. (Ananthakrishnan and Narayanan, 2007) used acoustic pitch-accent pattern and its sequential information given lexi-cal cues to rescore n-best hypotheses. (Kalinli and Narayanan, 2009) used acoustic prosodic cues such as pitch and duration along with other knowledge to choose a proper word among several candidates in confusion networks. Prosodic boundaries based on acoustic cues were used in (Szaszak and Vicsi, 2007).

We take a similar approach in this study as the second approach above in that we develop prosodic models separately and use them in a rescoring framework. Our proposed method differs from pre-vious work in the way that the prosody model is used to help ASR. In our approach, we explicitly model the symbolic prosodic events based on acoustic and lexical information. We then capture the correla-tion of pitch-accent patterns between the two differ-ent cues, and use that to improve recognition perfor-mance in an n-best rescoring paradigm. Among all the prosodic events, we use only pitch-accent pattern in this study, because previous stud-ies have shown that acoustic pitch-accent is strongly correlated with lexical items, such as canonical stress pattern and syllable identity that can be eas-ily acquired from the output of conventional ASR and pronunciation dictionary. We treat pitch-accent detection as a binary classification task, that is, a classifier is used to determine whether the base unit is prominent or not. Since pitch-accent is usually carried by syllables, we use syllables as our units, and the syllable definition of each word is based on CMU pronunciation dictionary which has lexi-cal stress and syllable boundary marks (Bartlett et al., 2009). We separately develop acoustic-prosodic and lexical-prosodic models and use the correlation between the two models for each syllable to rescore the n-best hypotheses of baseline ASR systems. 3.1 Acoustic-prosodic Features Similar to most previous work, the prosodic features we use include pitch, energy, and duration. We also add delta features of pitch and energy. Duration in-formation for syllables is derived from the speech waveform and phone-level forced alignment of the transcriptions. In order to reduce the effect by both inter-speaker and intra-speaker variation, both pitch and energy values are normalized (z-value) with ut-terance specific means and variances. For pitch, en-ergy, and their delta values, we apply several cate-gories of 12 functions to generate derived features.  X  Statistics (7): minimum, maximum, range,  X  Contour (5): This is approximated by taking
We use 6 duration features, that is, raw, normal-ized, and relative durations (ms) of the syllable and vowel. Normalization (z-value) is performed based on statistics for each syllable and vowel. The rela-tive value is the difference between the normalized current duration and the following one.

In the above description, we assumed that the event of a syllable is only dependent on its observa-tions, and did not consider contextual effect. To al-leviate this restriction, we expand the features by in-corporating information about the neighboring sylla-bles. Based on the study in (Jeon and Liu, 2010) that evaluated using left and right contexts, we choose to use one previous and one following context in the features. The total number of features used in this study is 162. 3.2 Lexical-prosodic Features There is a very strong correlation between pitch-accent in an utterance and its lexical information. Previous studies have shown that the lexical fea-tures perform well for pitch-accent prediction. The detailed features for training the lexical-prosodic model are as follows.  X  Syllable identity: We kept syllables that appear  X  Vowel phone identity: We used vowel phone  X  Lexical stress: This is a binary feature to rep- X  Boundary information: This is a binary feature
For lexical features, based on the study in (Jeon and Liu, 2010), we added two previous and two fol-lowing contexts in the final features. 3.3 Prosodic Model Training We choose to use a support vector machine (SVM) classifier 1 for the prosodic model based on previous work on prosody labeling study in (Jeon and Liu, 2010). We use RBF kernel for the acoustic model, and 3-order polynomial kernel for the lexical model.
In our experiments, we investigate two kinds of training methods for prosodic modeling. The first one is a supervised method where models are trained using all the labeled data. The second is a semi-supervised method using co-training algo-rithm (Blum and Mitchell, 1998), described in Algo-rithm 1. Given a set L of labeled data and a set U of unlabeled data with two views, it then iterates in the Algorithm 1 Co-training algorithm.
 following procedure. The algorithm first creates a smaller pool U  X  containing unlabeled data from U . It uses L i ( i = 1 , 2 ) to train two distinct classifiers: the acoustic classifier h 1 , and the lexical classifier h 2 . We use function V i ( i = 1 , 2 ) to represent that only a single view is used for training h 1 or h 2 . These two classifiers are used to make predictions for the unla-beled set U  X  , and only when they agree on the predic-tion for a sample, their predicted class is used as the label for this sample. Then among these self-labeled samples, the most confident ones by one classifier are added to the data set L i for training the other classifier. This iteration continues until reaching the defined number of iterations. In our experiment, the size of the pool U  X  is 5 times of the size of training data L i , and the size of the added self-labeled ex-ample set, D h D h i , the distribution of the positive and negative ex-amples is the same as that of the training data L i .
This co-training method is expected to cope with two problems in prosodic model training. The first problem is the different decision patterns between the two classifiers: the acoustic model has relatively higher precision, while the lexical model has rela-tively higher recall. The goal of the co-training al-gorithm is to learn from the difference of each clas-sifier, thus it can improve the performance as well as reduce the mismatch of two classifiers. The sec-ond problem is the mismatch of data used for model training and testing, which often results in system performance degradation. Using co-training, we can use the unlabeled data from the domain that matches the test data, adapting the model towards test do-main. In order to leverage prosodic information for bet-ter speech recognition performance, we augment the standard ASR equation to include prosodic informa-tion as following: where A s and A p represent acoustic-spectral fea-tures and acoustic-prosodic features. We can further assume that spectral and prosodic features are con-ditionally independent given a word sequence W , therefore, Equation 1 can be rewritten as following: The first two terms stand for the acoustic and lan-guage models in the original ASR system, and the last term means the prosody model we introduce. In-stead of using the prosodic model in the first pass de-coding, we use it to rescore n-best candidates from a speech recognizer. This allows us to train the prosody models independently and better optimize the models.

For p ( A p | W ) , the prosody score for a word se-quence W , in this work we propose a method to es-timate it, also represented as score W  X  prosody ( W ) . The idea of scoring the prosody patterns is that there is some expectation of pitch-accent patterns given the lexical sequence ( W ), and the acoustic pitch-accent should match with this expectation. For in-stance, in the case of a prominent syllable, both acoustic and lexical evidence show pitch-accent, and vice versa. In order to maximize the agreement be-tween the two sources, we measure how good the acoustic pitch-accent in speech signal matches the given lexical cues. For each syllable S i in the n-best list, we use acoustic-prosodic cues ( a i ) to estimate the posterior probability that the syllable is promi-nent ( P ), p ( P | a i ) . Similarly, we use lexical cues ( l to determine the syllable X  X  pitch-accent probability p ( P | l i ) . Then the prosody score for a syllable S i estimated by the match of the pitch-accent patterns between acoustic and lexical information using the difference of the posteriors from the two models:
Furthermore, we take into account the effect due to varying durations for different syllables. We no-tice that syllables without pitch-accent have much shorter duration than the prominent ones, and the prosody scores for the short syllables tend to be high. This means that if a syllable is split into two consecutive non-prominent syllables, the agreement score may be higher than a long prominent syllable. Therefore, we introduce a weighting factor based on syllable duration ( dur ( i )) . For a candidate word se-quence ( W ) consisting of n syllables, its prosodic score is the sum of the prosodic scores for all the syllables in it weighted by their duration (measured using milliseconds), that is:
We then combine this prosody score with the original acoustic and language model likelihood ( P ( A s | W ) and P ( W ) in Equation 2). In practice, we need to weight them differently, therefore, the combined score for a hypothesis W is: where score ASR ( W ) is generated by ASR systems (composed of acoustic and language model scores) and  X  is optimized using held out data. Our experiments are carried out using two different data sets and two different recognition systems as well in order to test the robustness of our proposed method.
 The first data set is the Boston University Radio News Corpus (BU) (Ostendorf et al., 1995), which consists of broadcast news style read speech. The BU corpus has about 3 hours of read speech from 7 speakers (3 female, 4 male). Part of the data has been labeled with ToBI-style prosodic annotations. In fact, the reason that we use this corpus, instead of other corpora typically used for ASR experiments, is because of its prosodic labels. We divided the entire data corpus into a training set and a test set. There was no speaker overlap between training and test sets. The training set has 2 female speakers ( f2 and f3 ) and 3 male ones ( m2 , m3 , m4 ). The test set is from the other two speakers ( f1 and m1 ). We use 200 utterances for the recognition experiments. Each ut-terance in BU corpus consists of more than one sen-tences, so we segmented each utterance based on pause, resulting in a total number of 713 segments for testing. We divided the test set roughly equally into two sets, and used one for parameter tuning and the other for rescoring test. The recognizer used for this data set was based on Sphinx-3 2 . The context-dependent triphone acoustic models with 32 Gaus-sian mixtures were trained using the training par-tition of the BU corpus described above, together with the broadcast new data. A standard back-off tri-gram language model with Kneser-Ney smoothing was trained using the combined text from the train-ing partition of the BU, Wall Street Journal data, and part of Gigaword corpus. The vocabulary size was about 10K words and the out-of-vocabulary (OOV) rate on the test set was 2.1%.

The second data set is from broadcast news (BN) speech used in the GALE program. The recognition test set contains 1,001 utterances. The n-best hy-potheses for this data set are generated by a state-of-the-art SRI speech recognizer, developed for broad-cast news speech (Stolcke et al., 2006; Zheng et al., 2007). This system yields much better perfor-mance than the first one. We also divided the test set roughly equally into two sets for parameter tun-ing and testing. From the data used for training the speech recognizer, we randomly selected 5.7 hours of speech (4,234 utterances) for the co-training al-gorithm for the prosodic models.

For prosodic models, we used a simple binary representation of pitch-accent in the form of pres-ence versus absence. The reference labels are de-rived from the ToBI annotation in the BU corpus, and the ratio of pitch-accented syllables is about 34%. Acoustic-prosodic and lexical-prosodic mod-els were separately developed using the features de-scribed in Section 3. Feature extraction was per-formed at the syllable level from force-aligned data. For the supervised approach, we used those utter-ances in the training data partition with ToBI labels in the BU corpus (245 utterances, 14,767 syllables). For co-training, the labeled data from BU corpus is used as initial training, and the other unlabeled data from BU and BN are used as unlabeled data. 6.1 Pitch-accent Detection First we evaluate the performance of our acoustic-prosodic and lexical-prosodic models for pitch-accent detection. For rescoring, not only the ac-curacies of the two individual prosodic models are important, but also the pitch-accent agreement score between the two models (as shown in Equation 3) is critical, therefore, we present results using these two metrics. Table 1 shows the accuracy of each model for pitch-accent detection, and also the av-erage prosody score of the two models (i.e., Equa-tion 3) for positive and negative classes (using ref-erence labels). These results are based on the BU labeled data in the test set. To compare our pitch ac-cent detection performance with previous work, we include the result of (Jeon and Liu, 2009) as a ref-erence. Compared to previous work, the acoustic model achieved similar performance, while the per-formance of lexical model is a bit lower. The lower performance of lexical model is mainly because we do not use part-of-speech (POS) information in the features, since we want to only use the word output from the ASR system (without additional POS tag-ging).

As shown in Table 1, when using the co-training algorithm, as described in Section 3.3, the over-all accuracies improve slightly and therefore the prosody score is also increased. We expect this im-proved model will be more beneficial for rescoring. 6.2 N-Best Rescoring For the rescoring experiment, we use 100-best hy-potheses from the two different ASR systems, as de-scribed in Section 5. We apply the acoustic and lex-ical prosodic models to each hypothesis to obtain its prosody score, and combine it with ASR scores to find the top hypothesis. The weights were optimized using one test set and applied to the other. We report the average result of the two testings.

Table 2 shows the rescoring results using the first recognition system on BU data, which was trained with a relatively small amount of data. The 1-best baseline uses the first hypothesis that has the best ASR score. The oracle result is from the best hypothesis that gives the lowest WER by compar-ing all the candidates to the reference transcript. We used two prosodic models as described in Sec-tion 3.3. The first one is the base prosodic model us-ing supervised training ( S-model ). The second is the prosodic model with the co-training algorithm ( C-model ). For these rescoring experiments, we tuned  X  (in Equation 5) when combining the ASR acous-tic and language model scores with the additional prosody score. The value in parenthesis in Table 2 means the relative WER reduction when compared to the baseline result. We show the WER results for both the development and the test set.

As shown in Table 2, we observe performance improvement using our rescoring method. Using the base S-model yields reasonable improvement, and C-model further reduces WER. Even though the prosodic event detection performance of these two prosodic models is similar, the improved prosody score between the acoustic and lexical prosodic models using co-training helps rescoring. After rescoring using prosodic knowledge, the WER is re-duced by 0.82% (3.64% relative). Furthermore, we notice that the difference between development and test data is smaller when using the C-model than S-model , which means that the prosodic model with co-training is more stable. In fact, we found that the optimal value of  X  is 94 and 57 for the two folds using S-model , and is 99 and 110 for the C-model . These verify again that the prosodic scores contribute more in the combination with ASR likeli-hood scores when using the C-model , and are more robust across different tuning sets. Ananthakrish-nan and Narayanan (2007) also used acoustic/lexical prosodic models to estimate a prosody score and re-ported 0.3% recognition error reduction on BU data when rescoring 100-best list (their baseline WER is 22.8%). Although there is some difference in experi-mental setup (data, classifier, features) between ours and theirs, our S-model showed comparable perfor-mance gain and the result of C-model is significantly better than theirs.

Next we test our n-best rescoring approach using a state-of-the-art SRI speech recognizer on BN data to verify if our approach can generalize to better ASR n-best lists. This is often the concern that improve-ments observed on a poor ASR system do not hold for better ASR systems. The rescoring results are shown in Table 3. We can see that the baseline per-formance of this recognizer is much better than that of the first ASR system (even though the recogni-tion task is also harder). Our rescoring approach still yields performance gain even using this state-of-the-art system. The WER is reduced by 0.29% (2.07% relative). This error reduction is lower than that in the first ASR system. There are several pos-sible reasons. First, the baseline ASR performance is higher, making further improvement hard; sec-ond, and more importantly, the prosody models do not match well to the test domain. We trained the prosody model using the BU data. Even though co-training is used to leverage unlabeled BN data to re-duce data mismatch, it is still not as good as using labeled in-domain data for model training.
 6.3 Analysis and Discussion We also analyze what kinds of errors are reduced using our rescoring approach. Most of the error re-duction came from substitution and insertion errors. Deletion error rate did not change much or some-times even increased. For a better understanding of the improvement using the prosody model, we ana-lyzed the pattern of corrections (the new hypothesis after rescoring is correct while the original 1-best is wrong) and errors. Table 4 shows some positive and negative examples from rescoring results using the first ASR system. In this table, each word is asso-ciated with some binary expressions inside a paren-thesis, which stand for pitch-accent markers. Two bits are used for each syllable: the first one is for the acoustic-prosodic model and the second one is for the lexical-prosodic model. For both bits, 1 rep-resents pitch-accent, and 0 indicates none. These hard decisions are obtained by setting a threshold of 0.5 for the posterior probabilities from the acoustic or lexical models. For example, when the acoustic classifier predicts a syllable as pitch-accented and the lexical one as not accented,  X  10  X  marker is as-signed to the syllable. The number of such pairs of pitch-accent markers is the same as the number of syllables in a word. The bold words indicate correct words and italic means errors. As shown in the pos-itive example of Table 4, we find that our prosodic model is effective at identifying an erroneous word when it is split into two words, resulting in dif-ferent pitch-accent patterns. Language models are not good at correcting this kind of errors since both word sequences are plausible. Our model also intro-duces some errors, as shown in the negative exam-ple, which is mainly due to the inaccurate prosody model.

We conducted more prosody rescoring experi-ments in order to understand the model behavior. These analyses are based on the n-best list from the first ASR system for the entire test set. In the first experiment, among the 100 hypotheses in n-best list, we gave a prosody score of 0 to the 100 th hypothe-sis, and used automatically obtained prosodic scores for the other hypotheses. A zero prosody score means the perfect agreement given acoustic and lex-ical cues. The original scores from the recognizer were combined with the prosodic scores for rescor-ing. This was to verify that the range of the weight-ing factor  X  estimated on the development data (us-ing the original, not the modified prosody scores for all candidates) was reasonable to choose proper hy-pothesis among all the candidates. We noticed that 27% of the times the last hypothesis on the list was selected as the best hypothesis. This hypothesis has the highest prosodic scores, but lowest ASR score. This result showed that if the prosodic models were accurate enough, the correct candidate could be cho-sen using our rescoring framework.

In the second experiment, we put the reference text together with the other candidates. We use the same ASR scores for all candidates, and generated prosodic scores using our prosody model. This was to test that our model could pick up correct candi-date using only the prosodic score. We found that for 26% of the utterances, the reference transcript was chosen as the best one. This was significantly better than random selection (i.e., 1/100), suggest-ing the benefit of the prosody model; however, this percentage is not very high, implying the limitation of prosodic information for ASR or the current im-perfect prosodic models.

In the third experiment, we replaced the 100 th candidate with the reference transcript and kept its ASR score. When using our prosody rescoring ap-proach, we obtained a relative error rate reduction of 6.27%. This demonstrates again that our rescor-ing method works well  X  if the correct hypothesis is on the list, even though with a low ASR score, us-ing prosodic information can help identify the cor-rect candidate.

Overall the performance improvement we ob-tained from rescoring by incorporating prosodic in-formation is very promising. Our evaluation using two different ASR systems shows that the improve-ment holds even when we use a state-of-the-art rec-ognizer and the training data for the prosody model does not come from the same corpus. We believe the consistent improvements we observed for differ-ent conditions show that this is a direction worthy of further investigation. In this paper, we attempt to integrate prosodic infor-mation for ASR using an n-best rescoring scheme. This approach decouples the prosodic model from the main ASR system, thus the prosodic model can be built independently. The prosodic scores that we use for n-best rescoring are based on the matching of pitch-accent patterns by acoustic and lexical fea-tures. Our rescoring method achieved a WER reduc-tion of 3.64% and 2.07% relatively using two differ-ent ASR systems. The fact that the gain holds across different baseline systems (including a state-of-the-art speech recognizer) suggests the possibility that prosody can be used to improve speech recognition performance.

As suggested by our experiments, better prosodic models can result in more WER reduction. The per-formance of our prosodic model was improved with co-training, but there are still problems, such as the imbalance of the two classifiers X  prediction, as well as for the two events. In order to address these prob-lems, we plan to improve the labeling and selec-tion method in the co-training algorithm, and also explore other training algorithms to reduce domain mismatch. Furthermore, we are also interested in evaluating our approach on the spontaneous speech domain, which is quite different from the data we used in this study.

In this study, we used n-best rather than lattice rescoring. Since the prosodic features we use in-clude cross-word contextual information, it is not straightforward to apply it directly to lattices. In our future work, we will develop models with only within-word context, and thus allowing us to explore lattice rescoring, which we expect will yield more performance gain.

