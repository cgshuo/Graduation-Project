 The last-mile logistics is the final stage to deliver freight to urban customers from the port or consolidation centers in a city. The efficiency of the last-mile logistics directly affects the quality of delivery services. On the other hand, the last-mile logistics is a costly phase in a supply chain. Since the destinations are quite diverse within a city and in most cases delivering vehicles cannot be fully loaded, the last-mile logistics can take up to 28% of total cost for goods shipment and delivery [ 7 ]. For small parcel and package delivery services, whose major customers are the general public, the operating cost on last-mile could be even higher, due to the high chance of unsuccessful deliveries. According to the data from our partner company, 18.8% delivery jobs were failed in their first attempt due to the absence of customers, and the company has to re-schedule a second delivery. This significantly increases the cost.
 One common way to reduce cost for delivery failures is to set up self-collection points in each neighborhood [ 12 ]. For example, Singapore X  X  leading delivery ser-vice provider, SingPost uses their 59 post offices all over the island to temporarily store the parcels that were failed to deliver to the customers. Those customers will find a slip under the door to notify them that the delivery was failed and their parcels are ready for collection in the neighborhood post office. This method can effectively reduce the number of re-deliveries and thus reduce the additional cost brought by delivery failures. However, for most foreign logistics companies, the few number of physical offices becomes the obstacle for the adoption of self collection of parcels. To break the bottleneck, the companies need to look for suitable partner stores for setting up self-collection points.
 a fixed budget, i.e., the rough number of self-collection points to be set up, how to effectively select the locations for partnership so that more customers can be served at their convenience. This problem is different from the tradi-tional facility location problem in operations research, which will be discussed in Section 2 . It is also different from classic data mining problems. Suppose we divide the customers into clusters based on their locations and consider the cen-ter of each cluster as a self-collection point. When we examine the result with background knowledge, we find it not good. First, the customers living far away from each center are anyway not convenient to visit it though we take them into account when we choose the centers. In other words, shifting a self-collection point towards a outlying area by considering the customers living there may still not benefit those people. Second, the center in each cluster may not be a convenient place for customers. The reason is that we did not consider, and it is also hard to define the  X  X onvenience X  of a self-collection point. Based on the knowledge provided by our partner, most customers would like to collect their parcels on their ways back home from offices. This information can guide us on selecting convenient places for customers.
 locations for self-collection points. The key point we use to tackle the problem is to find the gathering pattern of people, and use it to estimate the  X  X onvenient X  places for customers. For example, if we find an MRT station (MRT is the public transport system in Singapore) in suburban is dense of people during the evening peak hours, we can say the surrounding places near the MRT station are more convenient for people to collect their parcels than those places far away. crowd pattern, which will be used later to guide us sensing the places that are convenient for customers. In particular, we fit a multivariate Gaussian mixture model (GMM) to describe the distribution of people for a certain time period. The model is supposed to reflect how people gather and where the crowd centers are. Intuitively, we should put self-collection points nearer to the crowd centers identified by the GMM model. On the other hand, we consider the distribution of potential customers. By combining their physical locations and their gathering patterns learnt from public transport data, we design a kernel function to re-define the positional relationship among customers and crowd centers, and finally cluster the customers and find locations for self-collection points. Technical Novelty. Compared to the existing clustering methods, which are Social Impact. Most governments maintain rich data about the residents and the cities, and would like to promote analytics on their data for the social good. This work explores the opportunity to make use of government data to service customers from private sectors. It showcases the possibility and advantage to do this, and probably opens a new business model.
 The rest of the paper is organized as follows. We define the problem in Section 2 . We introduce the datasets in Section 3 . Section 4 is the main section to present our approach. We show some analysis and experiment result in Section 5 . Related work is reviewed in Section 6 . Finally, we conclude this paper in Section 7 . 2.1 Formulation The customers are represented by a set of locations. The target is to set up a number K of self-collection points to serve utmost number of customers at their convenience. As suggested by domain experts, we assume that the places with dense crowd tend to be more convenient for customers. Then there are two objectives when we choose the locations for self-collection points: (1) to minimize the average distance between a customer and her nearest self-collection point, and (2) to maximize the neighborhood people flow of the self-collection points.
 The problem can be formulated as a multi-objective optimization problem. Let C = { y j | j =1 ,...,m } be the set of customer locations. Let D = 1 ,...,n } be the collection of people crowd where x i stands for the center of a crowd with people flow of f i .Let S = { s 1 ,...,s K } be the and  X  be the distance threshold to define neighborhood of a self-collection point for the people flow estimation. Let z j be the distance between customer y her nearest self-collection point and h i  X  X  0 , 1 } indicate whether a people crowd x lies within the circle centered at some self-collection point with a radius of  X  . Then the objective of the problem is: min( m j =1 z j ,  X  To maximize the neighborhood people flow of the self-collection points, one na  X   X ve way is to set up self-collection points at the centers of people crowds. Then the problem can be modeled as a mixed integer linear programming problem with two objectives. The classic way to solve a multi-objective problem is to convert it into a single objective problem by defining a cost function of the objectives [ 8 ]. The new cost function can be a importance order of the objectives or a scalarization of the objectives. However, it can hardly be applies to our problem. First, since both of the two objectives are on continuous values, it is almost impossible to have two feasible solutions with the same objective value. Hence the importance order will trivially lead to optimizing the more important objective and ignoring the other one. Second, since the objectives are distance and number of people, it is meaningless to aggregate the two to obtain a cost. 3.1 Delivery Data We study the 3-month (April to June, 2014) parcel delivery data provided by our partner. The detailed data schema is omitted, as we are only interested in cus-tomer locations and delivery status. To find out what locations are suitable for self-collection points, we need to analyze the clusters of potential customers that will need this service. We have three choices to simulate potential customers X  locations, i.e., the citizens X  residences, the company X  X  historical customer loca-tions, and the locations of the company X  X  historical customers who failed to receive parcels. We select the last choice and explain why. successful deliveries are marked as blue points, and the failed attempts are marked as red points. We can see that the two sets of points are not follow-ing the same distribution. There are more dense blue points in the city center, and more red point clusters in suburban areas, e.g., center north and east. Thus, in our study, we should use failed locations for learning, which is more represen-tative for future customers of self-collection points.
 have been existing for over 30 years, and accommodates more senior citizens than those newly developed regions. There may be more delivery business in new regions because young people are more active in online shopping and over-seas delivery. Fig. 1(b) further validates our assumption, which visualizes the distribution comparison between local residents and the company X  X  customers by different colors that indicate the inconsistency of the two distributions. Due to the space limit, we do not further explain it. 3.2 Public Transport Data The other dataset we use is the public transport data. The public transport, including MRT (subway) and bus, is the major transportation tool used by most residents in Singapore. In 2012, there are 77.8% working people using public transport 1 . Thus it is reasonable to assume that the crowd pattern of working people can be estimated from the public transport data, by studying passengers X  riding records. Furthermore, since the public transport commuters are the main target customers that self-collection points would like to benefit (the location is less important for private car drivers), the use of public transport data to estimate customers X  gathering pattern is meaningful. 4.1 Overview The basic idea of our work is to incorporate crowd gathering pattern into the distribution of customers in Singapore, to find better locations for self-collection point setup. Fig. 2 shows the general workflow. We first learn spatial temporal models to represent the people gathering pattern, based on the public transport data. Then according to the company X  X  suggestion, we choose the model for the evening peak hour period, i.e., 5pm to 9m, to guide self-collection point locating. On the other hand, we extract the customer locations from the unsuccessful delivery data. By incorporating the model built from the public transport data, we design a kernel function to shift customers X  locations to nearby crowd centers, and thus re-define the distance among customer locations. Finally, based on the new locations of customers, we divide the customers into a few clusters according to the budget. 4.2 Model Fitting We are interested in the gathering pattern of residents on a time basis. Then we would try to shift the self-collection points toward the center of a crowd according to the common time period that customers tend to collect their parcels. In a certain time period, there will be multiple crowds in Singapore. To model the crowds for the whole population across the Singapore island, we should exploit a mixture model because the crowd in different regions may distribute differently. For each sub-population, we assume a multivariate Guassian model to represent the spatial distribution of people. For example, suppose a popular MRT then we assume the probabilities that a person appears in this neighborhood during morning peak hours follow a multivariate Guassian distribution, where the mean along the two dimensions of latitude and longitude takes place at x i and y i respectively. We explain why we use Guassian model to represent the distribution of people. In this example, MRT, as the main transport tool attracts working people from all directions in the neighborhood. As a result, there are more people appearing at the MRT stations. Furthermore, since the people centered at the MRT stations are converged from surrounding places, for a particular moment or taking the average over a short period, the density distribution should be in a bell shape. Note that other distribution models can also be used if they can reasonably capture the characteristics of people flow. In our assumption, if all crowds follow a multivariate Guassian distribution, for the whole population at a certain period, the probability that a person appears in each place in Singapore will follow a Gaussian Mixture Model (GMM). passengers in each MRT station and bus stop during the period, and consider it as the crowd size in each place. We use this data to fit a mixture model Gaussian functions: where w i is the weight of the i -th Gaussian component (i.e., the peak passenger flow),  X  i is the mean of the corresponding Gaussian component (i.e., the center of a crowd) and  X  i is the corresponding covariance matrix (i.e., how passenger flow spread from the center to the two dimensions).
 1 ,...,n } be the collection of each bus stop or MRT station X  X  geographic location ( x i ,y i ) with the passenger flow f i . Then the likelihood of  X  given the observation D is defined as: Suppose the observations are independent. Then  X  can be estimated by the Expectation-Maximization (EM) algorithm. 4.3 Kernel Transformation We propose a transformation function based on which the attractiveness between customers and crowds can be and the closeness between customers can be re-defined.
 is large, we just move y very slightly. On the other hand, we should move y to a new location that is closer to x . By doing this, we can shift a customer X  X  location towards a crowd center. Thus we define the kernel function between a customer and a crowd center as Note that the purpose here is to define a rule to shift a customer location towards a crowd center according to the above mentioned property. Other kernel functions may also be applied to achieve the same goal. Then the movement of y according to x is It is normal that a customer will be attracted by more than one crowd centers. A natural way to aggregate the moving vectors to different crowd centers is to take the weighted sum of these vectors. However, this aggregation does not work well for our case. For example, if some customers are lying in between of two crowd centers with identical weight along the opposite direction, and the distances from the customer to the two crowd centers are also identical, then no matter how near the customer is to the crowd centers, she will not be moved by the function. In order to avoid such situations, we define the final moving vector of a customer to be the moving vector to its nearest crowd center. If there are more than one nearest centers, one will be randomly chosen.
 Let x  X  y be the nearest crowd center to the customer y . and the total movement of a client towards a set of crowd centers is: The new location of a customer with a location y will be After doing the transformation, the customers X  locations are supposed to be closer to each crowd center. Then we can apply the K -means method to {
T ( y ) | y  X  C } , to find locations for self-collection point setup. 4.4 Optimizing Variance Parameter The variance parameter  X  in the kernel function controls how the movement decreases with the distance, and therefore determines the new locations and the final clustering performance. Note that our purpose is to minimize aver-age distance from customers to self-collection points, and also to maximize the neighborhood people flow of the self-collection points. Thus we try to optimize  X  according to these two criteria.
 In the first scheme, we focus on the minimization of average distance. With different  X  , we have different clustering results. We define the optimal variance to be the one returning minimal average distance after clustering. flow. Let  X  be the radius defining the neighborhood area, which is pre-set. Then we define the optimal variance to be the one returning maximal neighborhood people flow after clustering. the overall flow of the algorithm can be summarized in Algorithm 1 . Algorithm 1.. Kernel-based Clustering 5.1 GMM Fitting We take the exit records of passengers in each MRT station and bus stop between 5pm and 9pm. We consider that 1) most customers prefer collecting parcels on their ways home, as assumed, thus we only use the exit records; 2) 5m to 9pm is a reasonable period of off hours for working people.
 There are several criteria to balance the likelihood and the complexity of the model. We use the R package mixmod [ 2 ], which considers Bayesian Information Criterion [ 14 ], Integrated Completed Likelihood [ 1 ], and Normalized Entropy Criterion [ 3 ]. The best model is chosen based on the lowest value among all. The result shows that the best fitted model has 22 components. The means of the components are shown in Fig. 3(a) . The result is reasonable, as most of the means are located near the major MRT stations or bus exchanges. For example, Fig. 3(b) shows a zoom-in view of a mean, which is quite close to the Boonlay MRT station, which is a main transportation hub in the west of Singapore. 5.2 Location Transformation We set the range of the candidate variance parameters in the kernel function to be [0 . 05 , 0 . 1]. Each variance parameter gives a different movement of customers. In this section, we only show an example in in Fig. 4 . The figure on the left shows the original customer distribution in the northeast of Singapore. After applying the kernel transformation, as shown in the right figure, the customers are clearly shifted towards different centers.
 5.3 Result We try different values of K in [10, 50] and use the elbow method to choose 21 as the number of clusters. This number is also consistent with the company X  X  budget. We present the clustering results using the two functions in Fig. 6 ,in which the center of each cluster is marked out on the map. For the kernel method, we use the second scheme, i.e., based on neighborhood people flow, to optimize the variance parameter, as it returns better result as discussed later. collection point setup. The one using the kernel function (Fig. 5(b) ) chooses more locations in the center of the island and those places are more in line with the crowd centers returned by GMM (Fig. 3(a) ), compared to the one using original distance function (Fig. 5(a) ). Although these areas are not major residential areas, there are many people taking bus or MRT transfer there, as shown in Fig. 3(a) . Thus, it is reasonable to put more collection points in these areas. Another highlight is the removal of the leftmost location from Fig. 5(a) . Although there are customers over there, based on the crowd patterns, that place may not attract many people. As a result, in the new clustering result by the kernel transformation, that location is no longer there. 5.4 Quantitative Comparison In this section, we try to quantify the results generated by using the Euclidean distance and the kernel function (under two optimization approaches) respec-tively, to compare the quality. In the first test, we compare the average distance from customers to the chosen self-collection points. As mentioned, the purpose of self-collection points is not for serving all the customers. In Fig. 6(a) ,we show the comparison of average distance under five clustering results, for dif-ferent portion of customers to be served. The x-axis represent the percentage of nearest customers to each selected location, and the y-axis shows the corre-sponding average distance. The five results include the clustering result based on original distance, kernel function with variance parameter optimized by average distance, and kernel function with variance parameters optimized by people flow using radiuses of 1 to 3. From Fig. 6(a) we can see that there is not much differ-ence between the five results, which means our proposed methods can guarantee a good average distance that is similar to the original approach which returns the optimal value for this metric. Next, we compare the number of people that can be potentially served within each size of neighborhood, as shown in Fig. 6(b) . We can see that the method using the original customer locations performs worst. For each given value of the radius, after kernel transformation, the chosen self-collection points will be nearer to the crowd centers, and thus can potentially serve more people. Further, the second scheme performs better than the first. Combining with the result in Fig. 6(a) , in which all the results give similar performances, we can conclude that the kernel method with the second optimization scheme is the best choice. 6.1 Facility Location Problem Facility location problem studies the optimal placement of facilities to minimize the cost of facility opening and the cost of servicing customers from the facilities. It is an important branch of operations research. There are many variants of the facility location problem, and most of them are proven NP-hard [ 6 ]. Different kinds of facility location problems have been extensively explored by researchers, in which many works focus on approximation. Since it is not quite related to this paper, we do not review the works here. Some surveys include [ 5 ]. As mentioned, the major reason that the existing works are not suitable for our problem is that our problem can be hardly reduced to a unique objective for optimization. Besides, we do not assume the self-collection points can serve all the customers. Our purpose is to serve a reasonable number of customers who can conveniently visit the collection points. As a result, although the problems sound similar, they should be approached differently. 6.2 Clustering Clustering is a useful method for descriptive data analysis. The popular cluster-ing methods can be divided into two categories, parametric model-based meth-ods and non-parametric similarity (or distance) -based methods. In the first category, the dataset is assumed to follow a mixture model of finite number of components. Each component is a probability distribution. The most widely used mixture model is the one with multivariate Gaussian components [ 15 ]. There are also other types of mixture model. A detailed review can be found in [ 10 ]. The Expectation-Maximization (EM) algorithm [ 4 ] is commonly used to estimate the parameters of a mixture model. Since the EM algorithm is sensitive to initial values and the number of components needs to be pre-defined, there are a lot of research work focusing on the initialization problem of EM (e.g., for the recent works [ 11 , 16 ]). The second category of clustering methods are based on objective functions of similarity or distance measurement. K -means and its variants [ 9 , 13 ] are the most popular algorithms in this category. In this approach, similarity or distance between each pair of data points is defined, based on which the whole dataset will be partitioned into different clusters.
 approach, we do have some guidance for clustering, which is not from the labeled customer data, but from the residential data which is not directly linked to the customer data. Thus, in our work, we cannot apply existing methods directly. In this paper, we jointly use the public transport data and the customer data to help our partner logistics company choose suitable locations for self-collection point setup. In particular, we use the public transport data to learn the people X  X  gathering pattern, based on which, we design a kernel transformation to re-define the pairwise locations of customers. Finally, we cluster customers based on their new locations which are closer to people X  X  crowds and considered more convenient for the customers. We also demonstrate the effectiveness of our approach. Acknowledgment. This work was supported by the A*STAR SERC Grant No. 1224200004.

