 Customer satisfaction (CSAT) is the key driver for reten-tion and growth in retail banking and several techniques have been applied by banks to achieve this. For instance, banks in emerging markets with high footfall in branches have gone beyond the traditional approach of segmenting customers and services to optimizing the wait time for cus-tomers visiting the bank X  X  branch. While this approach has significantly improved service quality, it has also added a new dimension in the service quality metric :-pro-actively identify and address customer needs for (i) efficient banking experience and (ii) enhancing profit by selling additional ser-vicestoexistingcustomer. Inthispaperwepresentasystem that addresses the challenge involved in providing better ser-vice to retail banking customer while ensuring that a larger share of customer X  X  wallet comes to the branch. We do this by combining predictive analytics, scheduling and process optimization techniques.
 H.4.1 [ Office Automation ]: Workflow management; J.7 [ Computers in Other Systems ]: Consumer products Design, Economics, Management Retail Banking, Profit Maximization, Branch Banking
Customer centric service delivery organizations like telecom-munication, retail, financial service providers etc are always under pressure to retain and grow their customer base. This is particularly true in emerging economies like India and China. This has led to organizations becoming very focused on improving customer engagement experiences to retain and increase customer base. Retail banking in particular has used customer relationship management as a key strat-egy for retaining customers. Deploying new product and service delivery channels such as ATM, Internet and Phone Banking are some of the efforts in this space. While business process transformation using these channels has improved the service quality, banks are still exploring how these chan-nelscanbeharnessedtopro-activelymanagecustomerneeds and interests. Due to various factors like awareness, lifestyle, literacy rate, lack of confidence in using e-transactions, the customers still prefer to do most of their banking by visiting the bank X  X  branch.

The age old model of prioritizing by arrival time does not make sense for a retail bank as not all customers are equal in terms of the value they bring to the bank. Furthermore, the more valuable a customer is, she is likely to resent the longer waiting times. In fact, a survey conducted by us at several branches of a leading public sector bank in India, we found that the wait time was as high as 60 minutes resulting in low customer satisfaction (CSAT) and consequently loss of business from existing customers. A naive solution to the problem is to increase the number of service personnel at the branch and have dedicated counters for different types of transactions or services. However, this would lead to a substantial increase in the operating cost of the bank which makes it an unviable alternative.

Banks have started to define priority rules for their ser-vices to optimize overall wait time for customers, these static rules and service segments do not consider the customer X  X  fu-ture value. However, in our survey we found that most of the visits were made for low-value transactions, such as checking an account balance or depositing a check, thus maintaining the branch as a cost center. Taking a retail branch from a cost to profit center is a top priority of most banks. The key here is to prioritize services (e.g. large deposits, with-drawals, funds transfer etc) which are more profitable to the bank and schedule customers accordingly. Banks are also starting to segment customers along with their service requests in this approach for an optimal solution that is at-tractiveforimportantcustomersaswellasoptimizedfor revenue generating transactions (like fund transfers) for the bank. This way the customers and services in profitable segment would get differentiated Quality of Service (QoS). This differentiation in turn would help the organization to realign their focus around important customers and services. However, these static models have an inherent flaw. They only use the current transaction to decide which customer gets faster service. A customer who has been valuable to the bank over the years would still feel unhappy that she was not given priority. Simply put, the most recent transaction is not a reflection of overall value of the customer. Hence, the inability to utilize the customer X  X  overall value in exist-ingschedulingsystemsleadstoaone-shoe-fits-all(myopic) scheduling which causes dissatisfaction among certain cus-tomers who are more likely to bring additional business for the bank in the future. For example, in static rules-based scheduling systems, the banks may assign lower service pri-ority for a customer visiting the bank to order Banker X  X  Check as the transaction might be considered as less prof-itable for the bank. If on the other hand the customer X  X  past transactions and thereby future value is taken into consider-ation the outcome could have been entirely different. For ex-ample, if on analysis the customer demonstrates high affinity for long term deposits, then she could be assigned a higher service priority and matched with a service agent special-ized to sell deposits. This way the bank not only improves customer satisfaction but also increases the chance of sell-ing a profitable product to the customer. We would like to note that point solutions like Queue Management System and Recommendation Systems exist in commercial space. The existing solutions aim to either improve CSAT or prof-itability. However, in this paper we present an end to end integrated system which seamlessly merges the above men-tioned capabilities to improve CSAT as well as profitability. Moreover, we bring advanced analytics and optimization ca-pability to each piece.
 Contributions: In this paper we present a retail bank-ing solution for simultaneous CSAT and profit maximiza-tion that has been deployed at several branches of a large public sector bank in India. We address existing limita-tions of static rules based scheduling by proposing a first of a kind customer analytics driven scheduling system. Our system uses customer analytics for dynamic assignment and prioritization of customers at a branch. Our solution has been designed to cater to multiple channels. We describe the technical problems and the associated methods for han-dling the same while taking into account the domain specific constraints. Even though we have deployed the system in limited capabilities in the current phase, we showcase the usefulness of the system by presenting some new use cases motivated by our experience.
We present details of the Scheduling , Product Recommen-dation and Customer Value Computation components that form part of the Analytics and Optimization layer.
First we present basic notations that is used in this and the following sections.

Basic Notations C = { C 1 ,C 2 ,...,C N } denotes the list of N customers. A T i represents corresponding arrival times. M S denotes the master list of K service types which can be availed by a customer. Each service type is associated with an expected processing time. The service time for each servicetypeisstoredinalistdenotedby M T = { MT 1 , MT 2 ,...,MT K } . The service bundle requested by i th cus-tomer is denoted by SB i = { SB 1 i ,SB 2 i ,...,SB l i } number of services requested by i th customer and  X  l j =1  X  X  S . The total time needed to process SB i is known as service time denoted by S i . The service time S i is sum of ex-pected service time of all the services in SB i . S = { S denotes service times for all N customers. V = { V 1 ,V 2 denotes the value of the customer. This value is employed to compute the priority P = { P 1 ,P 2 ,...,P N } for the scheduling algorithm. CT represents current time. Finally, T denotes the L service personnel employed in the bank.

As noted earlier, the value of the customer C i consist of following three components.
 Current Value of Customer: This value captures the current profitability of the customer for the bank which is computed based on the customer X  X  current assets with the bank and cost of supporting customer X  X  transactions. The profitability is then mapped to a number  X  [0,1] using a mapping function and is denoted by V p .
 Future Value of Customer: This value captures the ex-pected business which the customer will generate for the bank in future. This is computed based on the profitabil-ity of products recommended for a customer as explained in Section 2.2. D i denotes the profitability of product bun-dle which the customer is expected to buy and SP i is the customer X  X  affinity to that product bundle. Therefore, the value ( V f )iscomputedas D i  X  SP i .
 Value of Service Request: This value captures the prof-itability of the current service request to the bank and is denoted by V c . Typically, V c is computed by using a lookup table provided by the bank which enumerate the relative profitability of each service type.

The overall value is a weighted sum of individual values and is given by:
The weighing factors depends on attributes of the orga-nization. A very high value of w 1 would indicate more em-phasis on current customer value whereas a high value of w 2 would capture that importance of profitability of current service request. Similarly, a high weightage of V f would im-ply a sales centric organization. The denominator is simply a normalization factor so that V i  X  [0 , 1] and hence compa-rable for different customers. The final value V i is used to compute priority P i in the scheduling algorithm where P i computed as 1  X  V i .
The Product Recommendation Engine generates a list of product recommendations for a customer, ranked on the cus-tomer X  X  affinity for the product/service. Each recommenda-tionisgivenanaffinityscore(between0and1)basedon criteria such as the product X  X  popularity in the customer X  X  segment, customer X  X  response to an earlier offer, product X  X  profitability to the bank etc. Another key feature of the proposed Product Recommendation Engine is it X  X  dynamic product bundling capability . With this capability, banks of-fer multiple financial products and services to customers as a package. Recent research [9] have looked at offering some customization in product bundling by looking at historical trends about influence of a product on sales of other prod-ucts. However, that work does not look at incorporating the need for a discount on the initial product suggested to the customer. Also, the idea proposed is within the framework of a static bundling model. This lead us to the the problem of dynamic bundling of products.
 Problem: Dynamically assemble a product bundle P b for a customer C , who wants a discount D for a initially suggested product p such that the members of P b are complementary to p and C has a high affinity to those products.
 Solution: If we ignore the complementarity and affinity requirements, the problem can be modeled as a 0-1 knap-sack problem where the discount D is offset by the cumu-lative profit of the smallest possible product bundle. The problem is NP-complete but a pseudo-polynomial time al-gorithm [10] does exist for it. Introducing customers affinity for a given product and how complementary the suggested product is to the product already chosen makes the problem into a m-dimensional knapsack problem (also called multi-constrained knapsack) [8]. Formally, it can be expressed as where p i is a product being sold by the provider and is not the same as the product p chosen by the customer C , v i is the price of the product p i , m i,j is the profit/affinity/compatibility of the product p i and b j is the maximum discount required or bundle affinity or bundle compatibility.

The above formulation requires values for customer to product affinity and product complementarity to be given. Assuming the presence of a transaction dataset R contain-ing information about products purchased by customer C , we can measure the complementarity of any two products p and p 2 as where support( p i ) is the number of transactions contain-ing p i .

On similar lines, we can measure the affinity of the cus-tomer C to a product can be computed as where p i is any product purchased by C .

Since the number of products considered in the existing customer engagement is very limited, a dynamic product bundling approach was avoided. However, the platform we are building is not in any way restricted to applications in the banking scenario. We could use the same system to create bundled offerings for telecom and retail customers. In these domains the number of possible product bundles is quite large necessitating us to come up with a dynamic product bundling strategy.
Basedonthepriorityvalue P i as computed in Section 2.1, the scheduler picks a subset of M customers from existing wait queue and schedules them. The output of the sched-uler is a ranked list ( RL )oflength M which specifies the order in which the M customers are served. We tried to find optimal solution to this scheduling problem by formulating math program and using standard solvers. Due to NP-hard nature of the problem, finding optimal solution conflicted with the end goal of the real time system. We were not able to produce schedules fast enough to be used in a real time system. Therefore, a simple heuristic was used in the cur-rent deployment. For each customer we computed P i  X  S i To re-iterate, priority 1 customers are more important than customers with priority 2. The priority is then multiplied by the expected service time to generate weighted service time which is sorted in ascending order to generate a rank list. This procedure generates a ranking based on Weighted Shortest Job First (WSJF) policy.
 The scheduling algorithm suffers from starvation problem. If important customers keep coming in the system, it will lead to less important customers facing extremely high wait time, which in turn will decrease CSAT and defeat the whole purpose of this solution. To handle this problem, we contin-uously update the priority of all customers. With each cus-tomer C i we associate a maximum starvation time MST i . The priority of each customer is then updated as follows: Note that CT  X  A i computes the already waited time. FIFO i istheexpectedtimethecustomerwouldhavewaited if the bank were using a traditional FIFO based scheduler. If acustomerhaswaitedfor FIFO i minutes, the priority goes to 0 which implies she now belongs to most important cate-gory and will be scheduled as soon as possible. The update function gradually adjusts the priority of each customer to avoid starvation. In real life setting, we found this property to be really useful and desirable to manage crowd percep-tion of fairness. This fashion of priority updation takes into account category information, arrival pattern and current system state. We would like to mention here that all of the existing commercial systems that we studied [1, 3, 6, 4, 2, 5, 7] typically schedule customers in some pre defined order. These solutions generally work on a static fair play princi-ple and schedule customers in a FIFO order. However, any advanced dynamic scheduling (e.g. based on multiple ser-vice parameters) and real time decision support which our Scheduler offers is missing from these products.
In this section, we share some of our deployment exper-iments and learning. First, we present the current state of our tool at multiple branches of a leading retail bank in In-dia. Due to confidentiality and non-disclosure agreement, we are unable to divulge all the data. However, we share some of the results at an aggregate level to demonstrate how our system met the bank X  X  objectives.

Deployment Setup: The system was deployed in 5 branches of a leading bank in India for a period of 2 months. For each branch, we collected data for first two weeks. This data was used to calculate the original wait times (baseline). Dur-ing this two week period the bank continued to use existing token dispensing machine which generates sequentially num-bered token. These tokens were scheduled using FIFO.
The Customer Problem: The bank was suffering from huge queue and extra ordinarily long wait time. On an av-erage the wait time was 45 minutes whereas during peak hours(10to12PM),itwasobservedtobeashighas60to 80 minutes. Therefore, the first business metric which the client wanted to see improvement was on wait time. On an average 350-400 customers come to bank everyday and were served by 4 or 5 resources (based on availability). The client agreed that given the high number of customers and resource constraints, it is impossible to improve the wait time for all customers. The business analyst provided us with a set of rules to classify customers as High Net Income (HNI), High, Average and Low importance. The client wanted the wait time reduction of HNI and High importance customer while not imposing high penalty to other customers. The second metric of interest was to improve bank focus by taking into account the service requests. The services were divided into two groups: profitable services &amp; non-profitable services. Thegroupingwasbasedonthefactthatcertainservices like Traveler X  X  Cheque, Demand Draft etc generate instant revenue for the bank whereas services like cash withdrawal are liabilities. More than profit, the client wanted to cre-ate focus and awareness among customers so that alternate bank channels are used effectively. The idea was if a cus-tomer has to wait 60 minutes or more to withdraw a small sum of money, she can be educated and made to understand the benefits to using ATMs. Combining customer and ser-vice classes, we got 8 possible categories. Out of these 3 cases were infeasible because some classes of customers are not authorized to request every service. Therefore, we had 5 categories in which an incoming customer is mapped based on customer type and service requests.

The readers would notice that the above mentioned cat-egorization is a static one. This is primarily due to the client requirements and our decision to spend more time on scheduling and understanding customer behavior rather than putting lot of efforts in dynamic categorization. More-over, since we wanted to focus on the non-FIFO scheduling part, we decided not to interface our system with banking database. This saved lot of time and efforts in getting se-curity clearances from client organization and reduced our development to deployment cycle time.

Impact: We deployed our system of non-FIFO based cus-tomer scheduling at the branches after the 2 week baselin-ing period and collected data. We used a variant of short-est job first scheduling policy explained in Section 2.3 to schedule the customers. After deployment our system sched-uled around 25000 customers. The analysis of customer wait times after deployment of the system showed significant im-provements. The wait time of HNI customers reduced by a whopping 83% while the wait time of High category cus-tomers reduced by 30%. This was accomplished at the cost of increased wait time of Low category customers which went up by 25%. No big change was observed for Average cate-gory and others. The reason for large improvements in HNI wait times is due to the low volume of HNI clients (only 5% of total customers). The High category constituted around 60% while around 25% of customers were in low category. Thus,wewereabletoimprovethewaittimesofalmost65% customers at the branch by penalizing 25% of the customers who were already identified as being of low importance to the bank. We wish to highlight the fact that the overall av-erage wait time of all customers decreased by around 15%.
In this paper we present a retail banking solution for si-multaneous CSAT and profit maximization that has been deployed at several branches of a large public sector bank in India. The system proposes a unique analytics and op-timization layer which helps in scheduling customers such that CSAT as well as bank X  X  profit is maximized. We high-lighted various components of the system along with techni-cal problems and associated business constraints. We share deployment experience and highlight our key findings. Fi-nally, we believe that our system and current work is a first step that addresses CSAT while maximizing profit. [1] Advanced Queue Management System. [2] Automatic Queue Management System. [3] Dynamic Queue Management System. [4] Lonsto Queue Management System: [5] QTech Queueing System. [6] Queue Management System. [7] Smart Queue Management System. [8] M. F. A polynomial linear search algorithm for the [9] N. Li, Y. Yang, and X. Yan. Cross-selling optimization [10] S. Martello and P. Toth. Knapsack Problems:
