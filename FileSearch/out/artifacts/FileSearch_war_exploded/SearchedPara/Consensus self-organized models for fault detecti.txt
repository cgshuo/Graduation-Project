 1. Introduction
The maintenance strategy used by commercial bus and truck operators today is predominantly reactive, i.e. a fault is fixed after it occurs. This is evident from, e.g., the statistics from the annual
Swedish compulsory vehicle inspection that checks the vehicles  X  X  X oadworthiness X  X . This inspection includes a check of the emis-sion control system, the brake system, the communication system (i.e. lights, wipers, horns, mirrors), the suspension and the steer-ing system. In 2007, almost half of the commercial bus and truck fleet in Sweden did not pass this inspection and the numbers for 2006 were very similar ( Swedish Motor Vehicle Inspection Company, 2008 ).

The situation could, and should, obviously be much better. The last decade has shown a tremendous increase in vehicle electronics and research on maintenance and diagnostics. For example, the amount of electronics in automobiles has increased with about 300% over the past 10 years ( Hilger et al., 2004 ) and the number of published research papers with, e.g., the topic  X  X  X iagnostic X  X  and  X  X  X ehicle X  X  have more than tenfolded over the last 15 years. Yet, available onboard in today X  X  vehicles, which partly explains why they have not been implemented much. More importantly, however, the methods share one common characteristic: They typically focus on one system at a time and build on having, or acquiring, a significant amount of knowledge prior to deploy-ment. All methods, based on fundamental relationships or data-driven, require that a model is built beforehand; a model that considers all important variations in usage, ambient conditions and system variation up front, before the vehicle is produced in large series. There is thus a considerable engineering effort just to think of all possible faults and usages and simulate these, in the computer or on a test vehicle, to develop and verify the model. Furthermore, this has to be done for all systems.

We believe that the large variation in usage and vehicle setup combined with the considerable cost for designing diagnostic and prognostic models in the  X  X  X raditional X  X  supervised way means that these approaches will be used for the absolutely necessary systems (i.e. where laws or safety require diagnosis) and only to a very limited degree for predictive maintenance of other systems. We therefore propose a completely different approach.
Instead of collecting expert knowledge beforehand we propose to collect this after production. Instead of having experts decide what data to collect we propose that the system itself should explore and find interesting data to collect. Instead of looking at new sensors we propose to work with whatever sensors and signals that are available onboard and have self-developing  X  X  X oft sensors X  X . Instead of designing a method for each system we attempt to have one and the same method for all systems. The approach is made possible by the access to (limited bandwidth) wireless communication between the vehicles and a central server. This makes it possible to think of a distributed collabora-tive intelligent system for fault detection, diagnostics and wear prediction; a system where information from vehicles of similar setup and used in similar ways can be communicated to a central server that collects information over time and learns the char-acteristics of  X  X  X ault free X  X  operation and connects  X  X  X aulty X  X  opera-tion to diagnostic codes. In this way the produced vehicles on the road will be a  X  X  X iving lab X  X  (see Fig. 1 ) where knowledge is collected under real operation conditions. It is even possible to envision a dialogue between a real vehicle and a simulated vehicle. A recently published paper by GM researchers ( Zhang et al., 2009 ) shows fleet-based cross-vehicle analysis to enable cost-effective fault detection, but able to improve root-cause analysis by reducing trouble-shooting time when diagnosing a fault.

Clearly, the proposed approach is not suitable for all wear and fault situations. Fault detection on certain systems (e.g., brakes)
We have, however, added the requirement that the features need to be  X  X  X lim X  X , i.e. transferable across a limited bandwidth wireless channel at a low cost. We also envision a future where the software agents onboard the vehicle should be able to themselves formulate interesting combined features for the vehicle. Our approach is to do a  X  X  X ilter X  X  feature selection, i.e. we select the interesting features without looking at the possible outliers on the central server. It would also be possible (but more expensive in terms of communication cost) to include a dialogue between the vehicles and the central server and thus do a  X  X  X rapper X  X  feature selection.

It is, as pointed out by Dy and Brodley (2004) , difficult to specify what exactly defines an  X  X  X nteresting X  X  feature. We assume here that faults and wear can be detected from relationships between signals onboard the vehicles. That is, signals that show relationships are  X  X  X nteresting X  X  and signals that do not show any relationship, or very little relationship, with other signals onboard the vehicles are uninteresting. This assumption is reasonable; the human brain most likely exploits redundancy and non-random relationships for information processing and detecting  X  X  X hat is different X  X  ( Barlow, 1989 ). The same idea is also used by Pen  X  a et al. (2001) in their work with Gaussian networks. Since we are looking for  X  X  X lim X  X  signals we also assume that the information important for detecting faults is encoded in the relationship between the signals, i.e. the relationships are what need to be transmitted to the central server, not the signals themselves. This assumption is supported by, e.g., a vehicle diagnostic method that was recently proposed based on correlations between signals ( D X  X ilva, 2008 ).

Relationships can be explored and encoded onboard the vehi-cles in many ways. For example, histograms or distribution models can be used. Vachkov (2006) has suggested a method to compress histograms using a probability density modeling approach to allow transmission of them over a telematics gateway, in order to detect vehicle wear. Self-organizing maps can also be used ( Svensson et al., 2008 ). In these two examples, however, there was no aspect of unsupervised feature selection. Relations can also be expressed as functional relations, e.g., linear relationships between the signals. We use linear functions here to exemplify how a large number of functional relations can be explored in a short time onboard a vehicle.

We use the normalized mean square error ( NMSE )asa measure of the  X  X  X nterestingness X  X  of a relationship: NMSE  X  1 N s 2 where s 2 is the variance of the modeled signal, N the number of observations collected, y and ^ y are the signal to be modeled, as a function of the other signals, and the model output, respectively.
Error bars are computed (95% confidence intervals) and the parameters for the best models (significantly lower NMSE than other models) are sent to the back office. A relationship that is not deterministic will have a large NMSE and a relationship that is perfectly deterministic (and noise free) will have zero NMSE .
The onboard software agent on each vehicle thus tests all combinations of signals, models each signal as a linear function of the other signals, determines the NMSE for the function and sends, at regular intervals, to the central server the most inter-esting relationships it has observed so far. The search can be done in parallel on several vehicles so that all relationships need not be tested on all vehicles. This is necessary if the number of models that need to be searched is too large to be done on a single vehicle. In this paper we limit the search to combinations of signals to a subset of available signals for the systems that we are interested in monitoring and with no time-lags on the signals. 3. Description of the experimental data 3.1. Vehicle data
Measurement data for a cooling system was collected from both a simulation model and a real bus. The main purpose of the cooling system is to keep the coolant temperature at a predefined constant level. The amount of heat that is removed from the engine by the coolant mixture is approximately 30% of the energy from the fuel ( Twiddle and Jones, 2002 ) and a malfunctioning, or incorrectly functioning, cooling system increases fuel consumption, emissions and wear of vehicle components. The most important parts of the cooling system are engine block  X  where the coolant mixture heats up, radiator  X  where the coolant mixture cools down, fan  X  increase cooling of coolant mixture in radiator, thermostat valve  X  controls the amount of coolant mixture through the radiator.

Four different signals were measured (engine power ( E p ), turbo pressure ( T p ), coolant temperature ( C t ) and cooling fan speed ( F in both the simulation model and in the real bus. The simulation environment had a driver in the loop and was done on a bus-model with a 12 l engine with 340 hp and the drive route had been extracted from a real drive cycle in city traffic with many hills and stops. A soil fault was simulated by covering the radiator area to different degrees (0%, 15%, 30% and 50%). The simulated bus drive time is approximately 30 min (for each of the four soil cases), with a sampling rate of 1 s for each signal. The coolant reference temperature was 85 1 C.

In the real bus experiment a road stretch was driven approxi-mately 40 min for three different soil cases (0%, 25% and 50% of the radiator area was covered). The bus was configured similarly to the simulated bus used for the simulated data. 3.2. Hard-drive data
A hard-drive case study was also performed based on data that has previously been used for detecting faulty hard-drives ( Murray et al., 2005 ), i.e. to predict whether a hard-drive is about to fail or not. The data was slightly modified such that all hard-drives that did not have at least 60 consecutive observations were removed (this is equal to 120 h of operation). The final data set had 178 normal drives and 86 faulty drives. Some of the attributes include counts of track-seek retries, read errors, write faults, reallocated sectors, head fly height too low or high, and high temperature.
After removing constant or unused attributes, there were 21 attributes in the dataset. 4. Results 4.1. Simulated vehicle data
With four available signals, and allowing a maximum of three input signals in a model, there are in total 28 different (linear) combinations possible: 4
The number of models that need to be searched grow exponen-tially when the number of available signals increase. Although there is a practical limit to how many combinations that can be fitted in a single system (because of computational limitations), it is possible to distribute the fitting of different models (to systems population of systems on which the leave-one-out experiment was performed. The minimum value of the p -value is shown in
Fig. 4 and it is seen that model configurations 13 and 14 have the most deviating models, with p -values significantly below 1/21 (the expected number of vehicles with soil level of 50%). The equations for those two models are
T  X  aC t  X  bF s  X  c ,  X  7  X 
T  X  aE p  X  bC t  X  cF s  X  d :  X  8  X  The model parameters for the two models are shown in
Figs. 5 and 6 . The averaged (for each soil case) minimum p -value for model 14 is shown in Fig. 7 , which shows clearly that the soil cases of 30% and 50% can be differentiated from the 0% case. 4.2. Real vehicle data
The same procedure as was described in Section 4.1 was repeated for the measurements on the real bus. The normalized mean squared error is shown in Fig. 8 and the model configurations with the lowest error were 1, 4, 5, 7, 8, 11, 12 and 14. The sampling distribution for the different soil cases was slightly different since the measured soil cases were not exactly the same as in the simulated data ( Fig. 9 ). Calculating the minimum p -value for the models with the lowest NMSE ( Fig. 10 ) shows that model 14 has the strongest deviating models.
In Fig. 11 the model parameters of model 14 is shown and it can be seen that all soil cases are well separated. The average p -value for model 14 is shown in Fig. 12 for the different soil cases. The p -value decreases with increasing soil level indicating that with a higher soil level the system becomes less similar to the normal systems. 4.3. Computer hard-drives
For the hard-drive case study there were measured 21 attri-butes. The number of possible signal combinations with 21 attributes is very large, even when only using a maximum of three signals in a self-organized model. This issue was handled by computing the pair-wise correlation between the attributes; attributes that had a correlation coefficient with an absolute value larger than 0.7 to any other signal were retained. This resulted in eight attributes where all possible combinations with up to three input signals (a total of 504) in a model were computed. Out of these 504 models there were 126 models that had the lowest mean square error (their 95% confidence interval was not over-lapping with the other models). Similarly to the truck case study above, a committee was formed from these 126 models to determine if a hard-disk was about to break down or not. If more than 10 models (8% of the models in the committee) agreed that a hard-drive is deviating, then the hard-drive was flagged as possibly faulty. The performance of COSMO on this problem is compared to other methods in Fig. 13 . COSMO as a self-organized method is on par with advanced supervised methods when the false alarm rate goes up. The other methods are Autoclass EF and EW clustering, multiple instance Na X   X  ve Bayes and Support Vector
Machine (SVM). The SVM and the Na X   X  ve Bayes are supervised methods whereas Autoclass is an unsupervised method. The performances of these methods are taken from Murray et al. (2005) . 5. Conclusion and discussion
Improved service and maintenance planning is an important issue in the vehicle industry. It is desirable to build vehicles that can tell what, if anything, ails them and thus avoid unplanned stops and speed up repair. However, the costs for building such systems using traditional approaches are too high. This paper suggests a fault detection strategy, consensus self-organized models (COSMO), for finding faults that are not predefined. The models themselves are also not predefined, instead they are generated (searched for) as vehicles are being used. The strategy can thus adapt itself to new variants or configurations of vehicles.
The strategy is based on finding strong relationships between sensor values on the vehicles and encode them in a compact model that can be transferred over a telematics gateway. The resulting models from several vehicles are then compared in a back office application and one or more vehicles (models) that are not in consensus with the group of vehicles (models) are flagged as potentially faulty. The approach was demonstrated on simu-lated and real data from a city bus and it was able to detect all fault cases. A comparison of COSMO to other methods was performed on a computer hard-drive dataset. It was found that it has better performance than the previously tested unsupervised
