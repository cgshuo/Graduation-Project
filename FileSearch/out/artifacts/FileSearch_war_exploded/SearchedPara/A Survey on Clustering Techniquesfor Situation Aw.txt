
Stefan Mitsch 2 , Andreas M  X  uller 1 , Werner Retschitzegger 1 , Andrea Salfinger 1 , Situation Awareness (SAW). SAW systems are increasingly used in large control centers for air or road traffic management in order to reduce the infor-mation overload of operators induced by various data sources. This is done by automatically assessing critical situations occurring in the environment under control (e. g., an accident causing a traffic jam) [3].
 Data Mining (DM) for SAW. The definition of relevant critical situations is provided in current SAW systems (e.g., [3,26]) explicitly by domain experts during a configuration phase , representing a time-consuming task. This effort of providing explicit knowledge could be complemented and eased by a data-driven approach in terms of DM techniques making direct use of the observed data, through detecting  X  X nteresting X  or uncommon relationships, which the domain experts might not be explicitly aware of (i.e., intrinsic knowledge). Furthermore, during runtime of the SAW system ongoing changes and additional uncommon relationships can be spotted that have not even been explicitly defined so far. Especially clustering techniques are considered to be benefi cial, since they require neither a-priori user-created test data sets nor other background knowledge and also allow anomaly detection, such as uncommon relations. If we consider a road traffic SAW system, clustering mig ht for example be used to detect (ST) hotspots on a highway, i. e., road segments and time windows where atypically many accidents occur, or to reveal current major traffic flows in an urban area. Specific Requirements of SAW. The nature of SAW systems, however, poses specific requirements on the applicability of existing clustering techniques. SAW systems have to cope with a large number of heterogeneous but interrelated real-world objects stemming from various sources, which evolve over time and space, being quantitative or qualitative in nature (as, e.g., demonstrated in [3]). The focus of this paper is therefore on evaluating existing spatio-temporal (ST) clustering techniques with respect to their ability to complement the specification of critical situations in SAW systems.
 Contributions. In this paper, we first systematically examine the requirements on clustering techniques to be applicable in the SAW domain. Then, we survey several carefully selected approaches a ccording to our criteria stemming from the fields of SAW and ST clustering, and compare them in our lessons learned, highlighting their advantages and shortcomings.
 Structure of the Paper. In the following sectio n, we compare our survey with related work (cf. Section 2). Then , we introduce our evaluation criteria (cf. Section 3), before we present lesso ns learned (cf. Section 4). Due to space limitations, the in-depth criteria-driven evaluation of each approach surveyed can be found online 1 only. Despite a plethora of work exists in the field of data mining, to the best of our knowledge no other survey has dealt with the topic of clustering ST data for SAW applications so far. However, there exist surveys about ST clustering (e. g., [21]) and ST data mining in general (e. g., [19], [29]), surveys about spatial (e. g., [11]) and temporal (e. g., [34]) clustering and various surveys on clustering in other domains (e. g., [15], [36]). Furthermore the field of stream data mining has received a lot of attention over the last fe w years and as a result several surveys on stream data clustering (e. g., [20]) and on stream data mining (e. g., [8], [13]) in general have been conducted.

In the following paragraphs these mentioned surveys are briefly discussed with respect to the contributions of our survey.
 ST Clustering. Kisilevich et al. [21] propose a classification of ST data and fo-cus their survey of clustering techniques on trajectories , being the most complex setting in their classification. The main part of the survey is a discussion of sev-eral groups of clustering approaches including different example algorithms for each group. Finally, they present examples from different application domains where clustering of traject ory data is an issue, like studying movement behavior, cellular networks or environmental studies. In contrast to our survey, Kisilevich et al. focus on presenting various groups of ST data mining approaches, rather than systematically analyzing different techniques backed by a catalog of evalu-ation criteria. Furthermore, we considered the applicability of the techniques to our domain on basis of SAW-specific criteria, while they conducted their analysis in a more general way. Nevertheless, thei r work represented a valuable starting point for our survey, from which we especially adopted their classification of ST data, like trajectories or ST events.
 Spatial, Temporal and General Clustering. Several surveys on spatial clus-tering (e. g., [11]) and temporal clustering (e. g., [34]) have been conducted for different application domains. Nevertheless, none of the surveyed approaches specifically deals with the unique characteristics that arise from the domain of SAW respectively from ST data in general (cf. Section 3.1), but take only either spatial-or temporal characteristics into account.

Finally, there exist numerous and comprehensive surveys on non-ST clustering (e. g., [15], [36]). These approaches cannot simply be used to work with ST data, but have to be adopted manually to deal with its particular nature.
 ST Data Mining. Kalyani et al. [19] describe the peculiarities of ST data models and the resulting increase of complexity for the data mining algorithms. In their survey they outline different dat a mining tasks compared to their spatial counterparts and motivate the need for dedicated ST data mining techniques. Geetha et al. [29] present a short overview of challenges in spatial, temporal and ST data mining. However, none of the above focuses on concrete data mining techniques, but rather gives an overview of the field of ST data mining. Stream Data Mining. In their survey on clustering of time series data streams, Kavitha et al. [20] review the concepts of time series and provide an overview of available clustering algorithms for streaming data. More general surveys of stream data mining were conducted by Gaber et al. [8] and Ikonomovska et al. [13]. Both review the theoretical foundations of stream data analysis and give a rough overview of algorithms for the various stream data mining tasks and applications. Furthermore, they mention that stream data clustering is a major task in stream data mining and lots of algorithms have been adapted to work on streaming data (e. g., CluStream [1], DenStream [7], ClusTree [22]).
However, in contrast to our SAW systems which store a history of the data received, thus allowing an arbitrary number of read accesses, such stream data mining approaches do not store the huge amount of data they process. Even though the elements of a data stream are temporally ordered, they might ar-rive in a time-varying and unpredictable fashion and do not necessarily contain a timestamp, which does not allow for the identification of temporal patterns (especially cyclic ones). Furthermore, most stream data mining approaches sur-veyed by these authors do not deal with spatial data at all and hence are not applicable here.
Consequentially, we conduct this survey on ST clustering to investigate the applicability of various clustering techniques for the field of SAW. In this section, we derive a systematic criteria catalog, (methodologically ad-hering to some of our previous surveys, e.g., [35]), which we use for evaluating selected ST clustering techniques. The cr iteria catalog consists of two sets of cri-teria, as depicted in Fig. 1, comprising SA W-specific criteria (c f. Section 3.1) and clustering-specific criteria (cf. Section 3.2), which are detailed in the following. Each criterion is assigned an abbreviation for refer ence during evaluation. 3.1 SAW-Specific Criteria The rationale behind the following SAW-specific criteria, which are illustrated by examples from the domain of road traffic control, is based on considering the kind of input data a clustering technique has to cope with ( X  X hat do we have X ) and further on reflecting on the intent of the analysis ( X  X hat do we want X ). Spatial, Temporal and Other Input Data Properties. As already men-tioned, SAW systems employed in control centers need to monitor a large number of interrelated objects anchored in space and time, both either with an extent or without. In particular the temporal properties ( TP ) range from instants to intervals, whereas the spatial properties ( SP ) comprise points, one-dimensional intervals (e. g., lines) or two-dimensional intervals (e. g., regions). Non-ST prop-erties can be of qualitative (e.g., freezi ng temperature) or qu antitative (e.g., 0
C) nature. Regarding SP and TP , however, we assume quantitative data, as typically required by SAW applications to monitor the ST environment. Heterogeneity of Input Data. Another SAW-specific requirement is that objects constituting a certain critical situ ation often exhibit a mixture of different ST properties. This can be exemplified by a situation involving three objects, (i) a bus, sending location points at time instants via GPS to the control center (i. e., a trajectory), (ii) a traffic jam, comp rising a spatial and temporal interval, both evolving over time (i. e., growing, shrinking, moving) and (iii) a fog area being spatially extended over a certain re gion and characterized by a temporal interval (e. g., predicted for two hours). The more different ST properties data a clustering technique supports, i.e., allows for heterogeneous input data ( HID ), the better it is applicable to the SAW domain.
 Evolution of Input Data. As indicated in the examples above, the temporal dimension furthermore captures the potential evolution of the observed objects ( E ) with respect to their spatial (e.g., location or length) or non-spatial (e.g., temperature) properties. An evolution along the spatial dimension corresponds to a mobile , i. e., moving, object, whereas an object solely evolving with respect to the non-spatial properties represents an immobile , i.e., static, object. Context of Input Data. The input data used in SAW systems often com-prises objects which are bound to a certain context ( CID ), enforcing constraints on the interpretation of the input data (e. g., in road traffic, the majority of objects cannot move around in space freely, but is bound to the underlying road network), or further requirements on the input data (e. g., necessity of velocity information). We evaluate if and what kind of context information is required. Fuzzy Input Data. SAW systems often have to cope with fuzzy input data ( FID ), for example incidents reported by humans who only have a partial over-view of the situation. Fuzzy input data might address the spatial properties ( SP ) (e.g., uncertainty about the exact location of an object), the temporal proper-ties ( TP ) (e.g., an accident has occurred within the last half an hour), or the non-ST properties (e.g., it cannot be defined exactly what has happened).
Besides the criteria mentioned above, which detail the nature of the input data, the following further deal with the goal of the analysis.
 Intention. This criterion ( I ) reflects the objective of the analysis , i.e., the kind of implicit knowledge that should be extracted by the clustering technique. Possible intentions are clustering of events or regions with similar ST cha racteristics, clustering of trajectories , or the detection of moving clusters .
 Online or Offline Analysis. The requirements imposed on the clustering tech-niques differ with respect to the phase they should be employed. During the con-figuration phase of a SAW system, we have to perform an analysis on a complete, historical data set, i. e., offline analysis . However, since an SAW system typically operates on a real-time environment, we also want to perform an analysis at run-time, i. e., online analysis . Since clustering techniques devoted to online analysis often rely on optimizations and approximations in order to deliver fast results (e.g., compute only locally optimal clusters), these approaches are less suited for configuration tasks where computation time is not a major issue, whereas an exact result is preferred. Thus, this criterion ( OOA ) reflects whether the clus-tering technique is only suited for the offline configuration phase, or if it is also applicable to or favored for runtime analysis. 3.2 Criteria Imposed by Clustering Techniques Whereas in the previous section, the criteria have been derived from the na-ture of data and the intention of the analysis stemming from the SAW domain, the present section focuses on assessing how these goals can be achieved with dedicated ST clustering techniques.
We first give a short description of the main contribution ( MC ) and distinguish the clustering techniques according to their algorithm class ( AC ), describing the method how the clusters are obtained. Following [12] this can be, due to par-titioning (i.e., the data space is partitioned as a whole into several clusters), hierarchical clustering (i. e., clusters are created by merging close data points bottom-up or splitting clusters top-down), density-based clustering (i. e., clus-ters are defined as exceeding a certain density of data points over a defined region), and grid-based clustering (i. e., the data space is overlaid by a grid, grid cells containing similar structures are merged).
 The remaining criteria are structured into functional and non-functional ones. Functional Criteria. The distinct algorithmic methods yield different cluster shapes ( CS ), distinguishing spherical , rectangular or arbitrarily shaped clusters. Besides, it is investigated if a technique can handle clusters which overlap ( CO ). For analysis properties ,weconsider spatial analysis properties ( SA ), i. e., what kind of spatial data is internally processed by the algorithm, temporal analysis properties ( TA ), i. e., time instants or intervals, temporal patterns ( TAP ), i. e., linear or cyclic time patterns, and the focus of the analysis ( F ), i. e., if spatial and temporal aspects are handled equally or if one is favored without ignoring the other. We evaluate if the techniques support dedicated handling of noise ( N ) within the data set and further more investigate the employed similarity measures ( SM )andthe determinism of the produced results ( D ).
 Non-functional Criteria. These criteria comprise the configurability ( C )ofthe approaches, reflecting to which degree the clustering technique can be tweaked, and the computational complexity ( CC ). Furthermore, we examine whether and which optimization strategies ( O ) are provided, which would be beneficial in reducing run-time, however might also affect the quality of the obtained clustering result. In the following we present our selection of techniques, and group and analyze them according t o our criteria. 4.1 Rationale behind the Selection of Techniques We carefully selected ST clustering approaches ranging from very recent ones on the one hand, to several more mature ones on the other hand to provide a broad overview of the field of ST c lustering. We did not include visually aided approaches (e. g., Andrienko et. al [2]) in our survey as they contradict our approach to complement the configuration of SAW systems in a more data-driven way because a purely user-guided clustering approach again has to be steered by a domain expert.

In the following, we structure our discussion into three groups according to the kind of evolution the techniques consider. The rati onale behind these categories is that algorithms from the different groups share several properties, which is reflected in the evaluation criteria tables.

The first group comprises techniques that do not entail any evolution ( NE ), like clustering ST events (i. e., grouping events in close or similar regions) or ST groups (i. e., finding regions sharing similar physical properties over time). Techniques for trajectory clustering (i. e. , grouping similar trajectories) deal with the evolution of objects that move along these trajectories ( OE ). And finally, the area of moving-object clustering (i. e., discovery of groups of objects moving to-gether during the same time period, so called moving clusters) and the detection of spatio-temporal trends (e.g., disease outbreaks) deal with the evolution of clusters over time ( CE ). 4.2 Lessons Learned Our evaluation of ST clustering approaches for the field of SAW has revealed interesting peculiarities of current clustering techniques. In the following, we explain our findings grouped according to our evaluation criteria (cf. also Figure 2, 3 and 4). Note that a tick in parentheses means that the criteria is only partly fulfilled by the approach.
 Evolution Mostly Supported (E). Algorithms from the NE group work with objects in fixed locations and thus do not support spatial evolution at all. All other techniques allow for moving objects.
 Spatial and Temporal Extent Not Handled (SP, TP). None of the sur-veyed techniques can handle anything but spatial points or temporal instances  X  lines, rectangles or temporal intervals a re not dealt with. Hence, currently none of the approaches is able to directly deal with the heterogeneity ( HID ) criterion. Fuzziness of Data Is Not an Issue (FID). All of the approaches treat objects as facts and do not consider any uncerta inties, except Jensen et al. [16] who consider that objects might disappear without notifying the server and reduce the confidence in the assumed object movement as time passes.
 Almost NO Context Knowledge Supported (CID). Most of the algo-rithms work without any knowledge of context and do not allow any further information than a data set and parameter values. Exceptions are techniques that cluster the objects backed by a network graph (e. g., [5]), or techniques that make use of velocity information for moving objects (e. g., [16], [23]). Techniques Mainly Focus on Offline Clustering (OOA). While the sur-veyed techniques mainly aim at offline clus tering of closed data-sets, only few exceptions (from each group) allow online clustering of ever-changing data-sets (e. g., [32], [10], [16]).
 Majority of Algorithms Is Density-Based (AC). Our survey comprises clustering techniques from all classes of algorithms, whereby OE techniques are usually density based, while CE techniques cover all algorithm classes. Predominance of Arbitrarily Shaped Clusters (CS). OE and NE techniques mostly result in arbitrary clust ers, whereas clusters produced by CE techniques are often restricted to spherical or r ectangular shape (e. g., [14], [30]). Cluster Overlap in CE Techniques (CO). Overlapping clusters are only considered by few of the techniques mostly from the CE group (e. g., Kalnis et al. [18]). These approaches are able to detect different clusters moving through each other and can keep them separated until they split again.
 Spatial Analysis Properties Highly Dependent on Intent of Analysis (SA). While NE and CE techniques are focused on clustering data points, OE techniques mostly deal with clustering of lines, since a trajectory can be inter-polated to a line. Li et al. [23] first group the objects into micro-clusters (i. e., small regions) and then combine these re gions to complete clusters. However, as they cluster the micro-clusters center points, they also deal with points only. Only Temporal Instants (TA) and Linear Patterns (TAP). Linear pat-terns for time instants are predominant in the surveyed approaches, while other temporal properties like cyclic time patterns or intervals are unhandled in the majority of cases, especially by CE techniques. Only Birant et al. [4] include cyclic time patterns, and Nanni et al. [27] consider time intervals.
 Focus on ST data (F). Most of the techniques are focused on handling the specific nature of ST data. However, there are several spatial-data dominant techniques originally stemming from the field of spatial clustering, enriched with the ability of dealing with temporal data aspects (e. g., [4], [32]). Only Nanni et al. [27] presented a temporal-data dominant variation of their algorithm. Sparse Explicit Noise Handling (N). As most of the proposed techniques extend well-known clustering algorithms to work with ST data, the handling of noise highly depends on the abilities of the underlying base algorithm. An example for an often used algorithm is DBSCAN [6], which is generally tolerant to noise, although it is prone to errors if clusters of different densities exist. Only Birant et al. [4] and Rosswog et al. [30] explicitly address the topic of noise and inconsistencies by proposing an additional density parameter or a stability filter. As detection of noise might be used to find ST outliers, approaches that deal with anomalies might be applicable in different ways within an SAW system. Euclidean Distance as Similarity Measure (SM). Regarding similarity measures, most authors make use of an adj usted version of the Euclidean distance (ED) (e. g., weighted ED, squared ED). Obvious exceptions are Chen et al. [5] who operate on a network graph and thus use a network distance and some special approaches that do not require a similarity measure at all (e. g., [33]). A border case is the similarity measure used by Tai et al. [32], who define their own cost function looking similar to the ED, considering only (what they call) optimization attributes, thus excluding spatial components.
 Mostly Deterministic Techniques (D). Only few of the techniques use heuristic approaches to deliver fast, but more inexact results (e. g., Iyengar et al. [14] who propose a heuristic cluster sea rch because of the huge search space). Various Levels of Configurability (C). The number of parameters ranges from none or automatically approximated to up to seven parameters. For instance, DBSCAN-based algorithms usually require a minimum number of points per cluster and a desired cluster radius, wh ile grid based clustering techniques re-quire a grid-cell border length. We highlight the approach by Wang et al. [33], where parameters can be chosen arbitrarily, but might be approximated by an optional technique, thus offering a hybrid approach of parameter settings. Computational Complexity Rarely Included (CC). Most authors did not provide the computational complexity of their approaches. Noticeable is the grid based algorithm proposed by Wang et al. [33] that has the advantage of a linear runtime complexity, as a single iteration of the grid is sufficient to discover ST clusters.
 Few Optimization Strategies (O). Only some of the authors suggest usage of special optimization strategies, like indexes or pruning. Some authors sug-gest different variants of their algorithms, offering a trade-off between execution efficiency and quality of results. For example Tai et al. [32] suggest an exact technique for cluster discovery, and a second variant that is more efficient in execution, but might not yield the best results. 4.3 Conclusion In this paper we focused on ST clustering approaches in the domain of SAW. We proposed evaluation criteria stemming from the field of SAW on the one hand and from the field of ST data mining on the other hand, to evaluate the approaches with respect to their applicability to the field of SAW.

Summing up, we state that none of the surveyed approaches fulfills all the criteria stemming from the special nature of data in SAW systems. Spatial and temporal extent ( SP ) as well as cyclic time patterns ( TAP ) are not the focus of ST clustering techniques. Also fuzzy input data ( FID ) is not handled in the pre-dominant number of cases and only few online approaches ( OOA )exist.Aslongas no appropriate techniques are available, we suggest transformation of the input data to enable application of the clustering techniques reviewed in this survey (e. g., only the starting points of traffic jams could be used for clustering, in order to apply techniques operating on point input data only and thus discarding the information about their extent).

