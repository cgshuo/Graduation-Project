 1. Introduction
Data warehousing systems were designed to support decision-making within organizations. These systems homogenize and which relevant knowledge can be extracted and applied in the organization's decision-making processes. analysis) and dimensions showing the different perspectives from which a subject can be analyzed. contains several requirement-driven methods, but all of them must be carried out manually. Automating requirement-driven lack the required degree of formalization.
 with requirements at a high level of abstraction.
 posteriori but instead performs both phases simultaneously. Consequently, each paradigm bene sequentially (a detailed list of the main advantages of MDBE over previous approaches is given in Section 2 ). in details, but rather on a largely automatable approach.

Requirements are typically expressed at a high level of abstraction and need to be formalized prior to automation of the over the data sources). SQL queries provide a clearly de fi process.

The inputs of the MDBE method are the end-user information requirements (expressed as SQL queries) and the integrated derived from the data sources and capable of retrieving data requested in the input requirements. Brie Conciliation of the schemas proposed for each query produces the output constellation schema. by the following components:  X   X  report the amount of business that was billed, shipped, and returned (Q5),  X  determine the value of goods shipped between certain nations to help in the re-negotiation of shipping contracts  X  identify customers who might be having problems with the parts that are shipped to them  X 
The functional query de fi nition, which uses the SQL-92 language to de example, business query #5 (Q5) is expressed in SQL as: SELECT n_name, sum(l_extendedprice*(1  X  l_discount)) as revenue FROM customer, orders, lineitem, supplier, nation, region
WHERE c_custkey=o_custkey and l_orderkey=o_orderkey and l_suppkey=s_suppkey and c_nation key=n_nationkey and s_nationkey=n_nationkey and n_region key=r_regionkey and r_name=  X  [REGION]  X  and o_orderdate&gt;=  X  [DATE]  X  and o_orderdate&lt;  X  [DATE]  X  +  X  1  X  year GROUP BY n_name ORDERBY revenue desc; (SSB) [27] , which was devised from the TPC-H benchmark and introduces an MD schema derived manually from the TPC-H relational schema. In this paper we use TPC-H to demonstrate how to derive the MD schema with our approach. We then con the reliability of the result obtained by comparing it to that of the MD schema proposed in SSB (see Section 5.2 ).
We considerthe TPC-Hrelational schemaastheintegrated relational schemaofthedata sources,andthe high-leveldescriptions of sources (in this case, the TPC-H logical schema) that meet the end-user requirements (the 22 TPC-H SQL queries).
In summary, MDBE has three main bene fi ts: (i) It is a fully automatic approach that handles and analyzes the end-user derivedfromavalidationprocess.InputqueriesarevalidatedtodeterminewhethertheymakeMDsense,sotheschemasproposedare approachindepth. Section4 focusesonthecoreofourapproach,theMDBEmethod.Finally,in Section5 wepresentthestatisticsofour approach over the TPC-H case study and compare the results with those presented in the Star-Schema Benchmark. 2. Related work and main contributions
Winter et al. [36] , these methods can mainly be classi fi  X 
Supply-driven: These approaches start from a detailed analysis of the data sources to determine the MD concepts in a  X 
Demand-driven: These approaches focus on determining the end-user MD requirements (as typically performed in other information systems) to later map them on to data sources, as described in [13,16,30,36] , among others.  X  others.

Most of these approaches do not automate (most of) the de thorough analysis of the relational sources. Most methods of this type have three common limitations: suchthatmayidentifyfalsefactsoroverlookrealones [11,20] .Speci (which are identi fi ed by a bayesian network). The other approaches require facts to be identi
Dependency on normalization . Design patterns used to identify dimensional data are mainly based on normal form.
 literature is described in detail below:  X  to identi fi ed manually. Once this step has been completed, a conceptual schema is derived following the many-to-one relationships for each fact proposed, i.e., dimensions are identi denormalized schemas or requirements.  X  automatesthesupply-drivenstagebutthedemand-drivenstagemustbeperformedmanually.Moreover,requirementsarenotused containingnumerical fi elds is identi fi edasa potential fact, and dimensional data are identi onlymethodthatpartiallysupportsdenormalizedinputrelationalschemas,aseachremainingattributeinatableidenti many results, and fi ltering them through a manual demand-driven stage would be a dif  X  and key or cardinality information, which identi fi es potential snow snow fl ake schemas,theyrelyon  X  foreignkey  X  X  X  candidate key computed for all instances.  X 
Giorgini et al. [13] presentedademand-drivenapproachforderivingtheconceptualMDschema,althoughtheyclaimthatitcanalso beusedasahybridapproach.TheyproposetogatherMDrequirementsasdescribedinthedemand-drivenstageandthenmapthem reorder dimensions or try to fi nd new directions of analysis, although this process must be performed manually.  X  automaticallyandsimultaneously,whichimprovesthe fi nalresult,asdiscussedinthefollowingsubsection.Finally,incontrasttoour approach, Maz X n et al. assume that the data sources are normalized up to third normal form. automate the analysis of the sources ( [5] from domain ontologies and [34] from ER schemas) in order to extract as much multidimensional knowledge as possible. They later use this knowledge to simplify and guide the compulsory demand-driven stage that we will need to perform.
 These approaches are complementary to MDBE, as they can be used in other scenarios where our approach does not apply.
Thus, they cannot be smoothly compared to our method. Nevertheless, the contribution of MDBE regarding them is clear: it considers requirements as fi rst-class citizens while they do not. Consequently, i) our output schema 2.1. Contributions of the MDBE method relational sources. 2.1.1. Demand-driven approaches therequiredeffortis considerablylower.We usea well-establishedlanguagesuchasSQL tofacilitatethemappingoftherequirements someone with these skills. Our framework has two main advantages over current demand-driven approaches:  X  the queries; the database administrator, for example, would have a perfectly suited pro assumptions as used in current automatable approaches.  X 
Althoughourapproachfollowsahybridparadigm,mostofthetasksareautomated.Brie consuming nature of this task can render it unfeasible when large databases are used. drops in performance when a large number of attributes or instances are processed [15,22,33,35] .
Other important demand-driven approaches, such as [16] , use a formal framework to derive the MD schema. However, little UML-based method that introduces a metamodel and a set of transformations to perform the mapping between each metamodel. ithas tobeperformed manually.Morecomprehensivedescriptions of thesemethodsandhowtheyworkcanbefoundin [8] and [12] . thecompletemappingof therequirementsoverthedatasources.Importantly,theexhaustiveanalysis anditerativeapplicationof the approaches. 2.1.2. Automatable approaches
The MDBE method was designed to overcome the limitations shared by current automatable methods. To our knowledge, (i) MDBE is the fi rst method with an automated demand-driven stage. Our approach requires end-user requirements to be driven approach would do if the proper primary key  X  foreign key relationship were de comparison clauses in the WHERE clause, the attributes involved in these clauses are identi regarding dimensional data identi fi ed from denormalized relations, MDBE cannot automatically generate the dimension in this task, since the set of attributes to work with is considerably smaller than in the general case. for further details).

In addition, (vi) MDBE can derive new concepts that are not stated in the logical schemas. Since we handle requirements data summarizability properties (see Steps 1 and 3 in Section 4.1 ).
 improved many aspects of our previous work: MDBE can now handle denormalized logical schemas, and we have improved the conciliation between the demand-driven and supply-driven stages (see (vi)). We have also relaxed some of the theoretical statistics about our process obtained using the MDBE tool. 3. Our approach needed.Althoughthispre-processfallsoutsidethescopeofthispaper,somerelevantfeaturesshouldbenotedhere.Datawarehousing words and closely re fl ect their reality. For example,  X  region, product and time  X  would be typical information requirements.

Thenextstepinourapproachformalizestherequirementsgathered.Asdiscussedpreviously,weaimtoautomatethemanipulation anomalies, and (2) placeable in an MD space. If these constraints are satis the requirements (i.e., a constellation of MD schemas). 3.1. Foundations
As there is not yet a standard MD notation, we now introduce the notation used in this paper. cells of the same granularity that contain data relating to the same fact (i.e., a Cell is a contains several Cells . We may analyze this fact from its lineitem_dim, part, nation and customer tuple univocally identi and a derived_measure). Finally, one fact and several dimensions for its analysis produce a star-schema. the constraints that an SQL query must satisfy in order to make MD sense.
 translation of a set of MD operators into SQL. Below, we provide de De fi nition 1 . The cube-query template
The standard SQL'92 query template to retrieve a Cell of data from the RDBMS was SELECT l 1 .ID, ... ,l n .ID, [ F( ]c.Measure 1 [)], ...
 FROM Cell c, Level 1 l 1 , ... , Level n l n WHERE c.key 1 =l 1  X ID AND ... AND c X key n =l n  X ID [AND l i  X attr Op.
 [GROUP BY l 1 .ID, ... ,l n  X ID ] [ORDER BY l 1 .ID, ... ,l n  X ID ]
TheFROMclausecontainsthe  X  Cell table  X  and the  X  Level tables represent concept associations . The WHERE clause also contains logical clauses restricting a speci constant using a comparison operator. The GROUP BY clause shows the identi sort the output of the query.
 level of data granularity) and in our method, we will fi rst identify Cells of interest and later, facts . De fi nition 2 . The multidimensional space arrangement instance of an analysis dimension , and every dimension instance may be related to many instances of the Cell . De fi nition 3 . The base concept De fi nition 4 . The necessary conditions for correct summarizability aggregate Stock over Time dimension bymeansofsum,assomerepeatedinstanceswoul d be counted. Unfortunately, compatibility (see Steps 1 and 3 of Section 4.1 ; there, data summarizability properties identi to make MD sense if it satis fi es the following semantic constraints (which can be easily derived from the de  X  notation (see De fi nition 1 ).  X  [C2] Star-schema : Cells are related to levels by to-one relationships (see De  X  (see De fi nitions 1 and 3 ).  X  [C4] Orthogonality : The set of concepts that produce the MD space must be orthogonal (see De  X  the query should not allow NULL values when relating factual to dimensional data (see De  X  the query should avoid double-counting instances; for example, Cartesian products (see De  X  performed through comparisons in the WHERE clause (see De proposed by our method will be able to retrieve (by using MD operators) data demanded in the requirements. Speci guarantees that data manipulation is restricted to the MD operators. 3.1.1. Additional considerations
As stated above, the constraints are used to validate the process and inform the user that the current requirement does not make MD sense. Otherwise, the and we can say that the input query is a valid MD requirement. However, even if [C5], [C6] and [C7] are not satis cube of interest to the end-user may still be retrieved. the data sources but which may still be derived from them. Speci we are interested in analyzing only those lineitem with supplier (i.e., a speci sources). Thus, we may relax [C5] and produce this result if the user is interested in this specialization.
In the second case, two values not satisfying the disjointness constraint may produce a meaningful derived measure; for SELECT nation, o_year, sum(amount) as sum_pro fi t
FROM (SELECT n_nameasnation, extract(year from o_order date) as o_year, l_extended price*(1  X  l_discount)  X  ps_supply cost*l_quantity as amount FROM part, supplier, lineitem, part supp, orders, nation WHERE s_suppkey=l_suppkey AND ps_suppkey=l_suppkey AND ps_partkey=l_partkey AND o_orderkey=l_orderkey
AND s_nationkey=n_nationkey AND p_name like  X  %[COLOR]%) as pro GROUP BY nation, o_year ORDER BY nation, o_year desc; pro our method produces results which satisfy [C5] and [C6]. However, in the MDBE method we apply the following rule: specializations (not captured in the data sources) by relaxing these constraints. considered. would not make MD sense. However, this could occur if the person creating the queries is not suf example, by means of alternative join paths between two concepts.
 path following the lineitem  X  orders  X  customer  X  nation foreign key would make sense in many organizations.
 way it preserves [C7]. Otherwise, the query should be disregarded. In the equivalent to the previous one and it will make MD sense (i.e., this query could be generated by OLAP tools). activating or deactivating the constraint). 3.2. Internals
In this section we show how multidimensional concepts are identi the multidimensional graph .
 not between relational tables).
 node and its attributes as MD concepts, in such a way that the whole labeling satis that it looks for a MD interpretation of the graph).
 section and accordingly, labels the graph. 3.2.1. Attribute labeling as a level or a descriptor .
 if a given attribute is labeled as factual data according to any of our criterion, and as dimensional data by another. 3.2.2. Node labeling can be labeled as either dimensional data or factual data (or even both, as discussed later in this subsection):  X  labeled as a level (i.e., as L ).  X  types of Cells :  X  dimensional concepts that determine the MD space in which to place the data. There are three possible cases: the Cell MD base ) or (iii) a set of attributes fully determining the MD base .
  X  Cell ( C ): These nodes represent  X  factless facts  X  [18] . This de to [C6], any other alternative would not make multidimensional sense as a Cell (depicted in the
Note the MD semantics involving each alternative in the decision diagram discussed above. Cells identi data aggregation will represent  X  aggregated factual data and the node is not labeled (see the X mark in the fi gure). factual data by the decision diagram shown in Fig. 4 , and as dimensional data by the decision diagram shown in Fig. 5 .  X  analytical levels and descriptors that form other analytical perspectives.
  X  labeled as CD .
 aggregated attributes  X  i.e., l_extendedprice and l_discount node ( CDM ) since it contains measures , the link attributes and also an additional dimensional attribute. state, we can label each node as either CM (if one of its attributes is identi as a dimensional concept ). From the CM state, we can keep the same label if any other measure is identi an attribute playing a dimensional role and not part of the link attributes is identi dimensional data).

Some transitions shown in the state diagram are labeled with the NKD ( New Knowledge Discovery ) tag. In MDBE, a state 3.2.3. Edge labeling
Cell  X  Cell , Cell  X  Level , Level  X  Cell and Level  X  Level . For example, a Cell but, as previously discussed, MDBE has different labels to identify factual and dimensional nodes. Speci regarding edges, hybrid nodes can only play a Cell role, as justi
Next, we introduce the edge labeling process: (i) For each join between tables in the WHERE clause, we fi
It can also be seen that many-to-many relationships would not generally produce a valid labeling. According to the as (i) it is placed in the to-one end of a relationship (see second, fourth and Level  X  Level one-to-many relationship (see second column).

According to Table 2 , the node in the to-many end may represent a level (see second column) or a Cell (see third and a many-to-one relationship. For this reason, the semantics of this edge would capture a Cell (depending on the role of n ), but never a Level  X  Level relationship. Indeed, a Level considering h to play a strict dimensional role (i.e., labeling it as L ).

Summing up, from the perspective of the edge labeling process and concerning hybrid nodes, factual data is of more relevance than dimensional data. Note that this is sound with the hybrid node de data). 4. The MDBE method
The MDBE method has two inputs: the end-user information requirements (expressed as SQL queries) and the logical model of the data sources. As output, our method produces a constellation schema from the data sources, which allows the stages:  X  crucial in inferring the conceptual relationships between concepts.  X 
The second stage (see Section 4.2 ) validates the MD graph created in the resulting MD schema is directly derived from the MD graph.  X 
The third stage (see Section 4.3 ) fi nds the most representative results among those obtained. The step in which new MD which results should be presented to the user.  X 
Finally, the fourth stage (see Section 4.4 ) conciliates the MD schemas obtained for each query. The result is a minimal constellation schema subsuming each of the schemas obtained for the input queries. fi nal conceptual schema. This feature facilitates the maintenance of the MD conceptual schema. 4.1. First stage: concept labeling section, we introduce a detailed algorithm in pseudo-code (the MDBE algorithm ) for implementing the purposes of the study, the comprehensibility of the pseudo-code took priority over its performance (nevertheless, some optimizations have already been applied for its implementation in the MDBE tool): 1. For each table in the FROM clause do (a) Create a node and Initialize node properties; 2. For each attribute in the GROUP BY clause do (a) Label attribute as Level; (b) node= get_node ( attribute ); Label node as Level; (c) For each attr2 in follow_conceptual_relationships (attribute, WHERE clause) do 3. For each attribute in the SELECT clause not in the GROUP BY clause do (a) Label attribute as Measure; (b) node= get_node ( attribute); Label node as Cell with Measures selected; 4. For each comparison in the WHERE clause do (a) attribute= extract_attribute ( comparison ); (b) if !(attribute labeled as Level ) then (c) For each attr2 in follow_conceptual_relationships (attribute, WHERE clause) do 5. For each join in the WHERE clause do (a) /* Notice a conceptual relationship between tables may be modeled by several equality clauses in the WHERE */ (b) set_of_joins=look_for_related_joins ( join ); (c) multiplicity=get_multiplicity ( set_of_joins); relationships (d) For each relationship in get_allowed_relationships ( multiplicity) do (e) if !( size of ( relationships fi tting )) then return notify_fail ( (f) Create an edge( get_join_attributes ( set_of_joins )); Label edge to relationships (g) if ( unequivocal_knowledge_inferred ( relationships_ fi 6. for each g in New_ Knowledge_ Discovery(graph) do (a) output+=validation_process(g); //A detailed pseudo-code of this function may be found inSection 4.2
The algorithm analyzes each query clause according to De fi compatibility information.
 present, a detailed view of each step for Q5. The SQL translation of this query can be found in Section 1 . In this initially has six nodes: customer, orders, lineitem, supplier, nation and region. (see [C1]) must fully functionally determine data. Thus, fi represent conceptual associations stated in the end-user requirements [C1]).
 the logical schemas of the data sources (for instance, data grouping). Consequently, every attribute identi labeled in the MD graph as an interesting level of analysis.
 decision diagram shown in Fig. 6 . Finally, we add the identi clause instead of n_name, s_nationkey and n_nationkey would have been identi store the n_name as the data cube base in the graph metadata.
 step cannot identify them (these types of Cells and those not containing measures will be identi we also track the compatibility information identi fi ed in the node metadata.
 (i.e., n_name; see previous step).
 have been labeled as levels in Step 2).
 ( r _ name=  X  [REGION]  X  , o _ orderdate N =  X  [DATE]  X  and o _ orderdate are involved in a join.

Table2 ).Thesealternativesarecheckedpriortolabelingthe edge,andalabelisoverlookedifitcontradictscurrentknowledgedepicted second case the algorithm stops since we have identi fi ed a conceptual relationship that does not make MD sense. many side of the relationship (since o_orderkey is de fi ned as the primary key of orders and l_orderkey is de key to o_orderkey). (ii) Next, according to Table 2 , this one-to-many relationship may represent a Level as CM and this edge label requires it to be labeled as dimensional data. In contrast, the Cell orders attribute aggregated in the SELECT clause). Finally, the Level (if none of their attributes have been labeled) may have not been labeled. Speci may need to introduce intermediate concepts to relate explicit concepts stated by the user. In general, nodes containing refer to intermediate nodes and nodes with interesting alternative labels as implicit nodes. analytical alternatives that may have been overlooked by the user. multiple MD schemas for a single query.
 graph is generated.
 generate 32 graphs (i.e., 2 5 combinations) because many of them are meaningless in the MD model. From Step 5, a given labeling is overlooked if it contradicts knowledge depicted in the graph. For example, consider the following labeling will eventually be found to make MD sense (the last column of Table 3 shows which step invalidates which combination). 4.2. Second stage: multidimensional graph validation previous section): 9. For each Cell pair in the multidimensional graph do 10. if contains_cycles ( Cells path) then 11. For each element in get _1_ to_N_context_edges_and_nodes (Cells path) do 12. If exists_two _1_ to_N_alternative_branches ( Cells path) then return notify_fail (
Step 7: The MD graph must be connected to avoid the  X  Cartesian Product composed of valid edges that produce a path between Cells (factual data) and connected subgraphs of levels (dimensional data) surrounding it  X  these constraints will be properly checked in the following steps. Example: In our example, the 8 MD graphs to be validated (see Table 3 ) are connected. [C4], two different levels in a subgraph cannot be related to the same Cell (Step 8b); to satisfy [C5] and [C6], level Step 8c.
 with measures , but it does not raise any aggregati on anomalies in any of the graphs. paths to the whole CK of the other Cell . (ii) Alternatively, if both CKs are r elated by one-to-many paths or the Nevertheless, this step may eventually relax disjointness, as discussed in Section 3.1.1 . satisfy the MD constraints. For example, the labeling alternative shown in the third row of Table 3 would produce a forbidden many-to-many relationship between customer and supplier in the context graph. There are only four viable graph.
 [C6], Steps 11 and 12 look for potential aggregation problems; the side of a one-to-many context edge or node, and the second looks for alternative branches with one-to-many context edges or nodes each, which would produce a forbidden many-to-many relationship between the Cells involved (as disjointness as discussed in Section 3.1.1 .
 of Table 3 ) or if all of them except region played a factual role (row 2 of Table 3 ). In both cases, identi lineitem.
 context edge). In this case, no result would be produced and, according to R1 (see Section 3.1.1 for a detailed de andmustbeconsideredavalidMDdatacube.
 every step discussed above would be presented to the user.
 sound and make MD sense. Therefore, MDBE would produce two different MD schemas that would satisfy Q5 (these can be determined from Fig. 8 and rows 6 and 7 of Table 3 ). 4.3. Third stage: fi nding representative results
Step 6 in the fi rst stage of the MDBE method may produce several alternative graphs for the same query. Unlabeled nodes which are validated in the second MDBE stage. Eventually, those graphs that make MD sense will be considered in the to the following rule: the potential factual role of that node.

Two sibling graphs differ only in the labeling of one node. Therefore, they have exactly the same labels except for one node, which is considered to play a factless fact role in one graph and a strict dimensional role in the other. As an query: (differing in the label of D) are siblings. In this case, and according to R2 ,forthe graph and choose Graph 2 as the most repre sentative; for the second pair we disregard Graph 3 and choose Graph 2 again. perspectives. MDBE uses them to analyze the potential factual data that a dimension may contain. However, in most cases, produces sibling graphs and is only considered and presented to the user in one of two cases. (i) In the details). Note that this type of node is relabeled in Step 6 as CDM and, as such, does not sibling graph for this labeling).
 if either supplier or orders plays a factless fact role (the query semantics can be checked to con query de fi nition). 4.4. Fourth stage: conciliation
MDBE validates each input requirement and obtains a potential set of MD schemas for each query (see the three previous of schemas covering all of the queries.

MD graph is normalized. This means that any node labeled as CDM or CD will produce two different nodes: according to the algorithm (for clarity, the comprehensibility of the algorithm took priority over its performance):  X  (1) MDBE looks for all the facts identi fi ed in the MD graphs, and creates a new factual class relationships between facts depicted in the graphs by semantic relationships between classes.
The remaining classes will not contain measures as they were identi relationship between the two classes. The same is done with lineitem and order, and lineitem and supplier (Q5).  X  (2) Next, we conciliate the dimension hierarchies identi fi hierarchies are compatible if they share their atomic level . the MD graph, a hierarchy is represented by the subgraph containing the nodes that form the dimension. For example, the these three nodes.
Therefore, a hierarchy h subsumes ahierarchy h  X  if the subgraph representing h  X  (2.1) If a given hierarchy h subsumes a hierarchy h  X  and h  X  (2.2) Alternatively, if h subsumes h  X  and h  X  does not subsume h , the descriptors of h  X  (2.3) Finally, if h does not subsume h  X  and h  X  does not subsume h , they are conciliated as follows: i)
Example: In our example, Q5 and Q9 provide two sets of compatible dimensions (i.e., the tion  X  region from Q5 and supplier  X  nation from Q9, and the second set contains orders_dim from Q9 and Q5, and it with the descriptors of the discarded one.
 a detailed conciliated hierarchy.  X  (3) Finally, a pruning step is carried out. MDBE identi fi must decide if it really makes sense or it was an error.

Example: In the TPC-H case study, this would be the case of supplier and customer. Both have been identi which they were derived, we may decide to eliminate them (as was the case in the analytical perspectives. This explains why two dimension hierarchies such as A
A them. As explained in Step 2.3 of the conciliation process, the hierarchies should be conciliated as: B alternative branches starting from A (the common part).
 identi fi ed; this, as a whole, produces a constellation schema (see Fig. 3 ). Note that this dimension hierarchies identi fi ed in the process, whereas descriptors have been overlooked to avoid disrupting the explicitly in orders_dim). 5. Analysis of the TPC-H empirical results output thanks to the novel contributions of the MDBE method, and the computational complexity of the algorithm. 5.1. Input queries needed and 39 descriptors):  X  other words, some queries are redundant and are not relevant to the out of 39 descriptors).  X  queries (and 6 out of 9 measures and 10 out of 39 descriptors resulting MD schema.
 queries. Once most of the structure has been de fi ned, it can be customized as in traditional approaches. case, these concepts can be de fi ned with 8 queries and we would have approximately 14 level identi fi ed and let users add those that are of interest to them.
 add r_comment to the output schema than to launch a new query speci 5.2. Output correctness
TPC-H schema. This schema was devised to improve the querying performance of the data warehouse by denormalization. Data speedupcertainqueries [18] .UnlikeSSB,theMDBEmethodproducesaconceptualschema,buttheSSBlogicalschemacanbeobtained  X  partsupp_dim) must also be denormalized.  X  these three facts (therefore, our conceptual schema allows us to they were merged in a single table).

To summarize, the MDBE method can derive the same MD schema as SSB but, in contrast to the SSB, it does so in an automated way. 5.3. Computational complexity and performance
We present an in-depth analysis of the 22 business queries in the TPC-H benchmark and use the brackets, Statistics for their subqueries, if any, are shown in brackets (brie can be considered a materialized factual table and must therefore make MD sense as well). The and the fourth column shows the number of many alternative graphs (to be validated) generated for each query. The shows the number of MD graphs that are discarded in the MDBE validation stage, and the sixth column shows the number of graphs that are collapsed, according to the sibling rule introduced in Section 4.3 .
The MDBE tool execution time for the TPC-H benchmark is negligible ( explosion in Step 6 (note that the conciliation process carried out algorithm. In all queries, the fi nal set of graphs to be validated is considerably smaller than 2 many combinations of labels will fail to make MD sense. Furthermore, the produce unlabeled nodes. Consequently, the exponent value in the 2 alternative graphs (and is computed in  X  0.1 s) according to edge semantics, and 225 of 256 in Q8 (computed in would be processed in 7.168 s. 5.4. Additional output inferred
In this section we measure the impact of the main contributions of MDBE on the output. The have been completely validated). The next column shows the number of factless facts identi shows the number of new dimensional attributes identi fi ed in the process (if any). These attributes are those identi dimensional data in a hybrid node (i.e., dimensional attributes in CD and CDM nodes). The  X   X  this step in retrieving additional information to that explicitly requested by the user.  X  identify at least one new dimensional attribute for the corresponding query (see the derived from this relational attribute.  X  supports factless facts (see column 8) and can also identify new derived measures (see sources but which can be derived from them. 6. Conclusions and further work from previous approaches by combining the best features of each design paradigm: (i) it considers requirements as citizens within a largely automated approach; (ii) it improves the quality of the tool in the organization in question.
 of the approach and to provide a detailed example of how the method is executed. The MDBE method opens up a range of new evolution of the conceptual schema, which is a topic that has gained importance in recent years [31] . Acknowledgments This work has been partly supported by the Ministerio de Ciencia e Innovaci X n under project TIN2008-03863.
References
