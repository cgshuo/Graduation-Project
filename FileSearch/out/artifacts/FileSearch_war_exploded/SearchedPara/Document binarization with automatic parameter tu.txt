 ORIGINAL PAPER Nicholas R. Howe Abstract Document analysis systems often begin with binarization as a first processing stage. Although numerous techniques for binarization have been proposed, the results produced can vary in quality and often prove sensitive to the settings of one or more control parameters. This paper examines a promising approach to binarization based upon simple principles, and shows that its success depends most significantly upon the values of two key parameters. It further describes an automatic technique for setting these parameters in a manner that tunes them to the individual image, yielding a final binarization algorithm that can cut total error by one-third with respect to the baseline version. The results of this method advance the state of the art on recent benchmarks. 1 Introduction Physical documents in the real world exhibit a multitude of colors and shadings, and the appearance of even a single document may vary widely depending upon factors such as lighting, viewing angle, etc. Digital reproductions of physi-cal documents usually make use of a 24-bit color representa-tion, or perhaps 8-bit grayscale. Such formats omit some of the information present in the original, but retain more than enough for most applications. Certain document processing schemes go much further: they retain only a single bit per document pixel. Binary document representations are very useful despite their low fidelity because the information lost in binarization is more or less unrelated to the symbolic con-tent of the document. Most documents are produced using monochromatic ink on paper, and their meaning is embodied solely in the distribution of the ink, a pattern that the binary document explicitly represents.

Of course, inferring the correct binarization of a docu-ment from its color or grayscale representation can prove challenging. Physical degradation of the document, adverse lighting, or imaging conditions, and limitations on resolu-tion can all conspire to obscure the original pattern. 1 To meet this challenge, researchers have proposed many algo-rithms to binarize document images. Indeed, intense activ-ity in this field has made the document image binarization contest (DIBCO) series, one of the most popular compe-titions within the document analysis research community, attracting 17 entries in its most recent iteration [ 19 ]. Nev-ertheless, the results from these contests reveal that there remains room for improvement in the quality of automatic binarization.

This paper makes two related contributions to the study of automatic document binarization. First, it describes a method that can achieve excellent results on a wide variety of chal-lenging document images. Second, as a means to these results it investigates a method to automatically determine the best parameter values suited to each particular image. Automatic parameter estimation has received little research attention to date but offers two advantages when done well: it makes the method easier to employ since the user does not need to worry about finding the best parameter settings and it also improves the average result because each image can use itsown ideal value instead of a single compromise setting that works ade-quately but suboptimally for all images. 1.1 Prior work Before considering new approaches, it is worth survey-ing the history and development of binarization algorithms. Because most documents are printed in dark ink on light paper, many classic methods rely on thresholding the image intensity. Under ideal circumstances, as noted by Otsu [ 17 ] a simple global threshold suffices to distinguish markings from the background. In more difficult cases, the over-all intensity may vary over the document, so that a sin-gle global threshold may simultaneously prove too high in some areas and too low in others. Thus both Niblack [ 16 ] and Sauvola and Pietikainen [ 21 ] have proposed locally adaptive techniques that adjust the threshold used accord-ing to the mean and variance in some local region around each pixel. Although generally more accurate than Otsu for document images with varying intensities, locally adaptive thresholding can sometimes fail catastrophically in areas of low variance, motivating hierarchical approaches such as the Decompose algorithm [ 7 ]. Adaptive thresholding also presents the user with additional parameters to set, relating to the size of the local region and to the relative importance of the local mean versus its deviation as the local threshold is determined.

The winners of recent DIBCO events go beyond locally adaptive thresholding. They achieve their results partially by using thresholds, but most also perform modeling of the ink and background classes to enable more accurate indi-vidual pixel classification. Lu et al. [ 14 ] model the docu-ment background via an iterative polynomial smoothing, and then choose local thresholds based on detected text stroke edges. This method won DIBCO 2009, and a revised ver-sion tied as a winner of H-DIBCO 2010 (handwritten doc-uments only). The second winner in 2010 was a method described by Bar-Yosef et al. [ 3 ] which grows foreground regions iteratively based upon local modeling of the fore-ground and background within a 7  X  7 pixel window. Lelore and Bouchara [ 13 ] won DIBCO 2011 with a technique that first uses coarse thresholding to partition pixels into three groups: ink, background, and unknown. Models describe the ink and background clusters, and guide decisions on the unknown pixels. The method also employs a higher resolu-tion grid generated from the original image via linear inter-polation.

Several other ideas proposed in recent years provide moti-vation for the base algorithm employed in this paper. A num-ber of projects have explored the use of Markov random fields (MRF) for binarization [ 11 , 12 , 15 , 18 ]. Inspired by the human visual system, some work has employed center-surround fil-ters to identify areas that are darker than their local environ-ment, and thus likely to be ink [ 23 ]. These play a role similar to that of the Laplacian filter used herein. Finally, various approaches have used edge detection to improve binarization results [ 10 , 20 ]. Although these ideas have been explored sep-arately, the specific combination used in this work appears particularly effective.

Automatic estimation of appropriate parameter settings for document binarization has received limited attention to date. Gatos et al. [ 9 ] describe a parameter-free method that relies on detailed modeling of the document back-ground. Dawoud describes a method based upon cross-section sequence that combines results at multiple threshold levels into a single binarization [ 8 ]. Badekas and Papamarkos [ 2 ] describe a method inspired by work on edge detection. Their technique first produces binarizations over a range of parameter settings, and estimates a ground truth via  X  2 analy-sis on the cumulative votes of the multiple binarizations at each pixel. It then iteratively narrows the parameter range until unable to do so further, giving the final estimated best setting. Although the method described herein also begins by computing binarizations over a range of parameter val-ues, it differs by not attempting to estimate a ground truth, and requires no further iteration to choose the ideal parameter value. 2 Approach The base approach to binarization used in this paper was introduced recently [ 11 ] and rests on three mutually sup-porting strategies. First, it defines the target binarization as a labeling on pixels that minimizes a global energy func-tion inspired by a Markov random field model. Second, in formulating the data-fidelity term of this energy it relies on the Laplacian of the image intensity to distinguish ink from background. This grants a crucial invariance to differences in contrast and overall intensity. Third, it incorporates edge discontinuities into the smoothness term of the global energy function, biasing ink boundaries to align with edges and allowing a stronger smoothness incentive over the rest of the image. The paragraphs below explain each of these points in greater detail.

The global energy function operates on binarizations B , which label each pixel indexed by ( i , j ) as either ink or back-ground, B ij  X  X  0 , 1 } . The energy takes on a typical additive form,withtermsrepresentingthefidelityofaparticularlabel-ing when compared with the intensity data, and other terms representing the smoothness or regularity of the solution. In particular, the energy includes a cost L 0 ij or L 1 ij capturing how well the label B ij chosen for each pixel matches its appearance, and irregularity costs C h ij and C v ij for each pixel whose label differs respectively from those of its horizontal or vertical neighbor.
 E ( B ) = Assume that the Boolean expressions above evaluate to either 0 or 1 in the usual manner according to their truth value. With this energy, the optimal binarization will tend to conform to the intensity contours while smoothing over small irregular-ities resulting from noise sources. The degree of smoothing relative to data fidelity will depend on the relative magnitudes of L b ij to C h ij and C v ij .

The label costs L 0 ij and L 1 ij should be invariant to the local image illumination, and thus are taken from the Laplacian of the image intensity: L L Intuitively, this will tend to separate ink from background because the Laplacian measures the divergence of the gra-dient. It will thus be positive at intensity valleys (ink) and negative at intensity peaks or plateaus (background). The data terms of the energy function become a summation of the label-signed Laplacian over all pixels in the image. For a particular component of ink or background, Green X  X  theorem tells us that the summed Laplacian over all its pixels is math-ematically equivalent to the gradient flux across its boundary. In other words, the energy contribution of each component is determined solely by what happens at its boundary. This makes intuitive sense but can cause trouble for components that intersect the image edges: such regions can occasion-ally be mislabeled because their entire natural boundary is not visible, and thus their true energy contribution can only be estimated. In practice, this causes trouble occasionally for noisy background areas that are largely isolated from the rest of the document background by ink markings. Sev-eral potential solutions exist. For example, one could simply fix L 1 ij to a large negative value for all pixels ( i , image border, under the assumption that all ink is framed by background regions. Rather than committing to such a strong assumption, this work adopts a more conservative strategy, looking for bright outlier pixels and applying a fixed con-stant L 1 ij to them. This still ensures that large background regions will receive the proper label, while not preventing identification of ink pixels on the image boundary. To be precise, modify L 1 ij for any pixels more than two standard deviations  X  r ij brighter than the local mean  X  r ij , as computed over nearby pixels weighted by a Gaussian of radius r .This may be viewed as an extremely conservative application of locally adaptive thresholding, where only pixels most certain to be background are labeled as such. In the equation below,  X  will take on a large negative value.
 L
The neighbor mismatch penalties C h ij and C v ij offer the opportunity to employ the third strategy mentioned above, incorporating the Canny edge map (recall that Canny [ 6 ] first smooths the image with a Gaussian filter of small radius  X  , then finds edges at local directed maxima of the image gradient, choosing to retain only those edges selected using a hysteresis procedure with two thresholds t hi and t lo ). The algorithm sets the mismatch penalties to a uniform value c everywhere except between pixels where a Canny edge has identified a likely discontinuity. To be more specific, Canny identifies pixels as edges, while Eq. 1 requires locating dis-continuities in the connections between pairs of pixels. To address this discrepancy, the formulation below zeros out the discontinuity penalty between Canny edge pixels and their brighter neighbors, effectively choosing to include the Canny edge pixels within the inked area. The opposite choice would also be self-consistent, but would inhibit detection of single pixel width strokes.

The choice of constant discontinuity penalties everywhere except at edges deserves a note. One might imagine using a penalty that varies continuously according to the simi-larity in intensity between the neighbors. Empirically, this approach seems less successful, perhaps because it actually gives little guidance about the best precise location of the ink-background transition: the intensity differences tend to be fairly large everywhere within a few pixels of the actual boundary, and thus it becomes too easy to choose the wrong location. 2.1 Parameters The algorithm described above includes six free parameters, of which only two strongly influence the binarization out-come and require varying settings for different images. The four less important parameters can be set to a constant with negligible consequences for all images tested, either because they do not strongly influence the result or because the best value appears not to fluctuate much for different images. Thus, finding automatic values for the two important para-meters suffices to create a method that can be applied as a  X  X lack box X  with little or no parameter testing required.
Two of the less important parameters appear in Eq. 4 : r and  X  . Of these, r must be large enough to encompass at least a few background pixels, and thus should be set to some value larger than the expected stroke width.  X  can be any sufficiently negative value. No attempt is made to optimize these parameters, and the experiments all use r = 20 and  X  = X  500, for images with grayscale intensity in the range from 0 to 255. The remaining less important parameters are two of the three that control the Canny edge detection algo-rithm, namely the lower of the two edge detection thresh-olds t lo and the radius of smoothing applied prior to edge detection  X  E . Bad values for these parameters can certainly hurt binarization quality, but fortunately the experiments will show that there exists a uniform setting that works on all test images with near-optimal results.

The two important parameters that remain interact with each other to determine the final binarization result. Most crucial is c , whose magnitude determines the relative balance between data fidelity and regularization. The high Canny edge detection threshold t hi matters most when c is large because the detection or nondetection of an edge can deter-mine whether an entire ink component appears or disappears in the minimal energy solution. The high Canny threshold plays a particularly important role in images that exhibit ink bleeding through from the opposite side of the paper: since the bled ink tends to have weaker edges, fortuitous thresh-olding can eliminate most of the false ink components.
Early experiments with this binarization scheme, and indeed for most approaches to binarization, have relied on choosing parameter values that work reasonably well across a wide range of images. This can be achieved by searching for the best values on a training set of images similar to the ones that will be used for testing and yields good results [ 11 ]. However, even globally optimal parameter values embody some compromise on individual images, and tuning the set-tings to the image can offer significant gains. The next section explains how to do this. 2.2 Automatic parameter tuning To understand how the crucial c parameter can be set auto-matically, it is worthwhile to examine the behavior of the base binarization algorithm under a range of different set-tings.Figure 1 showsthebinarizationresultsonasmallimage patch for a logarithmically increasing set of values. When c is very low, the binarization looks like a simple sign operator on the Laplacian, with many small noisy components. As c increases the noise components become more consolidated and many disappear. For a range of middle values of c ,the binarization stays fairly stable, with only small changes as c increases. At the highest values, the result becomes unstable again as large ink components disappear, and occasionally join or have voids filled in. As c goes to infinity, the binariza-tion will tend toward the majority label in each edge-isolated component.

The region of stable results at middle levels of c is signifi-cant, and turns out to show up consistently on ink-and-paper documents with reasons subject to explanation. To visualize the phenomenon, define the normalized binarization insta-change labels between two values of c differing by a factor ( B , B ) =  X   X  ( c ) = In the equation above, B c ij is the binarization label at pixel ( i , j ) using mismatch penalty c , and the Boolean operator = converts to 0 or 1 in the customary fashion. As Fig. 2 shows, the general shape of the instability curve is an intrinsic property of the image that does not depend on the exact value of  X  chosen; thus in most cases,  X  can drop its subscript. Histograms provide a useful analogy: although the details vary slightly, a histogram made using a sufficient number of samples from the same distribution always takes on the general appearance of that distribution for any reasonable choice of bin size. Indeed, the instability plots may be seen as histograms of pixel label transition events with respect to c , with logarithmically increasing bin sizes.

Figure 3 shows as solid lines the instability plots for several document images. Although the stable zone differs somewhat in appearance and location in each case, its nearly universal presence is striking. Yet in hindsight, the observa-tion of such a stable zone at middling c values should not offer such a surprise. The twin peaks on either side arise from understandable mechanisms that apply for all docu-ment images, and thus the absence of a stable zone for any particular image would arise from exceptional circum-stances.

The c parameter controls the incentive for neighboring patches to share the same label despite a data-fidelity term indicating otherwise. The left peak in the instability curve appears at low levels of c , as it becomes large enough to over-come small noise fluctuations and label most large homoge-neous foreground and background regions correctly. On the other hand, the right peak appears when c becomes large enough to force a uniform label even across regions of dif-ferent underlying ground truth. Unless the noise amplitude exceeds the contrast between foreground and background, a zone of stability will normally separate the two. Furthermore, this stability zone coincides with binarizations that adhere to the underlying image structure while ignoring noise. Figure 3 shows as dotted lines the binarization error (based on the F measure, as defined in Eq. 14 ), which tends to reach a minimum at or near the lowest point in the instability curve. Computing the instability curve does not require access to the ground truth, yet observing the low point of the stable region reveals a value of c that typically achieves low ground-truth binarization error.

The link between the instability minimum and the binarization error minimum is at heart merely an empir-ical observation, but the philosophical considerations just given provide justification for the belief that it will apply to most document images. The algorithms developed below rest upon two related hypotheses, which the experiments in Sect. 3 largely bear out. First, the two instability peaks described above will reliably appear and can be consis-tently identified. Second, the point of maximum stability between the identified peaks will yield near-minimal bina-rization error. The truth of these hypotheses will depend upon the circumstances which produced a given docu-ment image. For example, some documents include multi-ple types of markings at different contrast levels, such as those where ink bleeds through from the reverse side. These may muddy the situation by generating additional instabil-ity peaks, but in most cases the extra peaks do not alter the result greatly because they tend to be more diffuse and thus less prominent. Figure 5 below describes a few more difficult cases, including unusual images where the optimal c varies widely across the page. Nevertheless, the experiments indi-cate that such problems remain mostly limited to unusual situations.
 The parameter-setting technique for c summarized as Algorithm 1 computes curves like those in Fig. 3 and chooses c at the minimum point between the two peaks on either side. Minor parameter choices introduced here are the logarithmic separation between c values, the range of values to scan, and the amount of smoothing applied to the instability curve. Choosing the logarithmic separation is somewhat equivalent to choosing a histogram bin size; as Fig. 2 demonstrates, the exact step factor chosen does not matter so long as it is not so large as to obscure the important minima and max-ima, nor so small that there will often be no change observed from one value to the next. The experiments herein use four points per octave, or approximately  X  = 1 . 19. The other two choices may also be made in ways that affect the outcome minimally if at all. The range of c values scanned should be large enough to include any likely optimum, and the smooth-ing should even out small fluctuations in the curve without altering the overall shape significantly. The experiments in Sect. 3 use a unit Gaussian for smoothing, and values of c ranging from 20 to 5,120.

Picking c only partially solves the parameter-setting problem, since the high Canny threshold remains to be chosen.

This upper threshold on edge detection rewards careful tuning, because properly chosen it can weed out the more diffuse edges of ink bleeding through from the back side of the document, while retaining the sharper edges of ink shapes on the front side. Fortunately, the same stability cri-terion that guided the choice for c also serves to pick a good value within the likely range for t hi . Algorithm 2 details the Algorithm 1 Tune c to image I given t hi , t lo , and  X  E exact technique used in the experiments. Note that c and t hi are set sequentially, rather than at the same time. The algorithm computes the best value of c for each possible t , and then chooses the ( c , t hi ) pair with greatest stabil-ity with respect to changes in t hi . This simplifies each step in the process and makes it easier to find a near-optimum solution.

Arguments given previously in this section suggested rea-sons why a stability criterion might work well for choosing c . It is less clear why the same approach works for choosing Algorithm 2 Tune t hi to image I given t lo , and  X  E an edge intensity threshold. Nevertheless a zone of stability with respect to both c and t hi does seem to distinguish the best binarizations, as illustrated in Fig. 4 for several representative images. Although the location of the best parameter setting varies widely between the images, each case displays a strik-ing qualitative correlation between the binarization error and the two-way stability, measured using the simple unnormal-ized formula below.  X  OtherDIBCOimagesnotshownbehavesimilarly.Fullexpla-nationofthisphenomenonliesbeyondthescopeofthispaper, which merely observes and seeks to exploit the pattern. 2.3 Computational efficiency Completing Algorithm 2 requires 363 trial binarization com-putations (33 candidates for c times 11 candidates for t hi and thus runs much more slowly than a single binariza-tion with static parameter settings. However, two modifica-tions to the algorithm can substantially mitigate the speed difference.

The first takes advantage of the fact that the binarization result does not usually change substantially between succes-sive values of c . Data structures built to minimize Eq. 1 for one value of c can be modified and reused with a similar c value, achieving noticeable economies. This strategy, intro-duced by Boykov and Kolmogorov [ 5 ], minimizes Eq. 1 by finding the minimum cut on a graph derived from the image. The method grows search trees from both the source and the sink of the image graph to help find augmenting paths, and it turns out that the trees grown for one value of c can be largely reused at nearby values to realize significant time savings. Empirical tests of this implementation show that it can speed computation by a factor of 15 or more. In other words, it computes all 33 trial binarizations required for one iteration of Algorithm 1 in little more than the time that it would normally take to compute just two or three.
The second modification relies on a heuristic trick, and stemsfromtheobservationthatthepresenceorabsenceofink bleed-through significantly influences the optimal value of t . Images showing bleed-through typically require a larger t hi to avoid identifying the spurious bled ink components as real. By contrast, in images without bleed-through the algorithm achieves its best results with a lower t hi , because this allows it to detect fainter edges. Thus, it appears that an explicitly bimodal algorithm allowing only two possible values {  X  1 , X  2 } for t hi might still perform well as compared with Algorithm 2 , which tests 11. The experimental results below confirm this hypothesis.

Detecting the presence or absence of bleed-through in a document is a nontrivial task in the general case, so it might seem impossible to determine which of even two candidate t hi values to use. Fortunately, an extension of the stability criterion provides a simple heuristic that does fairly well empirically. In addition to the two candidate values, Algorithm 3 computes the binarization using their mean value  X  0 = ( X  1 +  X  2 )/ 2. This midpoint binariza-tion can be compared with the other two, and the closer is judged the more stable and thus selected for the final result.

Algorithm 3 computes results for only three t hi values and thus runs more than three times as fast as Algorithm 2 .The metaparameters  X  1 and  X  2 are chosen for best performance on a training set; analysis of the DIBCO 2009 and H-DIBCO 2010imagesetsindicatesthatvaluesof0.25and0.50,respec-tively, achieve the best results across the full set (using only 23 of the 24 images in cross-fold training occasionally yields other values). Employing a training set to choose  X  1 and diminishes the automatic nature of the full algorithm, but represents a trade-off made in this particular algorithm for the sake of computation speed.
 Algorithm 3 Pick t hi from {  X  1 , X  2 } for image I given t , and  X  E
These two innovations in combination mean that a result originally requiring 363 trial binarizations to compute may be reached in the time required for just eight or nine. This is still slower than using static parameter values, but investing the extra time may be worthwhile for more accu-rate results. Alternately, in situations where a number of similar documents must be binarized, the parameter tun-ing may be run for a few trial pages to find appropri-ate values, which are then set statically for the remainder of the set.

All the algorithms display more or less linear depen-dance of computation time on the number of pixels in the image. Executing Algorithm 2 takes an average of 892s per megapixel on a 2.4GHz Xeon processor running as a single thread (without parallelism). By contrast, Algorithm 3 runs in 18.1s per megapixel under the same conditions, while a single execution of the base algorithm under static parame-ters takes 2.12s per megapixel. 2.4 Further algorithmic variants For best results, many binarization methods compute an ini-tial labeling using some base technique and then apply one or more post-processing algorithms to improve it. For example, Su et al. [ 22 ] remove components of three pixels or less. More complicatedmodelingandclassificationalgorithmscaniden-tify and remove noise components while retaining real ink [ 1 ]. The unknown pixel classification of Lelore and Bouchara [ 13 ] may also be viewed as post-processing of a sort.
Similar techniques can be applied to the results from the method described herein. Indeed, both the three-pixel component filter and a more complex classification-based approach reminiscent of Agrawal and Doermann have been tested informally and found to reduce binarization error for the DIBCO test images, relative to ground truth. Unfortu-nately gains in training can come at the potential cost of a loss of generality, in practice. This suspicion is borne out by the DIBCO 2011 contest results. The two algorithms that ranked in first and second place according to the contest scoring methodology perform very well on most of the test images, but fail severely on one or two examples (PR6 and PR7). One might view this as a form of overfitting the problem: these algorithms are specialized to do very well on images that match the expectations of the designers, but cannot handle the full range of images that might be encountered  X  X n the wild. X  This paper aims to develop binarization techniques that work automatically and reliably on as wide a range of images as possible. Thus, the experiments eschew post-processing heuristics of the type described above because they might decrease error on a given test set at the cost of generality. Such tricks are nevertheless worth mentioning because they may prove useful in whenever the images to be binarized are amenable. 3 Experimental results The DIBCO events have provided a platform for side-by-side comparison of different binarization results to a ground truth created by a team of human referees. Three contests have been held to date: two included both handwritten and printed document images, and one consisted of just hand-written documents. Images from the first two contests were used to develop the algorithms described in this paper, with the third set held out for post-hoc testing.

A comprehensive survey of the parameter space has been prepared for this paper, providing the context necessary to evaluate the effectiveness of the automatic parameter-tuning algorithms. It samples the 4D parameter space on a regular grid, surrounding and including the region found to produce the best binarizations in prior work [ 11 ]. The specific values tested for each parameter are: t t  X  c  X  C  X { 40  X  2 i / 4 i = 0 ... 28 } (13)
Results from the parameter survey can answer several interesting questions. They reveal both the best possible per-formance with a fixed set of parameters over all images ( static parameters), and the best possible performance in hindsight using the optimal parameter settings for each individual image ( ideal parameters). The difference between these two values is the space where parameter-tuning algorithms oper-ate: they cannot aspire to do better than the ideal, although they may certainly do worse than the best static setting. If the difference between the static and ideal numbers is small, then parameter tuning may not be worthwhile because any possible gains are limited.

A number of different statistics can measure and com-paretheeffectivenessofbinarizationalgorithms.TheDIBCO events compute some half-dozen numbers, with four used to determine the winners. The initial experiments herein focus on the F measure, defined in Eq. 14 , because its interpreta-tion is simple and it serves as a proxy for the other measures of binarization quality. An F measure of 100% represents perfection. In this paper, the term error refers to the differ-ence between the observed F measure and a perfect 100% score F = 2 where the recall R and precision P are defined in terms of the number of true positive pixels N TP , the number of false positive pixels N FP , and the number of false negative pixels F FN in the binarization B as compared with ground truth G . R P
Table 1 summarizes binarization results on the DIBCO 2009 and H-DIBCO 2010 images for various parameter-tuning algorithms. The static parameters for the experiments represented in this table are determined in leave-one-out style. In other words, for the i th image, the computation uses whatever static parameter setting would have given the best mean result on the other 23 images. Table 2 shows the range of parameter values chosen via this technique for the various algorithms (note that even algorithms with static parameter settings may show a range in Table 2 if the static values com-puted differ for various leave-one-out training folds).
The second column of the table gives the F measure when all parameters are static; this is the baseline algorithm [ 11 ]. The third column gives the result achieved with an oracle that knows the ideal values of c and t hi for each image; this represents the best possible outcome achievable by tuning the two parameters, but is not realizable in practice without prior access to ground truth. The ideal parameter settings reduce the overall error by more than one-third compared with static parameters, showing that tuning methods have significant potential if they can come close to this ideal. The table does not show results from an oracle that optimizes all four parameters. If available, such an oracle could achieve a mean F measure of 95.3% across all 24 images, hardly more than the two-parameter oracle. This confirms the conjecture that tuning all four parameters offers little reward in exchange for the risk.

The remaining columns show results for the various parameter-tuningstrategies describedinSect. 2 . Columnfour tunes c using Algorithm 1 and employs static settings for t t , and  X  E . It does somewhat better than the all-static set-tings, but still shows room for improvement. Column five tunes both c and t hi using Algorithm 2 and employs static settings for t lo , and  X  E . This method achieves 83% of the level of improvement made by the oracle. The final column shows the results of the two-state tuning for t hi described in Algorithm 3 . This method does nearly as well as the fully tuned t hi , despite its much faster computation time.
Table 3 shows the results for the DIBCO 2011 images, used as a hands-off test set. Unlike the previous table, these are not trained leave-one-out style. To ensure an unbiased test, the algorithms were fixed before any results were exam-ined, and static parameter values are set using the first two sets of contest images. The numbers here look more diverse because some of the new images are more extreme and there-fore more challenging than the training images. However, the general picture remains the same: tuning c gives better results than static parameter settings, and tuning both c and t hi improves the binarization quality still further for most images. A few exceptions lower the overall average, particu-larly H2011-6. Close inspection of this case reveals that the stability curve for t hi on this image contains two basins of stability, and the minimization criterion chooses the wrong one by a slight margin. The two-state tuning does not suffer from this problem, because it selects t hi from a more con-strained set of choices. In hindsight this may be an unforeseen practical advantage of Algorithm 3 .
Despite the success of the tuning methods described, the best F measure achieved by tuning still lies farther from the oracular best for the DIBCO 2011 images than in the exper-iments with earlier images. This reflects the diversity of the test set. Some of the images represent adverse examples for the stability criterion advocated in this paper; the two worst appear in Fig. 5 . 3.1 Comparison with other algorithms Results available for the DIBCO 2011 image set make possible a quantitative comparison between the algorithms developed herein and other recent work. The DIBCO 2011 contest used three additional primary criteria in addition to the F measure. Of these, the peak signal-to-noise ratio (PSNR) correlates fairly strongly with the F measure. If B is the binarization and G is the ground-truth binary image, PSNR = X  10 log ( ( B , G ) ) (17) Misclassification penalty metric (MPM) penalizes errors according to their distance from the ink boundary. Define D ij as the distance of pixel ground truth.
 MPM = Distance reciprocal distortion metric (DRD) attempts to account for human perceptual salience by weighting errors according to pixel values in a local 5  X  5 neighborhood, using weight matrix W computed as the normalized inverse distance.

DRD = N 8 divides G into 8 nonuniform. Note that better binarizations will have higher F-measure and PSNR, but lower MPM and DRD. For further details on these metrics, please read the DIBCO 2011 contest report [ 19 ].

Algorithm 3 is similar to entry #11 that was actually sub-mitted to the DIBCO 2011 contest. That entry was based on a less comprehensive survey of the parameter space and thus differs in the setting of the static parameter values and in the range of c values tested. Entry #11 nevertheless had the highest mean F measure across all the images, the lowest mean peak signal-to-noise ratio, the best mean MPM, and the fifth-best DRD. Strangely, despite these successes, entry #11 ranked only third in the official DIBCO 2011 contest results, and the two other entries that placed first and second had meanscores over thefull imageset that wereuniformlyworse on all four measures. The scoring methodology of the contest chose the winner based upon summed ranks over all images on various quality measures, rather than directly on the mean metric scores. The two higher-rated methods ranked well on most images, and while they conversely showed extremely poor performance on a few of the printed documents, this ultimately had limited effect on the final score [ 19 ]. With rank-based scoring, the comparison of one method relative to another is affected by the performance (and presence or absence) of all the other methods in the contest.
Table 4 compares the results of the algorithms developed in this paper with other recent methods on the DIBCO 2011 image set. The first section shows selected entries from the contest (those that beat entry #11 on at least one measure), the second section shows other recent algorithms 2 , and the third section shows the algorithms described in this paper, trained using the DIBCO 2009 and H-DIBCO 2010 images for a fair comparison. The table gives the mean result for each of the four metrics averaged across all the test images, and also the rank score total used to determine the DIBCO 2011 winner. For algorithms not entered in the contest, the rank score is simulated by treating the algorithm in question as an additional entrant, indicated with an asterisk in the table. Of course, adding a contestant changes the rank scores of the actual entrants, making them worse whenever the new entry does better on an image. The modified scores of existing entries are not shown in the table, but the information is accounted for in the parenthetical overall rank shown in the rightmost column. As the table reveals, either of Algorithms 2 or 3 would have won the contest on rank scoring, and also easily place first in mean score on each of the four quality measures as compared with all previous algorithms. 4 Conclusion Tuning parameters offer both risks and potential rewards. Choosing the parameter values that perform best for a given image can lower binarization error by substantial amounts as compared with a static setting suitable for generic images. On the other hand, poorly chosen parameter values can sabotage the result: the potential losses in binarization quality gener-ally dwarf the potential gains. Thus, one must be careful to tune only where there is reasonable confidence of success.
This paper has introduced a stability heuristic criterion that helps to choose suitable parameter values for individ-ual images. The approach hypothesizes that good parameter values are marked by low variability in the binarization solu-tion with respect to changes in the parameter values. This criterion leads to an algorithm that successfully picks good c values on all the images tested. A similar heuristic applied to the choice of t hi also chooses good parameter values in most cases, although serious failures were observed with this technique for a handful of cases. The most successful method tested uses the stability criterion to choose c , and selects t from a constrained set of two possible values. This approach delivers a substantial fraction of the maximum gain possible from tuning both parameters, and can be computed at about one eighth the speed of a simple binarization with static para-meters. Reference code for the technique will be available on the author X  X  website.

The parameter survey results make it clear that for many images, the tuning algorithms given herein come close to maximizing the potential of the base binarization algorithm. Further improvements in result quality will likely have to come through development of new base algorithms. Some of these new algorithms may be application-specific, whereas this work has striven for broad applicability. Whether the stability criterion that has proven so useful here will apply to other approaches remains to be seen, and is a topic for the future work. In any case, tuning parameters with the algorithms described herein substantially advance the cur-rent state of the art in document binarization, as evidenced by comparative results on the DIBCO 2011 test images. References
