 1.1 Background Recommender systems have been successfully used to provide each user with a list of recommended items on many e-commerce websites such as Amazon, Net-flix, YouTube and iTunes. In general, the techniques for recommendation systems and differences among users in determining the unseen ratings. CBF approaches generate recommendations by matching content descriptions of items to users X  interests. In the case of a hybrid recommendation, both information, CF and CBF, are used.
 minimal information to these e-commerce services [ 3 ]. In this case, it is hard to use the CBF related approaches for the recommendation service. Under such circumstance we need to resort to a CF system, provide useful personal rec-ommendations. CF systems use very little user or item information with the exception of a partially observed rating matrix. The rating matrix contains rat-ings of items (columns) by users (rows) in numeric or binary form. For example, one to five stars in Netflix movie recommendation or like vs. dislike [ 4  X  6 ]. Nevertheless, most systems aim at recommending items to people. Recom-mending people to people has begun to emerge under the name of reciprocal recommender. In a reciprocal recommender, both sides can express their prefer-of both sides. Unfortunately, traditional recommenders only have to satisfy the preferences of one side, cannot be adopted directly for reciprocal recommender systems. Moreover, the opinions for matching are different between both sides (e.g., male-female, mentor-mentee and recruiters-job seekers) However, tradi-tional recommenders did not distinguish user behaviors in different sides. 1.2 Contribution In order to solve these challenges in reciprocal recommender system, we propose a simple and general reciprocal method to exploit a factorization-based and transfer learning based CF model, taking advantage of the efficient performance on the users X  rating data of items in the traditional recommender [ 7  X  9 ]. Our contributions can be summarized as:  X 
We propose a novel reciprocal recommender model, and argue that such model should optimize the matching quality directly instead of optimizing the tra-ditional metrics for a CF model based on the accuracy of the user-to-item ratings.  X 
We propose a transfer learning based CF method for transferring user opinions from two-sides in the reciprocal recommender task. To our knowledge, this is the first-ever model for reciprocal recommendation without the requirement of user profile or other meta information.  X 
In order to model the mutual preferences between two-sides of users of recip-
Mutual-Attraction Indicator. Using Mutual-Attraction Indicator, our major contribution lies in the connection between the transfer learning models to the reciprocal recommender task.  X 
We evaluate the model using two different types of real-world tasks, online dating and human resource job matching. The experiment results show that the proposed approaches and significantly outperform the state-of-the-art rec-ommenders on AUC. The quality of a CF based recommendation system can be evaluated by using held out data to compare distance between the predicted values and held out val-ues. Root Mean Squared Error (RMSE) is a commonly used metric for CF quality of systems by RMSE is problematic. A good reciprocal recommendation should return matching pairs (i.e. pairs which provide high mutual rates to each other) and ignore pairs that none or only one side favors the other. The spirit of such metrics lies in that for pairs that like each other, the system needs to high ratings for both sides. Unfortunately, such properties cannot be reflected by an rating-based metrics such as RMSE. Take the case of Fig. 1 , for exam-ple, there are three users (U1,U2,U3) and several observed ground truth ratings among these users for an online dating website. It is apparent that the best matching is U1 and U2 according to Fig. 1 (a), since although U1 likes U3, U3 does not like U1, and U2 and U3 do not like each other very much. Assuming two recommender systems, S1 and S2, predict the preference ratings as Fig. 1 (b) and Fig. 1 (c), respectively. Obviously, S1 performs better than S2 on RMSE. However, according to S1, U2 and U3 should be matched, which is incorrect. On the other hand, S2 suggests U1 and U2 can be recommended to each other, which is indeed accurate despite that it does not predict the remaining ratings good match or not is more important than making accurate rating predictions. Furthermore, a good recommendation can help users find the match partner soon. For each user, a recommender system generates a candidate ranking list. Comparing this list with the ground truth, we can then obtain a receiver operat-ing characteristic (ROC) curve. Hence, in this work, we evaluate the reciprocal models with Area Under the ROC Curve (AUC). 3.1 Problem Statement In this section, we formally define our problem. We consider that there are two sets of users S and T . For example, in an online dating system, the two sets of users correspond to male and female; in a human resource system, they correspond to recruiters and job seekers. The sizes of two subsets are n and m respectively. Each user maintains a preference list towards a subset of users in the other set. Therefore, we can separate the feedbacks data into two subsets: the feedbacks from the users in S to the users in T , S 2 T and the opposite referred as T 2 S . Note that the data have numerical ratings or binary click-through recordings (like/dislike). Given a user s  X  S , our goal is to recommend S a list of user Qs  X  T such that the feedback from s to t , r from any t  X  Qs to s , X  r st , are both high. 3.2 Mutual-Attraction Indicator cal recommender, both sides can express their likes and dislikes and a good match requires satisfying the preferences of both people. Therefore, we propose a reciprocal regularized term, Mutual  X  Attraction Indicator ( MAI ), to mea-of both sides are high or non-zero, we can assume that there exists a higher chance that they yield a great match. According to this observation, the MAI between user s  X  S and user t  X  T can be determined from the rating or binary feedbacks of both sides, using the equations: 3.3 Reciprocal-Regularized Transfer by Collective Factorization learning algorithms of Transfer by Collective Factorization (TCF). Previously we argue that a successful user-to-user recommendation should satisfy both sides X  preference. That is, the MAI of this user-to-user pair will be high. Based on this objective function, we adjust the collectively learning functions of TCF with MAI , which is called Reciprocal  X  Regularized T CF ( RR Here we exploit the transfer learning framework to handle this problem. click-through data 0/1) expressed in the binary form to help reduce the effect a principled matrix-based transfer-learning framework, referred as Transfer by Collective Factorization (TCF), which tri-factorizes the data matrix in three two data-dependent matrices, to model user X  X  heterogeneous feedbacks. Here we CF model to boost its performance. However, in the reciprocal recommendation case, we adjust several settings of TCF to match up the reciprocal recommender system scenario.
 T . In the feedback data of S 2 T , we have an incomplete matrix R =[ r R n  X  m with q observed ratings, where s  X  X  1 , 2 , 3 ,...,n Here we use a mask matrix Y =[ y st ] n  X  m  X  X  0 , 1 } n  X  can build an incomplete matrix  X  R with  X  q observed ratings, where R n  X  m . Similar to the S 2 T data, we have a corresponding mask matrix [ X  y of R and  X  R .
 t  X  T in the S 2 T data, r denote the tri-factorization in the S 2 T data as: where regularization terms, U s , V t and B , are used to avoid overfitting. collectively, we obtain the following optimization problem for TCF. where  X &gt; 0 is a tradeoff parameter to balance the S 2 T data and T 2 S data, U  X  R data matrices of R and  X  R to learn U and V , and estimate B and to learn U and V , and how to estimate B and  X  B in each data.
 Learning U and V . Given B and V , we have gradient on the latent feature vector U s of user s  X  S as function (4): where Therefore, there is an update rule similar to alternative least square (ALS) approach [ 23 ].
 And we can obtain the update rule for the latent feature vector V t  X  T similarly.
 Learning B and  X  B . Given U and V , we can estimate B and each data, e.g. for the S 2 T data, where the data-dependent parameter B can estimated in the same way as that of estimating w in a corresponding least-square SVM problem, where w = vec ( B )= [ B B 2 ...B B . The instances can be built as ( x st ,r st ) with y st R . Therefore, the corresponding least-square SVM problem is obtained as below. r  X  R p  X  1 is the corresponding observed ratings from R . By having gradient on w ,wehave: Then we can estimate  X  B for the T 2 S data similarly.
 In order to model the reciprocal recommender problem, we modify the func-tion (8), for estimating B in the S 2 T data. Assume x st which means user s has reviewed user t . If the user t also reviewed user s ,on approach.
 The MAI term reflects the potential match pair from the observed data. When two users vote each other with a high rating or positive feedback in the binary form, we can adjust the latent factor vectors of both sides with MAI to capture this information. Therefore, the reciprocal-regularized factorization models will predict a higher rating than original CF models. Although doing chance to recommend matchings satisfying both sides.
 3.4 Heuristic for Initialization It is well-known that good initializations can improve the speed and accuracy of the solutions of many factorization-based models. Therefore, we run TCF on one-side data, and use the results to initialize the values of TCF and RR-TCF. According to function (3), we use the one-side data as rating matrix R .And we use the TCF framework to learn the latent matrices, U and V . Finally, we can use these results as the initialization values of TCF and RR-TCF. 4.1 Dataset and Evaluation Online-Dating: The data is provided by a public Czech online-dating website theusers,thereare61 , 365 male users, 76 , 441 female users and 83 , 164 unknown users. The data set used in the experiment is constructed as follows.  X 
We first divide the original data into two parts: ratings from male to female of the whole data, and F 2 M contains 7 , 991 , 238 reviews respectively. We remove the users who have fewer than two reviews.  X 
We then randomly choose 8/10 of the original data as training set, 1/10 of them as validation and the rest as testing set. Note that the validation set is used to determine the parameters of the model (e.g. the threshold to determine a match).  X 
Since the data provide only the review ratings between users (no final match-ing outcome), in this experiment we define a positive pair of users as the male and female who receive the highest ratings from one another. That is, if a male rates a female 10 and vice versa then we consider them as a positive pair, otherwise they will be treated as a negative pair. In this case, there are 53 , 376 positive pairs in the dataset and 41 , 507 negative pairs. Human Resource Matching: This data is collected from 104 Corp., largest human resource company in Taiwan. The data set contains 6 , 482 , 165 provided the ground truth about the outcome of the final match (i.e. whether the users were offered and accepted the jobs eventually). We randomly sepa-and the rest for validation. Evaluation Criteria. As argued previously, the reciprocal recommender sys-tem should be evaluated based on the mutual-matching quality rather than the We treated the task as a ranking problem. In other words, we want to evalu-ate whether a recommender system can rank the matched pairs higher. Table 1 shows the perfect-match ratio of these two data.
 For each user, recommendation systems generate top-k candidate ranking list. Comparing this list with the ground truth, we can then obtain a receiver operating characteristic (ROC) curve. We exploit the area under curve (AUC) to evaluate the models.
 4.2 Baselines We compare our methods with a non-factorization method, the most popular recommender (MP) and a state-of-the-art factorization model, Matrix Factor-ization. For the MP method, we always recommend the most popular items to For the MF model, we first generate Matrix Factorization on each one-side data (referred as F2M-MF, M2F-MF, U2J-MF, J2U-MF) and combine the data of both sides to construct single Matrix Factorization model (MF). 4.3 Result and Discussion ization models and propose an efficient approach to solve this problem; we then demonstrate the effectiveness of our proposed reciprocal-regularized approaches on improving the performance of the original models.
 Results. The experiment results on test data (unavailable during training) of Libimseti and 104 are reported in Tables 2 and 3 respectively. And we can make the observations as follows.  X 
In the experiments on two different test data, reciprocal regularized models perform significantly better than all other non-reciprocal regularized factor-ization models and baseline.  X 
For the reciprocal-regularized model, RR-TCF, is much better than the mod-els without reciprocal-regularized on AUC. Conceivably its performance on RMSE is worse than non-reciprocal regularized models; nevertheless, what we really care about here is to make a high-perfect-match recommendation than an accurate-rating-prediction recommendation. Using regular MF or TCF yields better rating prediction but much worse matching quality.
 Effects of Different Initialization. As mentioned in Sect. 3.4 , we apply the initialization processes to improve performance. Table 4 shows the results on results, it does improve the performances of TCF and RR-TCF.
 Recently, reciprocal recommendations have attracted various academic investi-gations. These researches have studied how to do reciprocal recommendations in many reciprocal applications: online dating, mentor-mentee matching, social networks and job recommendation. Therefore, in this section, we review the previous works. 5.1 Reciprocal Recommendation System There are numerous papers investigated in reciprocal recommendations based on based system which used both user profiles and user interactions. To gener-ate recommendations for a given user, they extracted users X  explicit preferences from the interactions with the other users and then matched them with the user profiles. Akehurst et al. [ 14 ] proposed a recommender system for online dating that combined content-based and collaborative filtering approaches and ple recommender system for a social network website where users can reply ing approach, called SocialCollab, which considers the preference of both sides. by a common group of users, and these two users are similar in taste if they like a common group of users. Moreover, Cai et al. [ 11 ] improved the results by using gradient descent to learn the relative contribution of similar users in the ranking of the recommendations provided by SocialCollab. In the same task, the work of Kutty et al. [ 12 ] used a model based on tensor decomposition to generate recommendations and also reported improvements over Cai et al. [ 11 ]. Therefore, it is hard for us to reproduce these works for comparison. 5.2 Transfer Learning Furthermore, there is an emerging research topic in recommender systems. Aim-us to transfer knowledge among related domains. In [ 16 ], Li presents a review of collaborative filtering approaches for cross-domain recommendation. And Li distinguish three types of domains: system domains, data domains, and tem-poral domains. System domains are the different datasets upon which the rec-ommender systems are built, and in which some kind of transfer learning is use the data domain based approach in our work. We propose a novel reciprocal recommender task and connect its solution with a transfer CF approach. We demonstrated the usefulness of the proposed models in the domain of online dating and job matching. We believe such algorithm has a wider range of application scenarios such as mentor-mentee matching, doctor-patient matching, etc.
 reciprocal recommender task, and we hope this paper can inspire more works in recommendation models [ 25 ] or to learn the matching directly.

