 Users express opinions about products or services they consume in blog posts, shopping sites, or re-view sites. It is useful for both consumers as well as for producers to know what general public think about a particular product or service. Automatic document level sentiment classification (Pang et al., 2002; Turney, 2002) is the task of classifying a given review with respect to the sentiment expressed by the author of the review. For example, a sentiment classifier might classify a user review about a movie as positive or negative depending on the sentiment expressed in the review. Sentiment classification has been applied in numerous tasks such as opinion mining (Pang and Lee, 2008), opinion summariza-tion (Lu et al., 2009), contextual advertising (Fan and Chang, 2010), and market analysis (Hu and Liu, 2004).

Supervised learning algorithms that require la-beled data have been successfully used to build sen-timent classifiers for a specific domain (Pang et al., 2002). However, sentiment is expressed differently in different domains, and it is costly to annotate data for each new domain in which we would like to apply a sentiment classifier. For example, in the domain of reviews about electronics products, the words  X  X urable X  and  X  X ight X  are used to express pos-itive sentiment, whereas  X  X xpensive X  and  X  X hort bat-tery life X  often indicate negative sentiment. On the other hand, if we consider the books domain the words  X  X xciting X  and  X  X hriller X  express positive sen-timent, whereas the words  X  X oring X  and  X  X engthy X  usually express negative sentiment. A classifier trained on one domain might not perform well on a different domain because it would fail to learn the sentiment of the unseen words.

Work in cross-domain sentiment classification (Blitzer et al., 2007) focuses on the challenge of training a classifier from one or more domains (source domains) and applying the trained classi-fier in a different domain (target domain). A cross-domain sentiment classification system must over-come two main challenges. First, it must identify which source domain features are related to which target domain features. Second, it requires a learn-ing framework to incorporate the information re-garding the relatedness of source and target domain features. Following previous work, we define cross-domain sentiment classification as the problem of learning a binary classifier (i.e. positive or negative sentiment) given a small set of labeled data for the source domain, and unlabeled data for both source and target domains. In particular, no labeled data is provided for the target domain.

In this paper, we describe a cross-domain senti-ment classification method using an automatically created sentiment sensitive thesaurus. We use la-beled data from multiple source domains and unla-beled data from source and target domains to rep-resent the distribution of features. We represent a lexical element (i.e. a unigram or a bigram of word lemma) in a review using a feature vector. Next, for each lexical element we measure its relatedness to other lexical elements and group related lexical ele-ments to create a thesaurus. The thesaurus captures the relatedness among lexical elements that appear in source and target domains based on the contexts in which the lexical elements appear (their distribu-tional context). A distinctive aspect of our approach is that, in addition to the usual co-occurrence fea-tures typically used in characterizing a word X  X  dis-tributional context, we make use, where possible, of the sentiment label of a document: i.e. sentiment la-bels form part of our context features. This is what makes the distributional thesaurus sensitive to senti-ment. Unlabeled data is cheaper to collect compared to labeled data and is often available in large quan-tities. The use of unlabeled data enables us to ac-curately estimate the distribution of words in source and target domains. Our method can learn from a large amount of unlabeled data to leverage a robust cross-domain sentiment classifier.

We model the cross-domain sentiment classifica-tion problem as one of feature expansion , where we append additional related features to feature vectors that represent source and target domain reviews in order to reduce the mismatch of features between the two domains. Methods that use related features have been successfully used in numerous tasks such as query expansion (Fang, 2008), and document classi-fication (Shen et al., 2009). However, feature expan-sion techniques have not previously been applied to the task of cross-domain sentiment classification.
In our method, we use the automatically created thesaurus to expand feature vectors in a binary clas-sifier at train and test times by introducing related lexical elements from the thesaurus. We use L1 reg-ularized logistic regression as the classification al-gorithm. (However, the method is agnostic to the properties of the classifier and can be used to expand feature vectors for any binary classifier). L1 regular-ization enables us to select a small subset of features for the classifier. Unlike previous work which at-tempts to learn a cross-domain classifier using a sin-gle source domain, we leverage data from multiple source domains to learn a robust classifier that gen-eralizes across multiple domains. Our contributions can be summarized as follows.  X  We describe a fully automatic method to create  X  We describe a method to use the created the-To explain the problem of cross-domain sentiment classification, consider the reviews shown in Ta-ble 1 for the domains books and kitchen appliances . Table 1 shows two positive and one negative re-view from each domain. We have emphasized in boldface the words that express the sentiment of the authors of the reviews. We see that the words excellent , broad , high quality , interesting , and well researched are used to express positive senti-ment in the books domain, whereas the word disap-pointed indicates negative sentiment. On the other hand, in the kitchen appliances domain the words thrilled , high quality , professional , energy sav-ing , lean , and delicious express positive sentiment, whereas the words rust and disappointed express negative sentiment. Although high quality would express positive sentiment in both domains, and dis-appointed negative sentiment, it is unlikely that we would encounter well researched in kitchen appli-ances reviews, or rust or delicious in book reviews. Therefore, a model that is trained only using book reviews might not have any weights learnt for deli-cious or rust , which would make it difficult for this model to accurately classify reviews of kitchen ap-pliances. One solution to the feature mismatch problem out-lined above is to use a thesaurus that groups differ-ent words that express the same sentiment. For ex-ample, if we know that both excellent and delicious are positive sentiment words, then we can use this knowledge to expand a feature vector that contains the word delicious using the word excellent , thereby reducing the mismatch between features in a test in-stance and a trained model. Below we describe a method to construct a sentiment sensitive thesaurus for feature expansion.

Given a labeled or an unlabeled review, we first split the review into individual sentences. We carry out part-of-speech (POS) tagging and lemmatiza-tion on each review sentence using the RASP sys-tem (Briscoe et al., 2006). Lemmatization reduces the data sparseness and has been shown to be effec-tive in text classification tasks (Joachims, 1998). We then apply a simple word filter based on POS tags to select content words (nouns, verbs, adjectives, and adverbs). In particular, previous work has identified adjectives as good indicators of sentiment (Hatzi-vassiloglou and McKeown, 1997; Wiebe, 2000). Following previous work in cross-domain sentiment classification, we model a review as a bag of words. We select unigrams and bigrams from each sentence. For the remainder of this paper, we will refer to un-igrams and bigrams collectively as lexical elements . Previous work on sentiment classification has shown that both unigrams and bigrams are useful for train-ing a sentiment classifier (Blitzer et al., 2007). We note that it is possible to create lexical elements both from source domain labeled reviews as well as from unlabeled reviews in source and target domains.
Next, we represent each lexical element u using a set of features as follows. First, we select other lex-ical elements that co-occur with u in a review sen-tence as features. Second, from each source domain labeled review sentence in which u occurs, we cre-ate sentiment features by appending the label of the review to each lexical element we generate from that review. For example, consider the sentence selected from a positive review of a book shown in Table 2. In Table 2, we use the notation  X *P X  to indicate posi-tive sentiment features and  X *N X  to indicate negative sentiment features. The example sentence shown in Table 2 is selected from a positively labeled review, and generates positive sentiment features as shown in Table 2. In addition to word-level sentiment fea-tures, we replace words with their POS tags to create POS-level sentiment features. POS tags generalize the word-level sentiment features, thereby reducing feature sparseness.

Let us denote the value of a feature w in the fea-ture vector u representing a lexical element u by f ( u ,w ) . The vector u can be seen as a compact rep-resentation of the distribution of a lexical element u over the set of features that co-occur with u in the re-views. From the construction of the feature vector u described in the previous paragraph, it follows that w can be either a sentiment feature or another lexical element that co-occurs with u in some review sen-tence. The distributional hypothesis (Harris, 1954) states that words that have similar distributions are semantically similar. We compute f ( u ,w ) as the pointwise mutual information between a lexical ele-ment u and a feature w as follows: Here, c ( u,w ) denotes the number of review sen-tences in which a lexical element u and a feature w co-occur, n and m respectively denote the total number of lexical elements and the total number of features, and N = P n i =1 P m j =1 c ( i,j ) . Pointwise mutual information is known to be biased towards infrequent elements and features. We follow the dis-counting approach of Pantel &amp; Ravichandran (2004) to overcome this bias.

Next, for two lexical elements u and v (repre-sented by feature vectors u and v , respectively), we compute the relatedness  X  ( v,u ) of the feature v to the feature u as follows, Here, we use the set notation { x | f ( v ,x ) &gt; 0 } to denote the set of features that co-occur with v . Re-latedness of a lexical element u to another lexical element v is the fraction of feature weights in the feature vector for the element u that also co-occur with the features in the feature vector for the ele-ment v . If there are no features that co-occur with both u and v , then the relatedness reaches its min-imum value of 0 . On the other hand if all features that co-occur with u also co-occur with v , then the relatedness ,  X  ( v,u ) , reaches its maximum value of 1 . Note that relatedness is an asymmetric measure by the definition given in Equation 2, and the relat-edness  X  ( v,u ) of an element v to another element u is not necessarily equal to  X  ( u,v ) , the relatedness of u to v .

We use the relatedness measure defined in Equa-tion 2 to construct a sentiment sensitive thesaurus in which, for each lexical element u we list lexical el-ements v that co-occur with u (i.e. f ( u ,v ) &gt; 0 ) in descending order of relatedness values  X  ( v,u ) . In the remainder of the paper, we use the term base en-try to refer to a lexical element u for which its related lexical elements v (referred to as the neighbors of u ) are listed in the thesaurus. Note that relatedness val-ues computed according to Equation 2 are sensitive to sentiment labels assigned to reviews in the source domain, because co-occurrences are computed over both lexical and sentiment elements extracted from reviews. In other words, the relatedness of an ele-ment u to another element v depends upon the sen-timent labels assigned to the reviews that generate u and v . This is an important fact that differentiates our sentiment-sensitive thesaurus from other distri-butional thesauri which do not consider sentiment information.

Moreover, we only need to retain lexical elements in the sentiment sensitive thesaurus because when predicting the sentiment label for target reviews (at test time) we cannot generate sentiment elements from those (unlabeled) reviews, therefore we are not required to find expansion candidates for senti-ment elements. However, we emphasize the fact that the relatedness values between the lexical elements listed in the sentiment-sensitive thesaurus are com-puted using co-occurrences with both lexical and sentiment features, and therefore the expansion can-didates selected for the lexical elements in the tar-get domain reviews are sensitive to sentiment labels assigned to reviews in the source domain. Using a sparse matrix format and approximate similarity matching techniques (Sarawagi and Kirpal, 2004), we can efficiently create a thesaurus from a large set of reviews. Our feature expansion phase augments a feature vec-tor with additional related features selected from the sentiment-sensitive thesaurus created in Section 3 to overcome the feature mismatch problem. First, fol-lowing the bag-of-words model, we model a review d using the set { w 1 ,...,w N } , where the elements w i are either unigrams or bigrams that appear in the review d . We then represent a review d by a real-valued term-frequency vector d  X  R N , where the value of the j -th element d j is set to the total number of occurrences of the unigram or bigram w j in the review d . To find the suitable candidates to expand a vector d for the review d , we define a ranking score score( u i , d ) for each base entry in the thesaurus as follows: According to this definition, given a review d , a base entry u i will have a high ranking score if there are many words w j in the review d that are also listed as neighbors for the base entry u i in the sentiment-sensitive thesaurus. Moreover, we weight the re-latedness scores for each word w j by its normal-ized term-frequency to emphasize the salient uni-grams and bigrams in a review. Recall that related-ness is defined as an asymmetric measure in Equa-tion 2, and we use  X  ( w j ,u i ) in the computation of score( u i , d ) in Equation 3. This is particularly im-portant because we would like to score base entries u i considering all the unigrams and bigrams that ap-pear in a review d , instead of considering each uni-gram or bigram individually.

To expand a vector, d , for a review d , we first rank the base entries, u i using the ranking score in Equation 3 and select the top k ranked base en-tries. Let us denote the r -th ranked ( 1  X  r  X  k ) base entry for a review d by v r d . We then extend the original set of unigrams and bigrams { w 1 ,...,w N } by the base entries v 1 d ,...,v k d to create a new vec-tor d 0  X  R ( N + k ) with dimensions corresponding to w 1 ,...,w N ,v 1 d ,...,v k d for a review d . The values of the extended vector d 0 are set as follows. The values of the first N dimensions that correspond to unigrams and bigrams w i that occur in the review d are set to d i , their frequency in d . The subsequent k dimensions that correspond to the top ranked based entries for the review d are weighted according to their ranking score. Specifically, we set the value of the r -th ranked base entry v r d to 1 /r . Alternatively, one could use the ranking score, score( v r d ,d ) , itself as the value of the appended base entries. However, both relatedness scores as well as normalized term-frequencies can be small in practice, which leads to very small absolute ranking scores. By using the inverse rank, we only take into account the rela-tive ranking of base entries and ignore their absolute scores.

Note that the score of a base entry depends on a review d . Therefore, we select different base en-tries as additional features for expanding different reviews. Furthermore, we do not expand each w i individually when expanding a vector d for a re-view. Instead, we consider all unigrams and bi-grams in d when selecting the base entries for ex-pansion. One can think of the feature expansion pro-cess as a lower dimensional latent mapping of fea-tures onto the space spanned by the base entries in the sentiment-sensitive thesaurus. The asymmetric property of the relatedness (Equation 2) implicitly prefers common words that co-occur with numerous other words as expansion candidates. Such words act as domain independent pivots and enable us to transfer the information regarding sentiment from one domain to another.

Using the extended vectors d 0 to represent re-views, we train a binary classifier from the source domain labeled reviews to predict positive and neg-ative sentiment in reviews. We differentiate the ap-pended base entries v r d from w i that existed in the original vector d (prior to expansion) by assigning different feature identifiers to the appended base en-tries. For example, a unigram excellent in a feature vector is differentiated from the base entry excellent by assigning the feature id,  X  X ASE= excellent  X  to the latter. This enables us to learn different weights for base entries depending on whether they are useful for expanding a feature vector. We use L1 regu-larized logistic regression as the classification algo-rithm (Ng, 2004), which produces a sparse model in which most irrelevant features are assigned a zero weight. This enables us to select useful features for classification in a systematic way without having to preselect features using heuristic approaches. The regularization parameter is set to its default value of 1 for all the experiments described in this paper. 5.1 Dataset To evaluate our method we use the cross-domain sentiment classification dataset prepared by Blitzer et al. (2007). This dataset consists of Amazon prod-uct reviews for four different product types: books ( B ), DVDs ( D ), electronics ( E ) and kitchen appli-ances ( K ). There are 1000 positive and 1000 neg-ative labeled reviews for each domain. Moreover, the dataset contains some unlabeled reviews (on av-erage 17 , 547 ) for each domain. This benchmark dataset has been used in much previous work on cross-domain sentiment classification and by eval-uating on it we can directly compare our method against existing approaches.

Following previous work, we randomly select 800 positive and 800 negative labeled reviews from each domain as training instances (i.e. 1600  X  4 = 6400 ); the remainder is used for testing (i.e. 400  X  4 = 1600 ). In our experiments, we select each domain in turn as the target domain, with one or more other do-mains as sources. Note that when we combine more than one source domain we limit the total number of source domain labeled reviews to 1600 , balanced between the domains. For example, if we combine two source domains, then we select 400 positive and 400 negative labeled reviews from each domain giv-ing (400 + 400)  X  2 = 1600 . This enables us to perform a fair evaluation when combining multiple source domains. The evaluation metric is classifica-tion accuracy on a target domain, computed as the percentage of correctly classified target domain re-views out of the total number of reviews in the target domain. 5.2 Effect of Feature Expansion To study the effect of feature expansion at train time compared to test time, we used Amazon reviews for two further domains, music and video , which were also collected by Blitzer et al. (2007) but are not part of the benchmark dataset. Each validation do-main has 1000 positive and 1000 negative labeled reviews, and 15000 unlabeled reviews. Using the validation domains as targets, we vary the number of top k ranked base entries (Equation 3) used for feature expansion during training ( Train k ) and test-ing ( Test k ), and measure the average classification accuracy. Figure 1 illustrates the results using a heat map , where dark colors indicate low accuracy val-ues and light colors indicate high accuracy values. We see that expanding features only at test time (the left-most column) does not work well because we have not learned proper weights for the additional features. Similarly, expanding features only at train time (the bottom-most row) also does not perform well because the expanded features are not used dur-ing testing. The maximum classification accuracy is obtained when Test k = 400 and Train k = 800 , and we use these values for the remainder of the experi-ments described in the paper. 5.3 Combining Multiple Sources Figure 2 shows the effect of combining multiple source domains to build a sentiment classifier for the electronics domain. We see that the kitchen do-main is the single best source domain when adapt-ing to the electronics target domain. This behavior is explained by the fact that in general kitchen appli-ances and electronic items have similar aspects. But a more interesting observation is that the accuracy that we obtain when we use two source domains is always greater than the accuracy if we use those do-mains individually. The highest accuracy is achieved when we use all three source domains. Although not shown here for space limitations, we observed similar trends with other domains in the benchmark dataset.

To investigate the impact of the quantity of source domain labeled data on our method, we vary the amount of data from zero to 800 reviews, with equal amounts of positive and negative labeled data. Fig-ure 3 shows the accuracy with the DVD domain as the target. Note that source domain labeled data is used both to create the sentiment sensitive thesaurus as well as to train the sentiment classifier. When there are multiple source domains we limit and bal-ance the number of labeled instances as outlined in Section 5.1. The amount of unlabeled data is held constant, so that any change in classification accu-racy is directly attributable to the source domain la-beled instances. Because this is a binary classifica-tion task (i.e. positive vs. negative sentiment), a ran-dom classifier that does not utilize any labeled data would report a 50% classification accuracy. From Figure 3, we see that when we increase the amount of source domain labeled data the accuracy increases quickly. In fact, by selecting only 400 (i.e. 50% of the total 800 ) labeled instances per class, we achieve the maximum performance in most of the cases.
To study the effect of source and target domain unlabeled data on the performance of our method, we create sentiment sensitive thesauri using differ-ent proportions of unlabeled data. The amount of labeled data is held constant and is balanced across multiple domains as outlined in Section 5.1, so any changes in classification accuracy can be directly at-tributed to the contribution of unlabeled data. Figure 4 shows classification accuracy on the DVD target domain when we vary the proportion of source do-main unlabeled data (target domain X  X  unlabeled data is fixed).

Likewise, Figure 5 shows the classification ac-curacy on the DVD target domain when we vary the proportion of the target domain X  X  unlabeled data (source domains X  unlabeled data is fixed). From Fig-ures 4 and 5, we see that irrespective of the amount being used, there is a clear performance gain when we use unlabeled data from multiple source domains compared to using a single source domain. How-ever, we could not observe a clear gain in perfor-mance when we increase the amount of the unla-beled data used to create the sentiment sensitive the-saurus. 5.4 Cross-Domain Sentiment Classification Table 3 compares our method against a number of baselines and previous cross-domain sentiment clas-sification techniques using the benchmark dataset. For all previous techniques we give the results re-ported in the original papers. The No Thesaurus baseline simulates the effect of not performing any feature expansion. We simply train a binary clas-sifier using unigrams and bigrams as features from the labeled reviews in the source domains and ap-ply the trained classifier on the target domain. This can be considered to be a lower bound that does not perform domain adaptation. SCL is the struc-tural correspondence learning technique of Blitzer et al. (2006). In SCL-MI , features are selected us-ing the mutual information between a feature (uni-gram or bigram) and a domain label. After selecting salient features, the SCL algorithm is used to train a binary classifier. SFA is the spectral feature align-ment technique of Pan et al. (2010). Both the LSA and FALSA techniques are based on latent semantic analysis (Pan et al., 2010). For the Within-Domain baseline, we train a binary classifier using the la-beled data from the target domain. This upper base-line represents the classification accuracy we could hope to obtain if we were to have labeled data for the target domain. Note that this is not a cross-domain classification setting. To evaluate the benefit of us-ing sentiment features on our method, we give a NSS (non-sentiment sensitive) baseline in which we cre-ate a thesaurus without using any sentiment features. Proposed is our method.

From Table 3, we see that our proposed method returns the best cross-domain sentiment classifica-tion accuracy (shown in boldface) for the three do-mains kitchen appliances, DVDs, and electronics. For the books domain, the best results are returned by SFA . The books domain has the lowest number of unlabeled reviews (around 5000 ) in the dataset. Because our method relies upon the availability of unlabeled data for the construction of a sentiment sensitive thesaurus, we believe that this accounts for our lack of performance on the books domain. How-ever, given that it is much cheaper to obtain unla-beled than labeled data for a target domain, there is strong potential for improving the performance of our method in this domain. The analysis of vari-ance (ANOVA) and Tukey X  X  honestly significant dif-ferences (HSD) tests on the classification accuracies for the four domains show that our method is sta-tistically significantly better than both the No The-saurus and NSS baselines, at confidence level 0 . 05 . We therefore conclude that using the sentiment sen-sitive thesaurus for feature expansion is useful for cross-domain sentiment classification. The results returned by our method are comparable to state-of-the-art techniques such as SCL-MI and SFA . In par-ticular, the differences between those techniques and our method are not statistically significant. Compared to single-domain sentiment classifica-tion, which has been studied extensively in previous work (Pang and Lee, 2008; Turney, 2002), cross-domain sentiment classification has only recently re-ceived attention in response to advances in the area of domain adaptation. Aue and Gammon (2005) re-port a number of empirical tests into domain adap-tation of sentiment classifiers using an ensemble of classifiers. However, most of these tests were un-able to outperform a simple baseline classifier that is trained using all labeled data for all domains.
Blitzer et al. (2007) apply the structural corre-spondence learning (SCL) algorithm to train a cross-domain sentiment classifier. They first chooses a set of pivot features using pointwise mutual informa-tion between a feature and a domain label. Next, linear predictors are learnt to predict the occur-rences of those pivots. Finally, they use singular value decomposition (SVD) to construct a lower-dimensional feature space in which a binary classi-fier is trained. The selection of pivots is vital to the performance of SCL and heuristically selected pivot features might not guarantee the best performance on target domains. In contrast, our method uses all features when creating the thesaurus and selects a subset of features during training using L1 regular-ization. Moreover, we do not require SVD, which has cubic time complexity so can be computation-ally expensive for large datasets.

Pan et al. (2010) use structural feature alignment (SFA) to find an alignment between domain spe-cific and domain independent features. The mu-tual information of a feature with domain labels is used to classify domain specific and domain inde-pendent features. Next, spectral clustering is per-formed on a bipartite graph that represents the re-lationship between the two sets of features. Fi-nally, the top eigenvectors are selected to construct a lower-dimensional projection. However, not all words can be cleanly classified into domain spe-cific or domain independent, and this process is con-ducted prior to training a classifier. In contrast, our method lets a particular lexical entry to be listed as a neighour for multiple base entries. Moreover, we expand each feature vector individually and do not require any clustering. Furthermore, unlike SCL and SFA, which consider a single source domain, our method can efficiently adapt from multiple source domains. We have described and evaluated a method to construct a sentiment-sensitive thesaurus to bridge the gap between source and target domains in cross-domain sentiment classification using multi-ple source domains. Experimental results using a benchmark dataset for cross-domain sentiment clas-sification show that our proposed method can im-prove classification accuracy in a sentiment classi-fier. In future, we intend to apply the proposed method to other domain adaptation tasks.
 This research was conducted while the first author was a visiting research fellow at Sussex university under the postdoctoral fellowship of the Japan Soci-ety for the Promotion of Science (JSPS).

