 Developing named entity-based datasets is a central task to applications such as expert search engines and scientific digital library portals, where researchers and organizations are the key entities to index and search for. However, devel-oping such datasets is challenging because information must be extracted from unstructured or semi-structured sources. One approach involves the extraction of information from bibliographic metadata of scientific publications. DBLP 1 is an example of a site offering an index of the literature in Computer Science. CiteSeerX 2 crawls the Web to collect files that correspond to publications and from which information is extracted. A complementary approach is to extract information and to identify researchers from crawled Web pages of academic institutions. By exploiting the publicly available Web sites of academic institu-tions, this approach has the potential to achieve higher coverage when there is no bibliographic metadata available.

In this work, we consider the latter approach to develop an entity-based dataset of researchers, covering several research fields and different countries. We describe a mechanism for identifying with high accuracy the named entity that corresponds to the owner of a Web page. In other words, given a Web page p , we identify the person entity e of the Web page X  X  owner. Such Web pages are either home pages of people, or organizational staff Web pages, similar to online business cards. For example, the owner X  X  named entity of a researcher X  X  home page is the researcher X  X  name.

Related works propose to identify the owner of a home page by learning models of the structure of home pages and the position of names on the Web page. For example, Gollapalli et al. [8] select the first identified name on the Web page. This simple heuristic is effective because the name of the owner of the home page is likely to appear before any other n ame. However, the effectiveness of this heuristic is highly dependent on the eff ectiveness of named entity recognition, because if the first name is not identified correctly, then the selected name is likely to be wrong.

We take a different approach, where we fi rst apply a named entity recognizer to extract all names appearing on a Web page and then, we exploit the likely redundancy of the names X  occurrences on a Web page to identify the name of the Web page X  X  owner. For example, the name of the Web page X  X  owner is likely to appear more than once in the Web page. In addition, it may appear both in its full form as well as in abbreviated forms in publication references. We develop weighting functions for the identified named entities and select the top-scoring ones as the named entities of a Web page X  X  owner. The weighting functions are based on the output of the named entity recognizer and exploit similarities between names by constructing a graph wh ose vertices are the named entities that have been recognized in a Web page . Furthermore, we treat the problem of selecting the named entity as a binary classification problem and train an SVM classifier to identify those named entities.

An important advantage of our approach over existing ones is that it does not depend on a particular named entity recognition model. Instead, it can use any method that detects the named entities with the required granularity, that is, given names, last names and middle names. The experimental results, based on a dataset of 472 home pages manually annotated with the name of their owner, show that our proposed approaches can achieve over 87% precision in identifying the named entity of the Web page owner. When considering only the Web pages in which the correct name ha s been recognized at least once by the named entity recognition model, the introduced a pproaches achieve over 95% precision.
The remainder of this paper is organized as follows. In Section 2 we present related works from the literature. In Section 3 we briefly describe the named entity recognition method and features we employ to identify the named entities from which we select the Web page owner named entities. Section 4 introduces a framework for the selection of named entities and describes two baseline ap-proaches and one based the construction of a graph from named entities that are similar, exploiting the redundancy in the named entity occurrences. In Section 5 we describe an approach based on supervised machine learning and, more specif-ically, a binary SVM classifier, which is trained to select the named entities from a home page. Section 6 describes our dataset and the experimental results we have obtained. Finally, Section 7 closes this work with some concluding remarks. The approach to identify the named entity of the home page owner is primarily related to named entity recognition, metadata extraction from Web pages, and to coreference resolution.
 Named Entity Recognition. Supervised machine learning techniques are typically used to identify named entities in texts and Web pages. An example of a gener-ative model is a Hidden Markov Model (HMM), in which the hidden states are used to model the tag classes of words. Bikel et al. [1] develop a named entity recognizer based on a HMM, where the hidden states of the HMM correspond to a number of name classes, such as person names, or organization names, and the features involve checking for capitalization, whether a word contains only letters, or digits. Chieu and Ng[4] employ a Maximum Entropy Classifier, which classifies each word in a text as the beginning of a named entity, the continuation, or the last word of a named entity. The features employed by the Maximum Entropy Classifier are binary. Takeuchi and Collier [14] explore the use of Support Vector Machines for named entity recognition, computing features from a context of the three previous and three following tokens. An approach that has been commonly used and results in state-of-the-art performance is Conditional Random Fields (CRF) [10], which is an undirected graphical model or a Markov Random Field. Culota et al. [5] extract contact information from the home pages of persons identifiedinemailcorpora.Minkow et al. [11] apply a CRF model to recognize names in emails, using features which are primarily based on gazetteers for per-son first and last names, names of organizations and locations, but not using deep natural language processing. Zhu et al. [17] propose two-dimensional CRF, which take into account not only the sequence of information objects in a Web page, but also the dependencies between neighboring blocks. Shi and Wang have proposed a dual-layer CRF, which aims to process more accurately cascades of subtasks in Natural Language Processing [13]. For example, one such cascade of tasks is the identification of the full person names in a text, as well as the given and last names. In our work, we employ an approach similar to cascaded CRFs where the predicted labels for th e person names are used as a feature in the prediction of the first and last names of persons. We discuss in more detail the CRF model we employ in Section 3.
 Metadata Extraction. While we use named entity recognition to identify person names on a Web page, the focus of our work is on selecting the name of the owner of a professional or academic home page. Hence, our work is more closely related to [9][3][8]. Kato et al. [9] employ the concept of information sender to identify the author of a Web page or the organization to which the Web page belongs. They treat the problem as a ranking problem evaluating at the top-5 results. The reported precision at ranks 1 and 5 is 0.586 and 0.752, respectively. Changuel et. al [3] extract the author of Web pages, not necessarily home pages, by building a decision tree with the C4.5 algorithm and employing a small set of features. They report a precision of approximately 0.812 in identifying the author of a web page. Gollapalli et al. [8] identify the owner of a home page by applying a standard named entity recognition model and selecting the first identified name. Zheng et al. [16] describe an approach based on Conditional Random Fields to identify the metadata about authors from their home pages using visual features, such as the position of DOM nodes on the rendered Web page. Finally, Tang et al. [15] start from a dataset of bibliographic metadata and create Web search engine queries to retrieve the home page of a user. Their setting is different from ours where we aim to extract the names of persons, without assuming that we have any information about the names apriori . Coreference Resolution. The task of selecting the main entity from the set of entities identified on a home page is rela ted to coreference resolution, which determines whether two textual expre ssions refer to the same entity or not. Typical coreference resolution method s employ supervised learning [12][6] and rely on the linguistic analysis of text to extract features. The task of identifying the owner of a home page does not require the full resolution of all references, and hence, it is not necessary to apply cor eference resolution at a first step. Before presenting our approach to named en tity selection, we describe the Named Entity Recognition (NER) system we first apply to extract names from home pages. We have developed a NER system based on supervised learning of a Conditional Random Field (CRF) to learn to recognize the full names of persons, as well as their first, middle and last names. We did not employ an existing NER system such as the Stanford Named Entity Recognizer 3 [7] for two main reasons. First, we require better granularity in identifying first, last and middle names in addition to full names. Second, our objective is to process input from Web pages. Hence, we develop features that exploit term frequency statistics in the anchor text of incoming hyperlinks of Web pages.

To train the CRF model, we have manually annotated all the names in 95 Web pages. We first split the textual content of a Web page in sentences using the DOM tree and regular expressions. Next, we tokenize each sentence by splitting tokens at non-alphanumeric characters, and we annotate the tokens. We use the begin, inside, outside (BIO) convention for labels. For example the sentence  X  X hris Bishop is a Distinguished Scientist at ...  X  4 is tokenized and labeled as follows: where BPERSON denotes the beginning of a full name, BFNAME denotes the be-ginning of a first name, and BLNAME denotes the beginning of a last name. The label IPERSON denotes that the corresponding token is inside a person name. The label O denotes that the corresponding token does not belong to any of the classes we consider.

Next, we train a CRF model using five types of features. The first type of features corresponds to the tokens the mselves. The second type corresponds to two features, whose value depends on the form of the examined token. The first feature indicates whether the token contains only numerical digits, or it is a single upper case letter, or a punctuation symbol, or a capitalized word, etc. ). The second feature indicates whether the token is an alphanumeric string. The third type of features relies on two gazetteers for first names and geographic locations, respectively, and comprises two binary features indicating whether the token is a first name, and whether the token is a geographic location. The fourth type of features is based on a full-text index of Web pages and comprises 4 features. More specifically, two features correspond to the logarithm of the number of documents in which the term occurs in the body, and the anchor text of incoming links respectively. Th e two next features correspond to flags indicating whether the term occurs in the title or the anchor text of incoming links of the currently processed document. The fifth type of features comprises one feature indicating whether the token occurs in the anchor text of an outgoing hyperlink in the currently processed document, differentiating between links to Web pages in the same or different domains. Note that the last two types of features depend on the distribution of terms in a full text index of Web pages, and the text associated with the link structure of Web pages. We employ the implementation of CRF++ 5 .

We learn the CRF model and apply it to unseen Web pages in the fol-lowing way. First, we train a CRF to recognize full names and assign labels BPERSON and IPERSON . The assigned labels are then used to learn a second model where the assigned labels constitute an additional twelfth feature used in the recognition of first, middle and last names, assigning labels BFNAME , IFNAME , BMNAME , IMNAME ,and BLNAME and ILNAME , respectively. After apply-ing the CRF models to label tokens, we aggregate consecutive tokens with B and I labels in an entity e . For each entity e , t ( e ) is the type of the entity where assignment over the entity X  X  tokens, and s ( e ) is the concatenation of the tokens to form the string representation of e .
The accuracy of the named entity recogn ition could potentially be higher if we employed language-specific features, such as Part Of Speech (POS) tags. However, our aim is to apply the developed approaches to a wide range of input Web pages, irrespectively of the language they are written in. We offset the potentially lower accuracy of the CRF named entity recognition by weighting the different occurrences of names, as described in the following section. In this section, we study the problem of selecting the named entity correspond-ing to the owner of a home page. We operate on the output of the named entity recognition process describ ed in Section 3 to select the entity e with type t ( e )= PERSON . First, we describe the framework for weighting the identi-fied entities (Section 4.1). Then, we introduce two baseline weighting functions for entities based on the features used by the NER system (Section 4.2), and a third weighting function based on a graph representation of the named entities (Section 4.3). 4.1 Entity Selection Framework We perform entity selection in the following framework. S ( t, str )isthesetofall entities of type t ( e )= t and string representation s ( e )= str : When t = PERSON we write S ( str )= S ( PERSON ,str ). For each set S ( str ), we compute a weight w str and rank S ( str ) in descending order of w str . The selected named entities of the processed Web page are the ones belonging to the top ranked S ( str ). 4.2 Baseline Entity Selection A simple way to weight a set S ( str )of PERSON entities with the same string representation is to sum the confidence c ( e ) of the label assignment for each entity e  X  S ( str ): The intuition for defining the weight w str as the sum of the confidences is that it reflects both the number of times the same string has been identified as a PERSON entity as well as the confidence in the recognition.

The weighting of S ( str ) from Eq. 2 is only based on the average confidence of the label assignment to each token of the entities in S ( str ). We can improve the weighting by incorporating more information regarding the position of the occurrences of entities. where anchor ( e )=1if s ( e ) occurs in the anchor text of incoming hyperlinks of the processed Web page, otherwise anchor ( e ) = 0. Similarly, title ( e )=1if s ( e ) occurs in the title of the pro cessed Web page, otherwise title ( e )=0.The parameters w a ,w t ,w c control the importance of ea ch of the three features and are set during training. 4.3 Graph-Based Entity Selection The baseline weighting of set S ( str ) according to Eq. 2 and 3 only consider the entities of type PERSON with the same string representation. However, they ignore any similarities between the identified en tities in order to compute an improved weight. Suppose that on a Web page the full name of a researcher appears only twice at the top of the Web page, and the name of the most frequent co-author appears in abbreviated form once for each publication of the researcher 6 .Insuch a setting, the baseline weighting functions may select the abbreviated name of the co-author as the named entity of the URL X  X  owner, instead of the full name of the researcher.
We overcome the limitations of the baseline weightings by introducing a novel graph-based weighting for sets of entities. We define a directed graph G = { V,E } where V is the set of vertexes and E is the set of edges. Each set S ( t, str )= { e | t ( e )= t  X  s ( e )= str } of entities with given type t and string representation str , corresponds to a vertex of V . Hence, the graph is co nstructed from all identified names in the Web page.

We define three types of directed edges in graph G . The set of vertices having an edge of type i to S ( t, str ) is denoted by in i ( t, str ). When t = PERSON ,wecan write in i ( str ). The three types of directed edges are defined as follows:  X  A type 1 edge connects sets of FNAME, MNAME, LNAME entities to the corre- X  A type 2 edge connects a set S ( t, str 1) to S ( t, str 2) when string str 1isan  X  A type 3 edge connects a set S ( str 1) to S ( str 2) when the name str 1is Figure 1 illustrates a graph constructed from a set of identified named entities. The graph has two vertexes of type PERSON ,onevertexoftype LNAME for the last name  X  X ishop X  and two vertexes of type FNAME for the first name  X  X hris X  and its abbreviated form  X  X . X  Therearefouredgesoftype1,linkingthever-texes of type FNAME and LNAME to the corresponding vertexes of type PERSON . There is one edge of type 2 which links the vertex S ( FNAME ,  X  X . X ) to the ver-tex S ( FNAME ,  X  X hris X ). Finally, there is one edge of type 3 from S ( X  X . Bishop X ) to S ( X  X hris Bishop X ) because both vertexes have incoming links from the same vertex S ( LNAME ,  X  X ishop X ) and there is a type 2 edge between two of their FNAME linking vertexes.

The graph G , which is constructed as descr ibed above, is a directed acyclic graph (DAG). From the definition of type 1 edges, we cannot have a cycle in-volving vertices of type PERSON andanyotherentitytypebecausetype1edges always point to vertices of type PERSON . Hence, a cycle may involve either type 2 edges exclusively or type 3 edges exclusively. Since a type 3 edge exists only if there is a type 2 edge, and the two edges cannot be in the same path, then there exists a cycle with type 3 edges only if there exists a cycle with type 2 edges. However, there cannot be a cycle with type 2 edges, because type 2 edges link an abbreviated name to its full form. H ence, there cannot be any cycle in the graph G .
 Once we have constructed the graph from the named entities identified in a Web page, we compute a weight for each vertex S ( str ), corresponding to the sum of the Baseline 2 score from Eq. 3 plus the sum of the scores of vertices that link to S ( str ). Finally, we select the set S ( str ) with the highest score w str according to Eq. 4. The intuition is that the scores of abbreviated named entities propagate to the entities corresponding to full names. The baseline and the graph-based scoring functions make use of the output of the NER system to score entities found in a Web page and select the ones which are more likely to refer to the owner of the Web page. However, all three functions will always produce a score for the entities, even when the named entity of the owner of the Web page is not among the identified named entities. For example, a researcher may have a set of Web pages documenting a software he has written and released as open-source. The functions introduced earlier will always select one set of entities as the owner for the considered Web page. Moreover, extending these functions with arbitrary features is not trivial. In this section, we investigate the problem of selecting the named entities as a binary classification problem in a sup ervised learning setting.

In particular, we formulate the classification problem y ( x )  X  X  X  1 , 1 } ,where x  X  X  = { (URL ,S ( PERSON ,str )) } . The input x is a pair of a URL and aset S ( PERSON ,str ). For the output, y ( x ) = 1 when the named entities in S ( PERSON ,str ) correspond to the owner of Web page with URL, otherwise, y ( x )=  X  1. For each input point x , we compute 13 features:  X  the graph-based score of S ( PERSON ,str )fromEq.4  X  the rank of S ( PERSON ,str ) when all sets of PERSON entities are ordered in  X  the number of edges of type i pointing to S ( PERSON ,str )for i =1 , 2 , 3(3  X  1if str appears in an email address found in the content of URL, otherwise  X  1if str appears to be emphasized in the text of home page identified by The feature values are normalized between -1 and +1 on a per home page basis. We employ an SVM classifier with radial-basis kernel from LIBSVM 7 [2]. For a given home page identified by URL, if the SVM classifies as +1 more than one pairs (URL ,S ( PERSON ,str )), we select the one with the highest estimated probability, as computed by the SVM classifier. In this section, we describe the experimental setting in which we evaluate the introduced methods. First, we evaluate the CRF-based named entity recognition (Section 6.1). Next, we describe the da taset we use for entity selection and we present the obtained results (Section 6.2). 6.1 Named Entity Recognition Evaluation In this section, we present evaluation r esults for the NER system we describe in Section 3. Starting from a set of 95 anno tated Web pages, we randomize their order and split them in three folds. We use each fold once to test the CRF model we learn on the other two folds. Table 1 reports the micro-averaged precision, recall and F-measure for each of the labels we assign during the first and the second passes of the CRF-base d NER system, respectively.

The NER system assigns BPERSON and IPERSON labels with high precision and recall. This is consistent with results reported for NER systems trained on much larger corpora [7]. First and last names are identified with an accuracy of more than 0.80. The obtained precision for middle names is significantly lower, mainly due to the small number of training examples available.
 6.2 Evaluation and Experimental Results We have evaluated the introduced approaches using a dataset of home pages, for which we have manually identified the full name, as well as the first, middle and last names of the home page owners. We have sampled a total of 472 home pages from a large crawl of university and research organization Web sites.
The NER model, described in Section 3, has identified the correct name at least once in 432 out of the 472 home pages. Out of the 432 pages, 66% of the pages are written in English, 27% are written in French and 3% of the pages are written in German. The remaining 4% of the pages are written in Danish, Italian, Polish, Portuguese and Swedish. We distinguish between perfect and partial matches of names. We have a perfect match when the entity weighting ranks first a name matching perfectly th e correct one. A partial match occurs when the entity weighting ranks first an a bbreviated version of the correct name.
Table 2 reports the accuracy of perfect and partial identifications over the 432 home pages for which the correct answer is among the identified named entities. We also report results computed over the total number of home pages. The first approach (Order) is a na  X   X ve heuristic where the first identified person name is selected as the owner X  X  name for the co rresponding page. The effectiveness of this heuristic depends on the accuracy of the underlying NER system because any wrong identification of names will lead to an error in the selection [8]. The two next approaches, Baseline 1 and Baseline 2, correspond to the selection of entities using Eq. 2 and 3, respectively. The fourth and fifth rows in Table 2 display the results obtained with the graph-based and the SVM-based entity selection approaches, respectively.

The best-performing approach is the SVM-based one, which achieves perfect matches in 95.4% of the home pages when the named entity recognition identifies the correct name at least once. If we cons ider both perfect and partial matches, then we have a match in 96.3% of the home pages. When we calculate the results on all the home pages, including the ones in which named entity recognition did not identify the correct named entity, we achieve a precision of 88.1%. In this work, we have introduced a novel method to select among recognized named entities in a home page the one corresponds to the owner. Our method uses the output of a named entity recognition system and exploits the redun-dancy and the similarities between na mes to select the correct one. The in-troduced methods are developed independently of the employed named entity recognition approach. Indeed, they can be used with any NER approach that identifies person names, but also first, middle and last names. In a dataset of more than 400 home pages, our methods identify the correct name for more than 90% of the home pages in which a NER system identifies at least once the correct name in the processed page. The comparison of our methods with a heuristic based on the order of names shows that our approaches achieve important im-provements in effectiveness because the y are more robust with respect to the accuracy of the employed NER system.

We have applied the developed methods in the context of researchers X  home pages. In the future, we will evaluate it in the context of different applications, such as the automatic creation of online social networks, or people search. We also aim to apply the developed methods for identifying the name of the owner of a Web page as a feature to improve the classification of Web pages.
