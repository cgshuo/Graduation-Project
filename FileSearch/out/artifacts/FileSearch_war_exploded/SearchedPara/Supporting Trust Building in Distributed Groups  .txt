 In this paper, we discuss require ments for building trust in locally distributed groups whose members co-operate via shared workspace systems. We argue that appropriate security technology should be an intrinsic part of such systems and describe a conceptual model as well as a recent extension to an existing shared workspace system that provides the respective functionality based on PGP. H.4.1 [ Office Automation ]: Groupware. Design, Security, Human Factors. Since a number of years we increasingly observe that locally distributed teams are brought together to work on common goals, e.g., to create documents and other artifacts or to carry out business processes in a collaborative manner. Members of such a team may belong to one locally distributed organization or they may build a cross-organizational team with members from several organizations. They often do not know each other in person before they start their collaboration and may only meet  X  X irtually X  during the run-time of their tasks (see, e.g. [13] and [14] for case studies of such types of coopera tion). Such teams often use Web-based groupware systems based on the shared workspace metaphor for their collaboration and communication purposes since, in general, such systems provide the very functionality that members of such teams need for achieving their goals. The probably most critical factor for the efficiency of team work is the creation of  X  X rust X  within a group as has been discussed in the literature of sociology, social psychology and philosophy already long before the disciplin e of CSCW emerged (see, e.g., [4] and [9]). Trust building is of particular importance and difficulty when working in virtual environments as has also been extensively discussed since many years within the CSCW literature (see, e.g., [7] and [15]). We also observe that using the Internet in general and the Web in particular has a considerable numbe r of security risks. Some of them are of particular importa nce for team collaboration and thereby create a major obstacle to trust building as will be discussed in more detail below. In fact, when looking at the development of the security scene within the last few years, the situation seems to become worse and the software industry makes little  X  if any  X  progress of solving these problems at operation system level. This has lead to the effect that a number of organizations have already estab lished rather strict security policies. For example, many or ganizations forbid that their employees store documents or othe r confidential data on external servers. Obviously, such a policy represents a high barrier for the use of CSCW systems in cross-organizational collaboration processes. .
 As a survey of the CSCW literatu re shows, security issues for CSCW systems have been discussed since many years. (A comprehensive survey of related literature can be found in [1].) Already at the very first CSCW Conference Greif and Sarin [5] argued that the security requirements of CSCW systems are specific and not sufficiently supported by the security features provided on operation system or data base level. In fact, looking at the current security problems with the Internet and Web it seems that the situation has rather become worse than it has been 20 years ago. In practice, however, security i ssues are often ignored in CSCW systems. Ahmed and Tripathi argue that this is due to the fact that CSCW systems  X  X mphasize the mo tivations of cooperation and shared objectives X  [1] although it is well known that users of a CSCW system may have conflicting goa ls (see, e.g., [8] or [10]). Similarly, features particularly addressing the building of trust are rarely found in CSCW systems. Jones and Marsh [7] argue that this is due to the fact that  X  X roupware designers ... do not have tools or experience to effectively analyse and provide support for social facets of group working X . We believe that in many cases  X  in particular, when highly confidential information is involve d  X  the elimination of certain security risks in team communication and collaboration is a pre-requisite for building trust within a team: How shall the members of a team start building mutual trust if they don X  X  believe that certain security requirements related to their information exchange are met? We agree with the security requi rements described in [14] and believe that in particular follo wing security requirements should be satisfied: R1: Users should be able to verify each others identity, i.e., if a R2: Verification of identity should also relate to artifacts used in R3: Only authorized persons have access to artifacts used in the Of course, providing a solution for these security issues is, in building trust within teams. Th ere are often a number of other issues involved such as judgment of competence and reliability of team members or even emotional factors (see, e.g., [12]) that usually cannot be solved by technology. It is a bit surprising that CSCW literature on trust usually does not consider security issues as a central topic for trust building. It seems that it is taken for granted that security requirements are satisfied already. However, the current state-of-the-art at, e.g., operating and communication system level is far from providing respective technology in a use r-friendly manner and looking at the security problems with the Inte rnet and Web it seems that this situation will not change in the near future. We therefore believe that the provision of appropriate security technology should become an intrinsic part of those CSCW systems whose usage requires a certa in level of trust between its users  X  and this is probably the vast majority of all CSCW systems. In this paper we first discuss a number of security issues that should be addressed by Web-ba sed CSCW system where we address primarily systems based on the shared workspace metaphor. We then describe seve ral extensions to the BSCW system [2] that were required to satisfy these requirements. We finally argue that putting such security technology into practice requires also the consideration of several organizational issues. The common work mode in a We b-based CSCW system based on the shared workspace metaphor is, in general, as follows (see Fig. 1): Several users form a team and create a joint workspace, usually a folder hierarchy, where they create/modify/read/exchange documents or other artifacts required for achieving a joint work goal. In general, access to these workspaces is limited to the members of the team, i.e., the users have to authenticate themselves, often based on a username/password authentication mechanism. All interactions between the users and the respective CSCW system are Web-based, i.e., on the server side there is a Web server extended with communicati on and cooperation features and on the users X /clients X  side there is a Web browser or some other applications using the standard Web protocols, in particular, HTTP. In particular, all data exchange between the users/clients and the server is carried out via standard Web protocols. 
In the following sub-section we shall discuss the security issues related to this form of comm unication and cooperation process and their implications for the trust building process. The by large most common method of user identification in current Web-based systems is the user name/password scheme. In general, this authentication met hod cannot be considered secure as the many privacy violations known for this authentication method show. With respect to the security requirements desc ribed above, two issues need to be distinguished: Firstly, an unauthorized person who gets unintended knowledge of a user name/password combination gets access to a workspace and the information therein, i.e., a violation of R3. Secondly, an unauthorized person who gets unintended knowledge of a user name/password combination gets access to a workspace and creates or modifies artifacts therein. Other members of the workspace may then associate these artifacts with the wrong person, i.e., this re presents a problem for R1. In general, people cannot and do not assume that name/password authentication prevents unauthorized access to such spaces and there the respective security risks are a problem for trust building. transmitted via a considerable number of computers/routers in between which a normal user is not aware of. This is often considered a significant security ri sk, however, in practice this is, in principle, no problem. When client and server use an SSL encrypted communication channel, there exist hardly any security risks, e.g., that unauthorized persons get access to the exchanged data. This applies both to th e upload and download process. Although in practice security problems related to data transmission may not exist, people often perceive such a transmission as a security risk and therefore as a problem for trust building. From the users X  perspective the data storage on the server side provides a major problem. Users may not even know the physical location of the server which whom they communicate nor the security measures that apply ( X  X ow is the system secured against hackers X  attacks? X   X  X an the system administrator read my files? X  etc.). 
Even if the security measures on the server X  X  side are very elaborate and provide a very high security level, it may be very so they are willing to deposit information they consider of high privacy on the server. To address the issues discussed a bove and to satisfy the security requirements R1  X  R3 we propose the following solution:  X  All artifacts in shared workspaces are encrypted.  X  All artifacts in shared workspace have a digital signature of its  X  Encryption and digital signature s are based on public/private In principle, these measures are sufficient for solving all security issues mentioned above (although in practice there exist some hurdles as will be discussed later): R1 and R2: A user X  X  public key is bound by a Certificate Authority to a particular person. Other users can access the Certificate Authority for verifying a user X  X  identity. If all artifacts have a digital signature, the authors can be identified and they cannot deny their authorship. R3 and user authentication: Users do not need to trust that the name/password authentication scheme is secure since encryption in combination with digital signatu res prevents that intruders get authorized users about the authorship of artifacts. Data transmission and data storag e: Similarly, users do neither have to trust the data transmission process nor the data storage on the server since encryption prevents any unauthorized access and any modification of the data during transmission or at the data store; any modification would be detected since it would invalidate the digital signature. The conceptual model for the integration of security mechanisms in shared workspace systems  X  in particular the key management  X  shall be illustrated by a specific example shown in Fig. 2. The ellipses denote the hierarchy of different shared workspaces. F1 is the root-folder with three subfolders F11  X  F13. F11 itself has three subfolders F111 and F112. The folders are shared among three groups of users illustrated by the hexagons G1, G11, and G12. Figure 2. Shared Workspaces with User and Folder Objects In our example G1 consisting of users U2 and U3 has been extended by user U1 for the subfol der F11. I.e. F11 as well as its subfolder F111 and F112 is now shared among users U1, U2, and U3. Similar F13 is shared between users U2, U3, U4 and U5. It should be noted that the users U1, as well as U4 and U5 do not have access to the superior folders F1 and F12. They may not even know about the existe nce of these folders. All users have private and public keys and their public keys PBU1, PBU2 ... PBU5 are, of course, visible to other users. In addition to the public user keys, we also introduce public group keys and private group keys, respectively. The public group keys are stored as attributes with the group/folder objects and are visible for all users who have access to these objects. 
G11 In the following we describe th e procedure for the management and distribution of the public and private keys of users and folders. In section 4.2 we discuss in more detail the advantages of associating key pairs with folders. A public/private key pair exists for each user who is registered with the groupware system. The pub lic user key is then stored with the user object in the groupware platform and can be accessed by other users. The private user key is managed locally by the user. When a user creates a new shared folder, he/she also associates a new public/private group key pair for this folder. Similar to the user X  X  key, the public group key is stored with the folder object. In our example these are the keys PBG1, PBG11, PBG12. The associated private key of a folder must then be made available to the users of this folder. To ensure a secure distribution of the private folder key, the public keys of the users are used, i.e., the private folder key is encrypted using the public key of the users which are retrieved from the user objects. Then this encrypted key can be securely distributed either by email or by uploading the key to the shared folder. A user who uploads a new contribu tion, e.g., a document, to the shared workspace must encrypt this document using the public key of the respective folder. A user who downloads a document from a folder must decrypt the document before further use. For the decryption process the private key of the folder is used. In summary, the various keys are applied in the following manner:  X  The public and private keys of a folder are generated when a  X  The public keys of a user and a folder/group are always stored  X  The public key of a folder is used to encrypt contributions to a  X  The private key of a folder is used to decrypt documents  X  The public key of a user is used to securely submit  X  The user X  X  private key is used by the user to decrypt the  X  A user X  X  private key is also us ed when he/she adds a digital Although several security management functionalities can be implemented centralised as part of the shared workspace system, additional support is required loca lly to provide an easy to use solution. In the following section we describe how this concept has been successfully realised a nd seamlessly integrated with the BSCW shared workspace system. ECURITY FEATURES OF THE BSCW SYSTEM The BSCW system [2] is a CSCW system based on the shared workspaces metaphor that has been developed by the Fraunhofer Institute for Applied Information Technology (FIT) and is under continuous improvement by FIT and FIT X  X  commercial spin-off company OrbiTeam since more than ten years. Today it is used by about one million users world-wide. Until recently the BSCW system did not satisfy the security requirements specified in Chapter 1. Of course, users had always been able to encrypt and digitally sign an artifact before uploading it to a BSCW server. As far as we know, this was never done because it would have required significant user efforts to get the respective security technology work in distributed BSCW user groups. However, the provision of appropr iate security technology was requested by a significant number of users and we therefore decided that support for encryption, decryption and digital signatures should become an intrinsic part of the BSCW system. In particular, the usage of these security features should become as easy as possible for the users. We have therefore recently added essentially two extensions to the system:  X  Firstly, we provided features for storing and managing public  X  Secondly, we added features for encryption and digital For the implementation we used to a large extent public domain software of the PGP (Pretty Good Privacy) security system that was originally developed by Phillip R. Zimmermann in the early 1990ies [16]. In the next sections we describe shortly those features of the PGP software we used and than in more detail the integration and extensions to the BSCW system. PGP is probably the most widely used system for email and document encryption and authentication. Both commercial and public domain versions of PGP im plementations are available (see http://www.pgpi.org for comprehensive information on PGP). For the BSCW extension we used s ubsets of a public domain version called Cryptix [3], but a commercia l version could also be used quite easily. PGP X  X  encryption method is a hybrid method based on both symmetric and asymmetric keys . Messages are encrypted by symmetric keys, i.e., the same key is used for encryption and decryption since symmetric encryption/decryption can by carried out much faster (about 1,000 times) than asymmetric encryption/ decryption where a message is encrypted with the public key of the intended recipient and decrypted by the recipient with his/her private key. Only the symmetric key (created by PGP  X  X n the fly X  when encrypting a message) is encrypted with the public key of recipient. (In this section we use the term message for digital information that shall be encrypted and digitally signed. This term is often found in PGP literature since PGP is widely used for secure exchange of email messages.) The symmetrically encrypted message and the associated asymmetrically encrypted symmetric key are than sent to the recipient. The recipient decrypts the symmetric key with his/her private key and can then decrypt the message with the symmetric key. It should be noted that PGP users are usually not aware  X  and need not be aware  X  of this two level encryption scheme. In their mental model of how PGP work s, the message as such is encrypted with a public key and decrypted with a private key. PGP allows also encryption for multiple recipients by adding multiple encrypted symmetric keys, one for each intended recipient. A message encrypted by PGP therefore looks as shown in Fig. 3. PGP provides also means for adding digital signatures to messages. For this purpose it applies a one-way hash function to the message, i.e., a function that takes a message of any length and produces a fixed-length (e.g., 256 Bits) message digest as output. Hash functions have the pr operty that if the message is changed in any way, the same hash function would create an entirely different output. The message digest is then encrypted with the private key of the creator of the message and represents the signature which is added to the message. A recipient uses PGP to decipher the encrypted digest with the public key of the creator and then tries to re-compute the message digest, thus verifying both the signature and the integrity of the message. The PGP software provides also features for the creation of public/private key pairs. In fact, the first step of many users after installing the software is the creation of their public/private key pair. When encrypting or decrypting data with someone X  X  public key, one must be totally sure that the public key really belongs to the person with whom communication is intended. For example, if person A pretends to be person B and gives another person a public key (of a public/private key pair), pretending that it belongs to person B , and the recipient then uses this key for encrypting a message, A  X  the wrong person  X  can decrypt the message. This problem can be solved by so-called digital certificates . Certificates are essentially a collection of information that identify a person (e.g., name and address), the public key belonging to the person, and a digital signature of a trusted third party proving the correctness and authenticity of the certificate. The digital certificate of a person is made available to others so they can bind public keys to individual persons. In case of doubt they may access the trusted third party asking for a verification of the certificate. PGP provides also support for two ve rsions of digital signatures, the PGP certificate format and the certificate format according to the ITU Standard X.509 [6]. PGP stores keys as well as PGP certificate data in so-called key-rings . Data in key-rings, particularly key data, is secured by pass phrases, i.e., whenever a user wants to access a key, he/she has to enter the correct pass phrase. It should be noted that PGP doe s not provide a full public key infrastructure (PKI). In particular, PGP does not solve the problem of trust in certificates completely although it provides a number of features for establishing so-called Networks of Trust . For a thorough solution of the trust problem a Certificate Authority (CA) would be required that guarantees the authenticity of certificates. The legal basis for these CAs differs from country to country and different organi zations or companies may have different security policies related to the interaction with CAs. We therefore also do not address the issue of trust in certificates within the BSCW system: Users of the security extension to BSCW have to solve these issues, in particular the issue of trust in other persons X  public keys by external means. To support PGP encryption for users of the BSCW system we added PGP key data as user attr ibutes, i.e., users can upload the public key of a public/private key pair and other information from a PGP certificate to a BSCW server. Users can also upload more than one PGP key. Once a public key has been uploaded, BSCW will create a container within the user X  X  home folder called Public Keys where all public keys of the user will be stored. Other users may then view and download such a public key and use it for encrypting a document intended for the respective user. Since PGP allows encryption for multiple recipients by adding multiple encrypted keys to a messa ge (see previous section), this feature could be used for encrypting messages for a group of people who collaborate by encrypting a message individually for each member of the group. However, this approach has a significant disadvantage: Duri ng collaboration processes the initial group is often extended by additional members. When messages are encrypted by using the public keys of the members who are part of a group at a particular point in time, members joining a group later could not read the messages that had been created until then. Since in the BSCW system the creation of a group is always associated with the creation of a folder  X  their joint workspace  X  we added public keys as attribut es to folders. Messages intended for the respective group having access to such a folder are encrypted with the public key of that folder. If later on a person becomes a new member of the group, he/she has only to be provided with the private key of the folder. This could be done, e.g., by the workspace administrator who sends the private key to the new member encrypted with the member X  X  public key. Figure 4 shows where public and private keys of users and folders are stored and how they are used, e.g., when user A distributes a document securely to users B, C, D, ... via a shared folder X on a BSCW server. The extensions described in the previous section are necessary requirements for supporting the indented security features at BSCW server level. However, we also wanted to provide support related to the encryption and decr yption of documents as well as to the key and certificate management at the BSCW client side to make the user interface as easy as possible. Furthermore, we wanted to provide a self-contai ned, easy to install software environment that delivered to the users all necessary security technology. For this purpose we enhanced an existing file uploader application called JUploader ( J because it is written in Java). Although Web browsers also allow file upload to Web servers, the JUploader application is preferred by many BSCW users because it provides a couple of upload facilities for enhanced performance, e.g., compression and multiple file upload. Using the JUploader as the implem entation basis, we added at the BSCW client site essentially three additional features:  X  Support for encrypting and digitally signing files before  X  Support for decrypting files and verifying digital signatures  X  called JDecrypt . This application starts automatically  X  after a  X  Support for key and certificate data management . This is All extensions related to the security technology were based on the Cryptix software package [3]. This software is also written in Java and could therefore easily be combined with the JUploader. The interaction of the components at the client site with each other and with a BSCW server is shown in Figure 5. For example, when a user initiates encryption with the JUploader, the JUploader accesses the PGP key rings of the user through the JKeyManager component, encryp ts the document with the respective components of the Cryptix software, and then uploads the encrypted file via SSL to a BSCW server. It should be noted that the users do not have to install these different components individually . The users download only one components (JUploader, JKe yManager, JDecr ypt and all other components required from the Cryptix software suite) are installed auto maticall y.
 The BSCW security extensions described above will be made publicly available with the release of BSCW Version 4.4 scheduled for September 2007, i.e ., at the time this paper was written these features have only been tested by a rather small number of users but have not yet been evaluated by a broad user community. Future research is planned on whether and how users accept and use these features in their BSCW applications. Furthermore, the security extens ions described above currently support only one type of artifact appearing in BSCW workspaces: those artifacts which are called documents in BSCW terminology. Note that a BSCW document is an ything that is uploaded to or downloaded from a BSCW server, i.e., a BSCW document is not necessarily a text document but may also by a picture, digital music, video, or a piece of software. However, users can create other types of artifacts in their workspaces such as discussion forums with notes, URL objects, calendars and entries therein, email messages, workflow objects, or polls. We plan to add encryption and digital signatures for at least some of these object types. For example, discussion forums are often used for cooperation processes in BSCW workspaces and encryption and digital signature s for notes in these discussion forums are required for appropriate security support. Another planned extension is a security enforcement mechanism: If should be possible to specify that only encrypted artifacts can be uploaded to a BSCW workspace/folder. If a user tries to upload an unencrypted artifact (recognizable by its MIME type), the BSCW server rejects the upload. The pure provision of security technology is usually not sufficient for achieving the intended security goals. The technology needs to be supported by appropriate organizational means. At present, many people are not sufficiently familiar with security technology. Therefore, introducing security technology currently in an organization requires training of the users, in particular, in the concepts underlying the technology (e.g.,  X  X ow does encryption/decryption with public/private key pairs work? What is a certificate? What is a digital signature? What level of security can be achieved with which means? X ). Furthermore, it seems necessary to provide user guidelines or recommendations how they should use the available security technology. At an organizational level it might ev en be necessary to develop security policies and respective enforcement procedures. Of course, for locally distributed, cross-organizational teams training measures and security policies represent a particular challenge. However, such teams have usually a rather limited number of members who should be able to agree on a common security policy rather easily. We be lieve that for a sensible usage of the security extensions for the BSCW system described above, it should be sufficient if one member, e.g., the coordinator, has some basic knowledge of security concepts and issues some security guidelines to the group (e.g.,  X  X ncrypt and sign all document. Always verify signatu res. Verify a person X  X  identity when first using his/her public key X ). Furthermore, we believe that the currently low familiarity with security technology will change in the near future since companies and organizations increasingly develop security policies, install the respective security infrastructure (keys and certificates, software for encryption/decryption and digital signatures), train their staff in the usage of the security infrastructure, and enforce the application of security policies. We have identified several security requirements that need to be satisfied by Web-based CSCW sy stems as a pre-requisite to enable trust building between users of such systems. Encrypting digital artifacts and attaching digital signatures to them can satisfy these requirements. Since we belie ve that these requirements will not be satisfied in the near future (in a user-friendly manner) on the operating system level, we argue that CSCW system should provide the respective technology to their users. We have described such a security frame work and a respective extension of the BSCW system ba sed on PGP. This requires local installation of security software at the users X  sites; but we have self-contained and guarantees interoperability within a group of BSCW users. Further security re lated extensions of the BSCW system are necessary and envisaged for the future. We think that the mere provision of encryption/decryption and digital signature technology is us ually not sufficient but requires organizational support such as trai ning in security concepts and the development of security policie s of an organization or a team. [1] Ahmed, T. and Tripathi, R.  X  X ecurity Policies in Distributed [2] Appelt, W.  X  X WW Based Collaboration with the BSCW [3] Cryptix Foundation Limited. Cryptix Project. 1995-2005. [4] Deutsch, M.,  X  X ooperation and Trust: Some Theoretical [5] Greif, I. and Sarin, S.  X  X  earning from Notes: Organizational [6] ITU Standard X.509 -The Directory: Public-key and [7] Jones, S. and Marsh, S.:  X  X uman-Computer-Human [8] Kling, R.  X  X ooperation, Coordination and Control in [9] Luhmann, N., Trust and Power , Wiley, 1979. [10] Orlikowski, W.J.  X  X ata Sharing in Group Work X , [11] Prinz, W. and Kolvenbach, S.  X  X upport for Ministerial [12] Rocco, E., Finholt, T. A., Hofer, C. E., Herbsleb, J. D. [13] Stevens, G. and Wulf, V.  X  X  New Dimension in Access [14] Stiemerling, O. and Pacu ll, F.  X  X ecure Component-Based [15] Van House, N. A., Butle r, M. H. and Schiff, L.R., [16] Zimmermann. P., The Official PGP User X  X  Guide , MIT 
