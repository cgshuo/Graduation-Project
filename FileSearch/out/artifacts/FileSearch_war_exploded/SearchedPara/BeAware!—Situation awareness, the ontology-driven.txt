 1. Introduction pro-active prevention of critical situations.

The steps to achieve situation awareness by humans have already been de achieve situation awareness. The actual implementation of this de the area of road traf fi c management (RTM) being our demonstration domain throughout the paper. surveillance camera, and due to that, a build-up of a traf to open the emergency lane within the tunnel, allowing motorists to bypass the accident and avoiding the traf emergency lane's capacity would not be able to dissolve the traf timely avoiding the emergence of a critical situation, i.e., a severe traf applies to large-scale control systems in general (cf. [3] ).
 been focused on concrete domains and is hardly generalizable independent ontology-based approaches are still limited regarding their reusability.
In this paper, we present our experience gained from the development of BeAware!, a framework for ontology-driven observed real-world objects. Moreover, the ontology ful fi integral part of BeAware! throughout its whole architecture provides the vocabulary for de fi ning the relevant types of situations, and, as well.
 ontology, in Section 2 and Section 3 . The main features of BeAware!, i.e., information integration, the de in Section 5 by means of a proof-of-concept prototype in the RTM domain, overview of further prospects in Section 8 . 2. BeAware! in a Nutshell the main processing chain (cf. Fig. 2 ).
 road maintenance system's ontology). To utilize notions from the domain experts and follow the approach of structure enrichment [5] , that is, we de de fi searches for interrelated objects that match given situation and relation type de determined situations, which pinpoint the relevant information, are resides on the common assumption that a domain expert is in a position to de de fi nitions and interpretations of relations between objects in a concrete domain (e. g.,
Note that by the knowledge transfer between the operator and the domain expert, this con continuing optimization.
 sections beginning with the SAW core ontology. 3. The SAW core ontology derived from object attributes during situation assessment, but assumed to be already asserted in the ontology. information updates (e. g., the creation of an object).
 well as road weather-related concepts (all are direct or indirect subclasses of the base concept Object). 4. From information integration to situation assessment
In this section, we discuss the main features of BeAware! and the de fi nition of situation types as the con fi guration for situation assessment. 4.1. Information integration core ontology by individuals not yet existing in BeAware!'s A-box new traf fi c jam has to be transfered into BeAware's integrated A-box).
 mapsToClass for class-to-class mappings, or the alignment construct mapsToCustomAttribute, which de
SAW core ontology). For each construct in the domain ontology, a domain expert de mapping constructs from the vocabulary. Thereby integrated information sources bene situation assessment facilities described in the following section. 4.2. Situation type de fi nition
In this section, we outline our approach to provide a domain expert with a tool for de notion of primitive relations. 4.2.1. Primitive relations identi fi cation of the types of relations that should be derived as one of the key challenges within the deterministic view of relations, may be levered.

Insearchforrelevantfamiliesofprimitiverelations  X  i.e., relationsassociatingobjectsaccording tothesameaspect de fi nition of SAW by Endsley [18] , examining objects  X  [ ... size. The chosen families originate from well-known calculi in the dependent relations are then de fi ned using primitive relations (e. g., obstructs from RTM could be de SAW.
 orientation [20] . An example for such a relation is road works overlaps and in front of traf a traf fi c jam start before the traf fi c jam occurs, but when they end the traf grained family are Freksa's relations between semi-intervals (e. g. road works older traf relations are road works close tunnel (indicates a spatial distance), or traf
Next, we have a look at the de fi nition of situation types based on the primitive relations introduced above. 4.2.2. Rule-based situation types
In accordance with our previous work [24] , we use a simple, rule-based formalism to de core ontology. We elaborate the formalism using the traf fi simpli fi ed syntax based on the Semantic Web Rule Language (SWRL variable being a member of the class C, we write C(?o); for two object variables being in concrete relationship de relation type R, we write R(?o1, ?o2). Thus, the above situation type is de
S 0 : rtm:Traf fi cJam(?o1). rtm:Fog(?o2). rcc-5:PO(?o1,?o2). spatDistBoundary:VeryClose(?o1,?o2).

The following section discusses how such situation types de run time. 4.3. Situation assessment ontology. We fi nish this section with an overview of the assessment of evolving and just partly matching situations. 4.3.1. The complexity of situation assessment
The assessment of situations can be seen as a satis fi ability problem, i.e., checking which object con de relation per relation type for each pair of objects implying a constant runtime and space complexity of O ( o relation types are necessary, we reduce o as well as r by being more selective ( o speci fi c interpretation of, for example  X  partly overlapping situation, kept in the ontological knowledge base. 4.3.2. Reasoning shortcuts objects, we can spare the assessment of all relations that are de that a derived relation adhering to some relation type is, by de
PO inferences with respect to situation types such as satis fi
The key to checking the satis fi ability of a situation type is to examine its contributing relation types. The satis different families, the subsumption relationships in-between. A situation type is satis are by de fi nition disjoint. Otherwise, the corresponding situation type would be unsatis situation type is
S a : rtm:Accident(?o1). rtm:Fog(?o2). rcc-8:EC(?o1,?o2). spatDistBoundary:Far(?o1,?o2). Otherwise, the situation type would become simpler with respect to the contributing number of relation types. composition tables , which are closely related to transitive relations, is well established in the betweentheobjects ?o1and?o3canbededuced.Theperformanceimplicationsofapplyingtheseshortcutsarediscussedin Section 5.3 . 4.3.3. Of situations and their neighbors
Situation assessment, as described above, still faces two inherent challenges: which, generalized to conceptual neighborhoods of situations, are the basis for addressing both challenges. relations are, according to Freksa [21] , conceptual neighbors, exemplary CNG for the RCC-5 relation family.
 traversing over PO (partly overlapping). We further de fi exemplary situation type S 0 ,  X  Fog in the border area of a traf
S a : rtm:Traf fi cJam(?o1). rtm:Fog(?o2). rcc-5:DR(?o1,?o2). is,basedontheCNGof RCC-5, thenat leasttwotransitionsawayfrombeinganinstanceof S de fi nition.
 core ontology. It facilitates declarative information integration and enables the domain expert to de based manner, thereby sticking to his or her familiar domain vocabulary together with domain-independent application of these approaches in the context of a prototypical implementation in the RTM domain. 5. Prototypical implementation in the RTM domain of BeAware! from different aspects. 5.1. Software infrastructure
BeAware! is largely based on Java and the Jena Semantic Web Framework supportive developer community, and the clean API. For OWL reasoning within Jena, we use the Pellet OWL Reasoner side, AllegroGraph provides a Prolog and Common Lisp environment which both are employed for developing the situation assessment algorithms of BeAware!. 5.2. BeAware! in a real-world setting
The test bed for the prototypical implementation is the real-world traf
AustrianhighwaysagencyASFINAG 5 ,which currentlyprovides traf 5.2.1. Quantity structure
The majority, that is, about 80%, of the available traf fi restrictions. The remaining traf fi c information usually deal with traf
Currently, one has to anticipate a constant load of 250 traf information are incorporated. Then, at peak times, one may anticipate a maximum of 350 traf updates per minute. Naturally, most of the updates result from changing traf 5.2.2. Situation types
In collaboration with the Austrian highways agency, we have de important (e. g., an accident causes a traf fi c jam). 5.3. Evaluation studies of complex traf fi c situations, and performance test cases with real-world traf 5.3.1. Manual test cases and to let traf fi c engineers experiment with different situation type con existing situation type de fi nitions to highlight the need for adjustment. 5.3.2. Case studies how to estimate the probability of such an evolution is an important and still open issue. 5.3.3. Performance tests rather high. The utilization of inverseness has been a mixed blessing, but was still more bene composition tables. Both shortcuts suffer from the problem that the con fi guration indicating that an adaptive selection of shortcuts based on the con subsumption lattices, we could process a constant number of 500 objects without risking an over
Although this result demonstrates the applicability of BeAware! in the RTM domain, it may not be suf
Thus, further work focuses on leveraging the scalability of the situation assessment algorithms. 5.3.4. Investigating reusability
The measures taken for evaluating BeAware! show that it is indeed applicable to the RTM domain and that the introduced facilities whose utilization involves, in the end, the implementation of clear-cut as well as such as the interpretation of primitive relations in a concrete domain and the declarative speci valuable advantage from our point of view, however, is the fl exibility is not just valuable during the development of a system, but also simpli human operators about the performance of the system may be swiftly incorporated which an application developer may select the ones appropriate for her application. 6. Lessons learned crucial for the design of ontology-driven information systems in general. 6.1. Missing support for temporal information
SAWA have also outlined their problems with temporal information [28] updates to an ontological knowledge base and the performance problems involved when querying temporalized information. of the Semantic Web stack such as proposed by Gutierrez et al. [29] . Thereby, ef think, should be the next step after providing a common set of inferences for the temporal dimension. 6.2. Frequent updates to ontology A-boxes affected by frequent and asynchronous updates. We found that this update tracking can only be done ef not affected by a transaction may easily be determined by removing the set of changed triples from the current A-box. 6.3. Integrating Jena, Pellet, and AllegroGraph
RDFS inferences provided by AllegroGraph are the classi fi overall scalability, since communication between the two reasoning components is minimized. 7. Related work operations, in which situation awareness currently operates on the level of information fusion (e. g., [30 fi information sources and rather passive SAW facilities ranging from a GIS-enabled ontology browser over information semantic queries, but situation assessment is, in contrast to BeAware!, not supported. In [34] ,Boury utilizing domain-independent ontologies for knowledge reuse. These two propositions re working with numerical information, also assume the presence of symbolic information most important challenges of situation awareness, which again may be solved with ontologies.
Another very active research community works in the domain of pervasive computing (see, e. g., [38] for a survey of con conceptual model for SAW. In summary, current approaches in pervasive computing favor syntactic situation assessment analogously to the military domain, whereby, we also notice a strong tendency towards ontologies. focused on primitive relations originating from well-de fi semantically clear, and enable the out-of-the-box situation assessment facilities stated above. 8. Outlook relation types with respect to different spatial frameworks. Which combination of domain-speci substantially leverage their reusability.
 positively in fl uence the evolution of situations.
 this information.
 Acknowledgement grant FIT-IT Semantic Systems no. 819577.

References
