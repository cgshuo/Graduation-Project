 For range query in the spatial databases, users are looking for data objects whose geometries lie inside or overlap a query window. In many applications, however, users are more interested in summarized information instead of ob-jects X  individual properties . Especially with the availability of a huge collection of on-line spatial data [1, 2, 3] (e.g. large digital libraries/archives), it becomes extremely important to support interactive queries by query preview [4, 1]. These applications require systems to provide a fast summarized spatial characteristics information. Summarizing spatial datasets is also a key to spatial query process optimization.
 ing topological relations between rectangular objects and window query. Several techniques have been proposed for estimating the selectivity [5, 6]. Technique based on histogram to approximate data distributions is widely used by cur-rent database systems [7]. Histogram-based techniques can be classified into two categories: 1) data partition techniques and 2) cell density techniques [8]. The Min-skew algorithm [9] and the SQ-histogram technique [10] belong to the first category. They group  X  X imilar X  objects together into one bucket for estimating the number of disjoint and non-disjoint objects with respect to window query. evenly into a number of disjoint cells, and record object density information in each cell. Cumulative density based approach [11] and Euler histogram [4] can provide the exact solutions against the aligned window query (to be defined in Section 2) for non-disjoint and disjoint topological relations only. Euler-Approx [3] and Multiscale Histogram [8] substantially extended the Euler histogram tech-niques for summarizing the 4 important binary topological relations:  X  contains  X ,  X  contained  X ,  X  overlap  X , and  X  disjoint  X  ( to be defined in Section 2) against the aligned window query.
 Specifically, we developed a novel hybrid histogram method that combines Min-skew technique with Euler histogram approach. By combining these two tech-niques together, this hybrid histogram may lead to more accurate solution for aligned window query. We evaluate our new techniques by both synthetic and real world datasets. Our experiment results demonstrated that the hybrid his-togram may improve the accuracy of the existing techniques by about one order of magnitude while retaining the cost efficiency.
 inaries and related work. Section 3 presents our hybrid histogram construction algorithm, query algorithm and analysis of this structure. Section 4 evaluates the proposed methods through extensive experiments with synthetic and real datasets, and Section 5 concludes the paper with direction for future work. In this section, we give a brief overview of Min-skew algorithm [9], Euler his-togram [4], Euler-Approx algorithm [3] and Multiscale Histogram [8]. These techniques are closely related to our work in this paper. First we introduce the middle-resolution topological relations.
 the comparison of P  X  X  interior , boundary , exterior with Q  X  X  interior, boundary, and exterior [12]. It can be classified into 8 high-resolution topological relations according to the 9-intersection model [12], and can be also classified into the middle-resolution topological relations by removing the intersections involving the object boundaries [13, 3] (Figure 1).
 part of the cells. 2.1 Min-Skew Algorithm Acharya, Poosala, and Ramaswamy proposed a partitioning scheme to build histograms for spatial data called Min-skew partition [9]. It is regarded as the winner among several other histogram techniques. The technique uses a uniform grid that covers the whole space and their spatial densities as input. Initially one bucket represents the whole space. The algorithm iteratively splits a bucket into two until the histogram has the required number of buckets B . The algorithm tries to minimize the spatial-skew, defined as the variance of the number of objects in the grid cells constituting the bucket, at each step. 2.2 Euler Histogram To construct an Euler histogram [4], the whole space is first divided evenly into n respectively. So the total space required is (2 n 1  X  1)  X  (2 n 2  X  1). For every object insertion, an update is needed for all the nodes, edges and cells that the object intersects: the value of relevant cell and node is increased by 1 and the value of relevant edge is decreased by 1. Figure 2(a) gives an example of an Euler histogram for a dataset with only one object.
 Given Q , we can get P i by summing up all the bucket values inside Q . By Euler formula, we have: relations N nds and N ds . In Figure 2(b) for example, given Q (shadow area), N 4 objects (cs, cd, it, cr) non-disjoint with Q and 1 object (ds) disjoints with Q . 2.3 Euler-Approx Algorithm Sun, Agrawal and El Abbadi [3] proposed to use the histogram information out-side query window, P e , to solve middle-resolution relations: contains, contained, overlap and disjoint. The equal relation is merged into contains relation. It is shown the overlap relation has to be separated into two classes: intersect re-lation and crossover relation. This is because an object with intersect relation contributes 1 to the outside of query and an object with crossover relation con-tributes 2 to the outside of query (see Figure 2(b) object it and cr for example). So we have to deal with crossover and intersect relation respectively, and then sum them up to get overlap relation. In the rest of paper, the 5 relations rep-resent contains, contained, intersect, crossover and disjoint relations. Again, by Euler formula, we have: and it . We can also have P e = 4. This 4 comes from the object ds , it , and cr which contributes 2 to P e .
 above 5 relations. To solve these 5 relations with only 3 exact equations, Sun et. al proposed three query algorithms: Simple-Euler, Euler-Approximate and Multi-resolution Euler Approximate. All algorithms are based on assumptions N cd = 0 and/or N cr = 0 (see [3] for details). 2.4 Multiscale Histogram Lin et. al proposed a multiscale framework [8] which can provide exact solution for many real applications. The framework contains two parts: exact algorithm ( MESA ) and approximate algorithm ( MAPA ). In MESA , it is proved that if all the objects involved in one Euler histogram have at most four adjacent scales ( w, h ) , ( w +1 ,h ) , ( w, h +1) , ( w +1 ,h + 1), the exact results can be obtained. So objects with adjacent scales are grouped together and one Euler histogram is constructed for each group. When storage space is limited to k , MAPA will build k  X  1 exact histograms and 1 approximate histogram.
 is O ( n 1  X  n 2 ). Both Euler-Approx and Multiscale Histogram run in constant time with the prefix-sum technique [14]. In this section, we introduce the hybrid histogram technique. The histogram captures information not only about the location of the data objects, but also about their sizes. These information are essential to the accuracy of 5 relations estimation. We call this hybrid histogram EM histogram . It takes advantages both from E uler histogram and M in-skew partition to achieve high accuracy as well as efficiency. We first identify our motivation.
 pects, they also have their own limited applicability due to this unique problem. Min-skew provides a good location estimation. But to approximate the objects within a bucket, all objects are presented by an average size object. Obviously this solution could not be applied for our problem because it is very unlikely all the objects in one bucket only have one relation with respect to a given query. Multiscale Histogram could provide a very accurate estimation if most of ob-jects are involved in the exact histograms. But usually the histogram space is limited. If given 1 histogram space, no accurate result can be obtained for any objects. So estimation accuracy for using only 1 histogram is a critical compo-nent to solve the 5 relations problem. Motivated by these, next we present our EM histogram. 3.1 Histogram Construction EM histogram includes two parts: Min-skew-like partition and Euler histogram. The construction method for Euler histogram is exactly the same as that in Section 2.2. For Min-skew-like partition, given a regular n 1  X  n 2 cells and object scale range, we partition the objects based on the location of their bottom-left corners as well as their scale information. So instead of only minimizing the location variance sum in Min-skew partition, Min-skew-like partition aims at minimizing the location as well as scale variance sum of all the buckets. boundaries. In each bucket, the distribution of object location and scale are almost uniform. Then the location uniform model is applied locally in each bucket. The scale uniform model could not be applied directly. But with this uniform model, the accuracy of estimation can be improved a lot in each bucket. Each bucket b records the following information:  X  the spatial extent b l .MBR [( minX, maxX ), ( minY, maxY )] (1  X  l  X  B )  X  the scale matrix b l .Matrix of the objects involved in the bucket The overall location distribution of this dataset is uniform. So by the Min-skew-like partition, 2 buckets are obtained. In bucket 1 (Figure 3(b)), b 1 .MBR is [(1, 4), (1, 4)], b 1 .Matrix is [(1, 1) 32]. In bucket 2 (Figure 3(c)), b 2 .MBR is [(1, 4), (1, 4)], b 2 .Matrix is [(2, 2) 3, (4, 4) 1]. 3.2 Querying EM Histogram By Section 2.2, we have equation (3), (4) and (5) based on the Euler histogram. Next we will use the Min-skew-like partition to get 2 more equations to solve 5 re-relations based on the bucket scale matrix information. The basic idea is by the scales of objects and a given query, the objects in each bucket can be separated into 5 groups. In each group, a mean object will be calculated to represent the objects in that group. Then probabilistic method is applied to estimating the 5 relations. Details can be explained in 3 steps: Step 1. For each bucket, Q divides the objects into five groups according to Step 2. Calculate a mean object M g Step 3. Estimate the number of objects with respect to the 5 relations using each bucket, 2 more equations can be obtained: can be solved. 3.3 EM Maintenance If an object is updated, EM histogram may be also updated. First, for an in-sertion or deletion, the value of relevant node, cell and edge should be updated. Because Euler histogram is constructed in a cumulative fashion, an efficient up-date technique,  X  tree [15], can be applied. Second, based on the object X  X  spatial location and scale, the scale matrix information in the corresponding bucket will also be updated. 3.4 EM Performance Analysis The storage space required by Euler histogram is (2 n 1  X  1)(2 n 2  X  1). And the space for buckets is Bn 1 n 2 in the worst case ( B is the number of buckets). The total actual storage space required by EM histogram can be calculated as (2 n 1  X  1)(2 n 2  X  1)+ Bn 1 n 2 . But in practice, by our extensive experiments, it takes much smaller space than that in theory. This would be shown in our experiment part. applying prefix-sum techniques, querying each bucket runs in constant time. The time for querying B buckets is O ( B ). And we know an Euler histogram can be queried in constant time, so the total time for querying EM histogram is O ( B ). This section experimentally evaluates the proposed methods. All the experiments were performed on Pentinum IV 1.80GHz CPU with 512 Mbytes memory.
 togram and Min-skew-like techniques, EM histogram provides an accurate and efficient method for spatial selectivity estimation for middle-resolution topologi-cal relations, especially for non-uniform distribution dataset. In the first part of experiments, we will show the importance that we integrate Min-skew-like parti-tion technique into our EM histogram. In the second part of experiment, we will show the importance of Euler histogram. And cost comparison will be examined in the third part. We evaluate the accuracy of the following techniques:  X  EM Histogram  X  Euler-Approx [3]  X  Multiscale Histogram [8]  X  Pure-Minskew Method: it is used to show the advantages of Euler histogram. Datasets. In our experiment, both real-world and synthetic datasets are used. To do a fair comparison with Euler-Approx and Multiscale histogram regarding accuracy, we adopt the 360  X  180 resolution to evaluate the accuracy of our algorithms, as this resolution was used in [3] and [8] to provide the experiment results. The 360  X  180 grid is a simulation of the earth resolution by the longitude and latitude. Below are the datasets used.  X  X a road consists of the 2 , 851 , 627 California road segments obtained from  X  Zipf is a synthetic dataset with one million square objects. Both the side Query Sets. We adopt the same query setting in [8]. This is because this setting simulates various user query patterns. Query windows are divided into 2 classes, small and non-small. A query window in small class has a scale such that the width and height are both smaller than 5, while a query window in non-small class has either height between 6 and 20 or width between 6 to 20. We randomly generate 3 different sets of windows, T 1 , T 2 , and T 3 , each of which has 100 , 000 query windows.
 the query windows are in the small class, while in T 3 , 80% of the query windows are in the small class.
 Error Metrics. We adopt average relative error for N cs , N cd and N ov where N 4.1 The Advantages of Min-Skew-Like Partition To prove the advantages of Min-skew-like partition, in this part, we evaluate the performance of EM histogram in comparison with Euler-Approx and Multiscale Histogram.
 Both algorithms can calculate the N ds accurately. Figure 5 shows the experiment results for Ca road dataset. Because the location distribution is not quite skew, the performance with different number of buckets of EM is quite similar. By Figure 5, we can see even using 1 bucket, EM histogram has a better result than that of Euler-Approx using 5 histograms in most cases.
 ent query set. 100 buckets are allocated to EM histogram. Again, even using 1 histogram, the EM still outperforms the Euler-Approx with 5 histograms. The performance difference between 2 algorithms is quite large compared with that of Ca road dataset. This is because when the dataset follows non-uniform dis-tribution, the assumptions made by Euler-Approx would be fail. On the other hand, EM histogram uses only a few buckets to capture the skew data distri-bution and local uniformity assumption is applied only in each bucket. Another problem of Euler-Approx shown in [8] is the accuracy of N ov is fixed regardless of the number of histograms used (see Figure 5(a), 6(a)).
 number of Euler histograms) and B = 1 (the number of buckets). On the other hand, we can also treat EM histogram as a solution for the last histogram in Multiscale histogram techniques. So for Ca road dataset, the performance of EM (Figure 5) is also the performance of Multiscale histogram. Figure 7 for B =1is the experiment result of Multiscale histogram for dataset Zipf. We can see EM always outperforms Multiscale histogram. tures of data objects accurately which are the critical information for the esti-mation accuracy. 4.2 The Advantages of Euler Histogram To prove the advantages of Euler histogram, in this part, we evaluate the per-formance of EM histogram in comparison with Pure-Minskew method in which no Euler information is provided.
 number of buckets The results for T 1 and T 2 query set are similar to T 3 query set. With the increase of number of buckets, the N cs and N cd calculated by EM histogram are improved quickly. The N ov with low relative error is not changed too much. We can always get the exact results for N ds from EM histogram by using equation (3) and (5).
 of number of buckets. But it is interesting to note the performance of N cd and N ov are decreased. Another major concern about Pure-Minskew is, even the performance could be improved with the increase of number of buckets, a big number of buckets means more buckets have to be accessed in the on-line phase, which slows down the query performance.
 of buckets to accurately estimate the underlying data distribution. It is espe-cially noteworthy for the on-line case. Pure-Minskew could not be a solution for selectivity estimation of middle-resolution relations. 4.3 Cost Evaluation Storage Space. In theory, the storage space required is (2 n 1  X  1)(2 n 2  X  1) + Bn 1 n 2 . By our experiment, the space required for every 100 buckets is about 2.5KB (0 . 18% of one Euler histogram space) both for Ca road dataset and Zipf dataset. So the storage space required for EM histogram is slight higher than those of the other 2 algorithms when using 1 Euler histogram. But from the experiments, we can see this is worthwile especially for non-uniform data. And more, 1 EM histogram even outperforms 5 Euler-Approx histogram in most cases but with much less space.
 Histogram Construction Time. We evaluate the time to construct the EM histogram. The time costs for constructing 1 Euler histogram are similar to the Euler-Approx and Multiscale algorithms, about 40 to 41 seconds. For EM histogram, extra time is required to build buckets. With the resolution 360  X  180 spatial resolution, the time cost is about 43 seconds to build 100 buckets. The histogram construction time will be decreased with the decrease of spatial resolution.
 Query Time. As analyzed in Section 3.4, the time for querying EM histogram is O ( B )( B is the number of buckets), which is irrelevant to the size of the Euler histogram and the underlying dataset. By our experiment, for every 10,000 window queries, it takes about 1 seconds for querying EM histogram with 100 buckets. In this paper, we investigate the problem of summarizing the spatial middle-resolution topological relations: contains, contained, overlap and disjoint. Spatial datasets could be various both in location distribution and scale distribution. A novel hybrid histogram technique, EM histogram, is presented as an accurate and effective tool to solve the problem. EM histogram use the concept of Min-skew partition in conjunction with Euler histogram approach. Our experiment results demonstrated that our approach may greatly improve the accuracy of existing techniques while retaining the costs efficiency.
 window query and explore other related research topics.

