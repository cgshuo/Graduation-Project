 When users search online for a business, the search engine may present them with a list of related business recommen-dations. We address the problem of constructing a useful and diverse list of such recommendations that would in-clude an optimal combination of substitutes and comple-ments. Substitutes are similar potential alternatives to the searched business, whereas complements are local businesses that can offer a more comprehensive and better rounded ex-perience for a user visiting the searched locality. In our problem setting, each business belongs to a category in an ontology of business categories . Two businesses are defined as substitutes of one another if they belong to the same cat-egory, and as complements if they are otherwise relevant to each other.

We empirically demonstrate that the related business rec-ommendation lists generated by Google X  X  search engine are too homogeneous, and overemphasize substitutes. We then use various data sources such as crowdsourcing, mobile maps directions queries, and the existing Google X  X  related business graph to mine association rules to determine to which ex-tent do categories complement each other, and establish rel-evance between businesses, using both category-level and in-dividual business-level information. We provide an algorith-mic approach that incorporates these signals to produce a list of recommended businesses that balances pairwise busi-ness relevance with overall diversity of the list. Finally, we use human raters to evaluate our system, and show that it significantly improves on the current Google system in use-fulness of the generated recommendation lists.
Related business recommendations help users discover busi-nesses or establishments that would be useful when search-ing for a specific source business. Search engines today an- X  This work was mostly done while at Google New York swer this need by providing recommendations similar to the searched business, relying mostly on search-based associa-tion rules of the form  X  X sers who search for business x also search for business y  X . Such recommendations are often sub-stitutes to the searched business -establishments that the user could visit instead of the searched business.

Yet, such substitutes may not be the only relevant rec-ommendations for a source business. In some cases a user could benefit more from recommended complements  X  lo-cal businesses that one could visit in conjunction to the source business and that could provide the user with a better rounded experience at the searched locality. For example, a user searching for a specific hotel might benefit more from recommendations for good restaurants and attractions near that hotel than from only recommendations for other hotels. Some major commercial recommender systems use both sub-stitute and complement notions of relevance in making prod-uct recommendations [7, 10]. We aim to leverage both no-tions of relevance in generating a list of recommended local businesses given a source business.

The usefulness of recommended complements for a source business x can depend on many factors. Later in the paper we show that the type, or category, of x affects heavily on the usefulness of complementary recommendations for it, as well as on the categories of other businesses that could serve as useful complements.

Another important factor is the user X  X  intent -whether she is considering x among other alternatives, or she is planning a visit to x or even already at the locality of x . User intent was not modeled in this paper, and is a topic for future work. However, our approach of combining complements in the related business recommendations, rather than only similar substitutes, is geared towards users who plan a visit to the source business. Thus, lessons from the approach taken in this paper could be more relevant in settings where such user intent is more likely (e.g. mobile searches where the user is near the searched locality, or on the way there).
Our problem setting is that of a non-personalized recom-mender system, and is demonstrated in Figure 1. When an anonymous user searches for a specific business name, in ad-dition to search results for that business, the system provides a list of k related business recommendations. We aim to im-prove user satisfaction from the generated recommendation list by constructing a relevant and diverse list of substitute and complement recommendations using both category and business-specific information.
In our problem setting, there exists an ontology of busi-ness categories. Each business is a member of some subset of categories in this ontology. In our approach, the rele-vance of a potential related business recommendation y to the source business x can be established by looking at: (i) the relevance of the set of categories to which y belongs to the set of categories to which x belongs, and (ii) the rele-vance of y to x given a recommendation category. If the recommendation category is common to both x and y , then y is a substitute recommendation for x . Otherwise, it is a complement recommendation.

One simple approach is to recommend the k businesses that are most relevant to the searched business. Yet, such an approach would typically yield a very homogeneous recom-mended business list, with the majority of businesses belong-ing to the category c most relevant to the searched business -i.e. a list of only complements, or more commonly -only substitutes as the source business itself often belongs to c . While each recommended business is highly relevant in these cases, the list as a whole can be redundant. Thus, it is desir-able to recommend relevant businesses of varying types and include both substitutes and various types of complements. We use the ontology defined over the business categories to define and promote intra-list diversity, by penalizing recom-mendations of multiple businesses of the same category. We explore and compare several methods for such penalization.
Unfortunately, as described later in section 4, such pe-nalization in settings where every business can belong to multiple categories makes the problem of finding an optimal recommendation list NP-hard. To make the problem solv-able in polynomial time, we associate every business with a single category of interest.

We use crowdsourcing and association rules mined from category-aggregated mobile maps directions queries to es-tablish category-to-category relevance scores. To determine relevance between businesses given category information, we use current Google X  X  business recommendation scores as a baseline. We then adjust these scores using the directions queries data. Using these signals, we establish business-to-business relevance scores, and we produce top-k recommen-dation lists that optimize for these scores along with cate-gory redundancy penalties.

The main contributions of our paper are: (1) An empirical demonstration that users find complemen-tary related business recommendations useful, whereas the current Google system is strongly focused on making recom-mendations similar to the searched business. This evidence is shown clearly in Figure 2 and discussed in section 3. (2) An algorithmic approach for constructing a useful, and often diverse, related business recommendation list in a set-ting where a business categorization exists. The constructed list consists of a useful mixture of substitute and complement recommendations. This approach is presented in section 4. (3) Establishment of relevance scores between businesses that take into account the business category ontology. We used multiple data sources to mine and construct the rele-vance scores: crowdsourcing, mobile maps directions queries, and the current Google related business graph. The con-struction of relevance scores is explained in section 5. (4) Large-scale human-based empirical evaluation of several variations of our system. We demonstrate that our system achieves a significant improvement over the current Google system in recommendation list usefulness. The evaluation Figure 1: The related business recommendations (circled in red) for the source business  X  X otel 373 Fifth Avenue X  -a boutique hotel in Midtown East, Manhattan. All of the recommendations by the existing system are similar hotels, that serve as substitutes for the source business. process and the results and insights that arise from it are discussed in section 6.
Item-to-item relevance notions of substitutes and comple-ments have been used by some recommender systems [7, 10, 21]. In these personalized product recommender systems, substitute and complement relations were mined from user browsing and purchasing data. In such e-commerce product recommender systems, different notions of relevance can be used for different stages of the user experience -i.e. recom-mending substitutes before the user makes a purchase and complements after the purchase. Related business recom-mendations differ in the sense that its harder for the system to acquire information about different stages in the user be-havior and clear signals of when to recommend substitutes and when to recommend complements. Thus, we took the approach of constructing a recommendation list that mixes the two.

Business categorization in our system serves a double pur-pose  X  on one hand, we use category information as a factor in determining business-to-business relevance by measuring relevance of category sets to each other, and on the other hand, we use categories to limit redundancy in the produced recommendation list. Thus, in our use of category informa-tion to construct a mix of substitutes and complements to the source business, we use implicit diversification of the recommendation list as a mean to reduce redundancy and increase user satisfaction. The settings of our problem are those of a non-personalized recommender system, and share traits of both traditional recommender system settings and web search settings. On one hand, the system discovers new useful recommendations that were not searched by the user, and on the other hand, the system is non-personalized and provides its suggestions in response to a web search query for a specific business.

Significant work has been done on result diversification in both recommender systems [18, 14, 20, 22, 13] as well as web search [6, 8, 11, 12, 19, 5]. There are two main notions of such diversification in literature [4]  X  one is re-solving ambiguity and reaching high or sufficient coverage of several topics [2, 12, 14, 19, 5], and the other is avoiding redundancy [22, 3, 20]. A recent work, [13], is also aiming to address both notions.

Multiple approaches have been suggested in coping with ambiguous queries or covering multiple meanings or subtopics. One such approach is the IA-Select [2], where the settings include a taxonomy of the results and a distribution of user intents over this taxonomy given an ambiguous query. IA-Select then aims to maximize the probability that at least one returned result is relevant to the user. Another well-known approach is xQuAD [12], where ranking results for an ambiguous query is done by estimating how well does a result cover an uncovered aspect of the answer. In our problem settings however, coverage is not an objective. We do not aim to cover any number of categories, and we do not try to guarantee at least one useful result, but to maxi-mize user satisfaction from the entire recommendation list, hoping that the user would find as many as possible of the provided recommendations useful. In [5], the goal is to re-turn a result list with per-topic coverage that is proportional to that topic X  X  popularity. While the number of recommen-dations from a specific category is often higher for categories that are highly relevant to the source business, this is not an objective of our system. Categories assist in determin-ing relevance of businesses to the source business, but are not used for impose any constraints on the composition or coverage of the generated recommendation list.

Our system does aim to reduce redundancy of multiple businesses from the same category and implicitly increase intra-list diversity. In [22], intra-list diversification was pur-sued as a mean for user satisfaction from book recommenda-tions in a personalized collaborative-filtering system. Sim-ilarity and diversity were measured using a taxonomy of books, and the intra-list similarity between items was min-imized using a greedy algorithm. The output of the system was combined with a non-diversified list using a diversifica-tion factor. Our approach differs significantly in the sense that we do not scale a  X  X iversified list X  with an  X  X ccurate list X , but introduce diversification natively into our opti-mization objective by enforcing a diminishing returns effect of multiple recommendations from the same category. Ex-plicitly penalizing redundancy was done in [3]. Instead of ranking results by similarity to the query, the MMR (Maxi-mal Marginal Relevance) method uses a linear combination of that similarity with a penalty for similarity to previous results. However, MMR does not take into account a dimin-ishing returns effect and does not increase penalty severity with increased redundancy.

Another aspect touched by our system is that of locality aware recommendations. This is done implicitly as scores of local businesses tend to be higher in the signals we use to establish business-to-business relevance scores. While loca-tion is only used implicitly in our system, location-awareness plays a more explicit part in several locality-aware recom-mender systems [9, 17]. Location is actively used in ranking results for hyper-local web queries [15], and indeed used in determining the relevance between businesses in Google re-lated business graph (see next section).
Google X  X  current source of related business recommenda-tions is the Related Business Graph (RBG) . The RBG is a directed graph where a business x is linked to several (typi-cally hundreds) related businesses and the weight of an edge ( x,y ) expresses the relevance of y to x . There are multi-ple signals that contribute to such relevance scores, and we cannot disclose them in this paper. However, search-based association rules (i.e.  X  X sers who search x also search for y  X ) are a major component in the RBG X  X  edge weights. Addi-tional important signals include the geographical proximity of y to x (closer businesses are preferred), as well as various measures of similarity between x and y . The current RBG-based system produces related business recommendations for a searched business x by returning the top k neighbors of x in the RBG by weight. The RBG-based system is the main system used by Google in production, and for most source business queries 1 , the related business recommenda-tion list displayed to the user is produced by that system. Such recommendations tend to be similar to the searched business and to one another, and mostly constitute of sub-stitutes to the source business.

Yet, similar businesses are not always what users want to see as recommendations when they search for a business. To demonstrate this we turned to crowdsourcing and conducted a survey, asking users what information they would find use-ful when searching for a business from a specific category of interest. The survey was conducted using Google Consumer Surveys 2 , and includes 372 participants (web users accessing premium content online).

In the survey, and throughout this paper, we limited our-selves to the geographical scope of New York City (NYC). This controls for geographic settings and cultures, as user preferences and business relevance can vary significantly be-tween different regions, between urban and rural environ-ments, and so on. Thus, all of our businesses of interest are in NYC, and our survey takers are either NYC residents or frequent visitors to NYC (this was used as a filtering ques-tion to be allowed to participate in the survey). We also limited the scope of our problem in terms of categories of interest. As we aim to construct a well rounded experience for a user visiting a source business, we limited ourselves to categories of businesses that people visit in person and that answer some recreational need. The list of categories we consider is shown in Table 1.

We asked the survey participants to tell us what informa-tion they find useful when they search for a specific business of some category c (in addition to information about the searched business). The answer options included: 1. Information about other nearby businesses from the same category 2. Information about nearby businesses from category c for three candidate categories c 0 related to c 3.  X  X one of the above X  The survey results are depicted in Figure 2a. The survey clearly showed that for any source category c , additional in-formation about nearby businesses of some category c 0 6 = c was found useful by a significant fraction of the survey tak-ers. Furthermore, c 0 6 = c was often the most useful category for additional information.
For a small number of high-profile establishments (e.g. major tourist attractions like the Empire State Build-ing), Google uses higher-precision data from its Knowledge graph to provide recommendations in its production sys-tem. Nethertheless, such establishments also appear like any other establishment in the RBG. http://www.google.com/insights/consumersurveys/home. Indoor Lodging Bars Movie Theaters Liquor Stores Performing Arts Venues Nightclubs Sporting Goods Stores Gyms Beauty Salons Restaurants and Cafes Sports Complexes (e.g. Stadiums) Tourist Attractions Grocery Stores Gift Shops Table 1: Categories of interest . We only look at busi-nesses in NYC that belong to one of the above categories as potential related business recommendations or as source businesses. Grocery Stores and Gift Shops are viewed only as potential recommendations, and we are not interested in them as source businesses.

We then examine how these user preferences match the current recommendations generated using Google X  X  RBG. For every source category c , we examine the businesses x that belong to that category. We compare the fraction of x  X  X  top 20 RBG neighbors of category c to the fraction of neigh-bors in the top complementary category c 0 6 = c of c according to the survey, and we aggregate these statistics over all busi-nesses in category c . As portrayed by Figure 2b, in the vast majority of cases, the top RBG neighbors are businesses of the same category as the source business x , which does not match user preferences from the survey. There are only two cases where the complementary category c 0 is significantly popular among RBG neighbors of businesses of category c : ( c,c 0 ) = ( Bar,Restaurant ) and ( c,c 0 ) = ( Nightclub,Bar ). In both of these cases, the categories themselves are close to each other, and many businesses can be classified as both.
The above experiment demonstrates that Google X  X  cur-rent related business recommendation system produces rec-ommendations which are similar substitutes to the source business. However, users often prefer seeing nearby busi-nesses of other, complementary, categories. This motivates our approach to provide more heterogeneous related business recommendation lists which include businesses complemen-tary recommendations, in addition to substitutes.
In this section we describe an algorithmic approach for generating a useful and diverse list of related businesses for a source business x . We assume that we are given the rele-vance scores between every pair of categories, and how rel-evant a business y is to x given a desired recommendation category. In the next section, we explain how we mine such signals from data, and for the purpose of the discussion in this section, we treat these two signals as given.

We first construct an optimization problem for generating a useful and diverse list of related business recommendations in the more general setting where each business can belong to any number of categories, and we explain the reasoning behind that construction. Since the problem under this set-ting is NP-hard, we relax the problem by associating each business to a single category, which results in an optimiza-tion problem that can be solved in polynomial time using a simple greedy algorithm.
 Relevance Scores: We begin by explaining how the rel-evance between businesses is determined, and introducing notation that we will use in this section and throughout the rest of the paper.
 % of users who find information useful ( a) Survey Results: When searching for a business of source category c : Percentage of users who find information about other nearby businesses of category c useful vs. per-centage of users who find information about businesses of the top complementary category c 0 6 = c useful. These numbers were normalized to exclude users who indicated that they don X  X  find any information useful.
 % of RBG neighbors ( b) Top RGB neighbors: For the top 20 neighbors of busi-nesses of category c (aggregated): The fraction of neighbors of category c vs. the fraction of businesses of category c which was indicated most popular compilementary category for c by survey data.
 Figure 2: Same category vs. complementary category recommendations: User preference compared to current Related Business Graph.
Let r ( y | x,c )  X  [0 , 1] denote the relevance score of related business y to the source business x given that we are making a recommendation of category c . The relevance can be either relevance as a substitute if both x and y belong to category c , or as a complement otherwise.
 Let  X  denote the set of all categories of interest, and let R
CC :  X   X   X   X  [0 , 1] be a function that gives the relevance between categories -that is, R CC ( c 1 ,c 2 )  X  [0 , 1] denotes the relevance of category c 2 to category c 1 (the more relevant c is to c 1 , the higher the score is). Note that R CC is not a symmetric function. Furthermore, R CC is a function of categories only, and is agnostic of the source business. The semantics of R CC are further discussed in the next section. As explained earlier, we treat r and R CC as given in this section.

We define the relevance of a category c to a business x as the average relevance of c to the categories of x : where C ( x )  X   X  is the set of categories to which x belongs. The relevance of a business y to x is then defined as: The relevance of y to x is determined through a single cat-egory in C ( y ) -the one that maximizes the relevance to the source business -so a business X  X  relevance is not penalized for belonging to multiple categories.
 Optimization Problem -Multi-Category Setting: The output of our optimization problem is a list S = ( y 1 ,y of k distinct businesses related to the source business x . One simple approach would be to display the k businesses that are most relevant to x under the above definition of business-to-business relevance. This approach would yield a list of related business recommendations where each recommenda-tion y is highly relevant to x , but the list is a whole would be redundant. We would like to introduce diversity to the rec-ommendation list by penalizing multiple recommendations from the same category.

The penalty for recommending multiple businesses from the same category should depend on the category, as re-dundancy may be worse for some categories than others. Also, to model diminishing returns in contributions made by recommendations of the same category, we would like the penalties for businesses in a category to be increasingly severe as we recommend more businesses from that category.
To satisfy these requirements, when constructing the list of related business recommendations S = ( y 1 ,y 2 ,...y k penalize multiple recommendations of the same category c by multiplying the business-to-business relevance terms with penalty terms of the form d c ( rank c,S ( y )). Here, y is a po-tential recommendation for category c , d c ( n ) is a category-c -specific decay function which is monotonically non-increasing, and rank c,S ( y ) is the number of businesses that occur before the index of y in S and belong to category c : rank c,S ( y ) = |{ j  X  X  1 , 2 ,...k }| j &lt; ind S ( y )  X  c  X  C ( y (Note that the index of y in S is well-defined even if y 6 X  S , and that for such y , rank c,S ( y ) is just the number of busi-nesses in S that belong to category c .) Adding the penalty terms gives us the final formulation of the optimization prob-lem that yields a list of k related business recommendations that balances pairwise relevance to the source business x with overall list diversity:
Rec ( x ) = argmax Note that the max operator over the possible penalty factors means that the penalty for adding a related business y to the list S is the least severe penalty out of all categories to which y belongs. The reasoning for this choice is that a potential related business should not be overly penalized because it belongs to multiple categories -for example, when recommending a bar as a related place for x , a bar-grill y that is classified as both a bar and restaurant should not be penalized just because other restaurants have already been recommended for x .
 Optimization Problem -Single-Category Setting: Un-fortunately, the optimization problem described in equa-tion 4a, where every potential related business y can belong to a set of categories C ( y )  X   X  of an arbitrary size, is NP-hard. We show NP-hardness of the problem using a reduc-tion from the maximum k -subset intersection problem [16], and the proof is posted as supplementary material [1].
To enable a polynomial-time solution to the problem, we have decided to solve a relaxed version of the problem in which each business y is associated to a single category c ( y )  X   X . Belonging to multiple categories in  X  means that business y  X  X  (unique) immediate category is a subset of mul-tiple categories in  X  under the given category ontology. For each such immediate category, we determined the most rele-vant superset category in  X  (see section 5 for further details).
After associating each business y to a single category c ( y ), equations 1a to 4a takes the following form:
Rec ( x ) =
A simple greedy algorithm, as described in Algorithm 1, finds an optimal solution to the relaxed optimization prob-lem 4b in O ( |  X  | X  k ) given a candidate pool of businesses sorted by their relevance score r (see online supplementary materials for proof of optimality and runtime).
 Decay Functions To conclude this section, we discuss the decay functions d c used for penalizing multiple recommenda-tions of the same category. As mentioned before, these are monotonically non-increasing functions that model the di-minishing returns of the contributions of same-category rec-ommendations. The decay functions are category-specific, Algorithm 1 Greedy algorithm for generating related busi-ness recommendation list under single category per. busi-ness relaxation function Rec ( x ) Table 2: Four decay functions , from strongest to weakest, used in our experiments and should provide a stronger decay, or steeper decrease, for categories in which multiple recommendations would cause highly diminished contributions. For this purpose, we in-troduce category-specific decay factors:  X  c = R CC ( c,c ) The decay factor  X  c is higher the less relevant a category c is to itself, which can be interpreted as how disadvantageous redundancy is among businesses recommendations of cate-gory c . The decay factors can then be used as a parameter for controlling the strength of the decay.

Table 2 lists the four families of decay functions we ex-perimented with, from strongest to weakest. A strong decay function means that the algorithm would be fast to tran-sition between categories, which can lead to a very diverse recommendation list. However, a strong decay function can also lead to transitions to categories with irrelevant busi-nesses in them due to premature exhaustion of the most relevant categories. On the other hand, a weak decay func-tion would make the algorithm stay within highly relevant categories, but may lead to an overly homogenous recom-mendation list. We will extensively compare the algorithm X  X  empirical performance when using the different decay func-tions in section 6.
In this section we explain how we constructed the sig-nals R CC and r which are used as inputs to the algorith-mic framework presented in section 4. As mentioned before, R
CC ( c,c 0 ) measures relevance between of category c 0 to cate-gory c , and r ( y | x,c ) measures the relevance of y to x as a rec-ommendation of category c . These two signals were mined and composed from several data sources, including crowd-sourcing, mobile maps queries, and the RBG edge weights. We begin this section with a description of the business cat-egory ontology used by the system, and then describe the construction of R CC and r .
Google X  X  business category ontology is based on a directed acyclic graph, G ONT where vertices are categories and edges represent  X  X s-a X  relationships. An edge ( c 1  X  c 2 ) will be present if c 2 is a subset of c 1 . For example, the edge (restaurant  X  chinese restaurant) is present in the graph. Every business is associated with a single immediate cate-gory which can be any vertex in G ONT . However, for most businesses, the immediate category is quite specific. We selected a set of categories  X  which is listed in Table 1. The categories in  X  are categories of recreational businesses, and are fairly general, so each c  X   X  has many descendants in G
ONT . We would like to associate each immediate category c with all of its ancestors in  X . However, the multi-category recommendation problem from section 4 is NP-hard, so for each immediate category c , we instead hand-pick the best ancestor of that category in  X . As a result, each business is associated with a single category in  X .

We were able to do this task manually because  X  is small, and because the number of immediate categories with mul-tiple ancestors in  X  is also small (a few dozen). However, one could choose ancestors in  X  for each category using more scalable heuristics based on the topology of G ONT , such as by choosing the closest ancestor in the graph.
R CC is a signal that measures the relevance between cat-egories in  X , such that R CC ( c,c 0 )  X  [0 , 1] is a score of how relevant category c 0 is to category c . R CC ( c,c 0 ) measures how likely is a user visiting a source business of category c to visit another business of category c 0 (including the case of c = c ). Therefore, R CC ( c,c 0 ) measures the extent to which c complements c . We do not make any special additions to R
CC ( c,c ) to account for increased relevance as a substitute, as the business-to-business scores r ( x | y,c ), which are mostly based on the existing RBG, are already biased towards rel-evance as substitute.

R CC is derived from three signals that give such category-to-category relevance scores: (1) R S is based on a crowdsourcing survey (2) R E is based on explicit mobile maps directions queries (3) R I is based on mobile maps search queries which can be treated as implicit directions queries
The signal R S was computed using a crowdsourcing sur-vey. The survey was conducted through the Google Con-sumer Surveys platform and included 500 participants who are residents or frequent visitors to NYC (similarly to the survey in section 3). The survey participants were asked to indicate which types of businesses they often visit in con-junction to a visit in a business of a specific category. For example, the survey participants were asked to answer the following:  X  X hen you visit a bar, which of the following types of establishments do you often visit in conjunction to that bar? X . The answer options included: 1. Nearby businesses of the same category (e.g. nearby bars) 2. Nearby businesses of three candidate related categories (e.g. nearby restaurants or nightclubs) 3. I don X  X  visit businesses of that category 4. None of the above -i.e. I visit businesses of that category, but I don X  X  typically visit other businesses in conjunction
R S ( c,c 0 ) is then the fraction of survey takers who indi-cated that they visit a business of category c 0 when visiting a business of category c . R S was normalized to exclude sur-vey takers who chose answer 3, but to include survey takers who chose answer 4. We take answer 4 to indicate that show-ing complementary recommendations for source category c is less beneficial, so we diminish the magnitude of R S ( c,c for all potential related categories c 0 (including c 0 = c ). The signals R E and R I are generated using data from Google X  X  mobile maps of both explicit ( R E ) and implicit ( R
I ) directions queries. An explicit directions query is a query where a user asks for directions from business x to business y on the mobile maps application. Unlike a direc-tions query, in a mobile maps search query, a user searches only the location of the business on the mobile maps appli-cation. An implicit directions query from x to y is a pair of such maps search queries for x and then for y issued by the same user within a short time window. Both for data reliability and robustness, and to avoid any potential pri-vacy concerns, when computing these signals, we only look at aggregated counts for pairs of businesses ( x,y ) that oc-cur sufficiently often in the dataset. Before aggregating by source and destination categories, our dataset included 1 million explicit directions queries and 10 million implicit di-rections queries. Direction queries are a strong indicator of complement relations between businesses -i.e. if there are many directions queries between x and y , then this is an indicator that y complements x .

Directions queries are highly biased towards queries by tourists and other visitors, so hotels, restaurants, and tourist attractions are by far the most common categories associ-ated with almost any category. Therefore, simply mining association rules using commonly occurring pairs of source and destination categories would not work, so we must con-sider another metric. We use a notion similar to tf-idf for extracting relevance from the directions query dataset. If E is the multi-set of category-annotated explicit queries q = ( c src ,c dst ), then we define R E as follows:
R E ( c,c 0 ) = We define R I in a similar way using the multi-set of implicit queries.

We combine R S , R E , and R I into a single signal R CC by taking a weighted average. R S is sparse, as only 48 out of the 168 possible directed pairs of categories were included in the survey. Thus, R S is only counted towards R CC for pairs of categories included in the survey ( c,c 0 )  X  Srv . R is based on answers by people who live in NYC, or visit there frequently, whereas the directions queries are biased towards tourists and other non-locals. To account for both crowds, we take the average of R S and a signal composed of R E , and R I . Since explicit directions queries are higher precision and a clearer signal of user intent, we weight each explicit query twice as much as an implicit query, and since we have 10 times as many implicit as explicit queries, we average R E and R I in a ratio of 1:5. This gives us the final formula for R CC : ( 2  X  R 6  X  R In the approach described in section 4, the signal R is used for both establishing business-to-business relevance through category adjustment, as well as to control for the strength of the decay functions. Typically, our approach produces a more diverse related business recommendation list than the current Google RBG-based system does. How-ever, in cases R CC ( c, e c ) is very high, and R CC ( c,c all c 0 6 = e c , our system might in fact un-diversify the recom-mendation list by making recommendations only, or mostly, from category e c . As we will explain in section 6, this case did come up in our evaluations. r ( y | x,c ) is a signal that measures the relevance of a po-tential related business y to the source business x given that we want to make a recommendation of category c . To com-pute r ( y | x,c ), we combine three signals that give business-to-business relevance scores: 1. r RBG ( y | x ) is the normalized weight of the edge ( x,y ) 2. r E ( y | x ) is the fraction of queries with destination y 3. r I ( y | x ) is the fraction of queries with destination y For each of the above three r ( y | x ) signals, we define r ( y | x,c ) to be r ( y | x ) if y is of category c , and zero otherwise. r RBG has far greater coverage of possible business pairs than r I does. On the other hand, directions queries give more obvious and direct evidence of business-to-business rel-evance and complementarity. So r RBG is a higher recall and lower precision signal than r I , which is in turn a higher re-call and lower precision signal than r E . We combine a higher recall and lower precision f 1 with a lower recall and higher precision signal f 2 by using f 2 as an amplifier for the f scores: combine ( f 1 ,f 2 ) = f 1  X  (1 + f 2 ). r RBG is used as the basis for r , and we successively combine each signal with the next high recall signal, so we get the final formulation for r ( y | x,c ):
Locality is implicitly a factor in r ( y | x,c ). The RBG takes into account locality, so high geographic proximity between x and y will increase the weight of the edge ( x,y ), and thus increase r ( y | x,c ).
We evaluate several variants of our system using human raters, and compare them against Google current RBG-based system.
 The Evaluation Procedure: The raters are professionals who undergo training by Google for ranking results, and are experienced in side-by-side comparison of alternative busi-ness result sets. If a rater is not familiar enough with any displayed business, she is instructed to research that busi-ness. We gave the raters items that showed a source business x and two lists of 5 related businesses each -one produced by selecting the top neighbors of x in the RBG, and the other produced by our system. The instructions for the item asked the raters to assume that a user had searched and was con-sidering visiting x . The side that our list appeared on was randomized.
For each item, we gave the raters two tasks. The first was to rate how useful each related business recommendation y was for the user. For each recommendation y , the raters had to choose one of three options: (1)  X  X seful as a Complement X  -y is a useful suggestion for a complementary business that the user could visit in con-junction to x (2)  X  X seful as a Substitute X  -y is a useful suggestion for a substitute that the user could visit instead of x (3)  X  X ot Useful X  The second task was to compare the two lists for overall use-fulness for the user. The raters had to choose whether the list generated by our system was Much Better / Better / Slightly Better / About the Same / Slightly Worse / Worse / Much Worse than the list generated by the current RBG-based system. Furthermore, they had to give a one sentence explanation for their rating.

We selected 500 items by choosing the 500 businesses with the largest number of explicit directions queries with that business as an origin. Since the explicit directions queries is our sparsest data source, this approach allowed us to utilize as many of our available data sources as possible. We had each of these items rated by three independent raters, for a total of 1500 comparison ratings per evaluation procedure.
We repeated this evaluation procedure for a variant of our system using each of the decay functions listed in Table 3. The choice of decay function had a significant impact on the recommendation lists, and we found that the stronger the decay was, the further our system X  X  recommendation lists were from the RBG-based lists. Table 3 shows the average set overlap between our system X  X  recommendation list and the RBG-based list for the same source business for each decay function.
 Overall List Ratings: We start by analyzing the results of the raters X  second task, as this task X  X  ratings are the indi-cator of our system X  X  relative performance compared to that of the current Google system. We explore the ratings for the lists generated by our system for each of the decay options. These ratings compare the lists against the equivalent lists generated by the current Google RBG-based system and give the gain or loss of our system compared to the current sys-tem. The distribution of the results is described in Figure 3. We assign a numeric score to each rating option  X  from (-3) for  X  X uch Worse X  to (+3) for  X  X uch Better X , and display the statistics of the improvement compared to the current RBG-based system in Table 4.

For all of the decay options, the lists generated by our system received a positive average rating (with a confidence level of at least 95%). This means that our system achieves a statistically significant improvement in recommendation list ratings, and that on average, our system produced a more useful recommendation list than the original RBG-based system.

The choice of decay function has a significant impact on the rating distribution. A strong decay function may lead to premature exhaustion of relevant categories and switch-ing to irrelevant categories. Such a scenario usually leads to strong losses, which are more common when using strong exponential decay. On the other hand, using no decay would commonly lead to an homogenous recommendations list, missing some of the opportunities for high gain that arise from diversifying the list. An intermediate decay function,
Decay Function Average Overlap with RBG list d c ( n ) = exp(  X   X  c n ) 37% d c ( n ) = exp(  X   X  c n/ 2) 46.5% d c ( n ) =  X   X  n c 51.1% d c ( n )  X  1 (no decay) 69% Table 3: Decay functions and average overlap: The four decay functions we explored, from strongest to weakest, and the average set overlap between a recommendation list generated by our system using that decay function and the original recommendation list for that same source business as generated from the RBG.

N umber of Ratings Figure 3: Comparison to RBG -overall rating dis-tribution: For each decay function, the distribution of the comparison scores between lists generated by our system us-ing that decay function and lists generated from the RBG. d ( n ) =  X   X  n c , achieved the best improvement in the gener-ated lists.
 Individual Business Ratings: Next, we analyze the re-sults of the raters X  first task, where they had to classify each recommendation as a useful complement, useful substitute, or neither with respect to the source business. The results are listed in Table 5. As expected, the recommendations generated by the original RBG-based system have a strong majority of useful substitutes and a small fraction of useful complements, but also a small fraction of not useful outliers. The stronger the decay is, the farther the rating distribution is from that of the RBG-based system, and the stronger the decay is the lower is the fraction of useful substitutes among the recommended businesses, and the higher are the frac-tions of useful complements on one hand and the fraction of not useful suggestions on the other. Note that even when no decay is used and there is no incentive to switch between categories, the fraction of useful complements is higher in our system compared to the RBG-based system, and the fraction of the substitutes is lower. This is mostly due to cases where the most relevant category according to R CC is a category different than the category of the source business, as the RBG-based system tends to make recommendations similar to the searched business.
 Per Category List Ratings: The items that we have an-alyzed are for the 500 most popular source businesses in the explicit directions queries dataset. This dataset has a strong bias towards tourists and other non-locals, so the set of 500 businesses includes many lodging options (258), restaurants and cafes (94), and tourist attractions (72). We now analyze the performance of our system by source category (i.e. the Decay Average d c 0.10 0.0-0.21 49.8% 41.6% d c 0.15 0.04-0.25 49.2% 40.0% d c 0.33 0.23-0.42 48.4% 32.2% d c 0.24 0.16-0.32 38.0% 25.7% Table 4: Comparison to RBG -rating statistics: Com-parison of the lists generated by our system to the original RBG-based lists. The ratings are in the scale of (-3) to (+3) with a positive rating indicating improvement compared to the original system, and a negative rating indicating a loss. For all decay options, the average rating is positive with a confidence level of 95% Table 5: Distribution of individual recommendation ratings: For each variant of our system, and for the orig-inal RBG-based system. Every recommendation was clas-sified by the raters as either  X  X seful Complement X ,  X  X seful Substitute X , or  X  X ot Useful X . category of the searched source business) to see when is our approach the most applicable.

Since indoor lodging, restaurants and cafes, and tourist attractions are the only categories represented in significant numbers in the previously evaluated business set, we ran sep-arate evaluations for the rest of the source categories listed in Table 1. For each of the remaining source categories, we selected the most popular 50 source businesses of that category in the explicit directions dataset. The results of comparing the list generated by our system using d decay function against the equivalent lists generated by the current RBG-based system appear in Table 6.

Our system achieved a significant improvement in rec-ommendation list usefulness for the beauty, indoor lodging, liquor store, and sporting goods store. Our system achieved an improvement, but failed to do so with a 95% confidence level, for the bar, nightclub, performing arts venue, movie theater, gym, and sports complex categories, and suffered small losses on average for the restaurant and tourist at-traction categories. To reason about the cases in which our system achieved improvement, we also address the ratings of individual recommended businesses (i.e  X  X seful complemen-tary X  /  X  X seful substitute X  /  X  X ot useful X ) which are not listed here for the by-category evaluations for space considerations.
In the case of the beauty category, our system actually recommends more useful substitutes than the RBG-based system does. The high fraction of useful substitutes in the suggestions is due to the high relevance of beauty to itself, i.e. high R CC ( beauty,beauty ), and the low relevance of other categories to beauty. The category adjustment en-courages the system to start with other beauty recommen-dations, and not to quickly switch to other categories due to a low decay factor. Furthermore, as businesses in the beauty category are often geographically sparse, the RBG-based system, which considers distance more directly than our system does, would often recommend similar but not Category Average Beauty 0.71 0.41-0.99 53.7% 23.1% Indoor Lodging 0.52 0.38-0.66 59.4% 34.4% Liquor Stores 0.37 0.15-0.58 29.9% 13.6% Sport Stores 0.33 0.1-0.54 33.3% 19.7% Sports Complexes 0.26 (-0.04)-0.54 45.1% 34.7% Bars 0.18 (-0.07)-0.42 39.4% 28.6% Nightclubs 0.15 (-0.09)-0.37 30.6% 23.1% Performing Arts 0.10 (-0.13)-0.34 33.3% 29.9% Movie Theaters 0.07 (-0.16)-0.29 29.9% 25.9% Gyms 0.06 (-0.12)-0.24 18.8% 20.1% Restaurants 0.00 (-0.16)-0.15 29.9% 27.0% Tourist Attractions -0.01 (-0.25)-0.21 38.3% 37.8% Table 6: Overall list ratings organized by source cat-egory -comparing the lists generated by our system, when using d 3 c , to the original RBG-based lists. The categories are sorted from highest to lowest improvement, as indicated by the average rating. directly related businesses such as clothing stores that are close geographically. Raters often do not find such loosely related recommendations useful, and harshly penalize the RBG-based list. A similar scenario explains the gain our system achieved for the liquor store, sporting goods store, and to a lesser extent, the bar and nightclub categories. All of these five categories have very high self-relevance scores R CC ( c,c ) &gt; 0 . 75.

In the case of the indoor lodging category, our system sug-gested significantly more useful complementary businesses (45.1%) than the the RBG-based system did (6.8%). For example, the related businesses recommendations the RBG-based system provides for the source business  X  X otel 373 Fifth Avenue X  -a boutique in Midtown East, Manhattan are as follows: ( y 1 ,y 2 ,y 3 ,y 4 ,y 5 ) = (Hotel Giraffe, Courtyard NY Manhattan-Fifth Avenue, New York Marriott Marquis, Courtyard Times Square South, 70 Park Avenue: A Kimp-ton Hotel) -all are Midtown hotels similar to the source business. On the other hand, our system makes the following recommendation list: (Hotel Giraffe, American Girl Place Cafe, Courtyard NY Manhattan-Fifth Avenue, Bryant Park, Tenpenny) -i.e. the list is a mix of two similar hotels, two restaurants, and a famous park -all in Midtown East. The raters favored the diversity, even at the expense of a higher fraction of not useful recommendations. A similar scenario explains the improvements that our system achieved in the cases of the sports complex and performing arts venue cat-egories. For all three categories, survey takers in the sur-vey described in section 3 indeed indicated a strong prefer-ence for information about complementary businesses when searching for a source business belonging to one of these categories.

In the cases of movie Theater and gym in which our system achieved a very small improvement, the distributions of in-dividual recommendation ratings is very similar for both our system and the RBG-based system. In the cases of restau-rant and cafe and tourist attraction categories, our system recommended less useful substitutes, more useful comple-ments, and slightly more not useful recommendations, and suffered a small loss compared to the RBG-based system. Some of the losses are due to locality being less explicitly taken into account in establishing business-to-business rele-vance compared to the RBG, and some recommendations lose relevance drastically if not immediately close to the source business (e.g. recommending a gift shop not immedi-ately close to the searched tourist attraction). A future im-provement to our system could be including distance-based regularization that could more directly account for locality.
We studied the problem of improving the usefulness of the list of related business recommendations a search engine pro-vides in response to a specific business search. Our approach was to build a relevant and diverse mixture of substitute and complement recommendations. In our problem settings, an ontology of business categories exists. We mined multi-ple data sources to establish business-to-business relevance scores that take that ontology into account. We introduced an algorithm that constructs a list of related business recom-mendations for a given source business. The algorithm bal-ances pairwise business-to-business relevance scores with di-versification through penalizing multiple recommendations from the same category. We explored several penalization options through different families of decay functions.
Compared to the current Google system, our system typi-cally generates recommendation lists with more complemen-tary business recommendations and fewer substitutes simi-lar to the source business. The evaluation results show a significant improvement in recommendation list usefulness for the lists generated by our system compared to the cur-rent Google system, which demonstrates the added value in including local complementary businesses recommendations. However, the extent to which a source business would benefit from complementary vs. substitute recommendations varies greatly on the source business and its category. In some cases, our system actually gained user satisfaction through offering more substitutes similar to the source business.
Furthermore, in this work we treat two businesses as sub-stitutes if they belong to the same category, and as comple-ments if they are otherwise relevant to one another. How-ever, this is just one interpretation for substitute vs. com-plementary. Another interpretation could be clustering cat-egories and determining substitute relation iff two businesses are in categories belonging to the same cluster. Other pos-sible interpretations of business to business substitute vs. complement relations can be completely unrelated to the on-tology and rely on entirely different features or data sources (e.g. online reviews or social network based connections).
Lastly, our work did not take into account user-specific features, and addressed providing recommendations to an anonymous random search engine user. However, user set-tings could and should be taken into account, even for pro-viding non-personalized recommendations. In particular, the system could use the user X  X  location and whether they are using a mobile or non-mobile device to provide the best recommendations for a well-rounded and satisfying experi-ence wherever they may go.

The factors that make two business substitute or comple-ment each other, the different interpretations for such rela-tions, and the circumstances in which substitutes vs. com-plements should be recommended, are all possible lines for future work on the topic.
 Acknowledgments. We thank the local search quality team at Google New York, and to Mayur Thakur in par-ticular, for their support and feedback. We also thank Jure Leskovec and the SNAP group at Stanford, and to Austin Benson and Julian McAuley in particular, for their useful feedback. Additionally, we thank Tilman Achberger for his help with the evaluation process. Yonathan Perez is sup-ported by P. Michael Farmwald Stanford Graduate Fellow-ship.
