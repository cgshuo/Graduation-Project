 While current search engines serv e kno wn-item search such as home-page nding very well, the y generally cannot support exploratory search effecti vely . In exploratory search, users do not kno w their information needs precisely and also often lack the needed kno wl-edge to formulate effecti ve queries, thus querying alone, as sup-ported by the current search engines, is insuf cient, and bro wsing into related information would be very useful. Currently , bro wsing is mostly done by follo wing hyperlinks embedded on Web pages. In this paper , we propose to leverage search logs to allo w a user to bro wse beyond hyperlinks with a multi-resolution topic map con-structed based on search logs. Specically , we treat search logs as  X footprints X  left by pre vious users in the information space and build a multi-resolution topic map to semantically capture and or-ganize them in multiple granularities. Such a topic map can support a user to zoom in, zoom out, and navigate horizontally over the in-formation space, and thus pro vide exible and effecti ve bro wsing capabilities for end users. To test the effecti veness of the proposed methods of supporting bro wsing, we rely on real search logs and a commercial search engine to implement our proposed methods. Our experimental results sho w that the proposed topic map is ef-fecti ve to support bro wsing beyond hyperlinks.
 Categories and Subject Descriptors: H.3.3 [Information Search and Retrie val]: Search process, Clustering General Terms: Algorithms Keyw ords: Be yond hyperlinks, effecti ve bro wsing, multi-resolution topic maps, information footprints
Users' search tasks vary a lot from a simple kno wn-item search to very comple x exploratory search [48]. In kno wn-item search, a user has a well-dened information need and can generally for -mulate an effecti ve query and thus the current search engines often work very well. In exploratory search, howe ver, the information need is often comple x and vague, and the goal of search is mainly to gather and study information about some topic. Thus a user gen-erally does not kno w well about the information to be found in exploratory search (which is the reason why the user needs to ini-tiate the search in the rst place). As a result, it is often dif cult for a user to formulate effecti ve queries in exploratory search, and the user has to reformulate queries man y times in a trial-and-error manner . For example, when a user wants to buy a used car , what he/she needs is not just a single piece of information such as a list of used car dealers, but also opinions about the dealers by pre vi-ous customers, adv antages/disadv antages of dif ferent brands, and advice on car insurance, etc. Formulating effecti ve queries to nd all this information is quite challenging, especially for a user who does not kno w well about the domain. For these reasons, the cur -rent search engines generally do not perform well for exploratory search compared with kno wn-item search [28]. Since exploratory search happens very often, it is very important to study how to help users to conduct effecti ve exploratory search [28, 48].
Querying alone is often insuf cient to support exploratory search well due to the dif culty in formulating good queries. When a user is unable to formulate effecti ve queries, bro wsing would be intu-itively very useful because it enables a user to navigate into rel-evant information (and explore the information space in general) without formulating a query . Indeed, being able to bro wse the Web through hyperlinks is essential to web users, and quite often, a user would nd rele vant information by follo wing hyperlinks in the re-sult pages [12]. Had all the hyperlinks been brok en, the utility of a search engine would be signicantly reduced.

Unfortunately , with the current search engines, bro wsing is mostly through follo wing static hyperlinks. This is very restricti ve and would not allo w a user to go very far in the information space. A main research question we want to study in this paper is how to support bro wsing more effecti vely for ad hoc exploratory queries so that users can go beyond hyperlinks to freely navigate into re-motely related topics in the entire information space.

There have been some efforts on pro viding more powerful navi-gation support, but the y tend to rely on manually created meta data and usually can only support  X vertical X  navigation through hier -archies. For example, Web directories such as Yahoo! 1 and ODP 2 (Open Directory Project) directories use manually constructed hier -archies to support drill-do wn and roll-up. Faceted hierarchies [20, 50] go beyond a single hierarchy to support bro wsing with mul-tiple hierarchies. The multiple hierarchies are carefully designed 2 http://www .dmoz.or g/ and built along dif ferent dimensions in a given domain (e.g., time or location dimensions for news articles) so that a user can exibly choose dif ferent dimensions to narro w down their search. Ho we ver, these hierarchies are mostly created manually and thus need a lot of human efforts to adapt them in a new domain. More importantly , the y only allo w users to mo ve vertically i.e., drill-do wn or roll-up. These two operators are not suf cient enough for users to exploit related information. Horizontal navigation in educational hyperte xt is studied in [7] but it is only limited to connect basic documents. When users' information needs are comple x, combining vertical and horizontal navigation is especially benecial.

Thus it remains a signicant challenge to effecti vely support ef-fecti ve bro wsing beyond hyperlinks for arbitrary ad-hoc queries . Ideally we should support both vertical and horizontal navigation. In this paper , we propose to achie ve this goal through a novel nav-igation structure: multi-resolution topic maps. A topic map is an analogy of geographical map, but it is to capture the global struc-ture of an information space. Technically , a topic map is an ex-tension of hierarchy but it has two distinct features: (1) Topics in the same level of the map have similar resolution. (2) There are horizontal links between topics in the same level, besides the verti-cal links as in a hierarchy . In a multi-resolution topic map, topics with coarse granularities (i.e., low resolutions) subsume those with ner granularities (i.e., high resolutions). For example,  X car X  can subsume  X car rental,  X   X car pricing X  and  X car insurance.  X  Related topics in the same granularity are connected horizontally . For ex-ample,  X ight X  can be connected with  X hotel,  X   X vacation X  and  X car . X  With a multi-resolution topic map, a user can easily reach topics of dif ferent granularities through vertical navigation (i.e., zoom in and zoom out) as well as topics with the same level of granular -ity through horizontal navigation (i.e., mo ving to a neighbor area), achie ving exible navigation. Just as a geographical map can help a tourist tour a city , a topic map can guide a user in an information space.

To construct a multi-resolution topic map, we rely on past search engine logs, which can be regarded as  X footprints X  left by pre vious users in the information space. Just as the footprints of pre vious visitors in a park can help guide future visitors, the footprints in an information space left by pre vious users can also help future infor -mation seek ers. Our multi-resolution topic map is to capture these footprints in a semantical way so that it can guide a user to reach rele vant information by follo wing the  X wisdom of cro wds.  X  Com-pared with past work on exploiting search logs (which is discussed in length in Section 2), turning the entire search logs into a topic map is a novel way to leverage search logs to help search. More-over, as new users use the topic map to navigate the information space, the y will add footprints to the information space, which can then be used to impro ve and rene the map dynamically for the benet of future users, thus enabling users to surf the information space in a collaborati ve manner . The topic map essentially serv es as a sustainable and continuously gro wing infrastructure for social surng.

We extend an existing clustering method to build a topic map in three steps: (1) nding topic regions in dif ferent granularities with dense footprints, (2) building horizontal links to connect top-ics with the same granularity , and (3) labelling topic regions with meaningful keyw ords. Our method of constructing the map is com-pletely unsupervised and can be easily applied to any search logs. The constructed topic map can be used to support exible bro ws-ing in a topic space, which can be inte grated with regular querying in a search system to enable users to exibly query , bro wse a map node, and navigate over the topic map to nd rele vant information. We evaluate the potential benet of our topic map using a sample of search logs from a commercial search engine. The experimen-tal results sho w that the idea of supporting exible bro wsing with a multi-resolution topic map is promising and that our search log-based topic map is effecti ve in helping a user reach useful pages quickly through pure bro wsing.
 The main contrib utions of this paper are:
The rest of the paper is organized as follo ws. We rst revie w related work in Section 2. We then dene a multi-resolution topic map formally in Section 3 and describe our algorithms of building a topic map in Section 4. After that, we will discuss how to use a topic map to support exible bro wsing in Section 5, and present our experiment results in Section 6. We discuss how we can leverage a topic map to unify querying and bro wsing in a single navigation frame work in Section 7 and conclude our paper in Section 8.
Exploratory Sear ch. Exploratory search has attracted much attention recently [28, 25, 16, 48]. Dif ferent from the pre vious works in the HCI community which mostly focus on interf ace de-sign [20, 10, 18], our emphasis is on turning search logs into a topic map to enable users to navigate exibly in the whole information space. Querying and bro wsing are two common information search paradigms [14, 26, 27, 51, 17]. A recent study [41] has sho wn that orienteering beha viors are common in search and can not be well supported by direct querying. Thus supporting bro wsing is indeed important, especially for exploratory search needs. Most existing work has relied on catalog, meta-data, or other domain-specic kno wledge to support bro wsing [3, 29, 5]. Our work focuses on the general Web domain and leverages naturally-gro wing unstruc-tured search logs to support bro wsing for ad-hoc topics.
Hierar chy and Faceted Hierar chies. Traditional hierarchies are Web directories such as Yahoo! and ODP directories. Both are built manually and only focus on vertical relations. As a result, current hierarchies do not have a clear notion of resolution and thus topics in the same level of a hierarchy are not always comparable with respect to granularities. Our multi-resolution topic map is an extension of traditional hierarchy with distinct features: topics in the same level have similar granularities and horizontal links are constructed to connect related topics. Hierarchical clustering has been studied extensi vely in information retrie val [49, 36] and data mining [19]. Our method of building multi-resolution topic maps can be regarded as an extension of hierarchical clustering to mak e the topics in the same level have similar granularities and create meaningful horizontal links.

Faceted hierarchies [16, 50] is an extension of traditional hierar -chies to support bro wsing. The y contain multiple hierarchies along dif ferent dimensions and have been used in commercial Websites and digital libraries [38, 25]. Most of the current facets are built manually and designed specically for a well-understood domain. Automatically constructing faceted hierarchies is admitted to be a very challenging task [16]. Some work such as [36, 11] tries to automatically extract facet terms in a text database with certain progress. With the same goal of supporting bro wsing, our topic maps are constructed automatically based on search logs which are naturally available and can sustain continuous revision and im-pro vement of the topic map.

While hierarchy and faceted hierarchies are generally used to support a user to explore inside the search results. Our topic maps can enable a user to horizontally navigate to neighbor areas which is outside of the current search results.

Sear ch Log Mining . Search logs have been exploited for several dif ferent purposes such as query clustering [45, 4, 37], personalized search [39], learning to rank [32, 1], and query suggestion [23, 34, 43]. Post-search bro wsing logs are studied in [47, 6] to identify rele vant pages for queries. Community-based search logs are used in [40, 17] for social search and navigation. The dif ference of our work from the pre vious work mainly lies in our attempt to charac-terize the global structure of users' information footprints and use the topic map structure to better support bro wsing so that users can navigate into remotely related topics.

Sear ch Result Or ganization. Our work is also related to search result organization, which includes clustering based methods [53, 52, 42, 21], cate gorization based methods [8, 13], and faceted hier -archy based methods [20, 16]. All the work in search result organi-zation is to help users navigate inside the current search results. A major dif ference of our work is that we help users navigate outside the search results to explore remotely related topic regions, which is more important for exploratory search when a user' s information need is not well-dened.

Others. The notion of information footprints has been used in some pre vious work such as [46], where footprints were also used to build maps, trials, and annotations to help a new user for infor -mation exploration. Our novelty lies in that we treat search logs as footprints and propose algorithms to turn search logs into a multi-resolution topic map to support exible bro wsing in the entire in-formation space. Some other works such as [31, 30] do not create new ways to support bro wsing, but try to mak e the existing hyper -links easier for users to bro wse. Our work is to break the limitation of hyperlink follo wing through more exible bro wsing with a topic map. Horizontal links has been studied for navigation in works such as [7, 9]. The y mostly rely on the contents of document col-lections and try to build horizontal links between basic objects such as Web pages, while we rely on users' information footprints, i.e., search logs, and furthermore, we automatically construct both ver-tical and horizontal links in multiple granularities. In this section, we formally dene multi-resolution topic maps. Suppose we have an information space consisting of a collection of documents C . We rst dene Topic Re gion and Topic Re gion Space :
D EFINITION 1 (T OPIC R EGION ). A topic region T C is a subset of documents that are about a topic. For example , all the documents matc hing a phr ase can form a topic region char acter -ized by the phr ase .
 D EFINITION 2 (T OPIC R EGION S PACE ). The topic region space S is the set of all possible topic regions dened on C . That is, S = 2 C .

Note that for generality , we allo w the topic region space to con-tain potentially non-coherent topic regions. We now dene Topic Map .

D EFINITION 3 (T OPIC M AP ). A topic map M = ( V; E ) is a graph with regions as vertices (i.e ., V S ). An edg e between two topic regions means that the user can navigate from one topic region into the other . That is, if ( v i ; v j ) 2 E , then a user would be able to navigate between v i and v j .

A topic map is to guide a user navigating in the information space just as a geographic map can guide a tra veller touring a city . As a geographic map would sho w roads to connect dif ferent regions to enable transportation, our topic map would also have semantic connections between topic regions to enable bro wsing.

In any interesting application, especially an unrestricted domain such as Web, the topic map can be quite lar ge. Ho w to facilitate a user in navigating on this map would be itself a challenge. We solv e this problem by constructing a topic map with multiple reso-lutions. The idea of multiple resolutions is again analogous to the idea of displaying a geographic map in multiple resolutions, and it would allo w a user to get to one region from another easily on the map. Specically , if the user wants to visit a topic region far away on the map, he/she can simply  X zoom out X  to a high-le vel general topic region (e.g., sports) and quickly navigate into a quite dif ferent (general) topic region (e.g., economy); similarly , if the user is inter -ested in a region and wants to explore more in the region, he/she can  X zoom in X  and get a detailed vie w of the region (e.g., from  X sports X  to a set of regions such as  X baseball,  X   X bask etball,  X  and  X football X ). We now dene the multi-resolution topic map formally .
 multi-r esolution topic map M consists of k topic maps order ed by resolution decr easingly , M = ( M 1 ; :::; M k ) , suc h that for any two adjacent maps M i = ( V i ; E i ) and M i +1 = ( V i +1 ; E a zooming relation Z V i V i +1 . A zooming edg e ( v i ; v means v i is subsumed by v j or v j subsumes v i .

In a multi-resolution topic map, we can rene bro wsing into ver -tical browsing and horizontal browsing . The zooming relation tells us how to refocus on a map with a new resolution if the user zooms in/out on a current map. Specically , suppose the user is currently visiting region v i on map M i . If the user zooms in, he/she will see a set of  X children X  topic regions f v i 1 j ( v i 1 ; v map M i 1 . Similarly , if the user zooms out, he/she will see a set of  X parent X  topic regions f v i +1 j ( v i ; v i +1 ) 2 Z g on map with the zooming relation and maps of multiple resolutions, a user can potentially navigate into remotely related topics quickly .
While a multi-resolution topic map can be constructed in man y ways, in this paper , we focus on studying how to construct such a map based on search logs. Turning search logs into a topic map to support bro wsing has two attracti ve benets: First, since queries and click-throughs in search logs can both be regarded as  X infor -mation footprints X  left by pre vious users in the information space, thus constructing such a map would enable the current users to fol-low these footprints and leverage the  X wisdom of cro wds.  X  Second, as new users use the map to navigate and lea ve more footprints, we will be able to use the new footprints to dynamically update and rene the topic map for the benet of future users, thus achie ving a powerful naturally sustainable model of social surng.

We now present a general method for constructing a topic map to organize the information footprints in search logs. Our approach is based on an extension of the star clustering algorithm [2], which has a parameter to naturally control the granularity of the obtained topic regions, thus helping attain the goal of multiple resolutions.
We use both queries and click-throughs to represent information footprints. Our method is to generate a pseudo-document for each query . We utilize the click-through information in search logs for this purpose. For each query in the logs, we have all the click ed URLs by all past users. Ho we ver, only URL information would not give meaningful representations since URLs alone are not in-formati ve enough to capture the footprints accurately . To gather rich information, we enrich each URL with additional text contents. Specically , given any query , we can obtain its top-rank ed results using the same search engine as the one from which we obtained our log data, and extract the search engine snippets of the click ed results, according to the log data. Given a query , all the snippets of its click ed URLs are used to generate a pseudo-document. Thus, each pseudo-document corresponds to a unique query and the key-words contained in the query itself can be regarded as a brief sum-mary of the corresponding pseudo-documents. Intuiti vely , all these pseudo-documents and their associated queries capture the foot-prints in the information space and we use them to build our topic regions through clustering techniques. Let Q = f q 1 ; :::; q n g be all the queries in the search logs and L 0 = f d 1 ; :::; d n g their corresponding pseudo-documents. We use the star clustering algorithm [2] to disco ver coherent topic regions.
Given L 0 , star clustering starts with constructing a pairwise sim-ilarity graph on this collection based on the vector space model in information retrie val [35]. Then the clusters are formed by dense subgraphs that are star -shaped. These clusters form a cover of the similarity graph. Formally , for each of the n pseudo-documents f d 1 ; :::; d n g in the collection L 0 , we compute a TF-IDF vector . Then, for each pair of documents d i and d j ( i 6 = j ), their similar -ity is computed as the cosine score of their corresponding vectors. A similarity graph G can then be constructed using a similarity threshold parameter as follo ws. Each document d i is a verte x of G . If sim ( d i ; d j ) &gt; , there would be an edge connecting the corresponding two vertices. After the similarity graph G is built, the star clustering algorithm clusters the documents using a greedy algorithm. We outline the star clustering algorithm in Algorithm 1. Algorithm 1 Star clustering algorithm 1: Given a parameter (0 1) , generate a similarity graph 2: Associate a ag I ( v ) = unmar ked for 8 v 2 V . 3: repeat 5: Mark I ( u ) = center . 6: Form a cluster C u : f u g S f v : ( u; v ) 2 E g where 7: Mark I ( v ) = satel lite if ( u; v ) 2 E . 8: until I ( v ) 6 = unmar ked for 8 v 2 V .

In star clustering, each obtained cluster is star -shaped , which consists of a single center and several satellites . There is only one parameter in the star clustering algorithm. A big enforces that the connected documents have high similarities, and thus the clus-ters tend to be small. Such a small cluster corresponds a topic re-gion with ner granularity . On the other hand, a small will mak e the clusters big and such a cluster corresponds to a topic region with coarse granularity .
For a multi-resolution topic map, we can build it in either a top-down or a bottom-up manner . In this section, we adopt a bottom-up hierarchical clustering method.
We use hierarchical star clustering to build map nodes and their zooming relations. Let L 0 be the set of indi vidual queries. We apply our star clustering algorithm on L 0 with a high 1 values so that we can nd small but very coherent topic regions. Each region/cluster pro vides a center query and all these center queries form a set L 1 . Recursi vely , we can apply star clustering on a medium threshold 2 to generate another set of center queries L . L 2 can then be used to generate L 3 with a small threshold and etc. In our experiments, we generate a three-le vel topic map by setting 1 = 0 : 7 , 2 = 0 : 5 , and 3 = 0 : 3 . Recursi ve clustering gives us clusters in dif ferent granularities. Since we have the same threshold for each level, we loosely ensure that all the topics in the same level have similar granularities. Each cluster is a node in our map and all clusters in L i form the set of nodes in i our map.
The procedure abo ve generates a k-le vel hierarchy which can support vertical zoom in/out naturally: A cluster in a coarse granu-larity subsumes several clusters in a ner granularity . Thus in our map, we have vertical or zooming relations among the correspond-ing nodes. Each cluster in dif ferent levels is a topic region which contains a set of pseudo-documents in L 0 and a set of queries.
Here we describe our methods to connect nodes/clusters in the same level to support horizontal navigation. In the same level, each cluster has a set of queries in Q and all these queries in the set can be used as the content of the cluster . Intuiti vely , semantically closely related clusters would have high similarities in their con-tents. Therefore, we can build a vector representation for each clus-ter and use cosine similarity score to measure the closeness of two clusters. In this paper , we propose a random walk based similarity measure which can be used to incorporate other useful information in logs such as query sequences in user sessions.

Specically , given two clusters C i and C j , we would calculate a probability P ( C j j C i ) to measure the probability of arri ving at cluster C j if we start a random walk from C i . The general random walk works as follo ws: From C i , we randomly walk to a query Q b 2 C i . Then we randomly walk to another query Q a from The last step is another random walk from Q a to a cluster contains Q a . Therefore All those probabilities can be modelled exibly . For example, can be modelled as the probability of a user reformulates queries from Q b to Q a . Another version of random walk is to change and Q b to two terms w a and w b respecti vely . Then we have a sim-ilar formula where P ( w a j w b ) can be modelled as the probability of seeing in a subsequent query given its pre vious query containing user sessions. Without using any additional information, we can assume P ( w a j w b ) = 1 if w a = w b and 0 otherwise. Then Equa-tion (2) can be simplied as In our experiments, we use Equation 3 and estimation P ( w j C of w appearing as a content word in cluster C .
Each cluster generated abo ve corresponds to a node in our topic map. To pro vide effecti ve guidance when end users navigate in our topic map, we need to associate a meaningful label with each node. A label should be informati ve enough to represent the node' s con-tent in the corresponding cluster . Similar to [42], We use query words to generate labels for each node in our map since query words are more meaningful from a user' s vie wpoint. In this pa-per , we use a variant of frequent pattern algorithm to generate the labels in a top-do wn manner . We start from the nodes in the high-est level (Le vel 3) of our map. For each node, we tak e every query in the corresponding cluster as a word sequence and nd the most frequent one (unigram) or two words (bigram) in the correspond-ing query set as its label. For example, we can get a label  X car X  for a node in Le vel 3. After generating labels for Le vel 3, we apply the similar procedure to Le vel 2, but with a constraint that a word will not be selected if it has been used by its parent node. After we get the frequent word(s) for a node in Le vel 2, we append the la-bel of the node' s parent node in Le vel 3 as prex to label the node. For example, if we get the most frequent word of a node in Le vel 2 as  X rental X  and the node' s parent' s label is  X car X , then we label the node by  X car::rental X . For a node in Le vel 1, we use the center queries output by the star clustering algorithm as labels.
Once a topic map is built, we can inte grate it into a regular search engine to enhance bro wsing. We developed a prototype system based on a map constructed using a sample of search logs and a commercial search engine. Two snapshots of our system interf ace are sho wn in Figure 1. In our system, a user has access to three op-erators all the time: querying, vie wing a map node, and navigating in the map.
 Querying . When a user submits a new query through the search box (see Figure 1(a)), the search results from a search engine will be sho wn in the right pane. At the same time, we build a  X query-extended X  map by connecting the query dened topic region with its closest map nodes in Le vel 1. The closeness is computed as fol-lows: given the query , we rst retrie ve the top m pseudo-documents using the standard Okapi method [33]. Each pseudo-document cor -responds to a past query . For nodes/clusters in Le vel 1, we count how man y of the retrie ved pseudo-documents each contains and use these counts as the closeness measure. The closest map nodes are then ordered accordingly and sho wn in the left pane of Figure 1. Viewing a map node. When a user double clicks on a map node, we would display the topic region corresponding to the current node on the right pane (see Figure 1(b)). In this paper , the topic region consists of two parts: (1) the click-throughs of all the past queries in the current map node, and (2) the returned search results of using the label of the current map node as a query . The content in the right pane sho ws a user the most frequently visited pages for the current node (i.e., footprints) and also the search results. The user can thus follo w the footprints of pre vious users or lea ve his/her own footprints by examining new search results.
 Na vigating in the map. The left pane in our interf ace is to let a user navigate in the map. When a user clicks on a map node, this pane will be refreshed and a local vie w around the click ed node will be displayed. Specically , we sho w the parents, the children, and the horizontal neighbors of the current node in focus (labelled as  X center X ). A user can thus zoom into a child node, zoom out to a parent node, or navigate into a horizontal neighbor node. In our current implementation, the children and neighbor nodes are ordered by Equation 3 and the parent nodes are ordered by their size, i.e., the number of children the y contain.

The three dif ferent operators pro vide exibility for users to con-duct either querying or bro wsing interchangeably . Na vigating in the map helps a user reach related topic regions through  X semantic roads X  without needing to formulate a query . Our data set is a sample of search log data from Microsoft Live Labs. In total, this log data spans 31 days from 05/01/2006 to 05/31/2006; there are 8,144,000 queries, 3,441,000 distinct queries, and 4,649,000 distinct URLs in the raw data.

To test our system, we separate the whole data set into two parts according to the time: the rst 2/3 data is used to simulate the his-torical data that a search engine accumulated. We treat this log data as footprints and build our topic map. The last 1/3 data is held out to serv e as our test cases, which will be described in detail in a later section. In the history collection, we clean the logs by only keep-ing those frequent, well-formatted, English queries (queries which only contain characters `a', `b', ..., `z', and space, and appear more than 5 times). After cleaning, we get 169,057 unique queries in our history collection in total. On average, each query has 3.5 distinct clicks. For each query , we build a  X pseudo-document X  based on its click ed snippets. The average length of these pseudo-documents is 68 words and the total data size of our history collection is 129MB.
Based on the history collection we described abo ve, we built a three-le vel topic map according to the method we described in Sec-tion 4. The rst level has the nest granularity and the third level has the most coarse granularity . We sho w a part of the nodes/clusters in dif ferent levels in Figure 2 where each node is represented by its label words and arro ws and lines denote vertical and horizontal re-lations, respecti vely . We use past queries as labels for the rst-le vel nodes, but we use query words instead of entire queries to label the nodes/clusters in the second and third levels. A major reason for doing this is that user queries tend to be very specic, so the y may not always be suitable to label clusters in a coarse granularity , and using query words may be better . From this gure, we can see that the nodes/clusters in the rst level are relati vely narro w topics such as  X alamo car rental.  X  On the other hand, the second and third level clusters represent more general concepts such as  X car . X  On the same level, we have horizontal neighbors whose closeness is calculated by random walk based similarity in Equation 3. We can see that the closest neighbors are indeed related. For example, we can go from  X car X  to  X auto,  X  to  X loan,  X  or to  X insurance.  X  All these neighbors pro vide useful guidance/choices for users to navigate into related topic regions.
It is a challenging task to evaluate our method since by nature, bro wsing is interacti ve [48]. Follo wing some pre vious works such as [24], we evaluate our system by simulations. Figur e 2: Examples of map nodes in the thr ee-le vel topic map.
We construct our test cases using the sessions in our held-out test logs. The test logs consist of user sessions and in each session, a user submitted several queries sequentially and click ed on certain documents for each of the submitted queries. A typical scenario is that a user rst tried an initial query and click ed on certain docu-ments. If the current results were poor or the user wanted to nd more rele vant information, the user would reformulate queries sev-eral times and click on more documents. In our experiments, we use each session as a test case and use the click ed documents in a session to appr oximate the rele vant documents [22]. In a search session recorded in the search logs, the user tried to nd additional rele vant documents through repeatedly reformulating queries. Our idea is to do a simulation evaluation and see whether a user would have been able to nd such additional rele vant documents more ef-fecti vely only through bro wsing the topic map.

Formally , let f Q 1 ; Q 2 ; :::; Q k g be a sequence of queries that a user tried in a session and let R be all the click ed documents for queries f Q 2 ; :::; Q k g . R is regarded as the additional rele vant doc-uments to the user' s information need. Note that we do not include the click ed documents of Q 1 in R because we want to simulate the scenario of a user bro wsing a map to nd more rele vant documents after nishing the search with the rst query instead of formulat-ing additional queries to nd more rele vant documents (the click ed documents of Q 1 would presumably have already been seen by the user by this point). Our experiments are designed to test how effec-tive our guided navigation is in enabling a user to reach the docu-ments in R only through bro wsing.
 As expected, most sessions in our logs are not exploratory search. Since our goal is to support exploratory search, we use several heuristics to lter those sessions in our test cases. Each session is required to have at least 2 dif ferent queries and at least 10 click ed documents (including the clicks for Q 1 ). To ensure that queries in a session are about a coherent information need, we further re-quire that two adjacent queries in a session should share at least one word. After applying the abo ve heuristics to our test data, we obtain 76 sessions as our test cases. On average, each session has 2.22 queries and the size of R is 7.74.
To evaluate our methods, we conduct experiments to simulate a user' s actions when the user uses our system. In particular , we sim-ulate a one-step action where a user vie ws one node in our map af-ter submitting the very rst query Q 1 . We will compare the benet of this navigation action in our system with a query reformulation action of submitting a second query Q 2 .

We compare our methods with two baselines. Our rst baseline method (BL1) is to use Q 1 to retrie ve a rank ed list from a search en-gine. Our second baseline (BL2) is to use Q 2 to retrie ve documents from the same search engine. We use R to evaluate the accurac y of these two baselines. For our method, we use Q 1 as input to return a list of map nodes in Le vel 1 to a user . Then the user can rst examine several nodes and nally decide to vie w a returned node. After the user vie ws a node in our map, a rank ed list of URLs of pre viously click ed documents in the node/cluster will be presented, as well as a list of organic search results from the search engine (refer to Section 5). For simplicity , we rank all the click ed URLs on the top of the search results and their rankings are decided by the historical click frequencies (see  X Click-Through X  in Figure 1). We then use R as rele vant set to evaluate the returned URL lists after the user vie ws a map node. To simulate which node a user will vie w in our map, we use 4 variants as follo ws.

Simu0Default: This variant is the most nai ve method which as-sumes that the user will vie w 1st rank ed map node.

Simu0Best: This variant is to assume that the user will vie w the  X best node X  after examining the top 10 map nodes returned for We will describe what is the best node soon.
 Simu1Default: This variant is an extension of Simu0Def ault. In this variant, a user single-clicks on the 1st rank ed node and our system will display a local vie w of the current node. The user then examines both the 1st rank ed node and its top 10 horizontal neigh-bor nodes. The best node of these 11 nodes is nally  X vie wed X  by the user .

Simu1Best: This variant is an extension of Simu0Best. In this variant, a user single-clicks on the node selected in Simu0Best and our system will display a local vie w of the current node. The user then examines both this click ed node and its top 10 horizontal neighbors. Finally the user decides to  X vie w X  the best node among all these 11 nodes.

Simu0Best, Simu1Def ault, and Simu1Best assume a user would optimally choose the best node to vie w, where the best node is the one whose rank ed list of URLs (in its dened topic region) have the best P@10, evaluated based on R . These are optimal simulations which are to sho w the performance upper -bound of our system. Ho we ver, given informati ve and accessible labels in our map, users can probably choose the best or nearly best node to vie w in reality . Simu1Def ault and Simu1Best are extensions of Simu0Def ault and Simu0Best, and are to test whether a user can get even more useful information after more exploration.

Treating R as the rele vant documents, we use P@5 (Precision at 5 documents) and P@10 (Precision at 10 documents) to evaluate dif ferent methods. Note that P@5 and P@10 are very meaningful measures since users usually only look at and selecti vely click the top rank ed results. Thus P@5 and P@10 measure the percei ved ranking accurac y.
In Figure 3, we compare dif ferent methods using the two pri-mary measures. We compare the two baseline methods BL1 and BL2 with four variants of our method. In this gure, we can see that BL1 is very poor as expected and it means that the rst query is inef fecti ve to retrie ve additional documents. Simu0Def ault is a nai ve method which assumes the user would vie w the rst node. Table 1: Impr ovement over difcult queries with respect to av-erage P@10. Part I corr esponds to those mor e difcult queries. Since the rst node is the most similar to the current query not surprising that its result is also poor . BL2 uses the second query Q 2 and the result is much better . Intuiti vely , this means that refor -mulating queries can get more click ed documents. Compared with BL2 based on P@10, our variant Simu0Best achie ves a relati ve im-pro vement of 57% and Simu1Best achie ves a relati ve impro vement of 63%. Both impro vements are statistically signicant according to Wilcoxon test: p-v alues are 0.003 and 0.002 respecti vely . This means that selecti vely vie wing a node in our map can reach more rele vant documents than reformulating a query . This benet mostly comes from collaborati ve surng since vie wing a node would bring the user to a topic region with all the click ed documents by pre vious users when searching for similar information.

From this gure, we can also see that Simu1Def ault and Simu1Best achie ve better accurac y than Simu0Def ault and Simu0Best respec-tively . The Wilcoxon tests sho w that the impro vements are also signicant: p-v alues are 0.01 and 0.02 respecti vely . This means that more rele vant documents can be reached through navigating to and vie wing a neighbor node. All these conrm the benet of bro wsing with a topic map.

Difcult Query Analysis. We sho w the effecti veness of our method for dif cult queries. In this experiment, we use BL1 to assess the dif culty of queries. For all the test cases, we separate them into two parts according to their P@10 in BL1. The rst part (Part I) corresponds to the cases with P@10 = 0, which means can not retrie ve any additional documents to top 10. The second part (Part II) corresponds to the cases with P@10 &gt; 0. This means that we can retrie ve at least 1 document using the original query Q . We compare the impro vement of our Simu0Best over BL1 for these two sets of test cases using P@10. Table 1 summarizes the results. In this table, we can see that 50 test cases fall into Part I and 26 test cases fall into Part II. For Part I, we can impro ve P@10 by 0.114 from 0 to 0.114 on average. For Part II, the impro vement is only 0.035 from 0.138 to 0.173 on average. Since the cases in Part I are more dif cult than the cases in Part II, this means that navigation based on our topic map can help more for more dif cult queries.

History Richness. Our topic map is based on search logs. Dif-ferent test cases have dif ferent amount of similar history informa-tion in our logs. Our hypothesis is that a test case with richer history information in our logs will benet more from our topic map. To verify this, we use Q 2 to retrie ve our history collection and use the number of returned pseudo-documents as the indicator of the his-tory richness for the test case. According to the number of returned pseudo-documents, we separate the test cases into 4 bins. Bin 1 has 0 40 , Bin 2 has 40 80, Bin 3 has 80 120, and Bin 4 has more than 120 returned pseudo-documents. Bin 1 corresponds to those cases without much history while Bin 4 corresponds to those cases having rich history . For each bin, we sho w the number of test cases whose P@10' s are impro ved versus decreased, by compar -ing Simu0Best with BL1. The result is sho wn in Figure 4. From this gure, we can see that the percentage of impro ved test cases increases along with the increase of the history richness. For exam-ple, in Bin 4, we impro ve 22 and decrease 2 cases. But in Bin 2, we increase 8 and decrease 3. This conrms that the more history we have, the better we can help users for bro wsing. More importantly , as time goes, more and more queries will have suf cient history , so we can impro ve more and more exploratory searches, resulting in a sustainable model for effecti ve social surng.
A main point made in this paper is that the current search engines would be more powerful, especially for supporting exploratory search and helping users nd hard-to-nd information, if the y can offer better support for bro wsing through a multi-resolution topic map, such as the one constructed based on search logs. Although our topic map is built upon a relati vely small sample of search logs, our experiment results have clearly demonstrated the feasibility of supporting bro wsing for ad-hoc queries in a general way. We also demonstrated that queries with more history information can bene-t more from topic map-based bro wsing. This is very encouraging since there are more search logs in the commercial search engines that can be leveraged, and as a system is being used more, more search logs would be naturally accumulated.

Our work raises some interesting new possibilities in adv ancing the search engine technologies, which we will briey discuss in this section.
Although we only experimented with a topic map built based on search logs in this paper , one can easily imagine that we can also build a topic map in man y other ways based on various data sources. Indeed, even with search logs, we have multiple ways to build a topic map. For example, instead of using semantic simi-larity of queries to construct a topic map as we have done in our experiments, we can also leverage the co-occurrence relation of queries in a user session to build an alternati ve topic map where related queries to the same task may be connected together (e.g., queries about  X ight tick et X  may be connected with those about  X car rental X  even though the two sets of queries may not be similar by contents). Yet another way to construct a multi-resolution topic map is based on query word editing patterns [44]. In such a map, a node corresponds to a query . All queries with the same number of keyw ords belong to the same level. The children of a map node are obtained by adding a keyw ord into the current query and the neighbors of the query are obtained by substituting a keyw ord in the current query .

A topic map can also be constructed by other data sources. For example, any domain-specic ontology can also be extended to a topic map by adding horizontal relations. We can also build a topic map solely based on a plain document collection itself.

With multiple topic maps constructed using dif ferent criteria, a search engine system would be able to potentially support multi-faceted bro wsing for ad hoc topics, i.e., a user would be allo wed to switch between from one facet (map) to another to explore infor -mation in an extremely exible and powerful way.
Querying and bro wsing are the two most important information seeking strate gies. The y are complementary , and both are needed in a search task [51]. An important research question is thus: Can we inte grate querying and bro wsing in a unied formal frame work ? Interestingly , as we will further discuss belo w, it is possible to vie w querying as a special way of navigating in the information space, thus we can inte grate querying and bro wsing within a single unied navigation frame work.

A Formal Na vigation Framew ork. In Section 3, we have de-ned topic region and topic region space . Under these denitions, we can vie w querying as navigation in this space. More specically , after querying, a user would end up vie wing a subset of documents (i.e., search results), thus we can vie w this process as helping the user navigate into the topic region consisting of the search results. When a user repeatedly submits a query , the user would be essen-tially visiting dif ferent topic regions dened by the queries.
When a user follo ws a path on a topic map, the user would also be mo ving from one topic region to another , just lik e submitting reformulated queries. Thus both querying and bro wsing can be formalized as navigation operators dened belo w: erator is a function that maps one topic region to another . We use as the set of all navigation oper ator s. That is, N = f f : S ! S g wher e S is topic region space .
 navigation oper ator Q ( q ) is dened as Q ( q )( T ) = T is a query and T q is the topic region corr esponding to the sear ch results of using the query q . For any T 1 6 = T 2 , we have Q ( q )( T 2 ) . Ther efor e, suc h a denition assumes that a query nav-igation oper ator returns a topic region regar dless the curr ent re-gion. It is thus a  X memoryless X  navigator and we can use Q ( q ) repr esent T q without incurring confusion.
 ing navigation oper ator B ( v 1 ; v 2 ) is dened as B ( v v , wher e ( v 1 ; v 2 ) 2 E is an edg e on the topic map. B ( v is undened if v 6 = v 1 . Intuitively , a browsing navigation oper ator B ( v 1 ; v 2 ) brings a user from topic region v 1 to v 2 D EFINITION 8 (C OMPATIBILITY ). Two navigation oper ator s N i and N j are compatible if and only if one of the following thr ee conditions holds: (1) N j is a query navigation oper ator; (2) B ( v 1 ; v 2 ) and N j = B ( v 2 ; v 3 ) ; (3) N i = Q ( q ) B ( Q ( q ) ; v ) .
D EFINITION 9 (N AVIGATION T RACE ). A navigation trace is a sequence of navigation oper ator s N 1 ; N 2 ; :::; N k and N i +1 are compatible .

With these denitions, we can describe any user' s information seeking process as a navigation trace. For example, if the user sub-mits a query q 1 , navigates into a region T 1 from the search result region, navigates further from T 1 to T 2 , and nally submits another query q 2 , then the process can be formally described by the naviga-tion trace Q ( q 1 ) ; B ( Q ( q 1 ) ; T 1 ) ; B ( T 1 ; T ity of combining multiple operators formally to describe an arbi-trary information seeking process sho ws the expressi veness of our frame work. Indeed, it pro vides a solid theoretical basis for study-ing man y dif ferent ways to combine querying and bro wsing as well as developing systems to inte grate querying and bro wsing.
Viewing existing search engines in our navigation frame work, we see that the y mostly only support query navigation operators. A main contrib ution of our work is to study how to effecti vely support bro wsing navigation operators by a good topic map.

Ranking in the na vigation framew ork. While not explored in this paper , ranking is another important component in our frame-work. It is thus worth some discussion.

Ranking is important for three reasons. First, the ranking func-tion is critical for supporting the query navigation operator as we generally dene the tar get topic region of a query navigation op-erator as the top-rank ed documents using the query . Second, even when a user reaches a region through bro wsing, it is still desirable to rank the documents in the region. As the user navigates from document to document within a region, the order of unseen doc-uments can also be dynamically ordered as in the case of implicit feedback [39]. Third, when a user is landing on a region that is not exactly a region on our map, we will need to leverage the ranking function to nd the closest regions on the map. A similar need also arises when the user tak es a zoom-in or zoom-out action to change the resolution of the map, in which case a user may end up having multiple regions to choose.

While ranking of documents has been the central research topic in information retrie val and Web search, the navigation frame work raises some new interesting research questions related to ranking: (1) Ranking documents within a topic region. In our frame work, a user would lea ve a richer interaction history which would include not only queries, click-throughs, but also bro wsing actions such as zoom in/out operations and neighborhood explorations. Exist-ing work in personalized search and implicit feedback has already sho wn the usefulness of the existing query-based history informa-tion [39]. It would be very interesting to study how we can incor -porate all the navigation information to further impro ve a ranking function and personalize search results. (2) Ranking topic regions. While traditionally , ranking is mainly to order documents, in the navigation frame work, we also need to rank the topic regions of a map. Ho w to generalize the current document ranking functions or design new ranking functions to perform region ranking is another very interesting research question. Some recent work on blog feeds has sho wn the promise of this research direction [15].

As a rst step in studying the navigation frame work, in this pa-per , we simply reused the ranking function pro vided by an existing search engine, lea ving all these questions for future work.
In this paper , we study how to support exible bro wsing for ex-ploratory search. We dene a novel multi-resolution topic map to extend a hierarchy to support more exible bro wsing. We propose a novel way of exploiting and organizing search logs to enable users to follo w information footprints left by other users in the process of information seeking, which can potentially lead to an interest-ing sustainable model for social surng. We also propose a gen-eral computational method based on the star -clustering algorithm to generate a multi-resolution topic map based on search logs. Ex-perimental results using a sample of search logs from a commercial search engine sho w that bro wsing through such a search-log-based topic map is effecti ve for supporting exploratory search.
Our work opens up man y interesting new research directions as we have already discussed in Section 7. The preliminary simulation based experimental results are very encouraging. Ho we ver, such simulation based approaches are simplied and do not tak e users' cogniti ve overheads into account. It would be especially interesting to use a much lar ger data set of search logs to build a lar ger -scale topic map and evaluate its effecti veness with a system by real user traf c and user feedback. It is also very interesting to study how to learn effecti vely from the rich interaction traces that a user lea ves when interacting with a system that supports bro wsing with a topic map. For example, users' bro wsing logs on the topic maps can be further utilized to adapti vely rank topic regions for a future user . Clearly more effecti ve implicit feedback techniques can be devel-oped by leveraging such interaction traces. Finally , topic maps can be constructed in multiple ways. Ho w to design effecti ve evaluation methodology to compare dif ferent topic map construction methods is an important research question.
We thank the anon ymous revie wers for their valuable sugges-tions and Qihong Shao for proofreading. This work is in part sup-ported by the National Science Foundation under award numbers IIS-0347933 and IIS-0713581, the Microsoft  X Be yond Search X  Grant, a Sloan Research Fello wship, and a Yahoo! Ph.D. Fello wship. [1] E. Agichtein, E. Brill, and S. T. Dumais. Impro ving web [2] J. A. Aslam, E. Pelek ov, and D. Rus. The star clustering [3] M. J. Bates. The design of bro wsing and berrypicking [4] D. Beeferman and A. L. Ber ger . Agglomerati ve clustering of [5] N. J. Belkin. Interaction with texts: Information retrie val as [6] M. Bilenk o and R. W. White. Mining the search trails of [7] P. Brusilo vsk y and R. Rizzo. Map-based horizontal [8] H. Chen and S. T. Dumais. Bringing order to the web: [9] H. Chen, A. L. Houston, R. R. Sewell, and B. R. Schatz. [10] E. Cutrell, D. Robbins, S. Dumais, and R. Sarin. Fast, [11] W. Dakka and P. Ipeirotis. Automatic extraction of useful [12] D. Do wne y, S. Dumais, D. Liebling, and E. Horvitz. [13] S. T. Dumais, E. Cutrell, and H. Chen. Optimizing search by [14] E. Duv al and H. Oli vi X . Towards the inte gration of a query [15] J. L. Elsas, J. Ar guello, J. Callan, and J. G. Carbonell. [16] J. English, M. A. Hearst, R. R. Sinha, K. Swearingen, and [17] J. Fre yne, R. Farzan, P. Brusilo vsk y, B. Smyth, and [18] G. W. Furnas. Effecti ve vie w navigation. In CHI , pages [19] J. Han and M. Kamber . Data Mining: Concepts and [20] M. Hearst. Clustering versus faceted cate gories for [21] M. Hearst and J. Pedersen. Ree xamining the cluster [22] T. Joachims. Evaluating Retrie val Performance Using [23] R. Jones, B. Re y, O. Madani, and W. Greiner . Generating [24] J. Lin and M. D. Smuck er. Ho w do users nd things with [25] m. c. schraefel, D. A. Smith, A. Owens, A. Russell, [26] Y. S. Maarek. Or ganizing documents to support bro wsing in [27] J. D. Mackinlay and P. T. Zell we ger . Bro wsing vs. search: [28] G. Marchionini. Exploratory search: from nding to [29] V. L. O'Day and R. Jef fries. Orienteering in an information [30] C. Olston and E. H. Chi. Scenttrails: Inte grating bro wsing [31] S. Pandit and C. Olston. Na vigation-aided retrie val. In [32] F. Radlinski and T. Joachims. Query chains: learning to rank [33] S. E. Robertson and S. Walk er. Some simple effecti ve [34] M. Sahami and T. D. Heilman. A web-based kernel function [35] G. Salton, A. Wong, and C. S. Yang. A vector space model [36] M. Sanderson and B. Croft. Deri ving concept hierarchies [37] D. Shen, M. Qin, W. Chen, Q. Yang, and Z. Chen. Mining [38] R. Shen, N. S. Vemuri, W. Fan, R. da S. Torres, and E. A. [39] X. Shen, B. Tan, and C. Zhai. Conte xt-sensiti ve information [40] B. Smyth, E. Balfe, J. Fre yne, P. Briggs, M. Co yle, and [41] J. Teevan, C. Alv arado, M. S. Ack erman, and D. R. Kar ger . [42] X. Wang and C. Zhai. Learn from web search logs to [43] X. Wang and C. Zhai. Mining term association patterns from [44] X. Wang and C. Zhai. Massi ve implicit feedback: Or ganizing [45] J.-R. Wen, J.-Y . Nie, and H. Zhang. Clustering user queries [46] A. Wexelblat and P. Maes. Footprints: history-rich tools for [47] R. W. White, M. Bilenk o, and S. Cucerzan. Studying the use [48] R. W. White and R. A. Roth. Explor atory Sear ch: Be yond [49] P. Willett. Recent trends in hierarchic document clustering: a [50] K.-P . Yee, K. Swearingen, K. Li, and M. Hearst. Faceted [51] X. Yuan and N. J. Belkin. Supporting multiple [52] O. Zamir and O. Etzioni. Web document clustering: A [53] H.-J. Zeng, Q.-C. He, Z. Chen, W.-Y . Ma, and J. Ma.
