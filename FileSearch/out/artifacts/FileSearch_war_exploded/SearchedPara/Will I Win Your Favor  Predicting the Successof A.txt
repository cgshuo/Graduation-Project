 (e.g., a simple question vs. a big financial need) [ 22 ], whether the giver receives in return [ 21 ], and the social interaction between the receiver and the giver [ 8 ]. Furthermore, to uncover how the linguistic factor solely influences the success of requests, the ADJ work [ 1 ] focuses on altruistic requests, in which the giver receive no rewards. Based on the qualitative analysis of linguistic factors on deci-sion making [ 26 ], ADJ shows that the linguistic presentation, including narrative structure, politeness, evidentiality, and reciprocity, has strong correlation to the success of requests. They also demonstrate the predictability of the success of requests by treating the measured scores of these factors as feature values. istic requests via following the similar setting and data used by ADJ [ 1 ]. While what ADJ mainly contributes is developing a series of textual features to char-acterize the linguistic presentation of altruistic requests, study their correlation with request success, and use the logistic regression model to test the predictabil-ity, we need to point out four aspects of insufficiency of ADJ. First, the predic-tion accuracy is not satisfied (the AUC score is only 0.67). Second, ADJ does not study the importance of features, but in practice different requests can resort to or concentrate on various factors to seek for the success. Third, ADJ uses a large set of requests to build the predictive model (70 % for training and 30 % for test-ing). However, in real-world applications, we might not have many request data with the labels of success and unsuccess for training. Fourth, the features consid-ered in ADJ cannot model how users interact with each other affect the success, and more importantly how the topics of the requests have impact on the success. We believe user interactions and topic information also play a deterministic role in the success prediction of altruistic requests.
 requesters to optimize their presentation in a real-time manner when asking for favors. To have a more powerful method with limited training data to accurately predict the success of altruistic requests, we devise a novel model, Graph-based Predictor for Request Success (termed GPRS ). In addition to the three features (i.e., textual, social, and temporal) proposed by ADJ, we further propose three additional features, including centrality, role, and topic. Our GPRS model is designed to jointly learn the feature weights and predict the success of query altruistic requests. We evaluate the effectiveness of our GPRS model using the dataset provided by ADJ, i.e.,  X  X andom Acts of Pizza X  (RAOP) 1 in Reddit.com , an online community established for giving away free pizza to strangers that ask for one. The results exhibit GPRS is able to not only significantly outperform ADJ with the AUC score up to 0.8, but also produce a satisfying accuracy (AUC score = 0.68) using only 20 % request data for training. 2.1 Data We use the Pizza Request Dataset 2 compiled by ADJ [ 1 ], which is the entire collection of the Random Acts of Pizza Subreddit (RAOP) from December 8, 6. Length. Longer requests can reflect more efforts of the need and be more Social Features. Existing study showed that the inter-evaluation between peo-ple have positive correlation with the success of a request, especially user status and user similarity [ 2 ]. (1) Status :The karma point of a user measured by her activity in Reddit.com is used as the feature. (2) Similarity : People tend to help those who resemble them [ 10 ]. We use intersection size and the Jaccard similarity to compute the similarity between the requester and the other users on RAOP based on the set of Subreddits of users.
 Temporal Features. We measure the specific season, month, workday or week-end, weekday, day of the month, and hour of the day of the request, as well as the number of months since the beginning of RAOP community to be the temporal features.
 Centrality Features. We would like to investigate how the extent of user inter-action in Reddit.com affects the success of a request. Users in Reddit.com are allowed to interact with one another through commenting others X  posts. We construct an directed weighted interaction graph to represent their interaction behaviors, in which each node is a user and each directed edge refers to a com-ment from the user of the comment to the recipient. Each edge is weighted by the reciprocal of the number of comments from one user to another. Lower weight values mean frequent/stronger interaction. Then to characterize how the requester interact with others, based on the constructed interaction graph, we calculate several structural centrality measures, including in-degree , out-degree , clustering coefficient , closeness , betweenness , eigenvector , PageRank ,and HITS scores (hub and authority), as the feature values.
 Role Features. We also measure the role of interaction of the requester among other users in terms of network communities (a community refers to a set of nodes that are densely connected internally and loosely connected externally in a graph). A user who is exposed to less communities can belong to the minority that needs help [ 13 ]. But a user with connections to more communities is also capable of reaching more information, and thus has a higher possibility to earn resources [ 23 ]. Therefore, we aim to quantify how the role of a requester who plays among communities affects the success of his/her altruistic request. We detect communities in the constructed interaction graph using Louvain X  X  algorithm [ 5 ]. Then based on some social theories, we measure four social roles as the features. 1. Structural Hole. Structural hole theory [ 7 ] suggests that nodes act as an We devise a novel model, Graph-based Predictor for Request Success ( GPRS ), to predict whether or not a request will be successful (i.e., a binary success label, 0 or 1). GPRS consists of two stages: constructing a Request Graph ,and Propagation-based Optimization . The basic idea lies in representing the feature similarity-based correlation between requests in a graph structure, and jointly learning the feature weights and computing the success labels of unseen requests by spreading the probabilities of success labels in the request graph such that those requests with higher similarity with each other have the same success label (0 or 1). 3.1 Constructing Request Graph A Request Graph (RG) G =( V ,E ) is devised to model the feature-based cor-relation between request nodes, in which V is the set of nodes and V = V  X  U , where V and U are the node sets of training and testing requests respectively. The construction of RG has two parts: (1) each testing request node u  X  U is connected to the top-k 1 similar training node v  X  V , and (2) each testing request u  X  U is connected to the top-k of features, where k 1 and k 2 are determined by a parameter  X   X  [0 , 1]: k 1 =  X   X | V | and k 2 =  X   X | U | . We will show how  X  affects the effectiveness and efficiency our model. On the other hand, each request x  X  X  is associated with two probabili-are the probabilities that the request x is successful or not respectively. For each training request v  X  V whose success label is 1 (i.e., s v = 1), we always fix P ( v )=1and P 0 ( v )=0; P 0 ( v )=0and P 0 ( v )=1if s v = 0. We also initialize P ( u )=0and P 0 ( u ) = 0 for each testing request u  X  U .
 based correlation between requests. Given a certain feature F d ,the feature-based request correlation frc F d ( x, y ) between nodes x and y ,( x, y )  X  E ,can be derived from their feature difference frc F d ( x, y )=  X  F d ( x, y ), where  X  F d is their feature difference, defined by  X  F d = f d ( x )  X  f d ( y ) . Given a list of features F = {F d } ( d =1 , ..., m , m is the number of features), we compute feature-aware request correlation value frc ( x, y ) via the weighted sum of their correlation frc F d , given by: where  X  d is the weight of feature F d . The combined correlation is considered as the edge weight w x,y = frc ( x, y ) for edge ( x, y )  X  E in RG.
 frc F d ( x, y )  X   X  d . Then a new set of edge weights w x,y can be derived using the updated  X  d via Eq. ( 1 ).Basedonnew w x,y , we can generate the new success probabilities of testing requests P 1 ( x )and P 0 ( x )from x  X  X  neighbors in RG. Then the average success probability entropy H ( P U ) is updated accordingly via Eq. ( 3 ). The iterative updating procedure will continue and be terminated till H ( P U ) converges. Finally, using the derived success probabilities of each testing request x  X  U , we can find its predicted success label s x . Note that we can prove the convergence by establishing a reduction from the graph-based label propagation [ 29 ]. However, due to the page limit, we skip the proof. The experiment consists of four parts. First, we aim to show whether the pro-posed GPRS model can perform better than ADJ [ 1 ] using the same volume of training requests. Second, we will show GPRS can still work well using a small set of training requests. Third, we will present the effectiveness of each feature category, i.e., textual, social, temporal, centrality, role, and topic. Fourth, the time efficiency of GPRS by varying the parameter  X  will be reported.
 is the best among the three features used in ADJ. Such outcome demonstrates the topic of the request can be more deterministic than the language usage (e.g., politeness and narrative), the provided evidence, and the conveyed sentiment, which are modelled by the textual feature. In addition, it is worthwhile to notice that the performance of the topic feature will be better (compared to the textual feature) if more training data are used (e.g., the performance of the topic feature under 80 % training is better than that under 20 % training data). We think the reason could be the hidden topics can be learned only if there are sufficient training data. Finally, combing all of these six feature categories can generate the best results.
 L model under different  X  values are reported in Fig. 3 . There is a trade-off between accuracy and efficiency. Higher  X  values that add more edges in the request graph lead to higher AUC scores, but cost more time to run the GPRS-W model. Nevertheless, we find  X  =0 . 1 is a good choice since it balances the prediction accuracy (up to 0.8 AUC score) and run time (only 3 s), and suggest  X  =0 . 1 for real usages.
 The contribution of our GPRS model is four-fold. First, our GPRS model is able to significantly boost the accuracy of predicting the success of altruistic requests. Second, it is capable of tacking the problem of inadequate training data while keeping the accuracy. Third, three additional features (i.e., centrality, role, and topic) are proposed and evaluated to be effective in predicting the success of requests. Fourth, the technique that jointly learns feature weights and predicts labels can be served as a novel framework to solve other NLP tasks like sentiment detection and POS tagging.

