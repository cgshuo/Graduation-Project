 Social networks have become an important information source. Due to their unprecedented success, these systems have to face an exponentially increasing amount of user gen-erated content. As a consequence, finding relevant users or data matching specific interests is a challenging. We present RecLand , a recommender system that takes advantage of the social graph topology and of the existing contextual in-formation to recommend users. The graphical interface of RecLand shows recommendations that match the topical interests of users and allows to tune the parameters to adapt the recommendations to their needs.
 H.3.3 [ Information Storage and Retrieval ]: Informa-tion Search and Retrieval  X  Information filtering; H.2.8 [ Database Management ]: Database Applications  X  Data mining Recommendation, Social Networks, Link Prediction tion vector and are currently facing a spectacular increase in the number of users and their generated content. More than 550 million of Twitter accounts exchange over 500 million of tweets every day, whereas each of the 1.26 billion Facebook users publish on average 36 posts a month. Other similar systems like Google+, Instagram, Youtube or Sina Weibo, to quote the largest, also exhibit dramatic growth 1 .
Recommender systems alleviate this information overhead and help the users to find relevant data/users that match their interests. Recommendation scores generally consider http://expandedramblings.com user behavior as well as other information, such as user pro-files or the social graph topology. For instance, collaborative filtering can be used to recommend Google news that were read by similar users [2]. The WTF service at Twitter [3] recommends users by using the SALSA algorithm on a bipar-tite social graph, where hubs are in the user X  X  circle of trust computed by Personalized PageRank. Recommendation rel-evance is improved when the profile-based similarity is com-bined with explicit friendship links [7]. TwitterRank [7] for instance finds topic-level influential users by adding topical characterization extracted by LDA to the users of the Twit-ter graph. Graph links are weighted by the topic similarity between the corresponding users and user scores are com-puted by the Topic Sensitive PageRank. Similarly, [4] use Random Walk with Restarts on the social friendship net-work increased with user-provided annotations to improve music recommendation on last.fm.

In this demonstration we propose RecLand , a recom-mender system that produces personalized user recommen-dations. Building on the idea that measures based on the graph topology are good indicators of user similarity, we ex-tend the topological score of Katz used for link prediction [5] by integrating semantic information on users and their re-lationships and user authority. Unlike existing methods, a user has high authority only if he is highly followed (pub-lished content that is not followed is not considered). Also, an user is relevant if many other relevant users are encoun-tered on the exploration paths. Furthermore, we propose approximate recommendation scores by adapting landmark-based approaches currently used for shortest-path approxi-mations [6] to reduce computation cost at query time. The RecLand interface allows to compare the recommendations produced by our algorithm with the ones produced by Twit-terRank [7] and Katz [5]. It also allows the user to choose his own parameters and to verify the relevance of the resulting recommendations by exploring the underlying social graph. We illustrate the features of RecLand in the context of the Twitter microblogging system, but our model is general and may be used for any microblogging sites where users publish content and receive posts from the accounts they follow.
We model the Twitter social network as a directed labeled graph whose nodes u are users (accounts) and there is and edge e = ( u,v ) from u to v if u follows v ( i.e u receives v  X  X  updates). Each user is labeled with a set of n topics { t } n i =1 that characterize his posts. Edges e = ( u,v ) are also labeled with a set of topics describing the interests of u for the posts published by v . Labels can be explicitly defined by users or automatically inferred from the posts, as described in Section 3.
 Recommendation. RecLand recommends to a user u rel-evant accounts (users) v on a query composed of several top-ics { t 1 ,...,t n } and relies on the following assumptions: ( i ) the topological proximity is important, i.e u trusts his friends, the friends of his friends, etc., but this confidence decreases with distance [5]; ( ii ) the number of paths from u and v is also important, since user v is likely to be more important for u if there are many other relevant users for u that rec-ommend v ; ( iii ) the topical relevance of the paths between u and v must be considered for recommendations.

The recommendation scores proposed in RecLand extend the Katz score which has been shown to perform well in the context of link prediction [5] by integrating the topical relevance of the paths. More precisely, we express the rec-ommendation score  X  k ( u,v,t ) of the user v for user u on a query topic t on paths p = u ; v of length less than k as : The total recommendation score of v on all query topics { t 1 ,...,t n } is obtained by a weighted linear combination [1] where scores for each individual topic t i are weighted by the relevance of t i for the posts of u .  X  | p | is the Katz score that decreases as the length of the path | p | grows,  X  p the topical score for the path from u to v of length  X  k . The topical score of a path  X  p ( t ) considers the relevance of the nodes (authority) and the one of the edges (topical similarity) on this path w.r.t. to the topic t .

Node authority : depends on the number of users that fol-low u on topic t : where |  X  u [ t ] | is the number of followers of u on t , and |  X  is the total number of followers of u . The local authority is higher for users u specialized on t (1 if u is followed exclu-sively on t ) than for users that publish on a broad range of other topics. The global popularity is higher for users which are most followed on t (1 if u is the most followed user on t ). We used the logarithm function to smooth the difference be-tween popular accounts with huge number of followers and accounts with very few followers.

Edge relevance: we consider a path p = u ; v to be more relevant when the topics on the edges on p are semantically close to t . The relevance of each edge e at distance i ( i  X  k ) from u on path p is defined as: the decay factor  X   X  [0 , 1] decreases the influence of e when its distance i from u is higher, sim :  X  2  X  R is the semantic similarity between two topics t and t 0 given by the Wu and Palmer measure used in Wordnet 2 3 . For edges labeled with several topics topics ( e ), we only keep the maximum similarity among all topics of e to avoid high scores for edges labeled with many topics that have small similarity to t . http://wordnet.princeton.edu/ other semantic distances, e.g. Resnik , could be used
Finally, we consider that the weight of a path p is high when both the relevance of the nodes and the one of the edges of this path are high: where end ( e ) returns the end node of the edge e. Approximate recommendation. For a graph with N ver-tices, computing exact recommendation scores for all nodes reachable in K hops supposes to handle node sets of size out K avg on average (with out avg the average number of fol-lowed accounts), and of size N K in the worst case (complete graph). We can compute instead approximate scores by us-ing a landmark-based approach [6] that divides the graph around L selected landmarks to reduce the cost of handling a large graph and the computation overhead at query time.
During the preprocessing phase, we choose a set of nodes as landmarks according to one of the strategies proposed in Table 1 and precompute recommendation scores  X  k 2 ( l,v,t ) for all topics t  X   X , from each landmark l to all nodes v reachable in k 2 &lt; K hops. The number of explored node is N
At query time, we explore the graph at distance k K  X  k 2 from the query node u to search for landmarks, vis-mendations from any encountered landmark l at distance k l and weight them based on recommendation score  X  k l ( u,l,t ) computed during this exploration. A linear combination of the collected results provides the final recommendations for u on topic t . The cost of this approach is consequently in O ( N k 1 + N k 2 ) N K . Observe that this approach estimates a lower-bound of the scores. available at http://cedric.cnam.fr/  X  dahime m/recland . The recommendation engine is implemented in Java. The inter-face uses a force directed layout display powered by d3js and shows in its main frame an excerpt of the labeled Social Graph (LSG) (see Figure 1). The left panel allows graph exploration while the right one is used to interact with the recommender system as well as to tune the display options. Recommendation scores are computed on a Twitter dataset with 400,000 users, 2.4 millions edges and nearly 4 million tweets, with a mean path length of 3.74 and an average local clustering coefficient of 0.144 (small world network). User profiles were generated by using OpenCalais 5 combined to a trained Naive-Bayses classifier ( Weka 6 , with a precision of 0.83) to tag accounts with 18 topics extracted from their tweets. Edge labels are chosen from the intersection of the topics of the corresponding publishers and followers. cLand offers the following functionalities: Labeled graph visualization : when selecting an account, the interface displays its posts on the right window and the cor-responding user profile extracted from those posts. Graph can be explored by clicking on a following link from the cur-rent account, display link X  X  labels and see the profile of the corresponding publisher. http://www.d3js.org http://www.opencalais.com http://www.cs.waikato.ac.nz/ml/weka Recommendation relevance comparison: the interface allows to compare RecLand recommendations with the ones pro-duced by Katz or TwitterRank [7]. Recommended accounts are displayed on the graph as a set of green-enlightened nodes with their scores and ranked by relevance. Recom-mendation relevance can be checked by selecting accounts from the ranked list and comparing their user profile and topic authority with the query topics.
 Recommendation parameters tuning: by testing different ex-ploration distances, we can compare local recommendations at small distance with the ones at greater distance that pos-sibly involve all the social network. Tuning  X  and  X  allows to test the trade off between the influence of the topologi-cal and the semantic scores on the recommendations. For a fixed  X  , a higher  X  may lead to recommend distant nodes if their semantic score is high. When  X  is small, distant nodes are more unlikely to be recommended, even if they are semantically relevant. For a fixed  X  and a higher  X  , the position of the relevant arcs and nodes on the recommenda-tion paths is less important. For a small  X  , a path is more important for recommendation if the semantically relevant nodes and edges are closer to the query account on this path. Exact and approximate recommendations comparison : Re-cLand allows to test the 10 landmark selection strategies in Table 1 and compare the resulting recommendations. The user specifies an exploration depth to search for landmarks. Found landmarks are displayed in the interface X  X  right win-dow, ranked by their relevance to the query node. When a landmark is selected, the users recommended by the land-mark for the query topics are also highlighted. We can then choose a set of landmarks to use for recommendation and see the final list of recommended users, whose approximate scores were computed based on the chosen landmarks. This list can be compared with the the exact recommendations. ing 41 users, from which 44% were regular Twitter users to rate the recommendations for 5 topics on a scale from 1 (low relevance) to 10 (high relevance). We computed rec-ommendations by graph exploration at distances K ranging from 2 to 5 (at distances  X  4 we possibly reach all graph nodes for a graph with mean path length of 3.74). For each K we shuffled the top 3 users recommended by RecLand , TwitterRank and Katz before presenting them to the users. The mean average relevance scores for all distances (4.06 for RecLand , 3.21 for Katz and 3.67 for TwitterRank) show that our proposal outperforms the others. The relevance of RecLand shows an increasing tendency for greater explo-ration distances (3.98 for K = 2, 3.94 for K = 3, 4.10 for K = 4 and 4.24 for K = 5).
