 Hierarchical phrase-based (HPB) model (Chiang, 2005) is the state-of-the-art statistical machine translation (SMT) model. By looking for phrases that contain other phrases and replacing the sub-phrases with nonterminal symbols, it gets hierar-chical rules. Hierarchical rules are more powerful than conventional phrases since they have better generalization capability and could capture long distance reordering. However, when the train-ing corpus becomes larger, the number of rules will grow exponentially, which inevitably results in slow and memory-consuming decoding.

In this paper, we address the problem of reduc-ing the hierarchical translation rule table resorting to the dependency information of bilingual lan-guages. We only keep rules that both sides are relaxed-well-formed (RWF) dependency structure (see the definition in Section 3), and discard others which do not satisfy this constraint. In this way, about 40% bad rules are weeded out from the orig-inal rule table. However, the performance is even better than the traditional HPB translation system. Figure 1: Solid wire reveals the dependency rela-tion pointing from the child to the parent. Target word e is triggered by the source word f and it X  X  head word f  X  , p ( e | f  X  f  X  ) .

Based on the relaxed-well-formed dependency structure, we also introduce a new linguistic fea-ture to enhance translation performance. In the traditional phrase-based SMT model, there are always lexical translation probabilities based on IBM model 1 (Brown et al., 1993), i.e. p ( e | f ) , namely, the target word e is triggered by the source word f . Intuitively, however, the generation of e is not only involved with f , sometimes may also be triggered by other context words in the source side. Here we assume that the dependency edge ( f  X  f  X  ) of word f generates target word e (we call it head word trigger in Section 4). Therefore, two words in one language trigger one word in another, which provides a more sophisticated and better choice for the target word, i.e. Figure 1. Similarly, the dependency feature works well in Chinese-to-English translation task, especially on large corpus. In the past, a significant number of techniques have been presented to reduce the hierarchical rule table. He et al. (2009) just used the key phrases of source side to filter the rule table without taking advantage of any linguistic information. Iglesias et al. (2009) put rules into syntactic classes based on the number of non-terminals and patterns, and applied various filtration strategies to improve the rule table quality. Shen et al. (2008) discarded Figure 2: An example of dependency tree. The corresponding plain sentence is The lovely girl found a beautiful house . most entries of the rule table by using the con-straint that rules of the target-side are well-formed (WF) dependency structure, but this filtering led to degradation in translation performance. They ob-tained improvements by adding an additional de-pendency language model. The basic difference of our method from (Shen et al., 2008) is that we keep rules that both sides should be relaxed-well-formed dependency structure, not just the target side. Besides, our system complexity is not in-creased because no additional language model is introduced.

The feature of head word trigger which we ap-ply to the log-linear model is motivated by the trigger-based approach (Hasan and Ney, 2009). Hasan and Ney (2009) introduced a second word to trigger the target word without considering any linguistic information. Furthermore, since the sec-ond word can come from any part of the sentence, there may be a prohibitively large number of pa-rameters involved. Besides, He et al. (2008) built a maximum entropy model which combines rich context information for selecting translation rules during decoding. However, as the size of the cor-pus increases, the maximum entropy model will become larger. Similarly, In (Shen et al., 2009), context language model is proposed for better rule selection. Taking the dependency edge as condi-tion, our approach is very different from previous approaches of exploring context information. Dependency models have recently gained consid-erable interest in SMT (Ding and Palmer, 2005; Quirk et al., 2005; Shen et al., 2008). Depen-dency tree can represent richer structural infor-mation. It reveals long-distance relation between words and directly models the semantic structure of a sentence without any constituent labels. Fig-ure 2 shows an example of a dependency tree. In this example, the word found is the root of the tree. pendency structure to filter the hierarchical rule ta-ble. A well-formed dependency structure could be either a single-rooted dependency tree or a set of sibling trees. Although most rules are discarded with the constraint that the target side should be well-formed, this filtration leads to degradation in translation performance.

As an extension of the work of (Shen et al., 2008), we introduce the so-called relaxed-well-formed dependency structure to filter the hi-erarchical rule table. Given a sentence S = w parent word for each word. For example, d means that w define d
Definition A dependency structure w a relaxed-well-formed structure, where there is h /  X  [ i, j ] , all the words w i ...w j are directly or indirectly depended on w h =  X  1 ). If and only if it satisfies the following conditions  X  d h /  X  [ i, j ]  X  X  X  k  X  [ i, j ] , d k  X  [ i, j ] or d k = h
From the definition above, we can see that the relaxed-well-formed structure obviously cov-ers the well-formed one. In this structure, we don X  X  constrain that all the children of the sub-root should be complete. Let X  X  review the dependency tree in Figure 2 as an example. Except for the well-formed structure, we could also extract girl found a beautiful house . Therefore, if the modifier The lovely changes to The cute , this rule also works. (Koehn et al., 2003) introduced the concept of lexical weighting to check how well words of the phrase translate to each other. Source word f aligns with target word e , according to the IBM model 1, the lexical translation probability is p ( e | f ) . However, in the sense of dependency relationship, we believe that the generation of the target word e , is not only triggered by the aligned source word f , but also associated with f  X  X  head ability becomes p ( e | f  X  f  X  ) , which of course allows for a more fine-grained lexical choice of the target word. More specifically, the probabil-ity could be estimated by the maximum likelihood (MLE) approach,
Given a phrase pair f , e and word alignment a , and the dependent relation of the source sen-tence d J I is the length of the target sentence). Therefore, given the lexical translation probability distribu-tion p ( e | f  X  f  X  ) , we compute the feature score of a phrase pair ( f , e ) as p ( e | f , d J 1 , a )
Now we get p ( e | f , d J p ( f | e, d I 1 , a ) ( d I 1 represents dependent relation of the target side) in the similar way. This new fea-ture can be easily integrated into the log-linear model as lexical weighting does. In this section, we describe the experimental set-ting used in this work, and verify the effect of the relaxed-well-formed structure filtering and the new feature, head word trigger. 5.1 Experimental Setup Chinese-English translation task with two differ-ent size of training corpora.  X  FBIS : We use the FBIS corpus as the first  X  GQ : This is manually selected from the For language model, we use the SRI Language Modeling Toolkit (Stolcke, 2002) to train a 4-gram model on the first 1/3 of the Xinhua portion of GIGAWORD corpus. And we use the NIST 2002 MT evaluation test set as our development set, and NIST 2004, 2005 test sets as our blind test sets. We evaluate the translation quality us-ing case-insensitive BLEU metric (Papineni et al., 2002) without dropping OOV words, and the feature weights are tuned by minimum error rate training (Och, 2003).

In order to get the dependency relation of the training corpus, we re-implement a beam-search style monolingual dependency parser according to (Nivre and Scholz, 2004). Then we use the same method suggested in (Chiang, 2005) to extract SCFG grammar rules within dependency constraint on both sides except that unaligned words are allowed at the edge of phrases. Pa-rameters of head word trigger are estimated as de-scribed in Section 4. As a default, the maximum initial phrase length is set to 10 and the maximum rule length of the source side is set to 5. Besides, we also re-implement the decoder of Hiero (Chi-ang, 2007) as our baseline. In fact, we just exploit the dependency structure during the rule extrac-tion phase. Therefore, we don X  X  need to change the main decoding algorithm of the SMT system. 5.2 Results on FBIS Corpus A series of experiments was done on the FBIS cor-pus. We first parse the bilingual languages with monolingual dependency parser respectively, and then only retain the rules that both sides are in line with the constraint of dependency structure. In Table 1, the relaxed-well-formed structure filtered out 35% of the rule table and the well-formed dis-carded 74%. RWF extracts additional 39% com-pared to WF , which can be seen as some kind of evidence that the rules we additional get seem common in the sense of linguistics. Compared to (Shen et al., 2008), we just use the dependency structure to constrain rules, not to maintain the tree structures to guide decoding.
 Table 2 shows the translation result on FBIS. We can see that the RWF structure constraint can improve translation quality substantially both at development set and different test sets. On the Test04 task, it gains +0.86% BLEU, and +0.84% on Test05. Besides, we also used Shen et al. (2008) X  X  WF structure to filter both sides. Al-though it discard about 74% of the rule table, the Table 1: Rule table size with different con-straint on FBIS. Here HPB refers to the base-line hierarchal phrase-based system, RWF means relaxed-well-formed constraint and WF represents the well-formed structure.
 Table 2: Results of FBIS corpus. Here Tri means the feature of head word trigger on both sides. And we don X  X  test the new feature on Test04 because of the bad performance on development set. * or ** = significantly better than baseline ( p &lt; 0 . 05 or 0.01, respectively). over-all BLEU is decreased by 0.66%-0.78% on the test sets.

As for the feature of head word trigger, it seems not work on the FBIS corpus. On Test05, it gets the same score with the baseline, but lower than RWF filtering. This may be caused by the data sparseness problem, which results in inaccurate parameter estimation of the new feature. 5.3 Result on GQ Corpus In this part, we increased the size of the training corpus to check whether the feature of head word trigger works on large corpus.

We get 152M rule entries from the GQ corpus according to (Chiang, 2007) X  X  extraction method. If we use the RWF structure to constrain both sides, the number of rules is 87M, about 43% of rule entries are discarded. From Table 3, the new Table 3: Results of GQ corpus. * or ** = sig-nificantly better than baseline ( p &lt; 0 . 05 or 0.01, respectively). feature works well on two different test sets. The gain is +2.21% BLEU on Test04, and +1.33% on Test05. Compared to the result of the baseline, only using the RWF structure to filter performs the same as the baseline on Test05, and +0.99% gains on Test04. This paper proposes a simple strategy to filter the hierarchal rule table, and introduces a new feature to enhance the translation performance. We em-ploy the relaxed-well-formed dependency struc-ture to constrain both sides of the rule, and about 40% of rules are discarded with improvement of the translation performance. In order to make full use of the dependency information, we assume that the target word e is triggered by dependency edge of the corresponding source word f . And this feature works well on large parallel training corpus.

How to estimate the probability of head word trigger is very important. Here we only get the pa-rameters in a generative way. In the future, we we are plan to exploit some discriminative approach to train parameters of this feature, such as EM al-gorithm (Hasan et al., 2008) or maximum entropy (He et al., 2008).

Besides, the quality of the parser is another ef-fect for this method. As the next step, we will try to exploit bilingual knowledge to improve the monolingual parser, i.e. (Huang et al., 2009). This work was partly supported by National Natural Science Foundation of China Contract 60873167. It was also funded by SK Telecom, Korea under the contract 4360002953. We show our special thanks to Wenbin Jiang and Shu Cai for their valuable suggestions. We also thank the anonymous reviewers for their insightful com-ments.

