 Social networks enable users to create different types of per-sonal items. In dealing with serious information overload, the major problems of social recommendation are sparsity and cold start. In existing approaches, relational and het-erogeneous domains can not be effectively utilized for social recommendation, which brings a challenge to model users and multiple types of items together on social networks. In this paper, we consider how to represent social networks with multiple relational domains and alleviate the major prob-lems in an individual domain by transferring knowledge from other domains. We propose a novel Hybrid Random Walk (HRW), which can integrate multiple heterogeneous domain-s including directed/undirected links, signed/unsigned links and within-domain/cross-domain links into a star-structured hybrid graph with user graph at the center. We perform random walk until convergence and use the steady state dis-tribution for recommendation. We conduct experiments on a real social network dataset and show that our method can significantly outperform existing social recommendation ap-proaches.
 H.3.3 [ Information Search and Retrieval ]: Information Filtering; J.4 [ Computer Applications ]: Social and Be-havioral Sciences Algorithms, Experimentation Social Recommendation, Relational Domains, Star-Structured Graph, Hybrid Random Walk, Transfer Learning
Social networks enable users to create different types of personal items, including web posts (e.g., tweets on Twit-ter, articles on Facebook), videos, user labels and interest groups, which form multiple item domains. A huge vol-ume of items from these domains diffuse via user graph and result in serious information overload. Most existing rec-ommender systems deployed for web post re-ranking suffer from the data sparsity and cold start problems. One related solution is to characterize latent features of each user inde-pendently by regularizing vectors according to information from auxiliary domains [12, 19]. On social networks, how-ever, multiple types of items are not solely related to the characteristic or interest of one user himself. For example, users read web posts of other people; they edit user label-s similar to their friends or colleagues; they watch videos uploaded by one another. It is the user graph that these items rely on to be diffused and adopted. Another approach is to learn individuals X  preferences by connecting directly-related item domains such as a track and tags on the track [11], web pages and queries to them [27]. Yet this does not apply to multiple indirectly-related item domains on social networks, eg., web posts like tweets, images [28], videos that one recommends, and user labels that label one X  X  identity and interest. Rather, they are tightly connected with mass users who form the user graph and different domains jointly reflect users X  intrinsic preferences and tie strength.
Among multiple domains on social networks, social do-main, which consists of users and social relation links (in-cluding undirected friendship links in Facebook and direct-ed follow links in Twitter), forms a weighted user graph. It plays a central role and we can treat all item domains as peripherals in a star-structured graph centered at social domain. Consequently, all items in peripheral domains are generated by users and propagated over social relations in social domain, which serves as the cross-domain links. An example of this structure is shown in Figure 1.

When conducting social recommendation, tie strength (of-ten referred to as social influence [16, 3] or social trust [10]) on the central social domain is a very important factor. From the view of Homophily [1], users are more likely to have stronger ties if they share similar characteristics. Here cross-domain links to different peripheral domains reflect users X  characteristics from different aspects. For example, a cross-domain link from a user in social domain to a web post in Figure 1: An example of hybrid high-order star-structured graph. 4 different item domains surround social domain. web-post domain about Iphone shows the user X  X  short-term interest in Iphone, while a cross-domain link to a user label Iphone Fans shows the user X  X  long-term interest in Iphone. Clearly the more auxiliary domain knowledge we have, the more we know about the users and the more accurate we can estimate the user tie strength. We can hence get bet-ter recommendation performance, especially when the tar-get domain is extremely sparse. A simple example is, when a user and his friend have many common user labels, we can update their tie strength stronger and expect that they will adopt (share the articles, movie or source links, forward or comment the tweet, etc.) similar web posts in web-post domain, and vice versa.

Hence we clearly declare that such knowledge transfer pro-cedures among multiple relational domains should focus on updating user tie strength on social domain together. We transfer knowledge from auxiliary domains to work on a s-parse target domain through the principal medium of user graph, but it still remains a difficult problem because both within and cross domain correlations are complex. How to collaboratively and deeply integrate multiple domains to dis-cover the common knowledge and accordingly alleviate the sparsity and cold start problems in each individual domain is rather challenging, because: (1) These domains are relational and have complex link structures. Besides cross-domain links from social domain to other peripheral domains, there are rich within-domain links in each relational domain. For example, in social domain, users are linked by social relations; in web-post domain and user-label domain, web posts and user labels are linked by semantic similarity; in interest-group domain, groups are linked by common members, etc. How to effectively utilize rich links poses a challenge to method capability. (2) These domains are heterogeneous. Some within-domain links are directed, e.g., the follow links in social domain from Twitter-style microblogging platforms. Some of these links are undirected, for example, the semantic similarity links within the web-post domain. Some cross-domain links are signed, such as the cross-domain links to web-post domain where we know which posts are adopted and rejected by users. Some are unsigned, e.g., the cross-domain links to the user-label domain where we cannot observe and infer the rejection behavior, because people edit their own user labels instead of choosing from recommended user labels. How to transfer knowledge across these different domains despite their information heterogeneity poses a challenge to method comprehensibility. (3) These domains are sparse, although the sparsity of them may be different. The sparsity problem is essentially caused by the fact that we have a very large volume of user-s, a limited level of attention and time for each user. It is a major challenge to make the best use of limited informa-tion available despite the fact that it comes from different domains.

In order to address with the above problems, we propose anovel Hybrid Random Walk (HRW) method for transfer-ring knowledge on a star-structured graph and apply it for social recommendation, which is a fundamental and practi-cal problem that needs a reasonable solution. It estimates a proper relevance score between any two nodes within one do-main or across the social domain and an item domain. Such scores can represent user tie strength between two users on the social domain, item similarity between two items on the item domain and cross-domain correlations that represent to what degree a user adopts or rejects an item. Our method integrates the knowledge from all the multiple relational do-mains, which alleviates sparsity and cold-start problems for social recommendation.

It is worthwhile to highlight our contribution as follows: (1) We propose an effective method to transfer knowledge across multiple relational domains on social networks, which is capable of incorporating heterogeneous graphs with di-rected/undirected links, within-domain/cross-domain links and signed/unsigned links. This method can be widely and naturally applied in graph-based scenarios, such as social networks and biology networks. (2) We use the proposed Hybrid Random Walk method on a star-structured graph to recommend items on social net-works, conduct intensive experiments on a large real social network dataset, and demonstrate that it can greatly boost the performance. This shows a promising way to solve the sparsity problem of multiple relational domains. (3) The experiments show the importance of user labels for providing recommendation service to inactive or even new users on social networks, who are the most fragile ones that the system should pay more attention to.

The rest of this paper is organized as follows. In Section 2 we review related works and provide necessary background for traditional recommender systems and random walk mod-els. Then we introduce our Hybrid Random Walk method in Section 3. In Section 4 we evaluate this method with com-parative experiments on social network data and analyze the performances. Finally, we conclude the paper in Section 5.
As the problem we focus on is social recommendation, one closely related area is Collaborative Filtering (CF), which is the most popular approach for building recommender sys-tems and has been successfully employed in many applica-tions. CF techniques are divided into two categories: memory-based [23, 4] and model-based [17, 9]. Memory-based algo-rithms are heuristics to recommend by aggregating the pref-erence of similar users. Model-based algorithms learn mod-els to recommend based on patterns recognized in the rat-ing behaviors of users such as clustering methods, bayesian models and matrix factorization algorithms. However, CF methods solely rely on the historical user-item interaction behaviors. For a typical recommendation service, there are not sufficient behaviors of users and items in most cases. Thus CF is fragile to perform recommendation on sparse domains.

To alleviate the data sparsity problem, researchers have introduced methods which incorporate information from sev-eral types of items [15]. Wang et al. [27] propose a rein-forcement clustering method taking into account the simi-larities between related domains. Transfer learning is pre-sented as a common cross-doma in collaborative method for recommender systems which can transfer knowledge from auxiliary data to remedy the sparse target matrix [2, 21, 22]. Multiple rating matrices are shared as useful knowledge in related domains through relational learning methods to alleviate the sparsity problem [24, 25]. Koren et al. [12] introduce matrix factorization techniques allowing the in-corporation of additional information with his Netflix Prize approach. Another work named Matrix Co-factorization [5] incorporates rich user and item information into recommen-dation with implicit feedback. These approaches can not be effectively applied on social network services, because social recommendation is directly driven by the natural and com-plex link structures of user graph, which is not considered in traditional recommender systems.

To solve social recommendation problems, Ma et al. [18, 19] propose a method integrating social network structure and the user-item rating matrix based on probabilistic factor analysis. However, user relationship should be considered for its power on the information transmission. Leskovec et al. [14] present information cascades in the context of recom-mendation. Trust-aware systems [20] take trust worthiness of users as an important consideration of social relation-s. The intractable problem is that tie strength on the user graph is shaped by multiple domains of User Generated Con-tent (UGC) instead of an individual one. Implemented with a Random Walk with Restart (RWR) method, our method incorporates relational and heterogeneous domains together with the user graph at the center.

Several studies exist in the field of applying RWR on item recommendation. Konstas et al. [11] use RWR in order to provide a more natural and efficient way to represent social networks. Random Walk with Restarts model can consider both the explicit user-provided annotations and friendships inherent in the user graph. TrustWalker [10] finds a good trade-off combining the trust-based and the CF approach for recommendation and outperforms both methods in pre-cision. Earlier works on heterogeneous data co-clustering [6] inspire us to develop a new social network representation in which a central type of objects connects the other types to represent inter-relationships. In this paper, we consider the specific structure of multiple social relational domains, model these domains into a star-structure graph, and incor-porate more complex link structures both within and across domains.
In this section we introduce details of our method on a star-structured graph. First let X  X  start with hybrid second-order graph.
Figure 2 shows a real world example of the second-order hybrid star-structured graph, where on the microblogging system each user has his/her own user labels and can send web posts. Those web posts have semantic relationships ac-cording to their contents, and so do the user labels. Note that the graph we are interested in is different from the traditional star-structured graph [7]. The traditional graph does not consider the entity relationships within each do-main, while the hybrid graph considers both within-domain and cross-domain entity relationships.
 Figure 2: An example of the second-order star-structured graph.
Table 1 summarizes some notations that we use to derive the algorithm, and we will also use the following symbols to denote the five subgraphs contained in Figure 2.

User relationships in G U canbecapturedwithdifferen-t ways in different scenarios. For online social networks such as Facebook, such relationships can be user friendship-s, which are undirected. For microbl ogging services such as Twitter, such relationships can be reflected by user follow-ings, which are directed. The relevance from user u i to u is w ( U ) ij = 1ifuser u i is a friend of u j or follows u j
For relationships among web posts in P ,weconstruc-t the TF-IDF representation vector for each post as b i = [ b i 1 ,  X  X  X  ,b ik ,  X  X  X  ,b iK ] in matrix B ( K is the size of vo-cabulary), then adopt the cosine similarity to measure the semantic similarity between post b i and b j as:
For user labels, we use co-occurrence frequency to measure their relationships. Assume that labels t i and t j appear in c and c j tweets as a word, and co-appear in c ij tweets. Then the semantic similarity between them is computed as Till now we have constructed three similarity matrices W encode edge weights for three within-domain subgraphs. We denote their corresponding degree matrices as D ( U ) , D and D ( T ) respectively.
 There are also two cross-domain subgraphs G ( UP ) and G ( UT ) whose edge weights need to be estimated. Since web posts can be adopted or rejected but user labels are edited by users themselves (regarded as adoption), both positive and negative user-post links exist but only positive user-label links exist. These links are presented as undirected edges e ( UP ) ij and e ( UT ) ij , whose weights are calculated as Finally we obtain three weight matrices W ( UP ) + = { w ( UP ) W their corresponding degree matrices as D ( UP ) + , D ( UP )
In this section we derive a random walk algorithm to pre-dict the missing links on G ( UP ) and G ( UT ) , which include both within-domain and cross-domain random walk. For G ( U ) , G ( P ) and G ( T ) , we consider the Random Walk with Restart (RWR) [26] model to derive the steady-state distri-butions, which indicate the intrinsic relevance among user-s, posts and labels. For a standard RWR-based relevance model, a random walker starts from the i -th vertex and iter-atively jumps to other vertices with transition probabilities p i = { p i 1 ,  X  X  X  ,p in } ,with p ii =1  X   X  . After reaching the steady-state, the probability of the random walker staying at the j -th vertex corresponds to the relevance score of ver-tex j to i . Specifically, the transition probability matrices are computed as the row-normalized weight matrices (whose diagonal line are all zeros): The final steady-state probability matrices can be obtained by iterating the following updates: R ( T ) ( t + 1) are the state probability matrices at time t and t +1, 0  X   X ,  X ,  X   X  1 are the prior probabilities that the random walker will leave its current state. It can be easily shown that the above iterations will finally converge to the following steady state matrices when t  X  X  X  [29].
 For cross-domain random walk, we compute the transition probability matrices as probability that user u i will/will not like post p j , p represents the transition probability that user u i will own label t j .
 Figure 3: Transition routes we consider when up-dating cross-domain transition probability matrix.
In social problems, we simultaneously learn relevance s-cores between each pair of users as R ( U ) = { r ( U ) ij finally reflect the tie strength on realistic user graph. Ele-ment r ( U ) ij represents the probability that a random walker jumps from user u i to u j . Now we consider the above transi-tion paths and estimate the transition probabilities p ( UP ) Figure 4: Transition routes we consider when up-dating within-domain transition probability matrix on the user subgraph. p p p p r ) where 0  X   X ,  X ,  X ,  X  ( P ) , X  ( T ) , X  ( U )  X  1 are the parameters for trading off the importance of different transition routes. Note that for the update of cross-domain transition proba-bility matrices (Eq.(9) to Eq.(11)), we consider two types of routes shown in Figure 3. We also assume that the update of cross-domain transition probability matrices will affect the within-domain transition probability matrix of the user subgraph. The updating rule Eq.(12) considers three routes shown in Figure We can further give the matrix form of the above equation, showing the update of transition probability from time t to t +1.
  X  puted for the next random walk step. Algorithm 1 summa-rizes the whole procedure of the second-order star-structured graph-based iteratively random walk method for predicting post and label adoptions. The space complexity of this al-gorithm is O ( m 2 + n 2 + l 2 +2 m ( n + l )). And the time complexity is O (( m 2 +4 m ( n + l )+2( n 2 + l 2 )) mT ), where T is the number of iterations.
 Algorithm 1 Iterative Adoption Prediction through Ran-dom Walk over a Second-Order Star-Structured Graph Require: 0  X   X ,  X ,  X ,  X ,  X ,  X ,  X  ( P ) , X  ( T ) , X  ( U )  X  2: Compute transition probabilities P ( U ) , P ( P ) and P 3: Derive steady-state distributions R ( U ) , R ( P ) and R 4: Initialize the transition probability matrices P ( UP ) 5: for t=1:T do 6: Compute the user state distributions R ( U ) ( t )and 7: end for 8: Output: The final transition probability matrices R ( U )
In Section 3.1, we assume that there are two types of item domains, web posts and user labels, associated with each us-er. However, online social network is such an unprecedented comprehensive platform where there are a number of differ-ent types of UGC, e.g., posts, labels, musics and movies. In this case, the second-order graph is not enough to describe all the contents. Figure 1 shows a typical example of the hybrid high-order star-structured graph when there are four different types of UGC. We need a method to predict us-er behaviors on various item domains. Actually the random walk strategy we have introduced in the previous section can be easily extended to high-order cases. For notational con-venience, we first introduce some notations in Table 2. We further use the following symbols to represent the different subgraphs contained in the high-order hybrid graph.
D = { D 1 ,D 2 ,  X  X  X  ,D N } The set of item domains
With the individual domain knowledge on G ( U ) and {G ( D we construct their corresponding edge weight matrices W ( U ) and { W ( D i ) } N i =1 . Thus the within-domain transition prob-ability matrices can be obtained by ( i =1 ,  X  X  X  ,N ) where D ( U ) and { D ( D i ) } N i =1 are the degree matrices induced by W ( U ) and { W ( D i ) } N i =1 . The final steady-state probabil-ity matrices can be iteratively calculated by where i =1 , 2 ,  X  X  X  ,N, 0  X   X ,  X  1 ,  X  X  X  , X  N  X  1.
For cross-domain subgraphs {G ( UD i ) } N i =1 ,wealsocalcu-late the edge weight matrices { W ( UD i ) } N i =1 based on the us-er interactions with other item domains {D i } N i =1 .Thusthe cross-domain transition probability matrices can be comput-ed as (with i =1 ,  X  X  X  ,N ) When updating the cross-domain transition probability ma-trices, we also consider the transition routes shown in Figure 3 and Figure 4, so that they can be updated using the fol-lowing rules ( i =1 , 2 ,  X  X  X  ,N ).
 where 0  X   X  i , X  i , X  i  X  1( i =1 , 2 ,  X  X  X  ,N ) are the tradeoff parameters. For a domain D i without negative user-item links, the updating process of user tie strength R ( U ) sets  X  =1.

Algorithm 2 summarizes the whole procedure of random walk on high-order hybrid star-structured graph for pre-dicting user adoptions on different item domains. The s-pace complexity of Algorithm 2 is O ( m 2 +2 m |D i | + |D i | 2 ). And the time complexity is O (( m 2 +4 m |D i 2 |D i | 2 ) mT ), where T is the number of iterations. In prac-tice, we only need to check users that are in a small commu-nity or circle and it takes only a few iterations to converge.
In this section, we introduce experimental results of apply-ing our hybrid random walk method to a real world dataset, which is a second-order star-structured graph with web posts and user labels as two item domains. We evaluate the social recommendation performance on user-post adoption and re-jection links. The dataset we use is crawled during January 2011 from Tencent Weibo website ( t.qq.com ), which is a Twitter-style microblogging service in China. We crawled data from users who own at least one user label, 17.2% of total. While the website allows users to edit at most 9 labels, the average number of labels per user we have is 6.2. We did not filter any social relationships. The average number of friends per user is 20.6.
 Algorithm 2 Iterative Adoption Prediction through Ran-dom Walk over a High-Order Hybrid Star-Structured Graph 2: Compute transition probabilities P ( U ) and { P ( D i 3: Derive steady-state distributions R ( U ) and { R ( D i 4: Initialize the transition probability matrices 5: for t =1: T do 6: Compute the user state distributions R ( U ) ( t )and 7: end for 8: Output: The final transition probability matrices R ( U )
Table 3 summarizes the basic information contained in the dataset, where we have 53,438 users, 141,879 web posts and 111 user labels. Both web-post and user-label domains are sparse but in different levels, i.e., the positive density, which represents the percentage of positive observed links between every user and item, of web-post domain is 0.02% and the negative density is 0.04%, while the density of user-label domain is 5.57%, which is nearly 100 times higher.
We present our experimental settings in detail in this sec-tion, including how we collect negative examples, i.e., user-item rejection links, and parameter settings.

In social network analysis, negative examples reveal facts on information adoption and help improve the recommen-dation performance [13]. However, we cannot observe user-item rejection behaviors from crawled data. Here we esti-mate the negative links in the following steps: (1) We collect the items that each user receives from his/her friends or fol-lowers. The social networking system organizes these items in chronological order. (2) We observe user adoptions to set up a time window (the time period before adopting items) within which users are considered online and having read all items that were sent during the period. (3) We identify re-jected items (negative examples) as those received by a user within a 5-minute time window but never got adopted. Lat-er, we will show the benefits of using the estimated negative samples.

With regard to parameter settings, we tune  X  and  X  as the relative weights of user tie strength over item similarity on user-post and user-label link prediction,  X  as the relative weight of positive samples over negative samples on user-post link prediction,  X  ( P ) and  X  ( T ) as the relative weights of cross-domain links from web-post domain over user-label do-main on influencing user tie strength. All parameters range from 0 to 1 and we tune them by gradient search to explain more on our method. We set the step length as 0.001 and in each iteration find the direc tions of these 5 parameters (  X  ,  X  ,  X  ,  X  ( P ) and  X  ( T ) ) to reduce the error metrics.
We adopt three types of evaluation measures: reconstruc-tion error, prediction accuracy and ranking-based metrics.
We first prove the rationality and necessity of the matrices in our Hybrid Random Walk method, and then we compare it with several state-of-the-art algorithms. Table 4 shows the comparison of our method and its different configura-tions. These algorithms learn within-domain links in social domain, web post domain and user-label domain from W ( U ) W ( P ) and W ( T ) , and learn user tie strength of user graph by updating R ( U ) , i.e., weights on social links. The methods predict user-post links with Bipartite Random Walk (BRW), if they take no use of rich knowledge from user-label domain. Besides the RWR models, we take the newest matrix fac-torization algorithm which incorporates rich user and item information, and a standard collaborative filtering method as baselines.
 Table 4: Comparison of Our Method (HRW) and Different Configurations.

In this section, we demonstrate the prediction performance of the proposed method. We randomly select 80% of user-post links for training and the remaining for testing, while user-label links are completely utilized. This random selec-tion is carried out 20 times independently. Table 5 and 6 compare the performances of our method with its differen-t configurations and with the above baselines, respectively, on the average results and standard deviations of evalua-tions including the MAE, precision, recall, F1 measure and Kendall X  X  ranking-based method. Our method achieves the best performance in experimental trials and it is insensitive to initialization.

From Table 5, we can observe that:
From Table 6, we can observe that:
In this section we discuss the insights we have gained from experimental results. Specifically, we want to discuss three questions. (1) Are item similarity and tie strength important in pre-dicting user-post links?
On web-post domain,  X  is the weight of tie strength over web post similarity in calculating links. If  X  increases, users are more likely to accept the recommended posts for their social relationships than preferences.  X  is the corresponding weight on user-label domain. Figure 5(a) shows the perfor-mances varying  X  and  X  from 0 to 1. For  X  ,  X  =0means prediction without considering item similarity, while  X  =1 means prediction without considering social tie strength. From the figure we can clearly observe a valley when  X  is around 0.4, which means that incorporating both tie strength and post similarity can significantly improve the performance. Similar trends can be observed from the changing MAE curves when we vary  X  . (2) Are user-post and user-label links important in influ-encing user tie strength?  X  ( P ) and  X  ( T ) correspond to the weights of knowledge learned from user-post and user-label links on calculating the tie strength, with  X  ( P ) +  X  ( T ) = 1. Figure 5(b) shows the MAE varying  X  ( P ) from 0 to 1. When  X  ( P ) = 1, i.e., we discard the knowledge transferred from user-label links on tie strength, the resultant MAE is around 0.28. When  X  ( P ) = 0, i.e,  X  ( T ) = 1, MAE is around 0.26, which can be explained that user-label domain is more helpful in predict-ing tie strength since it is easier for congenial users to share the same user labels than the same posts. The minimum MAE (  X  ( P ) =0 . 6) suggests that knowledge from user-label links provides potential clues on user-post link prediction through user tie strength and recommender systems should incorporate these two kinds of links. (3) Are negative samples of web-post domain helpful?  X  is the relative weight of positive samples from web-post domain influencing user tie strength, while 1  X   X  is that of negative samples. Figure 5(c) shows the changing curve of MAE when varying  X  from 0 to 1. When  X  =1(onlytrain positive samples) and  X  = 0 (only train negative samples), the MAE is higher than taking both samples for training (  X  =0 . 6). This means that considering both positive and negative samples in the recommendation procedure would be very helpful for the final algorithm performance. MAE is lower with only negative samples than with only positive ones.

The above discussion proves that our method is reasonable and effective, which considers comprehensive factors on user behavior and user tie strength while taking both positive and negative samples seriously.
In this section, we show the performance of HRW when we control the density of training entries of testing users (the percentage of training user-post links per testing user, testing item), and compare its performance with the version without using knowledge transferred from user-label domain (BRW-R U -P) as the baseline, and the results are shown in Figure 6. If no training entry is hidden, where the density of training entries of testing users is 0.06%, our model reduces MAE by 11.3% over the baseline (0.227 over 0.256). If we hide all training entries, i.e., the density of training entries of testing users is zero, which means the testing users are new in the application without previous behaviors in the histor-ical dataset, our model reduces MAE by 34.4% (0.288 over 0.387). From Figure 6, we observe that the performance gain increases as the cold start problem becomes more seri-ous. Moreover, our transfer learning model needs only 29.5% of the training entries (0.018% dense) to reach the same lev-el performance of BRW-R U -P with the whole training set (0.061% dense), which saves 70.5% of training information. With user label of a new user, our method needs only 3-day historical data to reach the same recommendation perfor-mance of 10-day data without labels. Therefore, if we mo-tivate new users to add several user labels, the transferred knowledge from user-label domain would greatly improve user experience on personal recommendation services. In this paper, we address the problems of sparsity and Figure 6: Performance of our transfer learn-ing method (HRW) and one without transferring method (BRW-R U -P) on the cold start problem. cold start in social recommendation. Here we rethink the problem from the transfer learning perspective and alleviate the sparsity problem in the target domain by transferring knowledge from other auxiliary social relational domains. By considering the special structures of multiple relation-al domains in social networks, we propose a novel Hybrid Random Walk method on a star-structured graph, which is a general method to incorporate complex and heteroge-neous link structures, including directed/undirected links, sign/unsigned links and within-domain/cross-domain links.
We have conducted extensive experiments on a large real-world social network dataset and showed that the proposed method can greatly boost the social recommendation per-formance. In particular, we have gained improvement in web post recommendation by transferring knowledge from user-label domain for user tie strength updating process, compared with the recommendation methods which sole-ly use the information in web-post domain. Also, we have demonstrated that, by using only 29.5% of the available in-formation in the target domain, our method can achieve equal performance with the methods that use all the avail-able information in target domain without transfer learning. The proposed method and insightful experiments indicate a promising and general way to solve the sparsity problem in different real-world recommendation scenarios.
This work is supported by the Natural Science Founda-tion of China (No.60933013, No.61003097), 973 Program (No.2011CB302206), National Significant Science and Tech-nology Projects of China (No.2011ZX01042-001-002) and Tsinghua-Tencent Joint Lab for Internet Innovation Tech-nologies. [1] J. Brown, A. J. Broderick, and N. Lee. Word of [2] B. Cao, N. N. Liu, and Q. Yang. Transfer learning for [3] P. Cui, F. Wang, S. Liu, M. Ou, S. Yang, and L. Sun. [4] M. Deshpande and G. Karypis. Item-based top-n [5] Y. Fang and L. Si. Matrix co-factorization for [6] B. Gao, T. Liu, and W. Ma. Star-structured [7] B. Gao, T. Liu, X. Zheng, Q. Cheng, and W. Ma. [8] M. Gori and A. Pucci. Itemrank: A random-walk [9] M. Harvey, M. J. Carman, I. Ruthven, and [10] M. Jamali and M. Ester. Trustwalker: A random walk [11] I. Konstas, V. Stathopoulos, and J. M. Jose. On social [12] Y. Koren, R. Bell, and C. Volinsky. Matrix [13] J. Kunegis, A. Lommatzsch, and C. Bauckhage. The [14] J. Leskovec, A. Singh, and J. Kleinberg. Patterns of [15] Y.Li,J.Hu,C.Zhai,andY.Chen.Improving [16] L. Liu, J. Tang, J. Han, M. Jiang, and S. Yang. Mining [17] N. N. Liu, M. Zhao, and Q. Yang. Probabilistic latent [18] H. Ma, H. Yang, M. R. Lyu, and I. King. Sorec: Social [19] H. Ma, D. Zhou, C. Liu, M. R. Lyu, and I. King. [20] P. Massa and P. Avesani. Trust-aware recommender [21] S. J. Pan and Q. Yang. A survey on transfer learning. [22] W. Pan, E. W. Xiang, N. N. Liu, and Q. Yang. [23] B. Sarwar, G. Karypis, J. Konstan, and J. Reidl. [24] A. P. Singh and G. J. Gordon. Relational learning via [25] L. Tang and H. Liu. Relational learning via latent [26] H. Tong, C. Faloutsos, and J. yu Pan. Fast random [27] J. Wang, H. Zeng, Z. Chen, H. Lu, L. Tao, and W.-Y. [28] M. Wang, K. Yang, X.-S. Hua, and H. Zhang. Towards [29] X. Zhu, Z. Ghahramani, and J. Lafferty.

