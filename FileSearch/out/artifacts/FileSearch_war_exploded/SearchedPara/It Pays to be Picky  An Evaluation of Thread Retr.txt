 Online forums host a rich information exchange, often with contributions from many subject matter experts. In this work we evaluate algorithms for thread retrieval in a large and active online forum community. We compare methods that utilize thread structure to a na  X   X ve method that treats a thread as a single document. We find that thread structure helps, and additionally selective methods of thread scoring, which only use evidence from a small number of messages in the thread, significantly and consistently outperform inclu-sive methods which use all the messages in the thread. H.3.3 [ Information Search and Retrieval ]: Miscella-neous Algorithms, Measurement, Experimentation online forums, message boards, thread search
Online forums contain a wealth of user generated content over a wide range of topics: from computer hardware to movies reviews and commentary to specific health issues. The contributors to online forums are often domain experts and these social information spaces host in some cases many millions of archived messages. Access to forum archives, however, is often rudimentary  X  these services provide basic browsing interfaces and simple keyword message-searching facilities. In this paper we explore the problem of informa-tion access in online forum data.

In online forums, messages are typically grouped into mes-sage threads , representing a conversation between a group of contributors. A message thread has a single start mes-sage and zero or more response messages . Message threads are frequently displayed chronologically in a  X  X lat X  structure where each message in the thread has at most one response.
There has been little previous research dealing specifi-cally with search in online forums. Several studies have looked at knowledge extraction, identifying question-answer pairs [1] or responses that relate to a previous question in the thread [2]. Similar to a retrieval task, Feng et al. [4] devel-oped a  X  X iscussion-bot X , which responds to new forum posts with automatically identified related questions and answers. The question-matching component of this system retrieves likely answers with a vector-space TF-IDF ranking formula.
The work presented here uses a recent crawl of an active, technically-oriented online forum, the MacRumors Forum (http://forums.macrumors.com), which hosts discussion re-lating to the computer manufacturer, Apple, Inc. The crawl was conducted in March of 2008, and contains over 3 million messages organized into almost 375,000 message threads.
We make the assumption that the typical useful unit of retrieval for online forum search is the message thread . Al-though this is certainly not always the case  X  a single mes-sage may fully answer an information need  X  the thread provides useful conversation context and discussion. When viewing the forum, a thread-view is typically most conve-nient. Additionally, 86% of the intra-forum links in this dataset refer to other threads, rather than posts or other possible units of retrieval.

Because of the difficulty in accessing the forum archives, users often post questions to messages boards that may have been answered in previous threads in the archive. When this happens, another user occasionally responds to that question with a link to a previous discussion possibly containing the answer. We can leverage this interaction between users to build an information retrieval test collection  X  the original question can be considered a query and the linked-to thread a relevant document.

To build a thread-retrieval test collection, we identified 48 instances of question/answer-link pairs in this collection. A thread contains a question-answer pair when (1) a re-sponse message provides a hyperlink to a previous thread in the forum, (2) the start message in this thread contains a question that is answered by the linked-to thread and (3) subsequent response messages in the thread do not indicate the linked-to thread is irrelevant. Of the identified answers, 78% contain only a single linked-to thread. We generated keyword queries from the question messages by manually extracting terms and phrases from the question text.
We apply a variety of retrieval models to thread search in online forums, all based on the language modeling frame-work. We assume term independence and Dirichlet smooth-ing with the following estimation [6]: where q  X  Q are the query terms, n ( q,D ) is the term count of q in D , | D | is the document length, and P ( q | C ) is the col-lection language model. In all of the following models, query likelihoods are estimated with Equation 1. The models dif-fer in their definition of the document D and how evidence from the messages is combined into a thread score. All of these models assume a uniform thread prior P ( T ).
The first of these models are taken from previous work in blog feed search [3], a similar task to thread ranking in that the unit of retrieval is collections of documents. We refer to these as inclusive retrieval models which consider evidence from each of the messages when producing a thread score. The large document ( LD ) and small document ( SD ) models are given below.
 where T is the thread, Q is the query, and M  X  T are the messages. In the large document model, the thread language model is estimated through a concatenation of the thread X  X  constituent messages. This model represents how a general-purpose web search engine may retrieve message threads, indexing the entire thread content as a single document and ignoring the message-thread structure. In the small document model the thread language model is estimated through a weighted mixture of the messages X  language mod-els. This weighting is controlled via the message likelihood, P ( M | T ). We consider two message likelihood formulations, both shown to be effective in blog feed search [3]: a uniform likelihood P U ( M | T )  X  1 and a  X  X entrality X  likelihood, favor-ing messages that more closely resemble the overall thread P form a probability distributions over messages in a thread.
The next set of retrieval models we consider selective in that they use evidence only from a few of the messages in the thread. These models are given by: where M 0 represents the thread X  X  start message. The first model, pseudo-cluster selection (Equation 2, PCS ), has also effectively been applied to blog search [5]. In this model, threads are scored by the geometric mean of the top-k mes-sage scores. We fix k = 5, which has been shown to perform well in a variety of other applications. The second model (Equation 3, MAX ) also selects messages based the mes-sage rank with respect to the query. Note that this model is equivalent to the PCS model when k = 1. The third model (Equation 4, START ) favors messages earlier in the thread. In this case the thread score is equal to the score of the start message.
Due to the limited relevance information available in this test collection, we must avoid treating all un-judged doc-uments as non-relevant. For this reason, we focus on a recall-oriented evaluation, reporting recall at various cutoffs (R@ N ), as well as Mean Reciprocal Rank (MRR) which is well suited for retrieval tasks when only a single relevant document is known. In these results (Table 1), we can
Table 1: Performance results, thread ranking. clearly see that the large-document model, which ignores the message-thread structure, does not perform as well as the models that leverage this structure by scoring the mes-sages individually. Additionally, we see that the selective models consistently outperform the inclusive models. In all cases except R@100, the best performing selective model sig-nificantly outperforms the LD and SD + C retrieval models using a 2-tailed paired t-test. These results demonstrate that
In this paper explore the problem of thread search in on-line forums. We apply several state-of-the-art retrieval mod-els from blog feed search to this task. We show that recog-nizing the message-structure helps and selective methods, which only look at a few of the messages in the thread, significantly and consistently outperform inclusive methods, which use evidence from all the messages in the thread. [1] G. Cong, L. Wang, C.-Y. Lin, Y.-I. Song, and Y. Sun. [2] S. Ding, G. Cong, C. Lin, and X. Zhu. Using [3] J. L. Elsas, J. Arguello, J. Callan, and J. G. Carbonell. [4] D. Feng, E. Shaw, J. Kim, and E. Hovy. An intelligent [5] J. Seo and W. B. Croft. Blog site search using resource [6] C. Zhai and J. Lafferty. A study of smoothing methods
