 Traditional recommender systems minimize prediction error with respect to users X  choices. Recent studies have shown that recom-mender systems have a positive effect on the provider X  X  revenue.
In this paper we show that by providing a set of recommenda-tions different than the one perceived best according to user ac-ceptance rate, the recommendation system can further increase the business X  utility (e.g. revenue), without any significant drop in user satisfaction. Indeed, the recommendation system designer should have in mind both the user, whose taste we need to reveal, and the business, which wants to promote specific content.

We performed a large body of experiments comparing a commer-cial state-of-the-art recommendation engine with a modified rec-ommendation list, which takes into account the utility (or revenue) which the business obtains from each suggestion that is accepted by the user. We show that the modified recommendation list is more desirable for the business, as the end result gives the business a higher utility (or revenue). To study possible reduce in satisfaction by providing the user worse suggestions, we asked the users how they perceive the list of recommendation that they received. Dif-ferences in user satisfaction between the lists is negligible, and not statistically significant.

We also uncover a phenomenon where movie consumers prefer watching and even paying for movies that they have already seen in the past than movies that are new to them.
 I.2.m [ Computing Methodologies ]: ARTIFICIAL INTELLIGENCE X  General Human Modeling, Movies, Recommender Systems
The main goal in designing recommender systems is usually to predict the user X  X  wish list and to supply her with the best list of recommendations. This trend is prevalent whether we consider a social network recommending friends [2], consumer goods [14] or movies [11].

However, in most cases, the engineers that design the recom-mender system are hired by the business which provides the sug-gestions (in some cases the web-site buys a recommendation engine from a third party -but also in these cases the site is paying for the recommendations). The business X  end goal is usually to increase sales, revenues, user engagement, or some other metric. In that sense, the user is not the end customer of the recommendation sys-tem, although she sees the recommendations [13]. Still, one could argue that it is better for the business to give the user the best possi-ble recommendations, as it will also maximize the business X  profit, either in the short run (no point in giving recommendations which are not followed by the users) or at least in the long run (good rec-ommendations make users happy).

In this paper, we provide evidence that a business may gain sig-nificantly by providing users with recommendations that may not be best from the users point of view but serve the business X  needs. We provide an algorithm which uses a general recommender sys-tem as a black-box and increases the utility of the business. We perform extensive experiments with it in various cases. In particu-lar, we consider two settings: 1. The Hidden Agenda setting: In this setting, the business has 2. The Revenue Maximizing setting: In this case the goal of the To study these settings, we conducted experiments on Amazon Mechanical Turk (AMT) in which subjects were asked to choose a set of favorite movies, and then were given recommendations for another set of movies. For each recommendation, the subjects were asked if they would or would not watch the movie 1 . Finally, in or-der to test possible reduce in satisfaction cased by tuning the rec-ommendations to the business X  needs, we asked each subject how good she feels about the recommendations she received.
In the Revenue Maximization setting each recommended movie also came with a price tag. We describe the experiments later in the experiments section.
This form of experimentation makes two assumptions. First, we simulate long term effects by asking users about their satisfaction from the list. Second, we assume that asking users if they are will-ing to pay for a movie is the same as actually taking their money and showing them the movie. Both assumptions are common in the literature (for a comparison between hypothetical and real scenar-ios see [18]). We hope to integrate the algorithm in a real world system to circumvent the assumptions.

Manipulating the recommender system in order to increase rev-enue (or to satisfy some other hidden agenda) raises some ethical concerns. If users believe that a particular algorithm is being used (e.g. collaborative filtering), then they could be irritated if they find out that recommendations are being edited in some way. However, most businesses do not provide the specification of their recom-mender system (treating it as a  X  X ecret sauce"), which diminishes this concern. Furthermore, several companies (including Netflix, Walmart and Amazon) admitted human intervention in their recom-mender system [17], so it may well be that different companies are already tweaking their recommender systems for their own good. In this sense, an important lesson to take away from this work is  X  X sers beware". We show that businesses garner a large gain by manipulating the system, and many companies could be tempted by this increase in revenue. In this paper we proposes a method which allows businesses to mount their existing recommender sys-tem in order to increase their revenue.

An interesting phenomenon that we uncover is that subjects are more willing to pay for movies that they X  X e already seen. While a similar phenomena is known for other types of consumer goods, coming across it with regards to movies is new and somewhat counter-intuitive. Interestingly, in movie watching, two opposite effects come into play: 1. Variety seeking: users want new experiences (see the survey [15] for a model of variety seeking customers). 2. Loyalty: users are loyal to brands that they know and used. It is usually assumed that in movies the former effect is far more dom-inant [12, 7]. Although we supply some explanation for this phe-nomenon, further research is required in order to fully understand it. We note that this phenomena has implications to the design of recommender systems  X  some systems take care not to recommend a movie which was previously watched. Instead, one may be better off recommending movies that the user saw in the past as well.
To summarize, the main contribution of this paper is twofold:
These findings have major consequences for design of recom-mendation systems for movie providers..
Models for predicting users X  ratings have been proposed that are used by recommendation systems to advise their users (See Ricci et al. [19] for a recent review). It has been shown that recommender systems, in general, are beneficial for the providing business [22]. However, most works in this realm do not explicitly try to maximize the system X  X  revenue, but only consider the utility of the user. The works that do try to directly increase the system X  X  revenue usually take a more holistic approach, changing the pricing and using the inner workings of the recommendation system. As far as we know, this is the first work which treats the recommender system as a black box, does not change the pricing and tries to increase the revenue directly.

Pathak et al. [17] study the cross effects between sales, pricing and recommendations on Amazon books. They show that recom-mendation systems increase sales and cause price changes. How-ever, the recommendation systems that they consider are price in-dependent, and the effect on prices is indirect -items which are recommended more are bought more, which affects their price (the pricing procedure used in their data takes popularity into account). They do not consider having the price as an input to the system, and do not try to design new recommendation systems.

Chen et al. [4] develop a recommender system which tries to maximize product profitability. Chen et al. assume the usage of a collaborative filtering recommender system which, as part of its construction, provides a theoretically-based probability that a user will purchase each item. They multiply this probability by the rev-enue from each item and recommend the items which yield the highest expected revenue. However, in practice, many recommender systems do not rely only upon collaborative filtering (which can X  X  be applied to new items or when the data is sparse), but also rely on different engines (such as popularity, semantic similarity, etc.). Even a business using a pure collaborative filtering engine may not necessarily have access to (or may not want to access) the inter-nal workings of their own recommender system. Therefore, we assume a generic recommender system which is treated as a black-box component, and dedicate most of our work to building a human model in order to predict the acceptance rate of a given item using a generic recommender system.

Das et al. [5] provide a mathematical approach for maximizing business revenue using recommender systems. However, they as-sume that as long as the recommendations are similar enough to the customer X  X  own ratings, the customer is likely to follow the rec-ommendations. Therefore, Das et al. do not model the actual drop in user acceptance rate as the item becomes less relevant or as the item price increases, as is done in this work. Similarly, Hosanagar et al. [9] use a mathematical approach to study the conflict which a business confront when using recommender systems. On one hand the business would like to recommend items with higher revenue (margins), but on the other hand it would like to recommend items which the users are more likely to buy. Hosanagar et al. show that in order to increase its total revenue, the business must balance be-tween these two factors. Unfortunately, neither paper provides any actual experimental evaluation with people, as is provided in this paper.

Shani et al. [23] use a discrete-state MDP model to maximize the system X  X  utility function, taking into account the future interactions with their users. In their work, the system may, for example, de-cide to recommend a game console, since, if purchased, the user is likely to purchase many games for it in the future. This approach is not applicable to our domain as we consider a single-shot recom-mendation. Furthermore, in the movie recommendation domain, most movies have very little impact on each other, and watching a certain movie doesn X  X  usually increase or decrease the probability that the user will watch a different movie. In [1] we model the long-term affect of advice given by a self-interested system on the users in route selection problems. In order for the system to maximize its long term expected revenue, we suggest that it uses what we term the  X  X ocial utility" approach. However, in [1] we assume that the user must select his action among a limited number of options and the system merely recommends a certain action. Therefore the system does not act as a classic recommender system, which rec-ommends a limited number of items from a very large corpus. Still, both of the above works may be found useful if combined with the approach given in this paper, when considering repeated interac-tions scenarios.

We now turn to discuss related work to the phenomenon where movie consumers prefer watching movies that they have already seen. The marketing literature contains many examples in which an individual experiencing one type of event is more likely to ex-perience it again. Such examples include unemployment, accidents and buying a specific product (or brand). Heckman [8] discusses two possible explanations: either the first experience changes the individual and makes the second one more likely (e.g. the indi-vidual bought a brand and liked it), or that this specific individual is more likely to have this experience (e.g. a careless driver has a higher probability of being involved in a car accident). Kamakura and Russell [10] show how to segment a market into loyal and non-loyal customers, where the loyal customers are less price sensitive and keep buying the same brand (see the works of [6] and [20] who show that even a very short purchase history data can have a huge impact, and that of [16] which shows that consuming one product from a particular company increases the probability of consuming another product from the same company).

Russel and Levy [21] interviewed 23 subjects regarding repeated experiences. They describe several benefits people might have from rereading a book, re-watching a movie etc. For example, when rereading a book, the person can pay more attention to the lan-guage and the expressions used. Since people X  X  memory is imper-fect, when re-watching a movie, people reconstruct their memory, and this reconstruction may tack back and forth between the actual memory and new knowledge acquired since. The reconstructive experience may add levels of complexity and depth.
In this section we present the Profit and Utility Maximizer Algo-rithm (PUMA). PUMA mounts a black-boxed recommender sys-tem which supplies a ranked list of movies. This recommender system is assumed to be personalized to the users, even though this is not a requirement for PUMA.
In the hidden agenda setting, the movie system supplier wants to promote certain movies. Movies aren X  X  assigned a price. We as-sume that each movie is assigned a promotion value, v ( m ) , which is in V = { 0 . 1 , 0 . 2 ,..., 1 } . The promotion value is hidden from the user. The movie system supplier wants to maximize the sum of movie promotions which are watched by the users, i.e. if a user watches a movie, m , the movie supplier gains v ( m ) ; otherwise it gains nothing.

The first phase in PUMA X  X  construction is to collect data on the impact of the movie rank ( r ( m ) ) in the original recommender sys-tem on the likelihood of the users to watch a movie ( p ( m ) ). To this end we provide recommendations, using the original recommender system, ranked in leaps of a given k (i.e. each subject is provided with the recommendations which are ranked: { 1 ,k,..., ( n  X  1)  X  k + 1 } for the given subject in the original recommender system). We cluster the data according to the movie rank and, using least squared regression, we find a function that best explains the data as a function of the movie rank. We consider the following possible functions: linear, exponent, log and power (see Table 1 for function forms). We do not consider functions which allow maximum points (global or local) which aren X  X  at the edges, as we assume that the acceptance rate of the users should be highest for the top rank and then gradually decrease. Since these functions intend to predict the Table 1: Function forms for considered functions.  X  and  X  are non-negative parameters and r ( m ) is the movie rank. probability of the acceptance rate, they must return a value between 0 and 1 , therefore a negative value returned must be set to 0 (this may only happen with the linear and log functions -however, in practice, we did not encounter this need).

Among the functions that we tested, the linear function turned out to provide the best fit to the data in the hidden agenda setting (it resulted with the greatest coefficient of determination ( R fore, the probability that a user will want to watch a movie as a function of its rank (to the specific user) takes the form of (where  X  and  X  are constants):
Given a new user, PUMA sorts the list of movies which is out-putted by the original recommender system according to its ex-pected promotion value, which is given by: and provides the top n movies as its recommendation.
In this setting, every movie is assigned a fixed price (different movies have different prices). Each movie is also assumed to have a cost to the vendor. PUMA intends to maximize the revenue ob-tained by the vendor, which is the sum of all movies purchased by the users minus the sum of all costs to the vendor.

PUMA X  X  variant for the Revenue Maximizing settings confronts a much more complex problem than the PUMA X  X  variant for the hidden agenda for the following two reasons: 1. There is a direct conflict between the system and the users. 2. PUMA must model the likelihood that the users will watch a movie as a function of both the movie rank and the movie price.

Building a model by learning a function of both the movie rank and the movie price together is unfeasible as it requires too many data points. Furthermore, in such a learning phase the movie sup-plier intentionally provides sub-optimal recommendation, which may result in a great loss. Instead, we assume that the two vari-ables are independent, i.e. if the movie rank drops, the likelihood of the user buying the movie drops similarly for any price group. This assumption was used since we found no correlation between the prices of movies in Amazon and their popularity in IMBD.
In order to learn the impact of the price on the likelihood of the users buying a movie, we use the recommender system as is, pro-viding recommendations from 1 to n . We cluster the data into pric-ing sets where each price (fee f ) is associated with the fraction of users who want to buy a movie ( m ) for that price. Using least squares regression we find a function that best explains the data as a function of the price. We tested the same functions described above (see Table 1 -replace movie rank with movie fee), and the log function resulted with a nearly perfect fit to the data. Therefore, the probability that a user will be willing to pay in order to watch a movie as a function of its fee takes the form of (where  X  and  X  are constants):
In order to learn the impact of the movie rank ( r ) in the rec-ommender system on the likelihood of the users buying a movie, we removed all prices from the movies and asked the subjects if they were willing to pay to watch the movie (without mentioning its price). As in the hidden agenda settings, we provided recom-mendations in leaps of k 0 (i.e. recommendations are in the group { 1 ,k 0 + 1 ,..., ( n  X  1)  X  k 0 + 1 } ). We clustered the data accord-ing to the movie rank and once again using least squared regression we found a function that best explains the data as a function of the movie rank. Among the functions that we tested (see Table 1), the log function turned out to provide the best fit to the data for the movie rank as well (resulting with the greatest coefficient of deter-mination ( R 2 )). Using the log function (which is a convex function) implies that the drop in user acceptance rate between movies in the top rankings is larger than the drop in user acceptance rate within the bottom rankings. The difference in the function which best fits the data between the hidden agenda setting and the revenue maxi-mizing setting is sensible, since, when people must pay for movies they are more keen that the movies be closer to their exact taste, therefore the acceptance rate drops more drastically. The probabil-ity that a user will be willing to pay in order to watch a movie as a function of its rank takes the form of:
A human model for predicting the human willingness to pay to watch a movie, p ( m | r ( m ) ,f ( m )) , requires combining Equations 3 and 4; however this task is non-trivial. Taking p ( m | r ( m ) f ( m ) to be p ( m | r ( m ))  X  p ( m | f ( m )) does not make sense: for example if both signals say that the probability of watching is 0 . 5 then the output should be 0 . 5 and not 0 . 25 . Using this intuition, we assume that Equation 3 is exact for the average rank it was trained upon which is n 2 + 1 . Therefore, by adding a correction term,  X  ( m ) , to Equation 4 we require that Equation 4 gives the same viewing probability as Equation 3 on n 2 + 1 :  X  2 +  X  ( f ( m ))  X   X  2  X  ln ( n Isolating  X  ( m ) we get:  X  ( f ( m )) = (  X  1  X   X  2 ) +  X  2  X  ln ( n Therefore, our human model for predicting the fraction of users who will buy a movie, m , given the movie price, f ( m ) , and the movie rank, r ( m ) (obtained from the recommender system) is: p ( m | r ( m ) ,f ( m )) =  X  2 + ((  X  1  X   X  2 )+ and after simple mathematical manipulations: p ( m | r ( m ) ,f ( m )) =  X  1  X   X  2  X  ln ( r ( m ) n
Once a human model is obtained, PUMA calculates the expected revenue from each movie simply by multiplying the movie revenue with the probability that the user will be willing to pay to watch it (obtained from the model) and returns the movies with the highest expected revenues. The revenue is simply the movie price ( f ( m ) )
Figure 1: A screen-shot of a subject selecting movies he liked minus the movie cost to the vendor ( c ( m ) ). I.e. given a human model, PUMA recommends the top n movies which maximize:
All of our experiments were performed using Amazon X  X  Me-chanical Turk service (AMT). Participation in all experiments con-sisted of a total of 245 subjects from the USA, of which 50 . 6% were females and 49 . 4% were males, with an average age of 31 . 5 . The subjects were paid 25 cents for participating in the study and a bonus of additional 25 cents after completing it. We ensured that every subject would participate only once (even when considering different experiments). The movie corpus included 16 , 327 movies. The original movie recommender system receives a list of 12 pre-ferred movies for each user and returns a ranked list of movies that have a semantically similar description to the input movies, have a similar genre and also considers the released year and the popular-ity of the movies (a personalized non-collaborative filtering-based recommender system). We set n = 10 , i.e., each subject was rec-ommended 10 movies.

After collecting demographic data, the subjects were asked to choose 12 movies which they enjoyed most among a list of 120 popular movies (see Figure 1 for a screen-shot). Then, depending on the experiment, the subjects were divided into different treat-ment groups and received different recommendations.

The list of recommendations included a description of each of the movies (see Figure 2 for an example). The subjects were shown the price of each movie, when relevant, and then according to their treatment group were asked if they would like to pay in order to watch it, or simply if they would like to watch the movie. In order to assure truthful responses, the subjects were also required to explain their choice ("Please explain why (mandatory)"). After receiving the list of recommendations and specifying for each movie if they would like to buy it (watch it), the subjects were shown another page including the exact same movies. This time they were asked whether they have seen each of the movies ("Did you ever watch movie name ?"), whether they think that a given movie is a good recommendation ("Is this a good recommendation?") and rated the full list ("How would you rate the full list of recommendations?") on a scale from 1 to 5 . These questions were intentionally asked on a different page in order to avoid framing [25] and to ensure that the users return their true preferences 2 .
We conducted additional experiments where the subjects were first asked whether they watched each movie and then according
Table 2: Demographic statistics for the hidden agenda setting
In the hidden agenda setting we assume that the subjects have a subscription and therefore they were simply asked if they would like to watch each movie ("Would you watch it?"). The hidden agenda setting experiment was composed of three different treat-ment groups. Subjects in the Rec-HA group received the top 10 movies returned by the original recommender system. Subjects in the PUMA-HA group received the movies chosen by PUMA. Sub-jects in the Learn-HA group were used for data collection in or-der to learn PUMA X  X  human model. Table 2 presents some demo-graphic statistics on the subjects in these three treatment groups.
For the data collection on the movie rank phase (Learn-HA) we had to select a value for k (which determines the movie ranks on which we collect data; see Section 3.1). The lower the k is, the more accurate the human model is for the better (lower) rank-ings. However, on the other hand, the higher k is, the more rank-ings the human model may cover. In the extreme case where the ranking has a minor effect on the human acceptance rate, the ven-dor may want to recommend only movies with a promotion value of 1 . Even in that extreme case, the highest movie rank, on av-erage, should not exceed | V |  X  n , which is 100 . Therefore, we set k = 10 , which allows us to collect data on movies ranked: { 1 , 11 , 21 , 31 , 41 , 51 , 61 , 71 , 81 , 91 } .

Unfortunately, the data collected in the Learn-HA group was very noisy, as the movies in the 11th rank resulted with a much higher acceptance rate than those in the 1st rank. Furthermore, the movies in the 71st rank resulted in a much lower acceptance rate than those in the 81st rank. Therefore the coefficient of determina-tion ( R 2 ) was only 0 . 31 . Still, the tendency of the data was clear (the correlation between the movie rank and the acceptance rate to their answer, were asked whether they would pay for watching it (again). We obtained similar results to those presented in Section 4.3, regarding peoples preference to movies that they have already seen. However, we do not include these results, since they may have been contaminated by the framing effect.
 Table 3: Coefficient of determination for functions tested for the hidden agenda setting Table 4: The fraction of subjects who wanted to watch each movie, average promotion gain, overall satisfaction and frac-tion of movies who were marked as good recommendations was negative 0.56, which implies that the original recommender system performed well), and additional data would have probably yielded a better coefficient of determination. Nevertheless, the fit-to-data reached was definitely good enough, as can be seen by the performance results. Table 3 lists coefficient of determination for all functions tested.

The specific human model obtained, which was used by PUMA (in the hidden agenda settings) is simply:
As for the results: PUMA significantly ( p &lt; 0 . 001 using stu-dent t-test) outperformed the original recommender system by in-creasing its promotion value by 57% with an average of 0 . 684 per movie for PUMA-HA versus an average of only 0 . 436 per movie for the Rec-HA group. No statistically significant differences were observed between the two groups from the average satisfaction for each of the movies or in the user satisfaction from the full list. It is likely that using more data, one could get a statistically signifi-cant drop in user satisfaction. Our best estimate is a 3% drop in the fraction of good recommendations (from 71% rated as good rec-ommendations in the Rec-HA group vs. 69% in the PUMA-HA group), and a 7% loss in the satisfaction from the entire list. See Table 4 for additional details.
For the revenue maximizing settings, all movies were randomly
We assumed that the vendor X  X  cost doesn X  X  depend on the num-ber of movies sold and therefore set c ( m ) = 0 for all movies. The subjects were asked if they would pay the movie price in order to watch the movie ("would you pay $ movie price to watch it?"). As in the hidden agenda setting, subjects were divided into three treatment groups. Subjects in the Rec-RM group received the top 10 movies returned by the original recommender system. Subjects in the PUMA-RM group received the movies chosen by PUMA. Subjects in the Learn-RM group were used in order to obtain data about the decay of interest in movies as a function of the movie rank (as explained in Section 3.2). The subjects in this group were asked if they were willing to pay for a movie, but were not told its We used random pricing since we didn X  X  find correlation between Amazon X  X  movie price and features such as popularity of the movie in IMDB, release year, parental rating and country production. Table 5: Demographic stats. for the revenue maximizing setting price ("Would you pay to watch it?"). Table 5 presents some demo-graphic statistics on the subjects in these three treatment groups.
In the movie rank learning phase, we set k 0 = 5 , i.e., recom-Once again, this is because k 0  X  n = | F | X  n (even if the movie rank-ing has minor impact on the probability that the user will watch the movie, and therefore PUMA would stick to a certain price; still, on average, it is not likely that PUMA will provide movies which ex-ceed rank | F | X  n , and therefore no data is needed on those high rank-ings). The coefficient of determination value using the log function on the learning data was 0 . 60 , as can be seen in Table 6.
The specific human model obtained, which was used by PUMA (in the revenue maximizing settings), is: p ( m | r ( m ) ,f ( m )) = 0 . 82  X  0 . 05  X  ln ( r ( m )
As can be seen in Figure 4, PUMA significantly ( p &lt; 0 . 05 using student t-test) outperformed Rec-RM, yielding an average revenue of $1 . 71 , as opposed to only $1 . 33 obtained by Rec-RM. No signif-icance was obtained when testing the overall satisfaction level from the list: 4 . 13 vs. 4 . 04 in favor of the Rec-RM group. However, more data could probably give a statistically significant difference. Our best estimate for this loss would be about 2 . 2% . While the average movie price was also similar in both groups, with an aver-age movie price of $5 . 18 for Rec-RM and an average movie price of $5 . 27 for PUMA-RM, the standard deviation was quite differ-Table 6: Coefficient of determination for the functions tested for the revenue maximizing setting. Table 7: the fraction of subjects who wanted to pay for a movie, average revenue and overall satisfaction. ent: 2 . 84 for the Rec-RM group, and only 1 . 95 for PUMA-RM, in which 64 . 6% of the movies were either priced at $2 . 99 or $4 . 99 .
Figure 3 demonstrates the selection process performed by PUMA for a specific user. After calculating the expected revenue using the human model, PUMA selects movies #1 , #3 , #4 , #5 , #7 , #9 , #12 , #13 , #15 and #21 , which yield the highest expected profit. In this example, when comparing PUMA X  X  recommendation X  X  ex-pected revenue to the expected revenue from the first 10 movies (which would have been selected by the original recommender sys-tem), the expected revenue increases from $1 . 34 to $1 . 52 ( 13% ).
We discovered that in all three groups in the revenue maximiz-ing setting, many subjects were willing to pay for movies that they have already watched before. As we discussed in the related work section, marketing literature deals both with the variety effect (buy-ers who want to enrich their experiences) and with loyalty (or the mere-exposure effect). However, movies are considered to be a prominent example of a variety product, in which customers want to have new experiences, and therefore this result is surprising.
Furthermore, subjects were willing to pay for movies that they have already watched more often than movies which were new to them (although only in the Learn-RM group, where no price was present, these differences reached statistical significance with p &lt; 0 . 001 using Fisher X  X  exact test). Similar behavior was also ob-served in the hidden agenda setting, where the subjects in all three groups were simply asked if they would like to watch each movie (and neither the word  X  X uy X  nor a price was present). In the hidden agenda settings the subjects significantly ( p &lt; 0 . 001 ) preferred watching a movie again to watching a movie that was new to them. We therefore set out to test whether this behavior will reoccur when the movies are cheap and have a fee of $0 . 99 , $1 . 99 or $2 . 99 -the Cheap group (see demographic details in Table 8).

This pattern was indeed repeated in the cheap group when prices were mentioned and with statistical significance ( p &lt; 0 . 001 using Table 8: Demographic statistics on the Cheap treatment group Figure 5: Comparison between the fraction of subjects who wanted to watch/pay for movies they have already seen and movies that were new to them.
 Fisher X  X  exact test). Figure 5 compares the fraction of subjects who chose to pay or watch a movie that they hadn X  X  watched before to those who chose to pay or watch a movie that they had watched before (see Table 9 for the exact values). We term this phenomenon the WAnt To See Again (WATSA) phenomenon. On average 53 . 8% of the movies recommended were already seen in the past by the subjects. One should not be concerned about the differences in the column heights in Figure 5 across the different treatment groups as, obviously, more subjects wanted to watch the movies for free (in the hidden agenda), where no specific price was mentioned (Learn-RM), and when the movies were cheap than when the movies were more expensive (Rec-RM and PUMA-RM).

In practice, when a recommender system is present, many times the users are instructed to simply choose a (fixed size) set of movies which they would like to watch. We therefore conducted an addi-tional treatment group ( Choose-3 ) in which the original experimen-tal settings were slightly modified. In this treatment group the sub-jects were instructed to choose the movies which they would like to watch ("Assume you are entitled to watch three of the recom-mended movies listed below, which movies would you choose?"). Please refer to Table 8 for demographic details on the choose-3 treatment group.

As we hypothesized, in the choose-3 treatment group, subjects were significantly ( p &lt; 0 . 001) more likely to select movies which they have already seen in the past more than movies which were new to them. While only 8 . 4% of the movies which were new to the subjects were chosen -45 . 0% of the movies that have already Table 9: The fraction of subjects who wanted to watch/pay for movies they had already seen and movies that were new to them been watched were chosen by the subjects. (In total, 59% of the movies have already been watched by the subjects.)
All these findings may be very relevant to designers of recom-mender systems for movies. Today, most systems take great care not to recommend movies that the user has already seen, while in-stead perhaps one should try to recommend movies that the user has both seen and liked.
One may be concerned about PUMA X  X  performance in the long run, when it is required to interact with the same person many times. Although this hasn X  X  been explicitly tested, we believe that PUMA X  X  advantage over the recommendation system will not de-grade; as the overall satisfaction from PUMA X  X  recommendations and the average movie fee for PUMA X  X  recommendations (in the revenue maximization setting) are both very close to that of the original recommender system. An interesting property of PUMA is that it allows online learning, as it may collect additional statis-tics on-the-fly and use it to refine its human model. In the revenue maximization setting, there is a clear conflict between the business and the user: recommending movies that the advertiser prefers (ex-pensive ones) is bound to reduce the probability that suggestions are accepted. In the hidden agenda setting, all movies are a-priori the same for the user, and hence the only loss in showing a recom-mendation that the business likes to promote is that it X  X  lower on the user X  X  list. Due to this, there is an even greater gain in changing the list of recommendations, and we see a larger gap between PUMA and the recommendation engine in the hidden agenda setting.
The WATSA phenomenon is heavily linked to the mere-exposure effect [26]. It is well known that people prefer to consume products from brands they know, or to consume the same product several times [3]. However, seeing this phenomenon in movies is surpris-ing. Movies are often believed to be novelty driven, and watching the same movie more than once may eliminate many properties upon which movie enjoyment relies heavily (such as the element of surprise, punch lines etc.). We assume that WATSA is also linked to risk aversion, in which people prefer to watch or even pay for movies that they have seen in the past since they have already en-joyed them and are therefore less likely to regret watching them again. This may be a result of people not fully trusting the movie recommender system. A different reason might be that people truly enjoy watching movies that they have seen in the past, more than new movies. This might be due to the fact that most people watch movies that they expect to enjoy, and therefore people are more likely to enjoy movies that they have already seen. An interesting future experiment would be to have subjects watch a set of movies returned by a recommender system. Upon completion, the subjects would be asked how much they enjoyed each movie and then to compare the average enjoyment from already seen movies to new movies. Such an experiment will reveal whether people X  X  prefer-ence for watching movies that they have already seen is not justified and may only be superfluous risk aversion, or a true preference that is linked to people X  X  enjoyment from watching movies that have already been seen. Further research is also required here in order to see if there is a difference between movies which were seen re-cently and ones which were seen a long time ago, how many times a user is likely to want to watch a movie, whether there is a de-pendency on the genre, culture, etc. It is also very likely that the WATSA phenomenon is a unique property of personalized recom-mender systems, which supply good recommendations. We leave all these question for future work.

An interesting property of the WATSA phenomenon may be im-plied from Table 9: the cheaper the movies are, the greater the WATSA phenomenon. When the prices are the highest (in the Rec-RM and PUMA-RM groups), the difference between the fraction of subjects willing to pay for movies that they have seen and the frac-tion of subjects willing to pay for new movies is only 2 . 5%  X  6 . 2% . When the movies are cheap, this difference leaps to 21 . 3% , when no price is mentioned it reaches 27 . 6% , and when the subjects are just asked whether they would like to watch the movies, this differ-ence shoots up to 36 . 8%  X  43 . 9% ! Such behavior may be explained by the fact that people might be willing to pay large amounts only for new movies that they are sure that they would enjoy, and they are willing to pay small amounts for movies that they have en-joyed in the past as they see it as a risk-less investment. How-ever, when testing the prices within the Rec-RM, PUMA-RM and Cheap groups, the WATSA phenomenon clearly increased as the prices decreased only in the PUMA-RM group. In the other two groups (Rec-RM and Cheap), the WATSA phenomenon remained quite steady among the different price groups. This may imply that the average cost has greater impact on the WATSA phenomenon than the specific price of each movie. Therefore this property still requires additional study.
In this paper we introduce PUMA, an algorithm which mounts a given black-boxed movie recommender system and selects movies which it expects will maximize the system X  X  revenue. PUMA builds a human model which tries to predict the probability that a user will pay for a movie, given its price (if applicable) and its rank in the original recommender system. We consider two different environments, one in which the movies are associates with different prices and the other in which no prices are present. We empirically demonstrate PUMA X  X  high performance.

Another important contribution of the paper is the uncovering of a phenomenon in which people prefer watching and even pay-ing for movies which they have already seen (when suggested by a recommender system) to movies which are new to them. This phenomenon was tested and found statistically significant in an ex-tensive experimental study as well. [1] A. Azaria, Z. Rabinovich, S. Kraus, C. V. Goldman, and [2] L. Backstrom and J. Leskovec. Supervised random walks: [3] Robert F Bornstein, Paul R D X  X gostino, et al. Stimulus [4] LS. Chen, FH. Hsu, MC. Chen, and YC. Hsu. Developing [5] A. Das, C. Mathieu, and D. Ricketts. Maximizing profit [6] F. G X n X l and K. Srinivasan. Modeling multiple sources of [7] John R Hauser and Julian Marewski Dzyabura.
 [8] J. Heckman. Heterogeneity and state dependence. In Studies [9] K. Hosanagar, R. Krishnan, and L. Ma. Recomended for you: [10] W. A. Kamakura and G. J. Russell. A probabilistic choice [11] Yehuda Koren, Robert Bell, and Chris Volinsky. Matrix [12] James M Lattin. A model of balanced choice behavior. [13] Andrew Lewis. If you are not paying for it, you X  X e not the [14] Greg Linden, Brent Smith, and Jeremy York. Amazon. com [15] Leigh McAlister and Edgar Pessemier. Variety seeking [16] N. V. Moshkin and R. Shachar. The asymmetric information [17] Bhavik Pathak, Robert Garfinkel, Ram D Gopal, Rajkumar [18] Daniel Read. Monetary incentives, what are they good for? [19] F. Ricci, L. Rokach, B. Shapira, and P.B. Kantor, editors. [20] Peter E Rossi, Robert E McCulloch, and Greg M Allenby. [21] C. A. Russell and S. J. Levy. The temporal and focal [22] J Ben Schafer, Joseph Konstan, and John Riedi.
 [23] Guy Shani, David Heckerman, and Ronen I. Brafman. An [24] W. Shih, S. Kaufman, and D. Spinola. Netflix. Harvard [25] A. Tversky and D. Kahneman. The framing of decisions and [26] Robert B Zajonc. Attitudinal effects of mere exposure. 1.
