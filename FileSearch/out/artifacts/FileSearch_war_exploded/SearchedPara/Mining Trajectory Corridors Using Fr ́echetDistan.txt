 With the technology progress and popularity of location-aware devices, vast data of moving objects have been collected. T rajectory data are ubiquitous in the real world including tropical cyclones data, transportation system data, flock-ing sheep data, migrating birds data, to name a few. Consequently, trajectory analysis has become a pragmatic tool to discover moving objects patterns. Tra-jectory corridor, through which the moving objects frequently pass, is one of the moving patterns. In this paper, we address the trajectory corridor as concate-nated sub-trajectory clusters which could help identify and predict the behaviors of the moving objects. An example to illustrate trajectories, local clusters and trajectory corridors is shown in Fig.1.

Because not only may a trajectory belon g to multiple trajectory corridors simultaneously, but trajectory corridors are also composed by different groups of trajectories at different parts. In this paper, we adopt a three-phase approach to mine the trajectory corridors using Fr  X  echet distance and meshing grids. Firstly, trajectories are segmented into sub-traj ectories according to the meshing-grids. In the second phase, a hierarchical method is utilized in each grid cell separately to cluster intra-grid sub-trajectories. Finally, the local clusters in each single grid cell are concatenated to constr uct trajectory corridors.

Summarizing, the contributions presented in this paper are:  X  We introduce discrete Fr  X  echet distance as a novel dissimilarity measurement  X  We propose a meshing grid structure. By utilizing grid structure, the seg-Gaffney and Smyth[7] propose a method of t rajectory cluster ing using mixture of regression models. Nanni and Pedreschi[10] propose a density-based trajectory clustering algorithm based on OPTICS[2]. In the above work, the object to be clustered is the whole trajectory, namely, one trajectory can be only in one cluster. Thus, trajectory co rridors are not their objective.

In the trajectory clustering algorithm pr oposed by Lee et al.[9], trajectories are partitioned into a set of line segments which are clustered by using DBSCAN[6] algorithm. However, because Fr  X  echet distance could handle polygonal curves well, we need not to simplify the trajectories into line segments but only cut off trajectories into several short polygonal curves. And we adopt a hierarchical method for clustering to avoid distance accumulation discussed in Section 5.2. In reality, a moving object trajectory is a finite set of observations at discrete time stamps t 1 , t 2 ,  X  X  X  , t n . It could be assumed that an object moves between two consecutive time steps on a straight line and the velocity is constant along the segment. Hence we define the trajectory  X  as a polygonal line with n vertices having time stamps.
 The space is partitioned by meshing-grids. Every grid cell G j has an id j to label it. The sub-traj ectory is recorded in  X  i,j,mark where i represents the original trajectory  X  i it belongs to, j represents the grid cell G j it falls into and mark is the mark to differentiate the different part of the same trajectory in the same grid. The definition of sub-trajectories is the same as that of trajectories. Definition 2 (Local Cluster in Grid Cell G j ). C j = "  X  i  X  X  X  ,  X  cell G j .
 The local cluster in a certain grid cell is a set of sub-trajectories in that cell, so the cluster has no shape or range. However, the cluster has its own origin and destination. The position and velocity at origin and destination of a cluster are average values of sub-traj ectories in that cluster.
 Definition 3 (Trajectory Corridor). TC = " C j 1 , C j 2 ,  X  X  X  , C j l # ,where C j i (1  X  i  X  l ) is a local cluster in grid cell G j C The trajectory corridor i s a sequence of local clust ers and the order of the se-quence indicates the direct ion of the trajectory corridor. Every trajectory corri-dor is composed of either one local cluster or more. Moreover, different trajectory corridors may share the same local cluster. Distance function is the key component o f mining trajectory corridors because dissimilarity measurement is necessary to group similar trajectories. The Fr  X  echet distance is a measurement for curves and surfaces. It is defined using reparam-eterizations of the shapes. The Fr  X  echet distance is generally regarded as being a more appropriate distance function than the Hausdorff distance or other dis-tances for curves[1] because it takes th e continuity of the shapes into account. Due to high complexity of computing Fr  X  echet distance, the discrete Fr  X  echet dis-tance as a natural variant for polygonal curves is more proper for computing. Eiter and Mannila[5] proposed a dynamic programming algorithm to compute discrete Fr  X  echet distance in O ( mn )time.

Consider two polygonal curves P , Q in R d given by the sequences of their distance only uses coupling C which is a sequence of pairs of vertices C = " C 1 ,  X  X  X  , C m } , fulfilling  X  C 1 =( p 1 , q 1 )and C k =( p n , q m ) Definition 4 (Discrete Fr  X  echet Distance[3]). Let P , Q be two polygonal curves in R d ,andlet | X | denote an underlying norm in R d . Then the Discrete Fr  X  echet Distance  X  dF ( P, Q ) is defined as where C ranges over all couplings of the vertices of P and Q .
 If the distance computation | X | between vertices ignores vel ocities of trajectories, the distance function is shape dependent only like DTW[8], LCSS[11], EDR[4] and so on. However, the two trajectories may have similar shapes, but actually they represent totally different moving patterns when considering velocities il-lustrated in Fig.2. Yanagisawa et al.[12] propose a measurement combined DTW distance with Euclidean distance which considers both velocities and shapes of moving objects, whereas the distance is sensitive to the grouping parameter  X  and they require time duration of different trajectories to be the same length. Hence another merit brought by Fr  X  echet distance is that it could easily take account of velocities. By substituting | X | between vertices, not only spatial in-formation of trajectories but also temporal information of trajectories can be considered. In our paper, a simply solution is provided that the distance | X | between two vertices in two dimensions is defined as  X  s (  X x 2 +  X y 2 )+  X  t  X v 2 , and weights  X  s and  X  t differentiate the effects of spa tial properties and temporal properties. v is the instant velocity at the vertex. If  X  t =0, | X | is translated into Euclidean norm. The experiments in Section 6 illustrates the trajectory corri-dors considering velocities are quite different from those using  X  t = 0. Actually, adjusting weights to make spatial and temporal properties equally important is empirical and influenced by spatial and temporal units. The procedure of mining trajectory corridors which is composed of three phases is illustrated in Fig.3. In the first phase, trajectories are segmented into sub-trajectories according to the meshing-grids. In the second phase, the hierarchi-cal clustering algorithm based on discrete Fr  X  echet distance is implemented in each grid cell. Finally, the local clusters in abutting grid cells are concatenated according the concatenation criteria to discover trajectory corridors.
In this paper, we usee meshing grids structure to segment trajectories and concatenate local clusters because by utilizing grids, the segmentation and con-catenation need only single traversing of trajectories o r grid cells. Furthermore when changing grid size appropriately, the computing time could be reduced significantly since the dominant factor of the computing time is the amount of sub-trajectories in a single grid cell. This advantage is theoretically and experi-mentally analyzed and discussed in Section 6. 5.1 Segmentation Since the different parts of a certain trajectory may belong to different trajec-tory corridors, segmenting trajectory i nto sub-trajectories is indispensable. In theprocessofsegmentation,thesizeo f grid cells are assigned in advance. As illustrated in Fig.4, when traversing each vertex in a trajectory, no segmentation will be executed until consecutive vertices pair ( p i , p i +1 )arenotinthesamegrid cell. The intersections between the line segment p i p i +1 and edges of grid cells are computed. The trajectory is partition ed at each intersection. After segmenta-tion, only the sub-trajectories in those grid cells which potentially contain local clusters will be preserved for the next phase. This process may reduce comput-ing time dramatically when many grid cells include sparse sub-trajectories. The algorithm of segmentation costs O ( n ) time, where n is the sum of the vertices of all trajectories.
 5.2 Intra-grid Sub-trajectory Hierarchical Clustering In this paper, we adopt an agglomerative hierarchi-cal clustering method and use two cluster distances d min and d max at the same time to avoid distance accumulation illustrated in Fig.5. In the example,  X  1 and  X  8 are almost in the opposite directions but may be merged into the same cluster because each pair of nearby trajectories  X  i and  X  i +1 has a small dis-tance. Two cluster distances d min and d max are defined as follow: d min ( C i ,C j )= min d ( p, q ), d max ( C i ,C j )= max d ( p, q ), where p  X  C i ,q  X  C j , d ( p, q )ismod-ified discrete Fr  X  echet distance between p, q .Inthis phase, the computing is only executed in the grid cells that have sufficient sub-trajectories. For each hierarchy, the ne arest clusters are merged according to d min . Namely, two clusters are merg ed when they have the minimal d min .How-ever, while d max between the nearest clusters exceeds an certain threshold, no merging executes and the algorithm continues to the next hierarchy. Until the minimal d min exceeds an termination condition, c lustering ceases. Finally, the local clusters which do not have sufficient sub-trajectories are pruned. The algo-the amount of sub-trajectories, l is the amount of vertices of one sub-trajectory, m is the amount of sub-trajectories in one cluster. An example of intra-grid sub-trajectory clustering using distance matrix and index is illustrated in Fig.6. 5.3 Inter-grid Concatenation In this phase, we propose an algorithm of concatenating local clusters to discover trajectory corridors. The co ncatenation criteria is defined as follow: When posi-tions and velocities between the origin of one cluster and the destination of the other cluster in the adjacent grid cell are similar, we call the two local clusters are connectable. And we consider concatenation that does not require the adja-cent local clusters sharing the sufficient same trajectories or even same amount of trajectories. Trajectory corridors are continuous channels with directions that moving objects frequently visit but enter and leave freely.
In the phase of local clusters concatenation, traversing all grid cells that have local clusters only once could find all possible trajectory corridors. In each step, we check one grid cell G j and the local clusters in it. If there exists local clusters C q in neighbor cells having the origins connectable with the destinations of the local clusters C p in G j , all trajectory corridors including C p are catenated to all trajectory corridors including C q . This approach can be computed in O ( nk ) time, where n is the amount of local clusters and k is the amount of trajectory corridors. An example of concatenation is illustrated in Fig.7 and trajectory corridors with only one cluster are hidden. In this paper, all experiments were conducted by using the tropical cyclone best track data set 1 . And for all experiments, parameters including pruning criteria, termination condition and concatenation criteria are constant.

Fig.8(a) is the result of clustering which considers both spatial and temporal similarity, whereas, Fig.8(b) is the result of clustering which ignores the velocity. The experiments successfully demonstrat e that by considering temporal proper-ties, the sub-trajectory clusters are different from those that have only spatial properties.

From Fig.9, it is obvious that more grid cells produce more sub-trajectories, local clusters and trajector y corridors. However, the computing time is reduced significantly, when the amount of sub-tr ajectories per cell decreases from 21 to 5.(see Fig.10(a)). Since building index runtime is the dominant factor in the overall runtime illustrated in Fig.10(b), the overall running time could be ap-proximated to O ( kn 2 log n ), where n is the amount of sub-trajectories in one grid cell and k is the amount of grid cells. Thus when choosing appropriate grid size, the computing time could be reduced, because the amount of sub-trajectories per cell may decrease. The grid size ma y affect both computing time and clus-tering quality. The quality of the results may decrease when grid size is larger due to more noises. So to keep the quality of the clustering results and to reduce computing time requires a trade-off which vary from data to dada.

The experiments successfully validate our algorithm to discover trajectory cor-ridors. The tropical cyclones in Western North Pacific and the South China Sea often have parts of their trajectories in such a corridor: start from the position around 135  X  E  X  150  X  E, 10  X  N, move towards northwestern to the location about 120  X  E  X  135  X  E, 25  X  N, then towards northeaster n and finally end approximately at 145  X  E, 40  X  N. In this paper, we adopt a three-phase approach to discover trajectory corridors using Fr  X  echet distance as a dissimilarity me asurement. The experiments success-fully discovered tropical cyclone corrido rs by segmenting, clustering and concate-nating various components of a trajectory. The trajectory corridors discovered by using Fr  X  echet distance with temporal information may be more significant. The use of meshing grid structure could reduce computing time effectively by choosing an appropriate grid size.

