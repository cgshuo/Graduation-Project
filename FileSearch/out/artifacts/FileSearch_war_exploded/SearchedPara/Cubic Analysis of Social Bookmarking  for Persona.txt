 The information in the WWW is increasing far more quickly than people can cope with. Personalized recommendation [1] can help people to conquer the information overload problem, by recommending items according to users X  interests. One popular who like the items they have viewed before are likely to agree again on new items. 
Although the assumption that CF relied on works well in narrow domains, it is similar taste in one domain may behave quite different in others. There are several approaches for handling this problem, either by using pre-defined ontology [3], or by applying clustering algorithm to group items or users beforehand [4]. In this paper we propose a more general and straightforward way for handling this problem. It is based on the burgeoning web application named social bookmarking, from which we can gain information about not only what a user likes, but also why he or she likes it. 
On the social bookmarking websites such as del.icio.us (http://del.icio.us), users at-tach some tags on the items they are interested in, just like using bookmarks. Because of the lower barriers of adding tags and the usefulness of social bookmarking, these websites are in their blossom and provide us a great mass of tags for each item. It is certain that a user may have diverse interests, a tag may have ambiguity meanings, possible to eliminate the ambiguity and distill the inherent correlations among them. 
As to the realization of our ambition, there are two prominent challenges: (1) Personalized recommendation on three-order data requires finding the compli-cated correlations among user, tag, and items. Most researches are for two-order data analysis, and have limited ability when coping with three-order data. Therefore, a higher-order analysis approach is requir ed to extract the multi-type relations. (2) The three-order tensor is huge and highly sparse. Most CF algorithms are sus-ceptible to data sparseness, and the problem is more severe here. We should address this problem to decrease the computing cost and improve analysis accuracy. 
In this paper, we propose a three-order-data approach for personalized recommen-dation. The main contributes include: (1) Address the second challenge by designing a division algorithm according to the distri bution characters of tags. (2) Apply higher-order singular value decomposition (HOSVD) technique [5] to social bookmarking, in order to take full advantage of the three-order data and achieve a better performance for data analysis. (3) Based on the three-order data analysis, propose an approach for personalized recommendation with high quality and good usability. Experiments against data collected from the most famous social bookmark website del.icio.us re-veals the superiority of our approach over traditional CF recommend methods. The rest of this paper is organized as follows: Section 2 reviews related work on CF recommendation and higher-order analysis. Section 3 proposes the division algo-rithm. Section 4 describes the analysis and recommendation algorithm. Section 5 reports the experimental results. Section 6 draws the conclusion and work to be done. Collaborative filtering (CF) is one of the most successful recommendation techniques for personalized recommendation. Early systems on CF such as Grouplens [2] are based on users X  explicit ratings, while PHOAKS [6] monitor users X  behavior for get-ting implicit ratings. Different from these rating approaches, our work is based on tags, which include richer information and are more reliable than ratings. Hybrid approaches emerged mainly for solving the data sparse and cold-start problem [7] by combining the advantage of content-based and CF recommendations together. Our approach is also a hybrid one since it recommends items according to both users X  taste and related tags. It is applicable to non-textual recommendation, which the traditional content-based or hybrid approaches fail. 
CF has the problem of being less effective when users have multiple interests, be-cause users have similar taste in one aspect may behave quite different in other as-pects. Research in [3] classifies papers using ontological classes, and calculates col-laborative recommendation on each class separately. Such method requires ontology or classification created by dedicated professionals beforehand, and items for recom-mendation should also be annotated with proper metadata. This limitation makes such approaches not scalable for Internet, becau se they depend on professional efforts. Approaches in [4] tries to solve this problem by applying cluster algorithm on items or users. Although data become denser after clustering, the problem caused by multi-ple interests still remains. The main reason is that the user-item rating matrix does not contain enough information for distinguishing the non-similar domains. 
Tags of social bookmarking offer additional information for addressing this prob-lem. Despite of the large number of typos and deceptions, tags still have the potential of constructing a reliable taxonomy. This is named folksonomy , whose essence is cooperative classification through tags, the user created metadata [8]. By adding tags ommendation to a certain user X  X  specified interest, instead of simply to a user. 
To achieve this goal, we need cubic data analysis for user-tag-item tensor. There are only a few researches carry out such analysis on web information service. The recommendation research in [9] extends Hofmann X  X  two-way aspect model to deal with the co-occurrence data among users, items, and item content. Another ap-proach quite related to our work uses CubeSVD on clickthrough data for personal-ized Web search [10]. It inspires us of analyzing three-order tensor from social bookmarking. cordingly. These triples then form a 3-orde r tensor, by setting all the cells correspond to the exist triples to 1 and left others to 0. This tensor is very sparse, and the tags and items in different domains seemed to have few intersections. Therefore, it is necessary and possible to divide the original tensor into several sub-tensors. 
The division algorithm is based on tags and items. It allows tags and items to ap-pear in multiple subsets, because some ta gs have diverse meanings in different do-mains and some items are related with several topics. Use E to denote the set of all the items, and use T to tags. There are three phrases as described below. 1. Initialize. Collect hundreds of most frequently used tags and items, and thus get a 2. Expand. For each subset s l , repeat following steps until it stops expanding. 3. Finalize. For all the items that have not been assigned to any subset, add them to 
By analyzing the distribution of tags on social bookmarking, we get the conclusion that the expanding phrase described above tends to converge quickly. Firstly, only a small portion of tags is used by the majority users, and the set of frequently used tags is quite stable. Secondly, although there ar e always hundreds of tags marked on a single item, only a few of them are frequently used. The frequently used tags X  weight will dominate the belonging value of items and the new unpopular tags will change the value little. Thus, the subset will converge after a few iterations, and each subset will contain the tags and items very related to the core tags in the initial phrase. SVD is the basis of Latent Semantic Indexing (LSI) [11] technique. For a M  X  N matrix A (usually a term-document matrix), it can be written as the product A = U  X  V T , where nificant information of the original matrix while the noise is reduced. HOSVD is a higher order generalization of matrix SVD for tensors. Every I  X  I U n contains the orthonormal vectors and term CubeSVD for the 3-order analysis. The algorithm is described as below: 3. Select 4. Reconstruct the original tensor by T e T t T u U U U 3 2 1  X   X   X   X  = S A . 
The CubeSVD reconstructed tensor  X  measures the associations among users, tags and items more precisely than the original tensor does, because the noise is reduced by eliminating the small singular values. Elements of  X  can be represented by a quad-dation is a CF approach since it is based on users X  opinion. It is also a content-based approach because it uses tags inform ation to recommends items as well. about 249,463 records of one week, involving 21,455 users, 17,920 tags and 8,124 items. Remove the rare appeared data and get 224,938 records left, involving 5,428 users, 7,847 tags and 6,010 items. Apply the division algorithm with  X  =2.1, k =15. Randomly select a sub-tensor as an example. It has 5381 records involving 182 users, testing data. 
Compare our cubic analysis recommendation approach (denoted as CubeRec) with the traditional CF approach. The CubeRec approach recommends Top-N items to proach applies LSI on user-item matrix first, finds M most similar neighbors for each user, and then recommends Top-N items according to neigh bors X  collection. Use hit ratio to evaluate the recommendation quality ) C min(N, C R  X  = HitRatio . R is the lected. 
From Table 1., we find the results of CubeRec are very promising. The HitRatios are much higher than those of CF-based approaches. The main reason for the worse results of CF approach is that although users collect many identical items, their inter-ests may still be quite different. Here we give an example found in the experiment. There is a user who maybe a web designer, because he collected several web pages ested at the design of the web page, his neighbors, who collect many common pages, seem to be interested at the content, because they mark them with very different tags definitely wrong. The more it recommends, the more errors it makes. This also ex-plains why the HitRatios are generally d ecreasing as the number of recommending items increasing. Personalized recommendation becomes popular these years to help people to conquer the information overload problem. While the most successful such technique CF is frustrated when applied to the multiple domain settings, our approach can still works well. Experiments against data from del.icio.us reveal the superiority of our approach. 
Our future work of personalized recommendation on social bookmarking includes: (1) We choose the  X  and k for division algorithm and the truncated values &lt; m 0 , n 0 , l &gt; for CubeSVD manually by empirically and only get a relatively good result. We will study at how to choose them automatically for getting the best result. (2) Many other means of recommendation sh ould be studied. Such as recommend the most related tags or items to a user X  X  given tag or items, as well as recommending related users. These means will help users when they browsing the web and give them the serendipity of finding novel but related items. This work is partially supported by National Basic Research Program (973) under grant No. 2005CB321905, NSFC Key Program under grant No. 69933010, and Chi-nese Hi-tech (863) Projects under grant No. 2002AA4Z3430, No. 2002AA231041. 
