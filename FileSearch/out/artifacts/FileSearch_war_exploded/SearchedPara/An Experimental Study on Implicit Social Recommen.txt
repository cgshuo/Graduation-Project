 Social recommendation problems have drawn a lot of at-tention recently due to the prevalence of social networking sites. The experiments in previous literature suggest that social information is very effective in improving traditional recommendation algorithms. However, explicit social infor-mation is not always available in most of the recommender systems, which limits the impact of social recommendation techniques. In this paper, we study the following two re-search problems: (1) In some systems without explicit so-cial information, can we still improve recommender systems using implicit social information? (2) In the systems with explicit social information, can the performance of using im-plicit social information outperform that of using explicit so-cial information? In order to answer these two questions, we conduct comprehensive experimental analysis on three rec-ommendation datasets. The result indicates that: (1) Im-plicit user and item social information, including similar and dissimilar relationships, can be employed to improve tradi-tional recommendation methods. (2) When comparing im-plicit social information with explicit social information, the performance of using implicit information is slightly worse. This study provides additional insights to social recommen-dation techniques, and also greatly widens the utility and spreads the impact of previous and upcoming social recom-mendation approaches.
 H.3.3 [ Information Search and Retrieval ]: Information Filtering Algorithm, Experimentation Matrix Factorization, Recommender Systems, Implicit So-cial Information, Singular Value Decomposition
Due to the rapid growth of information on the Web, espe-cially on the social Web, recommender system has become an indispensable technique for filtering and recommending online information. In order to satisfy Web users X  ever-increasing information needs, traditional recommendation techniques have been widely adopted by various products in industrial companies, including but not limited to Ama-zon, Netflix, Apple iTunes, Yahoo! News, etc.

Traditional recommendation techniques normally only take into account the user-item rating matrix for computing rec-ommendations. Recently, based on the intuition that users X  social network information can be utilized to improve rec-ommendation qualities, the research of social recommender systems becomes popular. Several social recommendation approaches [8, 9, 20, 21] have been proposed in the litera-ture. These methods suggest that the explicit social infor-mation is very helpful in improving the traditional methods, especially when the user-item rating matrix is sparse.
In general, most of the social recommendation methods are based on the matrix factorization framework, which is both effective and efficient in generating recommendations. Typically, social information is utilized to better shape the user latent space. Different intuitions on interpreting these social information will result in different objective functions or learning models. In [20], a social recommendation ap-proach is proposed by adding the social regularization term to the matrix factorization objective function. In this method, the additional social regularization term ensures that the distance of the latent feature vectors of two friends will be-come closer if these two friends share similar tastes. The experimental results illustrate that social recommendation approaches are very effective at improving traditional rec-ommendation techniques, especially when few ratings are available.

Although social recommendation methods have been ex-tensively studied in the literature, many problems are still left unexplored.

The essence of social recommendation methods is utiliz-ing users X  explicit social connections to improve recommen-dation results. However, explicit social connection informa-tion is not always available in real-world recommender sys-tems. Only few Web sites have implemented the social or trust mechanisms, like Epinions (http://www.epinions.com, a general consumer review site that was established in 1999, where users can also add other users into their trust list) and Doudan (http://www.douban.com, the largest Chinese Web 2.0 site devoted for movies, books, and music reviews Figure 1: Explicit and Implicit Social Relationships that was launched in 2005). Lacking of social recommenda-tion data greatly limits the impact and utilization of social recommendation methods.

Fortunately, in case that we do not have explicit social information, we can always compute a set of implicit social information for each user. We summarize the relationships between users X  explicit social information and implicit social information in a toy example illustrated in Figure 1. In this figure, users within the blue solid circle represent explicit social connections of user u i , while users within the purple dashed circle represent this user X  X  implicit social informa-tion, which is calculated using some similarity metrics.
Thus, in this paper, based on the example shown in Fig-ure 1, we are interested in exploring the following two re-search problems: 1. Can we take advantages of implicit social information 2. When the explicit social information is available, can
In order to answer the questions, in this paper, we conduct comprehensive experiments on three datasets: the Movie-Lens and EachMovie datasets, which do not have explicit social information, as well as the Douban dataset, which has a social network in addition to the user-item rating matrix. Based on our analysis, we have the following conclusions:
The remainder of this paper is organized as follows. Sec-tion 2 introduces previous methods that are related to this work. Section 3 details one popular matrix factorization method in the literature. Section 4 presents how to incorpo-rate implicit social information. The results of an empirical analysis are presented in Section 5, followed by the conclu-sion in Section 6.
In this section, we review several popular approaches for recommender systems in the literature, including: (1) tradi-tional recommender systems, especially matrix factorization based methods, and (2) social recommendation methods.
Traditional recommender systems normally only utilize the user-item rating information for recommendation. One of the the most popular techniques in recommender systems is collaborative filtering.

Typically, collaborative filtering approaches include two types of methods: memory-based methods as well as model-based approaches. Memory-based methods focus on using predefined similarity calculation functions to find similar users or items for generating predictions. Memory-based methods can be further classified as user-based [2, 4, 10] and item-based approaches [3, 16, 27] based on whether similar users or similar items are used.

In contrast to the memory-based methods, the model-based approaches use the observed ratings to train a prede-fined learning model. The ratings are then predicted via the trained model instead of directly manipulating the original rating database as the memory-based approaches [17]. Algo-rithms in this category include but not limited to clustering model [11], the aspect models [5, 6, 28], the Bayesian hier-archical model [33], the ranking model [17], etc. Hofmann in [5] proposed an algorithm based on a generalization of probabilistic latent semantic analysis to continuous-valued response variables. Kohrs et al. [11] presented an algorithm for collaborative filtering based on hierarchical clustering, which tried to balance both robustness and accuracy of pre-dictions, especially when few data were available. Recently, due to the effectiveness and efficiency in dealing with very large user-item rating matrices, several low-dimensional ma-trix factorization techniques [15, 24, 25, 26, 29, 31] have been proposed.

Matrix factorization methods in recommender systems nor-mally seek to factorize the user-item rating matrix into two low rank user-specific and item-specific matrices, and then utilize the factorized matrices to make further predictions. Low-rank matrix approximations based on minimizing the sum-squared errors can be easily solved using Singular Value Decomposition (SVD), and a simple and efficient Expecta-tion Maximization (EM) algorithm for solving weighted low-rank approximation is proposed in [29]. In [30], Srebro et al. proposed a matrix factorization method to constrain the norms of U and V instead of their dimensionality. Salakhut-dinov et al. presented a probabilistic linear model with Gaussian observation noise in [25]. The user and item latent factors can be learned by maximize the proposed probabilis-tic likelyhood function. The proposed method is very effec-tive and efficient, and this method is essentially equivalent to the Regularized SVD method. In their following work proposed in [26], Salakhutdinov et al. placed the Gaussian-Wishart priors on the user and item hyperparameters, which can further improve the prediction accuracy. More recently, Koren et al. [12, 13, 14] proposed several enhanced matrix factorization methods which illustrate promising results by incorporating heterogeneous information. In [12], the au-thors discussed the possibility to improve recommender sys-tems using neighborhood information, which is quite related to our work. However, in this paper, we focus on very dif-ferent aspect of recommender system, i.e., social recommen-dation. Moreover, we provide many additional insights that previous work ignored.
The above mentioned traditional recommendation tech-niques are all based on working on the user-item rating ma-trix, and ignore the abundant relationships among users. Recently, due to the prevalence of Web 2.0 social networking sites, many researchers have started studying social recom-mender systems [1, 7, 8, 9, 20, 21, 22, 23, 32].

Due to the nature of each method, the social recommenda-tion techniques can also be classified into two types: memory-based [1, 8, 21, 22, 23] and model-based [7, 9, 20, 32].
The memory-based methods normally directly or indi-rectly use the degree of social trust to represent the simi-larity between two users. In [21], a trust-aware method for recommender system is proposed. In this work, the collabo-rative filtering process is replaced by the reputation of users, which is computed by propagating trust. The degrees of trust are calculated to replace the similarity value between two users. The experiments on a large social recommenda-tion dataset -Epinions, show that this work increases the coverage (number of ratings that are predictable) while not decreasing the accuracy (the error of predictions). In [23], two trust-aware methods are proposed to improve standard collaborative filtering methods. The experimental results indicate that the user trust information can help improve recommendation quality.

More recently, by taking advantages of the effectiveness and efficiency of matrix factorization framework, several novel model-based methods have been proposed to enhance tradi-tional matrix factorization methods by incorporating user social information. In [20], two Social Regularization meth-ods have been proposed by constraining the matrix factoriza-tion objective function with user social regularization terms. Different with previous methods, the proposed methods are very general, they not only work with user trust relation-ships, but also perform well with user social friend relation-ships. The experimental analysis indicates that the proposed framework outperforms other state-of-the-art methods.
Although the aforementioned matrix factorization based social recommendation methods move a nice step forward in the research of recommender systems, their utilities are limited since these methods require using explicit user so-cial information, which is not always available in most of the recommender systems. In [18], the idea of using implicit information is briefly introduced, however, many interesting problems are left unattended. In this paper, we present an comprehensive experimental study on implicit social recom-mendation which provides many useful insights to current social recommendation techniques.
In this subsection, we review one popular matrix factor-ization method that is widely studied in the literature.
Considering an m  X  n matrix R describing m users X  ratings on n items, a low-rank matrix factorization approach seeks to approximate the frequency matrix R by a multiplication of d -rank factors R  X  U T V , where U  X  R d  X  m and V  X  R with d &lt;&lt; min( m, n ). The matrix R in the real-world is usually very sparse since most of the users only visited a few Web sites.

Traditionally, the Regularized Singular Value Decomposi-tion (RSVD) method is employed to estimate a matrix R by minimizing where u i and v j are column vectors with d values, I ij is the indicator function that is equal to 1 if user i rated item j and equal to 0 otherwise, and  X  1 ,  X  2 represent the regulariza-tion parameters. The optimization problem in Equation 1 minimizes the sum-of-squared-errors objective function with quadratic regularization terms.

By adopting a simple stochastic gradient descent tech-nique, for each observed rating r ij , we have the following efficient updating rules to learn latent variables u i , v where and  X  1 ,  X  2 are the learning rates.

The Regularized SVD algorithm introduced in this section is both effective and efficient in solving the collaborative filtering problem and it is perhaps one of the most popular methods in collaborative filtering. In this paper, we use this approach as the baseline method.
In this section, we first introduce a matrix factorization-based social recommendation method proposed in the liter-ature. Then we illustrate how to leverage the implicit user social information in the case that explicit user social in-formation is not available. Finally, we demonstrate how to utilize dissimilar users as well as item social information to further improve recommender systems.

Note that the main focus of this paper is designing a sci-entific experimental study to explore several interesting re-search problems by borrowing and extending previous social recommendation techniques. Developing brand new social recommendation techniques is out of the scope of this pa-per. Also, we will only briefly describe the techniques if they are borrowed from previous work.
In [20], in order to model the social recommendation prob-lems more accurately, a general social recommendation ap-proach, Social Regularization (SR), is proposed.
 The objective function of this approach is formulated as: where  X  is the regularization parameter, s if indicates the similarity between user i and user f , and F + ( i ) represents user i  X  X  outlink friends.

In this method, the social network information is em-ployed in designing the social regularization term to con-strain the matrix factorization objective function. The social regularization term also indirectly models the propagation of tastes. More specifically, if user i has a friend f and user f has a friend user g , this regularization term actually indi-rectly minimizes the distance between latent vectors u i and u . The propagation of tastes will reach a harmonic status once the learning is converged.

Similarly, for each observed rating r ij , we have the follow-ing stochastic gradient descent updating rules to learn the latent parameters: where and F  X  ( i ) represents user i  X  X  inlink friends.
As mentioned in Section 1, all the social recommendation approaches need to utilize the additional explicit user social information, which may limit the impact and utilization of these approaches. In this section, we seek an alterative way to compute implicit user social information once the explicit user social relationships are unavailable.

The essence of social recommendation approaches lies in the additional explicit social information of each user. The information of these social friends can then be utilized to help model a user X  X  taste more accurately. In the case of missing explicit social information, as shown in Figure 1, we can always compute another set of Top-N similar users and then plug in those similar users to the aforementioned social recommendation matrix factorization framework.

There are several methods we can borrow in the literature to compare the similarity between two users. In this paper, we adopt the most popular approach Pearson Correlation Coefficient (PCC) [2], which is defined as: where I ( i ) is a set of items that rated by user i , and r represents the average rate of user i . From this definition, user similarity s if is ranging from [  X  1 , 1], and a larger value means users i and f are more similar. We employ a map-ping function f ( x ) = ( x + 1) / 2 to bound the range of PCC similarities into [0 , 1].

Based on the PCC similarity, the computed Top-N sim-ilar users can then be injected into the objective function detailed in Equation 3.
So far in this paper, we only consider utilizing similar users to improve recommender systems. In the social regulariza-similar to user f , the distance between latent vectors u u f will become closer since the similarity s if is a relatively large value.

Motivated by the similar users, we can actually endow the social regularization term more modeling power if we also include the most dissimilar users. If user i is dissimilar with user f , the ideal property we want is to make the distance between u i and u f larger or in other words, maximize the distance between them. Inspired by the work in [19], we can easily achieve this property by turning the similarity s if =  X  s if . Hence, in this case, the social regularization term s if || u i  X  u f || 2 F will actually lead to make the distance between u i and u f larger. This is an ideal property we desire to include those dissimilar users.

Hence, in this paper, in addition to the Top-N similar users, we also include the Top-N dissimilar users for each user. This will not change the objective function mentioned in Equation 3. It will only increase the size of the implicit social neighbors specified in the set F + ( i ) and change the signs of the similarity values for dissimilar users.
In the original social recommendation problems, there are only social relationships among users due to the reason that normally, social network only refers to the social relation-ships between people.

In this paper, since we define the implicit user social infor-mation as the similar or dissimilar users, we can naturally extend this idea to also take advantages of the implicit item social information, which can be found through the similar or dissimilar items.

The Social Regularization method described in Section 4.1 is a very general approach, and it can be easily extended to incorporate the item social information. The objective function can be formulated as: where Q + ( j ) represents item j  X  X  implicit social information (i.e., the Top-N items similar to item j and the Top-N items dissimilar to item j ).

The similarity between item j and item q can be calculated by the item-based PCC method: where U ( j ) denotes a set of users that rated item j .
Similarly, we have the following updating rules to learn the latent parameters: where
From Section 4.2 to Section 4.4, we demonstrate how to utilize implicit user social information, dissimilar users, and item social information, respectively. We can then design the following integrated model to take into account all the possible information that will potentially benefit the recom-mender systems:
For every observed rating r ij , we have the following stochas-tic updating rules to learn the all the latent parameters: where
The unified model is constrained by four types of infor-mation: similar user regularization, dissimilar user regular-ization, similar item regularization and dissimilar item reg-ularization. We use the aforementioned information to help better shape the user and item latent spaces, hence generate more accurate recommendation results.
In this section, we conduct several experiments to com-pare different recommendation methods using implicit social information. Our experiments are intended to address the following questions: We use the popular Mean Absolute Error (MAE) and Root Mean Square Error (RMSE) metrics to measure the prediction quality of all the mentioned algorithms. MAE is defined as: where r ij denotes the rating user i gave to item j , b r the related predicted rating, and N denotes the number of tested ratings. RMSE is defined as: From the definitions, we can see that a smaller MAE or RMSE indicates a better performance.
When the explicit social information is not available, we evaluate all the algorithms on two popular datasets: Movie-Lens 1 and EachMovie 2 .

The MovieLens dataset we adopt in this paper is a rela-tively small dataset contains 100,000 user-item ratings (scale from 1 to 5) rated by 943 users on 1,642 items. The Each-Movie data set is a relatively large dataset includes 74,424 users, 1,648 movies, and 2,811,718 ratings in the range from 0 to 5.
 Other statistics of these two datasets are summarized in Table 1 and Table 2, respectively.
In this section, we will compare the following different methods described in this paper as well as some baseline methods. 1. UserMean : this is a baseline method uses the mean 2. ItemMean : this is a baseline method utilizes the 3. RSVD : this is the Regularized SVD method. It is 4. SR u + : this is the Social Regularization method using 5. SR u +  X  : this is the Social Regularization method using 6. SR i + : this is the Social Regularization method using http://www.grouplens.org/system/files/ml-100k.zip. http://www.research.digital.com/SRC/EachMovie/. It is now retired by Hewlett-Packard (HP). 7. SR i +  X  : this is the Social Regularization method using 8. SR u +  X  i +  X  : this is the final integrated model that using
For all the experiments conducted in this section, we uti-lize 80% as training data in both datasets. Training data 80%, for example, means we randomly select 80% of the ratings from the MovieLens or the EachMovie dataset as the training data to predict the remaining 20% of ratings.
The methods we study in this paper also involve the cal-culation of the Top-N similar and Top-N dissimilar users or items. We adopt the following rules to generate Top-N similar and dissimilar users or items. In order to reduce the noises when computing the similarities using PCC method between two users i and f , we require that user i and user f should at least co-rated 10 items, otherwise, we will ignore user f when computing user i  X  X  Top-N similar or dissimilar neighbors, and vice versa. Furthermore, for all the simi-lar neighbors, the similarity between two users should be greater than 0.75, while for all the dissimilar neighbors, the similarity between two users should be less than 0.25. The same rules are also adopted when calculating similar and dissimilar items.

In order to fairly compare every method, we employ simi-lar parameter settings for those common parameters adopted in all the approaches. In this paper, for RSVD, SR u + , SR  X  2 = 0 . 01. At the same time, all the learning rates  X  1 and  X  2 are set to 0.005. For all the Social Regularization based methods,  X  and  X  are set to 0 . 015 in the MovieLens dataset, while in the EachMovie dataset, they are set to 0 . 001.
The experimental results using 10 and 50 dimensions to represent the latent factors in two different datasets are shown in Table 3 and Table 4, respectively. The percentages in the results are the improvements of our SR u +  X  i +  X  over the corresponding approaches. In all our methods, the number of implicit user or item social neighbors are set to 10.

The following summarizes the key conclusions we observe from the results: (a) MAE Comparison on Different User
Rating Scales (MovieLens) (a) MAE Comparison on Different User
Rating Scales (EachMovie)
In order to analyze the experiments thoroughly, in this section, we evaluate how different methods perform on dif-ferent users based on how many ratings the users rated in the training datasets. We first group all the users in the training datasets based on the number of observed ratings, and then measure the prediction accuracies of different user groups. The experimental results conducted in both Movie-Lens and EachMovie datasets are illustrated in Figure 2 and Figure 3, respectively. In these two figures, in order to in-terpret the results more intuitively, we include the baseline method RSVD for comparison since it does not include any social information.

Users are grouped into 6 classes:  X  X 1, 20) X ,  X  X 20, 40) X ,  X  X 40, 80) X ,  X  X 80, 160) X , X  X 160, 320) X  and  X  &gt; =320 X . Figure 2(c) and Figure 3(c) summarizes the distributions of the number of testing data according to the groups in the training data. For example, in the EachMovie dataset, there are a total of 70,677 user-item pairs need to be predicted in the testing dataset in which the related users in the training dataset have rated 1 to 19 items.

From Figure 2(a), Figure 2(b), Figure 3(a) and Figure 3(b), we can see that the method SR u +  X  i +  X  with implicit social in-formation consistently outperforms the RSVD method in all the user groups. We also notice an interesting phe-nomenon, that is, the method SR u +  X  i +  X  performs much bet-ter than RSVD when more ratings are observed. Actually, when more ratings are observed for a user, the similarity cal-culation process will find more accurate similar or dissimilar neighbors for this user since we have more information to represent or interpret this user. Hence, it will perform bet-ter than RSVD especially when more ratings are observed.
We use the Douban 3 dataset in this subsection since in addition to the user-item rating matrix, it also contains a social friend network between users.

Douban is a Chinese Web 2.0 Web site providing user rat-ing, review and recommendation services for movies, books and music. Users can assign 5-scale integer ratings (from 1 to 5) to movies, books and music. It also provides Facebook-like social networking services, which allows users to find http://www.douban.com Table 5: Statistics of User-Item Matrix of Douban Table 6: Statistics of Friend Network of Douban their friends through their email accounts. This means that most of the friends on Douban actually know each other offline.

The Douban dataset we study in this paper contains 129,490 unique users and 58,541 unique movies with 16,830,839 movie ratings. As to the social friend network, the total number of friend links between users is 1,692,952. The statistics of the Douban user-item rating matrix and social friend network are summarized in Table 5 and Table 6, respectively.
We compare the following three methods using Douban datasets: 1. SR exp : this is the social regularization method de-2. SR imp : this is the social regularization method that 3. SR top 10 imp : this is also a social regularization method All the parameters of the above three methods are identical for fairly comparison.

The results are summarized in Table 7. In this table, we evaluate three methods using different percentages of training data, i.e., 40% and 60%. From the results, we sur-prisedly find that for all the settings, the SR exp method performs slightly better than both SR imp and SR top 10 imp proaches, which indicates that in recommender systems, us-ing user-established explicit social connections are better than computer-generated implicit social information.
In order to find out why using explicit social connections is more effective, we conduct the consistence analysis on three social networks we have, including one explicit (used in SR exp method), and two implicit social networks (used in SR imp and SR top 10 imp methods). The questions we address in this analysis are: How consistent are one user X  X  social peers? Do the similarities between a user and his/her social peers vary a lot?
In order to answer the above questions, we evaluate the consistences based on the following metric, i.e., Root Mean Square Distance (RMSD). The definitions of user i are: where s ik is the similarity between user i and user k defined in Equation 6, s i is the average social similarity of user i , while S ( i ) represents the list of social peers of user i .
From the definitions, we can see that we are actually mea-suring in what extent a user X  X  social similarity s if will devi-ate from his/her average social similarity s i . If a user X  X  so-cial peer similarities all fall into a small range, then his/her RMSD will be relatively small, which indicates this user X  X  social peers are very consistent with this user. If we observe a large RMSD value, then this user X  X  social peers are rela-tively diverse. Figure 4 shows the analysis results of RMSD.
We notice that the curves of these three social networks illustrate different patterns. The figure reveals that a very large portion of users in the generated two implicit networks have very small RMSD values, which implies that users X  so-cial peers are relatively more consistent in these two implicit social networks. The RMSD values in Douban explicit friend communities are relatively larger, which presents that users X  social peers in this network are more diverse.

Combining the results we obtain from Table 7, this ob-servation actually suggests that social network with larger friend diversity is more effective in improving recommenda-tion quality. This conclusion also coincides with the intu-ition we propose in Section 4.3, i.e., dissimilar users can also be utilized to improve recommender systems.
This paper studies a research problem on how to improve recommender systems using implicit social information. A very general matrix factorization framework is employed to incorporate different implicit social information. The exper-imental analysis suggests that similar user information, dis-similar user information, similar item information and dis-similar item information can be effectively used to improve recommender systems. Our work not only provides in-depth insights to social recommendation techniques, but also will greatly extend the impact of previous and upcoming social recommendation approaches. [1] P. Bedi, H. Kaur, and S. Marwaha. Trust based [2] J. S. Breese, D. Heckerman, and C. Kadie. Empirical [3] M. Deshpande and G. Karypis. Item-based top-n [4] J. L. Herlocker, J. A. Konstan, A. Borchers, and [5] T. Hofmann. Collaborative filtering via gaussian [6] T. Hofmann. Latent semantic models for collaborative [7] J. Huang, X.-Q. Cheng, J. Guo, H.-W. Shen, and [8] M. Jamali and M. Ester. Trustwalker: a random walk [9] M. Jamali and M. Ester. A matrix factorization [10] R. Jin, J. Y. Chai, and L. Si. An automatic weighting [11] A. Kohrs and B. Merialdo. Clustering for collaborative [12] Y. Koren. Factorization meets the neighborhood: a [13] Y. Koren. Collaborative filtering with temporal [14] Y. Koren, R. M. Bell, and C. Volinsky. Matrix [15] M. Kurucz, A. A. Benczur, and K. Csalogany.
 [16] G. Linden, B. Smith, and J. York. Amazon.com [17] N. N. Liu and Q. Yang. Eigenrank: a ranking-oriented [18] H. Ma, I. King, and M. R. Lyu. Learning to [19] H. Ma, M. R. Lyu, and I. King. Learning to [20] H. Ma, D. Zhou, C. Liu, M. R. Lyu, and I. King. [21] P. Massa and P. Avesani. Trust-aware collaborative [22] P. Massa and P. Avesani. Trust-aware recommender [23] J. O X  X onovan and B. Smyth. Trust in recommender [24] J. D. M. Rennie and N. Srebro. Fast maximum margin [25] R. Salakhutdinov and A. Mnih. Probabilistic matrix [26] R. Salakhutdinov and A. Mnih. Bayesian probabilistic [27] B. Sarwar, G. Karypis, J. Konstan, and J. Riedl. [28] L. Si and R. Jin. Flexible mixture model for [29] N. Srebro and T. Jaakkola. Weighted low-rank [30] N. Srebro, J. D. M. Rennie, and T. Jaakkola. [31] K. Yu, S. Zhu, J. Lafferty, and Y. Gong. Fast [32] Q. Yuan, L. Chen, and S. Zhao. Factorization vs. [33] Y. Zhang and J. Koren. Efficient bayesian hierarchical
