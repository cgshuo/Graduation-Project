 1. Introduction
Global optimization is an important issue in product develop-ment allowing to handle complex and antagonist objectives. Typically, reducing costs while meeting some performances con-straints. A preliminary design model consists, in many cases, the product combined with constraints brought generally by the specifications. Theses models often involves several engineering the constraints must be fulfilled.

The selection of the optimization algorithm is important and depend on the characteristic of the model to be optimized. The engineering problems handled in the preliminary design step belong to a large and complex class of optimization problems with non-linear and non-convex functions. Therefore, it is unthinkable, at least nowadays, to use deterministic global optimization algorithms (interval-based branch-and-bound for example) to find exact global optima in a reasonable runtime. The above shortcoming may be avoided using stochastic optimi-zation algorithms. One strength of those methods is that they do not require the objective function and the constraints to be continuous and differentiable. Consequently, the optimization model may be a black box where only the information about the inputs and outputs is needed.

PSO algorithm to solve engineering problems called CVI-PSO is each one. We propose to use the interval arithmetics in order to tested on a benchmark of 24 mathematical problems and three reformulations will be proposed and compared.

In Section 2 , a state of the art of the PSO basics and several constraint-handling mechanisms found in the PSO literature is presented. Section 3 presents the method proposed to estimate the total constraint violation function and the corresponding proposed CVI-PSO algorithm. Section 4 provides experimental results based on a well-known theoretical and engineering bench-marks and comparisons with previously reported results. Section an electrical actuator. 2. PSO: state of the art
PSO is stochastic, population-based, global optimization algo-rithm mainly dedicated to continuous problems (continuity of the search space). It was introduced in 1995 ( Kennedy and Eberhart, efficiency in solving engineering problems and has received interest from optimization and engineering communities. In addition, it depends on few parameters to be set. 2.1. Basics of PSO PSO is initially proposed to solve unconstrained problems. candidate solution. PSO finds the global optimum by moving each particle with randomly weighted velocities. Suppose that the search space is ( n )-dimensional for a minimization problem min vector x j  X  t  X  X  X  x j i  X  t  X  T . Its velocity is v j  X  t  X  X  X  v v  X  t  X  1  X  X  w v j  X  t  X  X  c 1 r 1  X  xp j  X  t  X  x j  X  t  X  X  X  c where w is the inertia weight introduced to control excessive variation of particles X  positions outside the variable bounds, c are acceleration parameters called cognitive and social para-corresponding fitness xp j  X  t  X   X  argmin yp j  X  t  X  X  f  X  xp j  X  t  X  X  8 &gt; &lt; &gt; : xg  X  t  X   X  argmin yg  X  t  X  X  f  X  xg  X  t  X  X  8 &lt; : , 8 t  X  3  X  follows: x
The algorithm ensures that each particle position belongs to the search space. Thus, the bound constraints are enforced by x  X  t  X  1  X  X 
The process is repeated until a user-defined termination conditions are reached: maximum number of iterations, max-imum number of fitness function evaluations, closed 0 velocity variation, maximum runtime y 2.2. Constraint-handling mechanisms in PSO
A constrained optimization problem is formulated as follows: min s : t : g k  X  x  X  r 0 , k  X  1 , ... , p h k  X  x  X  X  0 , k  X  p  X  1 , ... , p  X  q  X  6  X 
To tackle constrained problems, several constraint-handling mechanisms have been proposed. The literature review analysis have been the most implemented mechanisms to deal with constraints in optimization problems. Parsopoulos and Vrahatis (2005) proposed a non-stationary multi-stage assignment penalty function mechanism. They used penalty factors to account for the sum of violated constraints. Sedlaczek and Eberhard (2006) also introduced an extended non-stationary penality function, namely the augmented Lagrange multiplier. He and Wang (2007a) imple-mented a co-evolutionary PSO, where PSO is performed with two kinds of swarms evolving interactively for evolutionary explora-tion and exploitation in spaces of both solutions and penalty factors. Wang and Yin (2008) proposed a new ranking selection scheme incorporated into PSO to guide the search of feasible particles. The objective function and constraints are handled to their objective function values. Many other methods have been implemented as extensions of multi-objective evolutionary algo-rithms, for instance the method IS-PAES based on the Pareto et al. (2008) proposed an adaptive trade-off model (ATM) for constrained optimization. In a more recent paper ( Wang et al., 2009 ), the authors proposed a new approach named AATM using a shrinking space technique which aims at accelerating the ATM.
The shrinking space technique is proposed by Aguirre et al. region by shrinking the constrained search space. Hu and with constraints. PSO is initialized with a group of feasible solutions and a feasibility function is used to check if the new explored solutions satisfy the constraints. Methods based on preserving feasibility were also employed by He et al. (2004) in particles. Pulido and Coello (2004) presented a simple mechanism algorithm incorporates a turbulence operator that improves the and He and Wang (2007b) also applied other methods based on the feasibility-based rule to deal with constraints. Yet,
Worasucheep (2008) proposed to use a feasibility-based mechan-ism combined with stagnation detection and dispersion mechan-particles. Lu and Chen (2008) presented a modified PSO, called self-adaptive velocity PSO. To handle constraints, they adopted a dynamic-objective constraint-handling method. Montes and
Coello (2005) used a diversity mechanism called SMES to allow next population. Liu et al. (2010) proposed an hybrid PSO named
PSO-DE, which integrates PSO with differential evolution (DE) to solve constrained numerical and engineering problems. DE is used to update the best position of particles in order to force them jump out of stagnation. 3. Proposed constrained PSO: CVI-PSO solutions. The proposed constraint-handling mechanism consists the proposed mechanism improves the fitness function in order to find the optimal solution. This mechanism directly affects the selection mechanism of both the particle X  X  best position and the swarm X  X  best one. At each PSO iteration, the constraint total optimization problem, we use a basic lexicographic method. The algorithm CVI-PSO for constraint violation with Interval arithmetic PSO.

Given a point x in the feasible region, an inequality constraint g g points x ( h k  X  x  X  X  0) ( Nocedal and Wright, 2006 ).
A feasibility-based rule is introduced to evaluate the amount time t . The constraints g k and h k are computed and the total position to the feasible region: 8 j  X  1 , ... , m , 8 t d  X  g k  X  x j  X  t  X  X  X   X  d  X  h k  X  x j  X  t  X  X  X   X  equal to 0.
 The constraints may not have the same order of magnitude. Consequently, one or more constraints may dominate and mask the effect of the other ones. Thus, it is necessary to perform a normalization of the total violation of the constraints to make is normalized with respect to its potential maximum violation. constraint. To compute dp max k , we consider the range of a box ( k  X  p  X  1 , ... , p  X  q  X  range  X  g k , X  X  X f g k  X  x  X  = x A X g :  X  min range  X  h k , X  X  X f h k  X  x  X  = x A X g :  X  min 8 &gt; &gt; &gt; &lt; &gt; &gt; &gt; :
To estimate the range of a constraint, we propose to use the numbers, the interval arithmetic extends these operations to elementary operators have been redefined for intervals as fol-lows: 8 &gt; &gt; &gt; &gt; &gt; &gt; &lt; &gt; &gt; &gt; &gt; &gt; &gt; :
Elementary operations and basic functions (cos, sin, log y ) have been extended to the interval computation. We propose to use the natural extensions issued from the interval computation to compute the constraint bounds over a box. More details about interval computation can be found in Moore (1966) and Hansen (1980) G k  X  X  X  X  X  LB k , UB k , k  X  1 , ... , p
H k  X  X  X  X  X  LB k , UB k , k  X  p  X  1 , ... , p  X  q (
Meaning that: 8 x A X :
Then, the largest violation of the inequality constraint g dp dp
Example 1. Let the constraint g 1  X  x  X  X  x  X  x 1  X  X  1 r 0 and X the maximum violation of g 1  X  x  X  is equal to UB 1  X  3. the maximum violation of h 1  X  x  X  is equal to max f UB 1 max f 1 ; 9 2 9 g X  2.

Property 2. The maximum violation of an analytic constraint is no solution .

The violation degree d k of an analytic constraint k achieved by violation of this k th constraint. It is formalized as follows: 8 j  X  1 , ... , m and 8 t : dp k  X  x j  X  t  X  X  X  dp k  X  x j  X  t  X  X  X  satisfied. When a position is updated, the bound constraints are enforced by considering for each variable i the nearest bound equality then d  X  h k  X  X  0. This property avoids the 0 division.
Finally, the constraints total violation achieved by the j th violations of all analytic constraints: dp  X  x j  X  t  X  X  X  p  X  q .
 Property 5. From Eq. (17) and Property 4 , dp  X  x j  X  t  X  X 
When updating the particle X  X  best position ( Section 3.1 ) and the swarm best one ( Section 3.2 ), the principle of CVI-PSO when infeasible, lies closer to the feasible region. Thus, we consider the minimization of the constraint total violation function dp  X  x  X  more important than the minimization of the always preferred. If two positions have the same violation, the following sequence of problems P 1 and P 2 are solved one at a time: min
Algorithm 1. Constrained PSO proposed: CVI-PSO. 1: Choose a swarm size m , a stopping criterion and PSO parameters. 2: Initialization ( t  X  0) 3: for j  X  1to m do 4: randomly generate an initial particle position x j  X  0  X  and velocity v j  X  0  X  5: compute the constraints values g k  X  x j  X  0  X  X  and h 6: compute the total constraints violation: dp  X  x j  X  0  X  X  7: update the particle initial best position: xp j  X  0  X  8: end for 9: update the initial global best position xg  X  0  X  10: repeat 11: t  X  t  X  1 12: for j  X  1to m do x j  X  t  X  (Eq. (4) ) 14: enforce the variable bound constraints (Eq. (5) ) 15: compute the analytic constraints g k  X  x j  X  t  X  X  and h 16: compute the total constraints violation dp  X  x j  X  t  X  X  17: update the particle best position xp j  X  t  X  ( Section 3.1 ) 18: end for 19: update the global best position of the swarm xg  X  t  X  ( Section 3.2 ) 20: until stopping criterion is met 3.1. Update the best position of each particle position is found by solving the sequence of the problems P
P : 8 j  X  1 , ... , m , 8 t xp  X  t  X   X 
Two main cases could be distinguished to find the best particle position: current best position have the minimum total violation, then its new best position is set as either its new position or its current best position. current best position have the same violation, then the particle X  X  best position is updated as the position that has the best fitness value. 3.2. Update the global best position of the swarm at iteration t is found by solving the sequence of the two problems: 8 t xg  X  t  X   X 
Two main cases could be distinguished to find the swarm best position: (i) If J A J  X  1, meaning that one and only one best particle position corresponds to the optimal solution of the problem
P 1 , then this position is considered as the new global best position. correspond to optimal solutions of the problem P 1 , then the position with the best fitness function is considered as the new global best position. 4. Simulation results 4.1. Experimental settings
The CVI-PSO has been implemented in Matlab version 7.8. The tests have been accomplished on a 2.66 GHz Intel Core(TM)2 with 8.00Go-RAM. For the interval arithmetic computations, we use the well established Matlab Library IntLab ( Rump, 1999 ). This library allows the operators overloading which make the auto-mation process quite simple. This is a very important feature especially when dealing with large optimization problems.
In all experiments we have used a population size of m  X  50 particles as this has been shown to be sufficient for many engineering problems. The termination condition stopped the process after a pre-fixed number of iterations Iter  X  500. This corresponds to 25,000 fitness function evaluations (FFE). We performed 20 trials of running algorithm for each test problem. used a w decreasing with iteration t in a way to balance global and local searches and to achieve better convergence w  X  0 : 5  X  1 2  X  ln  X  t  X  X  1  X  , t  X  1 , ... , Iter #  X  21  X 
Arumugam et al. (2008) suggest to choose the parameters c and c 2 as a function of local and global best values of the fitness function. Other experimental studies suggested an empirical relation between w and c 1 , c 2 ( Van Den Bergh, 2001 ). We performed many experiments using uniform random parameters the benchmark.

Also, the initialization of the swarm affects the convergence of the PSO. Campana et al. (2010) gave both theoretical and our experiments, the initial point of each particle is generated from a uniform distribution so to satisfy the bound constraints.
In order to show the performance of the CVI-PSO, several experiments are performed on a well-known benchmark includ-(2010) and 3 engineering problems ( He and Wang, 2007a ; Aragon by various approaches. The best solutions and the statistical simulation results obtained by the CVI-PSO algorithm are reported and compared with those obtained using other techniques.

The benchmark includes various objective functions (linear, # is the number of linear equalities and NLEC # is the number of experimentally as the percentage of feasible solutions among 10 randomly generated solutions. The coefficients a  X  %  X  define a measure of the difficulty of solving the problems and are very close to those reported in Wang et al. (2009) . 4.2. Simulation results for the 24 test functions
The selected problems have been well studied before as benchmarks by various approaches. The 24 test functions have been solved before using the following algorithms: an accelerat-ing adaptive trade-off model using a shrinking space technique (AATM) ( Wang et al., 2009 ), a heuristic inspired by the T-Cell model of the immune system ( Aragon et al., 2010 ) and a differential evolution combined variants DECV ( Mezura et al., 2010 ).

The statistical simulation results obtained by the above-mentioned approaches as well as the CVI-PSO are shown in Table 2 . These results include the best objective value found, are based on feasible solutions only. Using the CVI-PSO all the satisfied without any relaxation. This is not the case with the other algorithms.

Fig. 1 shows an evolving process of the fitness value when solving the problem g05 using the CVI-PSO. Fig. 2 shows the the proposed constraint-handling mechanism. From one iteration to the next, the fitness function could be superior (worse) but with less total violation of the constraints.

The above experiment have shown that the CVI-PSO can close to the global optimum in the remaining problems. and g03 (respectively, 0.45e 15 and 0.37e 15) and equal to 0 for g11 and g12.

For the problem g20, the CVI-PSO found feasible solution in only one of the 20 runs while the other methods fail. For the problem g22, our algorithm and the other methods could not find feasible solutions in any single run. These results are quite evident because both problems have a value of a  X  0 % , a higher constraints (respectively, 14 and 19) and more non-linear con-straints (respectively, 18 and 12).

For the problems g05, g17 and g23, the CVI-PSO always finds the same solutions the best solutions reported in previous works are better. The solution found using CVI-PSO made active all the constraints without any relaxation while the other methods considered a relaxation of the equality constraints. For the problem g24, despite its disjoint feasible region the only two inequality constraints.
 The numerical results on the benchmark shown that the CVI-problems with high dimensionality and high number of equality constraints are difficult to solve.

For problems involving equality constraints, CVI-PSO has found equivalent or even better results than the best known optima without using relaxations. 4.3. Simulation results for the three engineering problems
The three engineering problems considered are a pressure vessel design problem ( Kannan and Kramer, 1994 ) (eng01), a welded beam design problem ( Rao, 1996 ) (eng02) and a tension/ compression string design problem ( Belegundu, 1982 ) (eng03).
The problems eng01 and eng03 have been solved by the following approaches: a co-evolutionary PSO (CPSO) ( He and
Wang, 2007a ), a hybrid PSO (HPSO) ( He and Wang, 2007b ), an accelerating adaptive trade-off model ATM using a shrinking space technique (AATM) ( Wang et al., 2009 ), a T-Cell heuristic approaches: a GA with binary representation ( Deb, 1991 ), a GA-based co-evolution model ( Coello, 2000 ), a CPSO ( He and Wang, 2007a ) and an HPSO ( He and Wang, 2007b ). The statistical value found, mean, standard deviation and worst. The statistics are based on feasible solutions only.

The number of FFE is used as a comparison criterion in order to compare our results to those found using other algorithms.
It corresponds to the number of FFE after which no noticeable improvement is made (all the particles are motionless). For example, for the CPSO, the FFE reported in the reference paper been fixed to 25,000 FFE as after the 25,000th fitness function evaluation, the particles were practically motionless and the algorithm reaches a stabilization of the swarm.

From Table 3 , it can be seen that the best solution found by both CVI-PSO and HPSO is better than the best solutions found by methods are all better than that obtained by CVI-PSO except for T-Cell that performs worst statistically. It is worth mentioning that the maximum number of FFEs of HPSO is 81,000. Two constraints are active when using CVI-PSO while HPSO makes obtained by the CVI-PSO (288.455).

From Table 4 , it can be seen that the best feasible solution found by CVI-PSO is competitive to the result obtained using HPSO and better than the results obtained by other techniques.
The average searching quality of CVI-PSO is superior to those of other algorithms, and even the worst solution found by the CVI-PSO is better than the best one found by other techniques except 0 (6.12e 04). The best feasible solution found by CVI-PSO makes four constraints active.

From Table 5 , it can be seen that the best feasible solution found by CVI-PSO (0.0126655) is very close to the best solution found using HPSO (0.0126652). Also, the average searching quality of CVI-PSO is competitive to those of the other methods.
Moreover, the standard deviation of the results by CVI-PSO in 20 independent runs is close to those of the other methods. 5. Case study: electrical actuator problem 5.1. Model description
The problem consists in dimensioning a slot-less rectangular waveform permanent magnet machine ( Messine et al., 1998 ).
The design model, established from simplified electromagnetic modeling, corresponds to various equations ensuring the flux conservation in the magnetic circuit, the electromechanical con-by Joule effect ( Messine et al., 1998 ).

The structural model combines six non-linear equality con-straints from several engineering fields: electrical, magnetic, mechanical and heat. The electromagnetic torque G em (constraint h the no-load magnetic flux density by the current, where D is the arc factor, K f is the coefficient of the magnet leakage, B amplitude of the no-load-flux density at the level of the bore diameter. The constraint h 2 gives the global winding heating up
E , where J cu represents the current real density and k rE current electric loading. The constraint h 3 gives an empirical relation between K f and the machine geometric dimensions, the permanent magnets and M their magnetic polarization. The h in the iron B fer . The number of pole pairs p (constraint h the pitch pole D p . Because of manufacturing constraints, the mechanical air gap e must be more than or equal to 1 mm and generated by the inductor. The machine is sized to minimize the active part volume V u .

The user specifications consist in dimensioning a machine type magnets ( M  X  0.9 T) and laminations that can stand a flux copper such that the global winding heating up is E ch  X  10
The number of pole pairs is fixed to p  X  4 and the pitch pole D fixed to 0.1 m.

For convenience purposes, let us rename the variables as follows: D  X  x 1 , l  X  x 2 , l a  X  x 3 , E  X  x 4 , C  X  x 5
K  X  x 9 , e  X  x 10 .

The final constrained optimization problem (Eq. (22) ) contains 6 non-linear equality constraints and 17 variables (10 bound this problem min p x 1 x h : G em  X  p 2 x h h 3 : x 9  X  1 : 5 px 6 x 10  X  x 4 x h 4 : x 7  X  2 Mx 3 h 5 : x 5  X  p x 6 x 7 x 1 4 pB h 6 : p  X  p x 1 D 0 : 01 r x 1 r 0 : 50 , 1 : 0 r x 2 r 2 : 5 , 0 : 001 r x 0 : 001 r x 4 r 0 : 05 0 : 001 r x 5 r 0 : 05 , 0 : 8 r x 6 r 1 : 0 , 0 : 1 r x 7 10 5 r x 8 r 10 7 0 : 01 r x 9 r 0 : 30 , 0 : 001 r x 10 r 0 : 005
G em  X  10 : 0 , M  X  0 : 9 , B fer  X  1 : 5 , k r  X  0 : 7 , E p  X  4 , D p  X  0 : 1  X  22  X  5.2. Model reformulation
A reformulation is adopted in order to improve the efficiency of the CVI-PSO. Precision and convergence may be improved if the set of constraints is reformulated into an equivalent set with fewer variables. To understand the reformulation, let us look at the structure of models. We consider that the objective function and the constraints are expressively available. It is common practice to classify the variables into input ones (design para-meters) and output ones (performances). We also propose to transform the inequalities into equalities in order to meet the scheme inputs/outputs. The following initial problem: min s : t : g k  X  x  X  r 0 , k  X  1 , ... , p h k  X  x  X  X  0 , k  X  p  X  1 , ... , p  X  q  X  23  X  can be reformulated as follows: min s : t : x k  X  e k  X  x  X  , k  X  1 , ... , r y k  X  f k  X  x  X  , k  X  1 , ... , p  X  q r  X  24  X  where constraints. y k  X  f k  X  x  X  are the remaining constraints, reformulated by introducing new variables y k , so as to transform the initial inequality and equality constraints into equality constraints only, with: y k A 1 , 0 if f k was initially an inequality con-straint, y k A  X  0 , 0 if f k was an equality constraint.
With this reformulation, the algorithm CVI-PSO only handles the ( n r )-dimensional vector of variables x r  X  1 , ... , x all the other variables x 1 , ... , x r , y 1 , ... , y p  X  q r reformulated constraints e k must be addressed in an appropriate order to allow computing the  X  X  X utput X  X  variables.
 Example. Let us consider the constraints of the problem g05 (Eq. (25) ) g : x 4  X  x 3 0 : 55 r 0 g : x 3  X  x 4 0 : 55 r 0 h :1000 sin  X  x 3 0 : 25  X  X  1000 sin  X  x 4 0 : 25  X  X  894 : 8 x h :1000 sin  X  x 3 0 : 25  X  X  1000 sin  X  x 3 x 4 0 : 25  X  X  894 : 8 x h 0 r x 1 , x 2 r 1200 , 0 : 55 r x 3 , x 4 r 0 : 55  X  25  X 
This problem contains n  X  4 variables, p  X  2 inequalities, q  X  3 equalities. The constraints can be reformulated and ordered as follows (Eq. (26) ). With this reformulation, the CVI-PSO only other variables x 1 , x 2 , y 1 , y 2 , y 3 can be deduced. x  X  1000 sin  X  x 3 0 : 25  X  X  1000 sin  X  x 4 0 : 25  X  X  894 : 8 x  X  1000 sin  X  x 3 0 : 25  X  X  1000 sin  X  x 3 x 4 0 : 25  X  X  894 : 8 y  X  x 4  X  x 3 0 : 55 y  X  x 3  X  x 4 0 : 55 y  X  1000 sin  X  x 4 0 : 25  X  X  1000 sin  X  x 4 x 3 0 : 25  X  X  1294 : 8 0 r x 1 , x 2 r 1200 , 0 : 55 r x 3 , x 4 r 0 : 55 , y , y 2 A 1 , 0 , y 3 A  X  0 , 0  X  26  X 
With a similar reasoning, the actuator design problem has 10
CVI-PSO only handles (4)-dimensional vectors of variables from which the remaining variables can be deduced. The first reformu-lated model of the actuator design problem has the following form (Eq. (27) ). The input variables x 3 , x 4 , x 6 , x the equality constraints h 6 , h 2 , h 4 , h 3 , h 1 and h that this model has several reformulations with four input specific order of the constraints allowing to compute all the output variables min p x 1 x h : x 1  X  p D p p h : x 8  X  h : x 7  X  2 Mx 3 h : x 9  X  1 : 5 px 6 x 10  X  x 4 x h : x 2  X  p 2 G h : x 5  X  p x 6 x 7 x 1 4 pB 0 : 01 r x 1 r 0 : 50 , 1 : 0 r x 2 r 2 : 5 , 0 : 001 r x 0 : 001 r x 4 r 0 : 05 0 : 001 r x 5 r 0 : 05 , 0 : 8 r x 6 r 1 : 0 , 0 : 1 r x 7 10 0 : 01 r x 9 r 0 : 30 , 0 : 001 r x 10 r 0 : 005
G em  X  10 : 0 , M  X  0 : 9 , B fer  X  1 : 5 , k r  X  0 : 7 , E p  X  4 , D p  X  0 : 1  X  27  X  5.3. Numerical results
Several experiments are performed on the actuator design problem including the initial model and three reformulated models. The characteristics of these models are reported in output variables, Order is the order of constraints.
The statistical simulation results obtained by CVI-PSO are shown in Table 7 for four models. The results include the best objective value found, mean, standard deviation, worst found and equality constraints h ( x ) without relaxation.

The best solution with a high precision ( V u  X  6 : 073466092020043e 04) corresponds to the experiment with m  X  30, Iter  X  200 obtained using the first reformulated model that as m and/or Iter increase, the global optimal solution is refined insignificantly using a high precision computing. Using in 20 independent runs is very close to 0 (1.36e 19). We note that the CVI-PSO can converge to the global optimum quickly and reached even faster in 5000 FFEs (10 particles 50 iterations 10 runs).

The results obtained using the first reformulation are slightly reformulated models the total violation of the constraints is always equal to 0 meaning that all the solutions are feasible the reformulated models are around 5%. Despite their same dimension (four inputs and six outputs) the CVI-PSO found better solutions and standard deviation with the first reformulated model. This is due to the complexity of the constraints as they do not have the same shape of the non-linearities.

In the case of the initial problem and using the same experi-mental settings, we always obtain better solutions but with a constraints X  violation not equal to 0 meaning that the solutions are not feasible. Based on the above simulation results and comparisons, it can be concluded that the constrained PSO proposed applied to the reformulated model is of superior optimal solution is 120,000 (30 particles 200 iterations 20 runs). So, it can be pointed out that the CVI-PSO proposed is a are reformulated as suggested.

In a recent work ( Mazhoud et al., 2012a , 2012b ), we approached the same example using global deterministic algo-rithm. This algorithm is based on interval branch and bound and constraint propagation. It allows consistent enclosure for both global optima and all the corresponding optimizers. Within the for the reformulated model was reached in 133,282 function original model, the same optimal solution (6.12e 04) was obtained in 1,974,459 function evaluations. It can be concluded that the CVI-PSO applied to the reformulated model has better optimal solution with fewer function evaluations than the interval-based branch and bound algorithm. On the other side, for the original model we obtained a feasible optimal solution
CVI-PSO. 6. Conclusion
We proposed in this paper a new constraint-handling mechan-ism for constrained particle swarm optimization. This mechanism is used when updating both a particle best position and the swarm global best position. The main idea is to transform the constrained problem into unconstrained bi-objective optimiza-tion problem. At each PSO iteration, a new constraint total violation function is introduced as a second objective. This
Then, the model is formulated as a bi-objective optimization problem solved using a lexicographic method.

We provided several experiment results based on a well-known benchmarks and comparisons with previously reported results. Other simulation results based on a real engineering design problem show the efficiency of the CVI-PSO when dealing with reformulated models.
 For many problems, it can be seen that the solutions found by
CVI-PSO are competitive to the results obtained by other algo-rithms. CVI-PSO made active many constraints and the standard deviations of the results are equal or very close to 0. In addition to the numerical performances of the proposed
CVI-PSO, an important criteria must be highlighted for practical considerations. In fact, CVI-PSO is very simple to implement. It constraint handling mechanism. In the new releases of Matlab, operators overloading is permitted. This allows a simple automa-tion of the proposed constraint handling mechanism based on interval arithmetic.

Our future work is to incorporate suitable variable bound constraints reduction to further minimize the total amounts of be a good accelerating technique to achieve better performances by reducing the search space. In addition, we will study other feasibility-based techniques to handle model constraints. For example, we will study the multi-criteria based techniques to consider different weights for the constraint violation. Indeed, most engineering problems involve both strong and soft constraints.
 References
