 Nicoletta Calzolari Abstract This paper demonstrates that Wordnet-LMF, a version of ISO LMF, allows us to effectively design and implement Web services for accessing WordNet-type semantic lexicons that conform to the REST Web service architecture. The implemented prototype service currently provides access to native wordnets as well as to a bilingual concept dictionary. This paper thus describes slight revisions that were made to the Wordnet-LMF specifications to model and accommodate a non-wordnet-native bilingual concept dictionary.
 Keywords Lexical markup framework Semantic lexicons Wordnets Language services RESTful Web service design 1 Introduction The utility of the lexical markup framework (LMF) (Francopoulo et al. 2008 )in providing a standardized framework for modeling and representing NLP lexicons has been well demonstrated in several projects (Quochi et al. 2008 ; Bond et al. 2008 ; Henrich and Hinrichs 2010 ). However, only a few Web services have been implemented for accessing LMF-based lexicons. Looking at the state of the art, we see that the EU KYOTO project has developed the Multilingual Knowledge Repository, 1 which provides access to wordnets in seven different languages and makes it possible to import and export them by employing an LMF-compliant data format. In addition, CLARIN-NL provides access 2 to the Dutch Lexicon of multiword expressions (DuELME) (Gre  X  goire 2010 ). These services rely on lexical resources that are formatted in LMF in advance.

This paper, on the other hand, focuses on an LMF-aware lexicon-access Web service, which dictates a lexicon Web service that accepts LMF-compliant structural queries and presents the search results as a sub -lexicon rendered in an LMF-compliant data format. Furthermore, we propose a technical architecture that can effectively accommodate non-LMF-formatted lexical resources. This property is of crucial importance, given the current paradigm shift toward distributed, interoper-able, and openly customizable language resources, in that it could pave the way for a uniform means of access to a variety of language resources via the adoption of content interoperability standards (Soria et al. 2009a ). To date, a number of methods based on LMF have been reported in the literature that address the (semi-)automatic merging of resources (Padro  X  et al. 2011 ; Gurevych et al. 2012 ). This direction could contribute to the creation of virtually combined composite lexical resources via web-service technologies (Hayashi et al. 2011 ).
 This paper details an implemented prototype service 3 that complies with the REpresentational state transfer (REST) Web service architecture (Richardson and Ruby 2007 ). In it, we state that the resource-centric view of a Web service provided by REST is highly applicable to this type of Web service. This service currently provides access to native wordnets such as Princeton WordNet (PWN) (Fellbaum 1998 ) and Japanese WordNet (WN-Ja) (Bond et al. 2008 ), as well as to a non-wordnet-native lexical resource, the EDR electronic dictionary (EDR) (Yokoi 1995 ), which can be viewed as a bilingual concept dictionary. This paper thus describes slight revisions that were made to the Wordnet-LMF (Soria et al. 2009b ) specifications to model and accommodate such an innately bilingual concept dictionary. 2 RESTful design of LMF-aware lexicon access Web services 2.1 LMF-aware lexicon access service From a user X  X  perspective, accessing a lexicon means acquiring relevant portions of the lexicon using a particular search query. Therefore, the computational process underlying a lexicon access service must perform the task of query-driven extraction and return the relevant portions of the lexicon, which constitute a sub -lexicon . Given this rationale, the following two criteria must be satisfied by an LMF-aware lexicon access service, as illustrated in Fig. 1 : (1) it must accept an LMF-compliant structural query and specify a certain sub-lexicon, and (2) it must return the sub-lexicon in an LMF-compliant data format.
It should be noted here that although the target lexical resource can obviously be encoded using LMF, this need not be the case. Instead, it could be stored in a relational database, as shown in the next section. In such an implementation, the resulting XML document is generated on-the-fly from the database search results. 2.2 RESTful design of lexicon access services REST is a Web service architecture based on a set of principles that describe how networked resources are specified and accessed. A Web service built on the REST architecture is referred to as a RESTful Web service. Using this architecture, inputs representations of resources. In the context of this paper, the main REST principle that is relevant is its definition of a resource as a coherent and meaningful object that must be designated using a uniform resource identifier (URI). In other words, the sub-lexicon specified in a query must be designated with a URI. This requires the development of a set of principled URI patterns to represent possible sub-lexicons. In other words, we have an opportunity to map lexicon sub-structures that are defined by LMF to URI patterns.

In addition, the resulting resources need to be represented in a well-defined sharable format, allowing us to apply a standardized representation framework when rendering possible sub-lexicons. It is expected that the standardized framework such as LMF would be shared by relevant communities; therefore, we do not have to adopt another popular Web service framework, the simple object access protocol (SOAP). The SOAP-based Web service architecture requires the formal definition of input and output data types for a Web service to be defined in the associated Web service description language document. In short, the resource-centric approach provided by the REST principles could be highly applicable to lexicon access Web services.
 3 Prototype Web service for accessing WordNet-type semantic lexicons 3.1 General description We sought to evaluate the utility of LMF for the implementation of services, based on the design principles discussed in the previous section. Thus, we developed a prototype LMF-aware Web service that provides access to WordNet-type semantic lexicons such as PWN version 3.0, WN-Ja version 1.1, and EDR version 3. We adopted Wordnet-LMF as the enabling framework because it provides a simple, yet adequate foundation for modeling and representing WordNet-type semantic lexicons.

The general schematic architecture of the proposed semantic lexicon access Web service is shown in Fig. 2 . A user query is represented as a REST URI and mapped into the corresponding database search function, where the search is carried out. The retrieved objects are components of a sub-lexicon, which is compiled to generate a Wordnet-LMF-compliant XML document. The current implementation stores the target lexical resources in a relational database, rather than pre-converting them entirely to Wordnet-LMF-compliant XML documents. We employed a Python-based Django Web framework 4 as the backend mechanism. Django is highly suited to the implementation of this type of Web service because it provides a built-in mechanism for URI-to-resource mapping (URI dispatcher) and a template mechanism that enables efficient generation of XML documents using an XML schema, which in this case was a Wordnet-LMF XML schema. 3.2 Mapping URIs to DB search functions The URI-to-resource mapping mechanism aims to identify a relevant callback function for use in a database search by locating a URI pattern that matches with the given URI. Figure 3 shows a pair of URI patterns that are represented as a regular expression and the corresponding callback function. The system can find this pattern-action pair and can successfully invoke the search_by_word function using  X  X  X ank X  X  as its argument, which is labeled &lt; lemma&gt; in Fig. 3 , for the given URI, as follows: http://server/pwn/LexicalEntry/Lemma/writtenForm/bank/ . The argument is always processed as an exact match, unless a prefix/suffix wildcard character (*) is used. It should be noted that the part of this URI path, /LexicalEntry/Lemma/written-Form/ , conforms to the lexicon structure defined by Wordnet-LMF. The lexicon structure model provided by the Wordnet-LMF specifications is shown in Fig. 4 . 5 3.3 URI patterns We devised a set of URI patterns to reflect the lexicon structure as defined by Wordnet-LMF as well as to enhance usability by considering user search intentions simultaneously. Hence, the defined URI patterns provide  X  X  X eady-to-use packages. X  X  Figure 5 summarizes the specification method for our URI patterns, in which two basic patterns and two extended patterns are introduced. Figure 5 shows the correspondences between components defined by the Web standard (RFC3986). 6 In Fig. 5 , the lexicon sub-structure defined by Wordnet-LMF is basically represented by the path_to_element/target_attribute part of a URI path component, query component. Table 1 summarizes the implemented directives that can be used in the queries. 3.4 Illustrative example Figure 6 7 shows an XML document that was returned in response to a particular query. The query is represented as the URI appeared in the label attribute of the GlobalInformation element; it essentially requests the PWN synset associated with the second sense of the noun  X  X  X ank. X  X  The resulting XML document shows that a designated sense is associated with a synset with id= X  X  X ng-09-08420278-n, X  X  which in turn points to 13 synsets with various types of conceptual relationships. One of these relationships is with  X  X  hmem  X  X  (member holonyms), another is with  X  X  hype  X  X  (hypernyms), and others are with  X  X  hypo  X  X  (hyponyms). This depiction might appear to be redundant, since hype is the reverse relationship of hypo . However, it is actually highly efficient, because synsets that are directly connected with the focused synset are instantly retrievable. We would also note in this example that the associated LexicalEntry (with id= X  X  X 109396 X  X  ) is incorporated into the sub-lexicon. This is necessary because the Wordnet-LMF specification, just like the original ISO LMF, requires that a lexicon contain one or more lexical entries. 4 Proposal: revisions to Wordnet-LMF 4.1 EDR electronic dictionary We modeled and represented EDR as a WordNet-type semantic lexicon. The prototype Web service accommodates the EDR and demonstrates the usefulness of LMF when applied to a lexical resource other than native Wordnets. The EDR is not actually a single dictionary, but rather, is a dictionary system that contains monolingual dictionaries (Japanese and English), bilingual dictionaries (J-to-E and E-to-J), a concept dictionary, co-occurrence dictionaries, and corpora.
 The core EDR information structure can be logically depicted, as shown in Fig. 7 . In the EDR, each entry in every dictionary is associated with a concept identifier (CID) that represents a fine-grained language-independent (or Japanese/ English bilingual) concept. A CID can be referred to by multiple lexical entries whose meanings are considered equivalent or similar. For example, in Fig. 7 , two Japanese words ( /ginkou/ , /banku/ ) and three English words (  X  X  X ank, X  X   X  X  X nk., X  X   X  X  X k X  X  ) share the same CID ( 3bc999 ); thus, these words jointly denote the same concept (a financial institution). This allows us to assign a WordNet Synset node to each EDR concept node. The concept nodes then form a taxonomy or ontological structure (in Fig. 7 , this is shown as conceptual system), in which the concept nodes are connected by some conceptual/semantic relationship. These correspondences can be readily captured using the Synset Relation construct provided by Wordnet-LMF. The overall EDR structure can be modeled like PWN, and hence, it can also be modeled and represented using Wordnet-LMF. However, slight revisions are necessary; these are discussed below. 4.2 Revisions to the Wordnet-LMF specifications The EDR is an innately bilingual lexicon that requires the construction of a bilingual synset to represent this dictionary. In fact, a substantial number of EDR concept nodes are denoted by both Japanese and English lexical entries, and many concept nodes have definitions (glosses) in both Japanese and English. However, the Wordnet-LMF and the original ISO LMF do not allow bilingual synsets to be associated with lexical entries across languages, nor do they allow for definition in multiple languages. Encoding such a synset in EDR necessitated the production of a framework of representation. As depicted in Fig. 8 , two solutions were considered. a. Allow a Synset node to hold multiple Definition instances, where each is b. Deliberately split a concept node into Japanese and English synset nodes and
As shown in Fig. 8 a, the first solution (a) is the simplest, because the lang attribute is introduced into the Definition element to explicitly specify the language of the definition and the corresponding example text. It should be noted that an example text is stored in a Statement instance belonging to the corresponding Definition node, although example texts are not shown in Fig. 8 .
Figure 8 b, on the other hand, illustrates the second solution (b), in which the original EDR concept node ( id= X  X  X dr_104edc X  X  ) is split into a Japanese Synset node ( id= X  X  X dr_104edc-J X  X  ) and an English Synset node ( id= X  X  X dr_104edc-E X  X  ). These two nodes are then interconnected by a Sense Axis node. This exact organization was adopted by WN-Ja, 8 and it may be particularly effective in the case in which synsets from other monolingual semantic lexicons are to be further incorporated, because a Sense Axis node can accommodate multiple synsets across languages and functions as an interlingual pivot. However, this solution requires that a Sense Axis node be linked to the EDR conceptual system via an Interlingual External Ref instance. This means that the EDR conceptual system can now be considered an external ontology, rather than part of the linguistic dictionary system, which means that it has to be modeled and represented using a framework other than LMF.

The first solution (a) is simpler and more effective because the lexicon used is innately bilingual/multilingual, and the associated conceptual system needs to remain as part of the linguistic lexicon. Therefore, we propose that the first solution (a) be adopted, and we then slightly revise the current Wordnet-LMF specifications. 5 Discussion This section discusses two distinct issues: one is a possible use case scenario, and the other is the underlying technical architecture.

Although the proposed LMF-aware Web services are not primarily intended to be directly used by human end-users, an interactive Web application for navigating a semantic lexicon can be effectively realized by basing it on these Web services. This approach is presented schematically in Fig. 9 , in which a Web querying form is generated offline/in-advance from the URI patterns of a lexicon access service. 9 The resulting XHTML page is generated on-the-fly from the resulting Wordnet-LMF XML document via a style-conversion process. Such a developed Web application would be quite efficient, because the proposed Web service provides a standardized API based on the widely shared LMF standard.

The underlying technical architecture, as illustrated in Fig. 2 , currently relies on the backend relational database, where contents of the WordNet-type semantic lexicons are organized and stored. Obviously, this is not the only solution for realizing the proposed Web services. An XML-native database or even an RDF store can also be employed, if the incorporated lexical resources conform to the data format. 10 Nevertheless the adopted architecture provides an efficient and neutral foundation that can effectively accommodate a variety of lexical resources; examples of this are EDR in this work, and the BioLexicon as described in (Quochi et al. 2008 ). The Python/Django framework also provides a concise template-based mechanism to render the access results, which would serve well when we wish to migrate to another data format for data exchange. 6 Concluding remarks Recent advances in language service infrastructures (Ishida 2011 ;Va  X  radi et al. 2008 ) have shown that language resources, even static data resources, can be transformed into Web-based services and can be effectively utilized via well-designed APIs. This trend opens up a new dimension for the sharing of language resources and technologies (Calzolari 2008 ). Following this trend, the present paper demonstrated that WordNet-type semantic lexicons could be effectively servicized by basing them on the LMF standard, when harmonized with the REST Web service architecture.

The applicability and effectiveness of the proposed method were shown with an implemented Web service, but further demonstrations are required, particularly using more lexical resources. Therefore, our future work includes the accommo-dation of more wordnets from other languages. This kind of effort may reveal additional issues that can lead to proposed revisions to the LMF/Wordnet-LMF standards, as have already been proposed in (Henrich and Hinrichs 2010 ).
Another line of future work involves enriching the query specification while maintaining the system performance. For example, it would sometimes be desirable to specify some part of an external resource that is associated with the target WordNet-type semantic lexicon by using the ready-made LMF device, Sense Axis or
External Ref . Realizing such a rich query function, however, may exceed the scope of the proposed Web service architecture, partly because the expressivity of the URI pattern is limited. In addition, the underlying technical architecture may not be suitable for the complex query processing that is required. If we are to go further with this line of improvement, we probably need to utilize mechanisms for realizing a so-called Linked Data Cloud, particularly an RDF store that can answer queries represented in SPARQL query language.
 References
