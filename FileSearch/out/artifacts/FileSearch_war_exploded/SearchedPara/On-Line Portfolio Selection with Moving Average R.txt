 Bin Li S080061@ntu.edu.sg Steven C. H. Hoi chhoi@ntu.edu.sg Portfolio selection, which has been explored in both finance and quantitative fields, aims to obtain certain targets in the long run by sequentially allocating the wealth among a set of assets. Mean-variance theo-ry ( Markowitz , 1952 ), which trades off between the expected return (mean) and risk (variance) of a port-folio, is suitable for single period portfolio selection. Contrarily, Kelly investment ( Kelly , 1956 ; Breiman , 1961 ; Finkelstein &amp; Whitley , 1981 ), which maximizes the expected log return of a portfolio, aims for multiple periods portfolio selection. Due to the sequential na-ture, recent on-line portfolio selection techniques often design algorithms following the second approach. One important property exploited by many existing studies ( Borodin et al. , 2004 ; Li et al. , 2011b ; 2012 ) is the mean reversion property, which assumes poor performing stocks will perform well in the subsequen-t periods and vice versa, may better fit the financial markets. Though some recent mean reversion algo-rithms ( Li et al. , 2011b ; 2012 ) achieve the best results on many datasets, they perform extremely poor on certain datasets, such as DJA dataset ( Borodin et al. , 2004 ). Comparing with Borodin et al. ( 2004 ), which exploits multi-period correlation, we found that the assumption of single-period prediction may attribute to the performance degradation. On the other hand, as illustrated in existing studies ( Li et al. , 2011b ; 2012 ), Borodin et al. ( 2004 ), which heuristically ex-ploits mean reversion via correlation, cannot fully ex-ploit the potential of (multi-period) mean reversion. To address the above drawbacks, we present a new ap-proach for on-line portfolio selection, named  X  X n-Line Moving Average Reversion X  (OLMAR). The basic idea is to represent multi-period mean reversion as  X  X oving Average Reversion X  (MAR), which explicitly predicts next price relatives using moving averages, and then learn portfolios by online learning techniques. To the best of our knowledge, OLMAR is the first algorithm that exploits moving average in the setting of on-line portfolio selection. Though simple in nature, OLMAR has a reasonable update and is empirically validated via extensive experiments on real markets. The exper-iments show that OLMAR can achieve better perfor-mance (in terms of cumulative wealth ) than existing algorithms, and more importantly, can avoid the per-formance degradation in certain datasets, such as DJA dataset ( Borodin et al. , 2004 ; Li et al. , 2012 ). Finally, OLMAR runs much faster than the state of the art, and thus is suitable for large-scale applications. The rest of the paper is organized as follows. Section 2 formulates the on-line portfolio selection problem, and Section 3 reviews and analyzes related work. Section 4 presents the proposed OLMAR approach, and its effec-tiveness is validated by extensive empirical studies on real stock markets in Section 5 . Section 6 summarizes the paper and provides directions for future work. Consider an investment task over a financial market with m assets for n periods. On the t th period, the assets X  prices are represented by a close price vec-tor p t  X  R m + , and each element p t;i represents the close price of asset i . Their price changes are rep-resented by a price relative vector x t  X  R m + , and x t th period increases by a factor of x t;i . Let us denote x n = { x 1 , . . . , x n } as the sequence of price relative vectors for n periods.
 An investment on the t th period is specified by a port-folio vector b t = ( b t; 1 , . . . , b t;m ), where b t;i the proportion of wealth invested in asset i . Typically, we assume the portfolio is self-financed and no mar-gin/short is allowed, therefore each entry of a portfolio is non-negative and adds up to one, that is, b t  X   X  m , where  X  m = vestment procedure is represented by a portfolio s-trategy , that is, b 1 = 1 m 1 and following sequence of mappings b t : R m ( t  X  1) +  X   X  m , t = 2 , 3 , . . . , where b ket sequence x t  X  1 = { x 1 , . . . , x t  X  1 } . We denote by b n = { b 1 , . . . , b n } the strategy for n periods. On the t th period, a portfolio b t produces a portfolio period return s t , that is, the wealth increases by a fac-tor of s t = b  X  t x t = and adopt price relative, the portfolio wealth would multiplicatively grow. Thus, after n periods, a portfo-lio strategy b n produces a portfolio cumulative wealth of S n , which increases the initial wealth by a factor of where S 0 is set to $1 for convenience.
 Finally, let us formulate the on-line portfolio selection problem. In this task, a portfolio manager is a de-cision maker, whose goal is to produce a portfolio s-trategy b n , aiming to maximize the cumulative wealth S . He/she computes the portfolios sequentially. On each period t , the manager has access to the sequence of previous price relative vectors x t  X  1 . Then, he/she computes a new portfolio b t for next price relative vector x t , where the decision criterion varies among d-ifferent managers. The portfolio b t is scored based on portfolio period return s t . This procedure is repeat-ed until the end, and the portfolio strategy is finally scored according to portfolio cumulative wealth S n . Note that the above model in general assumes zero transaction cost/tax, perfect market liquidity, and zero impact cost. These assumptions are not trivial, and their effects and implications will be further analyzed and discussed in Section 5.3 and Section 5.5 . The research of on-line portfolio selection ground-s on the principle of Kelly investment ( Kelly , 1956 ; Breiman , 1961 ; Thorp , 1971 ; Finkelstein &amp; Whitley , 1981 ), that is, to maximize the expected log return of a portfolio. One classical strategy is Constant Re-balanced Portfolios (CRP), which follows Kelly  X  X  idea of keeping a fixed fraction for each asset on all pe-riods. The best possible CRP strategy in hindsight is often known as Best Constant Rebalanced Portfo-lios (BCRP), which is the optimal strategy if the mar-ket is i.i.d. ( Cover &amp; Thomas , 1991 , Theorem 15.3.1). Cover ( 1991 ) initialized the research of on-line portfo-lio selection ( Ordentlich &amp; Cover , 1996 ) and proposed Universal Portfolios (UP) strategy, whose portfolio is historical performance weighted average of all CRPs. Helmbold et al. ( 1998 ) proposed Exponential Gradi-ent (EG) strategy, which maximizes the expected log portfolio return estimated by last price rela-tives, and minimizes the deviation from last portfolio. Gaivoronski &amp; Stella ( 2000 ) proposed Successive Con-stant Rebalanced Portfolios (SCRP), which maximizes the expected log cumulative wealth estimated using all historical price relative relatives 1 . Agarwal et al. ( 2006 ) proposed Online Newton Step (ONS), which ex-tends the idea of SCRP by appending a regularization term to minimize the variation of next portfolio. Borodin et al. ( 2004 ) proposed Anti-correlation (An-ticor), which bets on the consistency of positive lagged cross-correlation and negative auto-correlation. Li et al. ( 2012 ) proposed Passive Aggressive Mean Re-version (PAMR), which iteratively chooses portfolio minimizing the expected return based on last price rel-atives. Li et al. ( 2011b ) proposed Con dence Weight-ed Mean Reversion (CWMR) strategy, which exploits the mean reversion property and the variance informa-tion of portfolio.
 Gy  X orfi et al. ( 2006 ) introduced the framework of non-parametric investment strategies, which searches over historical market sequence and identify a sample set of vectors, whose previous market windows are similar to recent window, and obtains a BCRP portfolio based on the set. With this framework, Nonparametric Kernel-based moving window (B K ) ( Gy  X orfi et al. , 2006 ) mea-sures the similarity using Euclidean distance. Further, Nonparametric Nearest Neighbor (B NN ) ( Gy  X orfi et al. , 2008 ) searches for  X  nearest neighbors to the recent market window. Recently, Li et al. ( 2011a ) proposed Correlation-driven Nonparametric learning (CORN) to search for similar vectors via correlation. 3.1. Analysis of Existing Work Most existing formulations follow the basic routine of Kelly-based portfolio selection ( Thorp , 1971 ). In par-ticular, a portfolio manager first predicts  X  x t +1 in terms sponding probabilities p 1 , . . . , p k . Note that each  X  x denotes one possible combination vector of individual price relative prediction. Then he/she can figure out portfolio by maximizing the expected log return, Based on methods of predicting  X  x i t +1 and p i , most ex-isting algorithms can be classified into three categories. Their optimization formulations and underlying pre-dictions are summarized in Table 1 , and their details can be found on their respective studies. Note that we have transformed certain formulations, however, main-tained their key ideas.
 Now let us focus on the first category, which consists of EG, PAMR and CWMR. Algorithms in this category assume a single prediction value with a probability of 100%, and maintains previous portfolio information vi-a regularization techniques. In particular, EG assumes  X  x t +1 = x t with p 1 = 100%, while PAMR and CWMR mean reversion idea. Note that the formulations of PAMR and CWMR ignore the log utility due to the single-value prediction and the consideration of con-vexity and computation issue. Though all three algo-rithms assume that all information is fully reflected by x , their performance diverges and supports that mean reversion fits the markets. On the one hand, even with a decent theoretical result, EG always performs far be-hind. On the other hand, though without theoretical guarantees, PAMR and CWMR always produce the best results in various real markets. However, PAMR and CWMR suffer from dramatic failures when such single-period mean reversion is not satisfied ( Li et al. , 2012 ), which motivates our approach. 4.1. Motivation Empirical results ( Li et al. , 2011b ; 2012 ) show that mean reversion, which assumes the poor stock may perform good in the subsequent periods, may better fit the markets. PAMR and CWMR can exploit the mean reversion property well and achieve good result-s on most datasets at the time, especially the NYSE benchmark dataset ( Cover , 1991 ). However, they rely on a simple assumption that the predicted next price relative  X  x t +1 will be inverse proportion to last price relative x t . In particular, they implicitly assume that Note that x and p are all vectors and the above oper-ations are element-wise.
 Though empirically effective on most datasets, PAM-R and CWMR X  X  single-period assumption causes t-wo potential problems. Firstly, both algorithms suf-fer from the frequently fluctuating raw prices, as they often contain a lot of noises. Second, their assump-tion of single-period mean reversion may not be satis-fied in the real world. Even two consecutive declining price relatives, which are common, can fail both al-gorithms. One real example ( Li et al. , 2012 ) is DJA dataset ( Borodin et al. , 2004 ), on which PAMR per-forms the worst among the state of the art. Thus, traders are more likely to predict prices using the long-term mean. Also on the DJA dataset, Anticor, which exploits the multi-period statistical correlation, per-forms much better. However, as illustrated in Li et al. ( 2011b ; 2012 ), due to its heuristical nature, Anticor can not fully exploit mean reversion. The two prob-lems caused by single-period assumption and Anticor X  X  inability to fully exploit mean reversion call for a more powerful approach to effectively exploit mean rever-sion, especially in terms of multi-period.
 Now let us see the classic example ( Cover &amp; Gluss , 1986 ; Li et al. , 2012 ) to illustrate the drawbacks of single-period mean reversion, as shown in Table 2 . The toy market consists of cash and one volatile s-tock, whose market sequence follows A. It is easy to prove that BCRP ( b = tor of better factor of 3 2  X  2 ( n  X  1) = 2 . Note that this virtu-al sequence is essentially singe-period mean reversion, which perfectly fits with PAMR and CWMR X  X  assump-tion. However, if market sequence does not satisfy this assumption, both PAMR and CWMR would fail badly. Let us extend the market sequence to a two-period re-version, that is, market sequence B. In such a market, BCRP can achieve the same growth as before. Con-trarily, PAMR/CWMR can achieve a constant wealth , which has no growth! More generally, if we fur-ther extend to k -period mean reversion, BCRP can still achieve the same growth, while PAMR/CWMR will grow to 3 2  X  proaches bankruptcy when k  X  3.
 To better exploit the (multi-period) mean reversion property, we proposed a new type of algorithm-s, named On-Line Moving Average Reversion (OL-MAR), for on-line portfolio selection. The essential idea is to exploit multi-period moving average (mean) reversion via power online machine learning. Rather than  X  p t +1 = p t  X  1 , OLMAR assumes that next price will revert to Moving Average (MA) at the end of t th period, that is,  X  p t +1 = M A t ( w ) = 1 w where M A t ( w ) denotes the Moving Average (MA) with a w -window. In time series analysis, MA is typi-cally used to smooth short-term price fluctuations and focus on long-term trends, thus can solve the two draw-backs of existing mean reversion algorithms. To this end, we propose a price relative vector following the idea of  X  X oving Average Reversion X  (MAR), where w is the window size and wise production. Without detailing the calculation, we list the growth of OLMAR in different toy markets in Table 2 . Clearly, OLMAR performs much better in the scenarios of multi-period mean reversion, while performs poor in single-period reversion. Our further empirical analysis shows that the markets are more likely to follow multi-period reversion.
 Based on the expected price relative vector in Eq. ( 1 ), OLMAR further adopts the idea of an effective on-line learning algorithm, that is, Passive Aggressive (PA) ( Crammer et al. , 2006 ) learning, to exploit mov-ing average reversion. Generally proposed for classifi-cation, PA passively keeps the previous solution if the classification is correct, while aggressively approaches a new solution if the classification is incorrect. After formulating the proposed OLMAR optimization, we solve its closed form update and design the proposed algorithm. 4.2. Formulation The proposed formulation, OLMAR, is to exploit mov-ing average reversion via PA online learning. The ba-sic idea is to maximize the expected return b  X   X  x t +1 and keep the last portfolio information via regulariza-tion term. Thus, we follow the similar idea of PAM-R ( Li et al. , 2012 ) and formulate an optimization, Optimization Problem: OLMAR Note that we adopt expected return rather than expected log return. According to Helmbold et al. Algorithm 1 Portfolio Selection with OLMAR. 1: Input:  X  &gt; 1: Reversion threshold; w  X  3: Win-2: Output: S n : Cumulative wealth after n th periods 3: Procedure: 4: Initialization: b 1 = 1 m 1 , S 0 = 1; 5: for t = 1 , 2 , . . . , n do 6: Receive stock price relatives: x t 7: Calculate daily return and cumulative return: 8: Predict next price relative vector: 9: Update the portfolio: 10: end for ( 1998 ), to solve the optimization with expected log re-turn, one can adopt the first-order Taylor expansion, which is essentially linear.
 The above formulation explicitly reflects the basic idea of the proposed OLMAR. On the one hand, if the con-straint is satisfied, that is, the expected return is high-er than a threshold, then the resulting portfolio equals to the previous portfolio. On the other hand, if the constraint is not satisfied, then the formulation will fig-ure out a new portfolio such that the expected return is higher than the threshold, while the new portfolio is not far from the last one.
 Since OLMAR follows the same learning principle as PAMR, their formulations are similar. However, the two solutions are essentially different. In particular, PAMR X  X  core constraint, i.e., b  X  x t  X   X  , adopts the raw price relative and has a different inequality sign. 4.3. Algorithm The above formulation is thus convex and s-traightforward to solve via convex optimiza-tion ( Boyd &amp; Vandenberghe , 2004 ). We now derive the OLMAR solution as illustrated in Proposition 1 . Proposition 1. The solution of OLMAR without con-sidering the non-negativity constraint is ed price relative and  X  t +1 is the Lagrangian multiplier calculated as, Algorithm 2 OLMAR(  X , w,  X  x t +1 , b t ). 1: Input:  X  &gt; 1: Reversion threshold; w  X  3: Win-2: Output: b t +1 : Next portfolio; 3: Procedure: 4: Calculate the following variables: 5: Update the portfolio: 6: Normalize b t +1 : It is worth noting that in the derivation we do not consider the non-negativity constraint follow-ing Helmbold et al. ( 1998 ). Thus, it is possible that the resulting portfolio goes out the portfolio simplex domain. To maintain a proper portfolio, we finally project the portfolio calculated according to Proposi-tion 1 to the simplex domain.
 To this end, we can design the proposed algorithm based on the proposition. The on-line portfolio se-lection following the problem setting in Section 2 is illustrated in Algorithm 1 , and the proposed OLMAR procedure is illustrated in Algorithm 2 .
 Empirical observations of the parameter sensitivity in Section 5.2 show that the final performance is sensi-tive to the parameter w . To smooth the final per-formance of the system, we propose to adopt the Buy and Hold (BAH) version ( Borodin et al. , 2004 ; Gy  X orfi et al. , 2006 ; Li et al. , 2012 ), that is, for each period, we treat the individual OLMAR with a speci-fied w  X  3 as an expert and combine multiple expert-s X  portfolios weighted by their historical performance. We denote the the algorithm as BAH W (OLMAR) with a parameter W denoting the maximum window size, that is, BAH W (OLMAR) combines W  X  2 individual OLMAR experts with w = 3 , . . . , W . 4.4. Analysis The update of OLMAR is straightforward, that is, b divides the assets into two groups by prediction aver-age. For the assets in the group with higher predictions than average, OLMAR increases their proportions; for the others, OLMAR decreases their proportions. The transferred proportions are related to the surprise of the predictions over their average and the positive La-grangian multiplier,  X  . This is consistent with normal portfolio selection procedure, that is, to transfer the wealth to the assets with better prospect to grow. Clearly, the OLMAR update costs linear time per pe-riod w.r.t. m , and the normalization step can also be implemented in linear time ( Duchi et al. , 2008 ). To the best of our knowledge, OLMAR X  X  linear time is no worse than any existing algorithm. We now evaluate the effectiveness of the proposed OL-MAR algorithm by performing an extensive set of ex-periments on publicly available and diverse datasets from real stock markets.
 Table 3 details the four experimental datasets 2 . A-mong these, NYSE (O) is one benchmarks dataset e-valuated by all existing methods, while NYSE (N) is a dataset collected by Li et al. ( 2011b ) as a continuation of NYSE (O). The remaining two datasets (DJA and TSE) are collected by Borodin et al. ( 2004 ). In this paper, we adopt the most common metric, cumulative wealth , to measure the investment perfor-mance. Results with other metrics, including risk-adjusted return , will be included in the long version of this paper. We compare the proposed approach with all existing methods in Section 3 , whose parameters are set according to their respective studies. In our experiments, we implement the proposed OL-MAR, and its BAH version BAH(OLMAR). In all cas-es, we empirically set the parameters, that is,  X  = 10 and w = 5, which provide a consistent results for OL-MAR in all cases. For BAH(OLMAR), we set their maximum window size W = 30, resulting in 28 OL-MAR experts with w = 3 to 30. In addition to the empirical selection of parameters, we also evaluate the parameter scalability of the two possible parameters in Section 5.2 . Finally, we also refer the best perfor-mance (in hindsight) among the underlying experts of the BAH version, named MAX(OLMAR). 5.1. Cumulative Wealth Figure 1(a) illustrates the main results of this study, that is, the cumulative wealth achieved by various approaches. The results clearly show that OLMAR achieves the top performance among all competitors. On the well-known benchmark NYSE (O) dataset, OL-MAR significantly outperforms the state of the art; the similar observation is also found on the succes-sive NYSE (N) dataset. Besides, though most exist-ing algorithms except Anticor perform bad on the D-JA dataset, OLMAR achieves the best performance. Moreover, the maximum performance show that it is possible to achieve better performance via effec-tive expert combination. Finally, the t -test statistic-s ( Grinold &amp; Kahn , 1999 ) shown in Table 1(b) validate that the results achieved are not due to luck. 5.2. Parameter Sensitivity Now let us evaluate algorithm X  X  sensitivity to its pa-rameters, that is,  X  and w . Figure 2 shows the sen-sitivity of  X  with fixed w = 5 and Figure 3 show the sensitivity of w with fixed  X  = 10. From the former, we can observe that in general the total wealth sharply increases when  X  approaches 1 and flattens when  X  crosses a threshold. From the latter, we can observe that as w increases, the performance initially increases, spikes with a data-dependant value, and then decreas-es. Anyway, its performance with most choices of  X  and w have a much better performance than BCRP strategy and the market. Moreover, the latter figure also show that the Buy and Hold versions greatly s-mooth the performance with varying w of the underly-ing experts. All above observations also show that it is robust to the choices of parameters and is convenient to choose satisfying parameters. 5.3. Transaction Cost Scalability To evaluate the practical applicability, we evaluate the scalability of the proposed algorithms with respect to proportional transaction cost ( Borodin et al. , 2004 ). Figure 4 illustrates the cumulative wealth achieved by OLMAR with increasing transaction cost rate  X  , and also the results obtained by four representative algorithms (two benchmarks and two state of the arts in different categories). On the one hand, the results clearly show that OLMAR can withstand reasonable transaction cost rates, as it often has high break-even rates with respect to the market. On the other hand, OLMAR can outperform the benchmarks and state of the arts, under various transaction cost rates. In a word, OLMAR performs excellent when trading is not frictionless, supporting its practical applicability. 5.4. Computational Time Finally, we evaluate the computational time as shown in Table 1(c) . Note that we only list the computa-tional times of methods with comparable performance. Theoretically, as we analyzed in Section 4.4 , OLMAR enjoys linear computational time complexity. Empiri-cally, as shown in the table, OLMAR algorithm takes the least times on all datasets. Note that with daily frequency, competitors X  average times are acceptable, however, their times are not acceptable in the scenario of high frequency trading. Such time efficiency sup-ports OLMAR X  X  large-scale real applications. 5.5. Discussion and Thread of Validity Without theoretical guarantee, the empirical assump-tions in Section 2 are worth inspecting, as done by all existing heuristic algorithms ( Borodin et al. , 2004 ; Li et al. , 2011a ; b ; 2012 ). As evaluated in Section 5.3 , OLMAR can withstand reasonable rates of transac-tion cost. All the datasets are composed of the largest index composite stocks, which have the best market liquidity. To limit market impact when portfolio is too big, one solution is to scale-down the portfolio, as done by several quantitative funds. Here, we empha-size again that even in such a  X  X erfect market X , no algorithm has ever claimed such good performance. There may also exist certain issues in the back tests. One possible issue is  X  X urvivorship bias X . Since follow-ing existing works, the composition stocks never delist-ed from markets and survived for a long time, especial-ly the two NYSE datasets. Another possible issue is  X  X ataset selection X . In fact, OLMAR also performs quite well on the other two public datasets ( Li et al. , 2012 ), that is, SP500 and MSCI, whose results will be included in the long version of this paper. This paper proposes a novel online portfolio selection strategy named  X  X n-Line Moving Average Reversion X  (OLMAR), which exploits  X  X oving Average Rever-sion X  via on-line learning algorithms. The approach can solve the problems of the state of the art caused by the single-period mean reversion and achieve sat-isfying results in real markets. It also runs extremely fast and is suitable for large-scale real applications. In future, we will further explore the theoretical aspect of the mean reversion property.
 This work was fully supported by Singapore MOE tier 1 project (RG33/11).

