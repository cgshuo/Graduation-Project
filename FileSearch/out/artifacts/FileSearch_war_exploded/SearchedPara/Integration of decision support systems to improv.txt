 Shaofeng Liu  X  AlexH.B.Duffy  X  Robert Ian Whitfield  X  Iain M. Boyle Abstract Decision support system (DSS) is a well-established research and development area. Traditional isolated, stand-alone DSS has been recently facing new challenges. In order to improve the performance of DSS to meet the challenges, research has been actively carried out to develop integrated decision support systems (IDSS). This paper reviews the current research efforts with regard to the development of IDSS. The focus of the paper is on the integration aspect for IDSS through multiple perspectives, and the technologies that sup-port this integration. More than 100 papers and software systems are discussed. Current research efforts and the development status of IDSS are explained, compared and classified. In addition, future trends and challenges in integration are outlined. The paper concludes that by addressing integration, better support will be provided to decision makers, with the expectation of both better decisions and improved decision making processes.
 Keywords Literature review  X  Integrated decision support  X  Multiple-perspective integration  X  IDSS classification 1 Introduction A decision support system (DSS) is defined as an interactive computer-based information system that is designed to support solutions on decision problems [ 7 , 65 , 101 , 118 ]. The origin of DSS can be traced back to preceding work in two main research streams: theoretical study of organisational decision making undertaken by Simon et al. at the Carnegie Institute of Technology during late 1950s and early 1960s, and technical work on interactive computer systems carried out by Gerrity et al. at the MIT in 1960s [ 54 ]. Simon X  X  model of decision mak-ing process consisted of three phases: intelligence, design and choice [ 103 , 104 ]. In the model, intelligence is concerned with the search for problems, design involves the development of alternatives, and choice is about analysing the alternatives and selecting one for implemen-tation. This classic problem-solving model of  X  X ntelligence-design-choice X  has been widely accepted and adopted. Even though Simon [ 105 ] later extended the model with a fourth mon-itoring phase, DSS research remained primarily focussed on the original three-phase model. Work from MIT researchers including Gerrity et al. were also widely acknowledged. Gerrity X  X  [ 42 ] influential publication focusing on the DSS design issues. Keen and Scott Morton X  X  [ 54 ] work provided a broader behavioural orientation to DSS analysis, design, implementation, evaluation and development. Nevertheless, the study of decision making and DSS has been, and still is, undertaken in various ways and by various scholars and practitioners working in the area [ 35 , 46 , 87 ], as well as researchers from other disciplines such as artificial intelli-gence, operations research, organisational studies and management information systems that have added richness and complexity to DSS research [ 47 ].

Decision support system research and its applications evolved significantly over the 1970 and 1980s, and DSS was considered as one of the most popular areas in information sys-tems during the time period. Diverse DSS were developed to support decision makers at all levels in an organisation including systems that could support problem structuring, opera-tions, financial management and strategic decision making, even extending to support for optimisation and simulation. Phenomenally, group decision support systems (GDSS) and executive information systems [now called enterprise information systems (EIS)] were both developed as complementary to but more powerful support tools than DSS. GDSS can pro-vide brain-storming, idea evaluation and communication facilities to support team problem solving [ 3 , 25 , 30 , 70 ]. EIS extended the scope of DSS from personal or small group use to the corporate level. EIS can provide a wide variety of information such as critical success metrics, key information indicators, reports with the ability to drilldown to underlying detail, bud-get information, plans and objectives, competitive information, news and more [ 38 , 57 , 92 ]. However, a closer look revealed that the interest in traditional problem solving DSS appeared to be declining in the 1990s [ 22 ] because of many new challenges arising for the isolated, stand-alone DSS.

The main challenges included: (1) technology shifts from database to data warehouse and on-line analysis processing (OLAP), from mainframe to client/server architecture, and from single user model to World Wide Web access; (2) growing interconnection with more dynamic business environment and intelligence that has been addressed by many other information systems such as enterprise resource planning (ERP), supply chain management (SCM) and customer relationship management (CRM); (3) increasing complexity of the decision sit-uations which puts enormous cognitive workload on decision makers where a user needs to have considerable knowledge and must exercise initiative to perform decision-related tasks. One common key issue behind the above challenges is that the traditional problem-solving characterisation of DSS has to be expanded and integrated to be compatible with new technologies, business environments and intelligence, to allow more transparent inter-action between decision makers and systems, not only for improvement of the efficiency and effectiveness of the decisions, but also for collaborative support and virtual team work-ing. While criticism of  X  X tand-alone X  DSS and the need for closely linking DSS with busi-ness intelligence and modern technologies has been voiced, many researchers have already embarked on the journey of integrated approaches aiming at addressing these requirements [ 18 ]. They have since introduced new concepts, frameworks and architectures for integrated DSS [ 24 ].

However, to the authors X  best knowledge no publication exists that reviews the work done to address the provision of integrated decision support, even though several reviews on deci-sion support in general have been available [ 11 , 18 , 39 , 53 , 101 ]. Some previous papers have addressed issues, tools, and techniques in decision support. Others have addressed integration from single viewpoint such as information integration. But none addresses the integration for decision support from multiple views, and recent development on integration decision sup-port systems (IDSS). This paper makes the first attempt to address the integration for DSSs from multiple perspectives including data and information integration, model integration, process integration, service integration and presentation integration. The paper reviews the state-of-the-art integration technologies and methodologies for IDSS (rather than stand-alone DSS), so that such systems can provide improved support for decision makers to make more rational decisions. The aim of this paper is to highlight the characteristics of IDSS and discuss the challenges in design, development and implementation of such systems. In the meantime, it identifies the gaps in current research that must be addressed and provides insights into future IDSS research. The paper is organised as follows: Sect. 2 characterises five integration aspects that present the prospect of improvement for decision support, against which current integration approaches will be examined. Section 3 classifies and examines existing work on the IDSS from the implementation technology viewpoint. Section 4 suggests possible future research directions. Conclusions are drawn in Sect. 5 . 2 Multiple perspectives of integration As the decision making environment has become more complex and decentralised, support provided to decision makers by traditional one function or single user focused DSS has evolved from simple predefined reports to complex and intelligent agent-based analysis, sug-gestion and judgement [ 47 ]. This is because modern IDSS have been expanded and upgraded through integration of new technologies, processes and business environments into decision support paradigm to enable improved performance. This section discusses the integration for IDSS from multiple perspectives and at different levels.

Integration may be one of the most often used words, yet most poorly defined notion [ 31 , 44 ]. However, it is widely accepted that integration is a property of component (in the form of models, services, tools, methods, subsystems, systems, etc.) interrelations. It is not a property of a single element, but of its relationships with others in the environment. Therefore, we believe that the key notion is the relationships and the properties of these relationships [ 115 ]. In the context of IDSS, integration can be interpreted as the extent to which compo-nents of an IDSS agree. The subjects of these agreements may include data format, sharing functions, user interface conventions, and other aspects of IDSS construction.

It has been traditionally accepted that a DSS consists of three basic capability components: a data management component, a model management component and a dialogue management component [ 101 ]. These three elements were often represented as a database management system (DBMS) to manage the data, a model base management system (MBMS) that manages the models to formulate the problems and solutions, and an interface that enables interactive queries, reporting, and graphing functions of decision solutions. Over the years the traditional (three-element focused) DSS have evolved into modern IDSS which not only have enriched the content of the three basic components, but also have taken into account of decision making environments and new technologies that are implemented. Figure 1 illustrates a framework of an IDSS to help identify its integration perspectives. (1) Traditional data retrieval concept has been expanded to include the retrieval of data, (2) The model element in an IDSS has been expanded from traditional quantitative analysis (3) New functions have been added to provide decision suggestions and judgement with (4) The IDSS as a whole should present decision makers as end users with reduced cognitive (5) Decision making process can achieve better performance if only the process units can 2.1 Data and information integration The goal of data and information integration is to obtain consistent information for consistent decisions regardless of how data and information is operated on and transformed by compo-nents in a DSS. First, data and information integration should reflect the use of  X  X ame X  data and information by system components even though the data and information is represented differently or is deduced from other data and information. That is, data and information inte-gration between two different components is not relevant if they deal with disjoint data and information. Second, data and information integration in IDSS needs to address the use of data and information from different sources.

Several properties of data and information integration have been identified in literature [ 75 , 76 , 43 , 106 ]. These are data and information exchange, data and information consistency, non-redundancy, interoperability, and synchronisation. Table 1 summarises the main charac-teristics of each property.

Data and information integration for DSS has been widely researched and reported. A decision support methodology for information integration is developed for agricultural engi-neering SMEs [ 9 ]. A good point was made that most published literature usually informs what have been done in terms of information integration, but fails to state why they have been done [ 15 , 80 ]. Davenport [ 28 ] argues that information integration in companies should consider how it might strengthen or weaken competitive advantages, how it will affect com-pany X  X  culture and how information management will be implemented. Implementation of optimisation-based IDSS that integrate data from several sources is discussed by Cohen et al. [ 23 ]. The importance of integrating knowledge management process into DSS has also been recognised so that decision makers can combine different types of knowledge Zhang et al. [ 119 ] presented a knowledge management framework that integrates multiple information sources for supporting decision making in humanitarian assistance and disaster relief. 2.2 Model integration The central role of models and provision of mechanisms for the management of models have been regarded as what distinguish a DSS from more traditional information processing systems [ 19 ]. According to Mallach [ 79 ] a model is a computer representation of reality that lets us investigate the impact of a possible decision. It has been proved in practice that a DSS should create multiple models rather than a single larger model for the benefit of DSS implementation, maintenance and flexibility. Model integration is the process whereby indi-vidually developed sub-models are logically combined to create a large unified model, which is important because integrated models are often needed to support rational decision mak-ing [ 33 , 110 ]. An earlier review on decision models was conducted by Blanning [ 10 ], which established the foundation for model integration. In Tsai [ 110 ], the author extended structured modelling concepts and defined schema operations for formalising model integration. Two operations were defined and implemented: projection and join. Projection operation extracts a desired sub-model from a larger model for use in other applications. Join operation merges two models that have certain compatibility. Multi-model integration for DSS has been applied in many scenarios such as environmental management [ 62 ], product development [ 85 ], mar-keting [ 81 ], and healthcare [ 84 ]. While many integration frameworks have been proposed for the reuse of models with different data sets for different problems [ 12 , 32 , 83 ], fewer studies have focused on the flexible decision making support through reuse of solvers, i.e. problem solving algorithms against diverse models and data sets [ 6 , 65 ]. It has been observed that integration of model-based results into an IDSS is especially of beneficial. Prominence effects, overconfidence and other biases are reduced for managers who use model-based IDSS compared with managers who do not. 2.3 Process integration Thomas [ 108 ] defined three dimensions for understanding process integration: process unit, process event and process constraint. A process unit is a unit of work that yields a result. A process event is a condition that arises during a process step that may result in the execution of an associated action. A process constraint imposes constraints on some aspects of the process.

Two components inside an IDSS are considered well integrated with respect to process if their assumptions about the process are consistent. In terms of process step integration, the goals that they achieve are part of a coherent decomposition of the process step, and if accomplishing these goals lets other components achieve their goals. With respect to event integration, components can generate and handle event notifications consistently (when one component indicates an event has occurred, another component responds to that event). Components are well integrated with respect to constraint integration if they make similar assumptions about the range of the constraints they recognise and respect.

Literature concerning process integration for IDSS applications is mainly in engineering design and manufacture area [ 77 , 98 , 117 ]. Liu and Young [ 77 ] discussed consistent event notification through a knowledge model so that the processes of customer order processing, product design, and manufacturing can be seamlessly integrated in a global manufactur-ing environment. Earlier on, a Webcadet system presented by Rodgers et al. [ 97 ] can allow designers to use consistent design criteria and constraints for decision analysis throughout all design stages, from conceptual to detailed design. The shortcoming of this approach is that it does not tackle design knowledge understanding and structuring in collaborative decision making. In manufacturing systems, it has been stressed that decision support and operational processes should be properly integrated [ 113 ]. In such an integrated manufacturing system, an IDSS with planning and analysis capabilities writes business decisions to knowledge bases, which are then used by CAD/CAM/CAPP systems as constraints and conditions to make design decisions, further used as instructions to support processes carried out by CNCs, robots and other devices in a manufacturing shop. Therefore, the business intelligence is consistently used as guidelines through all the process steps to achieve the company overall goals. 2.4 Service integration Service integration is essential to support flexible function combinations in an integrated decision support environment (IDSE) [ 68 ]. Ideally, all the functions offered by all the com-ponents should be accessible (as appropriate) to all other components, and the components need not to know what components will be constructed to use their functions [ 73 ]. This can be seen from two different views: first view is service integration with respect to provision, i.e. components offer services that other components in the environment require and use. Second view is service integration with respect to use, i.e. components appropriately use the services offered by other components in the environment. As components must be able to communicate the operations to be performed in order to share functionality, and operations will require data and information, the components must also communicate data and informa-tion or their references. In this sense, service integration complements data and information integration. While data and information integration addresses data and information repre-sentation, conversion, and storage issues, service integration addresses control-transfer and service-sharing issues.

Service integration and model integration are also naturally inter-related. Models are the internal view of the system X  X  analysis capabilities, which provide the foundations for the sys-tem X  X  functions. When the models are associated with specific decision making situations, and exposed to external world such as to decision makers (i.e. IDSS users), they become services. The major difference between model integration and service integration is in the views of the system and the association with decision situations. Model integration focuses on the inside issue of the interoperability between multiple models, while service integration focuses on the function combination from both provider X  X  and user X  X  viewpoints. Model integration is normally hidden from IDSS users, but is in the heat of IDSS developer X  X  interest. 2.5 Presentation integration Presentation integration aims at reducing user X  X  cognitive load and applies to individual com-ponents, subsystems and IDSS environment as a whole [ 73 ]. This can be achieved through appearance and behaviour integration, as well as interaction-paradigm integration. Appear-ance and behaviour integration answers the questions of how easy is it for users to inter-act with one component, having already learned to interact with another, by addressing the similarities of component screen appearance and interaction behaviour. Components are considered well integrated with respect to appearance and behaviour integration if a user X  X  experience with and expectations of one can be applied to the others. Furthermore, interaction paradigm addresses to what extent different components use similar metaphors and mental models to minimise learning and usage interference. In this sense well-inte-grated IDSS should use the same metaphors and mental models. It is clear that IDSS should balance the use of one metaphor versus many metaphors. One metaphor may be awkward or ill adapted for some cases, but too many metaphors may make it difficult to transfer experience between components. For example, users will be confused if they need to use two components using two navigation metaphors around a hypertext structure. Therefore, it is highly expected a common look-and-feel user interface be provided for an IDSS in terms of presentation integration to facilitate the active interaction between IDSS users and systems [ 62 ]. 2.6 An overall integration framework Above different aspects of integration do not occur and proceed independently but rather in a combination way, study of integration in IDSS should base on a multiple-perspective approach and consider the links between different integration views. An overall integration framework is therefore proposed to organise and examine the literature on the integration topic. This framework considers facets of integration levels, integration dimensions and integration types along with integration perspectives, as shown in Fig. 2 .

Denzer [ 29 ] distinguished three levels of integration depths: null integration, in-project integration and generic integration. Null integration leaves end users with the problem of integrating different components by data import and export facilities only (typically files). The problem with null integration is that it results in the end users wasting incredible amount of time on importing, exporting and converting data between different systems instead of being able to spend more time on the task itself. At the same time, it produces large number of data files which none can be managed over long period of time. Therefore, null integration has to be improved for practical purpose. The next level, in-project integration , addresses the interconnectivity of software pieces which are often application-dependent. The process usually involves heavy programming on data exchange and user interface. The way the in-project integration is performed suits only the particular project. A different project starts with the same problems over again and will involve the same costly development process. Generic integration means generic systems composed of generic services through generic communication infrastructures, i.e. to make system X  X  components and interfaces generic enough that reprogramming is avoided if you move from one application to another. There-fore, generic integration is the most ambitious and currently most challenging task for an IDSS [ 100 ].

Integration is also often categorised into horizontal integration and vertical integration [ 4 , 21 ]. Horizontal integration intends to motivate teamwork for better decision making. Ver-tical integration deals with seamless linkage between upstream and downstream activities to achieve concurrent engineering. In other words, horizontal integration focuses on enabling different decision makers to work on the same task simultaneously, whereas vertical integra-tion focuses on co-ordinating decision makers with different responsibilities to efficiently carry out interrelated tasks by managing workflow and synchronising information [ 69 , 85 ]. However, horizontal integration and vertical integration cannot be studied separately and should be considered concurrently to achieve optimal business performance because they are complementary to each other in view of functions.

Generally, integration falls into one of the two types: tight integration and loose inte-gration. Tight integration, also known as coupling, refers to the binding of components in such a way that they are dependent on each other, sharing the same methods, interfaces and perhaps data. In contrast, loose integration, also known as cohesion, is the  X  X ct or state of sticking together X  or  X  X he logical agreement X  through a middleware [ 73 ]. Tight integration requires all components extensively changed to be coupled into the system. Further, as events and circumstances evolve over time, any change to any source or tar-get system demanding a corresponding change to the integrated systems as well. On the other hand, loosely integrated components and systems are independent from each other. Therefore, loose integration offers greater flexibility. In terms of application, the convention is that if common business processes are to be reused, then a tight integration approach pro-vides more value. Recent development in Web services clearly leverages tight integration approach.

While an overall integration framework has been discussed above, the following section will discuss how integration has been researched and addressed in different types of IDSS. To summarise, in this paper an IDSS is distinguished from a traditional DSS by:  X  addressing the integration between system components from different perspectives,  X  integrating new technologies into DSS for better decision support performance;  X  integrating DSS with the decision making environment in which a DSS is situated. The concept of IDSS was first coined in 1980s [ 100 ]. Since then, many IDSS have been reported which were designed for different decision problems and application domains. These systems offer varying levels of integration and interactivity. The IDSS classification in this paper considers one of the dimensions which [ 95 ] proposed for the organisation of decision problems: new technologies and methodologies that have been implemented in the IDSS. 3 IDSS classification based on implementation technologies The benefits of IDSS have been clearly manifested through tangible returns to investment and cost savings in organisations over many years, it is also clear that it is new technologies that have been facilitated the integration and provided improved performance. This section reviews the IDSS that incorporated four types of state-of-the-art technologies: knowledge-based systems (KBS), data mining, intelligent agents and Web technology. Each of these technologies provides its unique contribution to IDSS integration, as illustrated in Fig. 3 . Specifically, KBS inside an IDSS work as  X  X xperts X  to provide special expertise to non-expert users, and assist human experts to make consistent decisions. It enhances integration from both model and process perspectives. Data mining can discover interesting patterns hidden in huge data sets, by adopting data mining tools in an IDSS offers great support to users to interpret the decision alternatives and evaluation results, and subsequently can greatly enhance data and information integration. Incorporation of intelligent artificial in the form of agents makes an IDSS truly active and empowers the IDSS to handle dynamic environments and uncertainties. Using intelligent agents for presentation integration and process integra-tion bears great potential to facilitate human and system interaction (IDSS integration with its environment). Finally, Internet and Web technology promotes IDSS for distribution, open-ness, scalability and interoperability, which is essential for service (especially Web service) integration. Even though each technology above is strong in facilitating integration in partic-ular aspect, but in many cases the integration is facilitated across more than one perspective. 3.1 Knowledge-based systems enhanced IDSS Knowledge-based systems, sometimes called expert systems, can perform tasks that would otherwise require human experts. The integration of KBS with DSS has improved decision making performance in two senses: (1) enhancing the quality of services by having an  X  X xpert X  readily available to users when human experts are in short supply [ 45 ]; (2) assisting a human expert by making their decisions more consistently [ 1 ]. Since 1990s, KBS have been playing an important role in the new generation of DSS known as IDSS. In today X  X  rapidly changing world, agile and flexible organisations require their employees frequently change their work focus. Therefore IDSS with domain knowledge can provide better support for decisions in general, and specifically through facilitating integration of decision models and decision processes (represented by expert advice, generating alternatives and choice of choices).
Lying in the centre of KBS are the knowledge bases. Within IDSS, they are termed as model bases where hold the models of decision conditions and solutions. For model inte-gration to be successful, appropriate approaches and methods are essential for coherently engage decision problems and conditions, with optimum decision solutions to the right deci-sion situations. Recent work in IDSS integrating KBS can be organised around three important approaches: rule-based reasoning (RBR), case-based reasoning (CBR), and hybrid reasoning (HR) (i.e. combination of rule-based reasoning and case-based reasoning) or integration of other reasoning methods such as Bayesian networks and genetic algorithm ([ 14 , 89 ]). Figure 4 shows the role of KBS approaches in facilitating model integration of an IDSS.

Taking the RBR approach, an integrated decision support system, named as Web-based rapid prototyping system selector (WRPSS), was developed for selecting the most appropriate rapid prototyping (RP) process by Lan et al. [ 63 ], in which the KBS is used for determining feasible alternatives. The knowledge base holds RP process selection models. The models are represented as production rules, which are in a form of IF, THEN, ELSE statements. A series of decision models are created according to multi-criteria including technology, geometry, performance, economy and productivity. The model integration is realised by a hierarchi-cal structure of evaluating RP process using fuzzy synthetic evaluation approach, and the process integration of intelligence-design-choice (referring to Simon X  X  decision model) is mainly investigated vertically, and the integration is considered at in-project level. It is worth noting that the WRPSS employs browser/server architecture and is Web-based, therefore it allows developers to focus on system development and maintenance tasks on the server side in spite of the increasing number of distributed customers.

Generally, in RBR X  X BS enhanced IDSS, the specialised domain knowledge is repre-sented as a set of IF &lt; preconditions &gt; THEN &lt; conclusions &gt; rule format, and this works fine on many decision occasions, especially for well-structured decision problems. However, it is sometimes difficult to obtain a complete set of rules to cover all possible eventualities. Moreover, on ill-structured decision occasions, decision-makers often adapt old solutions to meet new demands, use old cases to explain new situations, reason from precedents to interpret a new situation. This is termed CBR [ 56 ]. In recent years, CBR has been widely used in medical IDSS to support diagnosis [ 40 , 41 , 78 ]. For example, in Huang et al. [ 48 ], CBR is integrated with data mining technology for chronic disease prognosis and diagnosis, in which CBR is used for knowledge inferring, refining and sharing. The advantage of using CBR over RBR for IDSS is clear, i.e. the CBR based IDSS can bridge at least some of the problems encountered in the RBR by representing exceptions (to the rules) in the form of cases. Therefore, integration of information and knowledge as well as models can be under-taken at a more generic level, and also because a common process model is normally not important for CBR based IDSS, a loose integration type often makes more sense and offers more flexibility for the system.

There is an increasing interest in combination of RBR and CBR, and integration of other reasoning methods such as Bayesian Belief Network (BBN) in developing IDSS in recent years. BBNs are probabilistic inference engines that can be used to reason under uncertainty. There is plenty of ongoing research on integrating BBNs into a wide range of decision making fields especially to solve complex semi-structured and unstructured decision problems. For example, Lauria and Duchessi [ 64 ] discussed how to create a BBN from real world data on information technology implementation and how it was incorporated into an IDSS to support  X  X hat-if X  analysis. Anderson and Vastag [ 2 ] explored how to use BBN for causal model-ling in operations research. Kristensen and Rasmussen [ 58 ] reported how to build a BBN for decision support in agriculture. Approaching from a slightly different angle, Lin et al. [ 72 ] discussed employing fuzzy set theory for decision making in selection data warehouse systems for enterprises, particularly on decision alternatives with decision criteria. The idea is tested through a prototype IDSS with a case study in agriculture. The system demonstrates that it is easier for decision makers to collect data, calculate data, and to interpret results (i.e. automatic ranking order of the alternatives) through utilisation of triangular fuzzy numbers, therefore the system improves the decisions by considering the vagueness, ambiguity and uncertainty prevalent in real word systems. Within above mentioned work, specific imple-mentation of the integration solutions within specific IDSS may not be all the same, but there are three common steps in terms of model integration: search for candidate models, bench-mark candidate models and apply the selected model. It is also clear that the hybrid approach greatly facilitates the model integration under dynamic and uncertain decision situations. As the reasoning methods like BBN and fuzzy theory represent models with causal relationships among a set of variables of interest, a set of conditional independence assumptions, and their related joint probabilities, and the variables-assumptions-probabilities are defined for spe-cific applications, the integration involved in the BBN and fuzzy theory supported IDSS are often tight, in-project integration in nature.

Some recent work on KBS enhanced IDSS in terms of integration are compared and sum-marised in Table 2 . The main integration interests addressed in the IDSS are marked with a solid black square even though some other aspects of integration may be involved (minor interests are marked with a hollow square). From the table it can be seen that model inte-gration is the major interest of most KBS enhanced IDSS, even though information and data integration is also required to support efficient model integration. A second commonality is that most integration is still on the in-project level with generic integration as desirable further investigation. There is no clear cross-link between integration perspectives, integra-tion dimensions (horizontal and vertical) and integration types (tight and loose integration) according to the observation on the existing literature. 3.2 Data mining enhanced IDSS Independently, data mining and DSS are well-developed areas. Data mining, also known as database exploration, or information and knowledge discovery in databases, is the process of discovering new knowledge, patterns and trends from a company X  X  databases [ 39 ]. The IDSS perception of data mining lies in that the new information, interesting patterns and trends extracted from vast amount of organisational data sources through data mining can be meaningful to obtaining valuable corporate knowledge and intelligence. The corporate knowledge and intelligence may be crucial for the decision making process in the form of recommendations and suggestions reflecting domain expertise [ 116 ]. This can provide significant competitive advantage to an organisation [ 13 , 27 ]. As part of data mining col-lective tools, data warehouse and OLAP have been often used in IDSS to achieve data and information integration, in the sense that data inconsistency and redundancy resulting from multiple sources will be eliminated during the data cleaning stage of data mining. Data ware-house was promoted as a solution for integrating data from diverse operational databases to support management of decision making [ 55 ]. OLAP is multi-dimensional analysis which allows decision makers (analysts, managers and executives) to gain insight into data through fast, consistent, interactive access to a wide variety of possible views of information. This information has often been transformed from raw data (through integration of enterprise aggregate data across many dimensions such as product, time and location, etc.) to reflect the real dimensionality of the enterprise as understood by the users [ 109 ]. In this paper, the term of data mining tools could comprise data warehouse, OLAP and data mining itself.
Since 1990s data mining tools have been explored for IDSS. However, the current state of using data mining for IDSS is still in its infancy. A handful of publications have been collected in the area of IDSS enhanced with data mining. These IDSS can be classified into two cate-gories: general and specific application-oriented systems. Most of the data mining enhanced IDSS fall into the category of specific application-oriented systems coupled with data ware-houses and/or OLAP. For example, Mladenic et al. [ 82 ] presents a conceptual framework for integrating data mining into IDSS, plus methods and tools, and applying to business problems in a collaborative setting. Most IDSS integrated with data mining technology are found in medical problem domains such as for automated cardiac diagnosis [ 59 ], quality assessment of haemodialysis services [ 5 ] and predicting survival time for kidney dialysis patients [ 60 ]. Integrating data mining technology into IDSS for dynamic manufacturing process was first explored by Lee [ 66 ]. Later on, Lee and Park [ 67 ] designed a customised sampling DSS (CSDSS) employing data mining to carry out knowledge mining task for customer-centric electronic commerce. In the knowledge base, apart from domain knowledge, decision history and strategic knowledge are also stored. Creating knowledge for decision making employing data mining technology has been further elaborated by Huang et al. [ 48 ] through a study in diseases prognosis and diagnosis. One of the strengths of the above work is the systematic integration of data mining and CBR for the knowledge creation and knowledge inferring, respectively, to support doctors and patients make decisions in chronic disease treatment. Comparatively, less work has been reported on general data mining enhanced IDSS. Recently, Shi et al. [ 100 ] explored and developed a generic data mining platform for integrated decision support called MSMiner. The major strength of the MSMiner is that it provided an integrated, extensible DSS by employing data warehousing and data mining technologies, in which the integration of an entire decision making process (from data collection, through data modelling, data pre-processing and data mining to data visualisation) is emphasised. In the MSMiner, a subsystem called extraction, transformation and loading (ETL) is designed to clean and transform data from multiple source databases (to eliminate data inconsistency and redundancy) before integrating them into a data warehouse. The whole system is developed in a metadata-oriented way so that the interoperability and synchronisation of all data and information within the MSMiner (including data sources, data mining algorithms and results) is managed by metadata. The MSMiner has been applied to many application domains such as tax evasion, analysis of fishery information, and analysis of very important people (VIPs) for telecommunication corporations. The platform has an open interface for developing new data mining algorithms, adding new data pre-processing function and accessing new data sources. The platform has enough extensibility and flexibility, which demonstrates the features of a generic platform.

With regard to the performance improvement of data mining enhanced IDSS, the follow-ing advantages have been observed, as illustrated in Fig. 5 . The data mining process can be seen as a knowledge creation phase in the whole data mining enhanced decision making pro-cess, in which the data sets undergo cleaning and pre-processing for removing discrepancies and inconsistencies to improve its quality. The selected data set is then analysed to identify patterns that represent relationships among data by applying algorithms such as decision tree induction. Association rules are then mined out from the implicit relationships within the domain data. It is clear that by taking advantage of data mining technology in IDSS, the deci-sions can be made based on organisational knowledge rather than raw data or information. As the knowledge output from data mining process is transformed from patterns and trends with combination of acknowledgment of business goals and practical plans, it provides decision makers with purpose and requirements-oriented support rather than unfocussed informa-tion support. Data mining reveals implicit relationships behind data itself, which can assist decision makers obtaining overall perceptions of decisions in an organisation. Information flowing through an IDSS without data mining process can be disjoint with discrepancy and inconsistency, which leads to poor decision support. Therefore, the performance of IDSS can be greatly improved through data mining to provide better decision support X  X nowledge with quality, business relevance and understood by users from multi-dimensions.
 3.3 Intelligent agents enhanced IDSS The need for active decision support was first asserted by Keen when he outlined  X  X he next decade of DSS X  [ 53 ]. In late 1980s and early 1990s, researchers started to explore the pos-sibility of utilising intelligent agents for DSS performance improvement with respect to its activeness. Intelligent agents are also known as intelligent interfaces or adaptive interfaces. Intelligent agent research has been emerging as a multi-disciplinary research area involv-ing researchers from such fields as DSS, cognitive science, psychology, etc. [ 34 , 96 ]. One fundamental justification for using intelligent agents to enhance IDSS was originated from the weak performance of traditional DSS, i.e. its passiveness of interaction. It was argued that there should be more active interactions between DSS users and systems in decision making process [ 93 , 94 ]. Typical characteristics of intelligent agents include: intelligence, autonomy, pro-activeness, purposefulness, competence, reasoning capability, and interac-tion with environment and other agents. These features make agents attractive to and suitable for developing active, communicative and co-operative IDSS. From the interoperability and synchronisation viewpoint, intelligent agents can facilitate presentation integration, process integration and information integration.

Earlier publications were focussed on the architecture of active IDSS. Subsequently, numerous research and IDSS have been reported based on software agents [ 47 , 65 , 67 , 97 , 113 , 120 ] to support wide range of decision tasks including diagnosis [ 86 , 107 ], information representation and retrieval [ 52 ], electronic commerce [ 67 ] exception management [ 114 ], and data flow management [ 112 ]. From these developments and systems, it has been no-ticed that over the years the use of agents in IDSS has shifted from Keen X  X  [ 53 ] original advocate (exploitation of emerging software tools and artificial intelligence to built semi-expert systems) to multi-agent systems (MASs) and software computing. In fact, rather than stand-alone modules, intelligent logic is now inherently incorporated in IDSS together with other modern ITs such as data mining and Web technology to provide higher-level and more comprehensive integration services.

The agents in IDSS were particularly suitable for performing integration/co-ordination of processes as well as specific tasks/processes to assist achieving global solutions in dynamic and unpredictable environments. In Lee and Park [ 67 ], three agents were implemented in the prototype IDSS: a knowledge mining agent to actively discover sampling knowledge that provides support in the available customised sampling method generation, a user assistant agent to accomplish the integration between a particular decision maker and the sampling knowledge mining agent (to achieve presentation integration), and an adaptation agent to inte-grate and co-ordinate functions across all the agents in the system. In Wang et al. [ 114 ], three types of agents were designed working together to support decisions in security exception management. Integration agents worked as a bridge between the exception management and existing security transaction systems. Task agents were deployed to perform data monitoring and exception repair activities. A repository agent integrates different types of information such as real-time trade data for monitoring, reports for exceptions that have been deleted, exception reconciliation status. Both of the above research work addressed the integration from information, process and presentation perspectives. The information integration in both cases is achieved in the same manner through the concept of a consistent knowledge reposi-tory. The means to achieve process and presentation integration are slightly different. Wang et al. [ 114 ] directly used integration agents, but Lee and Park [ 67 ] employed a sampling adap-tation agent for co-ordination . In both ways the awareness has been achieved of other agents and their capabilities as integration among the agents occur, therefore the IDSS obtained the notification of process and task constraints for process integration. In terms of tighter integration and higher degree of direct integration with problem domains through agents, Vahidov and Kersten [ 113 ] introduced a decision station for investment decision support which has agents working as sensors and effectors to gain business intelligence from the environment and to impose impact onto the environment. The sensor agents collect infor-mation from multiple sources including financial markets, historical information, analyst X  X  opinions, news articles and other relevant sources, perform normal tasks as transformations and calculations, and advanced tasks, e.g. based on the market volatility they could decide to monitor market more closely (planning capability) and adjust the levels at which the alert signals are generated (adaptive capability). The effector agents can engage in variable activ-ities required to implement a decision, e.g. converting the decision into more detailed plans, optimising the well-structured aspects of a decision, determining sequence of actions, moni-toring execution of a decision, and even negotiation in the course of implementing a decision. In the meantime, data and information integration is achieved through the interoperability among the sensor agents, IDSS kernel and effector agents.

Other examples of agent enhanced IDSS include agents for group decision support [ 99 ], for strategic planning [ 91 ], for handling uncertainties [ 37 ], for business process manage-ment [ 50 ], and for multi-criteria decision analysis [ 36 , 51 ]. So far intelligent agents have demonstrated tremendous potential in supporting well-defined processes/tasks such as data conversion, information filtering and data mining [ 16 ], and have promised support for ill-structured tasks in dynamic co-operation [ 88 ].

Integrating agents into IDSS has shown that the decision support performance is improved, in the sense that IDSS is not only working as a tool that can monitor decision making process, but also can stimulate creative ideas through active interaction between IDSS users and sys-tems. This is because agents enhanced IDSS allow users (decision makers) to have insightful conversations, aided by presentation integration, with the systems when they continuously formulate and inquiry about the decision problems under dynamic circumstances. In essence, the agents offer IDSS with the capability to help and engage decision makers in the form of teaching, learning and performing tasks. The active IDSS can work as experts, servants and mentors and know when and how to provide advice and criticisms. This cycle has been illustrated in Fig. 6 . 3.4 Web-enhanced IDSS Internet and Web technology has presented a new world to IDSS in the sense that Web is not only emerging as the development and delivery platform for IDSS, but also IDSS can be more scalable and interoperable in network-based business environment [ 74 ]. Many stand-alone DSS lack knowledge orientation and collaborative decision making in conflict reconciliation process, which is crucial for strategic planning and group decision making. At the beginning of the 21st century, the Web is at the centre of activity in developing IDSS. When vendors propose a Web-based IDSS, they are referring to a computerised system that delivers decision support information or decision support tools to a manager or business analyst using a Web browser such as Netscape Navigator or Internet Explorer. A major motivation for using Web technology to enhance IDSS is that IDSS environments are rapidly changing from centralised and closed to distributed and open in Internet computing.

As discussed in the Sect. 2 of this paper, service integration has remained a constant chal-lenge and interest in the development of IDSS. Three types of service integration have been actively researched in supporting decision making: interface-wrapping services, MAS ser-vices and Web services. While interface-wrapping services set up the foundation to develop and deploy services in the network, MAS leverage artificial intelligent technology to make them more autonomous, robust and mobile for IDSS. It is Web services however, based on extensible mark-up language (XML) schemas and a communication protocol known as simple object access protocol (SOAP), that provides the capability to be published, located and invoked across the Web to truly support collaborative decision making. At the moment, the issues presented to IDSS by Web services include interoperability, cross-platform and information security [ 68 ]. Nevertheless, Web service has been widely adopted as promis-ing technology to support open and distributed decision making in wide decision making scenarios including security exception management [ 114 ], mould industry [ 102 ], co-design and concurrent engineering [ 69 ], and distributed product design evaluation [ 97 ]. In the last literature, an IDSS named as WebCADET was developed adopting the  X  X nowledge server X  paradigm. WebCADET integrates a KBS in which the inference engine and knowledge bases are located on a server computer. Its user interface is exported on demand to client computers via the Internet and Web.

It should be noted that, unlike agents, Web services are not designed to use and recon-cile ontology. A Web service knows only about itself, while agents often have awareness of other agents and their capabilities as interactions among the agents occur. Agents are inher-ently communicative, whereas Web services are passive until they are invoked. Agents are co-operative, and by forming teams and coalitions they can provide higher level and more comprehensive services, while current standards for Web services don X  X  provide composing functionalities [ 17 , 49 ]. Wang et al. [ 114 ] explored integrating both Web service and agent technology into IDSS with the purpose of overcoming the limitations of their own.
The publications have shown that integrating Web technology for IDSS demonstrates many benefits including: (1) global access to decision support functions and services avail-able to managers over a proprietary intranet, to customers and suppliers over an extranet, or to any stakeholders over Internet; (2) to improve the rapid dissemination and sharing of  X  X est practices X  analysis and decision making frameworks; (3) to promote more consistent decision making on repetitive tasks [ 39 , 101 ]. 4 Research challenges and future research directions Examining the development of DSS over last three decades has guided us in understand-ing the evolution to IDSS. Certain challenges and trends for integration of IDSS have been observed from two different viewpoints: specific integration aspect viewpoint and general integration viewpoint. 4.1 Challenges and possible directions for specific integration aspects 1. Data and information integration is the most fundamental issue for all integration aspects, 2. From model integration point of view, more work need to be carried out on integrating 3. A big challenge for process integration is the creation of a common decision making 4. Challenges for presentation integration are: first, how should an IDSS provide differ-5. Service integration has been dominated by web service development over past decade 4.2 General future research suggestions Further research effort is required for general integration issues including:  X  Generality and extensibility of the integration approaches and processes implemented in  X  Flexibility versus reliability, i.e. the tradeoffs between loose integration and tight integra- X  Moving from null and in-project integration to generic integration to extend the utilisation  X  From IDSS to a generic IDSE [ 75 , 76 ], which can configure and re-configure readily 5 Conclusions Distinguished from traditional management information systems, a DSS is decision focussed, user initiated and controlled, and combines the use of models and analytical techniques with traditional data access and retrieval functions. While the primary purpose of a stand-alone DSS is to improve the performance of individual decision maker X  X o improve the quality of his or her decision making by improving its effectiveness and efficiencies, IDSS have demonstrated its advantages in providing consistent, co-ordinated, active and global support for multiple users on varied decisions in an organisation. The integration within an IDSS can be addressed not only from data, model, and presentation (user interface) perspectives, but also from service and process viewpoints. The above integration can be enhanced through the state-of-the-art technologies and methodologies such as KBSs, data mining, intelligent agents and the Web technology.

This paper has reviewed the background, the current state-of-the-art of the IDSS, key integration issues and their positive impact on the decision support performance. Selected collection of publications have been analysed to establish the key integration perspectives that IDSS have been embraced, and to establish an initial view on how integration has improved decision support performance, not only in the sense of what support IDSS can provide, but also in the way how the decisions are made. It can be expected that the key strategies of whole decision making process will be substantially affected along with the advances of integration technology and methodology in the future.

The research reviewed in this paper has concentrated on the technologies and methods for the integration of decision support systems. The IDSS have improved performance compared with isolated, stand-alone DSS but still with fixed functions. Future work should investigate more generic integration frameworks that allow IDSS to evolve into an IDSE, which can flex-ibly configure and re-configure its functions to fast respond to varied decision requirements resulting from dynamic business situations. Research challenges of developing such an IDSE include two aspects: (1) the trade-off between loose and tight integration strategies within the integration frameworks to achieve the balance between the flexibility and reliability of the IDSE. (2) The seamless integration across data, models and processes within the integration frameworks so that the IDSE can provide coherent and consistent services and presentations to decision makers.
 References Author Biographies
