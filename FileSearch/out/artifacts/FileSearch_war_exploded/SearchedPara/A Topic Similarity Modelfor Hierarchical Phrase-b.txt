 Topic model (Hofmann, 1999; Blei et al., 2003) is a popular technique for discovering the underlying topic structure of documents. To exploit topic infor-mation for statistical machine translation (SMT), re-searchers have proposed various topic-specific lexi-con translation models (Zhao and Xing, 2006; Zhao and Xing, 2007; Tam et al., 2007) to improve trans-lation quality.

Topic-specific lexicon translation models focus on word-level translations. Such models first esti-mate word translation probabilities conditioned on topics, and then adapt lexical weights of phrases by these probabilities. However, the state-of-the-art SMT systems translate sentences by using se-quences of synchronous rules or phrases, instead of translating word by word. Since a synchronous rule is rarely factorized into individual words, we believe that it is more reasonable to incorporate the topic model directly at the rule level rather than the word level.

Consequently, we propose a topic similari-ty model for hierarchical phrase-based translation (Chiang, 2007), where each synchronous rule is as-sociated with a topic distribution. In particular,  X  Given a document to be translated, we cal- X  As we will discuss in Section 3.2, the similarity  X  We estimate the topic distribution for a rule
Experiments on Chinese-English translation tasks (Section 6) show that, our method outperforms the baseline hierarchial phrase-based system by +0.9 B
LEU points. This result is also +0.5 points high-er and 3 times faster than the previous topic-specific lexicon translation method. We further show that both the source-side and target-side topic distribu-tions improve translation quality and their improve-ments are complementary to each other. A topic model is used for discovering the topics that occur in a collection of documents. Both La-tent Dirichlet Allocation (LDA) (Blei et al., 2003) and Probabilistic Latent Semantic Analysis (PLSA) (Hofmann, 1999) are types of topic models. LDA is the most common topic model currently in use, therefore we exploit it for mining topics in this pa-per. Here, we first give a brief description of LDA.
LDA views each document as a mixture pro-portion of various topics, and generates each word by multinomial distribution conditioned on a topic. More specifically, as a generative process, LDA first samples a document-topic distribution for each doc-ument. Then, for each word in the document, it sam-ples a topic index from the document-topic distribu-tion and samples the word conditioned on the topic index according the topic-word distribution.
Generally speaking, LDA contains two types of parameters. The first one relates to the document-topic distribution, which records the topic distribu-tion of each document. The second one is used for topic-word distribution, which represents each topic as a distribution over words. Based on these param-eters (and some hyper-parameters), LDA can infer a topic assignment for each word in the documents. In the following sections, we will use these parameters and the topic assignments of words to estimate the parameters in our method. Sentences should be translated in consistence with their topics (Zhao and Xing, 2006; Zhao and Xing, 2007; Tam et al., 2007). In the hierarchical phrase based system, a synchronous rule may be related to some topics and unrelated to others. In terms of probability, a rule often has an uneven probability distribution over topics. The probability over a topic is high if the rule is highly related to the topic, other-wise the probability will be low. Therefore, we use topic distribution to describe the relatedness of rules to topics.

Figure 1 shows four synchronous rules (Chiang, 2007) with topic distributions, some of which con-tain nonterminals. We can see that, although the source part of rule (b) and (c) are identical, their top-ic distributions are quite different. Rule (b) contains a highest probability on the topic about  X  X hina-U.S. relationship X , which means rule (b) is much more related to this topic. In contrast, rule (c) contains an even distribution over various topics. Thus, giv-en a document about  X  X hina-U.S. relationship X , we hope to encourage the system to apply rule (b) but penalize the application of rule (c). We achieve this by calculating similarity between the topic distribu-tions of a rule and a document to be translated.
More formally, we associate each rule with a rule-topic distribution P ( z | r ) , where r is a rule, and z is a topic. Suppose there are K topics, this distribution can be represented by a K -dimension vector. The k -th component P ( z = k | r ) means the probability of topic k given the rule r . The estimation of such distribution will be described in Section 4.
Analogously, we represent the topic information of a document d to be translated by a document-topic distribution P ( z | d ) , which is also a K -dimension vector. The k -th dimension P ( z = k | d ) means the probability of topic k given document d . Different from rule-topic distribution, the document-topic distribution can be directly inferred by an off-the-shelf LDA tool.

Consequently, based on these two distribution-s, we select a rule for a document to be translat-ed according to their topic similarity (Section 3.1), which measures the relatedness of the rule to the document. In order to encourage the application of generic rules which are often penalized by our similarity model, we also propose a topic sensitivity model (Section 3.2). 3.1 Topic Similarity By comparing the similarity of their topic distribu-tions, we are able to decide whether a rule is suitable for a given source document. The topic similarity computes the distance of two topic distributions. We calculate the topic similarity by Hellinger function: Hellinger function is used to calculate distribution distance and is popular in topic model (Blei and Laf-ferty, 2007). 1 By topic similarity, we aim to encour-age or penalize the application of a rule for a giv-en document according to their topic distributions, which then helps the SMT system make better trans-lation decisions. 3.2 Topic Sensitivity Domain adaptation (Wu et al., 2008; Bertoldi and Federico, 2009) often distinguishes general-domain data from in-domain data. Similarly, we divide the rules into topic-insensitive rules and topic-sensitive rules according to their topic distributions. Let X  X  revisit Figure 1. We can easily find that the topic distribution of rule (c) distribute evenly. This in-dicates that it is insensitive to topics, and can be applied in any topics. We call such a rule a topic-insensitive rule. In contrast, the distributions of the rest rules peak on a few topics. Such rules are called topic-sensitive rules. Generally speaking, a topic-insensitive rule has a fairly flat distribution, while a topic-sensitive rule has a sharp distribution.
A document typically focuses on a few topics, and has a sharp topic distribution. In contrast, the distri-bution of topic-insensitive rule is fairly flat. Hence, a topic-insensitive rule is always less similar to doc-uments and is punished by the similarity function.
However, topic-insensitive rules may be more preferable than topic-sensitive rules if neither of them are similar to given documents. For a doc-ument about the  X  X ilitary X  topic, the rule (b) and (c) in Figure 1 are both dissimilar to the document, because rule (b) relates to the  X  X hina-U.S. relation-ship X  topic and rule (c) is topic-insensitive. Never-theless, since rule (c) occurs more frequently across various topics, it may be better to apply rule (c).
To address such issue of the topic similarity mod-el, we further introduce a topic sensitivity model to describe the topic sensitivity of a rule using entropy as a metric: According to the Eq. (2), a topic-insensitive rule has a large entropy, while a topic-sensitive rule has a s-maller entropy. By incorporating the topic sensitivi-ty model with the topic similarity model, we enable our SMT system to balance the selection of these t-wo types of rules. Given rules with approximately equal values of Eq. (1), we prefer topic-insensitive rules. Unlike document-topic distribution that can be di-rectly learned by LDA tools, we need to estimate the rule-topic distribution according to our requirement. In this paper, we try to exploit the topic information of both source and target language. To achieve this goal, we use both source-side and target-side mono-lingual topic models, and learn the correspondence between the two topic models from word-aligned bilingual corpus.

Specifically, we use two types of rule-topic dis-tributions: one is source-side rule-topic distribution and the other is target-side rule-topic distribution. These two rule-topic distributions are estimated by corresponding topic models in the same way (Sec-tion 4.1). Notably, only source language documents are available during decoding. In order to compute the similarity between the target-side topic distribu-tion of a rule and the source-side topic distribution of a given document  X  we need to project the target-side topic distribution of a synchronous rule into the space of the source-side topic model (Section 4.2).
A more principle way is to learn a bilingual topic model from bilingual corpus (Mimno et al., 2009). However, we may face difficulty during decoding, where only source language documents are avail-able. It requires a marginalization to infer the mono-lingual topic distribution using the bilingual topic model. The high complexity of marginalization pro-hibits such a summation in practice. Previous work on bilingual topic model avoid this problem by some monolingual assumptions. Zhao and Xing (2007) assume that the topic model is generated in a mono-lingual manner, while Tam et al., (2007) construct their bilingual topic model by enforcing a one-to-one correspondence between two monolingual topic models. We also estimate our rule-topic distribution by two monolingual topic models, but use a differ-ent way to project target-side topics onto source-side topics. 4.1 Monolingual Topic Distribution Estimation We estimate rule-topic distribution from word-aligned bilingual training corpus with documen-t boundaries explicitly given. The source and tar-get side distributions are estimated in the same way. For simplicity, we only describe the estimation of source-side distribution in this section.

The process of rule-topic distribution estimation is analogous to the traditional estimation of rule translation probability (Chiang, 2007). In addition to the word-aligned corpus, the input for estimation also contains the source-side topic-document distri-bution of every documents inferred by LDA tool.
We first extract synchronous rules from training data in a traditional way. When a rule r is extracted from a document d with topic distribution P ( z | d ) , we collect an instance ( r, P ( z | d ) , c ) , where c is the fraction count of an instance as described in Chiang, (2007). After extraction, we get a set of instances I = { ( r, P ( z | d ) , c ) } with different document-topic distributions for each rule. Using these instances, we calculate the topic probability P ( z = k | r ) as follows:
P ( z = k | r ) =
By using both source-side and target-side document-topic distribution, we obtain two rule-topic distributions for each rule in total. 4.2 Target-side Topic Distribution Projection As described in the previous section, we also esti-mate the target-side rule-topic distribution. How-ever, only source document-topic distributions are available during decoding. In order to calculate the similarity between the target-side rule-topic dis-tribution of a rule and the source-side document-topic distribution of a source document, we need to project target-side topics into the source-side topic space. The projection contains two steps:  X  In the first step, we learn the topic-to-topic cor- X  In the second step, we project the target-side
In the first step, we estimate the correspondence probability by the co-occurrence of the source-side and the target-side topic assignment of the word-aligned corpus. The topic assignments are output by LDA tool. Thus, we denotes each sentence pair by ( z f , z e , a ) , where z f and z e are the topic as-signments of source-side and target-side sentences respectively, and a is a set of links { ( i, j ) } . A link ( i, j ) means a source-side position i aligns to a target-side position j . Thus, the co-occurrence of a source-side topic with index k f and a target-side topic k e is calculated by: where  X  ( x, y ) is the Kronecker function, which is 1 if x = y and 0 otherwise. We then compute the probability of P ( z = k f | z = k e ) by normalizing the co-occurrence count. Overall, after the first step, we obtain an correspondence matrix M K e  X  K target-side topic to source-side topic, where the item M i,j represents the probability P ( z f = i
In the second step, given the correspondence ma-distribution P ( z e | r ) to the source-side topic space by multiplication as follows: In this way, we get a second distribution for a rule in the source-side topic space, which we called pro-jected target-side topic distribution T ( P ( z e | r )) .
Obviously, our projection method allows one target-side topic to align to multiple source-side top-ics. This is different from the one-to-one correspon-dence used by Tam et al., (2007). From the training result of the correspondence matrix M K e  X  K find that the topic correspondence between source and target language is not necessarily one-to-one. Typically, the probability P ( z = k f | z = k e ) of a target-side topic mainly distributes on two or three source-side topics. Table 1 shows an example of a target-side topic with its three mainly aligned source-side topics. We incorporate our topic similarity model as a new feature into a traditional hiero system (Chi-ang, 2007) under discriminative framework (Och and Ney, 2002). Considering there are a source-side rule-topic distribution and a projected target-side rule-topic distribution, we add four features in total:  X  Similarity ( P ( z  X  Similarity ( P ( z  X  Sensitivity ( P ( z  X  Sensitivity ( T ( P ( z To calculate the total score of a derivation on each feature listed above during decoding, we sum up the correspondent feature score of each applied rule. 2
The source-side and projected target-side rule-topic distribution are calculated before decoding. During decoding, we first infer the topic distribution P ( z f | d ) for a given document on source language. When applying a rule, it is straightforward to calcu-late these topic features. Obviously, the computa-tional cost of these features is rather small.
In the topic-specific lexicon translation model, given a source document, it first calculates the topic-specific translation probability by normalizing the entire lexicon translation table, and then adapts the lexical weights of rules correspondingly. This makes the decoding slower. Therefore, comparing with the previous topic-specific lexicon translation method, our method provides a more efficient way for incor-porating topic model into SMT. We try to answer the following questions by experi-ments: 1. Is our topic similarity model able to improve 2. Is it helpful to introduce the topic sensitivi-3. Is it necessary to project topics by one-to-many 4. What is the effect of our method on various 6.1 Data We present our experiments on the NIST Chinese-English translation tasks. The bilingual training da-ta contains 239K sentence pairs with 6.9M Chinese words and 9.14M English words, which comes from the FBIS portion of LDC data. There are 10,947 documents in the FBIS corpus. The monolingual da-ta for training English language model includes the Xinhua portion of the GIGAWORD corpus, which contains 238M English words. We used the NIST evaluation set of 2005 (MT05) as our development set, and sets of MT06/MT08 as test sets. The num-bers of documents in MT05, MT06, MT08 are 100, 79, and 109 respectively.

We obtained symmetric word alignments of train-ing data by first running GIZA++ (Och and Ney, 2003) in both directions and then applying re-finement rule  X  X row-diag-final-and X  (Koehn et al., 2003). The SCFG rules are extracted from this word-aligned training data. A 4-gram language model was trained on the monolingual data by the SRILM toolkit (Stolcke, 2002). Case-insensitive NIST B LEU (Papineni et al., 2002) was used to mea-sure translation performance. We used minimum er-ror rate training (Och, 2003) for optimizing the fea-ture weights.
 For the topic model, we used the open source L-DA tool GibbsLDA++ for estimation and inference. 3 GibssLDA++ is an implementation of LDA using gibbs sampling for parameter estimation and infer-ence. The source-side and target-side topic models are estimated from the Chinese part and English part of FBIS corpus respectively. We set the number of topic K = 30 for both source-side and target-side, and use the default setting of the tool for training and inference. 4 During decoding, we first infer the top-ic distribution of given documents before translation according to the topic model trained on Chinese part of FBIS corpus. 6.2 Effect of Topic Similarity Model We compare our method with two baselines. In addi-tion to the traditional hiero system, we also compare with the topic-specific lexicon translation method in Zhao and Xing (2007). The lexicon translation prob-ability is adapted by: p ( f | e, D F )  X  p ( e | f, D F ) P ( f | D F ) (6) = However, we simplify the estimation of p ( e | f, z = k ) by directly using the word alignment corpus with topic assignment that is inferred by the GibbsL-DA++. Despite the simplification of estimation, the improvement of our implementation is comparable with the improvement in Zhao et al.,(2007). Given a new document, we need to adapt the lexical transla-tion weights of the rules based on topic model. The adapted lexicon translation model is added as a new feature under the discriminative framework.
Table 2 shows the result of our method compar-ing with the traditional system and the topic-lexicon specific translation method described as above. By using all the features (last line in the table), we im-prove the translation performance over the baseline system by 0.87 B LEU point on average. Our method also outperforms the topic-lexicon specific transla-tion method by 0.47 points. This verifies that topic similarity model can improve the translation quality significantly.

In order to gain insights into why our model is helpful, we further investigate how many rules are topic-sensitive. As described in Section 3.2, we use entropy to measure the topic sensitivity. If the en-tropy of a rule is smaller than a certain threshold, then the rule is topic sensitive. Since documents of-ten focus on some topics, we use the average entropy of document-topic distribution of all training docu-ments as the threshold. We compare both source-side and target-side distribution shown in Table 3. We find that more than 80 percents of the rules are topic-sensitive, thus provides us a large space to im-prove the translation by exploiting topics.
We also compare these methods in terms of the decoding speed (words/second). The baseline trans-lates 12.6 words per second, while the topic-specific lexicon translation method only translates 3.3 word-s in one second. The overhead of the topic-specific lexicon translation method mainly comes from the adaptation of lexical weights. It takes 72.8% of the time to do the adaptation, despite only lexical weights of the used rules are adapted. In contrast, our method has a speed of 10.2 words per second for each sentence on average, which is three times faster than the topic-specific lexicon translation method.
Meanwhile, we try to separate the effects of source-side topic distribution from the target-side topic distribution. From lines 4-6 of Table 2. We clearly find that the two rule-topic distributions im-prove the performance by 0.48 and 0.38 B LEU points over the baseline respectively. It seems that the source-side topic model is more helpful. Fur-thermore, when combine these two distributions, the improvement is increased to 0.64 points. This indi-cates that the effects of source-side and target-side distributions are complementary. 6.3 Effect of Topic Sensitivity Model As described in Section 3.2, because the similari-ty features always punish topic-insensitive rules, we introduce topic sensitivity features as a complemen-t. In the last line of Table 2, we obtain a fur-ther improvement of 0.23 points, when incorporat-ing topic sensitivity features with topic similarity features. This suggests that it is necessary to dis-tinguish topic-insensitive and topic-sensitive rules. 6.4 One-to-One Vs. One-to-Many Topic In Section 4.2, we find that source-side topic and target-side topics may not exactly match, hence we use one-to-many topic correspondence. Yet anoth-er method is to enforce one-to-one topic projection (Tam et al., 2007). We achieve one-to-one projection by aligning a target topic to the source topic with the largest correspondence probability as calculated in Section 4.2.

Table 4 compares the effects of these two method-s. We find that the enforced one-to-one topic method obtains a slight improvement over the baseline sys-tem, while one-to-many projection achieves a larger improvement. This confirms our observation of the non-one-to-one mapping between source-side and target-side topics. 6.5 Effect on Various Types of Rules To get a more detailed analysis of the result, we further compare the effect of our method on differ-ent types of rules. We divide the rules into three types: phrase rules, which only contain terminal-s and are the same as the phrase pairs in phrase-based system; monotone rules, which contain non-terminals and produce monotone translations; re-ordering rules, which also contain non-terminals but change the order of translations. We define the monotone and reordering rules according to Chiang et al., (2008).

Table 5 show the results. We can see that our method achieves improvements on all the three type-s of rules. Our topic similarity method on mono-tone rule achieves the most improvement which is 0.6 B LEU points, while the improvement on reorder-ing rules is the smallest among the three types. This shows that topic information also helps the selec-tions of rules with non-terminals. In addition to the topic-specific lexicon transla-tion method mentioned in the previous sections, researchers also explore topic model for machine translation in other ways.

Foster and Kunh (2007) describe a mixture-model approach for SMT adaptation. They first split a training corpus into different domains. Then, they train separate models on each domain. Finally, they combine a specific domain translation model with a general domain translation model depending on var-ious text distances. One way to calculate the dis-tance is using topic model.

Gong et al. (2010) introduce topic model for fil-tering topic-mismatched phrase pairs. They first as-sign a specific topic for the document to be translat-ed. Similarly, each phrase pair is also assigned with one specific topic. A phrase pair will be discarded if its topic mismatches the document topic.

Researchers also introduce topic model for cross-lingual language model adaptation (Tam et al., 2007; Ruiz and Federico, 2011). They use bilingual topic model to project latent topic distribution across lan-guages. Based on the bilingual topic model, they ap-ply the source-side topic weights into the target-side topic model, and adapt the n-gram language model of target side.

Our topic similarity model uses the document top-ic information. From this point, our work is related to context-dependent translation (Carpuat and Wu, 2007; He et al., 2008; Shen et al., 2009). Previous work typically use neighboring words and sentence level information, while our work extents the con-text into the document level. We have presented a topic similarity model which incorporates the rule-topic distributions on both the source and target side into traditional hierarchical phrase-based system. Our experimental results show that our model achieves a better performance with faster decoding speed than previous work on topic-specific lexicon translation. This verifies the advan-tage of exploiting topic model at the rule level over the word level. Further improvement is achieved by distinguishing topic-sensitive and topic-insensitive rules using the topic sensitivity model.

In the future, we are interesting to find ways to exploit topic model on bilingual data without docu-ment boundaries, thus to enlarge the size of training data. Furthermore, our training corpus mainly focus on news, it is also interesting to apply our method on corpus with more diverse topics. Finally, we hope to apply our method to other translation models, espe-cially syntax-based models. The authors were supported by High-Technology R&amp;D Program (863) Project No 2011AA01A207 and 2012BAH39B03. This work was done dur-ing Xinyan Xiao X  X  internship at I 2 R. We would like to thank Yun Huang, Zhengxian Gong, Wenliang Chen, Jun lang, Xiangyu Duan, Jun Sun, Jinsong Su and the anonymous reviewers for their insightful comments.

