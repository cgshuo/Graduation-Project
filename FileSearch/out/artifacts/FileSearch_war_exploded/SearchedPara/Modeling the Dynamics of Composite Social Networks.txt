 Modeling the dynamics of online social networks over time not only helps us understand the evolution of network struc-tures and user behaviors, but also improves the performance of other analysis tasks, such as link prediction and commu-nity detection. Nowadays, users engage in multiple networks and form a  X  X omposite social network X  by considering com-mon users as the bridge. State-of-the-art network-dynamics analysis is performed in isolation for individual networks, but users X  interactions in one network can influence their behaviors in other networks, and in an individual network, different types of user interactions also affect each other. Without considering the influences across networks, one may not be able to model the dynamics in a given network cor-rectly due to the lack of information. In this paper, we study the problem of modeling the dynamics of composite networks, where the evolution processes of different network-s are jointly considered. However, due to the difference in network properties, simply merging multiple networks into a single one is not ideal because individual evolution pattern-s may be ignored and network differences may bring neg-ative impacts. The proposed solution is a nonparametric Bayesian model, which models each user X  X  common laten-t features to extract the cross-network influences, and use network-specific factors to describe different networks X  evo-lution patterns. Empirical studies on large-scale dynamic composite social networks demonstrate that the proposed approach improves the performance of link prediction over several state-of-the-art baselines and unfolds the network evolution accurately.
 H.2.8 [ Database Management ]: Database Applications  X  Data Mining Social Network Analysis, Transfer Learning
With the growth of online social media, social network analysis has attracted much research interest with a broad range of applications. As an important research topic, mod-eling the dynamics of social networks can help people un-derstand the evolution of network structures, e.g., the com-munity evolution, the change of network statistics, e.g., di-ameter and clustering coefficient, and the shifting of users X  preferences, etc. In addition, considering the dynamic prop-erties helps improve the performance of other tasks, such as link prediction [16] and community detection [14]. One important observation is that nowadays people join multi-ple networks for different applications. For example, users may use Facebook to connect with their friends but follow celebrities on Twitter. In addition, even in an individual network, users may have different interactions, such as  X  X or-ward (RT) X  and  X  X ention (@) X  on Twitter to share instan-t information. Consequently, by considering shared users, who can be identified by their unified IDs, as the bridges, different relationships or networks of interactions are nested together as composite networks [19].

Most existing research works only study the dynamics of individual networks and do not consider their intra-network correlations, but in practice, different networks can be high-ly correlated. As shown in Figure 1(g), the ratio of common links between Tencent X  X  Instant Messaging and Microblog networks (QQ vs. Tencent Weibo) is much higher than the one between two random graphs (0.143 vs. 0.007 respec-tively). In reality, individual networks reflect only partial aspects of users X  social activities, thus the information cap-tured by individual networks may be incomplete. For ex-ample, one user builds more links on Linkedin and interact less with her friends on Facebook when she just graduates. If we model the dynamics in each network independently, we cannot infer the graduation activity correctly, as people have different reasons to be inactive on Facebook and use Linkedin when they just want to change jobs. Consequently, we may fail to model this user X  X  social dynamics, e.g., her so-cial interactions on Facebook in the future, without knowing the fact of graduation. In addition, the reasons that cause the network to change can come from other networks. Two users without any common neighbors may follow each other on Twitter as they are familiar on Facebook, and one user may mention someone as she has forwarded many tweets of the user. Without considering the cross-network knowledge, one cannot correctly model these network dynamics. Fur-thermore, the data in an individual network may be very sparse, as users may have limited interactions when a net-work is just beginning to form. Data sparsity makes models overfit the rare observations and thus have poor generality. Modeling the dynamics of composite networks collectively can lead to more accurate and comprehensive results, and help understand the interactions across different networks.
However, simply considering these nested networks as a single one does not work either, as different networks have different properties. Firstly, different networks reflect users X  different social interests. Users in different networks may have overlapped but different social circles, as shown in Fig-ure 1(i), where one user belongs to different communities in different networks. Secondly, different networks have differ-ent levels of density. For example, Network-A is denser than Network-B. Simply merging may bring unnecessary and even harmful knowledge to each individual network. For exam-ple, if we combine networks A and B, the network structure in Network-B is hidden and we cannot discover users X  social interests in Network-B anymore. In addition, different types of networks have their own growth patterns, e.g., different shrinkage ratios of diameters, degree distributions, etc. For example, the average number of users X  neighbors in Wei-bo network is much higher than instant messaging network (QQ). As shown in Figure 1(a)  X  (d), communities in Weibo are larger than those in QQ and the evolution process in QQ is more stable.

To solve the aforementioned problems, we propose a non-parametric Bayesian model which integrates network evolu-tion over composite social networks directly. On one hand, it utilizes an adaptive and time-dependent prior for each user to denote different users X  latent interests that decide users X  community memberships globally. Since this prior is related to all nested networks and thus it can be considered as a bridge to capture the cross-network dynamics. On the oth-er hand, it introduces temporal network-specific factors to encode growth patterns in each individual network, which adjusts users X  concrete time-evolving community member-ships. These two priors are combined together to generate a hybrid prior and build dynamic mixed membership models in each individual network, where users X  community mem-berships as well as the community relations are exploited to generate links between them.

To allow community structures vary over time and across networks, we use a nonparametric generative process for mixed memberships with the hybrid prior. A state-space model is applied on the top to model the cross-network dy-namics.Specifically,users X  X atentinterests,network-specific factors and community relations are changing over time. As time evolves, the observations of one network at a given time stamp can be encoded in users X  latent interests and affect the structures of other networks in the next time stamp, while the network-specific factors and community relations allow every individual networks to have own growth patterns.
Problem Formulation The notations are summarized in Table 1. We consider a sequence of composite networks, denoted by { G t } T t =1 ,where G t = { G t i =( U i ,E t composite network observed at time t .Ineach G t , G t i is the i -th individual network, U i is the user set of G t i the user relationship of U i at time t and is the number of single networks. We define the complete user set as U and the link set at time t as E t ,where U =  X  X  U i } i =1 = { U is constant. Although new nodes can join networks and existing nodes can leave networks, we can still include these nodes in U but consider them to be inactive. The goal is to construct the composite network at time T +1giventhe network sequence { G t } T t =1 . We propose a novel nonparametric Bayesian model, I nfinite T ime-evolving Com posite Network Models (ITCom), to cap-ture the dynamics of composite social networks. In the fol-lowing, we firstly describe the foundation of ITCom, Mixed Membership Stochastic Blockmodels (MMSB) [1], and then present the details of three extensions: infinite, dynamic and knowledge transfer. Finally, we propose an efficient Sequen-tial Monte Carlo (SMC) method to infer the latent variables and construct ITCom. To help understand the motivation of the proposed model, we visualize two sub networks from Tencent. These networks contain users who are 2-hops away from the first author of the paper, as well as their relation-ships in Tencent X  X  instant messaging network QQ and Weibo network, as shown in Figure 1.
As a foundation of ITCom, MMSB assumes that each user u  X  U possesses a latent mixture of K roles, which deter-mine the membership of K communities in the network G . We denote this role mixture as a normalized K  X  1vector  X  . In MMSB, these vectors are drawn from some priors p (  X  ), such as Dirichlet distribution [1] and Logistic-Normal distribution [6]. MMSB generates a K  X  K community re-lation matrix B , which represents the probability of having a connection from a user in a community to another user in another community. Given the vector  X  i of each user u i ,the network edge e ij is generated stochastically as follows: where z ij and z ji are two K  X  1 unit indicator vectors for the sender u i and the receiver u j respectively. As MMSB on-ly models static and individual networks with fixed number of communities, as follows, we evolve MMSB step-by-step to model the dynamics of composite networks based on evi-dences and observations from real-world social networks.
In reality, with the evolution of networks, communities can come and go. For example, in social networks, e.g., Face-book, a set of users can form a community when they join the same school and get familiar with each other; in social media, e.g., Twitter, a discussion group may dismiss when a hot topic is out-of-date. An example can be found in Fig-ure 1(a) and (b), where the number of communities as well as the community sizes are different over time in Tencent Weibo. Different from previous research works [6, 4], which keep the community structure unchanged in different time stamps, ITCom allows communities to vary over time and determines the number of communities automatically. In-spired by Chinese Restaurant Process [2] and its successful applications on topic models [3] and MMSB [18], we intro-duce a stick-breaking prior on each  X  i to let  X  k =1  X  ik The construction process is as follows: where v ij is the latent factor that needs to be estimated. This process can be understood as follows. Let  X  i 1 = v i 1  X   X  i 1 be the remainder of the stick after chopping off the length v i 1 . To calculate the length  X  i 2 ,draw v i 2 randomly and chop off this fraction of the remainder of the stick, giving  X  2 = v i 2 (1  X  v i 2 ). This process is repeated and thus v the fraction to chop off from the stick X  X  remainder, and  X  is the length of the stick that was chopped off. Thus, the probability to generate a community K +1 can be calculated as 1  X  K k =1  X  ik . In addition, v ik evolves over time, and thus a community k can die if v ik becomes too small for each user u . To avoid overfitting and incorporate domain knowledge, we apply a logistic-normal prior on v i . Formally, we have where  X  is the mean of all i and  X  is used to control the pre-cision. As stated below, the logistic-normal prior allows us to incorporate global, network-specific and time-dependent knowledge naturally by adjusting  X  over time and networks.
Common knowledge can be transferred by overlapping users across individual networks while each individual net-work contains specific factors. For example, Facebook re-flects users X  friendship in daily life, while Twitter is more about users X  interests on daily news. But at the same time, the same users in different individual networks can also have similar neighbors as they have similar interests over differen-t dimensions like friendship, movies, etc. This phenomenon can be formulated as: different individual networks in a com-posite network may have different community structures, and each user follows community memberships over differ-ent networks while keeps some intrinsic features unchanged. One example can be found in Figure 1(a), (c) and (g), where QQ and Weibo networks have different community struc-tures and users X  community memberships but share many common links. To model these observations, we decom-pose v i into two parts, one representing each user X  X  laten-t features and the other reflecting network-specific factors. Let x i  X  R 1  X  D denote the latent features of user u i and  X  th individual network, where K d is the corresponding num-ber of communities. x i encodes each user X  X  latent interests while  X  d maps users X  latent interests to network-dependent communities. For each user u i in G d ,weset  X  di = x i  X  Thus, cross-network influence can be captured by x i while network-dependent properties can be described by  X  d .To avoid overfitting, we assign Gaussian priors to x i and  X  the generation process of  X  d i is as follows: The number of communities is network-dependent and the communities with the same index in different networks are not necessary identical. This is consistent with the real-world data in Figure 1, where the number of communities and community sizes of QQ and Weibo are different.
One important property of social networks is its dynamics, where communities can come into being and phase out, user-s X  community membership can change, and users can form and deform links. Examples can be found in Figure 1: (e) and (f) show the different community structures and their relation strengths over time; (a) and (b) present the differ-ent community memberships over time; (h) shows that the levels of users X  activities to generate links are closely related to their degrees, which evolve over time as well. In mixed membership models, these can be manipulated by chang-ing the community compatibility B and users X  community memberships  X  , and varying the number of users X  links in different time stamps respectively. Firstly, with the shifting of users X  interests, the connection between different commu-nities changes over time. Considering that older interactions have relatively smaller impacts, we use exponential decay to modify the priors of B .Let n t ij 1 denote the times that users build links between the i -th and the j -th communities at time t and n t ij 0 denote the number of user pairs that do not interact with each other but select the i -th and j -th com-munities at time t . With a kernel parameter  X  ,wehave Then the generation of the community compatibility matrix at time t is B t  X  Beta (  X  0 +  X   X  t ij 0 , X  1 +  X   X  t ij and  X  1 here enforce that the connection between new and existing communities can appear as time goes by. Second-ly, users X  community memberships shift over time as well. This can be understood from two aspects: (1). users X  latent interests x i change over time and (2). the mapping from latent interests to communities changes with the evolution of community structures. Motivated by state-space models for series data, we let That means, users X  latent interests as well as the interest-community mapping at time t are shifted from those in the last time stamp. Finally, users X  activity levels can be very different in different time stamps. According to the study in [10], the probability that one user generates one link with degrees of user u i in the network G d ,and  X  d and  X  d are two network-dependent parameters. In other words, in u-nit time, the expected number of interactions for user u i exp(  X  d n d i ). Instead of setting the number of interactions ex-plicitly, we introduce a sparsity parameter  X  d i = exp(  X  characterize the source of interaction, where N d is the num-ber of users in G d . Then, we down-weight the probability of successful interaction as Note that the number of node degree varies over time, thus  X  i changes with time as well.
We now put all the pieces together and give the full gen-erative process of ITCom as follows. The graphical model in one time stamp can be found in Figure 2.
Given observed links for some or all node pairs, we employ a Sequential Monte Carlo (SMC) method to draw samples from the latent variables X  posterior distribution and a Max-imum a posteriori (MAP) method to estimate the hyperpa-rameters. SMC incrementally runs a fast batch sampling method over the data at epoch t given the state at earli-er epochs. As the priors and posteriors are not conjugate, we divide the inference process into three phrases to reduce the computational cost. It firstly samples the communi-ty assignments of every links by assuming the community membership  X  is given, then infers users X  membership over communities, and finally estimates the hierarchical priors.
Sampling Community Assignments Due to the chal-lenge of infinite number of communities, we employ retro-spective sampling [15] to approximate the true infinite mod-el. Let  X  t d 0 =  X  0 +  X   X  t d 0 and  X  t d 1 =  X  d 1 +  X   X  pairwise community assignments in the d -th network at time t canbewrittenas ber of pairwise community assignments between community k and k at time t in the d -th network. As the conjugate property between Beta and Multinomial distributions, B t d can be marginalized. The posterior of community assign-ments can be defined as where z t d,  X  ( i,j ) denotes the set of community assignments without two assignments over the link between u i and u j and n t d,k,k ,y represents the total number of links in type y with ( k,k ) as the participating communities in the d -th network at time t . In addition, y t dij denotes the sign of the link e t dij ,where y t dij = 1 represents that u i are linked at time t and y t dij = 0 represents that u i and u j will not build a link between each other. Importantly, assuming the number of current communities is K ,if1  X  k  X  K then  X   X  t n probability of selecting community k if k  X  K but represents the aggregate posterior prob ability of the i nfinite  X  X  ail X  of communities with indexes greater than K if k&gt;K .
Sampling the Parameter v Given the community as-signments, we employ the Metropolis-Hastings algorithm to sample v for community memberships independently. Given users X  latent features x and network factors  X  ,tosamplea new community activation v  X  di for each user u i in the d -th network, we define the accept ratio of v  X  di , A ( v  X  di where D dik denotes the total number of indicators attached to user u i assigned to community k in the network G d . Then, at each time, we sample v  X  di from  X  N ( v  X  di | x i  X  d accept it with probability min A ( v  X  di ,v di ) , 1 .
Sampling x and  X  Given v , for each time stamp t ,we can infer the hierarchical priors:  X  t d for each network and x for each user u i . To find the optimal values, we first define the union distribution over v and priors as where x 0 i = 0 and  X  0 d = 0 . By calculating the derivatives of the log of likelihood with respect to  X  t d and x t and set them as zero, we obtain the sampling equations as where x t is a N  X  D matrix, each row of which is x t i .
Parameter Estimation As follows, we propose a max-imum a posteriori (MAP) method to estimate the hyper-parameters, including  X  ,  X  u and  X  d . To avoid overfitting, we place Gamma priors so that their prior distributions are conjugate with the likelihoods. For  X  ,wehave Similarly, we obtain the sampling equations for  X  u and  X  Framework We put all the components above into an SMC framework. Firstly, we set priors as arbitrary val-ues, then initialize the latent variables and finally sample the community assignments. Consequently, it alternatively updates community assignments, community memberships, priors and hyperparameters in each round of inference: This process is repeated until convergence. Besides, the s-parsity ratio  X  can be estimated independently by maxi-mizing likelihood [10]. To avoid overfitting and reduce the computational cost, we update latent variables periodically. Specifically, we update v every 5 iterations, both  X  and x ev-ery 10 iterations, and hyperparameters every 20 iterations. In addition, as in most real-world datasets, we observe on-ly positive links. For each user, we randomly sample other users who are more than two-hops away and build negative links to the current user. The number of negative links is kept in the same order to that of positive links.
Time Complexity At each iteration, SMC needs to look up all M links in nested networks to pick community assign-ments and then update v with time O ( TNKD )where N is the number of users. Metropolis-Hastings sampler spends O ( TND )onupdating x and O ( TK )onupdating  X  .Conse-quently, the updating of hyperparameters takes O ( TNK ). Typically, TK , TND and TNK are much smaller than TNKD .Thus,with I iterations, the whole complexity is O ( I ( MK + TNKD )) which linearly increases with the number of links M and users N . Following the similar idea in [19], that partitions data into multiple machines for paral-lel computing and then combines pieces of results, the infer-ence process can be implemented on Map/Reduce straight forward to cope with large datasets efficiently. We evaluate ITCom, on eight large-scale datasets from Tencent, Sina Weibo 1 , Xiaonei, Facebook/Twitter 2 ,Github Stackoverflow 4 and Epinion 5 . Most datasets can be down-loaded from the URLs in footnote and the pre-processed Stackoverflow dataset is also available 6 . The tasks include (1) link prediction, that predicts who will interact with each other in a given time stamp, and (2) macro-evolution, which predicts changes of networks X  statistics, e.g., clustering coef-ficients and degree distribution, etc. We adopt Mean Aver-age Precision (MAP) as the evaluation criterion. It measures how well the algorithm ranks new links above non-existing links. We set D =5,  X  = 1 and other hyperparameters as 1 . 0. The number of iterations is 1000.
 In the link prediction task, we compare ITCom with Mixed Membership Stochastic Blockmodels (MMSB) [1], dynam-ic MMSB (dMMSB) [6], Nonparametric Metadata Depen-dent Relational Model (NMDR) [9], dynamic Infinite Rela-tional Model (dIRM) [8] and Tensor Factorization (TF) [7]. http://www.wise2012.cs.ucy.ac.cy/challenge.html http://socialnetworks.mpi-sws.org http://www.githubarchive.org/ http://meta.stackoverflow.com/ http://konect.uni-koblenz.de/networks/epinions http://www.cse.ust.hk/~ezhong/dataset/so.zip MMSB is the basic baseline, dMMSB is a dynamic extension of MMSB, NMDR is a nonparametric extension of MMSB, dIRM is a dynamic and nonparametric extension of MMSB, and TF models multiple relations and time factors togeth-er but it does not model the network differences and in it the number of communities is fixed. For MMSB, dMMSB and TF, we set the number of communities K as 50 while NMDR, dIRM and ITCom can determine K automatical-ly. We set other parameters as the default values in original papers. For macro-evolution, we introduce the Microscopic Evolution (ME) model [10] as the baseline.
Each dataset contains a composite network, where each composite network contains multiple individual networks. According to different link types, these datasets can be clas-sified as relational networks, e.g., Tencent and Epinion, and interaction networks (the remaining six datasets), where us-er pairs in relational networks are distinct but users in in-teraction networks can interact with each other multiple times. Specifically, Tencent collection contains an instan-t messaging network (QQ) and a Weibo network (MB). In Epinion, people can build trust or distrust relations with others. Facebook collection captures users X  friendships and wall posting actions. In Xiaonei collection, users can leave records, visit friends X  homepages, chat with friends, and send friends applications. For Twitter and Sina Weibo, peo-ple can forward (RT) and mention (@) others X  tweets. In Github, users follow each other as well as being collabo-rators in different projects. In Stackoverflow, people can answer others X  questions, comment on others X  answers and vote others X  posts. Their statistics can be found in Table 2. Their degree distributions in the last time stamp and density evolutions are plotted in Figure 3. Although the degree dis-tributions all follow the power-low distribution and networks become denser as time evolves, different individual network-s in each collection have similar but different properties. It also implies that simply merging networks does not work, where networks X  specific patterns can be hidden. In sum-mary, these datasets come from different applications with different scales and time lengths. The correlations between individual networks in different datasets are very differen-t. For example, forwarding and mention may have highly positive correlation while trust and distrust relations are strongly negative correlated. This variety property makes the experiments convinced. To crawl data, we employ ran-dom walk based sampling method to select sub networks in Tencent and Xiaonei networks and extract relational knowl-edge from whole public data dumps of other datasets. In each dataset, users in different individual networks can be identified by unified user identity, such as the QQ number in the Tencent collection. In the link prediction task, the net-works at the previous T  X  1 time stamps are considered as the model input and the output is the prediction at time T . To simulate the evolution process, we consider the network series { G t } T/ 2 t =1 and evolve it from t = T/ 2 ,...,T .
Table 3 summarizes the MAP of all baselines in the link prediction task. ITCom consistently outperforms other base-lines on MAP in all networks except Tencent X  X  Microblog against TF. The MAP of ITCom is at least 0.02 higher than Com? (3). what is the effectiveness of corresponding ratio among individual networks? (4). what is the effectiveness of each component in ITCom?
We plot the community relation matrices of QQ and Wei-bo in Figure 5(a), where nodes are communities and the thickness of edges represent the relational strength between communities. Obviously, the number of communities and community relations are different (43 in QQ vs. 33 in Wei-bo). Communities in Weibo are more centralized while those in QQ are more diverse. This is consistent with real appli-cations, as people on Weibo follow others based on interests while people on QQ may interact with only close friends. This suggests that different networks have different commu-nity structures and ITCom can capture this difference. We analyze the effects to change the number of features D (5 to 100). The results are illustrated in Figure 5(b). The performance of ITCom is not sensitive to the number of D but decreases with very large D . The reason is that D de-notes the representation complexity of each user. Thus, if D exceeds a threshold (e.g., 50), the model is too complex and results in overfitting. At this point, it is less helpful to im-prove the model performance by increasing D .Inpractice, D can be tuned through cross-validation techniques. For  X  , we vary it from 1 to 10, the results are shown in Figure 5(c). The performance of ITCom drops down slightly with larger  X  but it is not sensitive nonetheless.

As many people may only use parts of online services, i.e., they may exist in one individual network but not in all net-works, we test the effect of the correspondence ratio between different individual social networks, e.g., the number of users who exist in both networks. Figure 5(d) presents the results with different ratios between the QQ and MB networks. IT-Com X  X  performance becomes worse if fewer correspondences are provided across networks. In addition, it outperforms MMSB consistently if there are corresponding users, imply-ing that ITCom successfully uses the overlapping users as bridges to capture cross-network influences.

To test the effectiveness of each component, i.e., compos-ite, infinite and dynamic in ITCom, we perform experiments on the Tencent dataset by removing specific components in ITCom and produce three baselines. Com considers only composite network knowledge but fixes the number of com-munities and ignores the temporal information, ICom is the same as ITCom but ignores the temporal information and TCom fixes the number of communities. As shown in Fig-ure 7, the composite modeling contributes most improve-ments while the infinite and dynamic extensions improve the model performance further.
As analyzed in the end of Section 2.6, the computational time of ITCom increases linearly with the number of inter-actions between users. In addition, the computational time is closely related to the convergence property of the infer-ence algorithm. We evaluate these empirically as shown in Figure 6. Figure 6(a) illustrates the computational time of MMSB-C, dMMSB-C, NMDR-C, dIRM-C and ITCom on the Tencent dataset, with different ratio of links. We ob-serve that the computational time increases linearly with larger data size. For our experimental setting, every round of inference takes about 45 seconds in our computer, of which memory is 16G and CPU is 3.2Gz. ITCom not only has bet-ter prediction performance as shown in Table 3, but also has similar time cost with dIRM-C and dMMSB-C. Figure 6(b) shows the convergence property of ITCom. Clearly, ITCom becomes convergent after about 400 iterations. Combining with the time cost of each round, the inference algorithm of ITCom takes about five hours to build a model.
Social Network Analysis [5] has drawn much research interest, ranging from link prediction [12], community detec-tion [11], to social influence [17]. Several works have been proposed to handle social networks with multiple relations, such as tensor factorization [7]. However, these works treat each type of relationship as equally important and do not consider network differences. In previous research [19], we introduced the concept of composite social networks. Based on the property that different social networks reflect differ-ent aspects of users X  interests, we introduced a hierarchi-cal Bayesian model to predict users X  behaviors by exploiting knowledge in different individual networks adaptively.
Network Dynamics As social networks change over time, studying network dynamics and evolution is also an impor-tant topic. Network dynamics focuses on the microscopic changes of networks, such as the links generated by specif-ic users, etc. For example, Nguyen et al. proposed a two-step framework to trace the evolution of overlapped network communities in dynamic mobile networks [14]. On the oth-er hand, network evolution aims to describe the change of macroscopic network properties, such as diameter, cluster-ing coefficients, etc. For example, Leskovec et al. proposed a simulation method to construct networks step-by-step de-pending on parameters estimated by maximal-likelihood meth-ods [10]. However, these existing works studied only one network but did not consider the influences across network-s. Besides, previous research works mostly deal with one aspect, dynamics or evolution, but the proposed model can handle both simultaneously.

MixedMembershipModels Recently, mixed mem-bership models have been demonstrated to be effective to model relational data, such as MMSB [1]. The main idea is to represent each entity as a mixed membership vector over communities or topics. Recently, MMSB has been ex-tended from two aspects: dynamic [6, 8, 4] and nonpara-metric [18], in order to model dynamical data and release the constraints on the number of communities. In addition, auxiliary data are also considered to improve the model per-formance [9]. Cross-domain collaborative filtering is intro-duced [13], where hierarchical Bayesian models are proposed to solve multiple domain user personalization. However, it is applied on static user-item interaction networks.
In this paper, we studied a new problem on dynamics analysis of composite social networks. We defined a com-posite social network as a set of nested individual networks, where users and links in different individual networks over-lap. The dynamical process of each individual network can influence each other while keeping specific evolution pat-terns. To model this co-evolution process, we proposed a nonparametric Bayesian model, ITCom, by capturing cross-network influences adaptively. The main idea is to model users X  latent interests, which carry the common knowledge embedded in multiple networks and use network-specific fac-tors to describe the network dependent growth patterns on community structures. These two kinds of knowledge are then encoded as a hybrid prior for a dynamic mixed member-ship model to generate the links between users in each time stamp. To allow communities vary over time and networks, we construct nonparametric models. Unlike prior works, the proposed model can capture the microscopic and macroscop-ic aspects of network dynamics, including the links of each specific user and the global changes of networks properties. The proposed model is flexible in that, it can be extended to any number of networks and the number of communities can be determined automatically. We conducted large-scale em-pirical studies on eight real-world network collections, where ITCom outperforms several state-of-the-art baselines on link prediction by as high as 0.11 on MAP efficiently and esti-mates the evolution of degree distribution and clustering coefficient accurately.

Future Works In this paper, the proposed model re-quire the users across networks to be identical. We propose to relax this restriction in the future. Besides modeling the network dynamics and predicting users X  behaviors [19], the rich data embedded in composite social networks can ben-efit many other applications. Firstly, users X  characteristics and their interactions can be exploited to build an accurate user distance measure. In addition, by considering multiple networks together, common patterns can be extracted from users X  behaviors/interactions and these patterns can be used to infer their characteristics.
 We thank the support of Hong Kong CERG Projects 621211 and 620812.

