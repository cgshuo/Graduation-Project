 Discourse segmentation aims at splitting texts into Elementary Discourse Units (EDUs) which are nonoverlapping units that serve to build the discourse structure of a document. Indeed, EDUs are the entities that have to be linked by coherent relations or the entities that have to be grouped together if a set of EDUs is, as a whole, an ar-gument of a coherent relation. Identifying EDU boundaries is thus an important first step in discourse parsing, since a wrong segmentation degrades the performances of discourse parsers. For instance, Soricut and Marcu [2003] have pointed out that perfect segmentation reduces the number of parser errors by 29%. Several works on automatic discourse segmentation have been undertaken by using rule-based [Le Thanh et al. 2004; Tofiloski et al. 2009] or learning techniques [Fisher and Roark 2007; Sporleder and Lapata 2005]. Most studies have focused on English. We note, however, some ef-forts for other languages such as French [Afantenos et al. 2010], Thai [Charoensuk et al. 2005], German [L  X  ungen et al. 2006], Spanish [Da Cunha et al. 2010], and Brazil-ian Portuguese [Pardo et al. 2004]. As far as we know, no work has investigated EDU segmentation in Modern Standard Arabic (MSA). This article is an attempt to do so using the Segmented Discourse Representation Theory (SDRT) as our formal frame-work [Asher and Lascarides 2003].

Due to the morphological and syntactic properties of MSA, discourse segmentation poses a different set of challenges. In particular, what are the segmentation principles that guide the segmentation process of Arabic texts? How can discourse segmentation deal with Arabic complex morphology where words, especially discourse connectives, are highly ambiguous? What kind of morphological analysis is suitable, that is, shal-low versus extensive? Are morphological features sufficient to achieve good results? What is the added value of shallow syntactic features? To answer these questions, we propose a two-step procedure. (1) The first step is the elaboration of an annotation scheme that defines a set of principles to guide the segmentation process. Two corpora that have different genre, audience, and style of writing have been annotated accord-ing to this scheme: elementary school textbooks and newspaper documents extracted from the syntactically annotated Arabic Treebank (ATB part3 v3.2) [Maamouri et al. 2010b]. (2) The second step is the elaboration of a feature set to automatically identify EDUs using a multiclass supervised learning approach that predicts nested EDUs. We use state-of-the-art features whose efficiency has been empirically determined such as punctuation, morphological, lexical, and syntactic features [Afantenos et al. 2012; Fisher and Roark 2007; Soricut and Marcu 2003; Sporleder and Lapata 2005]. Their use in Arabic discourse segmentation is, nonetheless, novel. We investigate how each feature contributes to the learning process. In particular, we analyse the effect of shal-low and extensive morphological features as well as the effect of chunks. We report our experiments on boundary detection, that is, the ability of the system to classify each token into the correct class, as well as on EDU recognition, namely, the ability of the system to identify EDU boundaries. We show that an extensive morphological analysis is crucial to achieve good results for both corpora. In addition, we show that adding chunks does not boost the performance of our system.

This article is organized as follows. The next section provides a definition of EDUs and highlights the challenges we need to overcome given the specificities of the Arabic language. Section 3 details the characteristics of our data, describes the segmentation guidelines, and presents the inter-annotators agreement study conducted on the two corpora. Section 4 presents our features. Our experiments and results are reported in Section 5. We compare our results to related work in Section 6. We finally conclude by summarizing the main contributions of this work. Defining segment boundaries is generally theory dependent since each theory defines its own specificities in terms of segmentation guidelines and unit size. Main discourse theories are: the Rhetorical Structure Theory (RST) [Mann and Thompson 1988] in which the discourse structure of a document is a tree where leaves (called nucleus and satellite) are contiguous EDUs and edges are rhetorical relations, the Discourse Lexicalized Tree-Adjoining Grammar (DLTAG) [Webber 2004] where the discourse structure is created by a composition of EDUs anchored by discourse connectives, and the Segmented Discourse Representation Theory (SDRT) [Asher and Lascarides 2003] that attempts to make explicit the interactions between the semantic content of the segments and the global, pragmatic structure of the discourse. The discourse structure is a graph and not a tree as in RST. Other important discourse theories in-clude the Discourse Representation Theory (DRT) [Kamp 1981] where the discourse structure is represented by the Discourse Representation Structure (DRS) formed by discourse referents and DRS conditions, the Intentional Discourse Model [Grosz and Sidner 1986], the Linguistic Discourse Model [Polanyi and Scha 1984; Polanyi 1985; Scha and Polanyi 1988], and the Discourse Graph Bank model [Wolf and Gibson 2006]. In this article, we follow the segmentation principles as defined within SDRT. An EDU is mainly a sentence or clauses in a complex sentence that typically correspond to verbal clauses, as in [ I loved this movie ] a [ because the actors were great ] the relative clause introduced by the marker because , indicates a cutting point. We have here the relation Explanation(a,b) 1 . An EDU can also correspond to other syn-tactic units describing eventualities, such as prepositional and noun phrases, as in [ After several minutes, ] a [ we found the keys on the table ] related by Frame(a,b) 2 . In addition, an EDU may be structurally embedded in another so as to encode adjuncts like appositions or cleft constructions with discursive long-range effects such as frame adverbials, nonrestrictive relatives, and appositions, as in [ Mr. Dupont, [ a rich business man, ] a was savagely killed ] Entity-Elaboration(a,b) 3 .

Our segmentation is more fine-grained than in Wolf and Gibson X  X  framework [2006] or the annotation scheme of RST [Carlson et al. 2003]. Indeed, in RST, EDUs can be simple sentences or clauses in a complex sentence that typically correspond to ver-bal clauses or to prepositional and noun phrases. In addition, embedding in RST is done artificially since it is handled by the relation labeler (with an ad hoc  X  X ame-unit X  relation) and not during the segmentation stage. In this section we give a brief overview of MSA specificities. For a detailed descrip-tion of MSA and Arabic Natural Language Processing (ANLP), see Habash [2010]. In the remainder of this article, all examples are extracted from our corpora. They are given in Arabic along with their English translation and their transliteration using Buckwalter 1.1.

Arabic does not have capital letters nor punctuation marks are widely used in cur-rent Arabic texts (at least not regularly). Moreover, Arabic discourse tends to use long and complex sentences. We can easily find an entire paragraph without any punctua-tion. As a Semitic language, Arabic has a complex morphology. Indeed, in addition to a concatenative morphology , where words are formed via a sequential concatenation process, Arabic is characterized by the presence of a templatic morphology where a templatic morpheme is composed of a root (a sequence of (mostly) three, (less so) four, or very rarely five consonants), patterns (an abstract template in which roots and vo-calisms are inserted), and vocalisms that specify the short vowels to use with a pattern. For example the word stem /katab/to-write is constructed from the root / k-t-b , the pattern 1V2V3 and the vocalism aa [Habash 2010]. Concatenative mor-phemes can be stems, affixes, or clitics. A clitic has the syntactic characteristics of a word but depends phonologically on another word or phrase. Clitics include prepo-sitions, conjunctions, and pronouns. For instance, prepositions (like /li/for), conjunc-tions (like /w/and), articles (like /Al/the) and pronouns (like /h/he), can be affixed to nouns, adjectives, particles, and verbs, causing several lexical ambiguities. Here are some examples.  X  The word /fhm can be a noun (that means understanding), a verb (that means to understand), or a conjunction ( /f/then) followed by the pronoun ( /hm/they).  X  The word /wlyd can be a person name (Waleed), a noun (that can mean a new-born), or the composition /w/and + /li/for + the noun /yd/hand.  X  The word /fDl can be a person name (Fadhl) as in (1), a verb (that means to prefer), or the conjunction /f/then followed by the verb /Dl/lost. Astqblt EA lp mSTfY fDl AlbArHp .
 Yesterday, I received Mustapha Fadhl X  X  family.

Note, however, that not all complex word structures are ambiguous. For instance, the word /Astt*krwnhA ([ /As/will], [ /tt*krwn/you remember], and [ /hA/her]) represents  X  X ill you remember her? X  in the English language.
Another specificity of Arabic is that word order is fairly flexible. Indeed, the change of certain position of words does not alter the meaning of the sentence. For exam-ple, the sentence  X  X he child goes to the school X  can be written in Arabic in three forms: / *hb Alwld &lt; lY Almdrsp, / Alwld *hb &lt; lY Almdrsp and / &lt; lY Almdrsp *hb Alwld.

Finally, the most important challenge in ANLP is diacritics. Arabic has 28 conso-nants that may be interleaved with different long and short vowels. Short vowels are not often explicitly marked in writing. Indeed, they are neither written in the Arabic handwriting of everyday use nor in general publications. Diacritics represent, among other things, short vowels. Arabic texts can be fully diacritized, partially diacritized, or nondiacritized. It should be noted that nondiacritized texts are highly ambiguous. For example, the word /vmn can be diacritized in 22 different forms. The same con-fusion holds between the verb /*ahaba/go and the noun /*NhabN/gold. Thus, a nondiacritized word could have different morphological features, and in some cases, different POS, especially when it is taken out of its context. In addition, even if the con-text is considered, the POS and the morphological features could remain ambiguous, as shown in (2). wSf AlTbyb llmryD mjmwEp mn Al &gt; dwyp lmEAljp &gt; lmh wjrHh The doctor recommended to his patient a set of drugs to treat his pain and injury.
In (2), if the word /jrHh is recognized as a verb (to injure), we will have a segmentation error since this word is a noun in the context of (2). The cutting point here should be the word /lmEAljp, because the discourse marker /l/for is a good indicator of the relation Goal . Our data come from two different corpora: elementary school textbooks and newspa-per documents extracted from the syntactically annotated Arabic Treebank (ATB v3.2 part3).

EST documents are usually well structured. Sentences are short (around 5.6 words per sentence) with quite a simple syntactic structure. They are characterized by the presence of punctuation marks. Document length is also short (around 10 sentences per document). Our colleagues of Sfax University have collected 34 EST documents. They have first randomly selected a set of texts from Tunisian elementary school textbooks (level 4th, 5th, 6th, 7th, and 8th, then they have manually input them into a text file format. This corpus actually contains a total of 622 sentences which cor-responds to 8 704 tokens (words + punctuations). Contrary to ATB documents, it is important to note that EST documents are not associated with any kind of manual annotation. (3) is an example of a sentence extracted from this corpus. ElY AT AlHm  X AmAt, AntSb HSn qdym, ydxlh Alz  X A r mn bw  X Abp mqw  X sp, tfDy bh &lt; lY &gt; rwqp msq  X fp, k &gt; swAq Almdynp AlEtyqp.
 In the Hammamet beach, an old fort is erected, in which a visitor can enter from an arched gate, leading him to wrapped corridors that resemble ancient city markets. ATB documents consist of 599 newswire stories from the An Nahar News Agency. Each document in this corpus is associated to two annotation levels: a morphological and parts-of-speech level and a syntactic Treebank annotation. The second level char-acterizes the constituent structures of word sequences, provides categories for each nonterminal node, and identifies null elements, co-reference, traces, etc. Contrary to EST, ATB documents are longer (around 25 sentences per document) and sentences are syntactically more complex. We have randomly selected 56 documents from ATB for a total of 1 427 sentences and 31 682 tokens (words + in (4) presents a short sentence extracted from an ATB document along with the mor-phological analysis of its first two words (Figure 1) and its associated syntactic tree (Figure 2). An swryA &gt; SbHt AbtdA X  mn mTlE Alsnp AljAryp EDwA gyr dA m fy mjls Al &gt; mn lmdp sntyn .
 Since the beginning of the year, Syria became a non-permanent member of the Security Council for a period of two years. The annotation scheme defines a set of segmentation principles to guide the segmen-tation process. Our scheme is inspired from an already existing manual elaborated within the Annodis 4 project that focused on the selective annotation of multilevel discourse structures of French documents following SDRT [Afantenos et al. 2012]. Annodis manual provided annotators with an intuitive introduction to discourse seg-ments, including the fact that discourse segments can be embedded in one another. Detailed instructions were provided describing how to handle segmentation for most of the cases that could naturally arise.

We have adapted this manual to take into account Arabic specificities. First, we have identified similar cases of segmentation, such as simple phrases, conditionals, correla-tive clauses, and subordinate phrases. Then, we have added Arabic-specific principles to handle cases such as al-masdar (also called the infinitive or the (de)verbal noun) constructions, /mbtd &gt; and /xbr clauses (also referred to as a copular construc-tion or equational sentence), coordinations, and adverbial clauses. In our manual, each segmentation principle is presented along with examples that illustrate main cases of segmentation as well as cases that do not need segmentation. In this section we give basic segmentation cases as well as main segmentation principles. 3.2.1. Basic Principles. EDUs are delimited by square brackets. Discourse cues are al-ways at the beginning of a segment, whereas punctuation marks that delimit segment frontiers always appear before the end of a segment. EDUs cannot overlap but they can be embedded in one another (double square brackets are not allowed), as in (5). [nAq Al &gt; stA* AlAmtHAn, [ Al*y &gt; jrAh AltlAmy* Al &gt; sbwE AlmADy,] w Aldrs AlHAly .] [The teacher explained the exam, [that was passed by the students last week,] and the current lesson.]
An EDU is basically a verbal (refer to (5)) or a nominal clause ( /mbtd &gt; and nor a subject from its verb. In addition, segment frontiers can never occur within a chunk or a named entity. [qSft TA rAt &gt; myrkyp mjmEAt mn Alkhwf.] [American aircrafts bombed a set of caves.] [kAnt AlTflp jmylp.] [The girl was beautiful.]  X  Al-masdar ( /AlmSdr) . They are segmented only in the indefinite accusative case ( /mnSwb) because this construction generally signals discourse relations.
For example, in (8), al-masdar /bHvA/looking for, explains why Ahmed went to the library. [Atjh &gt; Hmd &lt; lY Almktbp][ bHvA En ktAb AlryADyAt.] [Ahmed went to the library][looking for the mathematic book]
We do not segment in other cases (like / AlbHv/search) ,asin(9). [Astmr fy AlbHv Enh fy kl AlmktbAt.] [He is still searching for him in all libraries.]  X  Conditionals ( / rT) . They are always segmented, as in (10). [* &gt; A &gt; SbH AlTqs jmyl,][s &gt; xrj &gt; tnzh.] [If the weather is nice,] [ I X  X l go for a stroll,]  X  Correlatives ( /tlAzm) . They are always segmented, as in (11). [klmA &gt; TAlE Alktb,][klmA ttHsn vqAfty AlEAmp.] [The more I read books,] [the more I learn.]  X  Coordinations ( /rbT) . In Arabic, a coordination is introduced by markers such as /w/and, /f/and, /vm/then, / &gt; w/or...which are highly ambiguous. For in-stance, the conjunction /w/and can have six different senses [Khalifa et al. 2011]: (a) /w Alqsm that means testimony, (b) /w rb that means few or some-one, (c) /wAlAst } nAf that simply joins two unrelated sentences, (d) /w AlHAl that introduces a state (refer to (12)), (e) /w AlmEyp that means the accompaniment, and (f) /w AlETf meaning the conjunction of related words or sentences (refer to (13)). dxl Alwld AlfSl whw ybtsm .
 The child enters the classroom smiling Antht AlETlp wbd &gt; t AldrAsp.
 The holidays ended and the study began.
 Our treatment of coordination goes beyond discourse segmentation proposed in Khalifa et al. [2011] since we do not only deal with the marker /w/and but also with other markers. We segment coordination in four cases: (i) coordination of indepen-dent clauses, (ii) coordination of subordinating clauses, (iii) when two verbal phrases share the same object or the same subject, as in (14), and finally (iv) coordination of prepositional phrases that introduce events, as in (15). We do not segment in all the other cases, such as the conjunction between two objects of the same verb. [AstEAd Alr } ys Altwnsy EAfyth][wqAm bAstqbAl AlmwATnyn]. [The Tunisian President regained its health] [and has begun to receive the citizens.] [ &gt; Elnt AlHkwmp Edm mwAfqthA ElY mHDr Aljlsp] [lEdm twfr Al rwT Al &gt; zmp] [The government announced his refusal to open the session] [because of a lack of good conditions]  X  Subordinations ( /Slp) . They are always segmented. Relative clauses are intro-duced by the relative pronouns /Al*y/ and /Alty/ that correspond in English to the following pronouns: which, who, whom, and that (cf. (16)). Some conjunc-communication or a reported speech verb (cf. (17)). Other markers introduce tempo-ral and causal subordinations such as /qbl &gt; n/before-that, /l &gt; n  X /because, [w fy ktAb Altklyf [Al*y wjhh AlY AlHkwmp Aljdydp ,] tmt AtxA* kl AltrtybAt wAlAstEdAd AlkAml .] [In the book of reference [which has been sent to the new government,] all the arrange-ments have been taken.] [wqAl wzyr AldfAE] [An nHw stp ms&amp;wlyn Amyrkyyn wSlwA AlY AlblAd.] [The Minister of Defense said] [that six U.S. officials had arrived in the country.]  X  Appositions ( /bdl) . They are segmented in most cases. Appositions can be: Prepositional phrases (introduced by / &lt; lY/until, /En/about, /fY/in, /mn/from and /ElY/on) that appear at the end of a clause are not segmented. [An Aljnwd, [Hyv sykwnwn mslHyn,] ystTyEwn AldfAE En Anfshm.] [The soldiers, [once they are armed,] they will be able to defend themselves.]  X  Adverbials ( /Zrfyp) . In some cases, an adverbial can be an EDU. This concerns adverbials that introduce an event or a state, as in (19) where we have a Goal relation, and adverbials that are at the beginning of the sentence, as in (20) where we have a Frame relation. (21) gives an example of a temporal adverbial intro-duced by /AlbArHp ElY AlsAEp AlrAbEp wAlnSf msA X /yesterday at four-thirty in the afternoon, that does not indicate a cutting point. [rjEt msrEA &lt; lY Albyt][Hyv kAn AlmTr ythATl.] [I returned quickly at home][where was raining.] [EndmA twfy jdy,][ knt SgyrA jdA.] [When my grand-father died,][I was very young] [AjtmE Almjls AlbArHp ElY AlsAEp AlrAbEp wAlnSf msA X  X [lmnAq p h*A AlqAnwn] [The council met yesterday at four thirty in the afternoon][in order to discuss this law]  X  Other cases. We segment reported speech sentences between quotes (this case indi-cates the Attribution relation). We also segment modifiers that begin with possessive pronouns that detail a previously introduced entity (cf. (22)) since this case indi-cates the Entity-Elaboration relation. We do not segment in case of transliteration,
Latin characters, and abbreviations, as well as in case of demonstrative pronouns ( /h*A/this, /h*h/this and /h*An/these). [wqd  X  mt lnA SHnA SgyrA][fyh mqrwDAt hy  X  p.] [She gave us a small dish] [containing tasty Makrouts.] Two Arabic native speakers (undergraduate students in Arabic linguistics) were asked to doubly annotate a set of documents from our corpora following the guidelines given in the annotation scheme. First, annotators were trained on four EST documents (75 sentences) and four ATB documents (110 sentences). The training phase for ATB lasted longer compared to EST since ATB documents contain more complexity. This phase allowed for revising the annotation guidelines. Then, each annotator was asked to separately annotate five EST documents and two ATB documents which corre-sponded, respectively, to 71 and 63 sentences (documents used for training were discarded).

Agreements were computed by counting how often each annotator classified each token as being an EDU boundary. We got an average Cohen X  X  kappa of 0.83 for ATB and 0.89 for EST. We observed four cases of disagreement: (1) lexical ambiguities, especially for discourse markers that appear as clitics (cf. Section 2); (2) long sentences with more than five words (cf. (4) in Section 3.1); (3) the absence of punctuation marks, especially when clauses within a sentence are not separated with punctuations (cf. (14) and (15) in Section 3.2.2); and (4) al-masdar constructions (cf. (23) given next). Cases (2) and (3) were more frequent in ATB documents. [t kr &gt; Hmd jArth][ wfA X  lEmlhA.] [Ahmed thanks her neighbor][ by loyalty to her work.]
In (23), one annotator considered that the word /wfA X  is a cutting point because this word is al-masdar in an indefinite accusative case of the verb /wfY. Hence, the second EDU explains why Ahmed thanks his neighbor. The second annotator, on the other hand, cut at the word /lEmlhA X  because he considered the words ond EDU explains why Ahmed thanks his neighbor Wafa. Of course, this is an error because, in our example, the word /wfA X  is al-masdar construction and not a named entity.

Given the good inter-annotator agreement results, annotators were asked to build the gold standard by consensus by discussing main cases of disagreements, as dis-cussed earlier. Table I gives statistics about the data in the gold standard. The column WORD + PUNC indicates the number of tokens. We performed a supervised learning on the gold standard by using the Stanford classi-fier that is based on the Maximum Entropy model [Berger et al. 1996]. Each token can belong to one of the following three classes: Begin , if the token begins an EDU, End if it ends an EDU, or Inside , if a token is none of the preceding
To identify EDU boundaries, we used four groups of features: punctuation, lexical, morphological ,and syntactic features. A feature vector is associated to each token. The features were designed after analyzing the documents used for training as well as those used to compute inter-annotator agreements (which correspond to six ATB doc-uments (181 sentences) and nine EST documents (138 sentences)). Our set of features is given next. Punctuation marks used today in Arabic writings are those of the European writing system, but they do not necessarily have the same semantic functions. For example, the origin of the comma is to be found in the Arabic letter /w that represents the conjunction  X  X nd X  in the English language. The full stop is often used in Arabic to mark the end of a paragraph, whereas the comma, in addition to its coordination function, can also be used to announce the end of a sentence [Belguith et al. 2005]. In Arabic, the other punctuation marks like the parentheses, the exclamation point, the question mark, and the three points have the same values as those of European languages [Belguith 2009].

During the annotation campaign, we have identified two punctuation mark categories (henceforth PMC): strong that always identify the end or the beginning of a segment and weak that do not always indicate a boundary. We have three punctuation features: (1) TOKEN PUNC, the PMC of the token to be classified; (2) BEFORE PUNC, the PMC of the token that precedes the current token; and (3) AFTER PUNC, the PMC of the token that follows the current token. PMC can take three values: 0 if the token is not a punctuation mark, 1 if it is a strong indicator, and 2 if it is a weak indicator. We consider here both discourse cues such as /Hyv/where, /bynmA/while, important for the segmentation process. Indicators can be reporting verbs and propositional attitude verbs (e.g., /qAl/say, / &gt; Eln/announce, / &lt; Etqd/believe), noninflectional verbs (e.g., /Hy  X A/come-to, /H*Ar/beware and /Amyn/amen), adverbs (e.g., /bEd/after, /qbl/before, /mn AlmfrwD/normally, /fqT/ only), conjunctions (e.g., /HAlmA/the-moment-that and / TAlmA /so-often), and particles (e.g., /lm/not and /ln/never). Like punctuation marks, we have Two Lexical Cue Categories (LCC): strong and weak . Strong connectors are usually followed by a verb indicating the beginning of a segment. Some of these connectors are: /to, /l/for, /lkn/but, /lkn  X  a/but, / gyr &gt; n/nevertheless, /byd &gt; n/however, ways mark the beginning of a segment, such as the connector /w/and and the parti-cles /vm/then, /f/so-then, etc. For example, the particle can express a new clause, a conjunction between NPs, or it can be part of a word, as in /wr$p/atelier. We have four lexical features: (1) TOKEN LEX, the current token LCC; (2) BE-FORE LEX, the LCC of the token that precedes the current token; (3) AFTER LEX, the LCC of the token that follows the current token; and (4) TOKEN BeginLex, a Boolean feature that indicates whether the current token begins with an indicator or with a discourse cue. This last feature deals with agglutinations. LCC can take five values: 0 if the token is not a lexical cue, 1 if the token is a strong discourse cue, 2 if the token is a weak discourse cue, 3 if the token is a strong indicator, and 4 if the token is a weak indicator.

To handle both punctuation and lexical features, we have built a lexicon of segmen-tation indices where each entry is characterized by its type (a punctuation mark, a discourse cue, or an indicator), its nature (strong or weak), and a list of its possi-ble Parts-Of-Speech (POS). We have also indicated if the lexical entry is composed of other words, such as /Alqwl xlASp/in-summary and /bAxtSAr/briefly.
 If so, we have detailed each element of the composition. We have finally associated to each entry its English translation and an example of its usage in context. Our lexicon contains 174 entries: eleven punctuation marks (four strong: the exclamation mark, the question mark, the colon, and the semi-colon, as well as six weak: the full stop, the comma, quotes, parenthesis, brackets, braces, and underscores) and 163 lexical cues (83 discourse cues and 80 indicators) among which 76.4% are strong and 23.6% are weak. Our aim is to identify what kind of morphological analysis is suitable for Arabic dis-course segmentation, that is, shallow versus extensive. To this end, we propose to use two contextless parsers that provide different morphological information: Alkhalil [Boudlal et al. 2011], a shallow parser, and the Standard Arabic Morphological Ana-lyzer SAMA version 3.1 [Maamouri et al. 2010a], an extensive analyzer. We have thus designed two sets of morphological features, one for each parser output.
Alkhalil gives each token a nonordered list of all its possible forms (by default, the first form of this list is chosen) [Boudlal et al. 2011]. More precisely, it generates the stem, its grammatical category, and its possible roots, where each root is associated to its corresponding patterns, proclitics, and enclitics. Alkhalil does not take into account the context nor punctuation marks. In addition, it does not provide affixes information and its database does not contain information about the closed nouns except their fully diacritized form and their Arabic class name, along with the allowed proclitics and enclitics. For each token, we have six Alkhalil features: (1) STEM, the token stem; (2) POS, the token parts-of-speech; (3) CATEGORY, the token grammatical category; (4) HAS PREFIX and (5) HAS SUFFIX that, respectively, indicate if the token has a prefix or a suffix; and (6) PATTERN, the token pattern. All the features are encoded in strings (in Arabic script).

SAMA 3.1 is a new version of the Buckwalter Arabic Morphological Analyzer (BAMA) 2.0. SAMA associates to each Arabic word token all its corresponding  X  X refix-stem-suffix X  segmentations. In addition, it lists all known/possible annotation for each solution, with assignment of all diacritic marks, morpheme boundaries (sepa-rating clitics and inflectional morphemes from stems), all Parts-Of-Speech (POS) la-bels, and glosses for each morpheme segment. We have designed 10 SAMA features: (1) LEMMA, the token lemma; (2) POS, the token POS; (3) VOCALIZATION, the to-ken vocalization; (4) PREFIX; (5) SUFFIX; and (6) ROOT that, respectively, give the prefix, the suffix, and the root of the token; (7) PREFIX INFO; (8) SUFFIX INFO; and (9) ROOT INF that, respectively, give the information of the prefix, the suffix, and the root; and finally (10) GLOSS, that indicates the token gloss. All these features are generated by SAMA in transliterated form. To evaluate the added value of syntactic features to discourse segmentation of Arabic texts (cf. Introduction), we propose to take into account chunks. To obtain them, we chose to rely on manual annotations instead of using a shallow syntactic parser such as AMIRA [Diab 2009]. Indeed, our aim is to test the upper bound for shallow syntax features. If we do not find chunks useful, we do not need to use a parser to predict them. Syntactic features concern only the ATB corpus (we recall that EST documents do not contain any manual annotations (cf. Section 3.1)).

We have only one feature that specifies whether the token to be classified is at the beginning, at the end, or in the middle of a chunk. In order to measure the impact of morphological and syntactic features on the performance of our segmenter, we designed three classifiers: (C1) that uses punctu-ation, lexical; and Alkhalil features; (C2) that relies on punctuation, lexical and SAMA features; and (C3) that uses punctuation, lexical, SAMA features; and syntactic fea-tures. Configurations (C1) and (C2) were run on EST and ATB while (C3) concerns only ATB. Punctuation features are the same for all the three configurations. Lexi-cal features are obtained by checking whether the current token lemma (as given by SAMA) or the current token stem (as given by Alkhalil) is an entry in our lexicon. Our first experiments showed that best results are achieved when using SAMA lemmati-zation. We have thus decided to use the token lemma as given by SAMA.

For each corpus, we have performed a tenfold cross-validation where 10% of the corpus was left for test. For all the experiments, we have used both character n-grams and word n-grams as features. Best results were achieved with n few EDU boundaries, our dataset is skewed (see Table I, Section 3.3 for an overview of our data characteristics). But we did not observe any problem related to the class imbalance in the training set with the parameters we used when building the classifier.
We recall that our aim is to automatically identify a segment. This means that our system has to achieve good performances on:  X  token boundary detection, which is the ability of the system to classify each token into the correct class ( Begin , End ,and Inside );  X  EDU recognition, which is the ability of the system to identify an EDU. Here, only the Begin and the End class matter. In addition, the system has to generate a bal-anced number of instances of each class in order to ensure a coherent bracketing. In case of an ill-formed EDU, a specific post-processing rule is applied.

We present next our results on each of these two tasks. We end this section by giving the learning curve of our experiments. 5.1.1. Analyzing the Impact of Punctuation, Lexical and Morphological Features. Unlike Tofiloski et al. [2009] and Soricut and Marcu [2003] that only measure the score of their segmenter on boundaries inside sentences (to avoid artificially boosting the per-formance), the evaluation of our system takes into account sentence boundaries since end-of-sentence or end-of-paragraph boundaries are not given automatically but are predicted by our segmenter. Table II gives (C1) and (C2) overall performances in terms of precision, recall, F-score, and accuracy, averaged over the three classes Begin , End , and Inside . Best performances are marked in boldface. We first start with punctu-ation features to which several features are progressively added; this is marked by the  X  +  X  sign in the table. We have also compared the performance of each classifier against two baselines: (B1) that only uses the current token punctuation category (TOKEN PUNC); and (B2) that uses both the current token punctuation and lexical category (i.e., TOKEN PUNC and TOKEN LEX).

Our first baseline (B1), that tests if the current token is a punctuation mark (from the strong or the weak type) or not, performs badly for both corpora. Taking into ac-count both right and left context (by adding BEFORE PUNC and AFTER PUNC fea-tures) improves the F-score by, respectively, 7.4% for EST and 3.7% for ATB. However, punctuation features alone are not sufficient to achieve good results for both corpora for three main reasons: the absence of regular punctuation marks, especially for ATB, the high frequency of weak punctuation marks (cf. (22)), and the presence of named entities. [kAnt rAfEp ydhA AlT  X wylp, fAtHp fmhA AlwAsE,] [She was raising her long arms, opening her wide mouth,]
Compared to (B1), (B2) obtained better performances. However, the results are sim-ilar to those obtained when using (B1) + BEFORE PUNC + AFTER PUNC for EST, which shows that segmentation in EST, is less sensitive to the surrounding punctua-tions of a given token than ATB.
 When adding lexical features, EST results remained stable while at the same time ATB results (in terms of accuracy) improved significantly over (B1) + AFTER PUNC by more than 30%. We think that the absence of improvement for EST can be explained by the fact that EST is characterized by regular punctuation marks, which seems to be adequate to reach an accuracy of 0.686. The good results obtained for ATB show that our lexicon is a useful resource for discourse analysis. In addition, we observe that adding contextual lexical features, namely the lexical type (strong or weak) of the left (BEFORE LEX) and the right token (AFTER LEX) improves ATB results. Indeed, these features were able to disambiguate cases like in (23) where the adverb /baEud/after was identified as a verb /baEod/to-move-away by SAMA. However, lexical features cannot deal with other types of ambiguities, like named entities (cf. error analysis at the end of this section). [ &lt; kl Alwld tfAHp, bEd gslhA] [The child ate the apple, after he has washed it]
Concerning morphological features, the (C2) configuration yields better results com-pared to (C1) mainly because the SAMA parser gives more morphological information than that given by Alkhalil. Indeed, in addition to Alkhalil X  X  outputs (stem, POS, pre-fix, and suffix), SAMA provides information about the token root (ROOT INFO), the token prefix (PRFFIX INFO), the token suffix (SUFFIX INFO), as well as the token gloss (GLOSS). Our experiments show that the best score is achieved when adding information of the root, the prefix, and the suffix. However, gloss information does not seem useful for discourse segmentation, since adding it has degraded the average F-score for both corpora. We get similar observations for the pattern feature (PATTERN) in the (C1) configuration since this feature has only a minor impact on the results, especially for EST.

Overall, both corpora achieved good F-scores that are comparable to human re-sults (cf. Section 3.3). An interesting observation comes from punctuation features, in that even if they perform badly when they are used alone, removing them from the features vector has a negative impact on the results for both the two classifiers. For instance, we get an F-score of 0.840 for EST and 0.837 for ATB when running the clas-sifier with SAMA features. Another interesting point is that morphological features alone are not sufficient. Indeed, we get an F-score of 0.713 for ATB and 0.772 for EST when running (C1) and (C2) without punctuation and lexical features. Moreover, when comparing (C1) and (C2), only the Begin class is biased (the F-score decreases from 0.899 to 0.540) while the results of the End and the Inside classes remain stable. Fi-nally, the overall evaluation on EST documents gets similar results compared to those obtained for ATB documents. As expected, we can conclude that discourse segmenta-tion does not rely only on punctuation marks and that text length has no impact on the segmentation. Our results thus demonstrate that our first intuition is wrong when stipulating that segmenting EST documents will be simpler and will achieve better re-sults compared to other corpora. This shows that combining punctuation, lexical, and extensive morphological features is necessary to achieve good segmentation results.
We finally give in Table III the results of our best configuration (C2) per class a. For both corpora, the End class gets lower results compared to the Inside and the Begin class (in terms of F-score).

The error analysis of the outputs of classifier (C2) on the ATB documents shows that our classifier successfully distinguishes between the Begin and the End classes. In addition, the prediction of embedded EDUs is good in terms of precision (about 0.92, 0.90, and 0.70 for, respectively, the Inside ,the Begin ,andthe End class). As we can see in the confusion matrix in Table IV, main confusions (in bold font) are between the End class and the Inside class.

The analysis of these confusions shows that most errors come from the presence of named entities and from weak punctuation marks. Examples (24.1) and (24.2) show, respectively, a gold-standard annotation and the output of our classifier. Our system predicts that the word /w/and is a cutting point because the word / &gt; krm/Akram has been analysed as the verb / &gt; krm/to honor, which is, of course, wrong since this word is a named entity. [HSl xAld w &gt; krm ElY jA zp.] [Khalid and Akram obtained an award.] [HSl xAld ][w &gt; krm ElY jA zp.] [Khalid ][and Akram obtained an award.] Similarly, examples (25.1) and (25.2) show that our classifier fails to deal with weak punctuation marks. In (25.2) our classifier predicts an EDU boundary after the comma. [ln &gt; Ewd l rH Aldrs, mrp &gt; xrY.] [I won X  X  explain this lesson, again.] [ln &gt; Ewd l rH Aldrs,][ mrp &gt; xrY.] [I won X  X  explain this lesson,][ again.] 5.1.2. Analyzing the Impact of Syntactic Features . We have finally assessed the reliability of syntactic features on discourse segmentation of ATB documents (refer to Table V) by adding chunk information to the features vector that achieved best performance in (C2). We observe that adding chunks does not really boost the results. The only improvements (in bold font in Table V) concern the recall of the Inside class ( and the precision of the End class ( + 0.011). The overall F-score of the (C3) classifier is 0.847, which corresponds to a marginal improvement of 0.010 compared to (C2). Similar observations go for the accuracy measure. We can thus conclude that shallow syntactic features are not useful for Arabic discourse segmentation. An EDU is correctly recognized if, for each begin bracket, there is a corresponding end bracket. Otherwise, we have to perform a post-processing to ensure correct bracket-ing. Since the End class is the one that performs badly (cf. Table III), we have decided to correct only end bracketing. Post-processing consists in adding an end bracket for each opening bracket that has no corresponding end. Table VI presents our results on both corpora in terms of Accuracy (Acc), before and after post-processing. For this ex-periment, we have run the classifier (C2) with all the features described in Table II except for the SAMA feature GLOSS (this corresponds to the penultimate line in Table II).

As expected, we observe that post-processing boosts the results for both ATB and EST with more than 0.39 for EST and 0.13 for ATB. The results are more impressive for EST (characterized by regular punctuation marks) because using punc-tuation features biased the EDUs X  recognition results. Concerning embedded EDUs (present in around 11% in the EST corpus and 8% in ATB corpus), we have also ob-served the same tendencies. The results are, however, lower compared to the ones obtained for nonembedded EDUs. This may be explained by the low frequency of em-bedded EDUs in each test (around 8 for the EST test and 37 for the ATB test). Finally, we have observed that the performance of our segmenter is sensitive to the length of EDUs in terms of the number of tokens. Indeed, when this length is less than or equal to 3, we get an accuracy of 1. Finally, in order to analyze how the learning procedure can be influenced by the num-ber of annotated ATB documents, we have computed a learning curve by dividing our corpus into 10 different learning sets. For each set, we performed a tenfold cross-validation, using the features set of the classifier (C2). The learning curve is shown in Figure 3. As we can see, the curve grows regularly between 0 and 5 000 tokens (that is, 10 documents, i.e., around 255 sentences) while it seems to plateau between 5 000 and 25 000 tokens (that is, 50 documents). We can thus conclude that the addi-tion of more than 10 ATB documents will only slightly increase the performance of the segmenter. Several works have been undertaken on automatic discourse segmentation for dif-ferent languages by using rule-based or learning techniques. In the first approach, handcrafted rules identify potential cutting points relying on a combination of surface cues (punctuation and lexical markers) and syntactic patterns that encode syntactic categories and parts-of-speech. In the English language, let us cite Le Thanh et al. [2004] that reported an F-measure of 86.9% when evaluating their segmenter against the boundaries in the RST Discourse Treebank (RST-DT) [Carlson et al. 2003]. Tofiloski et al. [2009] built the SLSeg system on top of an automatic syntactic parser and showed that their approach outperforms those of other approaches by achieving an F-score of 80 X 85% in segment boundary. Symbolic approaches have also been used in other languages like German [L  X  ungen et al. 2006], Spanish [Da Cunha et al. 2010], Brazilian Portuguese [Pardo et al. 2004], and Japanese [Sumita et al. 1992]. Most of these systems used the RST framework.

Learning approaches, on the other hand, usually exploit lexical and syntactic fea-tures to classify each token in a sentence as being an EDU boundary or not. Within the RST framework, Soricut and Marcu [2003] described how to split sentences into EDUs on top of SPADE, a sentence-level discourse parser. They made an extensive use of the syntactic tree and each token is modeled by taking into account syntactic dominance features (the token itself, its parent, and its siblings). Sporleder and Lapata [2005] used the RST-DT corpus and labeled each token with four different tags: B-NUC and B-SAT for nucleus, and satellite-initial tokens, and I-NUC and I-SAT for nonini-tial tokens. For the segmentation task, they performed a binary classification, where each span (and not tokens) can have a Begin or an Inside label. Span boundaries are given by the gold standard. Using this method, they showed that employing lexical and low-level syntactic information (such as parts-of-speech and syntactic chunks) is sufficient to achieve good performance. Their approach is comparable to Soricut and Marcu [2003]. Fisher and Roark [2007] proposed various improvements of SPADE by using finite-state analysis. Subba and Di Eugenio [2007] used a neural network (mul-tilayer perceptron) while Hernault et al. [2010] used conditional random fields to train a discourse segmenter on the RST-DT corpus. For other languages, we cite Charoensuk et al. [2005] who proposed a hybrid approach for Thai using a decision-tree learning system and some heuristic rules.

All previously cited learning approaches do not deal with embedded EDUs and hence boundary detection is reduced to a binary classification task. However, nested EDUs can be frequent, as observed in the ANNODIS corpus [Afantenos et al. 2012], a discourse-level annotated corpus for French following SDRT principles. In this cor-pus, the proportion of embedded EDUs was about 10%. To predict nested structures, Afantenos et al. [2010] performed a four-way classification using the Maximum En-tropy Model. Each token can be either a  X  X eft X  or a  X  X ight X  boundary of an EDU,  X  X oth X  if an EDU contains only one token, or  X  X one X  if the token is in the middle of a segment. The segmenter made an extensive use of lexical and syntactic features and got an F-measure of 58%. A rule-based post-processing step increased the results up to 73%.

Current state-of-the art approaches in discourse segmentation make an extensive use of syntactic information going from chunking to deep syntactic parsing, including dependencies. However, some languages lack reliable deep syntactic parsers. Sporleder and Lapata [2005] have already shown that good results can be reached only by chunk-ing and that their approach can be portable to languages for which deep parsers are not available. We wanted here to go further by analysing to what extent EDU segmen-tation is feasible without using shallow syntactic information. We adopt a multiclass classification approach as done by Afantenos et al. [2012]. We use a combination of state-of-the-art features to predict nesting. To the best of our knowledge, the use of these features for Arabic discourse segmentation is novel. Most research on Arabic NLP resource generation has focused on morphology [Boudlal et al. 2011], lexical semantics [Diab et al. 2008], and syntactic analysis [Maamouri et al. 2010b]. There is also a huge literature on Arabic NLP including shallow and deep syntactic parsing [Ali Mohammed and Omar 2011; Diab et al. 2007, 2009; Green and Manning 2010; Marton et al. 2013; Nivre 2007], morphology analysis [Eskander et al. 2013; Gridach and Chenfour 2011; Sawalha et al. 2013], question answering [Bebajiba et al. 2010; Trigui et al. 2012], automatic translation [Carpuat et al. 2012; Sadat and Mohamed 2013], opinion mining and sentiment analysis [Abdul-Mageed and Diab 2012; Abu-Jbara et al. 2013; Mourad and Darwish 2013], and named entity recognition [Aboaoga and Ab-Aziz 2013; Boujelben et al. 2013; Darwish 2013]. On the discourse level, however, little work has been done. Among them, let us cite Belguith et al. [2005] that proposed a rule-based approach to segment nonvoweled Arabic texts into sentences. The approach consists of a contextual analysis of the punctuation marks, the coordination conjunctions, and a list of particles considered as boundaries between sentences. The authors determined 183 rules to segment texts into paragraphs and sentences. These rules were implemented in the STAr system, a tokenizer based on the proposed approach. Touir et al. [2008] proposed a rule-based approach to segment Arabic texts using connectors without relying on punctuation marks. Segmentation principles did not follow any discourse theory. They performed an empirical study of sentence and clause connectors and introduced the notion of ac-tive connectors, which indicate the beginning or the end of a segment and the notion of passive connectors that do not imply any cutting point. Passive connectors are useful only when they co-occur with active connectors since this might imply the beginning or the end of a segment. Khalifa et al. [2011] proposed a learning approach to seg-ment Arabic texts by only exploiting the rhetorical functions of the connector /w/and. Among the six rhetorical types of this connector (cf. Section 3.2.2), two classes have been defined:  X  X asl X , which is a good indicator to begin a segment, and  X  X asl X , which has no effect on segmentation. A set of 22 syntactic and semantic features was then used in order to automatically classify each instance of the connector /w/and into these two classes. The authors reported that their results outperform those of Touir et al. [2008] when considering the connector /w/and. Finally, Keskes et al. [2012] used a rule-based approach to segment Arabic texts into clauses. They proposed three segmentation principles: (p1) using only punctuation marks, (p2) relying only on lexi-cal cues, and (p3) using both punctuation marks and lexical cues. Better results were achieved by the third principle. The authors reported that major errors are due to lexical ambiguities of discourse cues.

The closest research to ours is the one done by Al-Saif and Markert [2010, 2011] that, respectively, described how to recognize discourse connectives and how to au-tomatically identify explicitly marked discourse relations within the Penn Discourse Treebank (PDTB) framework [Prasad et al. 2008]. Discourse segmentation in PDTB tends to larger units than EDUs since arguments can be as small as a nominaliza-tion or as large as several sentences. Segmentation in PDTB requires three main steps: (1) identifying discourse connectives, (2) identifying the locations of Arg1 and Arg2, and (3) labeling their extent. Arg1 can be located within the same sentence as the connective or in some previous sentences of the connective. When Arg1 and Arg2 are in the same sentence, we can have several cases: Arg1 coming before Arg2 as in (25), Arg1 coming after Arg2 as in (26), and Arg2 embedded within Arg1 as in (5) (see Section 3.2.2). [tErDt ADrAr] arg1 [ntyjp 0lASTdAm] arg2 [Suffered damages] arg1 [ as a result of the collision.] arg2 [fy Hyn AnhA HAml, ] arg2 [ &lt; ynAs lA t &gt; x* AlTA rp.] [While she is pregnant,] arg2 [Ines did not take the plane.]
In case of embedding (subordinating connectives, coordinating connectives and dis-course adverbials), the full syntactic parse tree of the sentence is needed in order to extract the Arg1 and Arg2 spans. Al-Saif and Markert [2011] have described only the step (1) given before and did not treat embedded EDUs. In addition, they did not give any indication of how the steps (2) and (3) given earlier can be automatically performed for Arabic texts. The field of Arabic NLP is still very vacant at the layer of discourse. Our article pro-posed the first corpus and the first approach that tackle discourse segmentation in terms of elementary discourse units for Arabic texts. A subset of this corpus can be up-loaded at the following address: https://sites.google.com/site/iskandarkeskes85/corpus. Our main contributions are the following.  X  We given an Arabic corpus that includes a discourse-level annotation. Indeed, the only existing work towards producing an Arabic discourse Treebank is the work Al-Saif and Markert [2011] that extends the Penn Discourse Treebank (PDTB) to
MSA. In this corpus, annotated elements are the discourse connectives and their two arguments.  X  We provide a multiclass supervised learning approach that predicts EDU bound-aries and not only discourse connectives, as in Al-Saif and Markert [2011]. Our approach uses a rich lexicon (with more than 174 connectives) and relies on a com-bination of punctuation as well as morphological and lexical features. Our results show that EST segmentation is very sensitive to punctuation features, contrary to
ATB, where punctuations are not widely used. In addition, contextual lexical fea-tures have a strong effect on the results, especially for ATB, which shows that ATB documents tend to use more complex words than for EST. For both corpora, we have shown that extensive morphological features are more suitable than shallow mor-phological analysis, since best scores were obtained when adding information of the root, the prefix, and the suffix. Finally, we have shown that Arabic discourse segmen-tation is feasible on both corpora without any use of shallow syntactic information (chunks).  X  We discern EDU frontiers even in the case of absence of discourse markers (that is, in the case of implicit relations) that represent 25% of cases in our data. Al-Saif and Markert [2011] have treated only the cases of explicit markers.
 For the moment, we have run our experiments by considering Alkhalil features and SAMA features separately. It would be interesting in the future to run our classifiers by combining features from both sets. Another improvement could be to use a context-aware parser such as MADA [Habash et al. 2009]. Discourse segmentation is the first step towards discourse analysis. An annotation of ATB documents with coherent rela-tions within the SDRT framework is currently underway.

