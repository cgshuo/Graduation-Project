 It is commonly agreed that accounts receivable (AR) can be a source of financial difficulty for firms when they are not efficiently managed and are unde rperforming. Experience across multiple industries shows that effective management of AR and overall financial performance of firms are positively correlated. In this paper we address the pr oblem of reducing outstanding receivables through improvements in the collections strategy. Specifically, we demonstrate how s upervised learning can be used to build models for predicting the payment outcomes of newly-created invoices, thus enabling customized collection actions tailored for each invoice or customer. Our models can predict with high accuracy if an invoice will be paid on time or not and can provide estimates of the magnitude of the delay. We illustrate our techniques in the context of real-world transaction data from multiple firms. Finally, simulation results show that our approach can reduce collection time up to a factor of four compared to a baseline that is not model-driven. G.3 [ Probability and Statistics] : correlation and regression analysis, experimental design. I.3 [ Simulation and Modeling] : Applications . J.1 [ Administrative Data Processing] : Business, Financial . Design, Economics, Experi mentation, Performance. Accounts Receivable, Payment Co llection, Order to Cash, Invoice to Cash, Predictive Modeling, Knowledge Discovery. The Order-to-Cash (O2C) process describes a composite business process that comprises the necessary steps to fulfill an order for a good or service, from order entry to payment receipt. While the number and nature of such step s may vary depending on the type and size of the firm, most O2C processes follow a similar high-level workflow as illustrated in Figure 1. In this paper we concentrate on the invoice-to-cash process, i.e. two highlighted steps of Figure 1. It constitutes the core of the collections activities and deal with account prioritization, customer contact activities, collection calls, escalation, and resolution of disputes. Most often, these steps are processed manually and hence, slow, expensive, and inaccurate, despite their importance to the business. Moreover, the collection actions are typically generic and do not take into account customer specifics, e.g., all customers are contacted at fixed intervals, even though some have always paid on tim e; while it is generally true that the later a customer is c ontacted the less likely the invoices will get paid on time, repeated contacting of  X  X ood X  customers may lead to lower customer satisfaction. Such inefficiencies in current practices lead to significant delays in AR collections or even to failure to collect before write-off deadlines. The effectiveness of AR collections can be significantly improved through better management of the collection steps. For instance, taking preemptive actions on invoices that are likely to become delinquent can drive down the coll ection time. Furthermore, by prioritizing delinquent invoices for actions based on the expected time of payment, one can optimize the use of collections resources. In this paper we focus on the task of predicting the payment outcomes of newly-created invoices, thus enabling more effective collections management. There are many metrics used to measure the collection effectiveness of a firm [9]. For instance, Average Days Delinquent measures the averag e time from invoice due date to the paid date, i.e., the average days invoices are overdue. A related metric, Days Sales Ou tstanding (DSO) expresses the average time in days that receivables are outstanding, computed as: Most commonly used metrics are functions of the time taken to collect on invoices. If one can predict the outcome of an invoice, one can use this information to dr ive the collection process so as to improve on a desired collection metric. For instance, if one can identify invoices that are likely to be delinquent at the time of creation, one can attempt to reduce the time to collection by pro-actively trying to collect on thes e invoices. Typically, collections departments wait until invoices are delinquent to start taking collection actions, such as sendi ng out reminders or making phone calls. However, one could signifi cantly benefit from preemptively contacting potentially delinquent accounts. Furthermore, even after an invoice is past due, it is beneficial to know which invoices are likely to be paid sooner than later, if no action is taken. Given that resources fo r collections activities are often limited, one may choose to prioritize invoices based on estimating how late a payment will be; e.g., it makes more business sense to contact a customer who is likely to pay 90 days late, than one who would pay within 30 days without contact. We formulate the invoice outcome pr ediction task as a supervised learning problem: given instances of past invoices and their outcomes, build a model that can predict when a newly-created invoice will be paid, if no action is taken. In particular, each instance is classified into one of five classes: on time, 1-30 days late, 31-60 days late, 61-90 days late, and more than 90 days late (or 90+ days late). These five classes are commonly used in the payment collection business, where each class corresponds to a customized collection strategy. Data instances correspond to features representing invoices, which are described in detail below. This formulation corresponds to using the Average Days Delinquent as the collections perfo rmance metric. However, if the objective is to maximize a different performance metric, that can be done by using an alternative target (class) variable that is correlated with this metric. For example, one may use the Collection Effectiveness Index (CEI), which compares what was collected in a given period to what was available to collect, defined as: In this case, invoices can be labeled based on the actual amounts collected in a specified time period. The analysis in this paper is done on invoice records for four firms, including two fortune 500 comp anies. Three of these firms are competitive in the markets for supplying high-tech equipments for telecommunication, networking, and IT services. The fourth firm specializes in online advertising placement and scheduling services. The summary of invoice records is presented in Table 1. These data sets cover invoices created from March 2004 to February 2005. When learning from these data sets, we differentiate invoices of firs t time customers from those of returning customers, because their payment behaviors are very different, moreover, there is a dditional historical information available for invoices of returning customers. In this paper, we use the term first-time invoices to refer to the invoices from first-time customers. Likewise, retu rning invoices are invoices from returning customers. Table 1 shows that the majority of invoices of three firms (A, B and D) are returning invoices while C has the majority of its invoices billed to first time customers. Our input data consists of a set of invoices at the end of the collections cycle. Each invoice is described by 54 features that capture information such as or der details, terms and conditions, sales representative information, etc. We begin by eliminating features that are specific to an invoice, such as invoice IDs. We then remove leakage variables  X  features that provide information about the class label that one would not have at the time of creation of an invoice, such as invoice closing date and number of contacts. Finally, we filter out features that have too many missing values or have unique values , such as invoice types. This leaves us with only three meani ngful features, named as invoice-level features that represent an invoice (see Table 2): invoice base amount, payment terms, and invoice category. Given the number of days delinquent, computed ba sed on invoice close date and due date, each invoice/instance is labeled with one of the five class labels: on time, 1-30 days late, 31-60 days late, 61-90 days late, and more than 90 days late (or 90+ days late). The three invoice-level features are insufficient for effective modeling. However, a large numbe r of invoices are for returning customers, which is especially true for firms with large accounts such as A and B, where more than 80% of the invoices are for returning customers. Based on this observation, we develop additional features that (a) capture the transaction history of a customer, e.g., the percentage of invoices paid late in the past; and (b) reflect the current status of the customer's accounts, e.g. the sum of base amounts of all invoices currently outstanding. Table 2 lists all these historical and aggregate features that are generated (features numbered 4-17). These features provide a significant amount of information that can be leveraged for predicting the outcome on a new invoice. However, such information is not available for first-time customers, or for the first invoices of customers. Ther efore, in this paper we focus primarily on building predictive models for the invoices of returning customers. However, fo r completeness, in Section 3.3 we also discuss the task of m odeling on invoices without history. The task we formulated is a typical supervised classification problem: given a set of data inst ances (invoices) represented by a set of features and class labels, build a model that can classify a new instance into one of five ta rget classes  X  on time, 1-30 days late, 31-60 days late, 61-90 days late, and more than 90 (or 90+) days late. In the following secti ons we will discuss the different settings for invoice prediction we studied. First, we compared the following commonly used classification algorithms for our domain  X  C4.5 decision tree induction [6], Na X ve Bayes [4], Logistic Re gression [3] and Boosting decision stumps [7]. In addition, we al so experimented with the PART algorithm [2], which is a rule learner that uses a separate-and-conquer approach. It builds a rule, removes the instances that it covers, and repeats this process recursively on the remaining instances until there are none le ft. To produce each rule, PART builds a partial pruned decision tree in a manner similar to C4.5, and the leaf with the largest covera ge is made into the rule while the rest of the tree is discarded. Experiments, here and in other sections, were run using 10-fold cross validation, and classification accuracy is reported as the performance metric. Where relevant, we report the accuracy in predicting a specific class, e.g., 90+ days late. As a point of reference, we also report the accuracy of the majority-class predictor, i.e., a classifier that always predicts the class most represented in the training data. We refer to this as the Baseline. Table 3 summarizes our results on the comparison of different learning algorithms. Both PART and C4.5 significantly outperform the competing methods. In addition to learning accurate classifiers, PART and C4.5 are good choices for our domain, because they perform well at handling missing values, nominal values, and produce compre hensible models in the form of human-readable decision lists. Since C4.5 produces marginally better models than PART for 3 of the 4 firms, we use it as the base algorithm for the remainder of this paper. 
Firm Base In Section 2.1 we describe the construction of historical and aggregate features. We conjecture that these features provide a significant amount of information beyond the simple invoice-level features. We validate this hypothesis by comparing models built using only invoice-level features to models built using both invoice and historical features. Experiments were conducted using only data for invoices of returni ng customers, because historical features are only meaningf ul for these invoices. The prediction results are summarized in Table 4. We observe that even with just the three i nvoice-level features we can predict the payment outcome of an invoice more accurately than predicting the majority class. However, this improvement is marginal in some cases, as in B and D, where the difference in accuracy is less than 1 percent. Furthermore, incorporating historical features into the data gives rise to a substantial increase in prediction accuracies for all four firms. We observe improvements ranging from 9 (B) to 27 percent (A). Overall, the model accuracies are significantly better than the baseline -prior probability of majority class. As such, using these predictions to drive workflow of collections is likely to perform a lot better than current practices that treat all invoices equally. We demonstrate this through simulation expe riments in Section 4. Firm Feature Category Accuracy Baseline Accuracy A Invoice+History 87.51 60.22 B C Invoice+History 66.21 46.10 
D Invoice+History 71.34 57.82 In accounts receivable collection, the main reason for categorizing the payment behavior of invoices is to be able to customize monitoring and collection activities according to their past due behavior. One of the critical measurements of collection performance is Average Days Delinquent. As such, we have focused our modeling on predicting the expected time in payment. However, as discussed in S ection 2, there are other Key Performance Indicators (KPIs) that are often used to measure collection success. For instance, se veral of our firms have a KPI objective to keep the number of invoices that are more than 90 days overdue below a specified limit. These invoices are potentially bad debt accounts, whic h require special decisions and a set of actions to collect paymen ts for these accounts. If this set of invoices can be identified at an early stage of the lifecycle of the invoices, one can preemptively deal with potentially bad debt accounts before they turn into debt or even get written off. To attain this objective we build models that are focused on being able to predict accurately for the 90+ class. By default, classification algorithms assume that all classes are equally important. However, the penalty for predicting an invoice will be paid on time when in fact it will more than 90 days overdue, is usually higher than the reverse. This task is further compounded by the fact that these high-risk invoices are under-represented in the data. This can be seen in th e distribution of invoices for Firm A in Figure 2, where the total number of 90+ invoices is only 3% of the entire data set. The data for the three other firms show a similar imbalance in the data. To address the different misclassifications costs, we use instance re-weighting, which is a comm on approach in cost-sensitive learning. As input, we provide a misclassification cost matrix, such as the one shown in the second column of Table 5. Each row and each column corresponds to target classes. Each cell corresponds to the cost of misclassifying the row class as the column class. The diagonal corres ponds to correct classifications and hence are all zero. By default, all costs, other than the diagonal, are set to one. Instan ces belonging to particular class are re-weighted proportionally to the sum of its misclassification costs. Table 5 reports our results on the four firms for one such cost matrix. We present both the overall accuracy, as well the true positive (TP) rate of just the 90+ class. The results show that instance re-weighting is a very effective way of dealing with the high class imbalance in this data  X  we can improve more than 40% of the TP rate of the 90+ class without much loss to overall accuracy as is seen for Firm A. Table 5. Cost sensitive prediction accuracy for four firms. To further explore this, we ra n additional experiments using different costs matrices. The results for Firm A, for three different cost matrices are summarized in Table 6. The results show that by increasing the cost of misclassifying the 90+ class, we can get the learning algorithm to focus on building classifiers that are more accurate at predicting this class. In fact, with high enough misclassification cost s the classifier can learn to predict the 90+ class with more than 89% accuracy. As expected, this comes at a trade-off on overall classification accuracy. This trade-off can be balanced based on the desired performance objectives. The cost matrix can be specified based on the actual costs associated with the incorrect pred iction in practice. For instance, if a 90+ invoice is incorrectly la beled as on time invoice, then the associated cost includes the interest loss because of potential customer debt. The loss due to mi sclassification need not always be quantified by monetary value. For instance, if an on-time instance is misclassified as a 90+ instance, it is likely that the customer will be contacted even before the due date. Apart, from the wasted cost of contacting a customer who is going to pay on time, there is the additional ri sk of damaging the customer relationship. The trade-offs betw een expected loss in revenue and customer satisfaction are quite complex and vary from firm to firm. In our current modeling, we only concern ourselves with the misclassification of 90+ instan ces into other class labels. However, the same methodology can be used to accommodate other cost-structures that may represent alternative KPI objectives. As discussed in Section 2.1 we have focused primarily on invoices of returning customers, because of the richness of historical data that is not pres ent in the invoice-level features. However, in some cases it may be possible to get additional information on the customers themselves, which may make it possible to even build models for invoices of first-time customers. Invoice payment risk, to a large extent, may depend on the customer X  X  financial capability and willingness to pay. Such factors may be influenced by customer credit worthiness, organizational profile, business market profile, etc. These factors are captured in a set of customer features, such as credit limit, segment, and region. Fo r Firm A, such customer-level attributes are actually collected and are readily available for modeling. We selected 9 such attributes after going through the same feature selection mechanism descri bed in Section 2.1. For Firm A, we now have three sets of features, namely invoice-level, historical and customer-lev el features. We run experiments as before, on four combinations of these feature sets, on three versions of the Firm A data  X  returning invoices, first-time invoice and all invoices. These results are summarized in Table 7. Results show that having custom er features boosts prediction accuracy from 70% to 79% for first-time invoices. Though this accuracy is not as high as when using historical features; it does demonstrate that the customer-level features provide some information regarding the collectibility of invoices. We further investigate the eff ectiveness of having customer features for invoices of returning cu stomers. As seen in Table 7, adding customer features to i nvoice features improves prediction accuracy compared to only usi ng invoice features, even for returning customer. However, if we replace customer features with historical features, there is an additional 13% increase in accuracy. Clearly, historical features are more effective than customer features in determin ing the outcome of invoices. Having all three feature sets together achieves the best prediction accuracy; however this is only a marginal improvement over using the invoice and historical features. These results motivate building separate models for pred iction for returning customers; and shows that when customer information is available one can also build good models fo r first-time invoices. 
Invoice+Custome r 
Invoice+Custome r +History For experiments in previous sections we built one model for each firm. However, in principle, we could build one unified model combining the data from all firms. Building such a model could help generalize better and learn behaviors and patterns that are common to all firms. Combining the data from all firms would also provide a lot more training data, which usually improves modeling. To test this conject ure, we build a unified model combining all training sets, and pres ent results using this model to predict for invoices belonging to each firm. We compare this model with training individual models for each firm. The results in Table 8 indicate that building one unified firm model indeed achieves better prediction accuracy than using separate firm models. This resu lt suggests that these four firms share common behavior and patterns which are overlooked by individual firm models. This is especially true for Firm C and D, whose returning invoices comprise less than 10% of all returning invoices, and each individual prediction gains significant accuracy improvement from the unified model. While there are certain differences between the fine-tuning of the individual processes (e.g., 54% of invoices of Firm C are paid on time, while only 25% of invoices for Firm B are on time), there seems to be one dominant workflow in place with common process policies and customer responses. Hence, when data from multiple firms are available, and there are no proprietary concerns about merging this data for modeling, there is much value in building a unified model by combining datasets from all firms. Table 8. Prediction accuracy of unified model vs. firm-specific 
Test Data Accuracy of unified Firm A 92.65 87.51 Firm B 95.81 93.09 Firm C 77.26 66.21 
Firm D 84.10 71.34 In Section 3, we demonstrated how we can effectively predict the outcome of an invoice in different settings. Being able to identify invoices that are likely to be delinquent at the time of creation enables us to drive the collections process to reduce delinquency. In this section, we present simu lation results that show how our invoice prediction models can help to improve collection performance. Our simulations are based on the assumption that preemptively taking actions (such as sending a reminder) on an invoice that will be delinquent reduces the collecti on time. We have observed this phenomenon in other studies, where such priming does indeed reduce delinquency. Specifically, we make the simplifying assumption that taking an action on an invoice will reduce the time of delinquency (if any) by a fixed factor. Invoices that will be paid on time are however unaffected by preemptive due diligence, which is a reasonable assumption for this data. An example simulated time savings cal culation is shown in Table 9, where the time savings factor is chosen to be 50%. Table 9 . Examples of simula ted time savings on invoices 
Invoice# Actual delay Typically there are significant costs and resource constraints that prevent taking action on all open invoices. As such, the invoice-to-cash process relies heavily on being able to prioritize invoices for action. In the absence of additional information, one approach would be to select uniformly at random a subset of invoices for which preemptive collection actions are taken. We call this baseline approach Uniform Prioritization, which is a typical approach in real-world invoice-to-cash processes. An alternative approach would be to prioritize invoices based on the outcome predictions of our models. This prioritization is implemented in two steps. First, invoices are ordered with respect to predicted classes, i.e., 90+ days late invoices, followed by 60-90 days , 30-60 days , 1-30 days and on-time invoices, in that order. 90+ days invoices are typically for customers in bad standing and have the highest risk of collection. They are therefore placed on the top of the ordered list for due diligence. On-time invoices are most likely for good customers. Such invoices could be exempt from due diligence, which not only saves cost and resources, but also avoids the potential negative impact on customer satisfaction. In a second step, within each ordered class, the individual invoices are prioritized in descending order of predicted probability of membership in the class. We call this approach Model Prioritization . Now, if we have enough res ources to take actions on x% of the open invoices, we could either select the top x% of invoices based on Model Prioritization or Uniform Prioritization . We compare these two approaches for different values of x , and plot the average time savings per invoice at each point in Figure 3. The dataset we use is from firm A. Th e time savings factor we use in these simulations is 50%. This choice of 50% is somewhat arbitrary, so the absolute time savings may not correspond to what can be achieved in practice. Therefore, we also report the ratio of the average time savings between the two prioritization methods  X  which is presented in Figure 4. The results show that the advantage (per invoice) of having Model Prioritization increases when a smaller set of invoices is selected  X  which represents more likely delinquent invoices. Model Prioritization performs exponentially better while the selected invoice volume reduces. As we increase the amount of invoices acted upon, the two prioritization policies will naturally converge. 
Figure 3. Comparison of aver age time saved per invoice for 
Figure 4. Relative time savings as a ratio of average days saved using Model Prioritization over Uniform Prioritization Our simulations demonstrate that driving the collection process based on our invoice-outcome prediction models can significantly reduce delinquency, e.g., when only 10% of the invoices are selected for action we save four times the number of days delinquent compared to Uniform Prioritization. There are a number of vendors offering pre-packaged solutions for order-to-cash. Examples are Oracle X  X  e-Business Suite Special Edition Order Management [10] and SAP X  X  Order-to-Cash Management for Wholesale Distribution [11]. Oracle X  X  solution provides information visibility and reporting capabilities. SAP X  X  solution supports collections and customer relationship management. To our best knowle dge, none of such solutions incorporates analytics, especially predictive modeling for improved prioritization of invoices or for customer ranking, with subsequent collection process optimization. Predictive modeling approaches ar e widely used in a number of related domains, such as credit ma nagement and tax collection. Talgentra and Accenture are tw o representative examples. To better manage customer credit, Talgentra proposes to use predictive modeling approach [12] . They consider the use of prediction techniques such as deci sion trees, association rules, and neural networks in order to build customer models . These models are then used to predict collection probabilities, most suitable payment terms, and schedules for a given customer. Accenture uses assignment rules to optimize workforce utilization (re-assigning staff to tasks as field collection, telephone collection, customer service) for tax collection. The rules are generated based on probable collection outco mes by learning from historic performance numbers and expected new accounts receivable [5]. However, the details to generate th ese rules are not given. In fact, since, predictive modeling appro aches vary based on the problem domains, these solutions are unlikely to be sufficient to address issues for O2C payment collection. There is a small body of work in the O2C domain. One such work can be found in [8], in which, a m odel is used to predict collection amounts on customer accounts base d on learned relationships among known variables. The pred ictive models are generated with historical information on customers, on event patterns for customers, or on collectors X  notes for a customer. Neural networks are used as one of the approaches for predictive modeling. While the approach focuses on collection amounts prediction, we believe both amount s and delays are important for collection decision making. Anot her difference is that we can tackle collections not only at the customer level, but also at the invoice level. The most closely related work is by Bailey et al. [1]. The authors discuss possible improvements ove r Providian X  X  cash collection strategy. They analyze various strategies for prioritizing collection calls and propose to use predictive modeling based on binary logistic regression and disc riminative analysis to determine which clients to  X  X utsource X  (i.e., which customer accounts to hand over to an outside collections agency for further collection processing). The authors present some preliminary results of their modeling approach in the form of analytics assuming certain prediction accuracies and collection returns. Their work is complementary to ours in that th ey deal with the cost/benefit decisions that would need to be made once the priority/risk of each collection item is determined. Our work, on the other hand, tries to assess which techniques are best suited for determining this priority/risk. Other relevant work comes from a number of new companies that provide rule engines to prioritize invoices to maximize cash flow. For instance, cforia [13], a 2002 start-up, offers various collection management solutions. On their website, they claim among other AR process improvements, a new way of automatically prioritizing invoices based on a rule-based system. They claim that  X  X foria X  X  rules engine automatically sends the collections and deductions teams prioritized ticklers to maximize cash flow. X  Another start-up, IntelligentResults [14], offers a platform called PREDIGY , which provides a variety of business analytics capabilities. For example, beside the manual creation of business rules, PREDIGY also allows deri ving strategies and models via automatic data clustering and segm entation. Moreover, they offer integrated testing and simula tion tools for verifying the effectiveness of the derived rules. These solutions are helpful to create, use and validate the rules, once rules are known. However, there is no evidence that these so lutions enable automatic rule generation by learning from the past, which is the core of our approach in this paper. In this paper, we have presente d a supervised learning approach and the corresponding results in the context of invoice-to-cash collections. We developed a set of aggregated features which capture historical payment behavior for each customer. Our results show that having this set of features enhances the prediction accuracy significantly, and it is more valuable in predicting payment delays for invoices from returning customers than using customer features. However, we also observed that customer features play an impor tant role in the prediction of payment delays when no historical information is available, e.g., for invoices from first time customer s. We demonstrate that by using cost-sensitive learning, we are able to improve prediction accuracy particularly for high risk invoices, which are under-presented in the data sets. In a ddition, we compared the prediction performance of a single generic model with that of firm-specific models and we showed that the former leads to better prediction accuracy. Finally, we demonstrate, through simulation, that our model-driven invoice prioritizati on helps in reducing delinquency time under realistic time savi ngs assumptions; and, the performance gain can reach as high as four times compared to using random prioritization. We would like to thank our colleague Vijay Iyengar for insightful discussions on this topic. [1] Bailey, D. R., Butler, B., Smith, T., Swift, T., Williamson, J., [2] Frank, E., Witten, H. I. Ge nerating Accurate Rule Sets [3] Hastie, T., Tibshirani, R., Friedman., J. The Elements of [4] John, H. G., Langley, P. Estim ating Continuous Distributions [5] Milack, J. Receivables Management and Collection [6] Quinlan, R. C4.5: Programs for Machine Learning. Morgan [7] Schapire, R. The strength of Weak Learnability. Journal of [8] Shao, M., Zoldi, S., Cameron, G., Martin, R., Drossu, R., [9] http://www.crfonline.org/orc/ca/ca-7.html. [10] http://www.oracle.com/global/uk/portal/special_edition_orde [11] http://www.sap.com/industries/w holesaledistribution/busines [12] http://www.talgentra.com/content/Using%20Predictive%20 [13] http://www.cforia.com/products.htm [14] http://www.intelligentres ults.com/products/ 
