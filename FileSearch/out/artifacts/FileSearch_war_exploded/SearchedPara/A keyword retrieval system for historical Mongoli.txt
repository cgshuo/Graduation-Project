 ORIGINAL PAPER Hongxi Wei  X  Guanglai Gao Abstract In this paper, we propose a keyword retrieval system for locating words in historical Mongolian document images. Based on the word spotting technology, a collection of historical Mongolian document images is converted into a collection of word images by word segmentation, and a num-ber of profile-based features are extracted to represent word images. For each word image, a fixed-length feature vector is formulated by obtaining the appropriate number of the com-plex coefficients of discrete Fourier transform on each profile feature. The system supports online image-to-image match-ing by calculating similarities between a query word image and each word image in the collection, and consequently, a ranked result is returned in descending order of the similar-ities. Therein, the query word image can be generated by synthesizing a sequence of glyphs when being retrieved. By experimental evaluations, the performance of the system is confirmed.
 Keywords Kanjur  X  Word spotting  X  Profile features  X  Discrete Fourier transform  X  Query image synthesis 1 Introduction Historical documents are precious culture heritages of human beings. At present, many countries are digitizing their native historical documents to protect them as long as possible, which enables the public to access them more conveniently and faster, for instance, via Internet. In Inner Mongolia Autonomous Region of China, there are a large number of ancient Mongolian books. One of the most famous books is the Mongolian Kanjur. It is a Mongolian encyclopedia and its content involves religion, history, literature and so on. In this paper, we deal with the aforementioned Mongolian Kanjur made by woodblock printing in 1720 (Kangxi period of Qing Dynasty). The process of the woodblock printing is as fol-lows: first, Mongolian words were engraved in woodblocks by artisans; then, vermillion ink was put on the woodblocks; finally, papers were put on the woodblocks, and then the words were printed on the papers. This edition of the Mon-golian Kanjur contains 108 volumes in total or about 45,000 pages with twenty million words more or less. But now, only eight sets of this edition survive in all over the world, and one of them is collected in the library of Inner Mongolia University. To protect the invaluable Mongolian Kanjur as longaspossible,librariansinInnerMongoliaUniversityhave scanned each page into a digital image in TIF (Tagged Image File) format. Figure 1 shows a fragment of one Mongolian Kanjur image. Although the public can browse these digital images without the need of visiting the library, it is difficult to retrieve them due to the lack of indexing.

Traditionally, there are two approaches for creating index-ing in the field of document image retrieval (DIR). The first one is manual annotation. Since the Mongolian Kanjur con-tains 45,000 pages and about 20,000,000 words, it is a highly expensive and tedious task for such a large collection. The second one is an automatic approach. It utilizes the optical character recognition (OCR) technology to convert images into texts and the indexing is created on the OCR X  X d texts. So far as we know, there are few literatures on Mongo-lian character recognition. Gao et al. [ 1 ] firstly attempted to solve this problem and presented a structural and statistical combined method for printed Mongolian character recogni-tion. Wei et al. [ 2 ] proposed a two-stage classifier for the printed Mongolian character recognition. On the first stage, all primitives (characters or glyphs) were coarsely classified into several sub-classes according to some stable structure features. Then, the primitives of each sub-class were finely classified by BP neural networks in the second stage. Peng et al. [ 3 ] described a printed Mongolian character recog-nition system for multiple font types and mixed scripts of Mongolian, Chinese and English. The above methods [ 1  X  3 ] are only suited for the printed Mongolian document images with a good quality so as to segment Mongolian words into individual characters. However, the words in the Mongo-lian Kanjur are equivalent to a kind of off-line handwritten words, and the scanned images are seriously degraded due to the passage of time (see Fig. 1 ). Hence, it is more diffi-cult to segment this kind of off-line handwritten Mongolian words into correct characters. In [ 4 ], the authors presented a segmentation-based method to recognize the words of the Mongolian Kanjur. On a data set of 5,500-word images with a good quality, the recognition rate of the words is only 71%. For a low image quality, the recognition rate will be even lower. Therefore, the OCR technology is still challenging for recognizing the words of the Mongolian Kanjur.
When OCR is poor or hard, word spotting technology is an alternative approach for indexing and retrieval. Word spotting was originally proposed for speech processing and was firstly introduced into the field of DIR by Manmatha et al. [ 5 ] for indexing and retrieving the manuscripts of George Washington. The goal of word spotting is to find all word images in the collection that are similar to a given query word image by image matching. There are various image matching methods for measuring similarities between word images. In [ 6 , 7 ], several image matching methods were compared with each other, and the dynamic time warping (DTW) algorithm was the best one. Consequently, DTW has been widely used for image matching in word spotting [ 8  X  12 ].

However, the word spotting technology has several draw-backs, such as that the query word image needs to be selected from document images by users and that the accuracy of word segmentation might be very poor on degraded docu-ment images, especially for historical printed or handwrit-ten documents. Moreover, image matching methods, such as DTW, are often time consuming, which makes it impossible for online image-to-image matching during the retrieval.
In this paper, we propose solutions to these drawbacks and a keyword retrieval system based on word spotting for the Mongolian Kanjur images is described in detail. The main contributions are as follows: ( 1 ) a query word image can be generated, which avoids selecting an instance from a large collection and provides convenience for users, ( 2 ) the fea-tures for representing the word images of the Mongolian Kanjur are selected, and ( 3 ) discrete Fourier transform (DFT) is performed on each feature, and the appropriate number of the DFT lower-order complex coefficients is determined to form a fixed-length feature vector for online image-to-image matching.

The rest of the paper is organized as follows. Section 2 describes the characteristics of the Mongolian language in Kanjur. Section 3 shows the overview of the retrieval sys-tem and Sect. 4 presents several tasks for preprocessing. The representation of word images is given in Sect. 5 . Section 6 describes an approach to generate query word images during the retrieval. Section 7 is the implementation of the system. Section 8 presents the performance evaluation of the system. Finally, Sect. 9 gives conclusions and sheds lights on the future works. 2 Characteristics of Mongolian language in the Mongolian Kanjur Mongolian language is a branch of the Altaic language fam-ily. It is a kind of cursive alphabetic script. All letters of one Mongolian word are conglutinated together in vertical direction, and letters have initial, medial or final visual forms according to their positions within a word [ 13 ]. A blank space is used to separate two words. The Mongolian language is also a kind of agglutinative language. Its word formation and inflection is built through connecting different suffixes to the roots or stems. Moreover, the Mongolian language has a very special writing system, which is different from Ara-bic, English and other Latin languages. Its writing order is vertical from top to bottom and the column order is from left to right.

In the Mongolian Kanjur, the used Mongolian is called classical Mongolian . Although the classical Mongolian has beenextinct, it alsoobeys theabovewritingsystem andword-formation rules. It is a standardized written language used in a number of written texts roughly from the seventeenth to the nineteenth century. The most notable documents in this language are the Mongolian Kanjur and Tanjur as well as several chronicles [ 14 ]. The classical Mongolian is different from the traditional Mongolian being used in Inner Mon-golia Autonomous Region of China now. The differences between them are mainly reflected in the visual forms of some letters. An example is given in Fig. 2 . A classical Mon-golian word  X  X agan X  (means  X  X han X ) and the corresponding traditional Mongolian word are shown in Fig. 2 a. Another classical Mongolian word  X  X duge X  (means  X  X ow X ) and its traditional Mongolian word are given in Fig. 2 b.
From Fig. 2 , we can see that the visual forms of the tra-ditional Mongolian letters have dots, but the corresponding visual forms of the classical Mongolian letters may not have. In addition, the visual forms of the same letters between the traditional Mongolian and the classical Mongolian are com-pletely different even in the same position of one word. So, all the visual forms (glyphs) of the classical Mongolian let-ters need to be obtained from the Mongolian Kanjur in order to synthesize query word images (see Sect. 6 ).
 Furthermore, there are also many Ali Gali words in the Mongolian Kanjur, which are pronounced in Tibetan or San-skrit and written in the classical Mongolian letters. Ali Gali is mainly used to transcribe Tibetan and Sanskrit terms when translating religious texts written by Tibetan and Sanskrit into Mongolian language [ 15 ]. Therefore, it is time consum-ing and expensive to make manual annotations for the Mon-golian Kanjur.

According to the above-mentioned characteristics of the classical Mongolian in the Mongolian Kanjur, word images are considered as the handling units in this keyword retrieval system. And a number of suitable features for representing word images have been selected by analyzing these charac-teristics (see Sect. 5 ). 3 Overview of the keyword retrieval system The proposed keyword retrieval system for the Mongolian Kanjur images utilizes the word spotting technology to index word images and to retrieve them by online image-to-image matching. The whole architecture of this system is shown in Fig. 3 . It consists of two parts: the off-line part and the online part.

The detailed procedure of the off-line part is described as follows. Firstly, the scanned Mongolian Kanjur images are converted into binary images. Then, word images can be obtained by connected components analysis on each binary image. Next, several profile features are extracted to repre-sent each word image. Discrete Fourier transform (DFT) is performed on each profile feature, and the appropriate num-ber of the DFT lower-order coefficients is reserved to form a fixed-length feature vector for online image-to-image match-ing. Finally, both the DFT coefficients and the coordinate information of word images are saved into a database.
In the online part, user provides a query word image by a synthesis tool. The processes of the feature extraction and the fixed-length representation are performed as same as in the off-line part. And then, the ranked results will be returned by sorting similarities between the query word image and each word image in the database. 4 Preprocessing The scanned Mongolian Kanjur images are saved in colored TIF format with 600dpi. Based on the word spotting technol-ogy, the collection of the Mongolian Kanjur images needs to be converted into a collection of word images. To be specific, the proposed system OFF-LINE ON-LINE firstly, these color images are converted into binary images; then, word images can be obtained by connected components analysis on each binary image. The detailed procedures of binarization and word segmentation are described as follows. 4.1 Binarization In our previous work [ 16 ], an effective binarization approach has been proposed for the Mongolian Kanjur images. The scanned color images are converted into gray level images and smoothed by Wiener filter. Then, the gray level images are processed by three well-known global thresholding meth-ods, respectively. The three global methods are Otsu algo-rithm [ 17 ], Kittler algorithm [ 18 ] and fuzzy c-means cluster-ing method (FCM) [ 19 ]. For each gray level image, there are three intermediate results and the final binarization image can be formed by combining the intermediate results. For example, let B 1 ( x , y ), B 2 ( x , y ) and B 3 ( x , y intermediate results of the three global thresholding methods. The final binary image B Final ( x , y ) is obtained as follows: B where x and y are the coordinates of each pixel, 0 and 1 represent white and black, respectively. 4.2 Obtaining word images Frombinaryimages,wecanobtainallconnectedcomponents (CCs) by the connected component labeling algorithm. Each CC might be a Mongolian word, a part of a word or noise. In order to obtain word images from the CCs, some prior infor-mation should be derived in advance; 125 binary images were segmented into 362,218 CCs. Then, the width and height information of these CCs formed two histograms. Conse-quently, the ranges of width and height were chosen from the two histograms and regarded as the prior information.
Two special situations need to be considered. In Mongo-lian language, some suffixes (such as ending suffixes) are written separately from the stem of a word or from other suf-fixes with a small blank space. Likewise, the vowels  X  X  X  and  X  X  X  may be separated from the preceding consonant by a nar-row gap when they are placed at the end of a word. In the two cases, the word with internal blank space will be segmented into independent parts by connected component labeling. For ease of processing, each independent part is directly consid-ered as a word image as long as the independent part satisfies the prior information. 5 Word image representation In word spotting, profile-based features are widely used to represent historical handwritten [ 8 , 11 , 20 ]orprinted[ 21 , 22 ] word images. The profile-based features are popularized by Rath and Manmatha [ 8 ], which were adopted to represent the word images of the Washington X  X  manuscripts. A fea-ture value is associated with each column of the word image, and the word image along with the writing direction is rep-resented as a feature vector. The size of the feature vector equals to the width of the word image.

Inspired by the previous work, four profile features have been selected for representing the word images of the Mon-golian Kanjur. Opposite to [ 8 ], the four profile features are extracted from per image row because of the special writing system of Mongolian language. 1. Horizontal projection profile: it can capture the distribu-2. Left profile: the left profile of a word image is made of the 3. Right profile: the right profile of a word image is made 4. Horizontal background-to-foreground transitions: the
And another four profile features are also extracted from per image column, which can partly reflect the writing order of a Mongolian word. 5. Vertical projection profile: it is computed by summing 6. Upper profile: the upper profile of a word image is made 7. Lower profile: the lower profile of a word image is made 8. Vertical background-to-foreground transitions: the num-
As to matching word images represented by the profile-based features, the DTW algorithm is generally the best approach [ 6 , 7 ]. It guarantees that only corresponding loca-tions of two profile features are compared, which tolerates the handwriting variations. But, the DTW algorithm is not competent for the online image-to-image matching because of being time consuming. For this reason, a fixed-length rep-resentation from the profile features with a varying length can beobtainedbycomputinglower-ordercoefficientsofdiscrete cosine transform (DCT) on each profile feature [ 23 ]. In the field of fixed-length representations, deriving the lower-order complex coefficients of DFT can also accomplish the same aim [ 24 , 25 ].

DCT can be performed on a profile feature vector f = [f 1 f ,...,f N ] to obtain its coefficients C = [C 1 ,C 2 ,...,C below formula [ 26 ]: C where w
Figure 4 c, f show the approximations of the profile fea-tures by using DCT. In Fig. 4 c, f, a number of lower-order DCT coefficients can reconstruct the left profile and the right profile, respectively. In this way, a word image can be con-verted into a fixed-length feature vector using the appropriate number of lower-order DCT coefficients.

Similarly, DFT is performed on a profile feature vector f =[f 1 ,f 2 ,...,f N ] to obtain its frequency-space representation F=[F 1 ,F 2 ,...,F N ] by using the following formula [ 27 ]: F where F k is a complex number. In Fig. 4 d, g, the left profile and the right profile are reconstructed by a number of lower-order complex coefficients of DFT. So, the word image can also be converted into a fixed-length feature vector by using DFT.

A data set consisted of 5,500 word images with annota-tions is used for comparing the performance of the fixed-length representation between DFT and DCT. This data set is the same as in [ 4 , 28 ]. Here, we have conducted several experiments on the data set. The performance is measured using the mean average precision (MAP). The number of the lower-order coefficients of DFT and DCT both rises from 1 to 50. Figure 5 shows the experimental results.

In Fig. 5 a X  X , we find that the row-profile features perform better than the column-profile features. It means that the row-profile features reflect the writing order much better. And the performance of row-profile features and column-profile features combined are always the best except in DCT. More-over, in Fig. 5 b, when the first modulus is removed, the DFT moduli representation is much better than the DFT complex coefficients representation. It implies that the phases of DFT are little important.

In Fig. 5 d, the best performance is obtained by DFT using the moduli of the complex coefficients and excluding the first lower-order complex coefficient. For the fixed-length repre-sentation, the appropriate number of moduli is determined. Its value is ten. Thus, only the moduli of the first eleven lower-order complex coefficients are computed on each pro-file feature, and the first modulus is removed.

The experimental results indicate that the DFT representa-tion is more suitable for the Mongolian word images than the DCT representation. In the proposed system, a fixed-length feature vector with eighty values (i.e., eighty moduli) is used to represent each word image and is stored in the database. In the same way, the DFT will be performed on the query image to form the above fixed-length feature vector during the retrieval. Thus, online image-to-image matching can be realized by calculating the Euclidean distances of the fixed-length feature vectors between the query word and each word in the Mongolian Kanjur. 6 Synthesizing query word image At the retrieval stage, users are required to select an example image as a query from a large collection. In order to pro-vide convenience for users, an approach to generate query word images has been presented by conglutinating different glyphs according to the word-formation and word-inflection rules of the Mongolian language. A set of glyphs have been determined.Theseglyphscanbedividedintothreecategories depending on their positions in words. There are 17 glyphs for the initial forms, 21 glyphs for the middle forms and 10 glyphs for the final forms.

To obtain glyph images, many word images with good qualities have been collected in advance. For each glyph, a large number of instances are manually segmented from those sample word images. By the following procedure sim-ilar to finding a clustering center, a representative image of each glyph can be determined and selected from its instances. Firstly, the eight profile features (see Sect. 5 ) are extracted from every instance of one glyph. Secondly, for the glyph, the distance between any two instances represented by the pro-file features can be calculated using the DTW algorithm in [ 6 ]. Thirdly, the average DTW distances from any instance to the rest of instances are computed for the glyph. Finally, the instance with the smallest average DTW distance is consid-ered as the representative image (i.e., the clustering center) of the glyph. Thus, the corresponding representative images of 48 glyphs can be obtained by the above procedure and are given in Fig. 6 .

Because of the variations in handwriting, the sample word images for providing the instances of the glyphs are different in stroke thickness. Thus, those representative images of the glyphs are different from each other in the stroke thickness. In order for the synthetic query images to have a uniform stroke thickness, normalization is necessary for processing the representative images. For each representative image, the stroke thickness is consistent with the width of its baseline (see Fig. 7 ). So, the stroke thickness will be roughly uni-form as long as the width of the baseline is unified into a specific value by scaling. After the normalization process-ing, the coordinate information of the baseline, including the top boundary, the bottom boundary, the left boundary and the right boundary, can be obtained from each normalized representative image of the glyphs.

Based on the spelling rules of the Mongolian language, all glyphs of one word need to be connected together along with its writing direction. Therefore, the following two aspects should be guaranteed when synthesizing a word image: ( 1 ) the neighboring glyphs must be aligned at their baselines; ( 2 ) the neighboring glyphs must be seamlessly connected together at their baselines.

Supposing a synthetic word image SW composed of n glyphs G 1 G 2 ,..., G n ( n  X  1) and the intermediate result SWIR m of m glyphs (1  X  m &lt; n ), the detailed procedure for creating SW is as follows: Step 1 . G 1 is firstly chosen from the set of initial forms. G 1 is the beginning of SW. Consequently, SWIR 1 is the G 1 and the baseline X  X  coordinates of SWIR 1 are the same as G
Step 2 . G i (2  X  i  X  n  X  1) is chosen from the set of middle forms, and it needs to be connected to SWIR i  X  1 according to the following sub steps: (2.1) Let the baseline X  X  left of G i be aligned with the base-line X  X  left of SWIR i  X  1 . There are three situations for aligning the baselines:  X  Situation I: when the baseline X  X  left of SWIR i  X  1 is less  X  Situation II: when the baseline X  X  left of SWIR i  X  1 is  X  Situation III: when the baseline X  X  left of SWIR i  X  1 is equal (2.2) After aligning, the baseline X  X  left of the new inter-mediate result SWIR i is where Lef t SWIR i is the baseline X  X  left of SWIR i , Lef t the baseline X  X  left of the glyph G i and Lef t SWIR i  X  1 baseline X  X  left of SWIR i  X  1 . (2.3) Let the baseline X  X  top of G i be seamlessly connected to the baseline X  X  bottom of SWIR i  X  1 . Thus, the baseline X  X  bottom of the new intermediate result SWIR i is where Bottom SWIR i is the baseline X  X  bottom of SWIR i , Bottom SWIR i  X  1 is the baseline X  X  bottom of SWIR i  X  1 and BH G i is the baseline X  X  height of the glyph G i . (2.4) Calculating the width and height of the new inter-mediate result SWIR i . The new width is calculated by the following formula based on the above three situations: W where W SWIR i is the width of SWIR i , W SWIR i  X  1 is the width of SWIR i  X  1 , W G i is the width of G i ,Left SWIR i  X  1 line X  X  left of SWIR i  X  1 , and Left G i is the baseline X  X  left of G And the new height is calculated using the following formula: H where H SWIR i is the height of SWIR i , H SWIR i  X  1 is the height of SWIR i  X  1 , H G i is the height of G i , and Top G line X  X  top of G i . (2.5) In this way, the new intermediate result SWIR i com-posed of i (2  X  i  X  n  X  1) glyphs can be formed. And its width and height are W SWIR i and H SWIR i , respectively.
Step 3 . As required, glyphs from the set of middle forms might be selected many times. For any glyph from the set of middle forms, it should be handled by repeating step 2.
Step 4 . G n is the last glyph of SW. So, it is chosen from the set of final forms. It also needs to be connected to SWIR as well as step 2. As a result, a whole synthetic word image SW can be obtained.

In the cases of ending suffixes and vowels  X  X  X  or  X  X  X  writ-ten separately from the preceding part with a narrow gap (see Sect. 4.2 ), the synthesized word image will be the only part before the narrow gap. In this way, the synthetic images can be in accordance with the obtained word images in Sect. 4.2 . Some instances are created by the proposed method and shown in Fig. 9 .

In order to validate the effectiveness of the synthetic images for retrieval, we compare the performance between the proposed approach (called  X  X ynthesizing X ) and the origi-nal idea of word spotting to select example images as queries from a collection (called  X  X electing X ). Twenty keywords are used here and are also used in Sect. 8 . The performance is measured by R-precision.

In the case of  X  X electing, X  for every keyword, the corre-sponding example images can be collected together from our data set (see Sect. 8 ) according to its annotation. Because each example image of the keyword may be selected by users, each of them is regarded as a query to be retrieved, and a R-precision can be calculated. In this way, we obtain the maximum and the mean R-precision among the exam-ple images of the keyword. And the maximum R-precision means the best performance obtained by  X  X electing. X 
In the case of  X  X ynthesizing, X  the corresponding images are generated by the proposed approach. The R-precisions are the same as in Sect. 8 . The comparison based on the experiments in the two cases is shown in Fig. 10 .
In Fig. 10 , we can see that the best performance can be obtained as long as the right example image is selected by users. But, there is no specific criteria to help users determine which is the best example image for a keyword, with the result that the right example is often missed. Most often, the selected example may be just in a good image quality. By the experimental results, the proposed approach can be taken as a trade-off between the performance and the burdens of users. It not only facilitates users and saves their time at the retrieval stage, but also guarantees a more stable performance than the arbitrary selection (i.e., the mean R-precision of  X  X electing X ). 7 Implementation We have developed a keyword retrieval system for the Mon-golian Kanjur upon the Microsoft .NET Framework. The database is Oracle 11g used for storing feature vectors and other information including coordinates, width and height of word images. And some dynamic link library files used in this system are generated using the Matlab software. In the server, the CPU is Intel Core2 with two 2.93GHz processors and the main memory size is 4GB. Figure 11 shows a screen shot of the system. 8 Evaluation To evaluate the performance of the proposed system, we purchased 200 scanned Mongolian Kanjur images from our library. These images were randomly selected and copied to us by the librarians. Each page has been transcribed manu-ally by Unicode to form the ground truth set, on which two linguists spent nearly a year. By an analysis, the total num-ber of words in the ground truth set is 49,444 and the size of vocabulary is 4,987.

In the ground truth set, twenty meaningful words with much larger tf*idf (tf means term frequency in the col-lection and idf means inverse document frequency) were selected. They were taken as query keywords and used to evaluate the performance of the keyword retrieval system. For every query keyword, the image should be synthesized before being retrieved. Then, the corresponding profile fea-tures were extracted. And the ten moduli of the DFT complex coefficients on each feature were derived, and a fixed-length feature vector was formed by combining these moduli. Sim-ilarities between the fixed-length feature vector of the key-word and each feature vector stored in the database were calculated as soon as possible. Thus, a ranked list of word images was returned in descending order of the similarities. In order to improve the retrieval efficiency, a pruning strategy has been adopted by comparing some scalar values before calculating similarities. The following two pruning criteria should be satisfied simultaneously: 1 a 1 b where Area query and Area candidate are the area of the query image and the candidate, respectively, Aspect query and Aspect candidate are the aspect ratio of the query image and the candidate separately. Using the pruning strategy, the average retrieval time is shortened to one-fifth at the cost of a few loss of the performance. The results are listed in Table 1 .
Evaluation metric is R-precision . R-precision is a kind of precision for evaluating the ranked retrieval results of a query. It is the ratio of the number of relevant results in the top Rel results to the total number of relevant results of a query. It denotes the precision of the top Rel results and is defined by the following equation [ 29 ]: R -precision = where Rel is the total number of relevant results of a query, and r is the number of relevant results in the top Rel returned results. For each query keyword, a R-precision can be cal-culated. These R-precisions are averaged by the amount of query keywords, which is taken as the performance measure of the keyword retrieval system. In Fig. 12 , the R-precision of each query keyword is shown. The average R-precision of the system is 60.27% with about 10% word segmentation errors. 9 Conclusions This paper described a keyword retrieval system for locating words in the Mongolian Kanjur by word spotting. The sys-tem included an off-line part and an online part. The off-line part was used to create indexing of the word images. Here, each index term was a fixed-length feature vector. Eight pro-file features were used to represent each word image. Thus, a fixed-length feature vector was formed by combining eighty moduli derived from the lower-order complex coefficients of DFT on each profile feature. In the online part of the system, we proposed an approach to synthesize query word images during the retrieval, which can avoid selecting an instance from a large collection so as to facilitate users. A ranked result of word images was returned through calculating sim-ilarities between the query word image and each word image of the collection. The performance of the system is confirmed by the experimental results. Therefore, the presented system is competent for locating words in the Mongolian Kanjur according to the given query.

However, several word images obtained from the Mongo-lian Kanjur were degraded because of aging. So, our future work will be focused on the methods and technologies for improving the image quality. Moreover, in Mongolian lan-guage, the suffixes can be classified into two categories in general. The first category is word-formation suffix that can produce variations of part-of-speech or meaning. The sec-ond category is word-inflection suffix that often causes vari-ations of person or tense. Thus, there are many words with the same part-of-speech and meaning, but they include dif-ferent inflectional suffixes at the end of the words. The inflec-tional suffixes might be removed from words to overcome the morphological variations. Recently, a task for removing the inflectional suffixes from word images was reported in [ 28 ]. Therefore, integrating this aspect into the system for improv-ing the recall rate is also the future work of our research. References
