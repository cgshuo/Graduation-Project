 Statistics from Wikipedia [17] indicate that, there are approximately 340 million tweets posted per day. Besides to reading tweets from their timelines or trending topics, people also need to search tweets o n a topic. Different from traditional webpage search, tweet ranking in Microblog search is more challenging. Because of the limitation on length, tweets do n ot provide sufficient word occurrences. Tweets are context-dependent while lacking context makes context similarity cannot be measured directly . Nevertheless, tweets on a specific topic are usually temporally concentrative, especially when some big eve nt breaks out, like terror-ist attack. Hence tweets posted during a s hort time period can be regarded as having the same context. On the other hand, tweets posted in totally different time periods possibly refer to different topics though they contain some common words. As the examples from TREC Microblogging 2011 show in Table 1, both of them talked about  X  X rotest X . However si nce they were posted in quite different contexts measured by post time, they were about different topics. The former one was related to  X  X gyptian protesters attack museum X  and the latter one was about  X  X rotests in Jordan X . Thus we use the time locality to approximate the context dependency in this paper.

Traditional ranking algorithms based on Euclidean distances are limited to the local structure [20]. Manifold structure has been employed for ranking problem [3,5,16,20], which maintains local and global consistency simultaneously. Gener-ally [19,20], manifold structure is built on content similarity empirically. Unlike traditional webpages, tweets are extremely short and lack context. Content sim-ilarity alone cannot well describe the relevance between tweets. The manifold graph of all related tweets for a query may be disconnected due to sparseness, and mixed with much noise because of diff erent contexts. Therefore, rich fea-tures, especially the time locality feature are explored to weight the network of manifold structure.

In this paper, we aggregate rich features to construct the manifold struc-ture in a supervised way, with time locality as an approximation of context dependency. The similarities between query and tweets or tweets themselves are measured from different views in terms of each feature, so that several hetero-geneous structures are obtained, which are then linearly combined to model the objective function with local and global consistency. A supervised algorithm is then designed to learn the combination coefficients. As seen later, the manifold structure leant from rich features better benefits the ranking than being de-termined empirically on a single content similarity. A series of experiments are conducted on the dataset of tweet corpus and labeled queries officially provided by TREC Microblogging. The evaluation results show that, in terms of P@10, P@20, P@30, and AUC (area under ROC curve), our approach can outperform the ranking models of Lucene and RankSVM.

The rest of the paper is organized as follows: Section 2 discusses the related work. Section 3 describes our approach in det ail. Section 4 intro duces the features we use for ranking. Section 5 demonstrates our evaluation results and we make conclusion in Section 6. Due to the features of short, sparseness and frequency, Microblog search is very different from traditional web search. A s Teevan [14] explored, Twitter queries were shorter, but contained longer words, more specialized syntax, and more references to people. In addition, unlike the URLs in social bookmarking sites which have provided high values for search engine, the shorten URLs in tweets can either be high in quality or spam [9]. We will not expand tweets by extracting the contents that the URLs link to, and treat whether a tweet contains URL as afeature.

User oriented search has attracted more and more attentions. Instead of pre-senting a simple list of tweet messages, TweetMotif [12] provided a facet search interface to allow user to navigate tweets by topics, by which searched tweets are grouped into subtopics extracted by language model. Another personalized tweet ranking method [15] was proposed by ranking the incoming tweets based on the likelihood user may retweet them, and ra nking the users given a tweet based on their willingness to retweet it. Using four groups of features: Author-based, Tweet-based, Content-based, User-base d, a Coordinate Ascent learning to rank algorithm was trained to rank tweets a ccording to users X  need. To address the problem of sparseness Naveed [11] ignored length normalization for tweets. In his point of view, document length normalization for short documents like tweets may introduce an unmotivated bias. Abe l [1] enriched the semantics of tweets by extracting facet values from tweets, where external resources were used in order to create facet and facet-value pairs. Massoudi [10] used time-dependent query expansion to overcome the disadvantage of redundancy-based IR methods over short documents retrieval. Duan [6] adopted learning to rank algorithm to select a feature set from both content and non-content features of tweets and proposed a ranking model based on RankSVM algorithm. In our approach, we treat the length of tweet as a feature, and use rich features to alleviate the prob-lem of sparseness. Specifically, the weight of each feature is not given empirically, instead they are determined through a supervised way.

Jabeur [8] measured the conditional probability of relevance using Bayesian network model. In his study, time magnitude of tweet was estimated by query terms occurrence in the temporal neighborhood. His experimental results showed that time magnitude was a primordial feature for ranking tweets. In this paper, we introduce into time locality feature to simulate the context of tweet. For the tweets posted in a short time period, we assume that they are in the same context. Zhang [18] proposed a transductive framework that generated training data while no labeled data was available, and boosted the ranking by adding confident unlabeled data during iteratively training. In our approach, after the manifold structured is learnt, all the tw eets to be ranked are treated as no labeled data and the query is treated as labeled data.

In some recent works, manifold structu re has been employed for ranking prob-lems and clustering problems[13] in consideration of local and global consistency. Zhou [20] proposed a universal ranking algorithm with respect to the intrinsic manifold structure collectively revea led by a great amount of data. Cheng and Du [3,5] introduced sink point into manifold structure to address diversity as well as relevance and importance. Wan and Yang [16] proposed a novel ex-tractive approach based on manifold-ranking of sentences. Generally, manifold structure is built on content similarity empirically, which suffers from sparseness in tweet ranking. In our research, we leve rage rich features to construct tweet manifold, including content, time locality and several intrinsic features, which are combined in a supervised way[4]. Ranking on data manifolds was proposed by Zhou [20]. Let f denote a score function, which assigns data x i with ranking score f i .And y i is the initial ranking score for data x i . For the labeled data y i = 1 and for the unlabeled data y i =0. Let W denote an affinity matrix where W ij is the similarity between data x i and x j .Wename W as the similarity matrix. Note that W ii is set to 0 to avoid self-reinforcement. Symmetrically normalize W by S = D  X  1 / 2 WD  X  1 / 2 where D is a diagonal matrix with D ii equal to the sum of the i -th row of W .As[20] illustrates, the final score function f  X  can be achieved directly by: or in an iterative way using the following iterative function: where is a parameter for trade-off.

For tweet ranking, we then construct a weighted network over the manifold structure of tweets, where the nodes in the network are the unlabeled tweets and labeled query, and edges reflect th e similarities between query and tweets or tweets themselves. Then we perform a graph-based semi-supervised method to rank tweets by their distances to the query on the intrinsic manifold struc-ture. In the original thought of manifold regularization framework, the similarity matrix W is empirically built on content similarity. In our approach, we do not determine W in advance. Instead we achieve it through a supervised learning process leveraging rich features.

For each feature  X  , we can define some similarity measurements. Then the similarity matrix W for our approach is defined as follow: where each F i is a similarity matrix achieved by a kind of similarity measurement over some feature, and a is the linear coefficient vector needed to be learnt.
Given a corpus CO = { ( q i ,T i ) | i =1 ,...,N } ,where q i denotes the i -th query and T i denotes the set of labeled tweets for q i , P i = { p 1 ,...,p j } and O i = { o 1 ,...,o j the optimal solution for coefficient a , we construct the following optimization problem: where f i is the final score function for q i obtained from Eqn. (1) directly or Eqn. (2) iteratively, and  X  is the regularization parameter that trades off between the model complexity and the fit of the model. l ( x ) is the loss function which assigns a non-negative penalty to the violation of constraint f i p &gt;f i o .Herewe use Wilcoxon-Mann-Whitney (WMW) loss l ( x )=(1+ e  X  x b )  X  1 since it shows good performance in our approach.

To minimize (4) with respect to parameter a , we use gradient descent method to minimize the loss and find the optimal solution for a . The gradient of L ( a ) with respect to a is as follow: where  X  op = f i o  X  f i p . Next we need to know  X  X  i  X  X  ,i.e.  X  X   X   X  X  .
When f t in Eqn. (2) converges to f  X  ,wehave: where  X  X   X  X  is a supervector, elements in which are matrices, and can be expressed ( j,j )-element equal to the sum of the j -th row of the i -th feature matrix F i for a specific query, then we have:
For the corpus we are going to introduce in the following, tweets are catego-rized into highly relevant, minimally relevant and irrelevant. To adapt to this multi-label situation, Eqn. (4) and Eqn. (5) are needed to be modified as follow: where O i , M i and P i denote the set of irrelevant, minimally relevant and highly relevant tweets for q i respectively.
 Finally the optimization problem in (6) can be solved with a standard quasi-Newton method. Here Broyden-Fletcher-Goldfarb-Shanno (BFGS) [2] is em-ployed for the learning process. Note that the optimization problem in Eqn. (6) is generally non-convex, we try se veral different start points to find a good solution which though may not be a global optimal solution.

Table 2 shows the overview of the learning algorithm for manifold structure, in which derivative of L ( a ) is denoted as dL ( a ).
 To represent the similarity matrix W , we explore rich features to measure the similarities between query and tweets or t weets themselves from different views in terms of all these features, so that rich features can be exploited. The available features can be derived from, for exam ple, content, context, length etc.
Number of co-occurrence word, cosine si milarity, Dice coefficient and Jaccard similarity are employed to measure the content similarity from different views. Note that by weighting the words in tweets and query using different approaches, we compose different types of features and similarities, such as cosine similarity using tf weight and cosine similarity using tf-idf weight. All these similarities will be combined together to better capture the content similarity.

As addressed in Section 1, for ranking t weets, time locality is an important feature that can help us address the criterion of context awareness. Thus the context dependency can be approximated as the following equation (8) in terms of time locality. where pt i is the post time of tweet t i . For the query, the post time is represented as querying time.

Several intrinsic features are extracted as well. Here we only introduce some of them.  X  oov ratio  X  is the out-of-vocabulary word count over the total word count,  X  unique word ratio  X  is similar to  X  oov ratio  X ,  X  begin with at  X  means whether the content of tweet starts with  X  X  X ,  X  has rt  X  means whether the tweet is posted by retweeting others. On the other hand, we combine these intrinsic features into vector as a new feature, which is denoted as  X  intrinsic vector  X , and use cosine similarity on it. Because of lack of intrinsic features for the query, the similarities between query and tweets in terms of intrinsic features are set to 0.
The rich features for similarity measur ement derived from content, time lo-cality and intrinsic features are listed in Table 3. Note that we may not know in advance which feature is better than others, or whether a feature is useless and can be removed. Through a supervised l earning approach, we learn the combi-nation of these features and assign useful features higher weights.
 Our experiments are conducted based on the tweet corpus and labeled queries officially provided by TREC Microblogging. We compare our approach with the well-known baseline methods including different ranking models in Lucene, RankSVM and conventional manifold approach. We then evaluate the effective-ness of the features we selected for our approach, such as time locality and intrinsic features. 5.1 Corpus From the TREC Microblogging, we have got about 113,928 labeled tweets on 109 topic queries, out of 7,443,387 tweets totally. The first 49 topics are treated as training set and the remained 60 query topics are for testing. We preprocessed the labeled tweets simply by removing the  X  X  user  X ,  X # tag # X , URL, stop words, punctuations and transferring all the letters into lower case. The tweets are officially labeled as highly relevant, relevant, and irrelevant with integers 2, 1, and 0 respectively. 5.2 Baseline Methods Apache Lucene is a well-known information retrieval software library, which has been widely recognized for its utility in the implementation of Internet search engines. We compare our approach with Lucene 4.2 using default, BM25 and LMDirichlet models, which are denoted as Lu-Default , Lu-BM25 ,and Lu-LMD respectively for comparisons. It is worth noticing that real-time constraint is added to make sure that only the tweets posted earlier than querying time are returned. The parameters of BM25 and LMDirichlet have been well tuned.
We use RankSVM as another baseline method. Support vector machines (SVMs) has been proved to be effective for classification and regression anal-ysis. RankSVM is an instance of structured SVM used for ranking problem. For RankSVM, we select almost the same features employed in our approach to represent each tweet including content, time locality and intrinsic features.
Lastly, we also implement conventional manifold approach as baseline, by constructing manifold structure on single content similarity. And the edges with similarity less than a threshold  X   X  (0 , 1) are dropt. We implement Manifold-Cosine using cosine similarity with tfidf weight  X  cos sim tfidf  X  in Table 3. 5.3 Evaluation Metrics We use the Microblog track task metrics for evaluation. The main metrics for the task are the receiver operating characteristic (ROC) curve [7] and P@K. The ROC curve shows precision versus fallout for every possible score threshold while P@K gives a simple measure of ranking effectiveness.

To evaluate the result that the ROC curve explains, area under the curve (AUC) metric is employed. The formulation to calculate the AUC value for a ROC curve is as follow: where M is the number of positive samples and N is the number of negative samples.

As people usually prefer to browse the results in the top returned by search engines, we only consider the top K tweets in ranking list. The value P@K is calculated as follows: 5.4 Evaluation Results In the experiments, we list P@10, P@20 and P@30 for precision metrics and denote our approach as Manifold-Rich .

The precision comparisons between Ma nifold-Rich and the baseline methods are listed in Table 4. The increasing percentages,  X  X ncr(%) X , of Manifold-Rich are listed right next to the corresponding metric columns. It is seen that Manifold-Rich outperforms Lucene significantly n o matter it uses default, LMDirichlet or BM25 models. Compared with Lu-LMD, Manifold-Rich achieves significant improvements of 80.6%, 101.4% and 89.1% respectively on P@10, P@20 and P@30. And compared with Lu-Default, Manifold-Rich gets improvements of 44.8%, 49.0% and 52.8% respectively. Lastly compared with Lu-BM25 which gets the best precision among the three L ucene models, the improvements of our approach on P@10, P@20 and P@30 are 25.4%, 30.7% and 34.3% respectively. It is seen that only using content similarity between query and tweet in Lucene is not sufficient for ranking tweets due to the content sparseness. By leveraging the local and global structure on rich features, we can achieve much better rank-ing results. Compared with RankSVM, Manifold-Rich achieves improvements of 8.4%, 20.1% and 22.8% with respect to P@10, P@20 and P@30. The manifold baseline Manifold-Cosine is constructed by dropping those edges with weight less than an empirical threshold 0.05. It is seen that Manifold-Rich outperforms Manifold-Cosine with improvements of 309.6%, 178.4%, 175.2% with respect to P@10, P@20, P@30, which indicates that the manifold structure leant from rich features better benefits the tweet rank ing than being empirically determined on a single content similarity. It worth noticing that with the statistical signif-icance testing of t-test, the p-value is less than 0.01, which indicates that our approach outperforms others significantly. It is seen that in terms of AUC value, our approach receives much better results than the ranking models in Luene. Especially compared with Lu-BM25, th e AUC improvement of Manifold-Rich is 11.4%. The AUC metrics of manifold approaches are close to each other. Though the ROC curve of RankSVM gains a little more AUC value than that of Manifold-Rich, considering the impressive improvements on precision, our approach is still reliable. 5.5 Effectiveness of Rich Features To show the effectiveness of the rich features, we conduct a set of experiments with some selections of features in our approach, such as time locality feature and intrinsic features. Traditional ranking approaches mainly rely on the con-tent similarity between document and query for ranking. Thus we implement Manifold-Content to evaluate the performance of our approach only with con-tent feature without an empirical threshold as Manifold-Cosine does. We use all the content features in Table 3 to measure the content similarity. To evaluate the effectiveness of time locality feature for context awareness, we then use both content features and time locality feature in Table 3 to construct the manifold structure, and compare it with Manifold-Content. This version is denoted as Manifold-Content-Context .

The comparisons between different feature selections of our approach are demonstrated in Table 5. The cells of  X  X ncr(%) X  give the increasing percent-ages of Manifold-Rich comparing to others. Compared with Manifold-Content, Manifold-Rich achieves improvements of 33.3%, 41.9% and 40.0% with respect to P@10, P@20 and P@30. It shows that instead of only using content similarity, with rich features to construct the manifold structure, the ranking results are much better. Comparing Manifold-Content-Context with Manifold-Content, we find that with time locality feature take n into account for context awareness, Manifold-Content-Context achieves promising improvements of 22.2%, 24.7% and 18.6% on P@10, P@20 and P@30 respectively, which indicates that the time locality feature has somehow captur ed the missing context of tweets and is valuable for constructing the manifold. Therefore, by considering both content and time locality features, we can addres s the criteria of content relevance and context awareness simultaneously for ranking tweets.
 In this paper, we employ rich features to construct manifold structure on tweets in a supervised way and then rank tweets on it. The similarities between query and tweets or tweets themselves are estimated from different views in terms of each feature, resulting in h eterogeneous structures, which are then combined to model the objective function. Especially, by combining content similarity and context similarity together, we can addres s the criteria of content relevance and context awareness simultaneously. A learning algorithm is designed to solve the model to minimize the loss of the labeled ranked tweets. Experimental results demonstrate that our approach outperforms the ranking models in Lucene sig-nificantly and achieves higher precision than RankSVM trained on the common relevance features. In addition, we experimentally show that manifold structure learnt from rich features better benefits the ranking than being determined em-pirically only on content similarity.
 Acknowledgments. Thanks a lot for the supply of corpuses from TREC Mi-croblogging. This paper is partially s upported by National Grand Fundamental Research 973 Program of China (No. 2012CB316303, 2013CB329602), National Natural Science Foundati on of China (No. 61202213, 61202215, 61173064, 61173008, 61232010), Projects of Development Plan of the State High Technology Research (No. 2012AA011003), Beijing nova program (No. Z121101002512063).
