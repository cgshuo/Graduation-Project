 While significant strides have been made on efficient association rule mining, the usability of mining systems woefully lags behind. In particular, the usability of rule mining systems is limited by the lack of support for interactive exploration of the relationships among rule results produced with various parameter settings. Based on a novel parameter space-driven approach, our proposed F rame-work for I nteractive R ule E xploration ( FIRE ) addresses the usabil-ity shortcoming. FIRE features innovative visual displays and ef-fective interactions that enable analysts to conduct rule exploration at the speed of thought. Particularly, the parameter space view (PSpace) displays the distribution of rules produced for diverse pa-rameter settings. This not only facilitates user parameter selection but also empowers analyst X  X  to understand rule relationships in the parameter space context. Our user study with 22 subjects estab-lishes the usability and effectiveness of the proposed features and interactions of FIRE using benchmark datasets. Overall, this re-search encompasses significant contributions at the intersection of data mining, knowledge management and visual analytics.
 H.0 [ Information Systems ]: General Association Rules, Interestingness Parameters, Visual Mining
Mining of associations and correlations from huge data sets is critical for applications ranging from market basket analysis [2], bioinformatics to intrusion detection and web usage mining [17]. Existing rule mining algorithms [2, 10, 22] tend to be compute-intensive, rendering even their fast implementations [4] unfit for  X  This patent pending work was partly supported by the National Science Foundation under grants IS-0812027, CCF-0811510 and IIS-1117139.
 interactive analysis. Mining systems with delayed response times risk losing a user X  X  attention and, more importantly, are often unac-ceptable in mission critical applications. Over the years, significant focus [1, 4, 15, 18, 22] has thus been placed on addressing the per-formance challenge. Recent experiments [15] using IBM Quest [2], webdocs [17] and other benchmark data sets demonstrate that the preprocess-once-query-many solutions [15, 18] can offer near real-time responsiveness due to preprocessing and indexing. This near real-time responsiveness lays the foundation for offering speedups sufficient for interactive rule exploration.

While significant strides have been made on performance, us-ability of rule mining systems has received little attention [3,11]. In particular, the usability of these systems is limited due to the lack of support for interactive exploration of relationships among rule results produced with various parameter settings. Unfortunately, sense-making of rulesets extracted from a data set is not the focus of existing rule mining systems [3, 9, 11, 15, 18]. Thus, usability of rule mining systems continues to be the limiting bottleneck hin-dering their adoption for sense-making in real-world applications as further described below.
The challenges hindering the usability of rule mining systems can be summarized as below.

Lack of parameter recommendations. The distribution of fre-quent itemsets majorly differs from data set to data set. Yet an-alysts wanting to explore different data sets may not be aware of the appropriate parameter settings required to obtain the rulesets of interest from each and every data set. While too high parameter settings may result in no rules being discovered, if the parameters are set too low, then analysts may be faced with an overwhelmingly large number of rules being extracted. While some rule visualiza-tion techniques have been proposed [3, 9, 11], they do not provide a comprehensive parameter space-driven interactive paradigm for rule mining. Neither do they provide recommendations to guide analysts through appropriate parameter selection and refinement.
Lack of insights into rule relationships. Redundancy relation-ships [1] among rules provide analysts with insights about which rules are rich in significance or information content. For instance, those rules that cover other rules (rendering them redundant) based on their antecedents and/or consequents are typically considered more important than redundant rules. Beyond manual sifting, ana-lysts using existing systems [3, 9, 11] cannot gain such insights into rule relationships.

Lack of pareto-optimal parameter selections. Finding the top-k rules from a dataset is a commonly sought after feature. Existing systems [3, 9, 11] can only extract top-k rules based on one param-eter (either support or confidence) at a time. However, certain rules may have high support yet low confidence, and vice-versa. Thus, employing a 2-dimensional combination of support and confidence for top-k rule extraction is yet another useful feature that has the potential to improve the usability of interactive mining systems.
Lack of support for ruleset comparisons. For a data set of in-terest, analysts would like to discover parameter settings that pro-duce rules deemed interesting by the analysts. Yet when using existing systems [3, 9, 11], analysts must go about a tedious and time-consuming trial-and-error process of parameter selection in-terleaved with sifting through the extracted rules to discover gen-uinely interesting ones. Given two distinct parameter settings, sup-port for evaluating the relationship between the rulesets extracted using these two settings can be tremendously useful in this context.
Insufficient support for interactive rule filtering. Interactive rule filtering is essential for analysts wanting to explore the rules containing the itemsets matching their interest, e.g., about a par-ticular product or a stock ticker. Further, filtering is also useful in situations when even high parameter settings produce overwhelm-ingly large numbers of rules. Existing constraint-based mining solutions [5, 14] take the first important step towards usability by pushing constraints into the rule mining algorithms. Unfortunately, these solutions are ill-suited for interactive mining, as even the fastest among these current online mining algorithms [4] have un-acceptably high response times for even moderately sized data sets.
Therefore, development of an interactive data mining technol-ogy, capable of not only answering mining requests but also provid-ing parameter-tuning recommendations together with support for improved sense-making of rules to overcome the above challenges, is imperative for effective support for decision making applications.
Based on a novel parameter space-driven approach, we now in-troduce our proposed F ramework for I nteractive R ule E xploration (FIRE) . FIRE features innovative visual displays and interactions to enable analysts to conduct rule exploration at the speed of thought. Overall, this research work encompasses contributions at the inter-section of data mining, knowledge management and visual analyt-ics as described below.  X  We propose a novel parameter space-driven rule exploration framework, called FIRE . FIRE abstracts rule exploration at two layers of abstractions, namely, the overall parameter space view ( PSpace ) and the detailed rule space view ( RSpace ). Linkage be-tween PSpace and RSpace permits drill-down and ruleset compari-son (Sec.2).  X  The key innovation here is the PSpace view which displays the overall distribution of rules within the space of interestingness pa-rameters (such as support and confidence). Salient features of the PSpace view include (a.) parameter recommendations via stable region abstractions; (b.) rich insights into region-wise rule cardi-nality; (c.) capture of rule redundancy relationships; (d.) rule car-dinality skyline . The RSpace view enables analysts to explore the details of particular rulesets within the selected regions (Sec. 3).  X  Our user study evaluates the usability and effectiveness of var-ious proposed features of the FIRE framework over several bench-mark datasets. The user study provides clear evidence that our pro-posed FIRE framework is efficient and effective in helping analysts to understand rule distribution over the parameter space by provid-ing parameter recommendations and to gain rich insights into the rule relationships (Sec. 4).
Here, we describe the parameter space model that forms the foundation for our interactive mining framework and then overview the FIRE framework.

The core principle behind our interactive rule exploration frame-work is the preprocess-once-query-many (POQM) paradigm [1], i.e., in an offline step, (a.) extracting all rules from a dataset that satisfy a low primary support 1 and, then (b.) compactly indexing the large number of extracted rules for subsequent interactive rule exploration by analysts. This parameter space-driven approach that we adopt from [15] forms the foundation for the effective manage-ment and exploration of mined rulesets with near real-time respon-siveness.

In the context of rule mining, the parameter space consists of a two-dimensional space of support and confidence . A parametric location is a point within this space. One key insight is that even for a huge number of rules, many rules may map to the same location and thus can be compactly indexed by their location.

Stable Region Abstractions. An important observation that drives our parameter space-driven approach is that for many real-world datasets several settings on the parameter space either con-tain no rules at all or vice versa the same set of rules may be valid across a large range of diverse parameter settings. In fact, the pa-rameter space can be divided into several regions, which we hence-forth call stable regions . The ruleset valid for any possible para-metric location within a stable region remains unchanged, whereas rulesets valid for two locations not in the same stable region are guaranteed to be distinct. Stable regions form our coarse granu-larity abstractions for storing and managing rules. In an offline step, we partition the parameter space into a finite number of non-overlapping stable regions meeting the above properties.

Rule Redundancy Resolution. Redundancy relationships among rules can be leveraged to filter out redundant rules for presenting succinct query results to users. Two types of redundancies are de-fined in [1], namely, simple and strict . In [15] we designed algo-rithms that effectively precompute rule redundancies in the context of the parameter space. To facilitate interactive redundancy reso-lution, we abstract rules into stable regions and store compact rule redundancy information for the rules.
Our FIRE framework proposed in this work manages the rule-sets using the FIRE index that compactly stores stable regions, rules and their redundancy information. A rich variety of analyt-ical queries can be processed over the FIRE index. The queries are broadly classified as rule mining, stable region and redundancy resolution queries [15].

The interactive user requests are supported via the FIRE visu-alizer (Fig. 1) that enables analysts to explore the stable region
Assuming that analysts are not interested in rules with support lower than the primary support [1]. abstractions of the parameter space model and the corresponding rulesets with ease -thus supporting effective visual analytics. The framework is composed of two views, namely, the PSpace view (left of Fig. 1) and the RSpace view (right of Fig. 1). The PSpace view displays the overall distribution of rules within the space, fa-cilitating parameter tuning and exploration at a higher level of ab-straction. The RSpace view provides a detailed view of each rules including the itemsets in its antecedent and consequent together with its support and confidence values. The requests are passed from the visualizer to the FIRE Engine for efficient execution. Below we describe the visual interactions for the two views.
Overview of the PSpace View. FIRE provides analysts with a novel abstract view of the distribution of rules within the parameter space called the PSpace view. As depicted on the left hand side of Fig. 1, the PSpace view presents rules in a two-dimensional plot of the stable regions within a space of support (x-axis) and confidence (y-axis) dimensions. Depending on the distribution of rules within the two-dimensional space, datasets may differ in number, size and density of the stable regions. Two such examples are shown in Fig. 1 (left) depicting the rule distribution for the Chess data set and Fig. 2 depicting that for the Mushroom data set. Both are benchmark data sets taken from UCI Machine Learning Repository [19]. This offers an overview of the complete rule space driven by a parameter-centric perspective.
 Stable Region Abstractions For Parameter Recommendations. For a dataset with a sparse distribution of rules in the parame-ter space, often despite submitting several successive mining re-quests with distinct (minsupp,minconf) input parameter values, a rule miner may repeatedly return the same set of rules due to the sparse population of rules. When using an existing rule miner, the analyst must progress through a frustrating trial-and-error to finally get a new set of rules. When using the PSpace, the analyst can in-stead explore the parameter space by clicking through different re-gions and every time be guaranteed to receive a distinct ruleset for investigation. Thus, FIRE saves time and effort by recommending which next parameter settings will cause a difference in the output. In FIRE, analysts can navigate through regions by both indirectly entering (support, confidence) values in the control panel textbox (Fig. 1) or by directly clicking on the PSpace view.

Rich Insights into Region-wise Rule Cardinality. To provide rich insights into the density of rules within different regions, we visually mark regions with colors denoting cardinality. Fig. 1 (left) and Fig. 2 show two example datasets. Each shade of color denotes the count of rules within the region. Here, a lighter color depicts low count and a darker depicts high count. For this FIRE offers a variety of color palettes including variants of sequential, diverging amd qualitative ramps [20].

FIRE is able to display either all rules that appear in a region or only the rules unique to each region. For a dense dataset such as Chess or Mushroom [19], each parameter setting produces a huge number of rules. Suppose that an analyst changes the query input from (minsupp old ,minconf old ) to (lsupp,lconf) such that minsupp  X  lsupp and minconf old  X  lconf. Then the ruleset {R} ( lsupp,lconf ) would also contain the rules in the original ruleset satisfying (min-supp old , minconf old ). The change in the ruleset may be difficult to discern, especially if the analyst has to manually compare the two rulesets to identify the difference. Here, a delta output of rules is desirable which can be achieved in FIRE simply by selecting Unique option. While Fig. 2 depicts an All rules view for Mush-room, Fig. 3 shows the Unique rules view of the same.

Rule Redundancy Resolution. FIRE allows the analysts to optionally display only the non-redundant rules for a data set in the PSpace view. By excluding redundant rules, a succinct set of fewer rules is displayed for ease of analysis. In the context of the stable region abstractions interesting patterns can be observed when redundancies are excluded (Fig. 4) compared to when they are included (Fig. 3). In fact, any combination of unique/all and redundant/non-redundant rules can be displayed to observe differ-ent patterns at an overview level and further analyze them.
Rule Cardinality Skyline. Fig. 5 depicts the skyline view that provides recommendations beyond a single stable region boundary. Consider the situation when the analyst wants to find the top-k (say, 100) rules in a dataset. However, at times it is unclear which param-eter (support or confidence) to give priority to. Using the skyline selection the analyst can input the desired cardinality in the skyline cardinality textbox (say, 100). The skyline drawn on the PSpace view marks for each support value (x-axis), the confidence value (y-axis) having  X  100 rules. As lower confidence value will result in a higher number of rules, the regions below the skyline will con-tain  X  100 rules while those above the skyline will contain &lt; 100 rules. Therefore, the analyst can now select from among a range of support and confidence combinations that will all return the top 100 rules. Furthermore, the analyst can now quickly determine various observations about the data set. For instance, using the rule cardi-nality skyline in Fig. 5 we observe that no region contains  X  100 rules above support = 0.61.

Drill-down via PSpace-RSpace Linkage. In Fig. 6, when the analyst clicks on a single region (highlighted in black ) the actual rules within that region can be viewed in the RSpace View via cross links between the two views. This supports rapid drill-down into individual rules while still maintaining the global context via the PSpace view.

Two Region Ruleset Comparison. Analysts can also select two regions at a time to compare their rulesets. In Fig. 7 comparing two stable regions facilitates the analysis of how the change in pa-rameter settings affects the output. Region A is selected with a click (highlighted in black ) and region B is selected with shift+click (highlighted in grey ). Through cross links, the RSpace view then will present a comparative display of unique rules within each re-gion and also the common rules shared among these two regions A and B, if any. Here, we see that regions A and B have 3 rules in common, whereas region A has 71 and region B has only 2 unique rules, respectively.

Assisted Navigation through PSpace Abstractions. Additional features such as cursor positions, optional grid line and zooming are provided to assist the analyst in navigating through the PSpace view. Some of these features can be seen in Fig. 6. In our early user interviews, we found that analysts may not be comfortable ini-tially in identifying the support and confidence of desired regions on the PSpace view. Therefore, we introduced the cursor position feature, namely, as the analyst moves the cursor over the PSpace, the current cursor position is displayed. In Fig. 6, the current cursor position is (0.741538,0.840108).

Tabular RSpace View. Rules can be displayed using a tradi-tional tabular RSpace view common to most mining tools as de-picted on the right hand side of Fig. 6. This tabular view provides detailed information about each rule. The antecedents and the con-sequents of each rule are separated into two columns. The support and confidence values are also displayed for each rule. The total number of rules within the selected region on the PSpace view is displayed at the bottom of the RSpace table. In case of an over-whelmingly large number of rules being displayed in the RSpace view, the analyst can filter the rules based on the antecedent and/or the consequent values using a conventional auto-fill control. In gen-eral this allows the analyst to determine which rules are prominent for a given attribute value. For example, in Fig. 8, the antecedent is filtered on veil-type = partial and the consequent is filtered on gill-spacing = close . We note that only 8 rules out of the original 74 rules (Fig. 6) satisfy the filter.
We conducted a user study with 22 subjects to evaluate usability and effectiveness of our FIRE framework as described below. User Study Procedure. The overall process was as follows: First, we explain association rule mining principles and our visualiza-tions to the subject. Then the subject performs a series of tests. The study on average took between 30 and 50 minutes per subject. Tools Compared. Our user study compares our FIRE visualizer to the cached association rule miner (CRM). CRM is a association rule miner based on the APRIORI algorithm [2] but with instant response time due to cached rules and meta-knowledge. CRM pro-vides users with a tabular view of rules and all functions offered by existing rule mining systems (e.g., WEKA [9]).
 Metrics of Evaluation. We measured both efficiency and accuracy of the subjects in accomplishing the tasks. For efficiency, we mea-sured the time consumed by each user for each task. For accuracy, we measured the % of correctly answered tasks by the subjects. Datasets. We chose two real datasets from the UC Irvine Machine Learning Repository [19], namely, chess and mushroom. The chess dataset is derived from the game step. The mushroom dataset con-tains characteristics of various species of mushrooms. General Method. Each subject was asked to perform all five tasks (T1-T5) described in Section 4.2. To avoid carryover effects and learned knowledge about a dataset, we counter-balanced the or-der of tasks, datasets and tools. The specific task assignment is shown in Table 1. For example, subjects 1-11 performed T1-T3 on chess dataset using CRM, and T1-T3 on mushroom dataset us-ing FIRE. On the other hand, subjects 12-22 performed T1-T3 on mushroom dataset using CRM and T1-T3 on chess dataset using FIRE. For T4 and T5, we switched questions and tools. For ex-ample, we asked subjects to find characteristics of edible mush-rooms using CRM and of poisonous mushrooms with FIRE. Thus, no "pre-knowledge X  problem will arise. In general, we avoid prac-tice and fatigue effects by randomizing the order of tools and tasks. In these task assignments, no carryover problems arise, as each sub-ject is only asked to finish a particular task on a given dataset using tools in a random order.
 Environment Setup. We conducted our experiments on a Win-dows 7 machine with Intel(R) Core(TM)i5-2410M CPU@2.3 GHz processor and 4 GB of RAM with a resolution of 1600 by 900. Our visualizations were displayed in a 1000 by 600 window.
 Study Population. We performed the user study with a population of 22 subjects. They have either computer science, computer engi-neering or mathematical sciences background. The user study was conducted on a one-to-one basis, i.e., tester to subject test.
As shown in Table 2, in stable region usage tests we asked the subjects to perform three different tasks T1-T3 using differ-ent tools and data sets, such that each dataset was tested for each visualization in a random order. The three tasks are designed to verify the ability of the subjects to explore the parameter space, to utilize the stable region abstractions and to compare rulesets. In filter/redundancy tests , we asked subjects to first filter on the antecedent of the rules and then remove redundant rules for mush-room dataset. Some users used FIRE first and CRM next, and vice-versa. The goal was to test the ability of subjects to use filter and redundancy removal features. In the skyline view tests we asked the subjects to find top-k rules from the mushroom dataset alter-natively with FIRE and CRM. The goal was to test if subjects can make use of the rule skyline cardinality.
Stable region usage tests. Subjects took much less time when working with FIRE, whereas they needed a significantly longer time using CRM (Fig. 9). This is because the tabular view does not provide any intuitive mechanism for subjects to accomplish the tasks. As shown in Figures 9.(a) and 11.(a), for test T1, subjects spent 9 secs on average using FIRE to get 100% accuracy while subjects used 62 secs on average with CRM to achieve the same accuracy. For T2, the minimum time spent was 2 secs using FIRE while using CRM required at least 26 secs. Yet FIRE was also bet-ter than CRM in accuracy (by 5%). For T3, while the maximum time spent with FIRE was only 55 secs, the maximum time spent with CRM reaches 255 secs. Accuracy-wise, the subjects using FIRE achieved 100% correctness while CRM only managed 80% correctness. Similarly, in Figures 9.(b) and 11.(b) for chess dataset, subjects took less time using FIRE than CRM to complete all three tasks. At the same time, they made less mistakes using FIRE than CRM. In particular, the accuracy of T1 using FIRE is 30% higher than the accuracy for CRM. This is because more than one rule ex-ists that satisfies the question in the chess dataset. Subjects tend to omit some rules resulting in this low accuracy. In contrast, FIRE is able to reveal the answer with 1 or 2 clicks.

Filter/redundancy + skyline view tests. In Figures 10 and 12 we show the time spent and accuracy for tasks T4 and T5, respec-tively. Again, subjects using FIRE spent less time to perform the tasks, yet were able to achieve better accuracy than subjects using CRM for the same task. More specifically, subjects used 29 secs on average with FIRE yet achieved near 100% accuracy for T4. The subjects using CRM, on the other hand, took 80 secs and reached only 84% accuracy.

In summary, averaged over all tasks, 92% of our subjects could perform the task correctly with FIRE while 82% of them could derive right answers with CRM. The results confirm that our FIRE technology is a win-win in terms of both efficiency and accuracy.
Parameter Space Exploration. Prior work has explored the space of parameters for handling parameterized database queries [6] and tuning database configuration parameters [8]. While most data mining queries are parameterized, selection of appropriate pa-rameters is often left to the analyst. [21] aims at helping analysts understand the relationship among clusters produced with differ-ent parameter settings for density-based clusters. We instead ex-plore the parameter space for data mining, in particular, for rule exploration. The closest to our proposed parameter space display is AssocExplorer [16] that proposes a scatterplot of rules on a 2-D space. However, they overlook the visual clutter problem that is common even if a moderate number of rules needs to be displayed. We tackle the clutter problem with our proposed stable region ab-stractions, zoom and granularity features.

Interactive Association Rule Mining. Hahsler et al. [3] present the R-extension package arulesViz which implements several visu-alization techniques to display individual rules. We instead focus on the higher-level of the overall space -not just visual display for single rules. Couturier et al. [7] propose an integrated framework covering both rule extraction and visualization of the mining pro-cess. It provides a guided exploration based on clustering of rules. Neither of these approaches provide support for understanding the distribution of rules within the space of interestingness parameters. Unlike some other work on interactive rule mining, a key contribu-tion of our work is its focus on evaluating the usability of our FIRE framework via a formal user study.

Online Association Rule Mining. Online mining techniques [1, 12, 13] only prestore intermediate values, namely, the frequent itemsets. More recently [15, 18] propose to store the final rule re-sults instead, thus achieving near real-time responsiveness. This lays the foundation for offering speedup sufficient for interactive rule exploration. However, sense-making of rulesets extracted is not the focus of existing rule mining systems [3, 9, 11, 15, 18].
In this work we designed, implemented and evaluated an inno-vative technology for interactive rule exploration called the FIRE framework. FIRE offers parameter recommendations and enhanced sense-making of rule relationships. Particularly, we propose the PSpace views that supplemented with innovative interactions en-ables analysts to effectively conduct rule exploration. We con-ducted a user study that demonstrates the usability and effective-ness of the FIRE framework using benchmark datasets.
