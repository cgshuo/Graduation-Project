 1. Introduction
With the massive growth of the Web, we have been confronted with a flood of information, and hence search engines have become one of the most helpful tools for obtaining desired information from the Web. The keyword-based search
The keyword-based search method requires users to input several keywords describing the search target and returns the search results containing the keywords.

In general, the keyword-based search determines the relevance of resources for query keywords mainly based on the the returned results preserve the semantic relationships among the keywords which users have intended when submitting  X  the desired laboratories and other irrelevant pages just contain some of the three keywords, such as  X  X 3C Semantic Web meanings in the relationships among keywords are ignored in the search. For example,  X  X esearch on X  implies some indirect evant pages have been pushed down in the ranked list.

We propose a semantic search framework to overcome such limitations of the traditional keyword-based search by enriching the search process with an ontology, which is one of the purposes of the Semantic Web. An ontology is a formal knowledge description of concepts and their relationships. The semantic relationships between resources and keywords could be extracted by traversing the ontology. The extracted semantic relationships can complement the keyword-based search method. Our semantic search framework extends keyword-based search by using ontologies, with the aim of finding resources relevant to query keywords through the semantic relationships. The semantic search makes hidden relationships recall of the search would be improved. Recently, Google has started to support a primitive semantic search based on the firmed by this attempt.

This semantic search would be useful when a sufficient ontology associated with the search domain is prepared in ad-vance. As more resources and their relationships in the domain become well defined, more comprehensive semantic search type (i.e., a class in an ontology) of the desired resource such as Publication or Professor .
Fig. 1 shows the overall search process in our framework. Before searching documents (e.g., biography or web page), the { k ments corresponding to the returned URIs.

Since we consider the semantic relationships between the resources and the query keywords in the search process, the resources by considering the following three major relevance criteria: the number of important relationships between re-kinds of semantic relationships from resources to query keywords in an ontology, it would take much time to examine the search space using the length and importance of the semantic relationship. Our semantic search may generate many results the top-k results without examination of the entire result set.
 The main contributions of our work are summarized below:
A weighting method for semantic relationships: We propose a weighting measure for semantic relationships which assigns a the weight is automatically computed without the intervention of domain experts. Thus, the weighting method could be applied to large and complex ontologies.

A novel ranking method: We suggest a novel ranking method considering the number of meaningful semantic relation-ships, the coverage of the keywords, and the discriminating power of the keywords. These are fundamental and important in the semantic search. The accuracy of our ranking method is proven by the experiments comparing with the existing ranking methods based on an ontology.
 length and weight of the semantic relationship. Our pruning technique reduces the search space by average 40 X 45% in the experiments. In addition, we construct an extended inverted index,  X  X eyword index X , in advance, to avoid the expensive traversal of a large ontology instance graph during the answering process. Furthermore, we enhance the efficiency of the top-k answering by using Threshold Algorithm based on the keyword index.
 an ontology and defines the semantic search. Section 4 describes the semantic search framework. Section 5 introduces a weighting method for semantic relationships and a new ranking method for the semantic search. Section 6 presents a prun-ing method to improve the accuracy and efficiency of the semantic search and a top-k query processing method. Section 7 shows the empirical evaluation of our search method. Finally, in Section 8 , we conclude our work. 2. Related work
On the Semantic Web, the semantic relationships among resources can be various and complex. Anyanwu and Sheth (2003) formalized the various complex relationships between resources. Anyanwu et al. (2005) proposed a ranking method, methods focus on the retrieval and ranking of relationships between a given single pair of resources.
Recently, some techniques considering the semantic relationships among resources expressed in an ontology in order to improve the accuracy of the keyword-based search have been conducted. Li et al. (2007) addressed the problem of the cur-rent keyword-based search (i.e., keywords-isolated pages which only include the query keywords but have no relationship with the query in the context) due to the ignorance of relationships among keywords. They introduced a relation-based search engine, OntoLook. OntoLook constructs a concept-relation graph consisting of concepts (i.e., classes) of keywords and all semantic relationships among them. Then, OntoLook finds matches of the graph from the ontology database and re-turns URIs and values corresponding to the nodes in the graph as an answer. OntoLook reduces many keywords-isolated pages by considering relationships among keywords. However, OntoLook demands a tedious work to input a query since tions) from the concept-relation graph, but the algorithm does not consider the semantics and importance of the arcs. Besides, OntoLook does not provide any ranking method to rank retrieved results.
 Castells et al. (2007) presented an information retrieval framework using an ontology in order to improve the accuracy. document are weighted by an adaptation of the tf*idf measure. For a user query, the annotations matched to the query are documents are ranked by an adapted vector-space model which assigns higher scores to the documents containing many high weighted annotations. In this work, the relationship between the annotations was used to find the relevant document through the ontology query processing, but the differences among the weights of the relationships were not considered.
In the field of the ontology query processing, Stojanovic et al. (2003) proposed a ranking method for the results of an importance of the relationships from a resource to a keyword to determine the relevance of the resource against the keyword. The different weights of relationships according to the semantic diversity should be reflected to determine the importance to determine the relevance are not effectively handled.
 The keyword-based search in various data models has also been extensively studied in the literature. Representatively, in the XML model. However, these methods also do not consider the various features of links such as the specificity and relevance models instead of the links.

In order to determine the weight of a semantic relationship, the importance of the components composing the semantic tures of important classes and properties and designs a ranking model based on the features. The ranking model has the reverse mechanism of PageRank, and the weights of classes and properties reinforce each other in the ranking model in directly applied to the weighting measure for semantic relationships. 3. Preliminaries 3.1. Data model
An ontology is composed of a schema and its instance to represent knowledge description of concepts and their relation-of the schema, class instances 1 and property instances are declared according to the schema.
For example, Fig. 2 shows a part of the ontology describing resources and their relationships in a research domain. The as writtenBy . In an instance of the schema in Fig. 2 (b), the resource prof is an instance of the Publication class, and pub 1 writtenBy prof say that there is a semantic relationship between two resources if they are connected via properties.
In this study, we consider an ontology represented in a subset of OWL-Lite which includes RDF features, object/data-type property, and inverseOf property. These features are sufficient to capture the semantic relationships among re-sources needed in our method. Since we do not consider more powerful ontology languages like OWL-DL, our semantic search method cannot extract and use hidden semantic relationships which would only be revealed by inferences. On the other hand, since our semantic search method requires only the basic features of the ontology language, it has fewer are explicitly identified in the ontology, and a property has one domain and one range. The formal definitions for the ontology are as follows: p ( d , r ) 2 P . For each property p ( d , r ) 2 P , d is the domain and r is the range of p . instances of p ( d , r ) 2 P . For each e ( v i , v j ) 2 E , e ( e . All resources are explicitly identified by URIs.
 property p includes the set of instances of its sub-properties in the property hierarchy.
Definition 3 ( Semantic Path ). A semantic path sp is a sequence of properties p
An instance graph G confined to schema S can include matches of a semantic path in S . A match of the semantic path is a sequence of property instances, which is called semantic path instance .

Definition 4 ( Semantic Path Instance ). For a semantic path sp = p is a semantic path instance of sp if e i ( s i , o i ) 2 [ p [ sp ] denotes the set of all semantic path instances of sp .

In Fig. 2 , writtenBy 1 ( Author , Publication ) hasTitle ( Publication , String ) s a semantic path, and writtenBy tle ( pub 1 , X  top k ... Web  X ) is a semantic path instance
In an instance graph, the existence of a semantic path instance from the semantic path instance. 3.2. Semantic search
In order to complement the traditional keyword-based search, the semantic search considers the type of the desired re-source and the semantic relationships among resources.
 related to the set of keywords K through the semantic path instances.

In fact, data values are leaf nodes in an instance graph and may contain some query keywords. Since the answer of the get of the semantic search.
 path instances from a to s including any query keyword k .
 archy as the desired type T . It means that all resources in the instance graph belong to the search scope. 4. Semantic search framework
In this section, we briefly explain the semantic search framework. Fig. 3 shows the main components of the semantic
Input: It is a query ( T , K ), where T is the desired resource type and K is the set of keywords.
Semantic Relationship Extractor: This module finds the possible semantic relationships between the target resources and the query keywords. It extracts the set of semantic paths SP from T to K from the ontology schema. It expands a basic keyword query to a form of semantically enhanced query (i.e., a set of semantic relationships) based on the ontology schema. Thus, this module corresponds to the query expansion component in the traditional IR system. The details of the extraction process and a strategy to prune unnecessary semantic paths are presented in Section 6.1 .
Ontology Traversal Module: This module retrieves the resources that match the user query by traversing an ontology words in K through SP from an instance graph. This module corresponds to the query matching component in the tradi-tional IR system.

Semantic Search Ranker: This module is in charge of ranking resources in the order of their relevance. For each resource r i 2 R , it computes Rank ( r i , K ) which is the relevance of resource r as the relevance criteria for the semantic search are presented in Section 5
Output: It is a list of ranked resources in descending order of Rank ( r the highest relevance scores is explained in Section 6.2 . 5. Semantic search ranking
Which results are more relevant to the user query? Intuitively, the relevance of a candidate result can be judged based on the semantic relationships between the result and the query keywords. To determine the relevance of a result, we con-sider the following criteria:
The number of meaningful semantic paths: A resource, which has many semantic paths directed to query keywords, is more relevant. In addition, the importance of the semantic paths should also be considered.

The coverage of keywords: Users describe what they want to find by using query keywords. Therefore, a resource which reaches to as many query keywords as possible through semantic paths is more relevant.

The discriminating power of keywords: A resource having semantic paths to query keywords, which distinguish relevant resources from others, is more relevant.

By using these relevance criteria, we design a new ranking method for the semantic search. In the following sections, we will present the measures for these criteria and explain how to reflect the criteria in our method. 5.1. Weighting method for semantic paths
The semantic path which can effectively distinguish the relevant resources from others is a meaningful semantic path for the semantic search. According to this, we propose a weighting measure for semantic paths. 5.1.1. The weight of a property
A semantic path consists of one or more properties. Therefore, in order to measure the weight of a semantic path, we bine these two factors to complement each other.
 criminating power of a property to determine the weight of the property.
 In information theory, the information content gained by the occurrence of an event x can be quantified as: power of a property.
 Based on information theory, the amount of information gained by the existence of a property is calculated as follows: a property p ( d , r ) 2 P is computed as follows: Thus, the amount of information contained in a property p ( d , r )is wrote some publications. The amou nt of information contained in interestedIn and writtenBy This amount of information contained in a property represents the discriminating power of the property.
The discriminating power of a property is not sufficient to determine the importance of the property. For example, it tends to underestimate the actual importance of hasName compared with other properties of Person such as memberOf since every person has its own name while only some people are members of a research group. However, hasName can identify a person by a given name, but memberOf cannot identify a person by a given research group. We consider this identification power of a property to determine the weight of the property.

In information theory, the amount of information that one random variable contains about another random variable is measured by Mutual Information ( Cover, 1991 ). To measure the identification power of a property about its object given a subject, and vice versa, we adapt the mutual information measure.
 The mutual information between the domain d and the range r for a property p ( d , r )is respectively at the same time. Thus, for p ( d , r ), pr  X  s  X  X  by the similar way.

For example, the mutual information between Author and Publication for the property writtenBy mation between the Person and String for the property hasName in Fig. 4 can be obtained as follows:
In case that there are many property instances, no doubt that the cost of computing the mutual information exactly will be prohibitively expensive. Therefore, we compute the mutual information approximately.
The probability of picking an instance of property p ( d , r ) from [ p ( d , r )] is objects. pr ( o ) is also obtained in a similar manner. Thus, the mutual information can be estimated as: where sub ( p ( d , r )) = { v i  X  e ( v i , v j ) 2 [ p ( d , r )]} and obj ( p ( d , r )) = {
For example, the approximated MI ( writtenBy 1 )is log 2 1 combination with the discriminating power of a property compensates this bias.

As mentioned before, each of them alone is not sufficient to determine the weight of a property, and they are complemen-multiplication. We choose a weighted summation as a combining method for adjusting the influence of each factor on the overall weight.

By using Eq. (1) and (2) , we can compute the weight of a property p ( d , r ) as follows: where 0 6 a , b 6 1 and we normalize I and MI to be in the range [0,1] by
MI  X  p  X  min p 2 P MI  X  p  X  max 5.1.2. The weight of the semantic path
A semantic path is composed of one or more properties. We obtain the weight of the semantic path by combining the a semantic path gets longer, the relevance between the source and the destination decreases. Therefore, the addition and we normalize the property weight to be in min p 2 P w  X  p  X  effect of the path length. The weight of semantic path sp is computed as follows: A semantic path instance has the weight of its corresponding semantic path.

Consequently, in contrast to previous methods, the weight of a semantic relationship can be computed without the inter-vention of a domain expert in our work. 5.2. Ranking formula for semantic search ber of meaningful semantic path instances, the coverage of query keywords, and the discriminating power of query key-words. In this section, we propose a novel ranking method considering these three criteria. 5.2.1. The number of meaningful semantic path instances
We regard the resources related to query keywords through more meaningful semantic path instances as more relevant tained by Eq. (4) .

The relevance of a resource a for each keyword in K according to the number of meaningful semantic path instances can be computed as follows:
However, the relevance measure presented in Eq. (5) has a problem. According to Section 5.1 , as the number of property resource can be greater than that of a relevant one.

Consider, the following two semantic paths and the corresponding weights: sp 1 : hasTitle (Publication, String) sp 2 : writtenBy (Publication, Author) writtenBy 1 (Author, Publication) hasTitle (Publication, String)
In many cases, the number of semantic path instances of sp contain  X  X ml X  in their titles. However, the title of pub 2 more relevant to the keyword  X  X ml X  than pub 2 . However, R ( pub of semantic path instances of sp 1 for pub 1 is 1 and that of sp path instance is defined as follows:
Definition 6 ( Specificity of a semantic path instance ). Given a semantic path instance ip = e ... , p m ( d m , r m )], the specificity of ip , spec  X  ip  X  X  property p i whose subject is s i .

In the above example, the specificity of a semantic path instance of sp specificity of a semantic path instance of sp 1 starting from pub Considering the specificity of a semantic path instance, we modify the relevance measure in Eq. (5) as follows:
As applying the specificity of a path instance, the maximum relevance score through a particular semantic path is the weight of the semantic path. For the previous example, R ( pub object for a given property.

Basically, our relevance model is based on the weight of the semantic path determined by the information theoretic framework, and in order to solve the occasional side effect caused by the presence of many meaningless semantic path in-stances, the heuristic using the specificity of semantic path instances is applied. 5.2.2. The coverage of keywords
Generally, a user prefers results covering all query keywords. To reflect this preference, we design a method to measure the coverage of query keywords which is derived from the extended boolean model ( Salton et al., 1983 ). point of a . The relevance considering the keyword coverage Cov ( a , K ) is computed by
We use the L p distance and normalize the value into [0,1]. NR ( a , k tics among keywords. On the other hand, when p = 1, Eq. (7) represents OR-semantics ( Salton et al., 1983 ). tive for combining multi-keyword relevances. 5.2.3. The discriminating power of keyword
A resource having semantic paths to discriminating keywords is more relevant than a resource having semantic paths to undiscriminating keywords.
 idf ( Salton and McGil, 1986 ). The inverse resource frequency of a keyword k where j DV j denotes the total number of data values and j DV
We define the discriminating power of a keyword k i , D ( k
The discriminating power of a keyword in Eq. (8) represents the weight of a keyword reflecting the importance of the keyword to determine the relevance. Thus, to make the final rank formula, we combine D ( k (7) as follows: tioned in Section 3.2 are fully reflected in Eq. (9) . 5.2.4. An example of ranking query results properties in Table 2 .

Let X  X  obtain the relevance score of prof 1 for semantic query h Professor ,{ X  top-k  X , X  Web  X  X  i . prof stances from ip 1 to ip 5 as shown in Table 1 . The relevance score of prof (1) The relevance score for each keyword is calculated by Eq. (6) .

Assume that the maximum R ( r m , X  top -k  X ) is 0.6 and the maximum R ( r and NR  X  prof 1 ;  X  Web  X   X  0 : 9  X  0 : 816 0 : 9 . power of each keyword is D ( X  top-k  X ) = 1 and D ( X  Web  X ) 0.5. (3) Based on the relevance for each keyword and the discriminating power of the keywords, the final relevance score of prof 1 is calculated by Eq. (9) with p =3: 6. Enhancement in efficiency of semantic search
In this section, we explain how to improve the efficiency in the semantic relationship extraction and the top-k result retrieval. 6.1. Semantic relationship extraction
As mentioned in Section 4 , the semantic relationship extraction module decides the semantic paths to be examined in the tic paths are sp 2.1 , sp 2.2 , sp 3.1 , and sp 3.2 .
 same as the destination class (i.e., a cycle), the extraction is not finished. Therefore, some constraints are required. result than short paths. Hence, we restrict the length of semantic paths by using a threshold TH
TH l is dependent on the domain.

Weight Threshold: Even after pruning with the length of the semantic path, many meaningless semantic paths may re-we can prune the semantic paths with a weight smaller than a threshold TH
The weight threshold should be determined according to the data set. Thus, we reflect the weights of properties in each semantic path to TH w . Since the weight of a semantic path is computed by Eq. (4) , we make the weight threshold TH on Eq. (4) .

TH w is computed by aggregating the weights of properties in each position of semantic paths. Many semantic paths tend to have a common suffix since the types of properties having a particular keyword are limited. Therefore, to compute TH align the properties in semantic paths in inverse order.

For a semantic path sp j with length ( sp j ) 6 TH l , let p semantic path sp 4 in Table 3 , p 41 is hasTitle , p 42 is writtenBy
To obtain TH w , the representative weight tw i for the ( length ( sp length ( sp j ) 6 TH l is required. The maximum, average, minimum functions can be used to compute tw use the maximum function which shows a better performance than others. Thus, tw where p ji is the (length( sp j ) i + 1)th property in sp Consequently, the weight threshold TH w is computed as follows:
In case that max ( length ( sp j )) h TH l , tw i = 1 for i i max ( length ( sp
For example, consider the following three semantic paths: sp 1 : writtenBy 1 ( Author , Publication ) hasTitle ( Publication , String ) sp 2 : writtenBy 1 ( Author , Publication ) cite 1 ( Publication , Publication ) hasTitle ( Publication , String ) sp 3 : memberOf ( Person , ResearchGroup ) performedBy 1 ( ResearchGroup , Project ) hasName ( Project , String )
The semantic path sp 1 and sp 2 represent the relationships between Author and Publication ( X  X  title) and sp between Person and Project ( X  X  name) .If W ( sp 1 )&gt; TH evant to a keyword, most publications which should be examined are covered by sp sp is ignorable. However, if projects related to the keyword can be covered by only sp missed by pruning of sp 3 . Thus, in order to preserve the important semantic path like sp paths according the following pruning rule.

Pruning Rule: A semantic path sp i (= p i 1 ( d i 1 , r i 1 semantic path sp j (= p j 1 ( d j 1 , r j 1 ) p jm ( d jm and (3) r jm 1 is equal to r in 1 or a super class of r in 1 relevant to the query, it is likely to be related to the query keywords through a more important semantic path than the the pruning of such semantic paths effectively reduce the search space.
 6.2. top-k Result retrieval Then, we prune meaningless semantic paths among them by using the pruning technique mentioned in the previous section.
The construction of the keyword index is a time-consuming task. However, once the keyword index has been constructed, instance graph for every query request.
 than others on the assumption that the overall scoring function is monotonic. At the same time, in order to immediately for the resource. The process is terminated when no resource having a higher score than the minimum score of the top-k sources which do not belong to T are filtered out. Thus, scanning the entire index lists can be avoided. 7. Experiments
In the experiments, we evaluate the accuracy of our search method in comparison with existing methods by using real of our pruning method. Finally, we evaluate the efficiency of the top-k retrieval using the keyword index. 7.1. Data sets and queries
We construct two kinds of ontologies from two real datasets: DBLP data ontology contains 2,617,977 class instances and 12,222,558 property instances.

For an effective evaluation of our ranking method, we need ontologies having various classes and properties as well as many instances since some of our measures are based on self-information and mutual information which are defined as we use the DBLP and IMDB ontologies as data sets in our experiments.
 order to evaluate our ranking method and show the difference between our approach and other methods. The criteria for of keywords ranging from 2 to 5.
 of search results. 7.2. Ranking methods
We compare our ranking method with other existing methods which also consider an ontology in a search. One is proposed by Stojanovicetal.(2003) ,whichisindicatedby RQR inthispaper.Theotherisproposedby Rochaetal.,2004 ,whichisindicated by HAS .Additionally,wecomparewiththebasickeyword-basedsearchenginesprovidedintheDBLPandIMDBsitesinorderto andIMDBsearchwheneverpossibleinplaceofthetypeconstraintofaqueryinoursemanticsearch.Weusethe X  X efinedbytype option in the DBLP search engine, and we use a list box to select the search scope in the IMDB search engine. domain experts. Since we have no basis for judgment to decide the weights, we determine the semantic weights of proper-ties in HAS by using our weighting measure for properties (i.e., Eq. (3) ).
 old ( TH w ) according to the pruning rule in Section 6 . SSR-T denotes SSR applying the pruning.
We perform the experiments on AND-semantics. Other experimental environments such as the storage of the ontology and the semantic search process are common. In order to restrict the search space, we use TH 7.3. Metrics following well-known metrics in the information retrieval field ( Manning et al., 2008 ): Precision: P  X  j A \ RA j j A j , where A is the set of retrieved results and RA is the set of relevant answers. compute recall as follows: If  X  RA  X &lt; k , the recall R  X  Mean Average Precision: MAP  X  at cut-off k , and rel ( k ) is 1 if the k th result is a relevant one, zero otherwise.
Additionally, in order to measure the effectiveness of pruning the search space, we count the number of semantic paths and the number of resources traversed by SSR and those by SSR-T .
 time for the top-k answering for each query.
 7.4. Experiment results 7.4.1. Accuracy of ranking method
Tables 7 X 10 present the accuracy (i.e., Precision, Recall, F-Score, and MAP) of four ranking methods and the baseline (9) .

We can see the effectiveness of the semantic search using an ontology by comparing the results with those of the DBLP between the target resources and the query keywords in searching and ranking. The semantic search method can retrieve methods. On the other hand, in the IMDB database, the indirect semantic relationships among resources play an important semantic search methods access the answer (i.e., an actor who takes part in romantic-comedy films) through the semantic do not contain the query keywords in the IMDB database. In our experiments, SSR (-T) achieves 6.9 X 16.7% improvement in the accuracy (i.e., F-Score) for DBLP and 49.5 X 58.2% improvement for IMDB.

The proposed weighting measure for semantic paths is designed to reflect the different importance of the paths to dis-criminate the relevant resources from others. SSR (-T) and HAS using our weighting measure take the importance of each semantic path into account in ranking resources. Consequently, SSR (-T) and HAS outperform RQR in general. In addition, forms them. In summary, SSR (-T) provides 11.6 X 22.1% improvement for DBLP and 14.6 X 24.5% for IMDB compared with
RQR and 8.5 X 21.8% improvement for DBLP and 4.8 X 15.8% for IMDB compared with HAS . Furthermore, we consider the order We can see that SSR (-T) tends to present the relevant results in higher positions than other semantic search methods.
In the aspects of the keyword coverage and the discriminating power of keywords, HAS complies with the strict AND-(-T) uses an adapted extended boolean model weighted by the discriminating power of keywords. Thus, SSR (-T) is more effective compared with other ranking methods for queries, where the number of keywords is large and the keywords with RQR as well as HAS .
 words of IQ 3 through several less meaningful semantic paths such as  X  X asGenre (Film, Genre) hasGenre most of queries.
 tically significant over all baseline approachs.
 terms which can most clearly describe the publication. Thus, we use words which can be found in the titles as query the other hand, the terms in the IMDB ontology are general words, often used in our ordinary life, and even implicit. to find the answer. Consequently, the overall performance for DBLP is better than IMDB. 7.4.2. Sensitivity study SSR (-T) uses several tunable parameters. Therefore, we observe the accuracy according to the values of the parameters. important to determine the weight of a property than the discriminating power factor (I). Thus, the accuracy of some queries decreases due to a small value of d as in IMDB of Fig. 6 (c). and we observe that the p value from 2 to 4 is sufficient to enforce the AND-semantics for most of queries in our experiments.
 7.4.3. The reduction of search space
Table 12 shows the effectiveness of the pruning in terms of the reduction of the search space. # SP and # PSP denote the number of semantic paths to be examined by SSR and that by SSR-T , respectively. # N and # PN indicate the number of re-sources to be traversed by SSR and that by SSR-T , respectively. R is the reduced portion of the total search space. tween publications or between a publication and an author. This feature makes a large number of semantic paths including pruned semantic paths such as  X  X asGenre (Film, Genre) hasGenre instances.

In conclusion, the pruning technique reduces the search space very effectively. However, the pruned semantic paths do improved. 7.4.4. top-k Retrieval cost top-k answering for each query. Experiments are conducted on an Intel (R) Pentium (R) 2.60 GHz CPU and 2 GB RAM running
Window XP, and all algorithms are implemented in Java using JBuilder. We set the size of the virtual memory for the exe-pends on the number of candidate results. Therefore, even though the DBLP dataset is smaller than the IMDB dataset, the to access resources about nine times greater than the average number of accessed resources for all DBLP queries. 8. Conclusions paths incur massive traversals in the ontology and even deteriorate the accuracy of the search. Moreover, we avoided the traversal of a large sized instance graph during a query time through the top-k answering utilizing Threshold Algorithm based on the keyword index. Through the experiments using real data sets, we observed that our ranking method provided the search space and even improved the accuracy. Finally, we observed the efficiency of our top-k semantic search processing.
 Acknowledgements
We would like to thank the editor and anonymous reviewers. This work was supported by the National Research Foun-dation of Korea grant funded by the Korean government (MSIP) (No. NRF-2009-0081365).
 Appendix A See Figs. 8 X 11 .
 References
