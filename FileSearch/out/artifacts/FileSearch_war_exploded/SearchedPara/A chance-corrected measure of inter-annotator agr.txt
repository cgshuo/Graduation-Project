 It is a truth universally acknowledged that an an-notation task in good standing be in possession of a measure of inter-annotator agreement (IAA). However, no such measure is in widespread use for the task of syntactic annotation. This is due to a mismatch between the formulation of the agree-ment measures, which assumes that the annota-tions have no or relatively little internal structure, and syntactic annotation where structure is the en-tire point of the annotation. For this reason efforts to gauge the quality of syntactic annotation are hampered by the need to fall back to simple ac-curacy measures. As shown in Artstein and Poesio (2008), such measures are biased in favour of an-notation schemes with fewer categories and do not account for skewed distributions between classes, which can give high observed agreement, even if the annotations are inconsistent.

In this article we propose a family of chance-corrected measures of agreement, applicable to both dependency-and constituency-based syntac-tic annotation, based on Krippendorff X  X   X  and tree edit distance. First we give an overview of tradi-tional agreement measures and why they are insuf-ficient for syntax, before presenting our proposed metrics. Next, we present a number of synthetic experiments performed in order to find the best distance function for this kind of annotation; fi-nally we contrast our new metric and simple accu-racy scores as applied to real-world corpora before concluding and presenting some potential avenues for future work. 1.1 Previous work The definitive reference for agreement measures in computational linguistics is Artstein and Poe-sio (2008), who argue forcefully in favour of the use of chance-corrected measures of agreement over simple accuracy measures. However, most evaluations of syntactic treebanks use simple ac-curacy measures such as bracket F 1 scores for constituent trees (NEGRA, Brants, 2000; TIGER, Brants and Hansen, 2002; Cat3LB, Civit et al., 2003; The Arabic Treebank, Maamouri et al., 2008) or labelled or unlabelled attachment scores for dependency syntax (PDT, Haji  X  c, 2004; PCEDT Mikulov  X  a and  X  St  X  ep  X  anek, 2010; Norwegian De-pendency Treebank, Skj X rholt, 2013). The only work we know of using chance-corrected metrics is Ragheb and Dickinson (2013), who use MASI (Passonneau, 2006) to measure agreement on de-pendency relations and head selection in multi-headed dependency syntax, and Bhat and Sharma (2012), who compute Cohen X  X   X  (Cohen, 1960) on dependency relations in single-headed depen-dency syntax. A limitation of the first approach is that token ID becomes the relevant category for the purposes of agreement, while the second ap-proach only computes agreements on relations, not on structure.

In grammar-driven treebanking (or parsebank-ing), the problems encountered are slightly differ-ent. In HPSG and LFG treebanking annotators do not annotate structure directly. Instead, the gram-mar parses the input sentences, and the annotator selects the correct parse (or rejects all the candi-In this context, de Castro (2011) developed a vari-ant of  X  that measures agreement over discrimi-nant selection. This is different from our approach in that agreement is computed on annotator deci-sions rather than on the treebanked analyses, and is only applicable to grammar-based approaches such as HPSG and LFG treebanking.

The idea of using edit distance as the basis for an inter-annotator agreement metric has previ-ously been explored by Fournier (2013). However that work used a boundary edit distance as the ba-sis of a metric for the task of text segmentation. 1.2 Notation In this paper, we mostly follow the notation and terminology of Artstein and Poesio (2008), with some additions. The key components in an agree-ment study are the items annotated, the coders who make judgements on individual items, and the an-notations created for the items. We denote these as follows:  X  The set of items I = { i 1 ,i 2 ,... }  X  The set of coders C = { c 1 ,c 2 ,... }  X  The set of annotations X is a set of sets X = In the case of nominal categorisation we will also use the set K of possible categories. The most common metrics used in computational linguistics are the metrics  X  (Cohen, 1960, in-troduced to computational linguistics by Carletta, 1996) and  X  (Scott, 1955). These metrics express agreement on a nominal coding task as the ra-agreement and A e the expected agreement accord-ing to some model of  X  X andom X  annotation. Both metrics have essentially the same model of ex-pected agreement: differing only in how they estimate the probabil-ities:  X  assigns separate probability distributions to each coder based on their observed behaviour, while  X  uses the same distribution for both coders based on their aggregate behaviour.

Now, if we want to perform this same kind of evaluation on syntactic annotation it is not possible to use  X  or  X  directly. In the case of dependency-based syntax we could conceivably use a variant of these metrics by considering the ID of a to-ken X  X  head as a categorical variable (the approach taken in Ragheb and Dickinson, 2013), but we ar-gue that this is not satisfactory. This use of the metrics would consider agreement on categories such as  X  X okens whose head is token number 24 X , which is obviously not a linguistically informative category. Thus we have to reject this way of as-sessing the reliability of dependency syntax anno-tation. Also, this approach is not directly general-isable to constituency-based syntax.

For dependency syntax we could generalise these metrics similarly to how  X  is generalised to  X  w to handle partial credit for overlapping annota-tions. Let the function LAS ( t 1 ,t 2 ) be the number of tokens with the same head and label in the two trees t 1 and t 2 , T ( i ) the set of trees possible for an item i  X  I , and tokens the number of tokens in the corpus. Then we can compute an expected agreement as follows:
LAS e ( t 1 ,t 2 ) = P ( t 1 | c 1 ) P ( t 2 | c 2 ) LAS ( t Figure 1: Transformation of dependency trees be-fore comparison
We see three problems with this approach. First of all the number of possible trees for a sentence grows exponentially with sentence length, which means that explicitly iterating over all possible such pairs is computationally intractable, nor have we been able to easily derive an algorithm for this particular problem from standard algorithms. Second, the question of which model to use for P ( t | c ) is not straightforward. It is possible to use generative parsing models such as PCFGs or the generative dependency models of Eisner (1996), but agreement metrics require a model of random annotation, and as such using models designed for parsing runs the risk of over-estimating A e , result-ing in artificially low agreement scores.

Finally, it may be hard to establish a consensus in the field of which particular metric to use. As shown by the existence of three different metrics (  X  ,  X  and S (Bennett et al., 1954)) for the rela-tively simple task of nominal coding, the choice of model for P ( t | c ) will not be obvious, and thus differing choices of generative model as well as different choices for parameters such as smooth-ing will result in subtly different agreement met-rics. The results of these different metrics will not be directly comparable, which will make the re-sults of groups using different metrics unnecessar-ily hard to compare.

Instead, we propose to use an agreement mea-sure based on Krippendorff X  X   X  (Krippendorff, 1970; Krippendorff, 2004) and tree edit distance. In this approach we compare tree structures di-rectly, which is extremely parsimonious in terms of assumptions, and furthermore sidesteps the problem of probabilistically modelling annotators X  behaviour entirely. Krippendorff X  X   X  is not as com-monly used as  X  and  X  , but it has the advantage of being expressed in terms of an arbitrary distance function  X  .

A full derivation of  X  is beyond the scope of this article, and we will simply state the formula used to compute the agreement. Krippendorff X  X   X  is normally expressed in terms of the ratio of observed and expected disagreements:  X  = 1  X  / D e , where D o is the mean squared distance be-tween annotations of the same item and D e the mean squared distance between all pairs of anno-tations: D D
Note that in the expression for D e , we are com-puting the difference between annotations for dif-ferent items; thus, our distance function for syn-tactic trees needs to be able to compute the differ-ence between arbitrary trees for completely unre-lated sentences. The function  X  can be any func-tion as long as it is a metric; that is, it must be (1) non-negative, (2) symmetric, (3) zero only for identical inputs, and (4) it must obey the triangle inequality: 1.  X  x,y :  X  ( x,y )  X  0 2.  X  x,y :  X  ( x,y ) =  X  ( x,y ) 3.  X  x,y :  X  ( x,y ) = 0  X  x = y 4.  X  x,y,z :  X  ( x,y ) +  X  ( y,z )  X   X  ( x,z ) This immediately excludes metrics like Pars-Eval (Black et al., 1991) and Leaf-Ancestor (Sampson and Babarczy, 2003), since they assume that the trees being compared are parses of the same sentence. Instead, we base our work on tree edit distance. The tree edit distance (TED) prob-lem is defined analogously to the more familiar problem of string edit distance: what is the min-imum number of edit operations required to trans-form one tree into the other? See Bille (2005) for a thorough introduction to the tree edit dis-tance problem and other related problems. For this work, we used the algorithm of Zhang and Shasha (1989). Tree edit distance has previously been used in the T ED E VAL software (Tsarfaty et al., 2011; Tsarfaty et al., 2012) for parser evalua-tion agnostic to both annotation scheme and the-oretical framework, but this by itself is still an Figure 2: Three trees with distance zero using  X  uncorrected accuracy measure and thus unsuitable
When comparing syntactic trees, we only want to compare dependency relations or non-terminal categories. Therefore we remove the leaf nodes in the case of phrase structure trees, and in the case of dependency trees we compare trees whose edges are unlabelled and nodes are labelled with the de-pendency relation between that word and its head; the root node receives the label . An example of this latter transformation is shown in Figure 1.
We propose three different distance functions for the agreement computation: the unmodified tree edit distance function, denoted  X  plain , a sec-ond function  X  dif f ( x,y ) = TED( x,y )  X  abs( | x | X  | y | ) , the edit distance minus the difference in length between the two sentences, and finally  X  normalised to the range [0 , 1] . 4
The plain TED is the simplest in terms of parsi-mony assumptions, however it may overestimate the difference between sentences, we intuitively find to be syntactically similar. For example the only difference between the two leftmost trees in Figure 2 is a modifier, but  X  plain gives them dis-tance 4 and  X  dif f 0. On the other hand,  X  dif f might underestimate some distances as well; for exam-ple the leftmost and rightmost trees also have dis-tance zero using  X  dif f , despite our syntactic intu-ition that the difference between a transitive and an intransitive should be taken account of.

The third distance function,  X  norm , takes into account a slightly different concern; namely that when comparing a long sentence and a short sen-tence, the distance has to be quite large simply to account for the difference in number of nodes, un-like comparing two short or two long sentences. Normalising to the range [0 , 1] puts all pairs on an equal footing.

However, we cannot a priori say which of the three functions is the optimal choice of distance functions. The different functions have different properties, and different advantages and draw-backs, and the nature of their strengths and weak-nesses differ. We will therefore perform a number of synthetic experiments to investigate their prop-erties in a controlled environment, before applying them to real-world data. In the previous section, we proposed three different agreement metrics  X  plain ,  X  dif f and  X  norm , each involving different trade-offs. Decid-ing which of these metrics is the best one for our purposes of judging the consistency of syntactic annotation poses a bit of a conundrum. We could at this point apply our metrics to various real cor-pora and compare the results, but since the consis-tency of the corpora is unknown, it X  X  impossible to say whether the best metric is the one resulting in the highest scores, the lowest scores or somewhere in the middle. To properly settle this question, we first performed a number of synthetic experiments to gauge how the different metrics respond to dis-agreement.

The general approach we take is based on that used by Mathet et al. (2012), adapted to depen-dency trees. An already annotated corpus, in our case 100 randomly selected sentences from the Norwegian Dependency Treebank (Solberg et al., 2014), are taken as correct and then permuted to produce  X  X nnotations X  of different quality. For de-pendency trees, the input corpus is permuted as follows: 1. Each token has a probability p relabel of being -0.2
Agreement 2. Each token has a probability p reattach of be-The second permutation process is dependent on the order the tokens are processed, and we con-the original tree. This way tokens close to the root have a fair chance of having candidate heads if they are selected. A pre-order traversal would re-sult in tokens close to the root having few options, and in particular if the root has a single child, that node has no possible new heads unless one of its children has been assigned the root as its new head first. For example in the trees in figure 2, assign-ing any other head than the root to the P RED nodes directly dominated by the root will result in in-valid (cyclic and unconnected) dependency trees. Traversing the tokens in the linear order dictated by the sentence has similar issues for tokens close to the root and close to the start of the sentence.
For our first set of experiments, we set p agreement metrics for 10 evenly spaced p -values between 0.1 and 1.0. Initial exploration of the data showed that the mean follows the median very closely regardless of metric and perturbation level, and therefore we only report the mean scores across runs in this paper. The results of these ex-periments are shown in Figure 3, with the labelled -0.2
Agreement Figure 4: Mean agreement over ten runs, p
The  X  dif f metric is clearly extremely sensitive to noise, with p = 0 . 1 yielding mean  X  dif f = 15 . 8% , while  X  norm is more lenient than both LAS and  X  plain , with mean  X  norm = 14 . 5% at p = 1 , quite high compared to LAS = 0 . 9% ,  X  plain =  X  6 . 8% and  X  dif f =  X  246% . To fur-ther study the sensitivity of the metrics to the two kinds of noise, we performed an additional set of experiments, setting one p = 0 while varying the other over the same range as in the previous exper-iment, the results of which are shown in Figures 4 and 5.

The LAS curves are mostly unremarkable, with one exception: Mean LAS at p reattach = 1 of Fig-ure 5 is 23.9%, clearly much higher than we would expect if the trees were completely random. In comparison, mean LAS when only labels are per-turbed is 4.1%, and since the sample space of trees of size n is clearly much larger than that of rela-bellings, a uniform random selection of tree would yield a LAS much closer to 0. This shows that our tree shuffling algorithm has a non-uniform distri-bution over the sample space.

While the behaviour of our alphas and LAS are relatively similar in Figure 3, Figures 4 and 5 show that they do in fact have important differences. Whereas LAS responds linearly to perturbation of both labels and structure, with its parabolic be-haviour in Figure 3 being simply the product of these two linear responses, the  X  metrics respond differently to structural noise and label noise, with label disagreements being penalised less harshly -0.2
Agreement Figure 5: Mean agreement over ten runs, p than structural disagreements.

The reason for the strictness of the  X  dif f met-ric and the laxity of  X  norm is the effects the mod-ified distance functions have on the distribution of distances. The  X  dif f function causes an ex-treme shift of the distances towards 0; more than 30% of the sentence pairs have distance 0, 1, or 2, which causes D dif f e to be extremely low and thus gives disproportionally large weight to non-zero distances in D dif f o . On the other hand  X  norm causes a rightward shift of the distances, which re-sults in a high D norm e and thus individual disagree-ments having less weight. Synthetic experiments do not always fully re-flect real-world behaviour, however. Therefore we will also evaluate our metrics on real-world inter-annotator agreement data sets. In our evaluation, we will contrast labelled accuracy, the standard parser evaluation metric, and our three  X  metrics. In particular, we are interested in the correlation (or lack thereof) between LAS and the alphas, and whether the results of our synthetic experi-ments correspond well with the results on real-world IAA sets. Finally, we also evaluate the met-ric on both dependency and phrase structure data. 4.1 The corpora Three of the data sets are dependency treebanks (NDT, CDT, PCEDT) and one phrase structure treebank (SSD), and of the dependency tree-banks the PCEDT contains semantic dependen-cies, while the other two have traditional syntac-tic dependencies. The number of annotators and sizes of the different data sets are summarised in Table 1.
 NDT The Norwegian Dependency Treebank (Solberg et al., 2014) is a dependency treebank constructed at the National Library of Norway. The data studied in this work has previously been used by Skj X rholt (2013) to study agreement, but using simple accuracy measures (UAS, LAS) rather than chance-corrected measures. The IAA data set is divided into three parts, corresponding to different parsers used to preprocess the data be-fore annotation; what we term NDT 1 through 3 correspond to what Skj X rholt (2013) labels Dan-ish, Swedish and Norwegian, respectively.
 CDT The Copenhagen Dependency Treebanks (Buch-Kromann et al., 2009; Buch-Kromann and Korzen, 2010) is a collection of parallel depen-dency treebanks, containing data from the Danish PAROLE corpus (Keson, 1998b; Keson, 1998a) in the original Danish and translated into English, Italian and Spanish.
 PCEDT The Prague Czech-English Depen-dency Treebank 2.0 Haji  X  c et al. (2012) is a par-allel corpus of English and Czech, consisting of English data from the Wall Street Journal Section of the Penn Treebank (Marcus et al., 1993) and Czech translations of the English data. The syn-tactic annotations are layered and consist of an analytical layer similar to the annotations in most other dependency treebanks, and a more semantic tectogrammatical layer.

Our data set consists of a common set of analyt-ical annotations shared by all the annotators, and the tectogrammatical analyses built on top of this common foundation. A distinguishing feature of the tectogrammatical analyses, vis a vis the other treebanks we are using, is that semantically empty words only take part in the analytical annotation layer and nodes are inserted at the tectogrammat-ical layer to represent covert elements of the sen-tence not present in the surface syntax of the ana-lytical layer. Thus, inserting and deleting nodes is a central part of the task of tectogrammatical an-notation, unlike the more surface-oriented annota-tion of our other treebanks, where the tokenisation is fixed before the text is annotated.
 SSD The Star-Sem Data is a portion of the dataset released for the *SEM 2012 shared task (Morante and Blanco, 2012), parsed using the LinGO English Resource Grammar (ERG, Flickinger, 2000) and the resulting parse forest disambiguated based on discriminants. The ERG is an HPSG-based grammar, and as such its analy-ses are attribute-value matrices (AVMs); an AVM is not a tree but a directed acyclic graph however, and for this reason we compute agreement not on the AVM but the so-called derivation tree . This tree describes the types of the lexical items in the sentence and the bottom-up ordering of rule ap-plications used to produce the final analysis and can be handled by our procedure like any phrase-structure tree. 4.2 Agreement results To evaluate our corpora, we compute the three  X  variants described in the previous two sections, and compare these with labelled accuracy scores.
When there are more than two annotators, we generalise the metric to be the average pairwise LAS for each sentence, weighted by the length of the sentence. Let LAS ( t 1 ,t 2 ) be the fraction of to-kens with identical head and label in the trees t 1 and t 2 ; the pairwise labelled accuracy LAS p ( X ) of a set of annotations X as described in section Table 2: Agreement scores on real-world corpora 1.2 is: This is equivalent to the traditional metric in the case where there are only two annotators.

As our uncorrected metric for comparing two phrase structure trees we do not use the traditional bracket F 1 as it does not generalise well to more than two annotators, but rather Jaccard similarity. The Jaccard similarity of two sets A and B is the ratio of the size of their intersection to the size use the Jaccard similarity of the sets of labelled bracketings of two trees as our uncorrected mea-sure. To compute the similarity for a complete set of annotations we use the mean pairwise Jaccard similarity weighted by sentence length; that is, the same procedure as in 3, but using Jaccard similar-ity rather than LAS.

Since LAS assumes that both of the sentences compared have identical sets of tokens, we had to exclude a number of sentences from the LAS computation in the cases of the English and Ital-ian CDT corpora, and especially the PCEDT. The large number of sentences excluded in the PCEDT is due to the fact that in the tectogrammatical anal-ysis of the PCEDT, inserting and deleting nodes is an important part of the annotation task.

Looking at the results in Table 2, we observe  X  two things. Most obvious, is the extremely large gap between the LAS and  X  metrics for the PCEDT data. However, there is a more subtle point; the orderings of the corpora by the differ-ent metrics are not the same. LAS order the cor-pora NDT 3, 2, 1, CDT da, en, it, es, PCEDT, whereas  X  dif f and  X  norm gives the order NDT 2, 1, 3, PCEDT, CDT da, en, it, es, and  X  plain gives the same order as the other alphas but with CDT es and it changing places. Furthermore, as the scatter-plot in Figure 6 shows, there is a clear correlation between the  X  metrics and LAS, if we disregard the PCEDT results.

The reason the PCEDT gets such low LAS is essentially the same as the reason many sentences had to be excluded from the computation in the first place; since inserting and deleting nodes is an integral part of the tectogrammatical annotation task, the assumption implicit in the LAS computa-tion that sentences with the same number of nodes have the same nodes in the same order is obviously false, resulting in a very low LAS.

The corpus that scores the highest for all three metrics is the SSD corpus; the reason for this is uncertain, as our corpora differ along many dimen-sions, but the fact that the annotation was done by professional linguists who are very familiar with the grammar used to parse the data is likely a contributing factor. The difference between the  X  metrics and the Jaccard similarity is larger than the difference between  X  and LAS for our depen-dency corpora, however the two similarity metrics are not comparable, and it is well known that for phrase structures single disagreements such as a PP-attachment disagreement can result in multiple disagreeing bracketings. The most important conclusion we draw from this work is the most appropriate agreement metric for syntactic annotation. First of all, we disqualify the LAS metric, primarily due to the methodologi-cal inadequacies of using an uncorrected measure. While our experiments did not reveal any seri-ous shortcomings (unlike those of Mathet et al., 2012 who in the case of categorisation showed that for large p the uncorrected measure can be increasing ), the methodological problems of un-corrected metrics makes us wary of LAS as an agreement metric. Next, of the three  X  metrics,  X  plain is clearly the best;  X  dif f is extremely sen-sitive to even moderate amounts of disagreement, while  X  norm is overly lenient.

Looking solely at Figure 3, one might be led to believe that LAS and  X  plain are interchangeable, but this is not the case. As shown by Figures 4 and 5, the paraboloid shape of the LAS curve in Figure 3 is simply the combination of the met-ric X  X  linear responses to both label and structural perturbations. The behaviour of  X  on the other hand is more complex, with structural noise be-ing penalised harder than perturbations of the la-bels. Thus, the similarity of LAS and  X  plain is not at all assured when the amounts of structural and labelling disagreements differ. Additionally, we consider this imbalanced weighting of structural and labelling disagreements a benefit, as structure is the larger part of syntactic annotation compared to the labelling of the dependencies/bracketings. Finally our experiments show that  X  is a single metric that is applicable to both dependencies and phrase structure trees.

Furthermore,  X  metrics are far more flexible than simple accuracy metrics. The use of a dis-tance function to define the metric means that more fine-grained distinctions can be made; for example, if the set of labels on the structures is highly structured, partial credit can be given for differing annotations that overlap. For example, if different types of adverbials (temporal, negation, etc.) receive different relations, as is the case in the Swedish Talbanken05 (Nivre et al., 2006) cor-pus, confusion of different adverbial types can be given less weight than confusion between subject and object. The  X  -based metrics are also far easier to apply to a more complex annotation task such as the tectogrammatical annotation of the PCEDT. In this task inserting and deleting nodes is an in-tegral part of the annotation, and if two annotators insert or delete different nodes the all-or-nothing requirement of identical yield of the LAS metric makes it impossible as an evaluation metric in this setting. 5.1 Future work In future work, we would like to investigate the use of other distance functions, in particular the use of approximate tree edit distance functions such as the pq -gram algorithm (Augsten et al., 2005). For large data sets such as the PCEDT set used in this work, computing  X  with tree edit distance as This is due to the fact that  X  requires O ( n 2 ) com-parisons to be made, each of which is O ( n 2 ) us-ing our current approach. The problem of directed graph edit distance is NP-hard, which means that to apply our method to HPSG analyses directly ap-proximate algorithms are a requirement.

Another avenue for future work is improved synthetic experiments. As we saw, our implemen-tation of tree perturbations was biased towards trees similar in shape to the source tree, and an im-proved permutation algorithm may reveal interest-ing edge-case behaviour in the metrics. A method for perturbing phrase structure trees would also be interesting, as this would allow us to repeat the synthetic experiments performed here using phrase structure corpora to compare the behaviour of the metrics on the two types of corpus.

Finally, annotator modelling techniques like that presented in Passonneau and Carpenter (2013) has obvious advantages over agreement coeffi-cients such as  X  . These techniques are interpreted more easily than agreement coefficients, and they allow us to assess the quality of individual annota-tors, a crucial property in crowd-sourcing settings and something that X  X  impossible using agreement coefficients.
 I would like to thank Jan  X  St  X  ep  X  anek at Charles Uni-versity for data from the PCEDT and help with the conversion process, the CDT project for pub-lishing their agreement data, Per Erik Solberg at the Norwegian National Library for data from the NDT, and Emily Bender at the University of Washington for the SSD data.

