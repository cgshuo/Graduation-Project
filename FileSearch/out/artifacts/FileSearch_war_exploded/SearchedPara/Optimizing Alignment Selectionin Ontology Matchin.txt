 An ontology typically provides a vocabulary that describes a domain of inter-est and a specification of the meaning of terms in the vocabulary. Due to the decentralized nature of the Web, there usually exist multiple ontologies from overlapped application domains or even within the same domain [1]. The se-mantic heterogeneity problem existing in the ontologies from various sources is a big issue. Ontology matching is an effective way of handling the seman-tic heterogeneity problem between ontologies. It finds correspondences between semantically related terms from two different ontologies and is useful to Se-mantic Web applications, such as information integration and distributed query processing [1].

In Semantic Web research field, several ontology matching tools have been developed, such as Falcon-AO [1], RiMOM [2] and AgreementMaker [3]. They usually have a similar process of matching ontologies. The typical process of them usually has two steps listed as follows: 1. Similarity calculation based on terminological, structural or background in-2. Alignment selection based on the similarity matrix got in the first step.
While lots of research is related to the issue of computing and refining sim-ilarity measures, only little attention has been paid to alignment selection [4]. Alignment selection is to select a set of reliable alignments from a matrix of similarity values of any pair of entities from two ontologies, which is given by the ontology matching tool in the first step. For the requirements of different ontology matching tasks, the selected alignment can be one to one, one to many, or many to many alignments.

It is well-known that alignment selectio n can be seen as an optimization prob-lem. Currently there are mainly three kinds of optimization methods: greedy optimization by local decisions [4], global optimization based on Hungarian al-gorithm [4] and optimization based on structure information [7 X 9]. However, as far as we know, there isn X  X  a systematic s tudy on alignment selection that takes homomorphism constraint into consideration. In this work, we transform align-ment selection into a 0-1 integer programming problem, in which the objective function is the total similarity in some sense, and the constraint is essentially the homomorphism constraint or the variant. Specially we propose two methods, called Seal-H and Seal-WH, to optimize a lignment selection, which can increase the precision of results while keeping a similar recall. Moreover, we provide a combined method Seal-HWG to dynamica lly select a suitable selection method based on the characteristics of matching ontologies. Experimental results show that the combined method Seal-HWG has an increase in both precision and F1-measure in average.

The rest of this paper is organized as follows. In Section 2 we review related work and illustrate the necessity of our work. In Section 3, we give the definition of homomorphism constraint and propose a method to select alignments via ho-momorphism constraint. In Section 4, w e propose a method to select alignments via weak constraint on homomorphism. In Section 5, a strategy for choosing and combining different methods is designed for different ontology matching tasks. In Section 6, we evaluate the three proposed methods by comparing them with three baseline methods in three Ontology Alignment Evaluation Initiative 1 (known as OAEI for short) test series. Finally, Section 7 concludes the paper. In the literature [5], Euzenat and Shvaiko have discussed using thresholds to cut off low similarity alignments to get n-m alignments. To select 1-1 alignments, Meilicke et.al. [4] have surveyed two alignment selection methods that make local decisions to find high similarity alignments in a greedy style. Naive descending selection method is widely used by many ontology matching tools, such as Falcon-AO [1] and RiMOM [2]. It iteratively selects the alignment with the maximum similarity larger than a threshold and remove it and all the alignments that have the same source or target concept with it until no alignment could be selected. We call it G-Des method in the rest of this paper. Naive ascending selection method iterates over all the alignments in an ascending order of the similarity score and selects one alignment if there is no alignments that have the same source or target concept with it havin g a higher similarity score. We call it G-Asc method. G-Asc method is more restrictive than the G-Des method.
The two greedy-style methods don X  X  consider the whole selection task as a priority. A selection method that seek s a set of alignments with the maximum sum of similarity using the Hungarian algorithm is discussed by Meilicke et.al. [4]. It treats concepts in two ontology as nodes in a bipartite graph and the input candidate alignments as the edges be tween the nodes on two sides with the similarity value as the weight. It uses the Hungarian algorithm to find a bipartite matching that maximise the total weight.

However, the methods above rely on the similarities of alignments and don X  X  utilize the structure information. In [7], Meilicke et.al. use logical reasonings to identify inconsistencies and automatically remove erroneous alignments from the previously selected alignments. It o nly identifies those alignments that are provably inconsistent according to a description logics formulation. Meilicke.et.al further extends this to define the mapping stability as a criterion of alignments which is much more restrictive than ma pping consistency. ASMOV [9] extends the process of Meilicke X  X  work and introduces additional rules that seek to find positive verification by which computed alignments could comply with desired characteristics.

Meilicke.et.al X  X  two works [7, 8] and ASMOV [9] try to repair or fill up align-ments based on logical constraint or reasonings after getting a set of 1-1 align-ments got by other selection methods. O ur proposed selection methods seek a global optimization and utilize homomorphism constraint and weak constraint on homomorphism, which is able to combine the  X  X epairing or filling up X  process into the process of alignment selection. In this section we will give a formal definition of homomorphism constraint, and then propose a selection method based on homomorphism constraint, which is called Seal-H. 3.1 Homomorphism Constraint In graph theory, a graph G 1 is said to be homomorphic to a graph G 2 if there is a mapping, called a homomorphism, from V ( G 1 )to V ( G 2 ) such that if two vertices are adjacent in G 1 then their corresponding vertices are adjacent in G 2 . The definition of homomorphic mapping for class inheritance hierarchy is quite similar. Intuitively, if a homomorphic mapping preserves hyponymy among homomorphic mapping. We first give a definition of ontology alignment, which is borrowed from [1].
 Definition 1. Ontology Alignment. Given two ontologies O 1 and O 2 ,an alignment is a 5-tuple: id,e 1 ,e 2 ,u,v where id is a unique identifier; e 1 is an entity in O 1 ,and e 2 is an entity in O 2 ;uisanequivalence(=),subsumption ( $ or % ) or disjointness (  X  ) relationship holding between e similarity between e 1 and e 2 in the [0,1] range.

In this paper, we mainly focus on equivalence relation. We will use a 3-tuple id,e 1 ,e 2 to refer to an alignment if not particularly stated. A homo-morphism mapping and the homomorphism constraint is defined formally as follows: Definition 2. Homomorphic mapping and homomorphism constraint.
 For a set of alignments A= { a 1 ,a 2 ,...,a n } ,we say A is a homomorphic mapping if it conforms to the homomorphism constraint as follows: 3.2 A Selection Method Based on Homomorphism Constraint In order to select 1-1 alignments that conform to the definition of a homomorphic mapping in Definition 2 from a given similarity matrix, we introduce a method, called Seal-H, which transforms the problem into a 0-1 integer programming problem, in which the objective function is the total similarity in some sense, and the constraint is essentially the homomorphism constraint. If two align-ments a 1 and a 2 violate homomorphism constraint, at most one of them could take place in the result. Formally, the target and constraint can be defined as follows:
Where S is the similarity matrix, X(i,j) is a binary value which determine whether this alignment belongs to the result set, f(x) is an alignment weight experiments, we have found that the performance of selection is best when n =2.
It will be shown in Section 6.2 that the Seal-H method can improve the perfor-mance of alignment selecting in the cases that have rich subsumption relations and have fewer diversities in taxonomies between two ontologies. In this section we will give a formal definition of weak constraint on homomor-phism, and then propose a selection method via weak constraint on homomor-phism, which is called Seal-WH. 4.1 Weak Constraint on Homomorphism According to reference alignments of OAEI benchmark series, about 8.75% of while e 2 i  X  e 2 j , which means some reference mappings are not homomorphic mappings. So the homomorphism constraint may be too strong for some of the ontology matching tasks, and a weaker constraint on homomorphism should be introduced. Before we give the definion of weak constraint on homomorphism, we first define the alignment conflict relation as follows: Definition 3. Alignment conflict. Alignment conflict is a relation between a by Conf( a i ,a j ).
 The definition of the weak constraint on homomorphism is as follows: Definition 4. Weak constraint on homomorphism. For a set of align-ments A= { a 1 ,a 2 ,...,a n } , we say A conforms to weak constraint on homomor-phism if the following condition is satisfied:
As shown in Figure 2, there is an alignment conflict relation between alignment a 1 and a 2 . Alignment conflict relation is an irreflexive and symmetric relation. The existence of this relation in the result alignment set would badly hurt the quality of hyponymy-preserving. Actually, there is only one pair of alignments in conflict existing in the ref erence alignments of OAEI benchmark series. So the weak constraint on homomorphism defined in Definition 4 we can remove some alignments in conflict with others to reduce the scale of the alignment without hurting the recall of the results.
 4.2 A Selection Method Based on Weak Constraint on Just like Seal-H, we introduced a method, called Seal-WH, which transforms the problem into a 0-1 integer programming problem, in which the objective function is the total similarity in some sense, and the constraint is essentially the weak constraint on homomorphism. If there exists conflict between alignments a1 and a2, at most one of them could take place in the result. Formally, the target and constraint can be defined as follows: Constraints : For 0 i&lt;n, Where S , X(i,j) and f(x) take the same definition in Section 3.2.

It will be shown in Section 6.2 that Seal-WH performs better than the G-Des method and the Seal-H method in average, but in the cases that the structure of two matching ontologies are quite similar, it performs not as good as Seal-H. Experiments show that both the Seal-H and Seal-WH method can improve the precision and F1-measure significantly in many cases but not all cases. In this section, we first define two measures to estimate the characteristics of the two matching ontologies and then introduce a combined method to dynamically choose a suitable method according to the designated measures. 5.1 Measures There are two factors that affect the performance of Seal-H and Seal-WH method: the first one is the extent of subsumption or hyponymy relations existing in two matching ontologies; the second is the extent of hyponymy preserving in the target mapping. Based on this observation, we will define the comparability co-efficient of a hierarchy and the homomor phism coefficient of a set of alignments.
Comparability coefficient of a hierarchy is defined as the percent of subsump-tion relations existed in all possible entity pairs in a hierarchy. It is defined as follows:
Homomorphism coefficien t of a alignment set A is defined to evaluate how well A keeps the subsumption relations in both ontologies, i.e. how well the alignments confirm to the homomorphism constraints. It is defined as follows:
HCoef ( A )=
It is observed from our experiments on various ontology matching tasks that the above two measures are relevant to the performance of the Seal-H and Seal-WH method. The extent of subsumption relations in a hierarchy of matching ontologies greatly affect the power of the constraint on homomorphism including the weak constraint. When the comparability coefficient is higher than a thresh-old, Seal-H and Seal-WH performs better than traditional methods. Specifi-cally, Seal-H performs best when the ho momorphism coeffici ent is higher than a threshold. When the comparability coefficient is low, the traditional method G-Des perform best among all methods used in our experiments. Based on these observations, we think these measures are useful to help us dynamically choose a suitable selection method.
 5.2 A Combined Method We have defined comparability coefficient for a hierarchy and homomorphism coefficient for a set of alignments in the l ast section. However, there often does not exist a reference mapping for an upcoming ontology matching task. To es-timate the homomorphism coefficient o f the target mapping, we need to use a reliable method to select some alignments with high confidence as a  X  X eference X  alignment set.
 Based on our empirical study, we propose a combined method, called Seal-HWG, to take advantage of three methods, say Seal-H, Seal-WH and G-Des. The flow chart of the combined method is given in Fig. 3.

We first compute the comparability coefficient of both hierarchies in matching ontologies. When its value is lower than a predefined threshold  X  c (we set it to 0.01), we choose the traditional method G-Des, because it performs best among traditional methods in terms of average F-measure. Otherwise, we use G-Asc method to get a set of  X  X eference X  alignments with a similarity higher than a predefined threshold (we set it to 0.4). The reason we choose G-Asc method is that it costs less time and it can get a reliable mapping by our empirical study. Based on the  X  X eference X  a lignments, we compute the homomorphism coefficient and if it is higher than a predefined threshold  X  h (we set it to 0.95), we choose Seal-H method; otherwise, Seal-WH is our choice. In this section, we first introduce the used test series followed by the measures used in our experiments. Then, we repo rt our experimental results to demon-strate the validness of our proposed methods. 6.1 Experiment Settings We have chosen the latest test series in OAEI with a reference mapping. We use the benchmark series 2 of test in OAEI2012 (including 48 matching tasks), the conference series 3 in OAEI2010 (including 21 matching tasks) and directory series 4 in OAEI2005 (including 2,265 matching tasks) as the three test series.
If the output set of alignments is A, and the set of corresponding reference alignments is A ref , the precision, recall and F1-measure of output alignments are defined as:
Before using our methods to select alignments, we need to get a similarity matrix of concepts in both ontologies. I n our experiments, we use the similarity matrix got by the open source tool Falcon-AO [1]. In both Seal-H and Seal-WH method, we have transformed the problem into a 0-1 integer programming prob-lem and we have utilized a state-of-the-art mathematical programming solver Gurobi Optimizer 5 to solve them efficiently and correctly.

To evaluate the three selection metho ds proposed in this paper, we compare them with three baseline selection met hods including the G-Des, the G-Asc and the Hungarian method. We compute the av erage values of F1-m easure, precision and recall of the selection results in each test series for each of the all six meth-ods respectively. It is noted that for th e best performance in comparing with other alignment weight functions, we choose f ( x )= x 2 as the alignment weight function in the Hungarian, Seal-H and Seal-WH methods.

Because properties often have fewer subsumption relations and instances don X  X  have any, our selection methods are mainl y adopted to select alignments of cor-responding classes rather than properties or instances. We use the widely used G-Des method to select alignments in properties and instances. 6.2 Experimental Results The performance of the six methods on O AEI benchmark series is depicted in Fig. 4. The Seal-HWG method performs best among all methods in terms of F1-measure. The G-Asc method has a good performance in precision but hurts the score of recall. In average, the G-Des metho d performs best in the three baseline methods and the Seal-H and Seal-WH methods have a competitive performance. The performance of the six methods on O AEI directory series is depicted in Fig. 5. In directory series, our proposed methods all have a dominant advantage over the three baseline methods. After investigating the matching ontologies in directory series, we have found that the matching ontologies usually have a similar structure which could make our homomorphism constraint powerful in the alignment selection process.

Fig. 6 shows the performance of these methods on the conference series. Both the G-Des and G-Asc method have a competitive performance in average. The Seal-WH method has a better performance than the Seal-H and three baseline methods in average but not in every single task. However, the combined method Seal-HWG performs best among the six methods which is a demonstration of the effectiveness of dynamical method se lection performed in the process of the Seal-HWG method. Speaking in general, when the subsumption relations are sufficient, both Seal-H and Seal-WH method could have a stable performance in our tests. Oth-erwise, they could also perform competitively comparing to the baseline meth-ods. Among the baseline methods, the G-Des method has a good performance in terms of F1-measure on most matching tasks. We also find that the G-Asc method performs best among the three baseline methods in terms of precision. Our combined method Seal-HWG has a stable advantage over the other five methods in our tests. In this paper, we have systematically studied the optimization problem of align-ment selection in ontology matching. To sum up, the main contributions of this paper are as follows:
Firstly, we modeled the optimization problem of alignment selection in ontol-ogy matching as an 0-1 integer programming problem, in which the objective function is the total similarity in some sense, and some constraint on homomor-phism should be taken into consideration. Specifically, we designed two methods for selecting alignments, called Seal-H and Seal-WH, which are based on homo-morphism constraint and weak constraint on homomorphism, respectively.
Secondly, to take advantage of three sel ection methods, say Seal-H, Seal-WH and G-Des method, we designed a combined method to integrate these three methods. The combined one is called Seal-HWG, and it can dynamically choose a suitable selection method accordin g to some designated estimation.
Finally, to evaluate the effectiveness of our presented methods, we conducted extensive tests of six related methods on three OAEI test series. The results demonstrate that both the Seal-H and Seal-WH have an advantage when the subsumption relations are sufficient in the matching ontologies and perform competitively in other cases. Especia lly, the combined method Seal-HWG has a stable advantage among the six methods in terms of the F1-measure.

In future work, we are interested in designing an effective divide-and-conquer strategy to make our selection methods mo re scalable and efficient. Besides, it is also an interesting research work to make sense of classes by mapping class hierarchy to WordNet via homomorphism constraint.
 Acknowledgement. This work is supported by the National Natural Science Foundation of China (NSFC) under Grants 61223003, 61170068 and 61370019. We would like to thank Dr. Wei Hu and Dr. Gong Cheng for their valuable suggestion on this work.

