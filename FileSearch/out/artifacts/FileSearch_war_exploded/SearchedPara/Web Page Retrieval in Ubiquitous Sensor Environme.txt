 This paper proposes new concept of query free web search for daily living. We ordinarily benefit from additional information about our daily activities that we are currently engaged in. When washing a coffee maker, for example, we receive the benefit if we obtain such information as  X  X leaning a coffee maker with vinegar removes its stain well. X  Our proposed method automatically searches for a web page including such information relates to an activity of daily living when the activity is performed. We assume that wireless sensor nodes are attached to daily objects to detect object use; our method makes a query from the names of objects which are used. Then, the method retrieves a web page relates to the activity of daily living by using the query.

Web pages will be displayed on various domestic appliances and pieces of furniture that are connected to the Internet. Many tele-visions have already been equipped with LAN ports, and some of them can display web pages. Internet-connected electronic kitchen appliances such as refrigerators and microwaves will be able to show a summarized page on small screens. Therefore, we will be able to enjoy web pages anywhere and at any time from devices around us to obtain useful advice. We can all benefit from infor-mation related to the activities of daily living (ADL) that we are currently performing. When shaving our beard, for example, it is helpful to obtain such tips as  X  X he best time to shave your beard is about ten minutes after you wake up. X  Thus, showing web pages including such information related to ADLs that we are performing on domestic appliances around us may enrich our daily lives.
Domestic appliances such as televisions may not have an inter-face such as a keyboard to enable us to input queries quickly. Fur-thermore, query inputs may interrupt our ADLs. Our solution to these problems is to generate queries automatically about ADLs currently being undertaken, to search the web for tips, and to show a web page that matches the query. This kind of web search is called a query free search [2] and web pages provided as search results are responses to automatically generated queries. To real-ize query free searches in our daily lives, we monitor our ADLs by using sensors.
 In the present work, we attach these sensor nodes to objects such as cups, toothbrushes, and shavers and monitor the objects X  move-ments during daily life. The method proposed in this paper auto-matically constructs a query from the names of the objects that are used (moved) in a given period of time. By sending the query to a search engine (SE), the method obtains a web page that relates to the ADL performed in that period of time. Assume that, for exam-ple, a cup, milk, and cocoa are moved in a given period of time. Then the method constructs a query, say  X  X up milk cocoa, X  and ob-tains a page that matches the query. The strategy of the method reflects the idea that  X  X  web page including the names of objects that are used in an ADL may relate to the ADL. X 
We assume that sensor nodes are attached to commonly used ob-jects to monitor their use. We use our developed sensor node that is equipped with a three-axis accelerometer and obtains its accelera-tion every 30 msec and sends it to a data server. Our method simply assumes that a time period during which acceleration data change greatly coincides with that during which an object is used (moved). Note that, instead of an accelerometer, we can adopt any sensor that can detect the time period for this method such as RFID tags, capacitive touch sensors, low-axis accelerometers, and tilt sensors. RFID tags especially give an advantage on production cost.
We assume that a time period during which acceleration data change greatly coincides with the period during which an object is used. We call this time period an activity , which is a term used in the signal processing research field. Because we use a three-axis (x, y, and z) accelerometer, the combined activities extracted from each axis sensor data are defined as the time period during which an object is used.

Some signal processing studies use the Gaussian Mixture Model to learn the Fourier components of the activity and the noise (non-activity) time periods [5]. We adopt a similar approach to detect activities.
Fig. 1 shows the architecture of the web search method for daily living. The method computes activities of objects in the past t min-utes for each object every t minutes. It searches the web by us-ing the activities detected in t minutes. The method consists of two main procedures:  X  Cluster object  X  X nd X  Websearch . X  In  X  Cluster object , X  we generate clusters consisting of objects that are simultaneously used in the same ADL in t minutes. In  X  Websearch , X  we search the web by using the names of objects in the same cluster to obtain a web page for each cluster. In this implementation, we set t at three.  X  Cluster objects  X  consists of three procedures in Fig. 1. We call the measure for determining whether two objects are used in thesameADLthe X  D egree o f being used in the S ame ADL ( DoS ). X  We assume that the  X  X robability X  with which two objects are used in the same ADL increases as the DoS of the objects increases. We compute the DoS for all the objects that are used in the time period ( Calc DoS ) and cluster the objects according to the DoS ( Clustering ). We then filter the clusters including only objects that are used for a short time in the time period ( Filtering ). We explain how to calculate the DoS . This procedure computes DoS between objects X and Y in time period t (three minutes) based on the following three measures. -Temp ( X, Y, t ) : This measure represents the degree to which X and Y are used simultaneously in t . It uses the activities of X and Y in t . This is based on the assumption that simultaneously used objects are employed in the same ADL with high probability. -Hist ( X, Y ) : This measure represents the degree to which X and Y are used simultaneously in a past dataset. We prepare a past dataset of a certain period in advance. This measure reflects the view that the frequency with which objects were simultaneously used in the past dataset increases as the probability with which the objects are used in the same ADL increases. -Sem ( X, Y ) : This measure represents the semantic relevance be-tween X and Y . We use the co-occurrence of X and Y calcu-lated by using page counts (hit counts) obtained from an SE. This is based on the view that objects that are ordinarily used together in the real world co-occur in the web, which reflects the real world. By using the measures, the DoS is represented as follows: DoS ( X, Y, t )= Temp ( X, Y, t )  X  Hist ( X, Y )  X  Sem (
In Clustering , we use Ward X  X  method [1] to cluster objects. We use the DoS as inverse distance between objects. Filtering elim-inates clusters that have no object whose total seconds of activity in t exceed  X  ac .
The Cluster object procedure described in section 3.1 produces clusters that consist of a set of objects. We construct subqueries from each cluster and obtain web pages corresponding to the query. As shown in Fig. 1, the procedure consists of three procedures. First, we build multiple s ubqueries from a cluster ( Query making ) and obtain multiple search results for the subqueries ( Search ). Then, we re-rank the search results by computing the similarities between each of the web pages and the cluster ( Re -ranking )and output the URL of the top-1 page in the re-ranked list.
Query making uses a vector representation of a cluster. In the representation, a cluster is represented in a vector that reflects the  X  X mportance X  of an object in the cluster. The importance of an ob-ject is simply defined as the largest DoS between the object and another in the cluster. Query making first produces a list (vec-tor) of objects with their importance such as &lt;juicer,3.0&gt; , &lt;cup,3.0&gt; , &lt;milk,2.0&gt; ,and &lt;sugar,0.5&gt; . Query making applies the following three techniques to a query vector in order.
First, we expand a query vector. Assume that a user made tea using green tea and a cup in a given time period. He/she then drank the tea using only the cup after that time period. Retrieving web pages that relate to drinking green tea is difficult by using a query constructed solely from the cup. We thus expand a current query vector by using vectors that were constructed in the past.
Second, we make multiple subqueries by extracting some objects (terms) from a vector. By extracting objects, we can construct some subqueries that are not too strict and do not include noises, i.e., the names of objects wrongly included in the cluster constructed in the Cluster objects procedure. We simply construct subqueries from all combinations of objects in a query vector.

Third, we also expand the query by using genre terms that may yield web pages about daily lives. A query that includes only the names of objects may be ambiguous. That is, it is difficult to obtain our desired pages (daily life information) from such a query as  X  X up green-tea. X  In [3], it is reported that combining a topic related term and a genre related term makes a good query. If we want to buy a camera, for example, we combine the topic term  X  X amera X  and the genre term  X  X uying X  or  X  X hoosing, X  i.e., we make the query  X  X amera buying. X  This algorithm randomly selects a genre term from the four terms ( X  X dvice, X   X  X ow-to, X   X  X ips, X  and  X  X rivia X ).
We can obtain multiple search results (rankings) by sending mul-tiple subqueries constructed in Query making to an SE. The Re -ranking is performed by using a similarity measure between a query vector and a web page in the search results. The top-1 URL (page) in the re-ranked list is produced. We use [4] to re-rank the pages.
We proposed a new kind of web page retrieval method for daily living by using daily objects. One advantage of our search method is its simple settings. That is, the method simply requires the names of objects and the time period in which the objects are used, and this information can be obtained by using various sensors. We have al-ready performed an experiment of our method in our experimental environment. We plan to analyze the result and introduce it. [1] J.F. Hair, R.E. Andersen, R.L. Tatham, and W.C. Black, [2] M. Henzinger, B.W. Chang, B. Milch, and S. Brin, [3] R. Kraft and R. Stata,  X  X inding buying guides with a web [4] S. Lawrence and C.L. Giles,  X  X nquirus, the NECI meta [5] J. Sohn, N.S. Kim, and W. Sung,  X  X  statistical model-based
