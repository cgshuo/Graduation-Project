 Traditional research on digital watermarking focused on multimedia contents, including image, audio and video[1]. Recently, watermarking text document[2, 3], software[4, 5] and several kinds of discrete data[6] was studied relied upon the combined thoughts and methods from multimedia watermarking and their domain knowledge. Relational scheme, as the de facto fashion of being of data warehouse, data mining, and decision support systems, should also be watermarked to meet the growing needs of IP protection when sensitive, valuable data is outsourced and sold. 
There are two major points in the semantics of watermarking digital contents. One is where to hide the watermark, while the other is what contents to protect. By its very nature, relational data differs distinctly from multimedia, text documents, software and semi-structured data in those two points. 
Watermarking multimedia data will normally inserted the watermark into high dimensions of the data by transforming it with various methods such as wavelet transformation and FFT; for text documents, the formats (spacing between words and lines) and natural-language semantics of the documents are exploited for embedding watermark; to watermark software, the point is how to watermark the execution procedure/semantics of the software; and watermarking semi-structured data is to protect the data itself, and simultaneously but more pivotally the structure of it. 
From relational data X  X  point of view, the location to hide watermark is different from multimedia data and text documents. The watermark can hardly be hided in the format due to the format of relational data is not as important as in text documents for usability. On the other side, the content to protect in relational data differs from semi-instead of the structure and the usage of data. These characteristics pose unique challenges for relational data watermarking. This paper analyzes these characteristics, and proposes a generalized and adaptive watermark scheme for relational data. 
The rest of the paper is organized as follows. Section 2 reviews existing literatures on related topics, and analyzes their limitations and drawbacks. Section 3 formalizes the watermarking problem for relational data, and proposes the GARWM (Generalized and Adaptive Relational data WaterMarking) framework based on watermark insertion and detection are presented in section 4. Threats to and resilience of the proposed techniques are analyzed in Section 5. Section 6 provides experiments evaluation, and we conclude with summary and future directions in section 7. Since Tirkel and et al. clarified the concept of digital watermarking in 1993[7], substantive studies have been conducted on traditional domains on multimedia data (image, video and audio) watermarking[8-11]. The research area is broadened to cover watermarking techniques for text documents, semi-structure data, and software due to growing demands in recent years. For relational data watermarking, two groups simultaneously published their research results. They all concentrate on watermarking numeric relational data and their techniques fundamentally differ from each other. 
Agrawal and et al X  X  approach[12] assumes that changes can be made to every usability. The approach selects a set of tuples in the relation for embedding watermark according to their primary key and a secret key only known by the owner. Generating a pseudo random sequence seeded by those two keys, random bit in random attribute of the tuple is set to random value accord ing to the sequence. We consider this approach as an equivalent to the bit-setter watermarking in multimedia domain. 
This scheme is later analyzed by Sion[13] , and is considered to be vulnerable to transformation in mining association rules. Moreover, this method neglects the usability of watermarked data by a simple but sometime erroneous assumption (the  X  bit assumption above). 
More sophisticatedly, Sion and et al X  X  approach[6, 13-15] exploits global the watermark to antagonize vertical partition attack. The main algorithm proceeds as follows: The tuples are partitioned into equivalent-sized sets according to a hashed id watermark. While embedding a bit into a selected set, the distribution of values in the set is accounted. Those values in a configured gap are altered to values closed to the standard deviation boundary. The global usability metrics are checked to ensure the usability after watermarking, and if violations occur, the watermarking actions will be rollbacked. 
This approach can survive from the linear transformation attacks since it makes use of relatively high dimension information, the distribution of data, to insert watermark. However, due to single attribute watermarking fashion, when the watermarked attribute is partitioned out, the whole watermark will be removed. What X  X  more, it relies upon subset markers for embedding watermark, and loss of one subset marker leads to one-bit loss in detecting watermark. 
Other literatures on this topic include the watermarking technique based on the cloud model proposed by Zhang and et al.[16] and the NWM scheme proposed by Huang and et al[17]. These proposals can both be classified into the bit-resetting methods similar to Agrawal X  X  approach. Research effort by Gross-Amblard[18] is to investigate the problem of watermarking databases or XML while preserving a set of parametric queries in the usability bound. These literatures are mentioned only for completeness. This paper will mainly based on the former two research efforts, and try to generalize their approach and overcome their shortcomings. The main purpose of GARWM is to provide a comprehensive framework for generalized (not only for numeric data) and adaptive (adaptively watermarks different kinds of data with different methods) relational data watermarking. We will analyze characteristics of relational data concerning watermarking, and propose framework and algorithms for watermark insertion and detection exploiting those characteristics. 3.1 Revisit the Characteristics of Relational Data A consensus of Agrawal and Sion X  X  work is that the watermark system of relational the blind assumption is not indeed necessary. The data in the relation will be updated with high possibility; whereas the logical relationship, another vital property of relational data, is likely to be invariable to preserve the usability. The none-blindness partition, which will be analyzed in section 5. 
Attributes to express the relationships, for instance, primary keys and foreign keys, should be omitted when watermarking. We assume that alterations of such attributes sensitive information that is imperative for watermarking (for example the auto-generated integer primary key). Other attributes, which are candidates for watermark embedding, can be classified into several types including at least numeric, text, categorized data, etc. In addition, an attribute has one more property besides its type attributes with relatively high significance to protect the copyright of sensitive information; however, a tradeoff is that embedding watermark in these attributes will normally lead to significant reduction in usability. 
To insert a watermark, target data to be protected have to be modified. A key point for a watermarking technique is to keep the usability while altering the contents. We provide two kinds of metrics to control watermark embedding and evaluate usability reduce possibility of global constraints violations and subsequent rollbacks. 3.2 Formalizations of Relational Data Watermarking We formally define the problem of watermarking relational data as follows. Definition 1. (Basic Definitions)  X  An attribute is defined as a triple: (, , , )  X  S  X   X   X  K is the domain of secret keys used in watermarking; while W is the domain of Definition 2. (The Relational Data Watermarking Problem) calculate the watermarked version ( , , ) wm TfTkw  X  = , which shall satisfy that:  X  ( global cons. ) | | | |, ( )  X  ( local cons. ) ,..,1.,..(.,.)  X  ( robustness ) T  X  X   X  satisfies ( ) 3.3 Structure of GARWM Framework Fig.1. briefly shows the structure of GARWM and the procedures for embedding and extracting watermark. 
During the insertion phase, when a piece of relational data is ready for watermark correction code (ECC Code) to the watermark to embed; and (3) executes the watermark insertion algorithm to watermark the fractional relation with the generated watermark, a provided secret key, and a set of watermark parameters. 
During the watermark detection phase, for a piece of relational data which is suspected to be a pirated copy, we (1) extract attributes used in watermarking according to the stored watermark scheme; and (2) execute the watermark detection algorithm to retrieve watermark information from the suspected copy; and (3) exploit error correction mechanism to correct the detected watermark; and (4) compare the corrected version of the watermark with th e original watermark to determine whether or not the relational data to be detected is piratical. 
Scheme selection and scheme detection exploit none-blindness property mentioned in section 3.1. A partitioned and watermarked attribute shall be found in other preserved. These procedures map every selected attribute in the original relation to an attribute in some relations of the pirated copy. Note that attributes involved in primary key or reference key constraints will be omitted in the candidate selection phase. Watermarking
ECC code addition and error correction are to recover from minor mistakes in the detected watermark to improve the resilience. We assume that any watermarked data mechanism will make the watermark more robust against various kinds of attacks. Due to limitation of length, we will neglect detailed discussion of these two issues. Instead, the algorithms for watermark insertion and detection, and the resilience analysis will be focused on. We detail the watermark insertion/deletion algorithms in this section. Before applying the algorithms, the attributes X  significance shall be normalized: i.e. to let . 4.1 General Watermark Insertion and Detection relation with watermark scheme C and global metrics function gcons f . key is the secret key only known by the owner. 
In the first part (grouping phase), for each tuple in the relation, the algorithm first sequence to determine which attribute shall be marked based on the significance of the attributes in the relation. Thus, the algorithm will more probably select an attribute with relatively higher significance for watermark insertion. Next, the bit of watermark to be inserted is selected based on the random sequence. Record the tuple in the tuple buffer associated with the selected attribute and bit index. 
In the next part (marking phase), each tuple buffer is processed by the attached watermark comparison after detection procedure. 
The detection algorithm first groups the tuples in T X  the same as the grouping phase mechanism is used for deciding the final watermark bit. The watermark is constructed after all tuple groups being processed. We omit detailed procedure here. 4.2 Particular Type Processing In order to support various attribute types in watermarking, we proposed a mechanism bidirectional map. Thus, watermarking data in various types is reduced to watermarking numeric data. 
Two most common types besides numeric type in relational data are concerned: define f  X  and f  X  by marking each possible value in the domain with an integer index. 
Distinct from numeric data and categorical data, the usability metrics for text data should be the human-readability instead of the machine-readability. Thus, we identify the bandwidth to embed watermark into relational text data to be the synonyms and the homographs. For example, in database semantics,  X  X able X  is a possible substitute for  X  X elation X ; however,  X  X eIation X  and  X  X e1ation X  are also candidates for substitution. Thus, f  X  and f  X  can be generated based on a synonyms dictionary and a Note that, for alphabetical language, the homographs can be differentiated by simple methods (e.g. converting all characters to uppercase/lowercase), and techniques exploiting them do not satisfy the  X  X mperceptibility X  property required by digital watermark. However, for ideographic languages, such as Chinese, the homographs can actually be utilized to embed watermark due to the difficulty in differentiation. 
Fig.3 is the algorithm to insert a bit ( wm_bit ) of watermark into a group of tuples For numeric number set N , denote: cnt ( N ) and avg ( N ) are individually the item count/ average value of N , GT ( N ) and LT ( N ) are individually subsets of items whose values are greater/less than avg ( N ). When bit  X 1 X  being inserted, the numbers in N are altered whether cnt ( GT ( N ))  X  cnt ( LT ( N )) or not; we omit details for concision. section, we will first categorize the possible threats to relational data watermark, and then analyze the resilience of GARWM to those threats. 5.1 Taxonomy of Threats to Relational Data Watermark wants to pirate the IP of Alice. In conformity to the attack classification in multimedia watermarking literatures[1, 19], we classify the threats to relational data watermark as following:  X  Simple attacks : Mallory transforms tuples in original relation T distributed by 
Alice to impair the watermark. There are two kinds of attacks in this category:  X  Uniform transformation . Mallory produces T X  by uniformly transform all tuples  X  Random modification . Mallory produces T X  by randomly modify some tuples in  X  Detection-disabling attacks : Mallory breaks correlations between original relation 
T and embedded watermark, and makes the recovery of watermark infeasible.  X  Tuple insertion . Mallory inserts a series of new tuples into T .  X  Tuple deletion . Mallory deletes a series of insignificant tuples from T .  X  Horizontal partition . Mallory reserves a series of important tuples in T , and  X  Multi-relation mergence . Mallory joins two or more relations including T on  X  Vertical partition . Mallory vertically partitions some unimportant attributes of  X 
Ambiguity attacks : Mallory tries to insert/identify his watermark into/from T , in order to claim the ownership over the relation falsely.  X  Watermark addition . Mallory embeds additional watermark(s) into T .  X  Spurious watermark identification . Mallory identifies a random but fake 
Note that the  X  X emoval attacks X  category identified in [1] is omitted, since those be classified into other categories. 5.2 Resilience of GARWM For uniform transformation attacks, a most common case is, for numeric data, the linear transformation attack, which maintains the usability in mining association rules applying such transformation, i.e. the detected watermark will not be altered. 
For random modification attacks: randomly bit-setting/rounding attack on numeric data always modifies the least significant bits (LSB) of a numeric number. These minor modifications do not affect the macrosc opical distribution of the whole data set, bound. The randomly blank/invisible characters padding/inserting attack on text data do not affect the value (after applying the f  X  transformation) used to embed watermark, which leads to no effect on the detection of embedded watermark. 
Other random modification attacks, including random synonymous/homomorphous categorical attributes, modify not only th e LSB but also MSB when transforming to numeric values. In addition, the tuple insertion, tuple deletion, and horizontal partition attacks, categorized into the detection-disabling threats, do not affect the attributes in existing tuples; instead count of values in calculating the distribution will be affected. These kinds of attacks will probably modify or remove the embedded watermark; however, we will show the probability of modifying the watermark is extremely low. 
Assume that the error correction mechanism can correct 1/  X   X  | wm | bits of watermark, and the probability of one-bit loss after modifying/inserting/deleting a actually one-bit loss after error correction is: data, we will give a quantitative analysis based on the experiment results in section 6. 8 X  and 3/4 tuples in the watermarked relation is removed/inserted/modified, P 1 (  X  ,  X  ) is respectively 1%/2%/5%, and given  X  =10 for a 20-bits sized watermark, the possibility of actually one-bit watermark loss is: 0.1%/0.7%/7.5%. 
Our solution naturally survives the vertical partition and multi-relation mergence attack: the candidate selection and candidat e scheme detection mechanism stated in section 3.3 will ensure the one-one map between the attributes in T and T X  . 
The confront remedies for the ambiguity a ttacks are not specified to the relational timestamps and noninvertible watermarks. The experiments are conducted on a relation with 200000 tuples, and for the evaluation purpose, the relation is created containing only one numeric attributes watermark to be embedded is 20-bits in length. No error-correction mechanism is provided for simplicity, and the usability constraints are ignored. Each result shown is an average of 100 times running of each experiment. increases. Normally the more tuples are mark ed, the less usability of the relation is. 
To evaluate the resilience of GARWM in a quantitative way, we conduct experiments to simulate three kinds of attacks, includes:  X  Random data loss: randomly remove a percentage of  X  tuples.  X  Random data addition: randomly insert a percentage of  X  tuples.  X  Random data alteration: randomly modify a percentage of  X  tuples. data loss occurs. The X-, Y-, and Z-axis are individually the differential criteria  X  , the few (5%) to the majority (95%) for  X  from 1 X  to 10 X . While  X  increases, the possibility drops down sharply, and when  X  nears 8 X , the possibility of one-bit watermark loss is very low to only 1% when 75% tuples are removed. For a certain  X  , more data loss leads to higher possibility of watermark loss; however, compared to the increasing rate of data loss, the increasing rate of loss possibility is relatively low. 
Fig.6 and Fig.7 are the possibilities of one-bit mark loss individually for random data addition and random data alteration. Conclusions can be drawn almost the same watermark loss is only 2%/5% individual ly when 75% tuples are inserted and modified. 
These results provide solid validation to the robustness of our techniques. In this paper, the problem of relational data watermarking is introduced. We 1. proposed GARWM framework, a generalized and adaptive solution for 2. presented algorithms for watermark insertion and detection exploiting the 3. categorized various kinds of threats to relational data watermark, and 4. analyzed the robustness of GARWM to those threats qualitatively and 
Comparing with existing proposals, GARWM is robust to linear numeric transformation and vertical partition attacks compared to Agrawal X  X  approach. It does not rely on sequence of primary key and subset markers, which makes the approach more resilient to random data loss/addition attacks compared to Sion X  X  approach. 
Further work includes identifying other possible threats to relational data watermark, modeling the attacks formally, and perfecting the framework and the underlying algorithms. 
