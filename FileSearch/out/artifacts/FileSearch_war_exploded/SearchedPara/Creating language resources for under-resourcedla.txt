 Abstract Language resources are important for those working on computational methods to analyse and study languages. These resources are needed to help advancing the research in fields such as natural language processing, machine learning, information retrieval and text analysis in general. We describe the creation of useful resources for languages that currently lack them, taking resources for Arabic summarisation as a case study. We illustrate three different paradigms for creating language resources, namely: (1) using crowdsourcing to produce a small resource rapidly and relatively cheaply; (2) translating an existing gold-standard dataset, which is relatively easy but potentially of lower quality; and (3) using manual effort with appropriately skilled human participants to create a resource that is more expensive but of high quality. The last of these was used as a test collection for TAC-2011. An evaluation of the resources is also presented.
 Keywords Resources Summarisation Arabic Under-resourced languages 1 Introduction 1.1 Motivation Language resources are important for researchers working on using computational methods to analyse and study languages. These resources are needed to help make advances in natural language processing (NLP), machine learning, information retrieval, and text analysis in general (see for example Jing and McKeown 1998 ; Wilks et al. 1988 ; Schalley 2012 ; Boyer and Brun 2007 ; Halpern 2006 ;de Chalendar and Nouvel 2009 ; El-Haj et al. 2010 ; Walther and Sagot 2010 ).
Researchers have developed a wide range of NLP tools to analyse, parse and annotate different languages automatically. Language resources play two roles in these activities. The first is the use of large-scale annotated corpora to drive statistical NLP techniques. The second is the need for test collections for the purpose of evaluation against a gold-standard. Such resources for NLP are documented by efforts such as the Language Resources and Evaluation (LRE) Map (Calzolari et al. 2010 ). But for some languages, there are few such resources. In our case, the lack of gold-standard resources for the problem of summarising documents in Arabic lead us to investigate methods for developing them. Our investigations should be relevant to other languages and applications. 1
Arabic is an appropriate example to consider. Despite being a widely spoken language, it has been widely acknowledged that it has few publicly available tools and resources, apart from a few notable exceptions, such as the Arabic Penn Treebank 2 (Maamouri et al. 2003 , 2004 , 2005 ; Mourad and Darwish 2013 ), the Prague Arabic Dependency Treebank 3 (Hajic et al. 2004 ), and document collections such as the Arabic Gigaword corpus (Graff 2003 ; Graff et al. 2006 ). In particular, Arabic NLP lacks resources such as corpora, lexicons, machine-readable dictio-naries in addition to fully automated fundamental NLP tools such as tokenizers, part-of-speech taggers, parsers, and semantic role labelers (Diab et al. 2007 ), although this has started to change in recent years (Maegaard et al. 2008 ; Alghamdi et al. 2009 ; Habash and Roth 2011 ; Diehl et al. 2012 ). 4 Benajiba et al. ( 2010 ) built an Arabic Named Entity system by bootstrapping noisy features based on a projection from a parallel Arabic X  X nglish corpus.

As is the case with many other NLP applications, most of the activities in our problem domain of text summarisation are concerned with the English language. This is evident in the long track record of competitions as part of the Text Analysis Conference series (TAC) 5 and, prior to that, the Document Understanding Conference series (DUC) 6 , which have both focused on English. This is reflected in the availability of resources: in particular, at the time we started our research into Arabic summarisation there were no readily available Arabic gold-standards for evaluating the results. We needed to consider how to generate such resources, while reducing the cost and time taken compared to traditional approaches. 1.2 Overview We will demonstrate three methods for acquiring gold-standard language resources for Arabic summarisation:
Crowdsourcing: using crowdsourcing to acquire a resource that is relatively cheap and small but can be built rapidly;
Machine translation: using existing gold-standard collections and machine translation tools to translate an existing gold-standard resource that is easy to create but of lower quality, with more  X  X  X oise X  X ;
Manual methods: using manual effort with native speakers to create a resource that is more expensive but of high quality.
 These demonstrate how additional resources can be created rapidly and relatively cheaply where currently they are in short supply. The resources themselves should also be of benefit to those working on Arabic NLP. As an example, the specific resources created using the last of these methods was used as a reference collection in the TAC-2011 MultiLing workshop 7 , illustrating how such resources can contribute to advancing the state of the art.

The paper is organised as follows. Section 2 presents the background of the different paradigms and methodologies for creating language resources, and some background on Arabic and NLP tools for Arabic. Section 3 illustrates three methods for creating language resources, using Arabic gold-standard summarisation as a case study. In Sect. 4 we present an evaluation of the resources we created. Section 5 concludes. 2 Related work We briefly review three areas of related work: language resource creation; text summarisation; and Arabic natural language processing. 2.1 Creating language resources Language resources play an important role in the development and evaluation of NLP tools and techniques. The creation of such resources can be performed either manually or automatically. Manual creation of resources usually involves human experts who may, for example, annotate or translate such datasets. In the case of automatic summarisation, the experts would create gold-standard summaries for a dataset to assess the quality of the automated process. Automatic creation of language resources makes essential use of computers where we might otherwise have employed an expert. In some cases a combination of automatic and manual techniques is used (as with the English Penn Treebank, Marcus et al. 1993 ). Marsi and Krahmer ( 2013 ) created a paraphrase annotated corpus in Dutch. The corpus comprises over 2.1 M tokens, 678K of which was manually annotated and 1,511 K was automatically processed. 2.1.1 Manual creation of language resources Traditionally, language resources such as the lexical knowledge base WordNet (Fellbaum 1998 ; Abouenour et al. 2013 ), were created manually by experts. A significant amount of time and effort is required. The results can be of high quality , but they may be somewhat narrow in scope. The manual approach is still popular, even if some details began to change around 20 years ago, when large volumes of textual data became readily available in electronic form. This has allowed statistical  X  X  X ootstrapped X  X  approaches to be adopted.

A key example of expert annotation is the English Penn Treebank annotated corpus (Marcus et al. 1993 ). Although this used an automatic phase for some of the initial annotations, this was followed by manual correction. Manually created corpora have been useful in developing statistical NLP methods for a range of problems. Examples include a corpus for detecting plagiarism (zu Meyer et al. 2007 ), for paraphrasing (Dolan et al. 2004 ), and for machine translation (Huang et al. 2002 , for example).

Outahajala et al. ( 2011 ) built a POS-tagger for Amazighe, an under-resourced language. The data used to accomplish the work was manually collected and annotated. To help increasing the performance of the tagger, they used machine learning (SVM) and other resources, such as dictionaries and word segmentation tools to process the text and extract feature sets consisting of lexical context and character n-grams. The corpus contained 20,000 tokens and was used to train their POS-tagger model.

More recently crowdsourcing approaches have become popular. While still manual in character, the role of the expert is replaced by the votes of a number of relatively naive users. This can help reduce the effort and expense of creating large-scale language resources with no significant adverse impact on annotation quality, at least for some judgements (see for example Howe 2008 ; Snow et al. 2008 ). Typically, crowdsourcing involves soliciting contributions from a community of online users. One of the main platforms applied to a variety of natural language processing tasks in this context is Amazon X  X  Mechanical Turk (AMT). 8
Snow et al. ( 2008 ) examined the accuracy of applying AMT for different NLP tasks, namely affect recognition, word similarity, recognising textual entailment, event temporal ordering, and word sense disambiguation. Annotations by AMT non-expert workers showed high agreement with gold-standard labels provided by expert annotators. Similar results concerning quality have been demonstrated by other studies, such as in the context of translation (Callison-Burch 2009 ). 9 Using crowdsourcing to create language resources has emerged as an economical and fast alternative to human experts, but care must be taken to guarantee high-quality results. Different factors may affect the overall quality obtained from the annotation (Aker et al. 2012 ).

Examples of crowdsourcing approaches as a useful method for creating natural language processing resources include Kaisser and Lowe ( 2008 ); Yang et al. ( 2009 ); Alonso and Mizzaro ( 2009 ); Callison-Burch ( 2009 ); El-Haj et al. ( 2010 ); Albakour et al. ( 2010 ). This is related to the technique known as human computation , which aims to create very large-scale resources by, for example, accumulating annotations contributed by many individuals. It is particularly appealing for creating natural language processing resources (see Chamberlain et al. 2013 ; Poesio et al. 2013 , for example). 2.1.2 Automatic creation of language resources Automatic, computer-based methods have some promise of providing a more economical alternative to human-created, large-scale language resources, particu-larly when unsupervised methods can be applied.
 Such methods are often applied to material that has been sourced from the web. For example, the WaCky corpora (Baroni et al. 2009 ) include more than a billion words in three languages X  X nglish (ukWaC), German (deWaC) and Italian (itWaC). The corpora were built by crawling, downloading and processing web documents, and then applying basic linguistic annotation including part-of-speech tagging and lemmatisation. They are intended as general-purpose resources for the target languages. Dolan et al. ( 2004 ) applied an unsupervised technique to construct a large paraphrase corpus using a simple string edit distance and a heuristic strategy to pair initial sentences from different news stories within the same collection. The PAN plagiarism corpus PAN-PC-09 used an automated process to insert 94,202 cases of artificial plagiarism in 41,223 documents (Potthast et al. 2013 ). Grid architectures ( X  X  X roup of distributed computers X  X , Foster et al. 2002 ) have been used to process large scale data to automatically build a large scale text corpus (Li et al. 2007 ). Chiarcos et al. ( 2010 ) created a corpus of multiple parses of German sentences using a probabilistic constituent parser (BitPar) and a rule-based parser (B3 Tool) that produces semantically enriched dependency parses. They combined BitPar and B3 Tool parses in a way to provide a more reliable linguistic analysis. The purpose of this resource is to assess weaknesses in automatic parsers. Nemeskey and Simon ( 2012 ) presented a language-independent fully automated approach to build Named Entity (NE) annotated corpora from Wikipedia 10 . They used the links between the articles on Wikipedia and the in-article links (redirect and other language links) to identify entities in the sentences and tag them using a supervised  X  X  X ilver standard X  X . Ptaszynski et al. ( 2012 ) automatically annotated a five billion word corpus of Japanese blogs using a word and sentence level affect analysis and detailed analysis of emoticons. The annotated information includes affective features (emotive/non-emotive) and emotion classes (joy, sadness, etc.). Kozareva and Hovy ( 2013 ) implemented a minimally supervised, automated algorithms to build terminology taxonomies and wordnets for different languages by harvesting large amounts of online domain-specific general text.

This demonstrates that it is not unusual to use automatic approaches to creating large-scale natural language resources. When the automatic techniques are language-independent, they can be adapted relatively easily to develop similar corpora for other languages. One drawback of any automated approach is the high likelihood that the resource will contain  X  X  X oise X  X  which is introduced by errors and the inevitable simplifications and approximations in the automated analysis. 2.1.3 Creation of language resources for under-resourced languages Language such as English, German and French, have a vast number of resources and natural language processing tools. This is due to a long history of research and investment. The resources include freely available corpora and tools, such as part-of-speech taggers, semantic parsers, morphological and morphosyntactic analysers, et cetera. But many languages suffer from a lack of resources. This can impede progress on NLP with these languages. Those working with such languages often face a  X  X old-start X  problem.
 There is some work on developing resources with other languages. Walther and Sagot ( 2010 ) proposed a methodology for building language resources from scratch. In their work they focused on Sorani Kurdish. Using a small annotated corpus and a basic seed lexicon to train a part-of-speech tagger they generated a large-scale part-of-speech tagged corpus.
 Getao and Miriti ( 2006 ) constructed a Swahili (Kiswahili) corpus from the Web. They first downloaded documents from the Web and then built a Swahili language model using unigram and bigram counts. The model was used to determine if a document is in Swahili and to construct search queries to help retrieve more documents.

Guevara ( 2010 ) used the approach of Baroni et al. ( 2009 ) to build a web-based corpus for Norwegian. The corpus was created by crawling, downloading and processing web documents in the top level  X  X  .no  X  X  Internet domain. The corpus contains 700 million tokens. It would be difficult to expand beyond this due to the limits imposed by the number of public Norwegian documents on the Internet. The corpus is nearly one third the size of the published comparable Italian, German and English corpora.

Nguyen et al. ( 2009 ) built a large syntactically annotated corpus for Vietnamese by constructing a treebank. To create the annotated corpus they followed the same approach that was used to create the English Penn Treebank (Marcus et al. 1993 ): automatic parsers annotated the corpus and human annotators corrected any errors. The Vietnamese treebank consists of 10,368 annotated sentences with 210,393 words and 255,237 syllables. They also syntactically labelled 9,633 sentences with 208,406 words and 251,696 syllables.
 Green et al. ( 2012 ) describe the creation of the Indonesian dependency treebank. The treebank they created was a collection of manually annotated Indonesian dependency trees which consisted of 100 Indonesian sentences with 2,705 tokens and a vocabulary size of 1,015 unique tokens. They successfully trained their dependency parser using the manually annotated data. There is hope that this will help them to provide a semi-supervised annotation and expand the corpus size.
Buhay et al. ( 2010 ) X  X  AUTOLEX is an automatic lexicon builder intended to be used with minority languages. In their study they considered Tagalog X  X n Austronesian language spoken as a first language by a quarter of the population in the Philippines. They retrieved documents from the Internet written in the target language and built a lexicon using frequency-based algorithms. 2.2 Text summarisation Document summarisation is the process of creating an abstract or precise of a document, or collection of related documents, in order to present the key ideas in a more concise form. Manual summarisation can be time-consuming and expensive. The summaries may also be subjective. Different individuals will produce different summaries, highlighting, and obscuring, different facets. Automatic summarisation seeks to address these concerns. Work on automatic summarisation started more than 50 years ago (Luhn 1958 ) and is still an active area of research, as illustrated by many tools, techniques and evaluations that keep emerging (Sekine and Nobata 2003 ; Wang et al. 2010 ; Nenkova and McKeown 2012 ).

The quality of a summary may be judged by whether it identifies appropriate aspects, whether it is readable, whether it maintains appropriate relationships, such as the chronological order of events, and whether it avoids repetition. Human precises, or abstracts, are typically written from scratch, so that they form a coherent narrative. This requires deep semantic understanding, and language generation. In contrast to such abstractive summaries, mechanically generated summaries are typically extractive : they consist of a selection of sentences taken from the document. The quality of such extractive summaries can be evaluated by using metrics to compare against gold-standard summaries, either abstractive or extractive. Without gold-standard resources for the language concerned, it can be difficult to make progress in producing high-quality automatic summarisation algorithms.

There are a range of tools and techniques that have been employed in automatic text summarisation. For extractive summaries, the tasks are to identify the key sentences. In the case of multi-document summarisation, as opposed to single-document summarisation, the problem of eliminating redundancy becomes partic-ularly important. Fukumoto et al. ( 2010 ) used clustering to eliminate redundancy where they classified the extracted sentences into groups of semantically related sentences. Hendrickx et al. ( 2009 ) used semantic overlap to identify redundant sentences in their Dutch multi-document summariser system. Bossard and Rodrigues ( 2010 ) combined multi-document summarisation with a genetic algorithm (Banzhaf et al. 1998 ). They used clustering to detect redundant sentences. The genetic algorithm was used to adapt the system to specific domains. Wang and Li ( 2012 ) developed a weighted consensus summarisation method to combine results from single-document summarisation systems. They studied different methods for multi-document summarisation, including centroid-based, graph-based, and dimension reduction to improve the summarisation quality. They used the DUC-2002 and DUC-2004 datasets. They compared their method with various baselines based on average score, average rank and other measures. Barrera and Verma ( 2011 ) used a combination of syntactic and semantic approaches. They developed a single-document summariser that exploits a document X  X  word popularity, sentence position, and semantic linkage as three main approaches for sentence extraction.

Automatic text summarisation intersects with many other natural language processing fields, including information extraction, automated question answering, natural language generation and machine translation. The overlap suggests that automatic text summarisation can be viewed as forming part of a larger picture of NLP techniques and problems. 2.3 Arabic natural language processing 2.3.1 The Arabic language The Arabic language is the most widely spoken member of the family of Semitic languages. It is closely related to Amharic and Aramaic. Arabic is spoken by around 400 million people living in the Middle East, North Africa, and the Horn of Africa (Prochazka 2006 ). This suggests a large potential audience for Arabic NLP. Like other languages, literary Arabic continues to evolve. Classical Arabic (especially from the pre-Islamic to the Abbasid period, including Qur X  X nic Arabic) can be distinguished from Modern Standard Arabic (MSA) that is used nowadays in news and media. Arabic has several spoken dialects (varieties of Arabic). Different dialects are spoken in different countries, and in different regions of the same country. These are rarely written. This is in contrast to MSA which is mostly written and rarely spoken. In effect there is only one written language.
 There has been some work on applying NLP to Arabic, and Arabic corpora (Al-Sulaiti et al. 2006 ). There has been quite a lot of work on Arabic syntax (Sawalha and Atwell 2010 ; Al-Shammari and Lin 2008 ; Benmamoun 2007 ). Yaseen and Theophilopoulos ( 2001 ) developed NAPLUS, a prototype system for processing and understanding the Arabic language. They developed utilities and tools to support Arabic NLP research in many areas such as automatic translation, text abstraction, question answering interfaces to databases and many related applications. Recently, there has been other work on syntactic annotation of Qur X  X nic Arabic (Dukes et al. 2013 ). 11 Kilgarriff et al. ( 2013 ) developed a monolingual and bilingual word lists database, KELLY, for nine languages including Arabic. The Arabic word list contains the top 9,000 most frequent Arabic words. Buckwalter and Parkinson ( 2011 ) put together a list of the top 5,000 most frequent Arabic words, in addition the word list contains dialectical Arabic words.

As elsewhere in the world, the number of Internet users in the Arab world has been increasing (reaching 90 million by the end of 2012). 12 In the last decade, the volume of Arabic textual data has also grown on the Internet, and Arabic software for browsing the Web has improved in quality. It can be argued that this increased access to the Internet creates a need, and an opportunity, for automatic summarisation. 2.3.2 Challenges in Arabic NLP Like other Semitic languages, Arabic has a complex  X  X oot-and-pattern X  morphology. The root is a collection of consonants. The meaning of a word is determined by both the root and the pattern into which the root is embedded. This complicates the process of interpretation. For many languages, NLP techniques can benefit from stemming (for example, in order to reduce the dimensionality of vector-space models). But in the case of Arabic, finding the root, or stem, of a word is challenging to automate. And the root of a word often has a very abstract meaning which is not at an appropriate level for NLP. In addition, words in Arabic can be  X  X orrowed X  from other contexts, increasing ambiguity, presenting a challenge to the mechanical interpretation of Arabic.

It seems there are some aspects about the nature of Arabic that have slowed down the progress in Arabic NLP compared to the accomplishments in English and other European languages (Diab et al. 2007 ; Roberts et al. 2006 ). These include the following:  X  The absence of capitalisation in Arabic makes it hard to identify proper nouns,  X  Arabic is highly inflectional and derivational, which makes morphological  X  Diacritics (vowels) are, most of the time, omitted from the Arabic text, which One of the challenges faced by Kilgarriff et al. ( 2013 ) when creating the Arabic word list was the absence of Arabic diacritics (vocalisation). They also found that the corpus for Arabic proved to have a bias towards religious terminology as a relatively high frequency of religious terms and phrases were found.

In addition to the above linguistic issues, there is also a shortage of Arabic corpora, lexicons and machine-readable dictionaries. These tools are essential to advance research in different areas.
 Arabic NLP has focused on the morphological, lexical and syntactic properties of Arabic. Semantic processing of the Arabic language X  X ven broadly construed X  X s still in its early stages (Haddad and Yaseen 2005 ; Diab et al. 2007 ; Al-Shammari and Lin 2008 ; Hmeidi et al. 2010 ; Benajiba et al. 2010 ). Morphological analysis of words in a text is the first stage of most natural language applications. It has been regarded as being particularly crucial in processing highly inflectional and derivational languages like Arabic (Diehl et al. 2012 ). Although Arabic morphology is considered complex compared to many other languages, attempts to tackle this problem have been quite successful (Sawalha and Atwell 2010 ; Beesley 1998 ; Abuleil et al. 2002 ; Darwish et al. 2005 ; Smrz  X  2007 ; Habash and Roth 2011 ). There are also a number of tools for tokenisation and stemming of Arabic (Larkey et al. 2002 ; Al-Ameed et al. 2006 ; Attia 2007 ; Al-Shammari and Lin 2008 ; Hmeidi et al. 2010 ; Althobaiti et al. 2014 ).
 Some commercial Arabic resources and tools are available online, such as Sakhr 13 and RDI 14 . There has been an increased demand for resources and tools to assist and advance the research on Arabic. There are also some annotated Arabic text treebanks (such as the Arabic Penn Treebank and Prague Arabic Dependency Treebank). There has been some progress in addressing limited Arabic resources for specific areas, such as plagiarism detection, for example (Bensalem et al. 2013 ). 15 But gold-standard collections for Arabic text summarisation have not been available until we started work in this area. Arabic has not featured in popular competitions such as TAC and DUC.

While the absence of Arabic resources for summarisation initially presented us with a problem, in the end it provided an opportunity to explore different methods for developing resources for a widely used but relatively under resourced language that could provide lessons for other languages that currently lack resources. 3 Three approaches to create language resources Different language resources are required for different NLP applications. For evaluation purposes we refer to them as  X  X est collections X  which typically include appropriate gold standards. Measuring the performance of different techniques against gold standards allows the different results to be compared. For automatic summarisation, test collections are required that contain documents with gold-standard summaries. The summaries may be human-generated, either by human experts or some form of crowdsourcing. In the case of the cross-linguistic approach that we tried, such summaries may also be translated into other languages using human translators and machine translation tools.

For languages such as English resources with gold-standard summaries are readily available. Furthermore, numerous results have been published. This allows researchers to compare their work with that of others when judging their summariser X  X  quality and performance. This is not the case for all languages. In particular, we found there were few appropriate and readily-available resources for Arabic summarisation to evaluate our results. Nor were there published results with which our work could be compared directly. This meant we had to find ways of producing appropriate resources quickly and cheaply, and find novel ways of comparing our results to state-of-the-art summarisation for other languages.
To create resources for single and multi-document text summarisation we need to identify an appropriate collection of documents, whose use is not restricted for such work, and find fluent users of the language who are able to help build the resource, such as being able to produce and verify gold-standard summaries. Ideally the resource should be made available to a wider audience to allow others to publish their results as measured against the gold-standard. One obstacle is then finding documents whose copyright terms allow them to be distributed to others. Another is finding appropriately skilled participants and involve them in a way that is not too time-consuming or costly. This problem is more difficult if there is little funding.
For both multi-document and single-document summarisation, datasets can be obtained from websites that offer relatively liberal copyright terms. 16 For multi-document summarisation, any dataset selected should ideally contain groups of related articles. An example would be news articles about a topic from multiple sources. 17
A critical issue is finding skilled users of the language. The participants X  roles can include creating manual summaries and evaluating them. It is appropriate to have a number of model summaries for each document or set of related articles, each created by a different participant. This helps reduce the impact of individual bias in the summaries. As we were exploring cross-linguistic approaches to evaluation, we also required participants who could translate summaries, and evaluate the quality of translations.

We created resources for Arabic single and multi-document summarisation with gold-standard summaries. As will be seen, the tasks involved included summarising Arabic text documents, translating articles from English into Arabic, summarising the translated articles, and evaluating both the translations and the summarisation quality. These tasks were performed manually and with the aid of computer tools.
This work provides guidance for others who need to create resources for under-resourced languages. Furthermore, the resources themselves have been made available to the research community with the objective of helping to advance the state of Arabic NLP, especially single and multi-document summarisation. 3.1 Crowdsourcing language resources We first describe how we used crowdsourcing to construct a single-document summarisation corpus for Arabic. Crowdsourcing allowed us to do this rapidly and relatively cheaply.

This can be seen as an initial pilot. It was our starting point before moving on to the creation of corpora for multi-document summarisation.

We did not consider creating a multi-document summaries corpus using crowdsourcing. A key challenge was the problem of determining an objective way of handling potential  X  X  X pam X  X  answers for this more demanding task. 18 In this context, Lloret et al. ( 2013 ) found that crowdsourcing might not be the right service to generating informative summaries from a set of multiple related documents.
Someone could think of creating summaries from Wikipedia using just the first sentence as the summary. Even though the first sentence has been shown to be a significant feature in many summarisers (Fattah and Ren 2008 ; Yeh et al. 2008 ), it is interesting to note that summaries consisting of a single sentence only (e.g. Baseline-1 in El-Haj et al. 2010 ) do not score particularly well, which suggests that the first sentence is important but not sufficient for a good summary. Instead, we used Amazon X  X  Mechanical Turk (AMT) to recruit a sufficient number of fluent users of Arabic to create our gold-standard summaries of articles obtained from Wikipedia and Arabic-language news sources. This work lead to the Essex Arabic Summaries Corpus (EASC) . The corpus includes manually created summaries. These are intended to be used as a gold standard for evaluating Arabic summarisers. Some statistics for EASC are given in Table 1 . Below, we give the details of how this corpus was created. Figures 1 and 2 show a sample document and its summary created by AMT. 3.1.1 The document collection The document collection used in the creation of the single-document summaries corpus was extracted from the Arabic language version of Wikipedia and two Arabic newspapers; Alrai 19 (published in Jordan) and Alwatan 20 (published in Saudi Arabia). These sources were chosen for the following reasons: 1. They contain real text as written and used by native speakers of Arabic. 2. They are written by different authors from different backgrounds. 3. They cover a range of topics from different subject areas, each with a credible 4. We had the copyright holders X  permission to distribute the results. 21 The Wikipedia documents were selected by a group of students. They were asked to search for Wikipedia articles within ten given subject areas (art and music; the environment; politics; sports; health; finance and insurance; science and technology; tourism; religion; and education). To obtain a more uniform distribution of articles across topics, the collection was then supplemented with newspaper articles. These were retrieved from the newspapers X  websites using the same queries that the students used to select the Wikipedia articles. Overall, a total of 153 documents were used, containing a total of 18,264 words. On average, each document consisted of 380 words, with a minimum of 116 words and a maximum of 971 words. 3.1.2 Creating manual summaries The extractive summaries for the documents were generated by way of Human Intelligence Tasks (HITs) published on AMT. Any individual participating in one of these tasks was required to produce a summary of a given document by selecting those sentences they thought were the most important/significant. The sentences in the document were displayed to the participant as an enumerated list. The participant then used the numbers to identify those sentences they believed should be in the summary. They were required to select no more than half of the sentences in the article. 22 Using this method, five summaries were created for each article in the collection. Each of the summaries for a given article was generated by five different individuals. In the case of annotation tasks, it has been demonstrated that aggregating multiple independent annotations from different workers can produce good quality results (Albakour et al. 2010 ; Kazai et al. 2011 ). We assumed that this held true for the sentence selection task.

Participants were required to complete a quality control task. This was aimed at ensuring participants were properly engaged with the content of the articles, rather than selecting sentences  X  X  X t random X  X . To this end, participants were asked to provide up to three keywords for the article they were summarising. To avoid the risk of introducing subjective bias, the results of this task were not used to filter the final results. For the same reason, even apparently idiosyncratic sentence selections are included. 3.1.3 Creating gold-standard summaries for EASC The gold-standard summaries for the corpus were generated by combining the participants X  sentence selections. Essentially, the selection of a sentence from a document was treated as a  X  X  X ote X  X  in favour of including that sentence in a gold-standard summary. The number of votes for a sentence had to pass a threshold for it to be included in a gold-standard summary. This amounts to an aggregation method for combining the results (Kittur et al. 2011 ).

To obtain a better understanding of the impact of the aggregation method, we selected three different thresholds, giving rise to three different gold-standard summaries for each document. At the lowest threshold ( X  X  Level 1  X  X , or  X  X  All  X  X ), a sentence was included in a gold-standard summary of a document if any of the participants had selected it. For the intermediate threshold ( X  X  Level 2  X  X ), a sentence had to be selected by at least two participants for it to be included in the gold-standard summary. And for the highest threshold ( X  X  Level 3  X  X ) a sentence had to have been selected by at least three of the five of the participants. 23
The Level 1 summaries are likely to contain a lot of noise in the form of idiosyncratic outlier sentences. For this reason only the Level 2 and Level 3 summaries should be regarded as providing genuine gold-standard summaries, with reduced subjective bias. The summaries from Level 1 merely give us a point of comparison. 3.1.4 Summary In addition to producing a useful resource for Arabic NLP, this work also demonstrated the application of inexpensive crowdsourcing for natural language resource creation. The documents and 765 human-generated summaries of EASC are freely available to the community. 24 The size of the corpus was determined in part by the available financial resources. The method can be scaled quite easily if more resources are available. The method used to produce EASC could be adopted, and adapted, to produce a significant body of gold-standard single document summaries and other NLP resources for a range of languages. The actual process is language independent, provided that a sufficiently large number of users of the language are available. 3.2 Creation of resources using machine translation The second approach we illustrate here is to translate an existing gold-standard resource into the target language. Similar to Aker and Gaizauskas ( 2010 ) where they used machine translation to translate summaries in English into German, here we describe using machine translation to create an Arabic corpus of multi-document summaries from an English language dataset without any post-editing on the translated summaries. The English dataset chosen was from DUC-2002. 25
There are numerous published results that use the DUC-2002 dataset as a benchmark for multi-document summarisation. This provides us with performance figures that can be used when evaluating the results of Arabic multi-document summarisation on the translated corpus. This was an important factor in our decision to construct a translated version of the DUC-2002 dataset.

The DUC-2002 dataset contains 567 articles and 1,111 gold-standard (model) summaries. The documents are grouped into  X  X  X eference sets X  X  X  X  reference set being a small collection of documents about a particular topic. These reference sets provide appropriate source material for multi-document summarisation. In this case, the documents in a reference set all fell into one of the following four categories, with originally fifteen reference sets for each category. 26 1. Documents discussing a single natural disaster created within a seven day 2. Documents about a single event in any domain and created within at most a 3. Documents about multiple distinct events of a single type with no limit on the 4. Documents presenting biographical information mainly about a single The reference sets were produced using data from the TREC question-answering track in TREC-9 27 . Table 2 shows the corpus statistics of the DUC-2002 Arabic translation. Figure 3 shows a sample summary created by the use of machine translation technology.

The model summaries included both single and multi-document abstractive and extractive summaries. In this case we are only interested in the multi-document extractive summaries. Each reference set had two multi-document extractive summaries, one of at most 400 words, and another of at most 200 words. No partial sentences were used. The sentences in the shorter summary all appeared in the larger summary. 3.2.1 Translation of DUC-2002 dataset The DUC-2002 dataset was translated automatically into Arabic sentence-by-sentence using the Java version of Google Translate API. 28 A total of 17,340 sentences had to be translated. Google Translate limits the size of text and the number of requests that can be made in a given period. This was accommodated by translating only one sentence every half-second.

This approach to translating a gold-standard resource can be applied to other languages, provided that an appropriate translation system is available for the specific language pair. The method should be helpful when there is a shortage of human participants who know the target language, or when there is little or no funding available. It also has the advantage of allowing those working in the target language to compare their results with those obtained by state-of-the-art systems in the source language, on the very same dataset. 3.3 Creation of language resources using human experts The third paradigm we illustrate involves the use of selected human participants to create a resource for Arabic multi-document summarisation, with no automation or anonymous  X  X  X rowdsourcing X  X . The tasks included translation, summarisation and validation.

This corpus was created through our involvement in the organisation of the TAC-2011 MultiLing Summarisation Pilot. 29 The test collection consisted of 100 documents drawn from WikiNews texts. 30 The source documents were in the form of plain text UTF-8 encoded files, with no meta-data or tags. The 100 documents were assigned to ten reference sets. Each reference set contained ten related articles discussing the same topic. The original language of the dataset was English. This was translated and summarised in six languages X  X rabic, Hindi, French, Czech, Greek and Hebrew X  X o give a multi-lingual test collection.

The preparation of the Arabic corpus for the TAC-2011 MultiLing Summari-sation Pilot is our focus of interest here. Table 3 shows the corpus statistics of the TAC-2011 Arabic dataset.
 A total of twelve people participated in creating the Arabic version of the corpus. They were selected based on their proficiency in Arabic and English. Each one of them had to have Arabic as a first language. The participants were either studying, or had completed a university degree in an Arabic-speaking country. The participants were between 22 and 64 years of age. The participants were paid using Amazon vouchers. The value of the vouchers awarded to each participant depended on the task performed. The total value of Amazon vouchers paid to the participants was  X 250.

The participants translated the English dataset into Arabic. For each translated article another translator validated the translation and fixed any errors. Three extractive summaries were manually created for each of the translated reference sets. 31 Each of the summaries for a reference set were created by different participants. Participants in the summarisation process were required to evaluate the quality of other summaries. They did so by assigning a score between one (unreadable summary) and five (fluent and readable summary). No self-evaluation was permitted. Appendix 2 shows the detailed guidelines given to the participants.
The manual evaluation was based on the Overall Responsiveness of a text (Appendix 2 ). Figure 4 shows a sample summary.

The average time for reading the English news articles by the Arabic native speaker participants was four minutes. The average time it took them to translate those articles into Arabic was 25 minutes, and to validate each of the translated Arabic articles the participants took six minutes on average. For the summarisation task the average time for reading the set of related articles (ten articles per each set) was 17 minutes. The average time for creating a multidocument summary of a reference set was 24 minutes.

Until TAC-2011, participation to DUC and later TAC workshops was essentially limited to English summarisation. The creation of the TAC-2011 MultiLing corpora can be seen as an example of addressing the need for more gold-standard resources for under-resourced languages, more specifically the creation of high-quality gold-standard multi-lingual summaries for multi-document summarisation. More gener-ally, the TAC-2011 corpus could help those working on automatic summarisation, question answering, and automatic translation. The corpus is freely available. 32
One issue encountered in developing this resource was the difficulty in finding appropriately skilled users of the language concerned. This is a particularly acute problem when the research is based in countries where the majority of people use a different language. In our case it was difficult to find participants for whom Arabic was a first language. Most of our participants were located in other countries. We communicated with the participants online, which complicated the management of the process. 4 Evaluation In this section we present human evaluations of some of the language resources we created, including the summaries generated using human experts and crowdsourc-ing. The evaluations were performed by Arabic native speakers who assessed the summaries on a five-point Likert scale. We applied a comparable evaluation methodology to both cases. Pairwise t tests (with p \ 0 : 05) have been applied were appropriate to test for significantly different results.
 The summaries generated by machine translation (Sect. 3.2 ) were not evaluated. The main purpose of using this technique was to automate the evaluation of a non-English summariser, rather than to generate good quality summaries directly. In addition this would require us to evaluate the quality of automatic translation, which we considered to fall outside the scope of our work. In the case of the human generated translations, evaluation was already incorporated into the validation procedures (Appendices 1 , 2 and 3 ).
 4.1 Evaluating crowdsourcing language resources To evaluate the single-document summarisation corpus (EASC, Sect. 3.1 ) we asked three individuals (X, Y and Z in Table 4 ) to evaluate the quality of summaries obtained by a range of methods on a random sample of ten documents (see Appendix 3 ). Each participant evaluated a number of 110 summaries. The evaluators were paid  X 10 per hour. The evaluation task was estimated to be three hours in total.

Three crowdsourcing methods of obtaining a document summary were assessed, namely: (1) Crowdsourced Summaries  X  X andomly selecting individual summaries as (2) Level 2  X  X ggregated summaries over all five individual summaries obtained (3) Level 3  X  X imilar to  X  X  X evel 2 X  X  but with stricter aggregation (Sect. 3.1.3 ). In addition, four automatically generated summaries were also evaluated: (4) Baseline X 1  X  X here the summary consists of the first sentence of each (5) Baseline X 2  X  X he first two sentences of each document; (6) Baseline X 3  X  X he first three sentences of each document; and (7) a centroid summary (see Radev et al. 2000 , 2004 ; Sarkar 2009 , for example). The first-sentence baseline had been occasionally used as a sensible baseline. It is similar to the first-n -words baseline summariser. Both of these baselines have been widely used in the DUC and TAC summarisation tasks (Katragadda et al. 2009 ; Nenkova 2005 ). We included centroid summaries because they scored highly when evaluated in previous experiments (El-Haj et al. 2011a , c ). These summaries consist of those sentences that are closest to the vector-space centroid of the document collection (using cosine similarity), up to a maximum of 250 words, or no more than 50% of the document X  X  sentences, whichever is the lowest. The centroid is calculated by treating the document collection as a bag of words.

The evaluation was anonymised. The evaluators were not aware whether they were evaluating human or system summaries.

Table 4 shows the results of the evaluation of the seven approaches. Baseline X 1 performs significantly worse than any of the crowdsourced approaches (i.e. any approach that involved user assessments) as well as the centroid-based approach.
The centroid-based baseline performed well. As this is a fully-automated approach it is intuitively appealing as it does not involve additional costs to run experiments.

One reason that Baseline-1 does not score particularly well could be that while the first sentence may be important, it is not sufficient for a good summary (Katragadda et al. 2009 ).

Adding more sentences improves the overall assessed quality (in some cases significantly) but neither Baseline-1 nor Baseline-2 outperform any of the other methods.

In the case of the Level 3 summaries, this method results in relatively short summaries. For this reason this approach might suffer from a similar problem as Baseline-1 in that the aggregated result tends to contain text that is appropriate but not sufficient for a good summary.

All other methods perform on par with each other with only marginal differences: we found no significant difference between the top performing methods.
This evaluation only considers a sample of documents, and involves a very small number of experts. The variation of assessments given between experts is quite large. Using more assessors and documents may help identify statistically significant differences. 4.2 Evaluating language resources by human experts We also evaluated the language resources created by the human experts for the TAC-2011 MultiLing Summarisation Pilot (Sect. 3.3 ). The same human experts mentioned in Sect. 3.3 evaluated 30 Arabic multi-document summaries. The manual evaluation was based on the Overall Responsiveness of a text (Appendix 2 ). Twelve participants evaluated summaries generated by three different human experts (A, B and C) in addition to the global topline ( ID10 ) and baseline ( ID9 ) systems.
The global baseline system X  ID9  X  X s effectively a version of the centroid summariser (Radev et al. 2000 , 2004 ; Sarkar 2009 ) as outlined in Sect. 4.1 . The summariser sorts sentences based on their cosine similarity to the centroid of a cluster, then starts adding sentences to the summary, until it either reaches 250 words, or it reaches the end of the document. In the latter case, it continues with the next document in the sorted list.

The global topline system X  ID10  X  X sed information from the model summaries (i.e. cheats). First, it split all source documents into sentences. Then it uses a genetic algorithm to generate summaries that have a vector with maximal cosine similarity to the centroid vector of the model summary texts (see the  X  X  X eMoG X  X  method, Giannakopoulos and Karkaletsis 2011 , for more details).

Table 5 shows the evaluation scores of the baseline, topline systems in addition to the summaries created by the human experts.
 As before, the centroid-based method ( ID9 ) performs very well.

The human evaluators ranked summaries by human expert B to be of highest quality. Summaries by baseline (ID9) were ranked high by the evaluators. We assume this is because they contained continuous text, resulting in more readable summaries.

The guidelines for those producing summaries did not indicate whether abstractive or extractive summaries were required. Notes made by participants showed that they tended to use the extractive method as it is less time consuming. The summaries concatenate sentences taken from different contexts, and as a result they often lack coherence.

Those producing the summaries also expressed concern that the 250-word limit was too low when summarising ten related documents. Some of the documents could not be represented in the summary. The guidelines were that a Likert score of five means the summary covers all the important aspects of the ten documents. As a consequence, some evaluators never awarded a score greater than four on the Likert scale. This potentially explains why baseline ID9 and topline ID10 received higher scores than A and C human summaries: the algorithms tended to pick sentences from a broader sample of the documents in each collection than the human summarisers. 5 Conclusions Resource creation plays an important role in advancing Natural Language Processing tools and applications. Lack of resources can be a serious problem particularly for evaluation purposes, when it is important to have some external metric against which to assess different methods and technologies.

This paper illustrates three different ways of creating gold-standard resources for under-resourced languages rapidly and relatively cheaply. Our examples were concerned with corpora for Arabic-language text summarisation. The methods we illustrate were as follows: 1. Using crowdsourcing . Such a resource is relatively cheap and small but can be 2. Automatic machine translation of an existing gold-standard collections. This is 3. Manual creation of a resource using proficient users of the language(s) The use of automated methods for creating language resources is appropriate when the tools required are more readily available than appropriately qualified partici-pants, or when no funding is available to identify and reimburse participants. The results of the evaluation suggest that it is appropriate to include centroid-based summaries as a sensible baseline; in our experiments their quality appears to be on a par with manual summarisation.

Generally our evaluations have low average scores for summaries regardless of the method. This could indicate two things: (i) the difficulty of the task of generating a good summary in general, and (ii) the limitations of an  X  X  X xtractive X  X  summary as opposed to an abstractive summary. This warrants further investigations.
All of the resources described in this paper are freely available to the research community. The corpora that have been created are of use for Arab-language researchers working on automatic summarisation, question answering, and automatic translation.
 Appendix 1: EASC corpus guidelines appendix Creating EASC corpus guidelines The Mechanical Turk workers were given the following guidelines for completing the task of creating the single-document summaries corpus (Sect. 3 ). 1. Read the Arabic sentences (Document). 2. In the first text box below type the number of sentences that you think are 3. The number of the selected sentences should not exceed 50% of the articles X  4. Just add the numbers of the sentences, please do not write text in the first text 5. In the second text box write down one to three Keyword(s) that represent the 6. If you have any comments please add them to the third text box below. 7. Failing to follow the guides correctly could lead to task rejection 8. NOTE: The article chosen for this task was selected randomly from the Internet. Figure 5 , shows an example for one of the HITs provided to the workers on the Mechanical Turk website. The reason for the selection of an answer field (instead of a checkbox or radio button) is that we aimed to reduce the noise and track spammers. We think that a design with e.g. radio buttons is not able to distinguish between MTurks as spammers and MTurks who produce noise (wrong selection but not produced by random procedure as it is the case by spammers), for example if the worker wrote  X  X  X wo X  X  instead of  X  X 2 X  X , we still consider this as a valid answer. Using radio buttons, when selection is made it is not clear whether the MTurk worker has selected it because he thought it is a correct answer or just by random. However, if we force an MTurk to write down the answer then this gives us the possibility to distinguish between spammers and noise. A spammer would give answers which are composed by random characters and/or numbers whereas a noise could be close to the right answer. Appendix 2: TAC-2011 dataset guidelines appendix Creating TAC-2011 dataset guidelines The following task guidelines were required by the participants to create a manual corpus for TAC-2011 MultiLing Pilot: 1. Translation: Given the source language text A , the translator is requested to 2. Translation Validation: After the completion of each translation, another 3. Summarisation: The summariser will read the whole set of texts at least once. 4. Evaluation: Each summary will be graded by 3 evaluators. If the summarisers Appendix 3: Evaluating Arabic summaries guidelines Evaluating EASC corpus summaries guidelines 1. Read a document at least once. 2. In the Evaluation form note the time (in minutes) it took you to read the 3. Read the document X  X  summary you are to evaluate 4. In the Evaluation form grade the summary with a value between 1 and 5. References
 Abstract Language resources are important for those working on computational methods to analyse and study languages. These resources are needed to help advancing the research in fields such as natural language processing, machine learning, information retrieval and text analysis in general. We describe the creation of useful resources for languages that currently lack them, taking resources for Arabic summarisation as a case study. We illustrate three different paradigms for creating language resources, namely: (1) using crowdsourcing to produce a small resource rapidly and relatively cheaply; (2) translating an existing gold-standard dataset, which is relatively easy but potentially of lower quality; and (3) using manual effort with appropriately skilled human participants to create a resource that is more expensive but of high quality. The last of these was used as a test collection for TAC-2011. An evaluation of the resources is also presented.
 Keywords Resources Summarisation Arabic Under-resourced languages 1 Introduction 1.1 Motivation Language resources are important for researchers working on using computational methods to analyse and study languages. These resources are needed to help make advances in natural language processing (NLP), machine learning, information retrieval, and text analysis in general (see for example Jing and McKeown 1998 ; Wilks et al. 1988 ; Schalley 2012 ; Boyer and Brun 2007 ; Halpern 2006 ;de Chalendar and Nouvel 2009 ; El-Haj et al. 2010 ; Walther and Sagot 2010 ).
Researchers have developed a wide range of NLP tools to analyse, parse and annotate different languages automatically. Language resources play two roles in these activities. The first is the use of large-scale annotated corpora to drive statistical NLP techniques. The second is the need for test collections for the purpose of evaluation against a gold-standard. Such resources for NLP are documented by efforts such as the Language Resources and Evaluation (LRE) Map (Calzolari et al. 2010 ). But for some languages, there are few such resources. In our case, the lack of gold-standard resources for the problem of summarising documents in Arabic lead us to investigate methods for developing them. Our investigations should be relevant to other languages and applications. 1
Arabic is an appropriate example to consider. Despite being a widely spoken language, it has been widely acknowledged that it has few publicly available tools and resources, apart from a few notable exceptions, such as the Arabic Penn Treebank 2 (Maamouri et al. 2003 , 2004 , 2005 ; Mourad and Darwish 2013 ), the Prague Arabic Dependency Treebank 3 (Hajic et al. 2004 ), and document collections such as the Arabic Gigaword corpus (Graff 2003 ; Graff et al. 2006 ). In particular, Arabic NLP lacks resources such as corpora, lexicons, machine-readable dictio-naries in addition to fully automated fundamental NLP tools such as tokenizers, part-of-speech taggers, parsers, and semantic role labelers (Diab et al. 2007 ), although this has started to change in recent years (Maegaard et al. 2008 ; Alghamdi et al. 2009 ; Habash and Roth 2011 ; Diehl et al. 2012 ). 4 Benajiba et al. ( 2010 ) built an Arabic Named Entity system by bootstrapping noisy features based on a projection from a parallel Arabic X  X nglish corpus.

As is the case with many other NLP applications, most of the activities in our problem domain of text summarisation are concerned with the English language. This is evident in the long track record of competitions as part of the Text Analysis Conference series (TAC) 5 and, prior to that, the Document Understanding Conference series (DUC) 6 , which have both focused on English. This is reflected in the availability of resources: in particular, at the time we started our research into Arabic summarisation there were no readily available Arabic gold-standards for evaluating the results. We needed to consider how to generate such resources, while reducing the cost and time taken compared to traditional approaches. 1.2 Overview We will demonstrate three methods for acquiring gold-standard language resources for Arabic summarisation:
Crowdsourcing: using crowdsourcing to acquire a resource that is relatively cheap and small but can be built rapidly;
Machine translation: using existing gold-standard collections and machine translation tools to translate an existing gold-standard resource that is easy to create but of lower quality, with more  X  X  X oise X  X ;
Manual methods: using manual effort with native speakers to create a resource that is more expensive but of high quality.
 These demonstrate how additional resources can be created rapidly and relatively cheaply where currently they are in short supply. The resources themselves should also be of benefit to those working on Arabic NLP. As an example, the specific resources created using the last of these methods was used as a reference collection in the TAC-2011 MultiLing workshop 7 , illustrating how such resources can contribute to advancing the state of the art.

The paper is organised as follows. Section 2 presents the background of the different paradigms and methodologies for creating language resources, and some background on Arabic and NLP tools for Arabic. Section 3 illustrates three methods for creating language resources, using Arabic gold-standard summarisation as a case study. In Sect. 4 we present an evaluation of the resources we created. Section 5 concludes. 2 Related work We briefly review three areas of related work: language resource creation; text summarisation; and Arabic natural language processing. 2.1 Creating language resources Language resources play an important role in the development and evaluation of NLP tools and techniques. The creation of such resources can be performed either manually or automatically. Manual creation of resources usually involves human experts who may, for example, annotate or translate such datasets. In the case of automatic summarisation, the experts would create gold-standard summaries for a dataset to assess the quality of the automated process. Automatic creation of language resources makes essential use of computers where we might otherwise have employed an expert. In some cases a combination of automatic and manual techniques is used (as with the English Penn Treebank, Marcus et al. 1993 ). Marsi and Krahmer ( 2013 ) created a paraphrase annotated corpus in Dutch. The corpus comprises over 2.1 M tokens, 678K of which was manually annotated and 1,511 K was automatically processed. 2.1.1 Manual creation of language resources Traditionally, language resources such as the lexical knowledge base WordNet (Fellbaum 1998 ; Abouenour et al. 2013 ), were created manually by experts. A significant amount of time and effort is required. The results can be of high quality , but they may be somewhat narrow in scope. The manual approach is still popular, even if some details began to change around 20 years ago, when large volumes of textual data became readily available in electronic form. This has allowed statistical  X  X  X ootstrapped X  X  approaches to be adopted.

A key example of expert annotation is the English Penn Treebank annotated corpus (Marcus et al. 1993 ). Although this used an automatic phase for some of the initial annotations, this was followed by manual correction. Manually created corpora have been useful in developing statistical NLP methods for a range of problems. Examples include a corpus for detecting plagiarism (zu Meyer et al. 2007 ), for paraphrasing (Dolan et al. 2004 ), and for machine translation (Huang et al. 2002 , for example).

Outahajala et al. ( 2011 ) built a POS-tagger for Amazighe, an under-resourced language. The data used to accomplish the work was manually collected and annotated. To help increasing the performance of the tagger, they used machine learning (SVM) and other resources, such as dictionaries and word segmentation tools to process the text and extract feature sets consisting of lexical context and character n-grams. The corpus contained 20,000 tokens and was used to train their POS-tagger model.

More recently crowdsourcing approaches have become popular. While still manual in character, the role of the expert is replaced by the votes of a number of relatively naive users. This can help reduce the effort and expense of creating large-scale language resources with no significant adverse impact on annotation quality, at least for some judgements (see for example Howe 2008 ; Snow et al. 2008 ). Typically, crowdsourcing involves soliciting contributions from a community of online users. One of the main platforms applied to a variety of natural language processing tasks in this context is Amazon X  X  Mechanical Turk (AMT). 8
Snow et al. ( 2008 ) examined the accuracy of applying AMT for different NLP tasks, namely affect recognition, word similarity, recognising textual entailment, event temporal ordering, and word sense disambiguation. Annotations by AMT non-expert workers showed high agreement with gold-standard labels provided by expert annotators. Similar results concerning quality have been demonstrated by other studies, such as in the context of translation (Callison-Burch 2009 ). 9 Using crowdsourcing to create language resources has emerged as an economical and fast alternative to human experts, but care must be taken to guarantee high-quality results. Different factors may affect the overall quality obtained from the annotation (Aker et al. 2012 ).

Examples of crowdsourcing approaches as a useful method for creating natural language processing resources include Kaisser and Lowe ( 2008 ); Yang et al. ( 2009 ); Alonso and Mizzaro ( 2009 ); Callison-Burch ( 2009 ); El-Haj et al. ( 2010 ); Albakour et al. ( 2010 ). This is related to the technique known as human computation , which aims to create very large-scale resources by, for example, accumulating annotations contributed by many individuals. It is particularly appealing for creating natural language processing resources (see Chamberlain et al. 2013 ; Poesio et al. 2013 , for example). 2.1.2 Automatic creation of language resources Automatic, computer-based methods have some promise of providing a more economical alternative to human-created, large-scale language resources, particu-larly when unsupervised methods can be applied.
 Such methods are often applied to material that has been sourced from the web. For example, the WaCky corpora (Baroni et al. 2009 ) include more than a billion words in three languages X  X nglish (ukWaC), German (deWaC) and Italian (itWaC). The corpora were built by crawling, downloading and processing web documents, and then applying basic linguistic annotation including part-of-speech tagging and lemmatisation. They are intended as general-purpose resources for the target languages. Dolan et al. ( 2004 ) applied an unsupervised technique to construct a large paraphrase corpus using a simple string edit distance and a heuristic strategy to pair initial sentences from different news stories within the same collection. The PAN plagiarism corpus PAN-PC-09 used an automated process to insert 94,202 cases of artificial plagiarism in 41,223 documents (Potthast et al. 2013 ). Grid architectures ( X  X  X roup of distributed computers X  X , Foster et al. 2002 ) have been used to process large scale data to automatically build a large scale text corpus (Li et al. 2007 ). Chiarcos et al. ( 2010 ) created a corpus of multiple parses of German sentences using a probabilistic constituent parser (BitPar) and a rule-based parser (B3 Tool) that produces semantically enriched dependency parses. They combined BitPar and B3 Tool parses in a way to provide a more reliable linguistic analysis. The purpose of this resource is to assess weaknesses in automatic parsers. Nemeskey and Simon ( 2012 ) presented a language-independent fully automated approach to build Named Entity (NE) annotated corpora from Wikipedia 10 . They used the links between the articles on Wikipedia and the in-article links (redirect and other language links) to identify entities in the sentences and tag them using a supervised  X  X  X ilver standard X  X . Ptaszynski et al. ( 2012 ) automatically annotated a five billion word corpus of Japanese blogs using a word and sentence level affect analysis and detailed analysis of emoticons. The annotated information includes affective features (emotive/non-emotive) and emotion classes (joy, sadness, etc.). Kozareva and Hovy ( 2013 ) implemented a minimally supervised, automated algorithms to build terminology taxonomies and wordnets for different languages by harvesting large amounts of online domain-specific general text.

This demonstrates that it is not unusual to use automatic approaches to creating large-scale natural language resources. When the automatic techniques are language-independent, they can be adapted relatively easily to develop similar corpora for other languages. One drawback of any automated approach is the high likelihood that the resource will contain  X  X  X oise X  X  which is introduced by errors and the inevitable simplifications and approximations in the automated analysis. 2.1.3 Creation of language resources for under-resourced languages Language such as English, German and French, have a vast number of resources and natural language processing tools. This is due to a long history of research and investment. The resources include freely available corpora and tools, such as part-of-speech taggers, semantic parsers, morphological and morphosyntactic analysers, et cetera. But many languages suffer from a lack of resources. This can impede progress on NLP with these languages. Those working with such languages often face a  X  X old-start X  problem.
 There is some work on developing resources with other languages. Walther and Sagot ( 2010 ) proposed a methodology for building language resources from scratch. In their work they focused on Sorani Kurdish. Using a small annotated corpus and a basic seed lexicon to train a part-of-speech tagger they generated a large-scale part-of-speech tagged corpus.
 Getao and Miriti ( 2006 ) constructed a Swahili (Kiswahili) corpus from the Web. They first downloaded documents from the Web and then built a Swahili language model using unigram and bigram counts. The model was used to determine if a document is in Swahili and to construct search queries to help retrieve more documents.

Guevara ( 2010 ) used the approach of Baroni et al. ( 2009 ) to build a web-based corpus for Norwegian. The corpus was created by crawling, downloading and processing web documents in the top level  X  X  .no  X  X  Internet domain. The corpus contains 700 million tokens. It would be difficult to expand beyond this due to the limits imposed by the number of public Norwegian documents on the Internet. The corpus is nearly one third the size of the published comparable Italian, German and English corpora.

Nguyen et al. ( 2009 ) built a large syntactically annotated corpus for Vietnamese by constructing a treebank. To create the annotated corpus they followed the same approach that was used to create the English Penn Treebank (Marcus et al. 1993 ): automatic parsers annotated the corpus and human annotators corrected any errors. The Vietnamese treebank consists of 10,368 annotated sentences with 210,393 words and 255,237 syllables. They also syntactically labelled 9,633 sentences with 208,406 words and 251,696 syllables.
 Green et al. ( 2012 ) describe the creation of the Indonesian dependency treebank. The treebank they created was a collection of manually annotated Indonesian dependency trees which consisted of 100 Indonesian sentences with 2,705 tokens and a vocabulary size of 1,015 unique tokens. They successfully trained their dependency parser using the manually annotated data. There is hope that this will help them to provide a semi-supervised annotation and expand the corpus size.
Buhay et al. ( 2010 ) X  X  AUTOLEX is an automatic lexicon builder intended to be used with minority languages. In their study they considered Tagalog X  X n Austronesian language spoken as a first language by a quarter of the population in the Philippines. They retrieved documents from the Internet written in the target language and built a lexicon using frequency-based algorithms. 2.2 Text summarisation Document summarisation is the process of creating an abstract or precise of a document, or collection of related documents, in order to present the key ideas in a more concise form. Manual summarisation can be time-consuming and expensive. The summaries may also be subjective. Different individuals will produce different summaries, highlighting, and obscuring, different facets. Automatic summarisation seeks to address these concerns. Work on automatic summarisation started more than 50 years ago (Luhn 1958 ) and is still an active area of research, as illustrated by many tools, techniques and evaluations that keep emerging (Sekine and Nobata 2003 ; Wang et al. 2010 ; Nenkova and McKeown 2012 ).

The quality of a summary may be judged by whether it identifies appropriate aspects, whether it is readable, whether it maintains appropriate relationships, such as the chronological order of events, and whether it avoids repetition. Human precises, or abstracts, are typically written from scratch, so that they form a coherent narrative. This requires deep semantic understanding, and language generation. In contrast to such abstractive summaries, mechanically generated summaries are typically extractive : they consist of a selection of sentences taken from the document. The quality of such extractive summaries can be evaluated by using metrics to compare against gold-standard summaries, either abstractive or extractive. Without gold-standard resources for the language concerned, it can be difficult to make progress in producing high-quality automatic summarisation algorithms.

There are a range of tools and techniques that have been employed in automatic text summarisation. For extractive summaries, the tasks are to identify the key sentences. In the case of multi-document summarisation, as opposed to single-document summarisation, the problem of eliminating redundancy becomes partic-ularly important. Fukumoto et al. ( 2010 ) used clustering to eliminate redundancy where they classified the extracted sentences into groups of semantically related sentences. Hendrickx et al. ( 2009 ) used semantic overlap to identify redundant sentences in their Dutch multi-document summariser system. Bossard and Rodrigues ( 2010 ) combined multi-document summarisation with a genetic algorithm (Banzhaf et al. 1998 ). They used clustering to detect redundant sentences. The genetic algorithm was used to adapt the system to specific domains. Wang and Li ( 2012 ) developed a weighted consensus summarisation method to combine results from single-document summarisation systems. They studied different methods for multi-document summarisation, including centroid-based, graph-based, and dimension reduction to improve the summarisation quality. They used the DUC-2002 and DUC-2004 datasets. They compared their method with various baselines based on average score, average rank and other measures. Barrera and Verma ( 2011 ) used a combination of syntactic and semantic approaches. They developed a single-document summariser that exploits a document X  X  word popularity, sentence position, and semantic linkage as three main approaches for sentence extraction.

Automatic text summarisation intersects with many other natural language processing fields, including information extraction, automated question answering, natural language generation and machine translation. The overlap suggests that automatic text summarisation can be viewed as forming part of a larger picture of NLP techniques and problems. 2.3 Arabic natural language processing 2.3.1 The Arabic language The Arabic language is the most widely spoken member of the family of Semitic languages. It is closely related to Amharic and Aramaic. Arabic is spoken by around 400 million people living in the Middle East, North Africa, and the Horn of Africa (Prochazka 2006 ). This suggests a large potential audience for Arabic NLP. Like other languages, literary Arabic continues to evolve. Classical Arabic (especially from the pre-Islamic to the Abbasid period, including Qur X  X nic Arabic) can be distinguished from Modern Standard Arabic (MSA) that is used nowadays in news and media. Arabic has several spoken dialects (varieties of Arabic). Different dialects are spoken in different countries, and in different regions of the same country. These are rarely written. This is in contrast to MSA which is mostly written and rarely spoken. In effect there is only one written language.
 There has been some work on applying NLP to Arabic, and Arabic corpora (Al-Sulaiti et al. 2006 ). There has been quite a lot of work on Arabic syntax (Sawalha and Atwell 2010 ; Al-Shammari and Lin 2008 ; Benmamoun 2007 ). Yaseen and Theophilopoulos ( 2001 ) developed NAPLUS, a prototype system for processing and understanding the Arabic language. They developed utilities and tools to support Arabic NLP research in many areas such as automatic translation, text abstraction, question answering interfaces to databases and many related applications. Recently, there has been other work on syntactic annotation of Qur X  X nic Arabic (Dukes et al. 2013 ). 11 Kilgarriff et al. ( 2013 ) developed a monolingual and bilingual word lists database, KELLY, for nine languages including Arabic. The Arabic word list contains the top 9,000 most frequent Arabic words. Buckwalter and Parkinson ( 2011 ) put together a list of the top 5,000 most frequent Arabic words, in addition the word list contains dialectical Arabic words.

As elsewhere in the world, the number of Internet users in the Arab world has been increasing (reaching 90 million by the end of 2012). 12 In the last decade, the volume of Arabic textual data has also grown on the Internet, and Arabic software for browsing the Web has improved in quality. It can be argued that this increased access to the Internet creates a need, and an opportunity, for automatic summarisation. 2.3.2 Challenges in Arabic NLP Like other Semitic languages, Arabic has a complex  X  X oot-and-pattern X  morphology. The root is a collection of consonants. The meaning of a word is determined by both the root and the pattern into which the root is embedded. This complicates the process of interpretation. For many languages, NLP techniques can benefit from stemming (for example, in order to reduce the dimensionality of vector-space models). But in the case of Arabic, finding the root, or stem, of a word is challenging to automate. And the root of a word often has a very abstract meaning which is not at an appropriate level for NLP. In addition, words in Arabic can be  X  X orrowed X  from other contexts, increasing ambiguity, presenting a challenge to the mechanical interpretation of Arabic.

It seems there are some aspects about the nature of Arabic that have slowed down the progress in Arabic NLP compared to the accomplishments in English and other European languages (Diab et al. 2007 ; Roberts et al. 2006 ). These include the following:  X  The absence of capitalisation in Arabic makes it hard to identify proper nouns,  X  Arabic is highly inflectional and derivational, which makes morphological  X  Diacritics (vowels) are, most of the time, omitted from the Arabic text, which One of the challenges faced by Kilgarriff et al. ( 2013 ) when creating the Arabic word list was the absence of Arabic diacritics (vocalisation). They also found that the corpus for Arabic proved to have a bias towards religious terminology as a relatively high frequency of religious terms and phrases were found.

In addition to the above linguistic issues, there is also a shortage of Arabic corpora, lexicons and machine-readable dictionaries. These tools are essential to advance research in different areas.
 Arabic NLP has focused on the morphological, lexical and syntactic properties of Arabic. Semantic processing of the Arabic language X  X ven broadly construed X  X s still in its early stages (Haddad and Yaseen 2005 ; Diab et al. 2007 ; Al-Shammari and Lin 2008 ; Hmeidi et al. 2010 ; Benajiba et al. 2010 ). Morphological analysis of words in a text is the first stage of most natural language applications. It has been regarded as being particularly crucial in processing highly inflectional and derivational languages like Arabic (Diehl et al. 2012 ). Although Arabic morphology is considered complex compared to many other languages, attempts to tackle this problem have been quite successful (Sawalha and Atwell 2010 ; Beesley 1998 ; Abuleil et al. 2002 ; Darwish et al. 2005 ; Smrz  X  2007 ; Habash and Roth 2011 ). There are also a number of tools for tokenisation and stemming of Arabic (Larkey et al. 2002 ; Al-Ameed et al. 2006 ; Attia 2007 ; Al-Shammari and Lin 2008 ; Hmeidi et al. 2010 ; Althobaiti et al. 2014 ).
 Some commercial Arabic resources and tools are available online, such as Sakhr 13 and RDI 14 . There has been an increased demand for resources and tools to assist and advance the research on Arabic. There are also some annotated Arabic text treebanks (such as the Arabic Penn Treebank and Prague Arabic Dependency Treebank). There has been some progress in addressing limited Arabic resources for specific areas, such as plagiarism detection, for example (Bensalem et al. 2013 ). 15 But gold-standard collections for Arabic text summarisation have not been available until we started work in this area. Arabic has not featured in popular competitions such as TAC and DUC.

While the absence of Arabic resources for summarisation initially presented us with a problem, in the end it provided an opportunity to explore different methods for developing resources for a widely used but relatively under resourced language that could provide lessons for other languages that currently lack resources. 3 Three approaches to create language resources Different language resources are required for different NLP applications. For evaluation purposes we refer to them as  X  X est collections X  which typically include appropriate gold standards. Measuring the performance of different techniques against gold standards allows the different results to be compared. For automatic summarisation, test collections are required that contain documents with gold-standard summaries. The summaries may be human-generated, either by human experts or some form of crowdsourcing. In the case of the cross-linguistic approach that we tried, such summaries may also be translated into other languages using human translators and machine translation tools.

For languages such as English resources with gold-standard summaries are readily available. Furthermore, numerous results have been published. This allows researchers to compare their work with that of others when judging their summariser X  X  quality and performance. This is not the case for all languages. In particular, we found there were few appropriate and readily-available resources for Arabic summarisation to evaluate our results. Nor were there published results with which our work could be compared directly. This meant we had to find ways of producing appropriate resources quickly and cheaply, and find novel ways of comparing our results to state-of-the-art summarisation for other languages.
To create resources for single and multi-document text summarisation we need to identify an appropriate collection of documents, whose use is not restricted for such work, and find fluent users of the language who are able to help build the resource, such as being able to produce and verify gold-standard summaries. Ideally the resource should be made available to a wider audience to allow others to publish their results as measured against the gold-standard. One obstacle is then finding documents whose copyright terms allow them to be distributed to others. Another is finding appropriately skilled participants and involve them in a way that is not too time-consuming or costly. This problem is more difficult if there is little funding.
For both multi-document and single-document summarisation, datasets can be obtained from websites that offer relatively liberal copyright terms. 16 For multi-document summarisation, any dataset selected should ideally contain groups of related articles. An example would be news articles about a topic from multiple sources. 17
A critical issue is finding skilled users of the language. The participants X  roles can include creating manual summaries and evaluating them. It is appropriate to have a number of model summaries for each document or set of related articles, each created by a different participant. This helps reduce the impact of individual bias in the summaries. As we were exploring cross-linguistic approaches to evaluation, we also required participants who could translate summaries, and evaluate the quality of translations.

We created resources for Arabic single and multi-document summarisation with gold-standard summaries. As will be seen, the tasks involved included summarising Arabic text documents, translating articles from English into Arabic, summarising the translated articles, and evaluating both the translations and the summarisation quality. These tasks were performed manually and with the aid of computer tools.
This work provides guidance for others who need to create resources for under-resourced languages. Furthermore, the resources themselves have been made available to the research community with the objective of helping to advance the state of Arabic NLP, especially single and multi-document summarisation. 3.1 Crowdsourcing language resources We first describe how we used crowdsourcing to construct a single-document summarisation corpus for Arabic. Crowdsourcing allowed us to do this rapidly and relatively cheaply.

This can be seen as an initial pilot. It was our starting point before moving on to the creation of corpora for multi-document summarisation.

We did not consider creating a multi-document summaries corpus using crowdsourcing. A key challenge was the problem of determining an objective way of handling potential  X  X  X pam X  X  answers for this more demanding task. 18 In this context, Lloret et al. ( 2013 ) found that crowdsourcing might not be the right service to generating informative summaries from a set of multiple related documents.
Someone could think of creating summaries from Wikipedia using just the first sentence as the summary. Even though the first sentence has been shown to be a significant feature in many summarisers (Fattah and Ren 2008 ; Yeh et al. 2008 ), it is interesting to note that summaries consisting of a single sentence only (e.g. Baseline-1 in El-Haj et al. 2010 ) do not score particularly well, which suggests that the first sentence is important but not sufficient for a good summary. Instead, we used Amazon X  X  Mechanical Turk (AMT) to recruit a sufficient number of fluent users of Arabic to create our gold-standard summaries of articles obtained from Wikipedia and Arabic-language news sources. This work lead to the Essex Arabic Summaries Corpus (EASC) . The corpus includes manually created summaries. These are intended to be used as a gold standard for evaluating Arabic summarisers. Some statistics for EASC are given in Table 1 . Below, we give the details of how this corpus was created. Figures 1 and 2 show a sample document and its summary created by AMT. 3.1.1 The document collection The document collection used in the creation of the single-document summaries corpus was extracted from the Arabic language version of Wikipedia and two Arabic newspapers; Alrai 19 (published in Jordan) and Alwatan 20 (published in Saudi Arabia). These sources were chosen for the following reasons: 1. They contain real text as written and used by native speakers of Arabic. 2. They are written by different authors from different backgrounds. 3. They cover a range of topics from different subject areas, each with a credible 4. We had the copyright holders X  permission to distribute the results. 21 The Wikipedia documents were selected by a group of students. They were asked to search for Wikipedia articles within ten given subject areas (art and music; the environment; politics; sports; health; finance and insurance; science and technology; tourism; religion; and education). To obtain a more uniform distribution of articles across topics, the collection was then supplemented with newspaper articles. These were retrieved from the newspapers X  websites using the same queries that the students used to select the Wikipedia articles. Overall, a total of 153 documents were used, containing a total of 18,264 words. On average, each document consisted of 380 words, with a minimum of 116 words and a maximum of 971 words. 3.1.2 Creating manual summaries The extractive summaries for the documents were generated by way of Human Intelligence Tasks (HITs) published on AMT. Any individual participating in one of these tasks was required to produce a summary of a given document by selecting those sentences they thought were the most important/significant. The sentences in the document were displayed to the participant as an enumerated list. The participant then used the numbers to identify those sentences they believed should be in the summary. They were required to select no more than half of the sentences in the article. 22 Using this method, five summaries were created for each article in the collection. Each of the summaries for a given article was generated by five different individuals. In the case of annotation tasks, it has been demonstrated that aggregating multiple independent annotations from different workers can produce good quality results (Albakour et al. 2010 ; Kazai et al. 2011 ). We assumed that this held true for the sentence selection task.

Participants were required to complete a quality control task. This was aimed at ensuring participants were properly engaged with the content of the articles, rather than selecting sentences  X  X  X t random X  X . To this end, participants were asked to provide up to three keywords for the article they were summarising. To avoid the risk of introducing subjective bias, the results of this task were not used to filter the final results. For the same reason, even apparently idiosyncratic sentence selections are included. 3.1.3 Creating gold-standard summaries for EASC The gold-standard summaries for the corpus were generated by combining the participants X  sentence selections. Essentially, the selection of a sentence from a document was treated as a  X  X  X ote X  X  in favour of including that sentence in a gold-standard summary. The number of votes for a sentence had to pass a threshold for it to be included in a gold-standard summary. This amounts to an aggregation method for combining the results (Kittur et al. 2011 ).

To obtain a better understanding of the impact of the aggregation method, we selected three different thresholds, giving rise to three different gold-standard summaries for each document. At the lowest threshold ( X  X  Level 1  X  X , or  X  X  All  X  X ), a sentence was included in a gold-standard summary of a document if any of the participants had selected it. For the intermediate threshold ( X  X  Level 2  X  X ), a sentence had to be selected by at least two participants for it to be included in the gold-standard summary. And for the highest threshold ( X  X  Level 3  X  X ) a sentence had to have been selected by at least three of the five of the participants. 23
The Level 1 summaries are likely to contain a lot of noise in the form of idiosyncratic outlier sentences. For this reason only the Level 2 and Level 3 summaries should be regarded as providing genuine gold-standard summaries, with reduced subjective bias. The summaries from Level 1 merely give us a point of comparison. 3.1.4 Summary In addition to producing a useful resource for Arabic NLP, this work also demonstrated the application of inexpensive crowdsourcing for natural language resource creation. The documents and 765 human-generated summaries of EASC are freely available to the community. 24 The size of the corpus was determined in part by the available financial resources. The method can be scaled quite easily if more resources are available. The method used to produce EASC could be adopted, and adapted, to produce a significant body of gold-standard single document summaries and other NLP resources for a range of languages. The actual process is language independent, provided that a sufficiently large number of users of the language are available. 3.2 Creation of resources using machine translation The second approach we illustrate here is to translate an existing gold-standard resource into the target language. Similar to Aker and Gaizauskas ( 2010 ) where they used machine translation to translate summaries in English into German, here we describe using machine translation to create an Arabic corpus of multi-document summaries from an English language dataset without any post-editing on the translated summaries. The English dataset chosen was from DUC-2002. 25
There are numerous published results that use the DUC-2002 dataset as a benchmark for multi-document summarisation. This provides us with performance figures that can be used when evaluating the results of Arabic multi-document summarisation on the translated corpus. This was an important factor in our decision to construct a translated version of the DUC-2002 dataset.

The DUC-2002 dataset contains 567 articles and 1,111 gold-standard (model) summaries. The documents are grouped into  X  X  X eference sets X  X  X  X  reference set being a small collection of documents about a particular topic. These reference sets provide appropriate source material for multi-document summarisation. In this case, the documents in a reference set all fell into one of the following four categories, with originally fifteen reference sets for each category. 26 1. Documents discussing a single natural disaster created within a seven day 2. Documents about a single event in any domain and created within at most a 3. Documents about multiple distinct events of a single type with no limit on the 4. Documents presenting biographical information mainly about a single The reference sets were produced using data from the TREC question-answering track in TREC-9 27 . Table 2 shows the corpus statistics of the DUC-2002 Arabic translation. Figure 3 shows a sample summary created by the use of machine translation technology.

The model summaries included both single and multi-document abstractive and extractive summaries. In this case we are only interested in the multi-document extractive summaries. Each reference set had two multi-document extractive summaries, one of at most 400 words, and another of at most 200 words. No partial sentences were used. The sentences in the shorter summary all appeared in the larger summary. 3.2.1 Translation of DUC-2002 dataset The DUC-2002 dataset was translated automatically into Arabic sentence-by-sentence using the Java version of Google Translate API. 28 A total of 17,340 sentences had to be translated. Google Translate limits the size of text and the number of requests that can be made in a given period. This was accommodated by translating only one sentence every half-second.

This approach to translating a gold-standard resource can be applied to other languages, provided that an appropriate translation system is available for the specific language pair. The method should be helpful when there is a shortage of human participants who know the target language, or when there is little or no funding available. It also has the advantage of allowing those working in the target language to compare their results with those obtained by state-of-the-art systems in the source language, on the very same dataset. 3.3 Creation of language resources using human experts The third paradigm we illustrate involves the use of selected human participants to create a resource for Arabic multi-document summarisation, with no automation or anonymous  X  X  X rowdsourcing X  X . The tasks included translation, summarisation and validation.

This corpus was created through our involvement in the organisation of the TAC-2011 MultiLing Summarisation Pilot. 29 The test collection consisted of 100 documents drawn from WikiNews texts. 30 The source documents were in the form of plain text UTF-8 encoded files, with no meta-data or tags. The 100 documents were assigned to ten reference sets. Each reference set contained ten related articles discussing the same topic. The original language of the dataset was English. This was translated and summarised in six languages X  X rabic, Hindi, French, Czech, Greek and Hebrew X  X o give a multi-lingual test collection.

The preparation of the Arabic corpus for the TAC-2011 MultiLing Summari-sation Pilot is our focus of interest here. Table 3 shows the corpus statistics of the TAC-2011 Arabic dataset.
 A total of twelve people participated in creating the Arabic version of the corpus. They were selected based on their proficiency in Arabic and English. Each one of them had to have Arabic as a first language. The participants were either studying, or had completed a university degree in an Arabic-speaking country. The participants were between 22 and 64 years of age. The participants were paid using Amazon vouchers. The value of the vouchers awarded to each participant depended on the task performed. The total value of Amazon vouchers paid to the participants was  X 250.

The participants translated the English dataset into Arabic. For each translated article another translator validated the translation and fixed any errors. Three extractive summaries were manually created for each of the translated reference sets. 31 Each of the summaries for a reference set were created by different participants. Participants in the summarisation process were required to evaluate the quality of other summaries. They did so by assigning a score between one (unreadable summary) and five (fluent and readable summary). No self-evaluation was permitted. Appendix 2 shows the detailed guidelines given to the participants.
The manual evaluation was based on the Overall Responsiveness of a text (Appendix 2 ). Figure 4 shows a sample summary.

The average time for reading the English news articles by the Arabic native speaker participants was four minutes. The average time it took them to translate those articles into Arabic was 25 minutes, and to validate each of the translated Arabic articles the participants took six minutes on average. For the summarisation task the average time for reading the set of related articles (ten articles per each set) was 17 minutes. The average time for creating a multidocument summary of a reference set was 24 minutes.

Until TAC-2011, participation to DUC and later TAC workshops was essentially limited to English summarisation. The creation of the TAC-2011 MultiLing corpora can be seen as an example of addressing the need for more gold-standard resources for under-resourced languages, more specifically the creation of high-quality gold-standard multi-lingual summaries for multi-document summarisation. More gener-ally, the TAC-2011 corpus could help those working on automatic summarisation, question answering, and automatic translation. The corpus is freely available. 32
One issue encountered in developing this resource was the difficulty in finding appropriately skilled users of the language concerned. This is a particularly acute problem when the research is based in countries where the majority of people use a different language. In our case it was difficult to find participants for whom Arabic was a first language. Most of our participants were located in other countries. We communicated with the participants online, which complicated the management of the process. 4 Evaluation In this section we present human evaluations of some of the language resources we created, including the summaries generated using human experts and crowdsourc-ing. The evaluations were performed by Arabic native speakers who assessed the summaries on a five-point Likert scale. We applied a comparable evaluation methodology to both cases. Pairwise t tests (with p \ 0 : 05) have been applied were appropriate to test for significantly different results.
 The summaries generated by machine translation (Sect. 3.2 ) were not evaluated. The main purpose of using this technique was to automate the evaluation of a non-English summariser, rather than to generate good quality summaries directly. In addition this would require us to evaluate the quality of automatic translation, which we considered to fall outside the scope of our work. In the case of the human generated translations, evaluation was already incorporated into the validation procedures (Appendices 1 , 2 and 3 ).
 4.1 Evaluating crowdsourcing language resources To evaluate the single-document summarisation corpus (EASC, Sect. 3.1 ) we asked three individuals (X, Y and Z in Table 4 ) to evaluate the quality of summaries obtained by a range of methods on a random sample of ten documents (see Appendix 3 ). Each participant evaluated a number of 110 summaries. The evaluators were paid  X 10 per hour. The evaluation task was estimated to be three hours in total.

Three crowdsourcing methods of obtaining a document summary were assessed, namely: (1) Crowdsourced Summaries  X  X andomly selecting individual summaries as (2) Level 2  X  X ggregated summaries over all five individual summaries obtained (3) Level 3  X  X imilar to  X  X  X evel 2 X  X  but with stricter aggregation (Sect. 3.1.3 ). In addition, four automatically generated summaries were also evaluated: (4) Baseline X 1  X  X here the summary consists of the first sentence of each (5) Baseline X 2  X  X he first two sentences of each document; (6) Baseline X 3  X  X he first three sentences of each document; and (7) a centroid summary (see Radev et al. 2000 , 2004 ; Sarkar 2009 , for example). The first-sentence baseline had been occasionally used as a sensible baseline. It is similar to the first-n -words baseline summariser. Both of these baselines have been widely used in the DUC and TAC summarisation tasks (Katragadda et al. 2009 ; Nenkova 2005 ). We included centroid summaries because they scored highly when evaluated in previous experiments (El-Haj et al. 2011a , c ). These summaries consist of those sentences that are closest to the vector-space centroid of the document collection (using cosine similarity), up to a maximum of 250 words, or no more than 50% of the document X  X  sentences, whichever is the lowest. The centroid is calculated by treating the document collection as a bag of words.

The evaluation was anonymised. The evaluators were not aware whether they were evaluating human or system summaries.

Table 4 shows the results of the evaluation of the seven approaches. Baseline X 1 performs significantly worse than any of the crowdsourced approaches (i.e. any approach that involved user assessments) as well as the centroid-based approach.
The centroid-based baseline performed well. As this is a fully-automated approach it is intuitively appealing as it does not involve additional costs to run experiments.

One reason that Baseline-1 does not score particularly well could be that while the first sentence may be important, it is not sufficient for a good summary (Katragadda et al. 2009 ).

Adding more sentences improves the overall assessed quality (in some cases significantly) but neither Baseline-1 nor Baseline-2 outperform any of the other methods.

In the case of the Level 3 summaries, this method results in relatively short summaries. For this reason this approach might suffer from a similar problem as Baseline-1 in that the aggregated result tends to contain text that is appropriate but not sufficient for a good summary.

All other methods perform on par with each other with only marginal differences: we found no significant difference between the top performing methods.
This evaluation only considers a sample of documents, and involves a very small number of experts. The variation of assessments given between experts is quite large. Using more assessors and documents may help identify statistically significant differences. 4.2 Evaluating language resources by human experts We also evaluated the language resources created by the human experts for the TAC-2011 MultiLing Summarisation Pilot (Sect. 3.3 ). The same human experts mentioned in Sect. 3.3 evaluated 30 Arabic multi-document summaries. The manual evaluation was based on the Overall Responsiveness of a text (Appendix 2 ). Twelve participants evaluated summaries generated by three different human experts (A, B and C) in addition to the global topline ( ID10 ) and baseline ( ID9 ) systems.
The global baseline system X  ID9  X  X s effectively a version of the centroid summariser (Radev et al. 2000 , 2004 ; Sarkar 2009 ) as outlined in Sect. 4.1 . The summariser sorts sentences based on their cosine similarity to the centroid of a cluster, then starts adding sentences to the summary, until it either reaches 250 words, or it reaches the end of the document. In the latter case, it continues with the next document in the sorted list.

The global topline system X  ID10  X  X sed information from the model summaries (i.e. cheats). First, it split all source documents into sentences. Then it uses a genetic algorithm to generate summaries that have a vector with maximal cosine similarity to the centroid vector of the model summary texts (see the  X  X  X eMoG X  X  method, Giannakopoulos and Karkaletsis 2011 , for more details).

Table 5 shows the evaluation scores of the baseline, topline systems in addition to the summaries created by the human experts.
 As before, the centroid-based method ( ID9 ) performs very well.

The human evaluators ranked summaries by human expert B to be of highest quality. Summaries by baseline (ID9) were ranked high by the evaluators. We assume this is because they contained continuous text, resulting in more readable summaries.

The guidelines for those producing summaries did not indicate whether abstractive or extractive summaries were required. Notes made by participants showed that they tended to use the extractive method as it is less time consuming. The summaries concatenate sentences taken from different contexts, and as a result they often lack coherence.

Those producing the summaries also expressed concern that the 250-word limit was too low when summarising ten related documents. Some of the documents could not be represented in the summary. The guidelines were that a Likert score of five means the summary covers all the important aspects of the ten documents. As a consequence, some evaluators never awarded a score greater than four on the Likert scale. This potentially explains why baseline ID9 and topline ID10 received higher scores than A and C human summaries: the algorithms tended to pick sentences from a broader sample of the documents in each collection than the human summarisers. 5 Conclusions Resource creation plays an important role in advancing Natural Language Processing tools and applications. Lack of resources can be a serious problem particularly for evaluation purposes, when it is important to have some external metric against which to assess different methods and technologies.

This paper illustrates three different ways of creating gold-standard resources for under-resourced languages rapidly and relatively cheaply. Our examples were concerned with corpora for Arabic-language text summarisation. The methods we illustrate were as follows: 1. Using crowdsourcing . Such a resource is relatively cheap and small but can be 2. Automatic machine translation of an existing gold-standard collections. This is 3. Manual creation of a resource using proficient users of the language(s) The use of automated methods for creating language resources is appropriate when the tools required are more readily available than appropriately qualified partici-pants, or when no funding is available to identify and reimburse participants. The results of the evaluation suggest that it is appropriate to include centroid-based summaries as a sensible baseline; in our experiments their quality appears to be on a par with manual summarisation.

Generally our evaluations have low average scores for summaries regardless of the method. This could indicate two things: (i) the difficulty of the task of generating a good summary in general, and (ii) the limitations of an  X  X  X xtractive X  X  summary as opposed to an abstractive summary. This warrants further investigations.
All of the resources described in this paper are freely available to the research community. The corpora that have been created are of use for Arab-language researchers working on automatic summarisation, question answering, and automatic translation.
 Appendix 1: EASC corpus guidelines appendix Creating EASC corpus guidelines The Mechanical Turk workers were given the following guidelines for completing the task of creating the single-document summaries corpus (Sect. 3 ). 1. Read the Arabic sentences (Document). 2. In the first text box below type the number of sentences that you think are 3. The number of the selected sentences should not exceed 50% of the articles X  4. Just add the numbers of the sentences, please do not write text in the first text 5. In the second text box write down one to three Keyword(s) that represent the 6. If you have any comments please add them to the third text box below. 7. Failing to follow the guides correctly could lead to task rejection 8. NOTE: The article chosen for this task was selected randomly from the Internet. Figure 5 , shows an example for one of the HITs provided to the workers on the Mechanical Turk website. The reason for the selection of an answer field (instead of a checkbox or radio button) is that we aimed to reduce the noise and track spammers. We think that a design with e.g. radio buttons is not able to distinguish between MTurks as spammers and MTurks who produce noise (wrong selection but not produced by random procedure as it is the case by spammers), for example if the worker wrote  X  X  X wo X  X  instead of  X  X 2 X  X , we still consider this as a valid answer. Using radio buttons, when selection is made it is not clear whether the MTurk worker has selected it because he thought it is a correct answer or just by random. However, if we force an MTurk to write down the answer then this gives us the possibility to distinguish between spammers and noise. A spammer would give answers which are composed by random characters and/or numbers whereas a noise could be close to the right answer. Appendix 2: TAC-2011 dataset guidelines appendix Creating TAC-2011 dataset guidelines The following task guidelines were required by the participants to create a manual corpus for TAC-2011 MultiLing Pilot: 1. Translation: Given the source language text A , the translator is requested to 2. Translation Validation: After the completion of each translation, another 3. Summarisation: The summariser will read the whole set of texts at least once. 4. Evaluation: Each summary will be graded by 3 evaluators. If the summarisers Appendix 3: Evaluating Arabic summaries guidelines Evaluating EASC corpus summaries guidelines 1. Read a document at least once. 2. In the Evaluation form note the time (in minutes) it took you to read the 3. Read the document X  X  summary you are to evaluate 4. In the Evaluation form grade the summary with a value between 1 and 5. References
