 Given a collection of documents, most of existing multi-document summarization methods automatically generate a static summary for all the users. However, different users may have different opinions on the documents, thus there is a necessity for improving users X  interactions in the summa-rization process. In this paper, we propose an interactive document summarization system using information visual-ization techniques.
 Categories and Subject Descriptors: H.3.3[Information Storage and Retrieval]: Information Search and Retrieval; H.5.2[User Interfaces]: Interaction styles.
 General Terms: Algorithms, Experimentation, Performance Keywords: Multi-Document Summarization, visualization
With huge volume of text resources on the Internet, doc-ument summarization has been receiving a lot of attentions. Existing document summarization methods usually involve natural language processing and machine learning techniques. However, most of these methods exclude human from the summarization process, which is efficient in terms of reduc-ing users X  workload, but is not desired since the generated summaries are identical for all the users, contradicting to the subjective nature of summarization [6].

To address the issue that people with diverse interests may expect dynamic summaries based on their own preference, we develop VisualSum, an interactive visualized document summarization system, to help users select their preferred sentences to form the summaries.

The summarization process of VisualSum is performed in an iterative manner as illustrated in Figure 1. It starts with all the sentences in the documents, and stops when a sat-isfactory summary is obtained by a user. Each sentence selection iteration includes three steps as follows. Step (1) : The system generates a 2-D view graph of current sentences, in which each node represents a sentence, and the location and color of the sentence are determined by the layout and clustering algorithms respectively. Step (2) : The user se-lects a sentence based on the visualization results in Step (1). Step (3) : The system removes the sentence clusters of the selected sentences from the current sentence set. cluster set C respectively, and d ( c ) and d ( C ) are the sum of node degrees for all the nodes in cluster c and cluster set C .
The clustering results can be easily obtained by a bottom-up algorithm, in which each sentence is treated as a singleton cluster at the beginning and then successively merge pairs of clusters until the maximum modularity is reached.
Now we show how VisualSum assists users to interactively select sentences to create summaries. The visualization in VisualSum clearly illustrates the following information for users. (1) Each node is a sentence and the color of the node indicates the cluster it belongs to. (2) The radius of each node is determined by the sentence X  X  degree. The larger the node, the more important the corresponding sentence. (3) Important sentences in the largest cluster are labeled by their sentence IDs and recommended to users as candidates. (4) Large nodes in the overlapping area of two clusters may be the transition sentences between the clusters. (5) The larger the distance between two clusters, the dissimilar the two topics.

Since the visualization process clearly shows the relation-ships among the sentences, users can easily select the impor-tant sentences they are interested in to form the summary. Figure 2 shows an example of the visualization and sentence selection procedure. First of all, we examine the summarization performance of VisualSum using DUC 2006 dataset. Since the DUC evalua-tion is not personalized, we select the largest sentence node in the largest cluster at each iteration, until the required length of summaries is reached. Table 1 shows the evalua-tion results using ROUGE toolkit [5] (intuitively, the higher the scores, the better the performance). We compare Visu-alSum with four widely used baseline summarizers. From Table 1, we observe that the summarization performance of VisualSum outperforms LeadBase and Random and is com-parable with NMF and LSA. Note that the motivation of VisualSum is not to build an automatic summarizer, but to
