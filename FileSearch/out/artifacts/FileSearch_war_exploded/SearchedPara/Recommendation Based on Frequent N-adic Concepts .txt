 With the explosion growth of information available on the World Wide Web, we are flooded with a lot of information. Therefore, the information filtering techniques such as recommender systems have become more and more popular. Recommender sys-used in various applications, such as Amazon and Last.fm. among them, where U , I and R are the sets of users, items and ratings respectively. The user's preferences for an item can be reflected by the ratings. Another is that the users can label diverse items with freely chosen tags. The resulting structure is folksonomy [3, 16] which consists of three sets U , I , T and a ternary relation among them, where T is the set of tags. Some tags such as  X  X liens X  or  X  X hark attacks X  can represent the items X  user X  X  preferences. Many existing recommender systems including rating-based and tag-based methods use only ternary relationships to derive their recommenda-the users-items-ratings relationships while the tag-based methods [7, 20, 21] make use of the users-items-tags relationships to generate recommendations. 
However, the recommendations based on ternary relationships may be inaccurate because they only use a portion of the given information. Users may annotate the indicating their different facets and users could give different ratings on the same item based on different facets that they care. Ta ble 1 shows an example of ternary relation-Maybe i 2 is a good thriller movie for u 1 and not a good love movie for u 2 . Hence using rating or tag information alone is insufficient. 
Actually, we can merge the original ternary relationships and form a new quater-nary relationship. The quaternary relationships &lt;users, items, ratings, tags&gt; can reveal more information that cannot be obtained in ternary relationships. Although the me-thod in [5] groups the quaternary relationships among users, items, ratings and tags as a 4-order tensor, it costs too much time and memory to learn the model. 
Except for the quaternary relationships, other information such as contexts and us-the user-item interaction [1] has been recognized as an important factor in recom-mender systems. The contexts could be the location or the time of the interaction hap-pens. Obviously, we can significantly improve the recommendation accuracy com-tant. Users play an important role in the social networks and the process of item shar-ing is accomplished by the users. Therefore, we can get high quality recommenda-tions when adding user X  X  features [4, 11]. 
In this paper, we propose a novel recommendation method based on frequent n-spectively. We group the quadruples into structures called 4-adic concepts and simi-users give the same ratings and tags to some movies X  and the hidden conceptualiza-items. We also devise two different item recommendation algorithms when we get the concepts. The experimental results on a large MovieLens dataset show that our me-thod outperforms the state-of-the-art algorithms in terms of accuracy. In this section, we review several major approaches for recommender systems, espe-cially for rating-based and tag-based methods. Collaborative Filtering (CF) is one of the most widely used rating-based methods. CF algorithms mainly focus on the user-item rating matrix and can be divided into two types, i.e. memory-based approaches [2, 6, 12, 15] and model-based approaches [8, 18, 19, 25]. 
Except for rating-based methods, some works also focus on the recommendations neighbors with similar interests based on some similarity measure. In [22], the authors presented a generic method that incorporates tags to CF algorithms. They first reduce the ternary relationships users-items-tags to three binary relationships including users-items, users-tags and items-tags. Then, they design a fusion mechanism to capture the ternary relationships. The work in [20] predicted user X  X  preferences for items based on their inferred preferences for tags. Symeonidis et al. in [21] developed a framework to dimensionality reduction for recommendation. 
Recently, some works based on quaternary relationships have emerged. In [5], the authors proposed a unified framework based on quaternary semantic analysis. They tensor and cast the problem as a multi-way latent semantic analysis problem. A High-er-Order Singular Value Decomposition (HOSVD) is applied in the 4-order tensor to reveal the latent semantics among the four entities. The time complexity is quartic in a personalized recommendation method based on user X  X  profiles in folksonomies. They suggest a quaternary relationship &lt;users, items, tags, profiles&gt; which considers the user X  X  profiles as a new dimension of a folksonomy and make recommendations matching user X  X  profiles rather than popular ones. But they ignore the information of ratings which represent most of a user X  X  tastes. In order to discover the shared conceptualizations hidden in the relationships, we context 1 . 
A formal context consists of a set of objects, a set of attributes and a binary relation between the two sets. This framework means that the objects have the attributes. Many models are proposed which are inspired by the use of this framework for data der the conditions. Based on the notions mentioned above, we now generalize to an n-adic context. K 2 ,..., among K 1 , K 2 ,..., K n , i.e., Y  X  K 1  X  K 2  X  ...  X  K n . 
Table 2 shows an example of an n-adic context when n=3, which are also known as folksonomy. According to the table we can see that the 3-adic context K = ( U , I , T , T }. Each triple indicates an item sharing process that a user u from U labels an item t and u 2 have tagged the items i 3 and i 4 with tags t 2 and t 3 . We now define an n-adic concept. Definition 2. (n-adic concept) [23] An n-adic concept of an n-adic context K = ( K 1 , K 2 ,..., can be extended without shrinking one of the other dimensions. 
Table 3 shows an example of a portion of the n-adic concept of the n-adic context in Table 2. If there are no restrictions, we will have a lot of n-adic concepts from the given n-adic context. These n-adic concepts are highly redundant and it is hard to find the most important information. In order to obtain a condensed representation and keep the most significant ones, we impose some restrictions on each dimension of the context with minimum thresholds. Problem 1. (Mining all frequent n-adic concepts) Let K = ( K 1 , K 2 ,..., K n , Y) be an thresholds. The task of mining all frequent n-adic concepts consists in determining all n-adic concepts ( A 1 , A 2 ,..., A n ) of K with | A i |  X  minsupp i , i =1,2,...,n. 
After setting the thresholds, the n-adic concepts we get are called frequent. For ex-ample, in Table 2, if we set minsupp u =2, minsupp i =2 and minsupp t =2. Then, we can ( i presentation of n-adic concepts is very dens e and it can represent the most of the orig-quent n-adic concepts. present our recommendation methods. We design two different methods including the models with tags and without tags. Actually, most of the social networks aim at a specific application and some allow the Therefore, the forms of information in different networks are different. In most social networks, the process of item rating is very easy for the users while item tagging is a little complicated. This is why the information of ratings is a little more than the tags in most of the networks. We provide a framework that consists of two different mod-els so that the recommendations will be more accurate. 4.1 Models with Tags Existing recommender systems only use the ternary relationships such as users-items-ratings or users-items-tags. However, both ratings and tags are necessary and we will miss important information if lacking any one of them. We now present the models with tags and introduce the quadruples &lt;users, items, ratings, tags&gt;. 
We have introduced the notion of n-adic co ntext and the 4-adic context is a special case when n=4. The 4-adic context is a quintuple K = ( U , I , R , T , Y), where U , I , R and T are finite sets that represent users, items, ratings and tags respectively. Y  X  U I  X  R  X  T and each y  X  Y can be represented by a quadruple: y = {( u , i , r , t ) | u  X  U tag t to an item i if s/he has watched i before. Similarly, the 4-adic concept is also a special case of n-adic concept when n=4. I , R , T ) is maximal. Then, we set the thresholds and get frequent 4-adic concepts. We refer to the obtained frequent 4-adic concepts as F4C. 4.2 Models without Tags tags is very useful. Therefore, we consider the models without tags. 
Although there is no tag information, we have access to some additional informa-valuable for providing more accurate predic tions in various application domains [17] including recommender systems [1, 13]. The contextual information is associated with the user-item interaction and could be the location or the time of the interaction. of personalized recommendation. 
After adding the information of contexts and user X  X  features, we introduce the quintuples &lt;users, items, ratings, contexts, features&gt;. Similarly, when n=5, we can get U  X  I  X  R  X  C  X  F . The 5-adic concept of a 5-adic context K = ( U , I , R , C , F , Y) is frequent 5-adic concepts as F5C. 
In order to mine all frequent 4-adic or 5-adic concepts from the given 4-adic or 5-adic context, we apply the QUADRICONS [10] which is one of the existing algo-rithms in the literature. We take the 4-adic or 5-adic context as well as minimum thre-sholds as input and output the set of F4C or F5C fulfilling these thresholds. 4.3 Recommendation Algorithms Based on Frequent N-adic Concepts After obtaining the frequent 4-adic or 5-adic concepts, we design two recommenda-tion algorithms corresponding to the models with tags or without tags respectively. 
The pseudo code of the algorithm with tags is sketched by Algorithm 1. It takes a set of frequent 4-adic concepts F4C, a user u , a set of tags T , a number N as input and items which s/he likes. The algorithm runs the set of frequent 4-adic concepts to find those where the tags in F4C belongs to T . Then, we count the occurrences of the items in each 4-adic concept that we have found and return the most frequent N items. 
Algorithm 2 shows the pseudo code of the algorithm without tags. It takes F5C, a user u with features f , a number N as input and outputs a set of top-N recommended items. The set of recommended items has two parts and one is determined by the us-er X  X  features and the other by the relevant user X  X  tastes. First, we find the items from F5C corresponding to u  X  X  features. Then, we run the set of frequent 5-adic concepts to find those where u belongs to and put the items which are liked by the users we have found in each 5-adic concept into the reco mmended set. Finally, we combine the two parts and return the most frequent N items. 
Both Algorithm 1 and Algorithm 2 rely on frequent n-adic concepts. The process formed once. The time and space complexity of QUADRICONS are O ( N 2 ) and O ( N ) ( u , i , r , c, f ). Our algorithms do not cost a lot of time and can present recommenda-tions timely. methods. We first give a detail description of the datasets and protocol that are used in the experiments. Then, we evaluate the recommendation performance of our two models and give a detail analysis of the impact of minimum thresholds. 5.1 Experimental Setup vieLens is a recommender system and virtual community website where users can share movies with ratings and tags. The users can receive recommended movies that matching their own interests. This dataset consists of two parts. The first part contains the users X  ratings with a scale of 0.5 to 5 on different movies and the second part con-rated or labeled 10197 different items. There are 855598 ratings and 47957 tag as-signments using 13222 tags. According to the models we have proposed, after con-use 90% of the data as the training set and the remaining 10% as the test set for each part. consider the items s/he likes. So, we randomly choose one item i that has a rating of 5 and keep the tuples involving u and i . If the item i is among the top-N recommended items, we say that a hit has occurred. The hit ratio is defined as: 5.2 Experiments on Recommendation with Tags We first evaluate the precision of the proposed recommendation models with tags (F4C). We compare our method with the following approaches: 1. UCF: The user based collaborative filtering is a memory-based approach. It uses 2. PMF [19]: This method is a state-of-the-art model based collaborative filtering 3. F3CR: This method focuses on ternary relationships users-items-ratings and uses 4. F3CT: Like F3CR, F3CT only utilizes the relationships of users-items-tags. 5. QSA [5]: The method of quadratic semantic analysis applies the HOSVD in the 4-
Fig. 1 shows the results of all comparison partners as we vary N . From the result, of Hit Ratio and its advantage is more obvious when N  X  4. This is because F4C can discover the shared conceptualizations hidde n in the structure of the quadruples &lt;us-which demonstrates that using tag or rating information alone is insufficient. We also notice that UCF and PMF obtain relatively worse results and we think this phenome-and do not take the tags into consideration for collaborative filtering recommenda-which does not necessarily lead to better top-N recommendation. 5.3 Experiments on Recommendation without Tags termine the additional information about contexts and user X  X  features. Based on the information available in the datasets, we extr act three types of contextual information: (1) period-of-day, i.e. which time period a rating is given, morning, afternoon or evening; (2) period-of-week, i.e. which day a rating is given, weekday or weekend; her/his average ratings are, high, normal or low. 
Besides UCF, PMF and F3CR, we compare F5C with TF [13] which is a context-aware recommendation method based on tensor factorization. 
Fig. 2 shows the performance of all comparison partners on Top-N item recom-mendations without tags. It is clear that F5C achieves a higher Hit Ratio compared to other methods. UCF and PMF which only consider user-item ratings still don X  X  achieve good results. When we apply frequent n-adic concepts, F3CR get a better result than UCF and PMF. Although TF co nsiders the contextual information, it doesn X  X  discover the associations between them. Our models F5C can reveal latent associations using frequent 5-daic concepts with additional information including contexts and user X  X  features. 5.4 Impact of Minimum Thresholds In the process of the extraction of frequent n-adic concepts, the minimum thresholds determine the representation of the shared conceptualizations and further affect the recommendation results. Table 4 shows the impact of minimum thresholds on Top-10 Hit Ratio of the models with tags. Since the users can rate a particular item only once, the minsupp r can just be 1. 
From the table we can see that the minimum thresholds impact the recommenda-tion results significantly. We can get a good Hit Ratio when the minimum thresholds Ratios because the number of frequent n-adic concepts decreases and the concepts are not very condensed. When the thresholds are 2-2-1-2, we obtain the best results. We not only get adequate n-adic concepts but also a condensed representation. The results the number of frequent n-adic concepts. In this paper, we propose a novel recommendation method based on frequent n-adic concepts and have shown that it can get higher accuracy in top-N item recommenda-tions. When there is tag information, we model the item sharing process into a them. When there are no tags, we introduce the additional information including con-ratings, contexts, features&gt;. Experiments conducted on a real dataset show that F4C or F5C evidently outperform the state-of-the-a rt models in terms of precision and can reveal more information from the quadruples or quintuples which are not captured by other methods. Acknowledgement. This work is supported by the Natural Science Foundation of China (61272240, 60970047, 61103151, 71301086), the Doctoral Fund of Ministry of Education of China (20110131110028), the Natural Science foundation of Shandong province (ZR2012FM037) and the Excellent Middle-Aged and Youth Scientists of Shandong Province (BS2012DX017). 
