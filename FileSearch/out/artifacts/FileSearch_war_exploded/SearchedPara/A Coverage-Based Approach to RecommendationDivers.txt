 We consider the problem of generating diverse, personal-ized recommendations such that a small set of recommended items covers a broad range of the user X  X  interests. We rep-resent items in a similarity graph, and we formulate the rel-evance/diversity trade-off as finding a small set of unrated items that best covers a subset of items positively rated by the user. In contrast to previous approaches, our method does not rely on an explicit trade-off between a relevance objective and a diversity objective, as the estimations of relevance and diversity are implicit in the coverage crite-rion. We show on several benchmark datasets that our ap-proach compares favorably to the state-of-the-art diversifi-cation methods according to various relevance and diversity measures.
 Diversity; Recommender Systems
Most information retrieval systems are designed with the assumption that the relevance of the answers to the query are independent of each other. However, in many real world applications like web search and recommender systems, the usefulness of results depend on each other. The inherent limitations of the retrieval system to represent and capture the complex and time-varying user requirements often re-sults in imprecise responses [18]. The above two factors de-mand a system to respond with diverse relevant results. For web search, diversification is usually preferred to achieve low query abandonment and to compensate for the ambiguity in the user query [8]. Similarly, in recommender systems, for example movies, a user may have eclectic movie tastes, and diversification is a means to cover movies from all relevant types.  X  Now at Facebook AI Research, Paris, France.

The most usual way of inducing diversity is to perform a two-step approach, in which a ranked list of top-k results is first retrieved, and a re-ranking algorithm is then run on the list such that diverse results appear at the top ranking positions. The re-ranking algorithms optimize an objective function that explicitly trades-off a relevance term and a di-versity term. There are many variants of this scheme and we broadly refer to them as re-ranking algorithms for diver-sification.

We consider in this paper the diversity/relevance trade-off in the context of item-based recommendation, where per-sonalized recommendations propose items that are similar to items that are known to be of interest to the user. Item-based recommender systems have proved effective in prac-tice; they are also particularly relevant in online recommen-dation settings since recommendations can be generated on-the-fly after any update to the user history.

We view items as nodes in a similarity graph, and we define the coverage of a set of items by another set of items from the similarities between pairs of nodes. The objective of recommendation is then to generate a set of unrated items that covers the set of items that were positively rated by the user. In this approach, diversity is obtained by defining the coverage as a submodular function: there is little gain in improving the coverage of a rated item that is already covered, whereas there can be a large gain in covering a new positively rated item.

As for other diversification algorithms, the submodularity of the objective function provides approximation guarantees to the greedy algorithm iteratively building the set of rec-ommended items. We also experiment with a slightly more involved inference algorithm based on a convex relaxation of the problem, but with limited success. We conclude that the greedy algorithm gives satisfactory results in practice.
In contrast to existing approaches that rely on two sep-arate objectives for relevance and diversity, coverage ac-counts for both relevance and diversity: relevance is cap-tured through the set to be covered, defined by positively rated items, and diversity through the preference towards lightly covering many items instead of covering heavily a few items. We compare our approach to existing baselines for the diversity/relevance trade-off in an item-based col-laborative filtering setup on benchmark datasets, and show that our algorithm compares favorably in terms of various relevance and diversity metrics.

The remainder of this paper is structured as follows. We give a brief overview of the state-of-the-art re-ranking algo-rithms for diversification in Section 2. Section 3 describes our framework, the optimization problem, and its relation-ship with other well-known problems. We carry out large scale experiments on benchmark data and report the results in Section 4. We conclude the paper in Section 5.
Earlier work on diversification is mostly confined to two strongly inter-connected domains: document retrieval and recommender systems, where many re-ranking algorithms have been suggested in different settings. In general, the re-ranking algorithms can be broadly classified into two cat-egories, (i) based on random walk [25, 27, 21, 9] and (ii) based on the maximum set cover algorithm in offline set-tings [4, 8, 1, 16, 23, 2] and online settings [15].
In web search settings, re-ranking algorithms operate on the list of items returned by a given query; they re-order this list such that top-ranked results are diverse. One can use random walk based algorithms like PageRank to give an estimation of the importance of the nodes in a graph. Then the nodes are re-ordered based on this score to induce diversity. Zhang et al. [25] iteratively select diverse items by updating the PageRank scores of the unselected items w.r.t. the last selected item. Tong et al. [21] and He et al. [9] use greedy algorithm for set cover on top of PageRank based algorithm to select diverse items by explicitly trading-off relevance and diversity.

In the set cover based algorithms, a submodular objective function which is a linear combination of two components, one for the relevance part and the other for diversity part, is maximized to select the top-k items with maximal relevance-diversity trade-off. The relevance component measures the similarity between the user query and an item, and the di-versification component measures the dissimilarity between the item and the set of already selected items. The idea was first proposed in the seminal work of Carbonell and Gold-stein [4]. Gollapudi and Sharma [8] study the theoretical properties of the diversification objective and propose many possible choices of objective functions. Agrawal et al. [1] and Chapelle et al. [5] propose algorithms based on retriev-ing pages covering many intents of the user query. Radlinski et al. [15] suggest algorithms based on multi-armed ban-dits to learn diverse lists from click data in online settings. Their objective function aims to maximizing the probabil-ity of finding a relevant document in the top-k list. Few earlier works focused on performance metrics for quantify-ing diversity. Agrawal et al. [1] propose intent-aware ver-sions of commonly used performance metrics in IR, whereas Chapelle et al. [5] inspects the theoretical properties of the metrics.

Recommender system is another area where diverse re-sults are demanded. Here there is no query associated to the task, and the relevance of an item is conveyed through a graded rating value. The recommendation list diversi-fication problem has been studied from different points of view. Vargas and Castells [22] propose a unified view of the state-of-the-art metrics used in recommender system di-versification. Vargas et al. [23] discuss a diversity metric based on probabilistic models for genre coverage, and pro-pose a re-ranking algorithm to diversify the recommendation list obtained using a baseline recommender system. Ashkan et al. [2] maximize a modular objective function with sub-modular constraints and demonstrate the effectiveness of the approach on benchmark datasets. A re-ranking based ap-proach by penalizing the system wide popularity bias with individual user specific popularity is proposed by Oh et al. [13]. Hurley [10] proposes a diversification method which does not require a ranked list beforehand, by weighting the pairwise rank difference with the dissimilarity score. How-ever, the theoretical properties of the objective function do not give a clear insight about the relevance-diversity trade-off. A similar approach, proposed by Su et al. [20], creates a user profile based on relevant and irrelevant items, and opti-mizes an objective function defined over the proper subsets of the profile. The algorithm focuses on intra-list diversity whereas we focus on inter-list diversity. Wu et al. [24] pro-pose a framework for diversification similar to the one of Carbonell and Goldstein [4].

Our approach differs from the previous work in that we propose a single criterion to account for both diversity and relevance. The trade-off is dealt with by the exact definition of coverage we use, which we describe in the next section.
We consider that we have n objects X = { x 1 ,...,x n together with a similarity matrix W = ( W ij ) i,j =1 ...n be concrete, in a personalized recommender system, each object corresponds to an item (e.g. movie/book), and the similarity between node i and j could be given as the co-sine similarity between the columns i and j of the user  X  item rating matrix. We do not assume the similarity to be symmetric, but we will restrict ourselves to the case where W
We can view ( X , W ) as a weighted graph, where W which weights the edge between nodes x i and x j , should be interpreted as how much item x i is similar to item x j . Our goal is to return diverse relevant items, and we formalize it as a property of the returned solution set S , based on the coverage of the subset of nodes in the graph X representing already rated items R . In this respect, our approach is sim-ilar to the set-cover based re-ranking algorithms [4, 1, 16].
From now on, to simplify the notation, we identify the set of nodes X with { 1 ,...,n } . For a subset S of X , given a node i /  X  X  , we define the coverage score of i by S as: where f : R +  X  R + is an invertible function that will be chosen non-decreasing and concave, so as to ensure that S  X  cov( i, S ) is non-decreasing with respect to inclusion and submodular. We call the function f in (1) the satura-tion function , because its main usage is to make the coverage of a single node of the graph saturate as we enlarge S .
We now extend the definition of the coverage of a node to a set of nodes through the utilities attached to the nodes {  X  1 ,..., X  n } . Utility is a degree of liking for an item given by a user, such as the rating given to this item. Here, we assume that  X  j  X  0. Given a set of m items R = {  X  1 ,..., X  m }  X  X with their corresponding observed util-ity values  X  = {  X  1 ,..., X  m } , we define the profile of the Algorithm 1 Greedy Algorithm
Input: set of items X , profile P , similarity matrix W , # of recommendations k
X = X \R , S =  X  repeat until |S| = k
Output: set of diverse items S user as P = { (  X  j , X  j ) } j =1 ,...,m . In the recommendation ex-ample, the profile can be the pair of sets (item, rating) given by a user.
 Now, given a profile P and a set of items S such that S  X  X  \R , the coverage of profile P by S is defined as: Here, we use a slight abuse of notation for cov, which can take as first argument either a profile or an item, but we assume that the context is clear considering the use of cal-ligraphic notation for sets. From now on, we use the ter-minology of point-wise coverage for (1) and profile coverage for (2).
Given a fixed saturation function , a set S  X  realizes the optimal utility-diversity trade-off if it solves: Since f in (1) is concave, the objective function of problem (3) is submodular. As a result, the greedy approximation algorithm for the maximum set coverage problem, outlined in Algorithm 1, can be used to approximately solve (3), with the approximation guarantees stated in Theorem 1.

Theorem 1 (Nemhauser et al. 12). For a submod-ular function cov( P , S ) , let S  X  be the optimizer of (3) and  X  S be the set returned by the greedy Algorithm 1, then cov( P ,  X  S )  X  (1  X  (1  X  1 k ) k ) cov( P , S  X  )  X  (1  X 
Instead of solving the Problem (3) approximately using the greedy Algorithm 1, another approach is to solve exactly a convex relaxation of Problem (3). As f is concave, the constrained problem: has a concave objective with simple linear constraints, which can be solved efficiently using the Frank-Wolfe algorithm [7] given in Algorithm 2. The inequality constraints are ex-pected to have a sparsifying effect, leading to a vast majority Algorithm 2 Algorithm Based on Frank-Wolfe
Input: set of items X , profile P , similarity matrix W , # of recommendations k i = 1, tol = 10  X  6 , maxiter = 10 6
S = X \R ,  X  i = 0 repeat until abs (  X  )  X  tol or i  X  maxiter
Output: indexes of k largest elements in  X  of the  X  j to be zero. In any case, a solution of cardinality k can always be returned by taking the k items with largest values of  X  j .
The non-linearities of the saturation function , if any, are the critical features that will allow us to make the trade-off between cumulated utility and diversity in profile coverage.
We first consider the limiting case where f ( t ) = lim  X  0 For the sake of clarity, we assume that  X  = 1 for every ( k, X  )  X  X  , and that items are embedded in a metric space.
Let us assume that W ij is 1 if i lies in the ball of radius  X  centered on j and 0 otherwise, for some fixed radius  X  &gt; 0. Then, cov( P , S ) counts the number of items of R that are covered by the balls of radius  X  centered on the items of S . Maximizing cov( P , S ) with a cardinality constraint on S corresponds to finding a maximum subset of R that is covered with k balls of radius  X  centered in points of X \R . Problem (3) is then a maximal coverage problem.
If W is the adjacency matrix of a k -nearest neighbor graph, then cov( P , S ) counts the number of items in R that are in the k -nearest neighbors of items in S . Likewise, as-sume that the items are clustered and that the similarity W ij is 1 if i and j belong to the same cluster and 0 other-wise. Then, cov( P , S ) is the number of items in S that are in the same cluster as at least one item in R .
Here we consider the case where the saturation function is a linear. If f is, say the identity function, then maximizing coverage boils down to choosing the set of items j  X  X  such that P (  X , X  )  X  X   X W  X j is maximal. This corresponds to one way of performing item-based collaborative filtering [17].
In this section, we evaluate our approach in movie rec-ommender settings. We compare our results against the state-of-the-art re-ranking algorithms.
We chose two baselines: Maximal Marginal Relevance (MMR) [4] and Max-Sum Diversification (MSD) [3].
Given the set of already selected items S (initialized to the empty set), the MMR algorithm selects an item i  X  such that where sim 1 and sim 2 are similarities, and u is related to the user profile. In our settings, this reads: As the trade-off parameter  X   X  [0 , 1] is decreased, more em-phasis is put on the diversity of the resulting set. MMR can be interpreted as a greedy scheme for maximizing a non-monotone submodular objective function, for which the ap-proximation guarantees of Theorem 1 do not apply [11].
The Max-Sum diversification (MSD) algorithm is based on the facility dispersion problem, where one aims to find a sub-set of optimal locations such that the distance between the selected locations is maximized. Like in MMR, the objective function comprises of two terms, a modular relevance term and a supermodular sum of distance diversity term. For-mally, MSD returns the set S of cardinality k , such that: argmax where  X  is the trade-off parameter, g ( S ) is the utility func-tion and dist ( i,j ) is the distance function between item i and j . The problem is NP-Hard, but efficient greedy algo-rithm with provable approximation guarantees exist [3]. In our settings, the utility g ( S ) is defined exactly as the sim in MMR and dist ( i,j ) as 1  X  W ij .
Our experiments aim to assess the diversity of the rec-ommended set. Even though there has been some work on unifying the performance metrics for diversity, there is no clear consensus, especially in recommendation tasks. So we measure several features of the different solutions in the movie recommender settings, involving relevance, coverage, and popularity bias [14].
 Genre Coverage  X  A diversifying algorithm should produce results that cover different relevant interest groups. One way to measure the coverage of the user interests is to count the number of relevant genres recommended to the user. We define the Genre Coverage for the set U of users as the average ratio of relevant genres recommended to each user.
The original formulation of Borodin et al. [3] is slightly different but equivalent. where, for user u , R + u is the set of relevant rated movies, S is the set of recommended items, and genres ( i ) returns the genres associated with item i .
 Intra-List Distance (ILD)  X  It measures the diversity of the set of recommended items by the mean distance between all pairs of items in this set. In our experiments, we used the Hamming distance between genre vectors: Catalog Coverage  X  It is the fraction of the relevant items that are recommended at least once, across all users. Higher values of catalog coverage indicate that the algorithm coun-terbalances the popularity bias by covering a large portion of the overall set of items. Formally, it is defined as: Popularity Stratified Recall@k  X  This metric is suggested by Steck [19] to measure the ability of a recommender system to compensate for the popularity bias. As argued earlier, a diversity inducing recommendation system should cover di-verse interests and may in turn cover items from the tail of the item-popularity distribution. Popularity Stratified Re-call@k is defined as: where S + u is the set of recommended items that are known to be relevant for user u (among the k recommended items), T is the set of items in the test set that are known to be truly relevant for user u , N + i is the number of relevant ratings for item i in the test set and  X  is a hyperparameter which adjusts for the popularity bias. Higher values of Popularity Stratified Recall@k indicate that more relevant movies from the tail distribution are recommended. In our experiments, we used  X  = 0 . 5 and k was set to 5, 10, 20 or 50. Intra-List Distance (ILD)  X  Proposed by [26], it measures the diversity of the set of recommended items by the mean distance between all pairs of items in this set. In our exper-iments, we used the Hamming distance: Discounted Cumulative Gain (DCG)  X  It is a commonly used metric in ranking problems. It measures the relevance of a ranked list by the sum of the graded relevance discounted by the rank of the item. In our experiments, we used: where r i is the graded relevance score of the i th item. In our experiments, the i th item is either the i th item entering S for greedy algorithm, or the one with i th largest  X  i in the convex relaxation formulation (4). Precision@k  X  It is the fraction of relevant items in the rec-ommended list of k items.
Genre Coverage and ILD measure diversity, Catalog Cov-erage and Stratified Recall@k mix diversity and relevance, and DCG and Precision@k measure the relevance. Higher values of the aforementioned metrics indicate a better rec-ommendation list. We used two benchmark datasets (i) MovieLens and (ii) Yahoo! Movies to evaluate the proposed algorithm. Follow-ing Cremonesi et al. [6], we carried out holdout validation by splitting the data randomly into training and test set such that 3% of the original data goes into testing and remaining goes into training. To reduce the variability in the result, split is carried out five times and the reported results are the average over the five splits. The rating values and the corresponding movies in the training set is used to create the profile P and the unrated movies in the training set is used as S . For the purpose of evaluation, whenever necessary, we discretized rating scores to binary values such that rat-ing scores of 4 and 5 are deemed as relevant and otherwise irrelevant.
 We estimated the unobserved rating values for MMR and MSD in the training set using item-based collaborative fil-tering [17] (matrix-factorization based methods gave inferior results). We used the the observed movie ratings to create the user profiles P and the similarity matrix W , which is computed by a cosine similarity. For evaluation purposes, we used the original observed rating values or whenever ap-plicable, their binarized version, in the test set. We used  X   X  0, which corresponds to the `  X  -norm, for the satura-tion function in the submodular (SUB) setting, and f ( t ) = t for the modular (MOD) setting.
MovieLens 2 1M dataset contains ratings from 6040 users on 3706 movies (excluding movies with no rating values). Each movie is associated with a set of genres, among 18 distinct categories. Performance of different algorithms on the MovieLens dataset for k = 10 is given in Table 1 (all values in %). The relevance-diversity values for different values of k is given in Figure 1.
Yahoo! Movies 3 dataset contains separate training and test set, but we used only the training set due to the un-availability of genre information. The training data con-tain 211,231 rating values for 7,642 users and 11,915 movies. We removed the movies with missing genres, being left with 187,435 ratings spanning 7,636 users and 8,647 movies. Ya-hoo! Movies span a total of 25 distinct genres. Table 2 contains the result for Yahoo! Movies for k = 10 (all values in %) and Figure 2 contains the relevance-diversity values for different values of k . http://grouplens.org/datasets/movielens/ https://webscope.sandbox.yahoo.com/
It should be noted that the modular version of our algo-rithm is equivalent to MMR and MSD with  X  = 1. Sur-prisingly, MMR does not exhibit any trade-off between rele-vance and diversity metrics as  X  is varied. As the  X  value is increased from 0.1 to 1, values corresponding to DCG, Pre-cision@k, Catalog Coverage and Genre Coverage remain the same or decrease only marginally. In effect, MMR does not recommend very relevant and less diverse movies by weight-ing the relevance term highly. The same trend can be noted for Yahoo! Movies as well. On the other hand, MMR com-pensates for popularity bias by recommending less popular movies covering a larger spectrum of the set as the diversity term is weighted high, thus increasing Stratified Recall@k and Catalog Coverage. But for MSD, on MovieLens, as the  X  value is increased, the recommendation list becomes more relevant but nothing can be inferred about diversity. But on Yahoo! Movies, trade-off between relevance (DCG) and diversity (Genre Coverage) is clearer. As the  X  value is increased, recommended list becomes more relevant and less diverse. However, there is no clear indication that MSD compensates for popularity bias, even though it recommends movies spanning large spectrum of movies from the set. The modular (equivalent to item-based collaborative filtering) version perform as good as the MMR and MSD versions.
For our algorithm, as the  X  value is increased, both the relevance and the diversity values increase and the increase is more significant. The best in-class relevance-diversity val-ues are obtained for  X  = 0 . 1. For MovieLens, we see a 3% increase for both DCG and Genre Coverage metrics com-pared to the second best algorithm. For Yahoo! Movies,  X  = 0 . 1, gives the best diversity value (Genre Coverage) for a marginally smaller value of relevance (DCG). On Movie-Lens, our proposed algorithm returns greater number of movies from the tail distribution which are collectively dis-tinct, i.e. covering large spectrum of movies, as indicated by the larger values of Stratified Recall@k and Catalog Cover-age. But this effect is not very evident on Yahoo! Movies. As the  X  value approaches zero the quality of the recom-mendation list deteriorates. Convex relaxation based algo-rithm performance is on par with other algorithms, but we found it computationally more expensive. The performance of relevance-diversity metrics for varying recommendation size is given in Figure 1 and 2. On MovieLens, submodular (solid blue line) algorithm returns greater number of rele-vant movies (square markers) which are diverse (red solid line with triangle markers on the left plot), whereas MMR and MSD returns diverse movies which are less relevant (red non-solid lines with triangle markers on the left plot). It can also be noted that, as the k value increases, our algorithm recommends the most diverse, but relevant movies (higher DCG &amp; Genre Coverage) whereas MMR and MSD recom-mend the most diverse, but irrelevant movies (higher ILD, lower Genre Coverage &amp; DCG; see right plot in Figure 1). However, in Yahoo! Movies, even though the diversity met-rics (Genre Coverage &amp; ILD) are marginally higher for the proposed algorithm, the relevance values are close to MMR and MSD algorithms.
The problem of diverse recommendation is more critical for users with eclectic interests. Here we study the effect of diversification on eclectic users by sampling an arbitrary
Precision@ k 4.06 3.98 3.98 4.02 3.86 3.97 3.98 4.01 4.10 4.60 3.19 4.08 number of eclectic users from the MovieLens and Yahoo! Movies. We define eclectic users based on their affinity towards many diverse items, as measured by their number of positive ratings and the mean similarity between rated items, based on W ij , below some threshold. We selected 209 users from MovieLens by setting the minimum number of relevant ratings to 100 and the mean similarity between already rated movies below 0.2, and 109 users from Yahoo! Movies by setting the minimum number of relevant ratings to 50 and the mean similarity between already rated movies below 0.1. The experimental results are given in Tables 3 and 4 for k =10. The proposed algorithm significantly im-proves the DCG and Genre Coverage values compared to the second best diversification algorithm. In case of Movie-Lens, DCG and Genre Coverage values improve by 5% and 6% respectively whereas in case of Yahoo! Movies for the same relevance value we get 5% improvement. The rele-vance and diversity metric values for different recommenda-tion size for eclectic users is given in Figures 3 and 4. As we can see from the figures, the blue solid line with square markers and red solid line with triangle markers dominate the DCG-Genre Coverage graph for varying sizes of k . On eclectic user set, as the recommendation size grows, MSD and MMR algorithm return movies which are diverse with respect to each other (higher ILD values) but less relevant to the users (smaller DCG and Genre Coverage) compared to the proposed algorithm.
We presented a new criterion that captures both relevance and diversity for recommendation. The criterion can be ap-proximately optimized with an efficient greedy algorithm; the algorithm can be applied in any recommendation sce-nario where we have access to similarities between items and a subset of items which are known to be of interest to the user. Experiments on benchmark datasets showed that the algorithm performs well, both in terms of relevance and diversity compared to a strong baseline.
This work was carried out and funded in the framework of the Labex MS2T. It was supported by the Picardy Re-gion and the French Government, through the program  X  X n-vestments for the future X  managed by the National Agency for Research (Reference ANR-11-IDEX-0004-02). We thank our anonymous reviewers for their valuable suggestions and comments.
 DCG 13.59 13.37 13.27 9.64 10.30 10.61 13.24 13.47 13.88 12.92 9.75 13.02
Precision@ k 1.62 1.55 1.53 1.40 1.55 1.51 1.53 1.56 1.63 1.50 1.21 1.53
Precision@ k 2.59 2.39 2.35 2.99 2.42 2.44 2.33 2.53 2.88 2.59 1.63 2.66
