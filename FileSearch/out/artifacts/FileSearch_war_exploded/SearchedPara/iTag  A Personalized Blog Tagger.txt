 We present iTag, a personalized tag recommendation system for blogs. iTag improves on current tag recommendation systems in two ways. First, iTag has much higher precision and recall than previously proposed tagging algorithms. Fo r example, iTag achieved over 60% precision and recall on a set of 1000 blog posts selected at random from a Word-Press [4] RSS feed in April 2009, whereas the previously-developed TagAssist [10] achieved less than 10% precision and recall on our data. Second, iTag performs just as well when trained on a single user X  X  blog as when trained on a large corpus of blogs. Thus, iTag can be deployed as a global, non-personalized tag recommendation system, or as a per-sonalized tag recommender. Our experiments and survey of tagging behavior suggest that bloggers use tags idiosyncra t-ically, so personalized tagging is an important option. H.3.1 [ Information Storage and Retrieval ]: Content Analysis and Indexing; H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval; I.5.4 [ Pattern Recognition ]: Applications Algorithms, Performance, Experimentation Tagging, Blogs, Machine Learning
Tags (words and phrases that annotate content) are widely used in web-logs (blogs). Blog tags are used in several ways: the blogger may use them for post categorization/topic iden -tification; the reader may use them to quickly ascertain an idea of the content and orientation of a blog and for post search and retrieval. Blogging systems may use tags for blog layout, post clustering, and recommendation services .
Despite the popularity of blogs and prevalence of tagging, the most popular blogging services do not offer tag sugges-tion features. Researchers have developed tools for tag sug -gestion, but most of these tools focus on social tag prediction . Social tags are the most interesting or informative tags de-rived (via aggregation, scoring and filtering) from all tags assigned by users of an online community (e.g. del.icio.us, StumbleUpon, Digg) to a content item. Social tags allow members of the online community to share and interact more effectively [8]. However, they do not accurately reflect the mental model of the content author.

There are two general approaches used in tag suggestion tools for blog posts. The first extracts interesting terms fr om the post itself [5]. This approach is useful for post cluster -ing, but often author-assigned tags consist of terms not in the post itself. Bloggers may label their posts with cate-gory tags ( X  X ategories X  in WordPress), topical tags, dates , and locations. For example, on the widely-read  X  X et Rich Slowly X  blog [1], there are some category tags (e.g.  X  X dmin-istration X ,  X  X sk the Readers X ), and some topical tags (e.g.  X  X ars X ,  X  X redit Cards X ). The second approach uses search and scoring over a large collection of posts [9]. For example , the TagAssist tool tags a post by constructing a search query from the post content, searching a collection of blog posts using the query, extracting the author-assigned tags from the retrieved posts, and scoring and filtering those tags [10 ]. In a series of evaluations on blog data, TagAssist was shown to perform well. However, it is neither personalized nor lo-calized: it weights tags preferentially if they occur on mor e popular posts or assigned to a larger number of posts, but it does not give preference to posts or tags by the same author, or to posts or tags that occur near each other in time.
In this work, we present a tag suggestion tool that fo-cuses on personalized and localized tag recommendation . Our method suggests only tags previously used by this blogger. I t also incorporates temporal information when selecting tag s to suggest. Our experiments demonstrate that a personal-ized tagger can substantially outperform a non-personaliz ed tagger. We compared the performance of iTag and TagAs-sist on a random subset of posts drawn from the  X  X rowing Blogs X  Wordpress RSS feed. This feed includes blogs that have had a recent increase in popularity (compared to its average number of page views), and therefore tends to con-tain reasonably well-written posts and few  X  X pam blogs X  (i. e. blogs that are created to artificially boost search engine re -sults or strictly advertise a product or company). On this data set, iTag achieved precision and recall scores over 60% , while TagAssist scored below 10% in these measures. Figure 1: A distribution of tag and category occur-rences across all blogs
The rest of this paper is structured as follows: in Section 2 we present what is to the best of our knowledge the first analysis of tag usage on a per-blogger basis. In Section 3 we describe a novel and lightweight machine learning techniqu e for tag suggestion that uses blogger identity and temporal information as features. In Section 4 we describe an evalua-tion of our approach and compare its performance with that of TagAssist. We observe dramatic increases in both preci-sion and recall on tagging posts, even when tags that only occur once are taken into consideration. This suggests that personalization must be incorporated into an auto-tagger t o provide effective tag recommendations.
We investigated tag usage on individual blogs by down-loading 1246 blogs from the Wordpress  X  X rowing Blogs X  feed [2] between April 1 and April 25. We chose WordPress because it allows bloggers to separate tags into two types: tags and categories. Intuitively, bloggers may separate th eir tags so that the more frequent or taxonomic tags are desig-nated as categories. 84.85% of the blogs in our data set uti-lized categories. The  X  X rowing Blogs X  feed [2] collects blo gs that have experienced a relative surge in viewership over th e last 24 hours. We chose this feed because it rarely contains spam blogs, is generally well written, exhibited tremendou s diversity in topic and content, and similar to other blogs in the long tail of popularity.

We measured the frequency of use of each tag and category by individual bloggers, then aggregated across all the blog s we analyzed. The resulting distribution of tag frequencies is shown in Figure 1. As one would expect, bloggers reuse categories more frequently than tags. We note that most tags occur only once per blog (58.82%). On the other hand, 51.2% of categories occur more than ten times per blog. On average, bloggers assign 10.2 tags to each post, but only 2.2 categories. Although most tags occur only once, most posts contain 9.37 previously seen tags, i.e. all but one of the tag s are re-used. Bloggers also reuse 2.03 categories on average , introducing a new category about once every 6 posts. 81.4% of posts use only pre-existing categories, whereas 23.8% of posts use only pre-existing tags.

We also measured individual bloggers X  consistency in tag use, as this is an indicator of how well a localized tag sug-Table 1: Average number of posts required for max-imal recall on previously seen tags gestion tool can perform. For each post, we determined the minimum number of previous posts such that the set of tags aggregated from these previous posts provides total recall for the tags that have occurred at least once before and are assigned to the target post. If bloggers use tags haphazardl y, we would expect many posts to be required to provide total recall. For this analysis, we selected a subset of 100 blogs that each contained 50 to 150 posts.

Finding the minimum number of posts to provide total re-call is an instance of the set-cover problem, and therefore w e employed a linear programming solver. We investigated sev-eral different strategies for previous post set selection. F irst, we selected all previous posts regardless of order. Second, we selected the n most recent previous posts (by creation date order). Third, we selected the n most similar previous posts (based on the cosine similarity of the documents).
Results are shown in Table 1. We see that for most blog-gers use of tags is highly local, both with respect to topic and with respect to time.

Our analysis of tag usage on individual blogs suggests that a personalized and localized tag suggestion tool can be highly effective. First, more than 40% of tags and 85% of categories are reused by individual bloggers. In fact, th e majority of tags and categories on each post have been used before. Our data suggests that a local approach can have good recall even though most tags are unique and it sug-gests only previously used tags. Second, a relatively small post history (10 posts) gives high recall for previously use d tags, indicating that bloggers cluster related posts toget her temporally. At the same time, a high recall for previously used tags based solely on similar posts by the same blog-ger indicates that document similarity can continue to be a useful feature for personalized tag suggestion. iTag uses a modified form of the approach taken in TagAs-sist [10]. We start by summarizing TagAssist X  X  search and score strategy. We then highlight key differences in iTag.
When TagAssist is presented with a target post, it selects tags to suggest using a search and score method on a large set of training data.
 Training Data TagAssist uses a corpus of blog posts and tags indexed with Lucene [3]. As part of indexing, TagAssist normalizes tags by trimming white space and punctuation, stemming each word in each tag, and ordering the words in multi-word tags alphabetically. It then clusters the nor -malized tags using tag co-occurrence information to find the minimal number of sets of semantically-related tags. Tag Retrieval TagAssist generates a query of up to 30 unigrams and bigrams from the target post that have high TFIDF scores in its training corpus. It retrieves up to 35 result posts from its index for this query, and retrieves the tags for each result post. Tags that occur on only one result post are discarded.
 Tag Scoring TagAssist scores the retrieved tags using a weighted sum over the following features: frequency (in the bag of retrieved tags), text occurrence (in the target post) , tag count (frequency in the training corpus), rank (popular -ity of the blog containing the retrieved post labeled with th e retrieved tag), and co-occurrence with other retrieved tag s (in the training corpus).
 Tag Selection TagAssist suggests tags that score above the average of all tag scores. iTag also uses a search and score method, but significantly differs from TagAssist in each part of the system. Training Data iTag only considers the previous posts, and consequently only the tags, of the blogger.
 Tag Retrieval iTag generates a query in the same way that TagAssist does. However, iTag only retrieves the 10 most similar previous posts by this blogger (which achieved reca ll of 0.94 in the analysis described previously). iTag does not remove any retrieved tags from consideration, regardless o f their absolute frequency of occurrence.
 Tag Scoring iTag does not use the rank, tag count, or co-occurrence features used by TagAssist. Instead, it uses the following features which we have found provide the best in-formation for tag suggestion with respect to previous posts :  X  Count: the number of times the retrieved tag appears  X  Highest rank: the rank of the retrieved post labeled  X  Contained: 1.0 if the retrieved tag appears in the tar- X  Tag.IDF: a variation on TFIDF, this feature is com- X  Last Recently Used: distance in number of posts since Tag Selection We devised two methods for tag selection. Our first method, adaptive co-occurrence tag selection, is a modification to the TagAssist tag selection method. Our second method, classification-based tag selection, uses a bi-nary classifier trained on the features described above. Adaptive Co-occurrence Tag Selection In this mode, iTag suggests any tag that scores above average. It also suggests any tag a that strongly co-occurs for this blogger with a tag b that scores above average, as long as Our testing indicates that a co-occurrence threshold of 35% provides good tag suggestions. Every time a blogger makes a change in tag assignments, the co-occurrence frequencies for that blogger are updated.
 Classification-Based Tag Selection Using the above fea-tures, we apply binary classifiers for tag suggestion using t he C4.5 decision tree implementation provided by WEKA [11] (decision trees outperformed SVMs, Naive Bayes, and near-est neighbor classification algorithms for our task). The la -bel for each tag was 1 if the tag was applied on the post, and 0 otherwise. iTag takes two approaches to classification-based tag sug-gestion. In the pre-trained approach, we trained the classifier on 15,000 instances of tags from the tag retrieval step of our algorithm on posts from our WordPress data set, regard-less of blogger of origin. In the locally-trained approach, by contrast, we train a separate classifier for each blog. The pre-trained approach is faster since the classifier only has to be trained once. The locally-trained approach must be retrained each time the blogger makes a change in tag assign-ments. Note that even when using the pre-trained classifier, iTag is still personalized since it only chooses tags from th e blogger X  X  previous posts.

If the classification-based method produces no tag sugges-tions, iTag backs off to the adaptive co-occurrence method.
Our evaluation uses the same set of blogs described in Sec-tion 2. We eliminated blogs that contained fewer than 30 posts, since these blogs were likely created by new bloggers not yet familiar with post authoring and tagging. We elimi-nated posts that contained fewer than 10 non-stopwords be-cause they had little information or contained only photos o r links. We did not distinguish between tags and categories, but included a tag only once if it was assigned as both a category and tag.
 We implemented TagAssist to compare with our approach. We trained our implementation using the ICWSM 2009 data set [6]. This data set consists of 6.9 million posts with 1.7 million unique tags and 1.4 million TagAssist-normalized tags. We chose this data set because it is the only freely available data set we could find with the popularity infor-mation and size required by TagAssist.
 We set aside 400 randomly-selected blogs for testing data. We used the remaining blogs to create the pre-trained classi -fier. When evaluating the locally-trained classifier on a pos t, we trained it on all the preceding posts in the same blog. As testing data, we used the 400 blogs set aside earlier. We then sampled 1000 posts from the last 20% of posts in each blog (with respect to creation date), with no blog contributing more than 3 posts.

For tag suggestion, we report average per-post precision and recall across all 1000 testing posts. Precision and reca ll for each post are normalized using the number of tags ap-plied to the post (for recall) and suggested (for precision) . We report results separately for all tags, and for tags the blogger uses more than once. Our evaluation results are presented in Figure 2. iTag achieves high precision and recall for posts, even when considering tags that occur only on the target post. This indicates that it is a useful method for tag suggestion which could be deployed almost immediately.

Both classification-based approaches outperform the adap-tive co-occurrence method. Surprisingly, the pre-trained ap-proach performs almost as well as the locally-trained ap-proach. We note that precision and recall for tags that oc-cur more than once when the classifier suggested at least one tag were 77 . 88% and 67 . 77% for the locally-trained approach and 79 . 17% and 63 . 36% for the pre-trained approach. This means that although the classification-based method gives higher precision, it may fail altogether, and the adaptive co-occurrence method gives some robustness. iTag performs substantially better than our TagAssist im-plementation in terms of both precision and recall. However , the precision and recall scores of our TagAssist implementa -tion are less than half those reported by the TagAssist cre-ators. There are several possible explanations for this. Fi rst, many of the tags suggested by our TagAssist implementation were reasonable. However, as our tag usage analysis showed, tag assignment is highly personal. Second, in the original TagAssist evaluation, a set of contemporaneous blogs was used for training and testing, and some of the same blogs were used for training and testing. We did not include other posts by the same blogger or from the same time period in the training corpus for our TagAssist implementation. Third, the blogs used in the original TagAssist evaluation came from Technorati and appear to be news and technol-ogy oriented, while many of the blogs in our data set were personal and had a wider variety of themes. Fourth, many normalized tags occurred relatively rarely in the ICWSM data set (63% of the tags on the test posts occurred on 10 posts or fewer in the ICWSM data set). Consequently, the removal of tags that occurred only once in the retrieved tag set may have adversely affected the precision and recall of TagAssist. Curiously, we also found that TagAssist X  X  tag normalization yielded clusters that where tags were not se-mantically related. For example,  X  X heney X ,  X  X heetos X ,  X  X h i X  and  X  X hildren X  all normalize to  X  X h X .
 Both iTag and TagAssist may face problems of scale. For TagAssist, it must store tag co-occurrence information acr oss the blogosphere. The 1.7 million tags in the ICWSM data set yielded 20 million instances of tag co-occurrence. Without aggressively caching this data, searching for co-occurren ce data can be incredibly costly. For iTag, the problem is re-lated to storing classifiers or adaptive co-occurrence feat ures for each blog; however, the tag co-occurrence problem is re-duced when only local tag co-occurrences need to be stored.
It is clear that although the purely local approach per-formed well, it is limited in two crucial ways. First, it suf-fers from the  X  X old start X  problem where initial data is re-quired to obtain any results. Secondly, an individual blog is a relatively small corpus containing at most a thousand entries. A local approach inevitably encounters sparsity of data when tagging new posts. This experiment demon-strates that a purely global approach may not take advan-tage of the personal taxonomy and consistency in tagging behaviors of bloggers. Our goal is to combine global and local information to provide personalized suggestions tha t also anticipates new tags. Lastly, existing tag suggestion systems have not taken advantage of user interaction and feedback. It will be important to perform a user study to observe user interaction with auto-taggers and how better suggestions can be crafted.
We have described iTag, a personalized and localized tag suggestion tool motivated by analysis of bloggers X  post tag -ging behavior. We have demonstrated that iTag outperforms taggers trained on large multi-blog, multi-tag data sets. W e also demonstrated that incorporating machine learning lea ds to improved tag suggestion with minimal cost.
