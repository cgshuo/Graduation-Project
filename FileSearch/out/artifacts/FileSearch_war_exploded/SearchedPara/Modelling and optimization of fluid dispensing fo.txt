 1. Introduction
In the competitive market of today, manufacturers need to control variability at each of the many processing steps in a manufacturing line. All the variables controlling the desired output in a given process need to be understood and optimized for tight control. To achieve them, it is necessary to develop an accurate model for describing the process. There are two major approaches of developing process models; analytical modelling and empirical modelling. Analytical models are established based on the physical understanding of the process and deploys the various physical laws, typically a set of governing partial differential equations. They are attractive since they provide a fundamental understanding of the relationships between the various input and output parameters. Quite a few analytical models were developed for various manufacturing processes such (Chiang et al., 1991 ) and transfer molding ( Han et al., 2000 ). Because of the complex behaviour of fluid dispensing, high degree of uncertainty associated with the process and assumptions undertaken for developing analytical models, an analytical model for fluid dispensing, which can provide accurate results in real world environment, is not yet available.

As opposed to analytical models, empirical modelling is a popular approach to develop process models using experimental data, which is commonly welcomed by industries. Classical statistical regression method is a common empirical approach to develop process models ( Seber, 2003 ). However, if the behaviour of processes is vague or irregular, the obtained models have unnaturally too wide possibility range ( Chen et al., 2004 ). As a result, statistical regression models can be applied only if the given data are distributed according to a statistical model, and the relationship between dependent and independent variables is crisp. Artificial neural networks have been used to develop process models for various manufacturing processes such as resistance spot welding ( Li et al., 2007 ) and transfer molding (Tong et al., 2004 ). They have the capability to transform a nonlinear mathematical model into a simplified black-box structure. The advantages of using neural networks in process modelling are that they have learning and generalization abilities as well as nonlinearity. Previous research has already confirmed that a neural network is a powerful tool for modelling nonlinear, complex and noisy processes. However, previous studies also found that the performance of a developed neural network is quite dependent on the pre-defined neural network architectural design as well as on the setting of the neural network parameters.
A fuzzy logic modelling technique has been applied successfully in developing models of various manufacturing processes such as the Flip-Chip bonding process ( Kang et al., 1993 ), vapor phase soldering ( Xie et al., 1995 ) and the waterjet depainting process (Babets and Geskin, 2000 ). In this approach, the basic elements of a fuzzy logic model are the internal functions, the membership functions and the outputs. The use of several internal functions accounts for the fuzziness of the model. All of the statistical regression methods, neural networks and the fuzzy logic model-ling approach normally require a large number of experimental data sets to develop models. Compared with these three approaches, fuzzy regression has a distinct advantage which is that an acceptable process model can be developed using fewer experimental data sets or/and incomplete data sets based on that approach. Limited research has been conducted so far towards the use of fuzzy regression in process modelling. An attempt has been made by Schaiable ( Schaible and Lee, 1997 ) to model the vertical CVD process using the fuzzy regression method. Lai ( Lai and
Chang,1994 ) applied fuzzy regression to modelling the die casting process.

Recent research shows that the approach of neural fuzzy networks has been used to develop process models for various manufacturing processes which are both nonlinear and complex (Tzafestas and Zikidis, 2001 ; Kang et al., 1993 ; Brinksmeier et al., transform a nonlinear mathematical model into a simplified input X  X utput structure ( Ying, 1998 ). Kang et al. (1993) have proved that the TSK fuzzy system approach outperforms statis-tical regression and polynomial models in both correlation and prediction in modelling of highly nonlinear systems. Compared with conventional approaches of fuzzy logic, recent research has shown that neural fuzzy systems can achieve better performance, at least in mathematical function approximation, compared with the conventional approaches with the same number of fuzzy sets used in input variables ( Fiordaliso, 2001 ).

After developing process models, process optimization can be carried out to determine the optimal/proper process parameters of manufacturing processes. Quite a few techniques for process optimization have been attempted in previous research such as response surface methodology (RSM) and genetic algorithms (GA).
RSM has been proven to be effective in many applications of process optimization ( Poon et al., 2000 ; Xie and Lee, 1994 ). Xie and Lee (1994) developed a fuzzy logic-RSM based process optimization algorithm with CVD process as an application. The constructed fuzzy logic model was employed to evaluate the gradient and a gradient descent method was then used to optimize the objective function. However, one of its limitations is that it usually requires a large number of experimental data sets, specially in the nonlinear region. GAs have been applied in process optimization of various manufacturing processes success-fully ( Hussein and El-Ghazaly, 2004 , Tan and Yuen, 2000 , Wilson et al., 2001 ). They outperform the classical gradient descent method that it is more likely to reach the global optimum in solving nonlinear problems ( DeJong, 1975 , Goldberg, 1989 ).
Fluid dispensing is the most popular process for performing the microchip encapsulation on chip-on-board (COB) packages.
However, it is a highly non-linear process and creates a highly coupled multi-variable system that involves the extremely complex inter-relationships among the fluid properties, process conditions, needle design parameters and overall encapsulation quality. In semiconductor manufacturing, a trial-and-error meth-od is still very common to be used to identify proper process parameters setting. However, this method involves long process development time and optimum encapsulation quality may not be obtained systematically. Empirical model of fluid dispensing process also involves cognitive uncertainties. For example, cognitive uncertainties exist in the process such as the human handling of substrate for inspection and measurement, incom-plete/insufficient data sets for process modelling, operator-to-operator variability and human judgment on the surface quality of the encapsulation. Various approaches have been attempted to model fluid dispensing process including analytical approach 2007 ), artificial neural networks ( Kwong et al., 2007 ) and fuzzy regression ( Ip et al., 2003 ).
 process models of fluid dispensing for microchip encapsulation is described. The developed process models are used to formulate a multiobjective optimization problem, which is then solved by a genetic algorithm. By solving the optimization problem, an optimal setting of process parameters for the fluid dispensing can be obtained. Validation tests were performed to evaluate the proposed approach to modelling and optimization of fluid dispensing process. Results of the validation tests indicate that process parameter settings can be obtained based on the proposed approaches to achieve the specified quality requirements. 2. Fluid dispensing process studied. In the fluid dispensing of microchip encapsulation, normally, silicon chips are covered using an X  X  Y numerically controlled dispensing system that delivers epoxy encapsulant through a needle. The material is commonly dispensed in a pattern, working from the center out. A fluid dam around the die site and second wire bond points can be made to contain the flow of material and make a more uniform looking part as shown in
Fig. 1 . With assistance from the supporting company of this research, three significant process parameters and their normal operating ranges were identified as: the compressed air pressure (1 bar to 4 bar), x 1 ; the pump motor speed (400 X 1000 rpm), x and the height between the substrate and the needle (250 to 2000 steps of stepping motor), x 3 . Two quality characteristics were also identified as encapsulation weight (mg), y and encapsulation thickness (mm), z . design with 4 levels in compressed air pressure ( x 1 ), 6 levels in pump motor speed ( x 2 ) and 4 levels in the height between the substrate and the needle ( x 3 ). 88 out of the 96 experimental data were used to develop the neural fuzzy networks (NFN) based process model, and the rest 8 experimental data were used the validation test.
 error (Me) was used as defined below Me  X  1 n where t ( k ) is the actual value of the quality requirement for the k th experimental data; y ( x ( k )) is the estimated quality require-ment with the recommended process parameters x ( k ) obtained from the process model; n is the number of experimental data sets used for the validation tests.

The variance of errors (Var) was also involved in the validation as shown below Var  X  1 n 1 3. Modelling fluid dispensing using neural fuzzy network
The neural fuzzy network (NFN) approach is proposed to model the fluid dispensing process. Fig. 2 shows the structure of a
NFN which was used to model the encapsulation weight y and encapsulation thickness z . The network consists of an input layer in which an input vector containing process parameters x 1 x is fed in, the output layer which produces the output response, the quality characteristic y or z and two hidden layers between the input and output layers. The functions of the four layers of the NFN are described below:
Layer 1: No computation is done in this layer. Each node in this layer which corresponds to one process parameter transmits input values to the next layer.

Layer 2: Each node in this layer corresponds to one linguistic label (i.e. small, medium or large) of one of the input variables, x x and x 3 , in Layer 1. Thus the number of fuzzy sets of each input variable is three. The membership value which specifies the degree to which an input value belongs to fuzzy set, is calculated in Layer 2. The j th membership function of the input variable x a bell-shaped function and is given by
A  X  x where parameters x ij and s ij with i =1,2,3 and j =1,2,3 are the mean value and the standard deviation of the j th membership function of the input variable x i , respectively. They are called NFN parameters which are searched by using a genetic algorithm.
The membership function A ij ( x i )of x i with j =1,2,3 represent the small, medium and large fuzzy set, respectively. Fig. 3 shows the three membership functions of the process parameter x 1 . A A ( x 1 ) and A 13 ( x 1 ) are the membership functions of x fuzzy sets,  X  X mall X ,  X  X edium X  and  X  X arge X , respectively. x x 13 are the mean values of the membership functions, A 11 ( x A ( x 1 ) and A 13 ( x 1 ), respectively.

Determination of proper setting of the neural fuzzy parameters x ij and s ij are important, because they directly affect the prediction accuracy of the neural fuzzy network based process models. In this research, the parameters were searched using Genetic Algorithm (GA) ( Goldberg,1989 ). A discussion of using GA to search the neural fuzzy parameters is given in the end of this section.

Layer 3: A node in this layer represents one fuzzy logic rule and performs precondition matching of a rule. For instance, a fuzzy rule R g 1 g 2 g 3 can be given as: R AND x 3 is A 3 g 3  X  x 3  X  THEN y  X  x 1 ; x 2 ; x 3  X  is m be represented as:
In this project, number of membership functions of each input variable is 3 and the number of input variables is 3 as well, thus the total number of fuzzy rules is 27 (i.e. 3 3 ).
 For example, fuzzy rule R 213 can be written as: R
With x 1 =2.5 bar, x 2 =500 rpm and x 3 =1700 steps, the member-ship values of x 1 , x 2 and x 3 can be found from Figs. 4 X 6 , respectively, which are A 12 ( x 1 )=0.5, A 21 ( x 2 )=0.1 and A Membership value 1 0 Membership value 
Membership value 
Therefore the resulting output singleton y of the fuzzy rule R 213  X  A 12  X  x 1  X  U A 21  X  x 2  X  U A 33  X  x 3  X  X  0 : 045
Layer 4 : The node in this layer corresponds to the output variable y . The node integrates all the actions taken by the Layers 3 and acts as a defuzzifier with defined in (5). y  X  x 1 ; x 2 ; x 3  X  X  P  X  g g 2, g 3 =1, 2, 3 are the neural fuzzy parameters.

The NFN parameters including w g 1 ; g 2 ; g 3 0 , w g 1 ; g w were searched by using a genetic algorithm (Goldberg, 1998). The objective of the genetic algorithm is to minimize the training error of the NFN model by searching the NFN parameters setting. The fitness function is defined as fitness  X  1 1  X  err  X  6  X  where err  X  1 N experimental data sets, and N is the total number of experimental data sets.

The range of fitness in (6) is [0,1]. With the use of GA, an optimal setting of neural fuzzy parameters can be obtained. The process starts with a population of randomly generated chromo-somes, while each chromosome is set to be a set of neural fuzzy parameters. Thus the length of each chromosome is 45. Thereafter, the GA further processes a fixed number of generations using the evolutionary operations; selection, crossover and mutation.
Selection is performed in two steps, chromosome selection and survival. Selection on chromosomes decides who become parents and how many children the parents have. Children are created through crossover which exchanges information between parents, and mutation which further perturbs the children. The fitness of each child is then evaluated based on the fitness function (6). Finally, the survival step decides who survives in the population.
After the operations of selection, crossover and mutation, a new population can be generated. The chromosome with the highest fitness is selected to be the setting of the neural fuzzy parameters.
The following parameter values suggested by Schaffer et al. (1989) have been used in the genetic algorithm for searching the neural fuzzy parameters; crossover rate=0.8; mutation rate=1/45, where 45 is the length of the chromosome; number of genera-tions=1000; population size=200. The genetic algorithm for optimizing the NFN parameters was implemented using Matlab programming software.
 algorithm to develop the neural fuzzy models for the encapsulation weight and encapsulation thickness, respectively. models in modelling the fluid dispensing process, N-fold validation tests were conducted. The validation results are compared with those based on statistical regression, artificial neural networks and fuzzy regression for modelling t he fluid dispensing process ( Kwong et al., 2007 ). 8 data sets were randomly selected from the 96 experimental data sets. The remaining 88 data sets are used for training the models. The validation test was repeated 11 times. For each validation test, a model was developed based on the 88 training data sets, and the remaining 8 data sets were used for validating the trained model. The mean errors were calculated based on (1) and the errors of variances were calculated based on (2). Tables 1 and 2 ,
Membership value respectively, summary the mean errors and the variances of errors of modelling the process with regard to encapsulation weight. Tables 3 and 4 , respectively, summarize the mean errors and the variances of errors of modelling the process with regard to the encapsulation thickness. From the tables, it can be seen that modelling the fluid dispensing process based on the NFN models yields the smallest are shown in Figs. 9 X 12 from which it can be seen that the prediction errors of NFN models, for all the tests, are the smallest.
Therefore the NFN based process models for encapsulation weight and thickness predictions were used to perform the process optimization of the fluid dispensing, and the genetic algorithm is proposed to determine an optimal setting of process parameters.
 0 5 10 15 20 25 Mean errors (%) 0 2 4 6 8 10 12 Mean errors (%) Variances of errors (%) 4. Process optimization using genetic algorithms
Given the required values, b mg and g mm of the encapsulation weight and encapsulation thickness, respectively, it is necessary to determine a setting of the process parameters for achieving the quality requirements of the encapsulation weight and thickness.
To determine the process parameter setting, the following multi-objective functions are formulated by minimizing the errors between the estimated values of quality characteristics and actual values of quality characteristics:
Multi objective function : subject to : f Operating range of process parameters  X  x 1 ; x 2 and x where the normal operating ranges of the three process parameters ( x 1 , x 2 and x 3 ) are: 1 r x 1 r 4, 400 r x 250 r x 3 r 2000. A set of process parameters of the multi-objective optimization problem consists of all process parameter sets which cannot be improved in any objective without degrading another objective. These process parameter sets are known as Pareto-optimal. Mathematically, x  X  X  x 1 ; x 2 ; x nates x 0  X  X  x 0 1 ; x 0 2 ; x 0 3  X  (also written as x g x 0 ) iff 8 i A f 1 ; 2 g : f i x  X  Z f i x 0  X  4( j A f 1 ; 2 g : f sets which are not dominated by any other decision vector are called nondominated or Pareto-optimal. solved by GA which has rich literature in solving multi-objective problems ( Knowles and Corne, 2000 ; Zitzler and Thiele, 1999 ).
Therefore GA was used in this research. Fig. 13 shows a GA based optimization model for determining process parameters setting for the fluid dispensing and how it interfaces with the NFN based process models (as shown in Fig. 2 ) was developed and implemented. The GA optimization model aims at minimizing the objective function (7) from which an optimal process required encapsulation weight b mg and encapsulation thickness g mm. Some descriptions of the genetic algorithm based optimization model are given below. 4.1. Randomly generated strings and fitness evaluation strings which represent the population of genetic algorithm. Real and binary encoding are two commonly used approaches for
Variances of errors string representation. In binary encoding representation, strings need to be encoded to real values for fitness evaluation and also they need to be decoded again for reproduction operation.
However, in real encoding representation, there is no need for string encoding and decoding, which would save a considerable amount of computational time and would lead to a much faster searching process than that of the binary code representation. In this research, real encoding was adopted in this project, and each string contains three real values, which correspond to the setting of the three process parameters. The generated random values have the ranges associated with the operating ranges of the process parameters.

The multi-objective function (7) was formulated to determine how close the randomly generated strings are to the required values of encapsulation weight ( b mg) and encapsulation thick-ness ( g mm). Based on a string with the three process parameters, the quality measures of encapsulation weight y and encapsulation thickness z can be predicted by the NFN based process models.
Based on the fitness function (7), the fitness of a string with three process parameters can be evaluated. 4.2. Convergence and selection
The population is evolved and improved iteratively until a stopping condition is met. In genetic algorithms, there are several stopping conditions. In this research, the stopping criterion is met when the number of generations is equal to a pre-defined number of generations. Otherwise, the genetic algorithm goes to the next evolutionary generation.

The approach of roulette-wheel, which is one of the most common selection methods used for selecting strings to perform reproduction operations ( Goldberg, 1989 ), is used for strings selection. For example, the fitness of the j th string in a population probability value prob j to the j th string. The probability value prob j is defined as prob  X  where Popsize is the population size of the genetic algorithm.
Eq. (8) shows that the string with a larger fitness value has higher probability to be selected. 4.3. Crossover, mutation and updating population
Intermediate crossover ( Muhlenbein and Voosen, 1993 ), a common crossover operation for real encoding representation, is used in the genetic algorithm. It is a method of producing a new string around and between the process parameters of the two selected parent strings. A new string  X  x 3 1 ; x 3 2 ; x according to the following rule:  X  x ; x 3 2 ; x 3 3  X  X  x 2 1 ; x 2 2 ; x 2 3 a f X  x 2 1 ; x 2 where a is a scaling factor chosen uniformly at random over some interval typically [ 0.25, 1.25], and  X  x 1 1 ; x 1 2 ; x the two selected parent strings. Process parameters in the new string are the result of combining the values of the process parameters in the parent strings according to (9) with a scaling factor a chosen for each process parameter. In geometric terms, intermediate crossover is capable of producing new parameter values within a slightly larger hypercube than that defined by the parent strings but constrained by the range of the scaling factor a .
Mutation is carried out by randomly changing one or more process parameter values of the selected string between its pre-defined upper and lower bound. The mutation operator of Gaussian perturbation of individual parameters is used. For example, the parameter x j is selected to be mutated. After performing mutation, its value becomes:  X  x j  X  MutMx R j d  X  10  X  where MutMx= +1 or 1 with equal probability; R j =0.5 searching domain of the process parameter x j ; d =a value in the range [0,1] for shrinking the mutation range based on Gaussian perturbation.

Updated population is produced by reinserting the new reproduced strings into the old population. It can be produced by replacing the least fitness strings in the old population with the new reproduced strings. However, pre-mature convergence likely occurs in early generations of evolution. To avoid the problem, random reinserting approach is used in the genetic algorithm. 5. Implementation and results
There are several evolutionary algorithm parameters such as population sizes, crossover rates and mutation rates that need to be set such that evolutionary algorithms can find solutions efficiently [ Back and Schwefel, 1993 ; Eiben et al., 1999 ]. It can be found that different results could be obtained using different settings of genetic algorithm parameters. Although there are a lot of studies of investigating performance of genetic algorithms using different settings of GA parameters ( Back and Schwefel, 1993 ; Eiben et al., 1999 ; Goldbery, 1989 ; Grefenstette, 1986 ; De
Jong and Spears, 1990), no conclusion has been reached by which a parameter setting outperform the others on which problem landscapes. As this research project focuses on modelling and optimization of fluid dispensing using neural fuzzy networks and
GAs, we adopted DeJong X  X  suggestions of algorithm parameters settings [ DeJong, 1975 ] in this research. Referring to the DeJong X  X  suggestion, population size, crossover rate, the mutation rate and pre-defined number generations are set as 200, 0.8, 0.001 and 200, respectively. The genetic algorithm toolbox coded in Matlab (Chipperfield et al., 1994 ), which exists in the public domain, has been employed to search the process parameters of the fluid dispensing process.

Eight validation tests were performed to evaluate the effec-tiveness of the GA based optimization model. For each test, required values of encapsulation weight and thickness are input and it is expected that a setting of process parameters can be obtained from the optimization model. Table 5 shows the eight settings of process parameters generated by the GA based optimization model corresponding to the eight sets of requirements of quality characteristics. The second and third columns show the required values and the predicted values of encapsulation weight and encapsulation thickness. The last three columns show the settings of the process parameters generated by the GA based optimization model. From the table, it can be found mean prediction errors between the required values and the predicted values of the encapsulation weight and encapsulation thickness are all about 3%.
 the 1st validation test at the 5th, 50th, 200th and 500th are shown in Figs. 14 X 17 . It can be found that the chromosomes distribute more randomly at the 5th, 50th and 200th than the one at the 500th. It can also be observed that the shape of a Pareto-optimum occurs at the 500th generation in which both the error of encapsulation weight of chromosome and the error of encapsulation thickness of chromosome are more equally than the ones at the 5th, 50th and 200th generations. thickness thickness 6. Conclusion
In this paper, neural fuzzy networks and genetic algorithms were proposed to determine process parameters setting of fluid dispensing process for microchip encapsulation. 96 experiments based on a full factorial design were conducted in which the parameters of compressed air pressure, pump motor speed, distance between substrate and needle, and two quality char-acteristics, encapsulation weights and encapsulation thickness, are involved. 88 experimental data were used to develop the NFN based process models. 8 validation tests were carried out to evaluate the effectiveness and robustness of the process para-meters settings recommended by the GA based optimization model. The validation results indicate that, for each test, a setting of process parameters can be obtained to achieve the required quality requirement based on the proposed approaches.
Further work involves the validation of the process conditions obtained by the system in a real world environment using experiments. Improvement of the NFN based process models and the GA based optimization model in terms of the computa-tional speed and accuracy could be considered in future studies. A data mining rule-based system will be developed to reduce the searching space of the GA based optimization model. The results will be reported in the near future.
 Acknowledgment
The work described in this paper was fully supported by a grant from The Hong Kong Polytechnic University, Hong Kong, China. References
