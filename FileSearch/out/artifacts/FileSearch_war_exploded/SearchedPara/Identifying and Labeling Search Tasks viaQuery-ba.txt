 We consider a search task as a set of queries that serve the sam euser information need. Analyzing search tasks from user query st reams plays an important role in building a set of modern tools to improve search engine performance. In this paper, we propose a proba bilis-tic method for identifying and labeling search tasks based o nthe following intuitive observations: queries that are issued temporally close by users in many sequences of queries are likely to belo ng to the same search task, meanwhile, different users having the same information needs tend to submit topically coherent search queries. To capture the above intuitions, we directly model query tem po-ral patterns using a special class of point processes called Hawkes processes, and combine topic models with Hawkes processes for simultaneously identifying and labeling search tasks. Ess entially, Hawkes processes utilize their self-exciting properties t oidentify search tasks if influence exists among a sequence of queries f or in-dividual users, while the topic model exploits query co-occurrence across different users to discover the latent information n eeded for labeling search tasks. More importantly, there is mutual re inforce-ment between Hawkes processes and the topic model in the unifi ed model that enhances the performance of both. We evaluate our method based on both synthetic data and real-world query log data. In addition, we also apply our model to query clustering and s earch task identification. By comparing with state-of-the-art me thods, the results demonstrate that the improvement in our proposed ap proach is consistent and promising.
 Categories and Subject Descriptors: H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval; I.2.6 [ Artificial Intelligence ]: Learning; J.4 [ Com-puter Applications ]: Social and Behavioral Sciences Keywords: Hawkes process, latent Dirichlet allocation, variational Inference, search task
Nowadays, search engines have become the most important and indispensable Web portal, whereby people pursue a wide rang eof searches in order to satisfy a variety of information needs .Tobet-ter understand users X  information needs and search behavio rs, one important research direction is to detect and split users X  t emporal sequences of queries into disjoint query sessions ,whichareoften defined as a sequence of queries issued within a fixed period of time, ranging from 5 to 120 minutes. However, a user X  X  single ses-sion may contain queries with multiple intents, or consist o fseek-ing information on single or multiple topics [28]. Going bey ond a search session, a search task [23, 17, 30], which is defined as a set of queries serving for the same information need ,hasbeenrecog-nized as a more suitable atomic unit than a single query or session, not only for better modeling user search intent but also for i mprov-ing other downstream search engines X  applications, such as query suggestion [9, 17] and personalized search [33]. Additiona lly, an-alyzing the formation of search tasks also deepens our under stand-ing of the simultaneous temporal diffusion of multiple meme s, i.e., intents or ideas, in social networks [34]. Therefore, how to effec-tively identify and label search tasks becomes an interesti ng and challenging problem.

Recently, there have been attempts to extract in-session tasks [28, 23, 17], and cross-session tasks [18, 19, 1, 30] from sequenc es of queries. They build clustering or classification methods to identify tasks based on time splitting, lexicon similarity, and quer yrefor-mulation patterns. Even though the temporal submission pat terns in query sequences carry valuable information for mining se arch tasks, those existing methods only use them for either simplysplit-ting sequences of queries into temporally-demarcated sessions [18, 19, 23], or transforming them as features among queries [19, 17, 30]. We believe that by directly modeling temporal informat ion as part of extracting search tasks in a richer way, we can subs tan-tially improve search task mining. Another key drawback of t hose existing methods is that most of them focus only on the query s e-quences of individual users instead of considering the whol equery log. Only very recently, there has been an attempt which trie sto take advantage of the collective intelligence of many users for dis-covering tasks [24]. It is obvious that different users may h ave the same information need, and share the same search task, thus m od-eling query sequences across different users will be very va luable for capturing semantically similar search tasks in a global context.
Generally, two consecutive queries issued by a user are more likely to belong to the same search task than two non-contigu ous queries, but that is not necessary always the case. For examp le, as shown in Figure 1, the consecutive queries  X  X utotrader X  and  X  X a-hoo autos X  issued by user u a belong to the same search task, while the consecutive queries  X  X ahoo autos X  and  X  X ells fargo X  bel ong to two separate search tasks. Another complicated case is that two non-contiguous queries may belong to the same or different t asks Figure 1: An Illustration of Relationship between Consecut ive Queries and Search Tasks. Every circle represents a query is -sued by a user at time t n .Thebluearrowlineindicatesanin-fluence exists between queries. A set of queries linked by blu e lines denotes a search task, and some topically coherent sea rch tasks across three users are labeled by different colors. as well, e.g.,  X  X erizon wireless X  and  X  X utotrader X  issued b yuser u belong to two different search tasks, but  X  X ahoo autos X  and  X  KBB cars X  issued by users u b belong to the same search task. These examples show that in reality we cannot simply rely on the tim e splitting or an individual user behavior for identifying search tasks. It makes more sense to take into account the explicit tempora lin-formation of query sequences exhibited by many different us ers in the whole query logs. The basic intuition is that if two consecu-tive or temporally-close queries are issued many times by th esame user or many others users, it is more likely these two queries are semantically related to each other, i.e., belong to the same search task. As we can see, the consecutive queries  X  X ells fargo X  and  X  X ank of america X  are issued by both u a and u b (and possible many other users), while the consecutive queries  X  X ahoo autos X  and  X  X ells fargo X  are only issued by user u a .Therefore,accord-ing to the above intuition,  X  X ells fargo X  and  X  X ank of americ a X  are more likely to belong to the same search task compared with  X  X  a-hoo auto X  and  X  X ells fargo X . Similarly, for non-contiguous queries,  X  X utotrader X  and  X  X BB cars X  are issued temporally very clos eby both u b and u c ,whichindicatestheyhavehigherchanceofbe-longing to the same search task. Moreover, different users m ay engage in different search patterns, e.g., user u b searches more fre-quently than user u a ,whichindicateshowlikelythesearchtasks may change within a certain time period for different users, and then they should be treated differently based on their searc hactivi-ties. All in all, we choose to identify search tasks by levera ging the temporally weighted query co-occurrence  X  this not only gua ran-tees sound performance by making full use of both textual and tem-poral information of the entire query sequences, but also en ables the labeling of the identified search tasks since semantical ly related queries are clustered together through query links determined by co-occurrence.

To model temporally close query co-occurrences, we turn to L a-tent Dirichlet Allocation (LDA) [7], one powerful graphica lmodel that exploits co-occurrence patterns of queries in query se quences. Existing temporal LDA models [16, 32] learned distinguishe dtopic distributions from temporal fragments of data, while ignor ed query co-occurrence across different fragments, thus failed to make full use of the temporal information. Recently, some spatial-LD Amod-els [31] encouraged queries that are very close in space to sh are similar topic distributions, i.e., weighing the reliability of query co-occurrence based on spatial closeness. However, there e xists no uniform standards for measuring such closeness across di fferent instances, especially in temporal data. Our research, on th eother hand, considers making full use of temporal information by w eigh-ing the reliability of each co-occurrence of a pair of querie sbased on how likely an influence exists between this pair of queries. Here we define query influence as: Influence ,ratherthancloseness,enablesustodistinguishtempo-rally close query co-occurrence from temporally regular qu ery co-occurrence for each user based on his own propensity of query submission. For instance, in Figure 1, the absolute tempora ldis-tance between "KBB cars" and "Expedia" is smaller than that b e-tween "verizon wireless" and "sprint wireless", however, influence exists between the latter pair of queries rather than the for mer one, since user u b  X  X  query submission propensity is much larger than that of user u a .Tomodelsuchpersonalpropensityand influence , in this paper, we utilize Hawkes processes [14], a special cl ass of point processes, whose intensity functions characterize h ow likely an event will happen at each timestamp. The intensity functi on of Hawkes includes a base intensity, along with a positive influ ence of the past events on the current one. Such a positive influence i sorig-inated from the self-exciting property that the occurrence of one event in the past increases the probability of events happen ing in the future. We find that Hawkes X  X  self-exciting property coincides with the concept of influence in our situation, and its base intensity captures the personal propensity. Thus we employ Hawkes pro -cesses to fully utilize temporal information in query seque nces for identifying the existence of query influence .

From the perspective of Hawkes processes, influence generally exists between temporally-close queries. However, for an o bserved query sequence, not all temporally-close query-pairs have the ac-tual influence in between, since in some cases the occurrence of the later queries may result from the base intensity rather t han self-exciting property. Furthermore, existing Hawkes models [20, 35] find it intractable to obtain an optimal solution of influence exis-tence based on temporal information only. Last but the most i m-portant, it is unable to directly identify search tasks by ei ther gen-erating topics based on query co-occurrence using LDA, or es ti-mating all influence candidates by Hawkes. To address the above issues, we concentrate on the influence existence between seman-tically related queries, whose estimation can be simplified by the joint efforts of LDA and Hawkes and enable a direct identification of search tasks.

According to the above intuition, a search task can be viewed as asequenceofsemanticallyrelatedquerieslinkedby influence .A query that does not satisfy user X  X  information need will self-excite the submission of another semantically related query in the near fu-ture. On the other hand, a query rarely excites the submissio nof another semantically unrelated query even if their timesta mps are very close. Thus we believe that those semantic influence are the influence that actually take effect, and our paper solves search task identification directly by identifying those influence .Tolimitthe solution space of such influence ,wecastboth influence existence and query-topic membership into latent variables, and iden tify the existence probability of pairwise influence with the similarity of the memberships of associated two queries. This identification works as a bridge between LDA and Hawkes processes, as LDA assigns high influence -qualified co-occurred queries to the same topic, while query co-occurrence frequency narrows the sol ution space of influence .Inthisway,LDAandHawkesmutuallybene-fit each other in identifying search tasks using both tempora land textual information. To this end, we propose a probabilisti cmodel that incorporates this equalization to combine the LDA mode lwith Hawkes processes, and develop a mean-field variational infe rence algorithm to estimate the influence by optimizing the data likeli-hood. We evaluate our method on synthetic data, and also appl yit to mine search tasks in both AOL and Yahoo query log data. Expe r-imental results show that the proposed method can achieve signifi-cantly better performance than existing state-of-the-art methods.
In a nutshell, our major contributions include: (1) We cast s earch task identification into the problem of identify semantic influence in observed query sequences, and propose a probabilistic mo del by combining LDA model with Hawkes processes to address the problem. Most importantly, there is mutual reinforcement b etween Hawkes processes and the topic model in the unified model that en-hances the performance of both. (2) We employ Hawkes processes to directly model temporal information as part of search tas kiden-tification, which has never been explicitly exploited in the existing works.
 The rest of the paper is organized as follows. We first introdu ce Hawkes processes, and the proposed model by combining LDA with Hawkes processes in Section 2. In Section 3, we develop a fast mean-field variational inference algorithm for the res ulting op-timization problem. We then describe and report the experim ental results in Section 4. Finally, we introduce the related work in Sec-tion 5, and present our conclusions and future work in Sectio n6.
Let us consider a typical scenario where M users issue M corre-sponding query sequences, and we mark the query sequence of user m as T m = { t m,n ,n =1 ,...,N m } ,where t m,n is the time-stamp of the n -th query. We denote the word set of the n -th query of user erally identify search task by sequentially solve two subpr oblems: 1) using queries X  textual information to cluster queries in observed query sequences, and 2) using obtained clusters together with tem-poral information to partition query sequences into search tasks. In this section, we show how these two subproblems can be simult a-neously addressed by combining Hawkes processes with the LD A model, and how temporal and textual information can be combi ned to address the above two subproblems in a mutually-beneficia lway. We also show how our model can be used to automatically label search tasks along with search task identification.
We address the query clustering problem using graphical mod -els like LDA [7], which has been proven to be effective in topi c discovery by clustering words that co-occur in the same docu ment into topics. Let us first introduce how to use LDA to cluster qu eries based on their textual information only. One straightforwa rd idea is to treat each user X  X  query sequence as a document, and clus -ter queries that co-occur in the same query sequence into top ics, since queries issued by the same user are generally more like ly to share the same information need than queries issued by dif-ferent users. Since we focus on query co-occurrence instead of word co-occurrence, we enforce that words in one query belon g to the same topic. Our LDA model assumes K topics lie in the given query sequences, and each user m is associated with a ran-domly drawn vector  X  m ,where  X  m,k denotes the probability that aqueryissuedbyuser m belongs to topic k .Forthe n -th query in the query sequence of user m ,a K -dimensional binary vector Y m,n =[ y m,n, 1 ,...,y m,n,K ] T is used to denote the query X  X  topic membership. One challenge we encounter in the inference of t opic membership Y is that, without temporal information of queries, it is difficult to judge whether two non-contiguous co-occurred queries should belong to the same topic or not. The reason is that the r e-liability of the co-occurrence of queries heavily depends o ntheir temporal distances. A pair of queries that co-occurs many ti mes may be completely unrelated if the temporal gap between them is always large.

Since the co-occurrence of queries with large temporal gap c an be harmful, we make use of temporal information to decide whi ch query co-occurrence should be taken into account by LDA, i.e ., how a document in LDA model should be constructed. One sim-ple way of utilizing temporal information is to define a docum ent as consecutive queries in a fixed time window (or time session), which enables us to focus on temporally close query co-occurrence .Tem-porally close queries that issued many times by the same user or many other users are more likely to be semantically related t oeach other, i.e., belong to the same search task. However, a time w in-dow based LDA model may suffer from the following drawbacks: 1) Usually no optimal solution exists for cutting the entire query sequence into different time-sessions. If we allow differe nt time-sessions to overlap, redundant query co-occurrence will be taken into account; otherwise, pairs of queries with very small te mporal gap can be partitioned into different tasks, which may cause infor-mation loss. 2) Using time windows will ignore or misunderst and users X  own temporal patterns in searching.

To address the above drawbacks, we can weigh each query co-occurrence based on how likely an influence exists between this pair of queries, i.e., the degree to which the occurrence of one query raises the probability that the other query will be issued in the near future. That is to say, one document is a subsequence of queries linked through influence .This influence ,ratherthan time window, enables us to distinguish temporally close que ry co-occurrence from temporally regular query co-occurrence fo reach user based on his/her own propensity of query submission. To model such personal propensity and influence ,wewillutilizeHawkes processes to capture the temporal information in different query se-quences.
One powerful tool in statistics for modeling event (query) s e-quence data is temporal point processes, which are widely us ed to describe data that are localized at a finite set of time points { t 1 ,...,t N } [27]. In a temporal point process, N ( t ) counts the number of events that has occurred up to and including time t ,and the conditional intensity function  X  ( t |H t ) denotes the expected in-finitesimal rate at which events occur at timestamp t depending on H ,thehistoryofeventspreceding t .Forclarity,hereafterweuse  X  to imply the dependence on H t ,i.e.,  X  ( t |H t ) will be denoted  X  ( t ) .

The Hawkes process is a class of self-or mutually-exciting p oint process models [14]. A univariate Hawkes process { N ( t ) } is de-fined by its intensity function where  X &gt; 0 is a base intensity,  X  is a kernel function capturing the positive influence of past events on the current value of the inten-sity process, which is the process X  X  self-exciting property that the occurrence of one event in the past will trigger events happening in the future. Such self-exciting property can either exists between every pair of events as assumed in a normal univariate Hawkes pro-cess, or only exists between limited pair of events. For instance, any query but the last one in a search task can imply an increas ed probability of future queries issued in the same search task ,since the user X  X  information need in this search task hasn X  X  been satisfied. Meanwhile, queries from different search tasks may rarely a ffect each other.

Since our definition of influence coincides with the self-exciting property of Hawkes process, we propose to identify the influence among queries by building one separate Hawkes process on eac h user X  X  query sequence. In the query sequence of user m ,weuse R m,n,n  X  to denote whether influence exists between the n -th and n -th query. If influence exists, we believe that the occurrence of n -th query has a time-decay effect on increasing the intensityat the timestamp of the occurrence of the n  X  -th query. Thus based on influence R m ,wemodelthequerysequenceissuedbyuser m with aunivariateHawkesprocess,whoseintensitycanbewritten as: Here the baseline intensity  X  m captures how often user m issues aqueryspontaneously 1 (i.e., not triggered by any other queries), while  X  m models the degree of influence between sequential queries issued by user m ,and  X  ( t  X  t m,l ) 2 captures the time-decay effect only.

Influence R can be estimated together with  X  and  X  by maxi-mizing the likelihood of the proposed Hawkes model on observ ed query sequence { T m = { t m,n }} .Theestimationof R is actually to identify query-pairs in which the occurrence of the later query most likely violates the normal query-submission propensi ty, and gets triggered by the earlier one. In other words, if influence exists between two queries, the corresponding temporal gap can be s ignif-icantly less than the average temporal gap of pairs of querie sinthe same query sequence (issued by the same user). Since the defin ition of influence suggests that queries linked by significant influence naturally form search tasks, a thresholding of R m,l,n  X  m with a small constant automatically results in search task p artition. The estimation of R consequently partitions observed query se-quences into search tasks.
Estimated by Hawkes processes, influence R captures the unique temporal pattern of each user X  X  query sequence. We use R to weight the query co-occurrence, which bridges the LDA model and Haw kes process through: that is to say, influence exists between these two queries if and only if the two queries share the same topic. Since queries in the s ame search task are linked by influence ,allqueriesinthesamesearch task share the same topic, which labels this search task as well.
Through our defined bridge between influence R and query-topic membership Y ,theHawkesprocessandtheLDAmodelmutu-ally benefit each other in identifying and labeling search ta sks. On the one hand, provided influence among queries, we obtain 0-1weightedqueryco-occurrenceofeachcandidatequery-pai rin observed query sequences, and generate topics accordingly .For instance, in Figure 2, although 8 pairs of queries (9 possibl ecom-binations with 8 unique query-pairs) co-occur in query sequ ences, only the co-occurrences of query-pairs  X  X ank of america X  X  X  wells
For simplicity, we assume this cascade-birth process is a homoge-neous Possion process with  X  m ( t )=  X  m .
Our paper uses the exponential kernel in experiments, i.e.,  X  (  X  t )=  X  e  X   X   X  t if  X  t  X  0 or 0 otherwise. However, the model development and inference is independent of kernel ch oice and extensions to other kernels such as power-law, Rayleigh ,non-parametric kernels are straightforward.
 Figure 2: A Toy Example of our LDA-Hawkes model. Blue line denotes the influence among queries. Green dash line shows th e label each query belongs to. fargo X  and  X  X xpedia X  X  X  X merican airline X  have positive wei ghts. These weighted query co-occurrences contain personal temp oral information, thus are expected to lead to improved topics co mpared with existing LDA-based methods [16, 32, 31] that used no wei ght scheme or only unifom standard weight scheme.

On the other hand, the estimation of influence R only based on temporal data { T m } can be intractable, since the exploration of the whole space of R is known to very costly ( 2 ! m N m possi-ble solutions). LDA-Hawkes further makes use of textual dat ato limit the output space of R to the most probable subspace, since topics learned by the LDA part in turn justify the influence exis-tence between each pair of queries. Two queries rarely co-oc cur can be clustered into different topics by the LDA part, based on such query-topic membership no influence exists between these two queries. For example, in the query sequence of user u b shown in Figure 2, the temporal gap between query-pair  X  X ank of ameri ca X  X   X  X ells fargo X  is larger than the temporal gap between query-pair  X  X ells fargo X  X  X  X acebook X . However, the pair of queries  X  X a nk of america X  X  X  X ells fargo X  also co-occurs in the query sequenc eof user u a ,while X  X ellsfargo X  X  X  X acebook X  X oesnot,whichinturn emphasizes that influence should exist between  X  X ank of america X  and  X  X ells fargo X  rather than between  X  X ells fargo X  and  X  X ac e-book X . To sum up, combined through influence ,Hawkesprocess and LDA reciprocally contribute to the search task identification and labeling.

Finally, we present our generative model that combines Hawk es process and LDA as follows: Figure 3: Graphical model representation of LDA-Hawkes and the variational distribution that approximates the likeli hood. The upper figure shows the graphical model representation of LDA-Hawkes, while the lower figure shows the variational dis-tribution that approximates the likelihood.
 Here V is the size of vocabulary. Note that in our LDA-Hawkes model, queries issued by one user share the same topic distri bu-tion, while words in one query belong to the same topic. The to pic membership of the n -th query of user m , Y m,n ,determinesnotonly the words the query owns, but also the timestamp of its occurr ence through Hawkes process  X  m (  X  ) .

Under our LDA-Hawkes model, the joint probability of data T = { N ables {  X  1: M ,Y } can be written as follows:
Despite that a tremendous amount of work on inference of topi c models have been published, none of them are designed to addr ess topic model combined with point processes. In this section, we derive a mean-field variational Bayesian inference algorithm for our proposed LDA-Hawkes model.
Under LDA-Hawkes model, given observations of both tempora l information T = { N m (  X  ) } = {{ t m,n } N m n =1 } and textual informa-tion W = {{ W m,n } N m n =1 } of query sequences, the log-likelihood for the complete data is given by log P ( T,W |  X ,  X  ,  X  ,  X  this true posterior is hard to infer directly, we turn to vari ational methods [6], whose main idea is to posit a distribution over the la-tent variables with variational parameters, and find the set tings of the parameters so as to make the distribution close to the tru epos-terior in Kullback-Leibler (KL) divergence. In Figure 3, th elower part shows the variational distribution that approximates the data likelihood. Our paper chooses to introduce a distribution o flatent variables q specified as the mean-field fully factorized family as follows: where q 1 is a Dirichlet, q 2 is a multinomial, and {  X  1: M are the set of variational parameters. We optimize those fre epa-rameters to tight the following lower bound L  X  for our likelihood: log p ( T,W |  X ,  X  ,  X  ,  X   X  )  X  E q [log p ( T,W,  X  1: M Isolating terms containing  X  in Eqn (3), we have as the partial likelihood on temporal data assuming query-t opic dis-tribution is known. On one hand, we have $ where K ( t )= $ k  X  m,l,k  X  m,n,k ,whichcanbeviewedasthelatentvariablethat approximates influence R .Ontheotherhand,inordertoupdate each Hawkes hyper-parameter  X  and  X  independently, we adopt the strategy in [34], and break down the log sum E q (log  X  ( t based on Jensen X  X  inequality as: where {  X  } is a set of branching variables constrained by:
Under a coordinate descent framework, we optimize the lower bound as in Eqn (3) against each variational latent variable the model hyper-parameter, including both LDA hyper-param eters and Hawkes hyper-parameters. For variational latent varia bles, we have the following process
Here we categorize branching variables  X  as variational latent variables.
We use a variational expectation-maximization (EM) algori thm [11] to compute the empirical Bayes estimates of the LDA hype r-parameters  X  and  X   X  in our LDA-Hawkes model. This variational EM algorithm optimizes the lower bound as in Eqn (3) instead o f the real likelihood, it iteratively approximates the poste rior by fit-ting the variational distribution q and optimizes the corresponding bound against the parameters.

In updating  X  ,weuseaNewton-Raphsonmethod,sincetheap-proximate maximum likelihood estimate of  X  doesn X  X  have a closed form solution. The Newton-Raphson method is conducted with a gradient and Hessian as follows: Similar update rules can be derived for  X   X  .

On the other hand, to obtain the approximate maximimum like-lihood estimation of Hawkes hyper-parameters, we optimize the lower bound as in Eqn (3) against each Hawkes hyper-paramete r, and update  X  and  X  independently with closed-form solutions as follows:
Our variation inference algorithm, named LDA-Hawkes, can b e interpreted intuitively in the following way. The label/to pic distri-bution  X  in each user X  X  query sequence is determined by both the topic prior and the topic assignment of each query. The word dis-tribution  X  in each topic is determined by both the word prior and the topic assignment of each word. The probability of a query n issued by user m belonging to topic k is jointly determined by: (a) Users X  label/topic distributions; (b) how queries are sema ntically clustered; (c) the influence from labels of queries in the pas ttothe label of the current query; and (d) the influence from the labe lof the current query to labels of queries in the future.

In our mean-field variation inference algorithm, the comput a-tional cost of inferring variational variables is O (( where  X  C is the average number of words in a query. The compu-tational cost of the estimation of LDA hyper-parameters is O ( K + V ) .ThecomputationalcostoftheestimationofHawkeshyper-parameters is O ( by controlling the number of influence candidate for each query. Most queries have only limited number of influence associated, since for each query, most of the rest queries are far from it, and there exist many other queries in between. Thus the total com puta-tional cost of our algorithm is O ((
We evaluated our LDA-Hawkes model on both synthetic and real-world data sets, and compared the performance with the fol-lowing baselines: Data Generation. Given parameters ( M, N, K,  X  ,  X   X  , X ,  X  ) ,the synthetic data is sampled according to the proposed generat ive model. We record the sampled values of Y ,andcalculatetheground-truth influence R for evaluating the accuracy of our prediction of in-fluence among queries. Notice  X  and  X  are both vectors of size M ,wheretheelements  X  m and  X  m are randomly generated in Vectors  X  and  X   X  are of size K and V respectively, where the el-ement  X  k and  X   X  v are generated in [0 . 5 X   X  , 1 . 5 X   X  ] and [0 . 5 respectively before the simulation.

Our synthetic data are simulated with two different setting s:
To test the robustness of our method, we add two types of noise to the original synthetic data: Event Noisy :Wegenerateadditional 10% of total number of queries randomly in the time window of each already sampled query sequence, and add them to the sequence; Intensity Noisy :Insteadofusing  X  ( t ) to simulate the query occurrence at time t ,weuseanoisyvalue  X   X  ( t ) ,whichisobtained by adding Guassian noise on  X  ( t ) : The default value of  X  is set to be 1.
 Inference and Estimation. Table 1 evaluates both training like-lihood, and the accuracy of our proposed variational infere nce al-gorithm in parameter estimation and latent variable inference on the synthetic data. We can find that, on the small synthetic da ta, LDA-Hawkes can recover the Hawkes parameters  X  and  X  very well, which represent users X  personal temporal patterns of query submission. Meanwhile, based on the inferred query-topic m em-bership  X  Y ,wepredictthe influence  X  R among queries, and compare with the ground-truth influence R to evaluate the accuracy of our influence prediction through:
Proc R = Results in Table 1 show that LDA-Hawkes can accurately predi ct influence .Wealsofindaninterestingphenomenonthattheaccu-racy of our estimated Hawkes parameters and the accuracy of o ur predicted influence are highly correlated, since given different pre-dicted influence  X  R ,theoptimalparameters  X  and  X  that maximize the likelihood of Hawkes processes on a query sequence can be very different. On the large synthetic data, LDA-Hawkes X  X  p erfor-mance on parameter estimation becomes worse, while the accu racy of influence prediction also decreases. Due to the shapely increased data size, the combination of textual and temporal informat ion be-comes more complicated, which makes influence prediction more difficult, and further affects the learning of users X  person al tempo-ral patterns. On both noisy data sets, LDA-Hawkes X  X  perform ances in both inference and estimation become worse.
We also conducted extensive experiments on two real-world d ata sets. The first data set is adapted from the query log of AOL search engine [4]. The entire collection consists of 19.4 million search queries from about 650,000 users over a 3-month period. We cl eaned the data by removing the duplicated queries which were submit-ted consecutively within 1 minute. We randomly selected a su b-set of users who submitted over 1,000 queries during this period, and collected their corresponding search activities, incl uding the anonymized user ID, query string, timestamp, the clicked URL. As aresult,wecollected1,786userswith2.2millionqueries, and their activities span from 18 days to 3 months. The second data set i s collected from Yahoo search engine, from Jan 2013 to Septemb er 2013. Similarly, we cleaned the data and randomly selected a sub-set of users who submitted over 3,000 queries during this period. As a result, we collected 1,475 users with 1.9 million querie s, and their activities span from 54 days to 9 months.
 Model Fitness. Table 2 shows the log predictive likelihood on events falling in the final 10% of the total time of query data. To avoid overfitting issues, we adopt a k-fold cross validation strategy, and select the optimal number of topics K .AccordingtoTable 2, LDA-Hawkes fits both synthetic and real-world data better than TW and Word-Related. This illustrates that a Hawkes process can better utilize the temporal information in benefiting LDA X  X  learning of textual data than simply considering the co-occurrence o fqueries within a time session or queries sharing at least one same wor d. The larger a time-window TW uses, the worse its performance w ill be. Time-window based LDA models generally perform better than Figure 4: Q-Q plot of the predictive query sequence simu-lated with inferred Hawkes parameters versus the real query sequence.
 Word-Related. Word-Related performs the worst, which illu strates that using lexicon-similarity only is far from enough for gr ouping semantically related queries. On both noisy data sets, the p erfor-mances of all models become worse. However, the decrease of the performance of LDA-Hawkes is smaller than that of TW and Word-Related, which demonstrates the robustness of our pro posed model.

In addition, another experiment is conducted to study how we ll the proposed model can fit the temporal data of query logs. Fig -ure 4 shows the Q-Q plot of the predictive query sequences bas ed on Hawkes parameters inferred from AOL versus the real query se-quences in AOL .Ifthedistributionofthetimestampsofthepredic-tive query sequences and that of the real query sequences are sim-ilar, the points in the Q-Q plot will approximately lie aroun dthe diagonal. If these two distributions are linearly related, the points in the Q-Q plot will approximately lie on a line, but not neces sarily on the diagonal. From Figure 4, we can find that LDA-Hawkes fits the temporal data of real-world query logs very well.
 Query clustering. Along with search task identification, the pro-posed model simultaneously clusters queries into topics, and au-tomatically labels identified search tasks. According to ou rdefini-tion of search tasks, the performance of their identificatio ndepends heavily on the accuracy of per-query topic prediction. More over, whether our identified search tasks are labeled appropriate ly de-pends on how well our inferred topics match real-world seman tic concepts. Thus the performance of identifying and labeling search tasks mainly depends on how we cluster query words into diffe r-ent topics. In this series of experiments, we evaluate the quality of obtained query clusters/topics, which depends on their purity, or semantic coherence. Since no ground truth about the corre ct composition of a topic is available, we assess purity by the a verage similarity of each pair of queries within the same topic as: where N k is the number of queries in topic k .

We evaluate the query similarity based on their categorical labels from the Open Directory Project (ODP) 4 ,whichhasbeenwidely used to measure the semantic relations between queries [5, 1 2]. The ODP , also known as DMOZ, is a human-edited directory of more than 4 million URLs. These URLs belong to over 590,000 cate-gories organized in a tree-structured taxonomy where more g eneral topics are located at higher levels. Users can issue queries in ODP and use the returned categories to categorize those queries .Forin-stance, the URL {tech.groups.yahoo.com/group/amrc-l/} b elongs http://www.dmoz.org/ $ to Top/Arts/Animation/Anime/Clubs_and_Organizations, while the URL {http://valleyofazure.tripod.com/} belongs to anoth er direc-tory Top/Arts/Animation/Anime/Characters. Hence, to mea sure how related these two queries are, we can use a notion of similari ty be-tween the corresponding categories provided by ODP. In particular, we measure the similarity between category C i of query q egory C j of query q j as the length of their longest common prefix P ( C i ,C j ) divided by the length of the longest path between C and C j .Moreprecisely,wedefinethissimilarityas: ODP Similarity where | C | denotes the length of a path. For instance, the similar-ity between the two queries above is 3/5 since they share the p ath  X  X op/Arts/Animation X  and the longest one is made of five dire cto-ries. We evaluate the similarity between two queries by meas ur-ing the similarity between the most similar categories of th etwo queries, among the top 5 answers provided by ODP.

Figure 5 compares the purity of topics detected by LDA-Hawke s, alternative probabilistic models, and state-of-the-art q uery cluster-ing approaches on AOL and Yahoo data sets. We can find that LDA-Hawkes outperforms all compared approaches. It improv es over the second best method by up to 10% . Gate and TW(5 min) take the second place, both of them are slightly better t han Session-Similarity and TW(1 hr), which again demonstrates that a small time window better benefits the LDA model in de-tecting semantically related queries. Word-Related perfo rms sig-nificantly worse than other methods, which shows that consid er-ing only the co-occurrence of queries sharing words is very l im-ited. Meanwhile, we find that compared with TW, LDA-Hawkes, Session-Similarity ,and Gate perform relatively better on Yahoo data set, which implies that LDA-Hawkes works for vari ous real-world query logs. Notice that the absolute value of top ic pu-rity is not very high, since the ODP categories are fine-grain ed, the categories of queries from the same search task are very like ly to be different, but share paths, i.e., have common prefix. Search Task Identification. To justify the effectiveness of the pro-posed model in identifying search tasks in query logs, we emp loy apublicAOLdatasubset 5 with 554 annotated search tasks. This http://miles.isti.cnr.it/ tolomei/?page_id=36. Figure 5: Query Clustering measured by Topic Purity. This metric relies on ODP Similarity to evaluate the pairwise sim i-larity between queries. Figure 6: Performance Comparison of Search Task Identifica-tion measured by F 1 Score. subset contains 13 users with around 110 queries per user. We also recruit eight editors to annotate 1150 search tasks in a rand omly chosen subset from the Yahoo data, which contains 100 users w ith around 50 queries per user. We measure the performance by a widely used evaluation metric, F 1 score where p pair denotes the percentage of query-pairs in our predicted search tasks that also appear in the same ground-truth task, while r pair denotes the percentage of query-pairs in the ground-truth tasks that also appear in the same predicted task.
Figure 6 compares the proposed model with alternative prob-abilistic models and state-of-the-art search task identifi cation ap-proaches by F 1 score. Here among TW models with various time-window sizes, we only include the "5 min" sized Time-Window i n comparison, since it performs the best in both model fitness a nd query clustering. From Figure 6, we find that LDA-Hawkes per-forms the best among all compared approaches, and outperfor ms the second best approach by over 5%. Furthermore, LDA-Hawke s outperforms baselines in terms of both accuracy and recall. TW and Word-Related perform the worst since their assumptions on q uery-relationship within the same search task are too strong. Mor eover, LDA-Hawkes X  X  advantage over Bestlink-SVM and Reg-Classifier illustrates that employing self-exciting point processes like Hawkes to utilize the temporal information in query logs can be a bet ter choice than incorporating temporal information in feature s. The ad-vantage over QC-HTC and QC-WCC demonstrates that appropria te usage of temporal information in query logs can even better r eflect the semantic relationship between queries, rather than exp loiting it in some collaborative knowledge. The advantage of the per for-mance of LDA-Hawkes over other baselines on Yahoo query log is greater than that on AOL. One possible reason is that the aver age length of search tasks in Yahoo is larger than that in AOL, whi ch results in more influence occurrences, and enables LDA-Hawk es to better learn the temporal patterns of users.
 Case Study of Identified Search Tasks. In this part, we try to show a few examples that LDA-Hawkes identify and label searc h tasks in Yahoo query log, so as to illustrate the validity of o ur iden-tified search tasks and their labeling. From Figure 7, we can fi nd that both the word co-occurrence and temporal gap play a impo rtant role in predicting influence among sequential queries. Although chances are very small that queries  X  X ircract carrier X  and  X  X ircraft carrier X  will co-occur, we predict an influence between them, since they are temporally close. On the other hand, query-pair  X  X i bet X  and  X  X yukyu islands X , and query-pair  X  X ircraft carrier X  an d X  X attle-ships us X  are not consecutive, however, we predict that influence exist between those pairs of queries, as they co-occur in qui te a few number of users X  query sequences. Thus we may conclude that the existence of influence demands both temporal and sematic closeness. Queries linked by influence belong to the same search task since the user X  X  information need is not satisfied by the former query, which makes the user additionally issue the later sem anti-cally related query, whose occurrence violates that user X  X  regular query submission propensity. The figure also shows that LDA-Hawkes is able to assign the same label to different search ta sks which are semantically related, despite that the temporal g ap be-tween them are very long.
Search query logs have been extensively studied to improve t he search relevance and provide better user experience. There has been a large body of work focused on the problem of identifyin g search tasks or sessions from sequences of queries. Many of t hese methods use the idea of a  X  X imeout X  cutoff between queries, w here two consecutive queries are considered as two different ses sions or tasks if the time interval between them exceeds a certain thr eshold. Often a 30-minute timeout is used to segment sessions [9, 22, 30]. In addition, other timeout thresholds have been proposed, from 1 to 120 minutes [15, 18, 23]. However, the experimental resul ts of these methods indicate that the timeouts, whatever their le ngths, are of limited utility in predicting whether two queries belong to the same task, and unsuitable for identifying session bound aries. Beyond that, Wang et al. [30] and Hua et al. [17] treated the ti me intervals between queries as pairwise features in their mod els. But Figure 7: Case Study: Purple arrow line denotes the influ-ence identified by the proposed model, rounded rectangle de-notes the identified search tasks, rectangle denotes the lab els our model assigns to search tasks. no previous work has explicitly exploited the temporal info rma-tion directly in their models. In our work, we directly integ rate the temporal information into our model, rather than highly rel ying on different timeouts, for identifying search tasks.

There have been attempts to extract in-session tasks [28, 18 ,23], and cross-session tasks [18, 19, 1, 30] from query sequences based on classification and clustering methods. Jones and Klinkne r[18] proposed to learn a binary classifier to detect whether two qu eries belong to the same task or not, which organized and segmented query sequences into hierarchical units. Moreover, Kotov e tal.[19] and Agichtein et al. [1] studied the problem of cross-sessio ntask extraction via binary same-task classification, and found d ifferent types of tasks demonstrate different life spans. Another suitable mechanism for identifying sessions or tasks may rely on unsuper-vised learning approaches, i.e., query clustering algorithms, espe-cially when no labeled training set is available. The intuit ion for us-ing query clustering is based on the assumption that if two qu eries belong to the same cluster, then they are topically related. Cao et al. [9] proposed a clustering algorithm for summarizing q ueries into concepts throughout a click-through bipartite graph b uilt from asearchlog.Luccheseetal.[23,24]andHuaetal.[17]explo ited the knowledge base for detecting semantically related quer ypairs that are not similar from a lexical content point of view. In a ddition, Wang et al. [30] proposed a semi-supervised clustering meth od for identifying cross-session tasks. Different from these exi sting meth-ods, our paper assumes that queries belonging to the same sea rch task are linked by influence. Moreover, instead of focusing o n the query sequence of each single user, we take into account t he query sequences issued by different users simultaneously i nauni-fied framework, such that our model can identify and label coh erent search tasks across users.

Our proposed model is closely related to point processes, wh ich have been used to model social networks [8] and natural event s[37]. People find self-exciting point processes naturally suitab le to model continuous-time events where the occurrence of one event ca naf-fect the likelihood of subsequent events in the future. One i mpor-tant self-exciting process is Hawkes process, which is first used to analyze earthquakes [25, 37], and then widely applied to man ydif-ferent areas, such as market modeling [13, 3], crime modelin g[29], terrorist [26], conflict [35, 21], and viral videos on the Web [10]. AnovelHawkesmodelwasalsoproposedtomodelbothtemporal and textual information in viral [34]. To solve such models, an EM algorithm is generally adopted to estimate the maximum like lihood of Hawkes process [20].
In this paper, we have presented a probabilistic model to int e-grate the LDA model with Hawkes processes for identifying an dla-beling search tasks. Basically, Hawkes processes utilize their self-exciting properties to identify search tasks if influence ex ists among asequenceofqueriesforindividualusers,whiletheLDAmod el exploits query co-occurrence across different users to dis cover the latent information needed for labeling search tasks. By lev erag-ing the temporally weighted query co-occurrence, our model not only guarantees sound performance by making full use of both tex-tual and temporal information of the entire query sequences ,but also enables the labeling of the identified search tasks sinc eseman-tically related queries are clustered together through que ry links determined by co-occurrence. We have applied the proposed L DA-Hawkes model to analyze search tasks on both AOL and Yahoo query logs, and compare with several alternative approaches. Ex-perimental results show that the improvements of our proposed model are consistent, and our LDA-Hawkes model achieves the best performance. In future work, it would be interesting to con-sider other information, e.g., click-through data, into th is frame-work, and investigate the performance of LDA-Hawkes in othe r domains.
This work is supported in part by NSF grant IIS-1116886, NIH grant R01 GM108341 and NSFC grant NSFC-61129001/F010403.
