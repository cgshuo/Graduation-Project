 1. Introduction XML retrieval approaches can be classified into three categories (Goevert and Kazai 2003): approaches that extend well-known full-text information retrieval (IR) systems to han-dle XML retrieval; approaches that extend database management systems to deal with XML data; and XML-specific approaches that incorporate XML standards, such as XPath (Berglund et al. 2004), XSL (Adler et al. 2001) or XQuery (Boag et al. 2004), to handle both XML and full-text search. For the purpose of exploring the nature of XML-IR, we propose in this paper a hybrid approach to XML retrieval that combines text information retrieval features with XML-specific features found in a native XML database.
 In this paper we focus on content-only (CO) XML retrieval topics as part of INEX, 1 the INitiative for the Evaluation of XML Retrieval. These topics do not explicitly refer to the underlying document structure and are usually represented by queries constituting a combi-nation of words and phrases. The major retrieval challenge for the CO topics is identifying document components considered r elevant to a user information need and determining their 572 PEHCEVSKI, THOM AND VERCOUSTRE appropriate level of answer granularity (which corresponds to the types of XML document components that are to be returned as answers, or to the preferable units of retrieval ).
In order to understand which types of document components users consider to be most useful as answers, we analyse in Section 2 the INEX 2003 relevance assessments for the CO topics. In the context of INEX, a full article represents a whole document, while an XML element within an article represents a document component. Arising from our analysis we identify many cases where, for a particular CO topic and an article, several layers of all been assessed as highly relevant, an issue previously referred to as  X  X verpopulated and v arying recall base X  (Kazai et al. 2004). This contradicts the structured document retrieval principle outlined in the FERMI multimedia retrieval model; the principle states that  X  X he retrieval process, in the context of large amounts of structured information, has to focus investigate two complementary cases of modified relevance assessments: one when the relevance assessments only consider the most specific highly relevant elements within an article ( Specific relevance assessments), and another when the relevance assessments only consider the most general highly relevant elements within an article ( General relevance assessments). In the absence of more realistic user models for XML retrieval, the former case is a close approximation of the FERMI retrieval principle and reflects users that prefer specific, more focused answers for their queries, whereas the latter case models users that prefer compound and more informative answers for their queries.

An analysis of the CO topics using the General relevance assessments identifies two cat-e gories of topics: topics where the assessor prefers full articles over more specific elements ( Broad topics), and topics where the assessor prefers more specific elements within articles ove r full articles ( Narrow topics).

Different retrieval scenarios (using General or Specific relevance assessments and Broad or Narrow topics) are likely to impact the relative retrieval effectiveness of different XML retrieval systems. In Section 3 we consider three systems, based on a full-text information retrieval approach, a native XML database approach, and a hybrid approach, respectively.
In the General relevance assessment case, we investigate whether a full-text information retrieval system is capable of retrieving full articles as highly relevant answers. Our choice for a full-text information retrieval system is Zettair 2 (formerly know as Lucy), a compact and fast full-text search engine designed and written by the Search Engine Group at RMIT University. Zettair implements an inverted index structure, a well-researched search struc-ture implemented in many existing full-text information retrieval systems (Witten et al. 1999). However, in its current implementation Zettair X  X  primary unit of retrieval is a full article, and is not capable of indexing and retrieving more specific elements within articles.
In the Specific relevance assessment case, we investigate whether an XML-specific re-trieval system is capable of retrieving the most specific elements as highly relevant answers. Our choice for an XML-specific retrieval system is eXist, 3 an open-source native XML database. eXist incorporates most of the basic as well as advanced native XML database features, such as full and partial keyword text searches, search patterns based on regular ex-pressions, and keyword proximity functions. Two notable features are efficient index-based query processing and XPath extensions for full-text search (Meier 2003). However, eXist, HYBRID XML RETRIEVAL 573 like most native XML database implementations, does not consider ranking of the elements in the resulting answer list.

In order to combine the best retrieval features from the above systems, we propose a hybrid XML retrieval system. We observe some issues in the native XML database com-ponent of our hybrid system that have a strong impact on its retrieval effectiveness. We therefore develop and implement a novel retrieval module that, for a CO topic, utilises the information contained in the answer list of a native XML database and identifies, ranks and retrieves Coherent Retrieval Elements ( CRE ) . We regard the Coherent Retrieval elements as preferable units of retrieval for INEX CO topics, since the results of our experiments show that the CRE module is capable of retrieving both highly relevant articles and elements within articles at an appropriate level of retrieval granularity.

Our results in Section 4 show that, given the various possible combinations of XML retrieval scenarios (such as different cases of assessments, topic categories and choices of evaluation metrics), the XML retrieval systems subject to our analysis exhibit varying retrieval behaviour. Although further tuning of individual system parameters may improve retrieval performance, we also show that, in the case of INEX 2003 relevance assessments for the CO topics, our newly developed Hybrid-CRE system yields robust and effective content-oriented XML retrieval.

Some existing XML retrieval systems have similarities to the approaches presented in this paper. We review these systems in Section 5, where we also provide a comparison to other analysis of the INEX 2003 CO topics and relevance assessments. 2. Analysis of INEX 2003 CO topics and relevance assessments INEX provides a means to evaluate the effectiveness of different XML retrieval systems. The XML document collection used in INEX comprises 12107 IEEE Computer Society articles published in the period between 1997 X 2002 with approximately 500 MB of data. Each year (starting in 2002) a new set of ad-hoc XML retrieval topics are introduced and assessed by the participants. In 2003, in the light of the experience of the 2002 INEX workshop, revised relevance dimensions, e xhaustivity (how many aspects of the topic are covered in the element) and specificity (how specific to the topic is the element), were introduced to assess the relevance of articles and elements within articles to these topics.

Tw o types of XML retrieval topics are explored in INEX: content-only (CO) topics and content-and-structure (CAS) topics. A CAS topic enforces restrictions with respect to the e xisting document structure and explicitly specifies the type of the unit of retrieval (section, paragraph, or other), whereas a CO topic has no such restriction on the elements retrieved. In this paper we focus on improving XML retrieval for CO topics. 2.1. An INEX CO topic example T able 1 shows INEX topic 117, which was proposed by our group. This topic calls for articles or elements within articles focusing on algorithms that use Patricia tries for text search. As indicated in the topic narrative, an article or an element within article is considered relevant 574 PEHCEVSKI, THOM AND VERCOUSTRE if it describes the standard algorithm, its optimised implementation, or discusses its usage in information retrieval applications.

This particular topic raises some interesting issues for retrieval, such as:  X  P atricia (usually) represents a person X  X  first name, rather than a data structure;  X  tries is a verbal form; and  X  X  ey w ords like text , string , and search appear almost everywhere in the INEX XML document collection. 2.2. CO topics relevance assessments analysis The idea behind our analysis of INEX 2003 CO relevance assessments stems from the challenge of XML content-only retrieval: since a CO topic does not restrict the answer elements, the final answer list may contain elements of different types with varying sizes and granularity. We observed that full articles may represent preferable answers for some topics, while for other topics more specific elements within articles may be preferable ove r full articles. Whether smaller (more specific) or larger (more general) elements are preferred depends, to some extent, on the inclinations of the author-come-assessor of HYBRID XML RETRIEVAL 575 a particular topic as to which elements constitute the best answers to the information need. This may be apparent from the wording of the topic, especially the narrative.
By analysing the relevance assessments for the CO topics, we aim to understand what users (that is, the topic authors who later assess the returned answer elements) consider to be the most useful.

T able 2 shows an extract of an INEX 2003 CO relevance assessment. The two INEX relevance dimensions, exhaustivity 4 and specificity, 5 are applied to an article and elements within an article for the purpose of assessing their relevance to the CO topic.
The focus of our analysis is on highly relevant elements, which in our example are the elements with the value of 3 both for (E)xhaustiveness (the element covers  X  X ost 576 PEHCEVSKI, THOM AND VERCOUSTRE element) (Kazai et al. 2004). As shown in the example, there are 15 such elements in this particular article, including the article itself. These elements therefore constitute answer elements that are considered by the assessor as the most preferable retrieval elements, even though there is a substantial amount of overlap between them. We can, however, identify two complementary types of highly relevant elements: General and Specific. Unlike the definitions for the S and E relevance dimensions that are provided by INEX, we define these types of highly relevant elements as a result of our analysis as follows.
Fo ra particular article in the collection, a General element is a least-specific highly relevant element containing other highly relevant elements. In our example, article[1] is a General element, since it is itself a highly relevant element, it contains all the other highly relevant elements, and it is the least specific among them. An article may contain several General elements if the article as a whole is not highly relevant. Figure 1 shows a tree representation of all the highly relevant elements shown in Table 2. The General element is the element shown in the ellipse.

Fo ra particular article in the collection, a Specific element is a most-specific highly relevant element contained by other highly relevant elements. In Figure 1, the Specific elements are the elements shown in triangle boxes. Each of these elements is the most specific element among all the other highly relevant elements that contain it.

When there is only one highly relevant element in an article, that element is both a General and a Specific element.
 INEX 2003 introduces 36 CO topics in total, with topic numbers between 91 and 126. We use the current version (2.5) of the INEX 2003 relevance assessments in our analysis. To date, no relevance assessments have been provided for topics 105, 106, 114 and 120. Moreover, topics 92, 100, 102, 118 and 121 do not contain highly relevant articles or elements within articles. Consequently, a total of 27 CO topics are used in our analysis. HYBRID XML RETRIEVAL 577
Figure 2 shows the distribution of the most frequent highly relevant elements within articles (including full articles) across all CO topics. The figure shows three distinct cases when the relevance assessments consider all highly relevant elements ( Original relevance assessments), General highly relevant elements only ( General relevance assessments), and Specific highly relevant elements only ( Specific relevance assessments), respectively. The x-axis contains the names of the eight most frequent highly relevant elements in the case of Original relevance assessments. The names of the elements correspond as follows: &lt;arti-ments. The y-axis contains the number of times each element occurs across the 27 CO topics.
 elements occur most frequently, with 311 and 308 occurrences, respectively. Perhaps sur-prisingly, the &lt;article&gt; and &lt;bdy&gt; elements are the next most frequent, with 176 and 171 occurrences. The latter suggests that in most cases when a &lt;bdy&gt; element is assessed as highly relevant, the corresponding &lt;article&gt; element is also assessed as highly relevant. This raises a question whether retrieving &lt;bdy&gt; elements make sense, since for these cases the retrieval of &lt;article&gt; elements will equally satisfy the information need. As shown in figure 2, the next most frequent element is &lt;ss1&gt; with 150 occurrences, followed by 70 and below for the remaining elements. 578 PEHCEVSKI, THOM AND VERCOUSTRE
In the case of General relevance assessments, the situation changes in favour of least &lt;ss1&gt; elements follow next with numbers significantly lower compared to the previous case (126, 78 and 57, respectively). By looking at the number of &lt;bdy&gt; elements in this case, we notice that there are at least 37 cases, across all CO topics, when a &lt;bdy&gt; element is assessed highly relevant without a corresponding &lt;article&gt; element being assessed highly relevant too.

The last case shown on figure 2 is the case of Specific relevance assessments. In this case, as expected, the situation changes in favour of the most specific elements, with &lt;p&gt; element being most frequent. The &lt;sec&gt; and &lt;ss1&gt; elements come next, followed by 77 occurrences of a &lt;bdy&gt; element. The latter observation suggests that there are situations where either highly relevant.

The above statistics provide an interesting insight of what might happen when the retrieval performance of an XML retrieval system is evaluated against three distinct cases of relevance assessments. For instance, given the above knowledge of full articles being the most frequent highly relevant elements, one could expect that a full-text information retrieval system w ould be sufficient for satisfying users X  information needs in the case of General relevance assessments. Conversely, in the case of Specific relevance assessments, an XML retrieval system capable of retrieving the most specific highly relevant elements within articles, such as a native XML database, should also be more than sufficient. The results of our experiments in Section 4 confirm the above expectations. Moreover, we show that our hybrid system, which combines the best retrieval features from these two systems, can equally apply to either of the previously discussed assessment cases and is also capable of retrieving highly relevant document components. 2.3. CO topic categories In the following analysis we consider the case of General relevance assessments. Our elements from those that mostly retrieve other, more specific elements within articles. Consider the graph shown on figure 3. The x -axis shows the number of General highly relevant &lt;article&gt; elements, while the y -axis shows the number of General highly relevant elements other than &lt;article&gt; contained by a CO topic. A point on the graph therefore represents a particular CO topic. For example, the CO topic depicted at coordinates (20, 5) contains 20 highly relevant &lt;article&gt; elements and 5 highly relevant elements other than articles.
 We use this graph to identify two different categories of CO retrieval topics.

The first category of topics, shown as full circles on the graph and located below the dashed line, favour full article elements as highly relevant answers. There are 11 such topics (numbers 94, 95, 96, 97, 98, 107, 108, 110, 111, 115 and 122). We refer to topics in this category as Broad topics.

The second category of topics, shown as full triangles on the graph, favour elements other than full articles as highly relevant answers. We refer to topics in this category as Narrow HYBRID XML RETRIEVAL 579 topics. Note that the CO topic marked as x is neutral, since the numbers for both types of General highly relevant elements are the same.

The above topic categorisation cannot easily be derived in the other two assessment cases, that is, in the case of either the Original or the Specific relevance assessments. Indeed, due to the problem of overpopulated recall base the former case results in a situation where most CO topics contain far more specific highly relevant elements than highly relevant articles. The latter case is also not capable of identifying the above topic categories, because of the very low number of highly relevant articles (30 across all CO topics). We believe that, given the various possible models of expected user behaviour, it is of great importance to recognise the different categories of CO retrieval topics that may exist for an XML document collection, since it is reasonable to expect varying performance of an XML retrieval system for either of the categories. Indeed, the latter has been experimentally shown to be a valid assumption for a fragment-based XML retrieval system (Hatano et al. 2004). We examine the above assumption in greater detail in Section 4.2, where we also compare the behaviour of different XML retrieval systems. 3. XML retrieval approaches Most full-text information retrieval systems do not incorporate information about docu-ment structure. Queries sent to such systems usually represent a bag of words, optionally 580 PEHCEVSKI, THOM AND VERCOUSTRE including phrases or logical query operators. The final answers are usually whole doc-uments, presented in a descending order according to an estimate of their likelihood of relevance to the information need represented by the query.

A native XML database provides strong support for storing and querying XML docu-ments. The information about the document structure is usually incorporated in the index structures, allowing users to query both by document content and by document structure. Accordingly, elements belonging to particular articles can easily be identified, either by the order they appear in the article or by certain keywords they contain.

To utilise the best retrieval features from both systems, we develop a hybrid XML retrieval system combining a full-text information retrieval system and a native XML database.
The following sections explore the three retrieval approaches in detail. We also identify and discuss some open issues that arise when a particular approach is applied to XML retrieval. 3.1. A full-text information retrieval approach W ith a full-text information retrieval approach using Zettair, the INEX XML document collection is first indexed by using an efficient inverted index structure. Since Zettair stores the term postings file in a compressed form on disk, the size of the index takes roughly 26% of the total collection size. Indexing the entire INEX collection on a system with Pentium 4 (2.66 GHz processor) and 512 MB RAM memory running Mandrake Linux 9.1 takes around 70 seconds.

We use a topic translation module to automatically translate each INEX CO topic into a Zettair query. For INEX CO topics, terms that appear in the &lt;Keywords&gt; part are used to formulate the queries. Up to 1500 &lt;article&gt; elements are then returned in the de-scending order according to their estimated likelihood of relevance. Accordingly, for a particular CO topic the above list of ranked articles represents Zettair X  X  resulting answer list.

When retrieving documents of varying lengths, the pivoted cosine document length nor-malisation scheme (Singhal et al. 1996) is shown to yield high retrieval effectiveness. The pivoted cosine normalisation can be trained on the same collection by using a different set of retrieval topics in order to identify the optimal slope parameter. Since the pivoted cosine similarity ranking formula is implemented in Zettair, we decided to train the pivoted co-sine normalisation on the INEX document collection by using the INEX 2002 CO retrieval topics. The INEX 2002 CO topics and their corresponding assessments were consequently translated from INEX 2002 to INEX 2003 format.

The graph in figure 4 shows the results of the pivoted cosine normalisation training process. We use the strict quantization function in the inex eval ev aluation metric in our experiments (Goevert and Kazai 2003). Numbers in the graph represent mean average precision values over 100 recall points across all INEX 2002 CO topics, when (up to) 1500 Zettair answers per CO topic are considered. The graph shows that a slope parameter with a value of 0.55 yields highest average precision value (0.0840). We therefore use the above value for the slope parameter in the Zettair pivoted cosine ranking formula for our e xperiments on the INEX 2003 CO topics.
 HYBRID XML RETRIEVAL 581 3.2. A native XML database approach Using a native XML database approach, the INEX XML document collection is first indexed by eXist. Since the parsed document elements need also be stored in the index alongside the information for all the element, attribute and word occurrences, the size of the index roughly doubles the total collection size. Indexing the entire INEX collection on a system with Pentium 4 (2.6 GHz processor) and 512 MB RAM memory running Mandrake Linux 9.1 takes around 2050 seconds.

We use a topic translation module to automatically translate each INEX CO topic into two eXist queries: AND and OR. The &amp; = and |= eXist operators were used while for-mulating the above queries, respectively. For INEX CO topics, the terms that appear in the &lt;Keywords&gt; part are used to formulate eXist queries. The AND answer list (that is, the answer list after using the AND query) constitutes elements containing all the query words or phrases; similarly, the OR answer list constitutes elements containing any of the query w ords or phrases. However, because of the strict query conditions the AND answer list for most CO topics is likely to represent an empty list. In fact, we have observed that all but 5 CO topics have empty AND answer lists.

The resulting answer list for a CO topic comprises elements from the AND answer list followed by the elements from the OR answer list that do not belong to the AND 582 PEHCEVSKI, THOM AND VERCOUSTRE answer list. If an AND answer list is empty, the resulting answer list is the same as the OR answer list. In either case it contains up to 1500 more specific elements within articles for each CO topic. A sample of the resulting list of eXist matching elements is shown in T able 3.

Despite numerous XML-specific retrieval advantages, we observe two serious issues with using eXist, which are related to the XML retrieval process. 1. For a particular article in the answer list, eXist presents the final list of matching elements 2. The matching elements that belong to a particular article in eXist X  X  answer list represent HYBRID XML RETRIEVAL 583
The following sections describe our approaches in addressing both these issues. 3.3. A hybrid XML retrieval approach Figure 5 shows that our hybrid approach is similar to the native XML database approach, e xcept that we first use Zettair to obtain up to 1500 articles likely to be considered relevant to the information need represented by the topic (that is, represented by the translated Zettair query). These articles are ranked in the descending order of their estimated likelihood of relevance. For each article in the list, we use eXist to apply both queries, AND and OR, and produce matching elements in two corresponding answer lists. Each answer list therefore comprises matching elements that belong to a particular article in the list of 584 PEHCEVSKI, THOM AND VERCOUSTRE articles returned by Zettair. Accordingly, for each CO topic and a particular article, the final answer list for an article comprises matching elements from the AND answer list followed by the matching elements from the OR answer list that do not belong to the AND answer list. The resulting answer list for each CO topic therefore comprises up to 1500 matching elements taken from answer lists that belong to articles that appear highest in the ranked list of articles returned by Zettair. The resulting answer list is shown as Hybrid list in figure 5.

The hybrid XML retrieval approach addresses the first retrieval problem observed in a native XML database approach. However, since our hybrid XML retrieval system uses eXist to produce its resulting answer list, the second problem still remains open. This raises an interesting question: is there a way of determining which resulting elements are likely to represent preferable units of retrieval?
The following section describes one possible approach to providing an answer to this question. 3.4. Ranking the native XML database output In order to effectively utilise the information contained in the resulting list of matching elements returned by eXist, we have developed a retrieval module that ranks the final answer elements. Since our module represents a post-processing module, it can equally be applied to both retrieval approaches (native XML database and hybrid). Moreover, it can easily be applied to any native XML database that preserves the list of its matching elements in article order.
 W ithin a particular article in the resulting answer list, we define a Coherent Retrieval Element ( CRE )a sa n element that contains at least two matching elements, two other Coherent Retrieval Elements or a combination of a matching element and a Coherent Retrieval Element. In either case, the containing elements of a Coherent Retrieval Element should constitute either its different children or each different child X  X  descendants. There is one specific case, however. If an answer list contains only one element, the CRE algorithm produces the same result: the matching element. This stems from the fact that there is no supporting information that will justify the choice for the ancestors of the matching element to be regarded as CREs.

Consider the eXist answer list shown in Table 3. The list shows eXist X  X  matching elements after the OR operator is used (which means each element in the list contains any combination of keywords specified in the query). Although the example shows a retrieval case when an matching elements in the answer list are presented in article order.

Figure 6 shows a tree representation of the above list. The eXist matching elements are presented in triangle boxes, while the CREs are presented in square boxes. The figure also shows elements that are neither matching elements nor CREs.

By comparing the CREs shown in figure 6 and the General and Specific (highly relevant) elements shown in figure 1 in Section 2, we observe that there are many cases where some matching elements represent Specific elements, while there is one CRE representing a HYBRID XML RETRIEVAL 585 General element. For example, the article[1] element represents both a General element and a CRE, and there are eight matching elements that represent Specific elements. Also, a reasonable assumption about the rest of the CRE X  X  shown in square boxes in figure 6 would be that they could represent preferable units of retrieval for the CO retrieval topics. We v alidate this assumption in the next section.

Once the CREs have been identified, we still need to find a way to r ank and present them according to their estimated likelihood of relevance. We use a combination of the following XML-specific heuristics in order to determine the final rank of a CRE: 1. the number of times a CRE appears in each matching element X  X  absolute path in the 2. the length of the CRE X  X  absolute path, taken from the root element X  X onger path ( P )or 3. the ordering of the XPath sequence in the CRE X  X  absolute path X  X earer to beginning ( B )
There are eight distinct cases of heuristic combinations that can be explored in order to determine the final rank of a CRE, provided the ordering of the heuristics is preserved as above. However, we also expect that a reordering of the above heuristics could determine different CRE X  X  ranks. We therefore analyse all possible CRE heuristic combinations (16 in total, since we regard the third heuristic as complementary to the other two and therefore always apply at the end). Table 4 shows this analysis and the impact that different heuristic combinations have on the overall retrieval effectiveness. The values in the table represent mean average precision values over 100 recall points across all CO topics and are generated using strict quantization function in the inex eval ev aluation metric (Goevert and Kazai 2003). We use the case of Original relevance assessments. The CRE module is applied on 586 PEHCEVSKI, THOM AND VERCOUSTRE the resulting answer list of our hybrid XML retrieval system, and all the retrieved CREs (per article) are included in the final answer list.

As shown in Table 4, the best effectiveness is produced by using the Mp or the pM heuristic combination, with the former producing higher scores. For both cases, using the E heuristic (as complementary to the above heuristic combinations) produces better scores than using the B heuristic. Thus, the best heuristic combination is MpE .

This heuristic combination can be interpreted as follows: first the CREs are sorted in a descending order according to the number of times each CRE appears in the resulting list of matching elements (the more often it appears, the better). Next, if two Coherent Retrieval Elements appear the same number of times in the answer list, the one with the shorter length will be ranked higher. If, however, they have the same length, the ordering sequence where they appear in the article will determine their final ranks. For example, if it so happens that article[1]/bdy[1]/sec[2] and article[1]/bdy[1]/sec[4] appear the same number of times in the answer list and have the same length, then when using the above heuristic combination, the latter element will be ranked higher than the former element.

After applying our retrieval module on the answer list shown in Table 3, we produce our ranked list of Coherent Retrieval Elements as shown in Table 5.

This table also shows that our retrieval module can also determine the level of granu-larity of the CREs in the ranked list. With the current implementation, less specific and more general CREs are preferred over more specific and less general CREs. However, we observe that different heuristic combinations may be more suitable for a different choice HYBRID XML RETRIEVAL 587 of evaluation metric (such as inex eval ng(s) or inex eval ng(o) ), in which case our retrieval module could easily be switched to produce more specific and least general CREs early in the ranking (such as using the PME heuristic combination, which as we show in Section 4.3 appears to be more suitable for both the above metrics).

The ranked list of CREs is also shown as CRE module in figure 5. 4. Experiments and results In order to determine the most effective content-only XML retrieval system, we investigate the following systems:  X  Zettair, using a full-text information retrieval approach;  X  eXist, using a native XML database approach;  X  Hybrid, using a hybrid approach to XML retrieval;  X  eXist-CRE, using a native XML database approach with our Coherent Retrieval Element  X  Hybrid-CRE, using a hybrid XML retrieval approach with the CRE module applied on
Fo r each of the above, the resulting answer list for a particular CO topic comprises up to 1500 articles or elements within articles. A retrieval run for each retrieval system therefore constitutes resulting answer lists for all CO topics. In order to evaluate the ef-fectiveness of each system, for each CO topic the average precision value (over 100 recall points) is first calculated. These values are then averaged over all CO topics, and the mean av erage precision value for a particular run is produced. The strict quantization function in a respective evaluation metric is used in order to calculate the mean average precision v alues. 4.1. Comparison of retrieval approaches T able 6 shows the retrieval runs for each XML retrieval system, when using the inex eval ev aluation metric and the case of Original relevance assessments. The MpE heuristic com-bination is implemented in the CRE retrieval module. The best runs for each system are highlighted in bold. As shown in the table, we determine the optimal number of retrieved elements (per article) for each retrieval system except Zettair, since its only unit of retrieval is a full article. Although for plain eXist and the plain Hybrid system retrieving more el-ements increases the effectiveness, the case when all (up to 1500) elements are retrieved performs best. This is also the case for eXist-CRE. Contrary to the above, in the case when the hybrid system implements the CRE module (Hybrid-CRE), the optimal number of re-trieved CREs (per article) is 10. However, in the next sections we show that, for a fixed heuristic combination ( MpE in this case) and different retrieval scenarios, the value for the optimal number of retrieved CREs can not be easily determined.

The table also shows that the Hybrid-CRE system is by far the most effective. This sup-588 PEHCEVSKI, THOM AND VERCOUSTRE article, the list of CREs produced by our CRE module indeed represents a list of prefer-able units of retrieval and, in most of the cases, the list contains the full article element brid system, which uses eXist as a central retrieval module, is roughly 11 times more ef-fective than plain eXist. This shows that a native XML database can effectively utilise information about articles estimated as likely to be relevant to a particular CO topic. The results also show that when our CRE module is applied, eXist X  X  effectiveness is more than three times greater than that of the plain eXist. Compared to eXist-CRE, our Hybrid-CRE system also improves its retrieval effectiveness by roughly 14 times. These are all significant improvements for the retrieval effectiveness of a native XML database system.
 HYBRID XML RETRIEVAL 589
Fo r Zettair, the above retrieval results clearly identify the importance of having a full-text information retrieval system in the XML retrieval task. If we compare the best result of our plain Hybrid system, we notice that Zettair still performs better. This is not surprising, since our analysis of the INEX 2003 CO topics relevance assessments shows that the full article element represents the third most frequent highly relevant element among all the highly relevant elements in the INEX 2003 XML test collection. It then follows that, for the CO topics, Zettair is indeed capable of retrieving highly relevant articles, while our plain Hybrid system retrieves other elements (in the case of its best run up to 1500), which are more specific and not necessarily highly relevant. However, if the CRE module is applied to the Hybrid system, we observe an effectiveness improvement of roughly 2.5 times more than that of Zettair, and roughly 4 times more than that of the plain Hybrid system. The latter results show that without the CRE module, the native XML database in the plain Hy-brid system is not capable of identifying the coherent highly relevant elements for the CO topics.

Figure 7 shows a detailed summary of the best evaluation results for the XML re-trieval systems (for each of the three approaches). As observed previously in Table 6, the hybrid-CRE system performs best, followed by Zettair, and the eXist-CRE system is w orst. 590 PEHCEVSKI, THOM AND VERCOUSTRE 4.2. Analysis based on different retrieval scenarios In the following analysis, we evaluate the effectiveness of each XML retrieval system for three different cases of relevance assessments: Original, General and Specific. For each relevance assessment case, the performance of each system is compared using all CO topics ( All ), or using either of the two categories of CO topics: Broad and Narrow (these categories were previously identified in Section 2.3). For each XML retrieval system (except Zettair), we additionally investigate three different numbers of retrieved elements per article (n): 1 , 10 and all .W e choose these values because n=10 w orks well with the previously determined CRE heuristic combination, while the other two represent the lowest and the highest possible values of n .

T able 7 shows the evaluation results for each system in the case of Original relevance assessments. Overall, the Hybrid-CRE system performs best. However, the optimal number of retrieved elements changes from 10 (when the system is evaluated against All and Broad topics) to all (when the system is evaluated against the Narrow topics). Not surprisingly, when evaluated against the Narrow topics the plain Hybrid system performs better than Zettair. For the Broad topics, the systems implementing the CRE module preserve their optimal number of retrieved elements at 10, while the other systems still need to retrieve the maximum number of elements to achieve their best performances.
 HYBRID XML RETRIEVAL 591
T able 8 shows the evaluation results for each system in the case of General relevance assessments. We observe two things in both cases of All and Broad topics: first, the Zettair system performs best, significantly outperforming the other systems particularly for the latter topic category; and second, the optimal number of retrieved elements for systems implementing the CRE module is 1. However, the situation changes for the Narrow top-ics, where the hybrid-CRE run (with 10 retrieved elements per article) performs slightly better than Zettair. The latter observation thus confirms our previous claim about an ex-pected varying performance of XML retrieval systems when evaluated against categories of CO topics. Indeed, even the retrieval parameter ( n ), implemented in our CRE module, should have a different setting when the system is evaluated against the Narrow CO topic category.

In the case of Specific relevance assessments, there is no clear distinction of the (possible) categories of CO topics. Indeed, Table 9 shows that in this case the plain Hybrid system performs best (although the absolute performance scores are rather poor), irrespective to the knowledge of the existing categories of CO topics. We also observe that, for both Broad and Narrow topics, the systems perform best when retrieving the maximum number of elements. 592 PEHCEVSKI, THOM AND VERCOUSTRE 4.3. Analysis based on different evaluation metrics The aim of this section is to provide an insight into the behaviour for each of the XML retrieval systems, when their performance is evaluated using the following evaluation met-rics: inex eval ng(s) and inex eval ng(o) (Goevert et al. 2003). These metrics include information about the sizes of the retrieved elements; the latter taking into account the (pos-sible) extent of overlapping between elements in the resulting answer list.
 T able 10 shows the performance scores for the XML retrieval systems, in the case of Original relevance assessments and across all CO topics, when the effectiveness is evaluated using these evaluation metrics. The CRE module uses the MpE heuristic combination, a combination which produced the best performance scores for the inex eval ev aluation metric. For each metric and each system, we also investigate the optimal number of retrieved elements per article: 1 , 10 or all .

Fo r both evaluation metrics, our Hybrid-CRE system again performs best, and for each system the optimal number of retrieved elements is the maximum number ( all ), irre-spective to whether the system incorporates the CRE module. However, the ordering of the systems in terms of how they perform differs for each metric. For example, when the inex eval ng(s) metric is used, the best run for the plain Hybrid system outperforms the Zettair run, which is not the case when the inex eval ng(o) metric applies. This is rather HYBRID XML RETRIEVAL 593 strange, since these systems do not produce overlapping elements in their resulting answer lists.
 Furthermore, despite the many overlapping elements in the resulting list of the Hybrid-CRE system, it is still ranked higher than all the other systems. This raises the question whether the CRE module should utilise another, more suitable heuristic combination. In-deed, these metrics utilise a fundamentally different interpretation of the concept of rele-v ance than that of the inex eval metric; the relevance concept is referred to as an  X  X deal concept space X  (Goevert et al. 2003). We therefore experimented with different possible heuristic combinations and found that, for these metrics, the best heuristic combination is PME (Section 3.4 explores all the possible heuristic combinations). When implemented in the CRE module, our Hybrid-CRE system produces the following mean average precision v alues: 0.2201 for ng(s) and 0.1640 for ng(o) , yielding an 11% relative performance improvement over the previous heuristic combination when the ng(o) metric applies. This is perhaps not surprising, since the PME heuristic retrieves more specific CREs early in the ranking, therefore reducing the penalising effect of the latter metric. Consequently, tuning an XML retrieval system with appropriate values for the retrieval parameters (such as the PME choice for the heuristic combination, in this case) depends on the choice of evaluation metric. 594 PEHCEVSKI, THOM AND VERCOUSTRE 5. Related work 5.1. Comparison to other INEX systems The participants in INEX 2003 used various approaches to XML retrieval. These approaches were classified in two categories: model-oriented and system-oriented (Fuhr et al. 2004). Our group followed a system-oriented approach by using the initial hybrid XML retrieval system, where we investigated various extraction strategies with eXist (Pehcevski et al. 2003). These strategies resulted in rather poor system effectiveness for CO topics, where Zettair performed better than our initial hybrid system. Wilkinson also shows that simply e xtracting components from likely relevant documents leads to poor system performance (Wilkinson 1994). However, the hybrid system with CRE module (which we developed after INEX 2003) more than doubles the retrieval effectiveness of a full-text information retrieval system. We show elsewhere that the above approach also produces further performance improvements for the CAS topics (Pehcevski et al. 2004).

At INEX 2002 the CSIRO participating group proposed a similar approach to XML retrieval (Vercoustre et al. 2003). Queries are sent to PADRE, the core of the CSIRO P anoptic Enterprise Search Engine. 7 Unlike Zettair, where the primary unit of retrieval is a full article, PADRE combines full-text and metadata indexing and retrieval and is capable of in contrast to our CRE retrieval module, the above approach ignores the higher structural elements that contain the indexed element.

The following is a brief summary of some related XML retrieval approaches presented at INEX 2003. XXL (Schenkel et al. 2004) implements a simple probabilistic ranked XML retrieval and additionally incorporates ontological knowledge for both the element names and the element content. The Otago system (Trotman and O X  X eefe 2004) implements a proprietary corpus tree structure which is first used to rank the likely relevant documents and then, using the notion of  X  X overage X , extracts likely relevant elements from those documents. To correctly deal with ranked retrieval on the document component level, the IBM system (Mass and Mandelbrod 2004) implements an extension of the classical vector space model by merging ranked answers coming out from different, previously determined component indexes. The ILLC-Amsterdam group uses a retrieval system that implements a multinomial language model for determining the preferable units of retrieval and their final result scores (Sigurbjornsson et al. 2004). The EXTIRP system (Doucet et al. 2004) first splits the XML documents into a set of  X  X inimal XML fragments X  and then ranks them using a similarity measure. The rank values are accordingly propagated to the ancestor elements and the final ranked list of resulting fragments is generated. The system also includes a query e xpansion module. The SearX engine (Florke 2004) is a commercial, out-of-the-box XML search engine which is based on the probabilistic retrieval principle. To handle different document fragments sharing a common semantics, as well as incorporate weightings into the query language, SearX utilises the concept of r oles. This concept is shown to work well in a publishing environment where large and structured document collections are used.
When compared to their initial INEX 2003 performance scores for different choice of evaluation metrics (Fuhr et al. 2004), we have found that our newly developed HYBRID XML RETRIEVAL 595 Hybrid-CRE system is the most effective among all the above XML retrieval systems. The best performance scores outlined in Table 6 and Table 10 were used for the Hybrid-CRE system with reference to the above comparison. 5.2. Preferable units of retrieval Some related research has also been carried out in an effort to determine the preferable units of XML retrieval for the CO topics. The focused structured document retrieval aims to identify and retrieve  X  X est entry points X  that are considered as document components from which users can easily browse and access highly relevant information (Kazai et al. 2002). They investigate the best retrieval strategies derived from user studies that effectively identify the best entry points. However, the best entry points do not necessarily represent highly relevant document components, since they primarily capture the relationship be-tween the retrieved document components. In XIRQL (Fuhr and Grossjohann 2001) the preferable units of retrieval, referred to as  X  X ndex objects X , are specified by domain analysts manually analysing the XML document schema. Contrary to the manual approach, Hatano et al. propose a statistical analysis that determines  X  X oherent Partial Documents X  from the INEX XML document collection without need of a document schema (Hatano et al. 2003). However, when compared to our CRE retrieval module, which for a particular CO topic utilises the structural information from the matching elements and dynamically determines the Coherent Retrieval Elements, Hatano et al. X  X  analysis requires the entire XML document collection to be processed. 5.3. INEX 2003 CO topic categories Hatano et al. have also undertaken an analysis of INEX 2003 CO relevance assessments, where they also focus on highly exhaustive and highly specific elements (Hatano et al. 2004). Their analysis is primarily based upon the statistics gathered for the number of the answer XML document components and the average number of words per document component for each CO topic. On the basis of their analysis, they have also identified two different categories of CO topics: SCO, topics for  X  X earching specific XML fragments X , and ACO, topics for  X  X earching aggregated XML fragments X . The SCO and ACO topic categories therefore correspond to the Narrow and the Broad topic categories we have previously identified, although our analysis is based on somewhat different foundation. More precisely, roughly 64% of the total number of topics that appear in our Broad category also appear in the ACO category, and roughly 67% of the total number of topics that appear in our Narrow category also appear in the SCO category. They have also identified the  X  X ested relationships X  among the XML components in the recall base, an issue previously identified as the overlap problem in XML retrieval evaluation. They argue that depending on its retrieval purpose, an XML retrieval system should be evaluated against those topics that fulfill that purpose. We have also evaluated Zettair and eXist, two systems with different retrieval purposes, against different categories of CO topics. However, unlike their  X  X ML fragment retrieval system X , we have proposed a hybrid XML retrieval system that is still 596 PEHCEVSKI, THOM AND VERCOUSTRE capable of identifying and retrieving highly relevant document components, irrespective to the existing CO topic categories. 5.4. Full-text search and ranking Most native XML databases implement efficient storage and querying mechanisms over XML documents and (usually) retrieve document components that strictly match the log-ical query conditions. Most have also implemented a support for XQuery X  X he standard XML query language (Boag et al. 2004). Recently, the World Wide Web Consortium has ac-knowledged the need for incorporating full-text search and ranking capabilities into XQuery (Amer-Yahia and Case 2004, Buxton and Rys 2003). The TeXQuery language (Amer-Yahia et al. 2004), implemented in the Quark 8 system, and the TIX bulk-algebra (Al-Khalifa et al. 2003), implemented in Timber, 9 represent initiatives aiming at integrating information re-trieval techniques into a standard native XML database query evaluation engine. TeXQuery specifies a bi-directional mapping between the XQuery data model and its formal data model. The two additional TeXQuery expressions enable users to express the full-text search queries and to additionally rank the resulting answers. The TIX algebra, on the other hand, is based on the notion of a  X  X cored tree X , which represents a rooted tree where each node incorporates at least two attributes, indicating the name and the relevance score of the node. Additional operators manipulate the scored data trees in an information retrieval f ashion; by enabling retrieval of elements after satisfying the requirements for the score or the rank position, and by specifying the way of selecting the most appropriate among all the likely relevant elements (much like the algorithm implemented in our CRE module). The TeXQuery language and the TIX algebra thus attempt to bridge the gap between the information retrieval and the strict database approaches to XML retrieval. The two retrieval concepts have also been implemented in fully functional demo prototypes (Botev et al. 2004, Yu et al. 2003).

The main contribution of the XXL search engine (Theobald and Weikum 2002) is an ontology-enabled search, which can span across XML document collections each conform-ing to a different underlying schema. However, it is unclear whether XXL is capable of determining the appropriate retrieval granularity of the likely relevant document compo-nents, particularly during the query evaluation phase.

In an effort to improve information retrieval of whole documents in a structured document environment, Trotman develops a corpus-tree data structure that utilises the underlying struc-tural information during retrieval (Trotman 2004). The similarity ranking measures are also slightly adapted in order to support the structured document search process. However, addi-tional index structures and further adaptation of the implemented similarity measures may be needed in order to retrieve and rank document components instead of whole documents. XSearch (Cohen et al. 2003) retrieves answers consisting of semantically related nodes. However, it cannot be used (without modification) in a straightforward fashion with the INEX XML document collection, since the structural document schema for the INEX col-lection does not incorporate element semantics. XRank (Guo et al. 2003), on the other hand, follows the structured retrieval principle and aims at returning the most specific an-cestor elements, which comprise matching elements containing any of the query keywords, HYBRID XML RETRIEVAL 597 irrespective to the underlying document schema. However, it is primarily tuned for a hy-perlinked XML environment and is thus unknown whether it is capable of producing highly effective scores in a non-hyperlinked environment such as the INEX XML document collection. 6. Conclusion and future work This paper investigates the implications that arise when the performances of three systems, a full-text information retrieval system, a native XML database, and a hybrid system, are ev aluated against different XML retrieval scenarios.
 The different cases of relevance assessments, which were identified as a result of our INEX 2003 relevance assessments analysis, can approximate different (possible) models of user behaviour; we have shown that the parameters and the performance of an XML retrieval system may vary widely, depending on which particular retrieval model is used. Moreover, the knowledge of the existing topic categories can, in some assessment cases, also influence the choice of the optimal retrieval parameter(s). We have also shown that tuning an XML retrieval system depends on the choice of evaluation metric. In fact, since different evaluation metrics usually tend to model different retrieval behaviours, it is not feasible, nor indeed possible, to find the best combination of retrieval parameters that could w ork equally well with every metric. Some efforts are being made, however, in the direction of unifying existing INEX metrics into a robust evaluation metric which aims at modeling all the possible situations of expected retrieval behaviour (Kazai et al. 2004).
Since the values for the mean average precision for the XML retrieval systems (including ours) are still very low compared to the values for systems retrieving whole documents, it is our hope that the work presented in this paper will lead to a better understanding of issues concerning the relevance assessments and the choices for the optimal system parameters in different XML retrieval scenarios.

In the future, we aim to implement a relevance ranking scheme in eXist and investigate whether or not it would be more efficient as well as more effective solution.
 Acknowledgments We thank Wolfgang Meier for his assistance with using eXist, and Nick Lester, Falk Scholer and other members of the Search Engine Group at RMIT for their support with using Zettair. Further, we thank Saied Tahaghoghi and the anonymous reviewers for providing useful comments on earlier drafts of this paper.
 Notes 598 PEHCEVSKI, THOM AND VERCOUSTRE References HYBRID XML RETRIEVAL 599 600 PEHCEVSKI, THOM AND VERCOUSTRE
