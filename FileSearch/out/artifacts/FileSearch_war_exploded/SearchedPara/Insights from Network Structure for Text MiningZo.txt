 Text mining / harvesting algorithms have been ap-plied in recent years for various uses, including learning of semantic constraints for verb participants (Lin and Pantel, 2002) related pairs in various rela-tions, such as part-whole (Girju et al., 2003), cause (Pantel and Pennacchiotti, 2006), and other typical information extraction relations, large collections of entities (Soderland et al., 1999; Etzioni et al., 2005), features of objects (Pasca, 2004) and ontolo-gies (Carlson et al., 2010). They generally start with one or more seed terms and employ patterns that specify the desired information as it relates to the seed(s). Several approaches have been developed specifically for learning patterns, including guided pattern collection with manual filtering (Riloff and Shepherd, 1997) automated surface-level pattern in-duction (Agichtein and Gravano, 2000; Ravichan-dran and Hovy, 2002) probabilistic methods for tax-onomy relation learning (Snow et al., 2005) and ker-nel methods for relation learning (Zelenko et al., 2003). Generally, the harvesting procedure is recur-sive, in which data (terms or patterns) gathered in one step of a cycle are used as seeds in the following step, to gather more terms or patterns.

This method treats the source text as a graph or network, consisting of terms (words) as nodes and inter-term relations as edges. Each relation type in-duces a different network 1 . Text mining is a process of network traversal, and faces the standard prob-lems of handling cycles, ranking search alternatives, estimating yield maxima, etc.

The computational properties of large networks and large network traversal have been studied inten-sively (Sabidussi, 1966; Freeman, 1979; Watts and Strogatz, 1998) and especially, over the past years, in the context of the world wide web (Page et al., 1999; Broder et al., 2000; Kleinberg and Lawrence, 2001; Li et al., 2005; Clauset et al., 2009). Surpris-ingly, except in (Talukdar and Pereira, 2010), this work has not yet been related to text mining research in the computational linguistics community.

The work is, however, relevant in at least two ways. It sometimes explains why text mining algo-rithms have the limitations and thresholds that are empirically found (or suspected), and it may suggest ways to improve text mining algorithms for some applications.
 In Section 2, we review some related work. In Section 3 we describe the general harvesting proce-dure, and follow with an examination of the various statistical properties of implicit semantic networks in Section 4, using our implemented harvester to provide illustrative statistics. In Section 5 we dis-cuss implications for computational linguistics re-search. The Natural Language Processing knowledge har-vesting community has developed a good under-standing of how to harvests various kinds of se-mantic information and use this information to im-prove the performance of tasks such as information extraction (Riloff, 1993), textual entailment (Zan-zotto et al., 2006), question answering (Katz et al., 2003), and ontology creation (Suchanek et al., 2007), among others. Researchers have focused on the automated extraction of semantic lexicons (Hearst, 1992; Riloff and Shepherd, 1997; Girju et al., 2003; Pasca, 2004; Etzioni et al., 2005; Kozareva et al., 2008). While clustering approaches tend to extract general facts, pattern based approaches have shown to produce more constrained but accurate lists of semantic terms. To extract this information, (Lin and Pantel, 2002) showed the effect of using differ-ent sizes and genres of corpora such as news and Web documents. The latter has been shown to pro-vide broader and more complete information.

Researchers outside computational linguistics have studied complex networks such as the World Wide Web, the Social Web, the network of scien-tific papers, among others. They have investigated the properties of these text-based networks with the objective of understanding their structure and ap-plying this knowledge to determine node impor-tance/centrality, connectivity, growth and decay of interest, etc. In particular, the ability to analyze net-works, identify influential nodes, and discover hid-den structures has led to important scientific and technological breakthroughs such as the discovery of communities of like-minded individuals (New-man and Girvan, 2004), the identification of influ-ential people (Kempe et al., 2003), the ranking of scientists by their citation indexes (Radicchi et al., 2009), and the discovery of important scientific pa-pers (Walker et al., 2006; Chen et al., 2007; Sayyadi and Getoor, 2009). Broder et al. (2000) demon-strated that the Web link structure has a  X  X ow-tie X  shape, while (2001) classified Web pages into au-thorities (pages with relevant information) and hubs (pages with useful references). These findings re-sulted in the development of the PageRank (Page et al., 1999) algorithm which analyzes the structure of the hyperlinks of Web documents to find pages with authoritative information. PageRank has revolution-ized the whole Internet search society.

However, no-one has studied the properties of the text-based semantic networks induced by semantic relations between terms with the objective of un-derstanding their structure and applying this knowl-edge to improve concept discovery. Most relevant to this theme is the work of Steyvers and Tenen-baum (Steyvers and Tenenbaum, 2004), who stud-ied three manually built lexical networks (associa-tion norms, WordNet, and Roget X  X  Thesaurus (Ro-get, 1911)) and proposed a model of the growth of the semantic structure over time. These networks are limited to the semantic relations among nouns.
In this paper we take a step further to explore the statistical properties of semantic networks relating proper names , nouns , verbs , and adjectives . Under-standing the semantics of nouns, verbs, and adjec-tives has been of great interest to linguists and cog-nitive scientists such as (Gentner, 1981; Levin and Somers, 1993; Gasser and Smith, 1998). We imple-ment a general harvesting procedure and show its re-sults for these word types. A fundamental difference with the work of (Steyvers and Tenenbaum, 2004) is that we study very large semantic networks built  X  X aturally X  by (millions of) users rather than  X  X rtifi-cially X  by a small set of experts. The large networks capture the semantic intuitions and knowledge of the collective mass. It is conceivable that an analysis of this knowledge can begin to form the basis of a large-scale theory of semantic meaning and its inter-connections, support observation of the process of lexical development and usage in humans, and even suggest explanations of how knowledge is organized in our brains, especially when performed for differ-ent languages on the WWW. Text mining algorithms such as those mentioned above raise certain questions, such as: Why are some seed terms more powerful (provide a greater yield) than others? , How can one find high-yield terms? , How many steps does one need, typically, to learn all terms for a given relation? , Can one estimate the total eventual yield of a given relation? , and so on. On the face of it, one would need to know the struc-ture of the network a priori to be able to provide an-swers. But research has shown that some surpris-ing regularities hold. For example, in the text min-ing community, (Kozareva and Hovy, 2010b) have shown that one can obtain a quite accurate estimate of the eventual yield of a pattern and seed after only five steps of harvesting. Why is this? They do not provide an answer, but research from the network community does.

To illustrate the properties of networks of the kind induced by semantic relations, and to show the ap-plicability of network research to text harvesting, we implemented a harvesting algorithm and applied it to a representative set of relations and seeds in two languages.

Since the goal of this paper is not the development of a new text harvesting algorithm, we implemented a version of an existing one: the so-called DAP (doubly-anchored pattern) algorithm (Kozareva et al., 2008), because it (1) is easy to implement, (2) requires minimum input (one pattern and one seed example), (3) achieves very high precision com-pared to existing methods (Pasca, 2004; Etzioni et al., 2005; Pasca, 2007), (4) enriches existing se-mantic lexical repositories such as WordNet and Yago (Suchanek et al., 2007), (5) can be formulated to learn semantic lexicons and relations for noun , verb and verb+preposition syntactic constructions; (6) functions equally well in different languages. Next we describe the knowledge harvesting proce-dure and the construction of the text-mined semantic networks. 3.1 Harvesting to Induce Semantic Networks For a given semantic class of interest say singers , the algorithm starts with a seed example of the class , say Madonna . The seed term is inserted in the lexico-syntactic pattern  X  class such as seed and * X , which learns on the position of the  X  new terms of type class . The newly learned terms are then individually placed into the position of the seed in the pattern, and the bootstrapping process is repeated until no new terms are found. The output of the algorithm is a set of terms for the semantic class. The algo-rithm is implemented as a breadth-first search and its mechanism is described as follows:
The output of the knowledge harvesting algorithm is a network of semantic terms interconnected by the semantic relation captured in the pattern. We can represent the traversed (implicit) network as a directed graph G ( V,E ) with nodes V ( | V | = n ) and edges E ( | E | = m ) . A node u in the net-work corresponds to a term discovered during boot-strapping. An edge ( u,v )  X  E represents an ex-isting link between two terms. The direction of the edge indicates that the term v was generated by the term u . For example, given the sentence (where the pattern is in italics and the extracted term is un-derlined)  X  X e loves singers such as Madonna and Michael Jackson  X , two nodes Madonna and Michael Jackson with an edge e =( Madonna , Michael Jack-son ) would be created in the graph G . Figure 1 shows a small example of the singer network. The starting seed term Madonna is shown in red color and the harvested terms are in blue. 3.2 Data We harvested data from the Web for a representa-tive selection of semantic classes and relations, of the type used in (Etzioni et al., 2005; Pasca, 2007; Kozareva and Hovy, 2010a):  X  semantic classes that can be learned using dif- X  semantic classes that are expressed through dif- X  verbs and adjectives characterizing the seman- X  semantic relations with more complex lexico- X  semantic classes that are obtained in differ-
While most of these variations have been explored in individual papers, we have found no paper that covers them all, and none whatsoever that uses verbs and adjectives as seeds.

Using the above procedure to generate the data, each pattern was submitted as a query to Ya-hoo!Boss. For each query the top 1000 text snippets were retrieved. The algorithm ran until exhaustion. In total, we collected 10GB of data which was part-of-speech tagged with Treetagger (Schmid, 1994) and used for the semantic term extraction. Table 1 summarizes the number of nodes and edges learned for each semantic network using pattern P i and the initial seed shown in italics.
 In this section we apply a range of relevant mea-sures from the network analysis community to the networks described above. 4.1 Centrality The first statistical property we explore is centrality. It measures the degree to which the network struc-ture determines the importance of a node in the net-work (Sabidussi, 1966; Freeman, 1979).

We explore the effect of two centrality measures: indegree and outdegree . The indegree of a node u denoted as indegree ( u ) = P ( v,u ) considers the sum of all incoming edges to u and captures the abil-ity of a semantic term to be discovered by other se-mantic terms. The outdegree of a node u denoted as outdegree ( u ) = P ( u,v ) considers the number of outgoing edges of the node u and measures the abil-ity of a semantic term to discover new terms. In-tuitively, the more central the node u is, the more confident we are that it is a correct term.

Since harvesting algorithms are notorious for ex-tracting erroneous information, we use the two cen-trality measures to rerank the harvested elements. Table 2 shows the accuracy 2 of the singer seman-tic terms at different ranks using the in and out degree measures. Consistently, outdegree outper-forms indegree and reaches higher accuracy. This shows that for the text-mined semantic networks, the ability of a term to discover new terms is more im-portant than the ability to be discovered.
This poses the question  X  What are the terms with high and low outdegree?  X . Table 3 shows the top and bottom 10 terms of the semantic class.

The nodes with high outdegree correspond to fa-mous or contemporary singers. The lower-ranked nodes are mostly spelling errors such as Alanis Morisette and Christine Agulera , less known singers such as Buffy Sainte-Marie and Cece Winans , non-American singers such as Alejandro Sanz and France Gall , extractions due to part-of-speech tag-ging errors such as Billie Celebration , and general terms such as Peter and Sarah . Potentially, know-ing which terms have a high outdegree allows one to rerank candidate seeds for more effective harvesting. 4.2 Power-law Degree Distribution We next study the degree distributions of the net-works. Similarly to the Web (Broder et al., 2000) and social networks like Orkut and Flickr, the text-mined semantic networks also exhibit a power-law distribution. This means that while a few terms have a significantly high degree, the majority of the se-mantic terms have small degree. Figure 2 shows the indegree and outdegree distributions for different semantic classes, lexico-syntactic patterns, and lan-guages (English and Spanish). For each semantic network, we plot the best-fitting power-law function (Clauset et al., 2009) which fits well all degree dis-tributions. Table 4 shows the power-law exponent values for all text-mined semantic networks.
It is interesting to note that the indegree power-law exponents for all semantic networks fall within the same range (  X  in  X  2.4), and similarly for the outdegree exponents (  X  out  X  1.3). However, the values of the indegree and outdegree exponents differ from each other. This observation is consistent with Web degree distributions (Broder et al., 2000). The difference in the distributions can be explained by the link asymmetry of semantic terms: A discov-ering B does not necessarily mean that B will dis-cover A . In the text-mined semantic networks, this asymmetry is caused by patterns of language use, such as the fact that people use first adjectives of the size and then of the color (e.g., big red car), or prefer to place male before female proper names. Harvest-ing patterns should take into account this tendency. 4.3 Sparsity Another relevant property of the semantic networks concerns sparsity. Following Preiss (Preiss, 1999), a graph is sparse if | E | = O ( | V | k ) and 1 &lt; k &lt; 2 , where | E | is the number of edges and | V | is the num-ber of nodes, otherwise the graph is dense. For the studied text-semantic networks, k is  X  1 . 08 . Spar-sity can be also captured through the density of the semantic network which is computed as | E | V ( V  X  1) . All networks have low density which suggests that the networks exhibit a sparse connectivity pattern. On average a node (semantic term) is connected to a very small percentage of other nodes. Similar be-havior was reported for the WordNet and Roget X  X  se-mantic networks (Steyvers and Tenenbaum, 2004). 4.4 Connectedness For every network, we computed the strongly con-nected component (SCC) such that for all nodes (se-mantic terms) in the SCC, there is a path from any node to another node in the SCC considering the di-rection of the edges between the nodes. For each network, we found that there is only one SCC. The size of the component is shown in Table 5. Un-like WordNet and Roget X  X  semantic networks where the SCC consists 96% of all semantic terms, in the text-mined semantic networks only 12 to 55% of the terms are in the SCC. This shows that not all nodes can reach (discover) every other node in the net-work. This also explains the findings of (Kozareva et al., 2008; Vyas et al., 2009) why starting with a good seed is important. 4.5 Path Lengths and Diameter Next, we describe the properties of the shortest paths between the semantic terms in the SCC. The dis-tance between two nodes in the SCC is measured as the length of the shortest path connecting the terms. The direction of the edges between the terms is taken into consideration. The average distance is the aver-age value of the shortest path lengths over all pairs of nodes in the SCC. The diameter of the SCC is calculated as the maximum distance over all pairs of nodes ( u,v ) , such that a node v is reachable from node u . Table 5 shows the average distance and the diameter of the semantic networks.

The diameter shows the maximum number of steps necessary to reach from any node to any other, while the average distance shows the number of steps necessary on average. Overall, all networks have very short average path lengths and small di-ameters that are consistent with Watt X  X  finding for small-world networks. Therefore, the yield of har-vesting seeds can be predicted within five steps ex-plaining (Kozareva and Hovy, 2010b; Vyas et al., 2009).

We also compute for any randomly selected node in the semantic network on average how many hops (steps) are necessary to reach from one node to an-other. Figure 3 shows the obtained results for some of the studied semantic networks. 4.6 Clustering The clustering coefficient (C) is another measure to study the connectivity structure of the networks (Watts and Strogatz, 1998). This measure captures the probability that the two neighbors of a randomly selected node will be neighbors. The clustering co-efficient of a node u is calculated as C u = | e ij | k : v i ,v j  X  N u ,e ij  X  E , where k u is the total degree of the node u and N u is the neighborhood of u . The clustering coefficient C for the whole semantic net-work is the average clustering coefficient of all its nodes, C = 1 n P C i . The value of the clustering coef-ficient ranges between [0 , 1] , where 0 indicates that the nodes do not have neighbors which are them-selves connected, while 1 indicates that all nodes are connected. Table 6 shows the clustering coefficient for all text-mined semantic networks together with the number of closed and open triads 3 . The analysis suggests the presence of a strong local cluster, how-ever there are few possibilities to form overlapping neighborhoods of nodes. The clustering coefficient of WordNet (Steyvers and Tenenbaum, 2004) is sim-ilar to those of the text-mined networks. 4.7 Joint Degree Distribution In social networks, understanding the preferential at-tachment of nodes is important to identify the speed with which epidemics or gossips spread. Similarly, we are interested in understanding how the nodes of the semantic networks connect to each other. For this purpose, we examine the Joint Degree Distribu-tion (JDD) (Li et al., 2005; Newman, 2003). JDD is approximated by the degree correlation function k nn which maps the outdegree and the average indegree of all nodes connected to a node with that outdegree . High values of k nn indicate that high-degree nodes tend to connect to other high-degree nodes (forming a  X  X ore X  in the network), while lower values of k nn suggest that the high-degree nodes tend to connect to low-degree ones. Figure 4 shows the k nn for the singer , whale , live in , cars , cantantes , and gente networks. The figure plots the outdegree and the average indegree of the semantic terms in the networks on a log-log scale. We can see that for all networks the high-degree nodes tend to connect to other high-degree ones. This explains why text mining algorithms should fo-cus their effort on high-degree nodes. 4.8 Assortivity The property of the nodes to connect to other nodes with similar degrees can be captured through the as-sortivity coefficient r (Newman, 2003). The range of r is [  X  1 , 1] . A positive assortivity coefficient means that the nodes tend to connect to nodes of similar degree, while negative coefficient means that nodes are likely to connect to nodes with degree very dif-ferent from their own. We find that the assortivi-tiy coefficient of our semantic networks is positive, ranging from 0.07 to 0.20. In this respect, the se-mantic networks differ from the Web, which has a negative assortivity (Newman, 2003). This implies a difference in text mining and web search traver-sal strategies: since starting from a highly-connected seed term will tend to lead to other highly-connected terms, text mining algorithms should prefer depth-first traversal, while web search algorithms starting from a highly-connected seed page should prefer a breadth-first strategy. The above studies show that many of the proper-ties discovered of the network formed by the web hold also for the networks induced by semantic rela-tions in text mining applications, for various seman-tic classes, semantic relations, and languages. We can therefore apply some of the research from net-work analysis to text mining.

The small-world phenomenon, for example, holds that any node is connected to any other node in at most six steps. Since as shown in Section 4.5 the se-mantic networks also exhibit this phenomenon, we can explain the observation of (Kozareva and Hovy, 2010b) that one can quite accurately predict the rel-ative  X  X oodness X  of a seed term (its eventual total yield and the number of steps required to obtain that) within five harvesting steps. We have shown that due to the strongly connected components in text min-ing networks, not all elements within the harvested graph can discover each other. This implies that har-vesting algorithms have to be started with several seeds to obtain adequate Recall (Vyas et al., 2009). We have shown that centrality measures can be used successfully to rank harvested terms to guide the net-work traversal, and to validate the correctness of the harvested terms.

In the future, the knowledge and observations made in this study can be used to model the lexi-cal usage of people over time and to develop new semantic search technology. In this paper we describe the implicit  X  X idden X  se-mantic network graph structure induced over the text of the web and other sources by the semantic rela-tions people use in sentences. We describe how term harvesting patterns whose seed terms are harvested and then applied recursively can be used to discover these semantic term networks. Although these net-works differ considerably from the web in relation density, type, and network size, we show, some-what surprisingly, that the same power-law, small-world effect, transitivity, and most other character-istics that apply to the web X  X  hyperlinked network structure hold also for the implicit semantic term graphs X  X ertainly for the semantic relations and lan-guages we have studied, and most probably for al-most all semantic relations and human languages.
This rather interesting observation leads us to sur-mise that the hyperlinks people create in the web are of essentially the same type as the semantic relations people use in normal sentences, and that they form an extension of normal language that was not needed before because people did not have the ability within the span of a single sentence to  X  X mbed X  structures larger than a clause X  X ertainly not a whole other page X  X  worth of information. The principal excep-tion is the academic citation reference (lexicalized as  X  X ee X ), which is not used in modern webpages. Rather, the  X  X exicalization X  now used is a formatting convention: the hyperlink is colored and often un-derlined, facilities offered by computer screens but not available to speech or easy in traditional typeset-ting. We acknowledge the support of DARPA contract number FA8750-09-C-3705 and NSF grant IIS-0429360. We would like to thank Sujith Ravi for his useful comments and suggestions.

