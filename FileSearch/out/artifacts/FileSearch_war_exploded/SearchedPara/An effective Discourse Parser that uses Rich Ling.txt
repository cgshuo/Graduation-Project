 Many theories postulate a hierarchical structure for discourse (Mann and Thompson, 1988; Moser et. al., 1996; Polanyi et. al., 2004). Discourse struc-ture is most often based on semantic / pragmatic re-lationships between spans of text and results in a tree structure, as that shown in Figure 1. Discourse parsing, namely, deriving such tree structures and the rhetorical relations labeling their inner nodes is still a challenging and mostly unsolved problem in NLP. It is linguistically plausible that such structures are determined at least in part on the basis of the meaning of the related chunks of texts, and of the rhetorical intentions of their authors. However, such knowledge is extremely difficult to capture. Hence, previous work on discourse parsing (Wellner et. al., 2006; Sporleder and Lascarides, 2005; Marcu, 2000; Polanyi et. al., 2004; Soricut and Marcu, 2003; Baldridge and Lascarides, 2005) has relied only on syntactic and lexical information, lexical chains and shallow semantics.

We present an innovative discourse parser that uses compositional semantics (when available) and information on the structure of the segment being built itself. Our discourse parser, based on a modi-fied shift-reduce algorithm, crucially uses a rhetori-cal relation classifier to determine the site of attach-ment of a new incoming chunk together with the ap-propriate relation label. Another novel aspect of our work is the usage of Inductive Logic Programming (ILP): ILP learns from first-order logic representa-tions (FOL). The ILP-based relation classifier is significantly more accurate than relation classifiers that use competitive propositional ML algorithms such as decision trees and Naive Bayes. In addi-tion, it results in FOL rules that are linguistically perspicuous. Our domain is that of instructional how-to-do manuals, and we describe our corpus in Section 2. In Section 3, we discuss the modified shift-reduce parser we developed. The bulk of the paper is devoted to the rhetorical relation classifier in Section 4. Experimental results of both the rela-tion classifier and the discourse parser in its entirety are discussed in Section 5. Further details can be found in (Subba, 2008). Existing corpora annotated with rhetorical relations (Carlson et. al., 2003; Wolf and Gibson, 2005; Prasad et. al., 2008) focus primarily on news arti-cles. However, for us the development of the dis-course parser is parasitic on our ultimate goal: de-veloping resources and algorithms for language in-terfaces to instructional applications. Hence, we are interested in working with instructional texts. We worked with a corpus on home-repair that is about 5MB in size and is made up entirely of written En-glish instructions, 1 such as that shown in Exam-ple (1). The text has been manually segmented into Elementary Discourse Units (EDUs), the small-est units of discourse. In total, our corpus contains 176 documents with an average of 32.6 EDUs for a total of 5744 EDUs and 53,250 words. The structure for Example (1) is shown in Figure 1. (1) [Another way to measure and mark panels for
To explore our hypothesis, that rich linguistic in-formation helps discourse parsing, and that the state of the art in machine learning supports such an approach, we needed training data annotated with both compositional semantics and rhetorical rela-tions. We performed the first type of annotation al-most completely automatically, and the second man-ually, as we turn now to describing. 2.1 Compositional Semantics Derivation The type of compositional semantics we are inter-ested in is heavily rooted in verb semantics, which is particularly appropriate for the instructional text we are working with. Therefore, we used VerbNet (Kipper et. al., 2000) as our verb lexicon. VerbNet groups together verbs that undergo the same syn-tactic alternations and share similar semantics. It accounts for 4962 distinct verbs classified into 237 main classes. Each verb class is described by the-matic roles, selectional restrictions on the arguments and frames consisting of a syntactic description and semantic predicates. Such semantic classification of verbs can be helpful in making generalizations, es-pecially when data is not abundant. Generalization can also be achieved by means of the semantic pred-icates. Although the verb classes of two verb in-stances may differ, semantic predicates are shared across verbs. To compositionally build verb based semantic representations of our EDUs, we (Subba et al., 2006) integrated a robust parser, LCFLEX (Ros  X  e, 2000), with a lexicon and ontology based both on VerbNet and, for nouns, on CoreLex (Buite-laar, 1998). The augmented parser was able to de-rive complete semantic representations for 3257 of the 5744 EDUs (56.7%). The only manual step was to pick the correct parse from a forest of parse trees, since the output of the parser can be ambiguous. 2.2 Rhetorical relation annotation The discourse processing community has not yet reached agreement on an inventory of rhetorical re-lations. Among the many choices, our coding scheme is a hybrid of (Moser et. al., 1996) and (Marcu, 1999). We focused on what we call infor-mational relations , namely, relations in the domain. We used 26 relations, divided into 5 broad classes: 12 causal relations (e.g., preparation:act, goal:act, cause:effect, step1:step2 ); 6 elaboration relations (e.g., general:specific, set:member, object:attribute ; 3 similarity relations ( contrast1:contrast2, com-parison, restatement ); 2 temporal relations ( co-temp1:co-temp2, before:after ); and 4 other rela-tions, including joint and disjunction .

The annotation yielded 5172 relations, with rea-sonable intercoder agreement. On 26% of the data, we obtained  X  = 0 . 66 ;  X  rises to 0.78 when the two most commonly confused relations, preparation:act and step1:step2 , are consolidated. We also anno-tated the relata as nucleus (more important mem-ber) and satellite (contributing member(s)) (Mann and Thompson, 1988), with  X  = 0 . 67 . 2 The most frequent relation is preparation:act (24.46%), and in general, causal relations are more frequently used in our instructional corpus than in news corpora (Carl-son et. al., 2003; Wolf and Gibson, 2005). Our discourse parser is a modified version of a shift-reduce parser. The shift operation places the next segment on top of the stack, TOP. The reduce oper-ation will attach the text segment at TOP to the text segment at TOP-1. (Marcu, 2000) also uses a shift-reduce parser, though our parsing algorithm differs in two respects: 1) we do not learn shift operations and 2) in contrast to (Marcu, 2000), the attachment of an incoming text segment to the emerging tree may occur at any node on the right frontier. This al-lows for the more sophisticated type of adjunction operations required for discourse parsing as mod-eled in D-LTAG (Webber, 2004). A reduce op-eration is determined by the relation identification component. We check if a relation exists between the incoming text segment and the attachment points on the right frontier. If more than one attachment site exists, then the attachment site for which the rule with the highest score fired (see below) is chosen for the reduce operation. A reduce operation can fur-ther trigger additional reduce operations if there is more than one tree left in the stack after the first re-duce operation. When no rules fire, a shift occurs. In the event that all the segments in the input list have been processed and a full DPT has not been obtained, then we reduce TOP and TOP-1 using the joint relation until a single DPT is built. Identifying the informational relations between text segments is central to our approach for building the informational tree structure of text. We believe that the use of a limited knowledge representation for-malism, essentially propositional logic, is not ad-equate and that a relational model that can handle compositional semantics is necessary. We cast the problem of determining informational relations as a classification task. We used the ILP system Aleph that is based on (Muggleton, 1995). Formulation of any problem within the ILP framework consists of background knowledge B and the set of exam-ples E (E +  X  E  X  ). In our ILP framework, positive examples are ground clauses describing a relation and its relata, e.g. relation(s5e1,s5e2,act:goal) , or relation(s2e1-s3e2,s4e1,preparation:act) from Fig-ure 1. If e is a positive example of a relation r , then it is also a negative example for all the other rela-tions.

Background Knowledge ( B ) can be thought of as features used by ILP to learn rules, as in traditional attribute-value learning algorithms. We use the fol-lowing information to learn rules for classifying re-lations. Figure 2 shows a sample of the background knowledge provided for EDU s 5 e 2 .

Verbs + Nouns : These features were derived by tagging all the sentences in the corpus with a POS tagger (Brill, 1995).

WordNet : For each noun in our data, we also use information on hypernymy and meronymy relations using WordNet. In a sense, this captures the domain relations between objects in our data.

Linguistic Cues : Various cues can facilitate the inference of informational relations, even if it is well known that they are based solely on the content of the text segments, various cues can facilitate the in-ference of such relations. At the same time, it is well known that relations are often non signalled: in our corpus, only 43% of relations are signalled, consistently with figures from the literature (44% in (Williams and Reiter, 2003) and 45% in (Prasad et. al., 2008)). Besides lexical cues such as but , and and if , we also include modals, tense, compara-tives and superlatives, and negation. E.g., wrong-act in relations like prescribe-act:wrong-act is often ex-pressed using a negation.

Similarity : For the two segments in question, we compute the cosine similarity of the segments using only nouns and verbs.

Compositional semantics : the semantic infor-mation derived by our parser, as described in Sec-tion 2.1. The semantic representation of segment s 5 e 2 from Example (1) is shown in Figure 2. Each semantic predicate is a feature for the classifier.
Structural Information : For relations between two EDUs, we use knowledge of whether the two EDUs are intra-sentential or inter-sentential, since some relations, e.g. criterion:act , are more likely to be realized intra-sententially than inter-sententially. For larger segments, we also encode the hierarchi-cal representation of text segments that contain more than one nucleus, the distance between the nuclei of the two segments and any relations that exist be-tween the smaller inner segments.

At this point, the attentive reader will be wonder-ing how we encode compositional semantics for re-lations relating text segments larger than one EDU. Clearly we cannot just list the semantics of each EDU that is dominated by the larger segment. We follow the intuition that nuclei represent the most important portions of segments (Mann and Thomp-son, 1988). For segments such as s 5 e 1 -s 5 e 2 that contains a single nucleus, we simply reduce the se-mantic content of the larger segment to that of its nucleus:
In this case, the semantics of the complex text seg-ment is represented by the compositional semantics of the single most important EDU.

For segments that contain more than one nu-cleus, such as s 3 e 1 -s 3 e 2 , the discourse struc-ture information of the segment is represented with the additional predicates internal relation and par-ent segment . These predicates can be used recur-sively at every level of the tree to specify the relation between the most important segments. In addition, they also provide a means to represent the compo-sitional semantics of the most important EDUs and make them available to the relational learning algo-rithm. 4.1 Learning FOL Rules for Discourse Parsing In Aleph, the hypothesis space is restricted to a set of rules that conform to a predefined language L . This is done with the use of mode declarations which, in other words, introduces a language bias in the learn-ing process. modeh declarations inform the learning algorithm about what predicates to use as the head of the rule and modeb specifies what predicates to use in the body of the rule. Not all the information in B needs to be included in the body of the rule. This makes sense since we often learn definitions of concepts based on more abstract higher level infor-mation that is inferred from some other information that is not part of our final definition. Mode decla-rations are used by Aleph to build the most specific clause (  X  ) that can be learned for each example.  X  constrains the search for suitable hypotheses.  X  i is built by taking an example e i  X  E + and adding lit-erals that are entailed by B and e i . We then have the following property, where H i is the hypothesis (rule) we are trying to learn and is a generality operator:
Finding the most specific clause (  X  ) provides us with a partially ordered set of clauses from which to choose the best hypothesis based on some quantifi-able qualitative criteria. This sub-lattice is bounded by the most general clause ( , the empty clause) from the top and the most specific clause (  X  ) at the bottom. We use the heuristic search in Aleph that is similar to the A*-like search strategy presented by (Muggleton, 1995) to find the best hypothesis (rule). A noise threshold on the number of negative exam-ples that can be covered by a rule can be set. We learn a model that learns perfect rules first and then one that allows for at most 5 negative examples. A backoff model that first uses the model trained with noise = 0 and then noise = 5 if no classification has been made is used. We use the evaluation func-tion in Equation 1 to guide our search through the tree of possible hypotheses. This evaluation func-tion is also called the compression function since it prefers simpler explanations to more complex ones (Occam X  X  Razor). f s is the score for clause c s that is being evaluated, p s is the number of positive ex-amples, n s is the number of negative examples, l s is the length of the clause (measured by the number of clauses). Classification in most ILP systems, including Aleph, is restricted to binary classification (positive vs. negative). In many applications with just two classes, this is sufficient. However, we are faced with a multi-classification problem. In order to per-form multi-class classification, we use a decision list. First, we build m binary classifiers for each relation r  X  R . Then, we form an ordered list of the rules based on the following criterion: 1. Given two rules r i and r j , r i ,is ranked higher 2. if (p i  X  n i ) = (p j  X  n j ), then r i is ranked higher 3. if (p i  X  n i ) = (p j  X  n j ) and ( p i 4. default: random order
Classifying an unseen example is done by using the first rule in the ordered list that satisfies it. We report our results from experiments on both the classification task and the discourse parsing task. 5.1 Relation Classification Results For the classification task, we conducted exper-iments using the stratified k-fold (k = 5) cross-validation evaluation technique on our data. Unlike (Wellner et. al., 2006; Sporleder and Lascarides, 2005), we do not assume that we know the order of the relation in question. Instead we treat reversals of non-commutative relations (e.g. preparation:act and act:goal ) as separate relations as well. We compare our ILP model to RIPPER, Naive Bayes and the Decision Tree algorithm. We should point out that since attribute-value learning models can-not handle first-order logic data, they have been pre-sented with features that lose at least some of this information. While this may then seem to result in an unfair comparison, to the contrary, this is pre-cisely the point: can we do better than very effec-tive attribute-value approaches that however inher-ently cannot take richer information into account? All the statistical significance tests were performed using the value of F-Score obtained from each of the folds. We report performance on two sets of data since we were not able to obtain compositional se-mantic data for all the EDUs in our corpus:  X  Set A: Examples for which semantic data was  X  Set B: All examples regardless of whether or
Table 1 shows the results on Set A. ILP outper-forms all the other models. Via ANOVA, we first conclude that there is a statistically significant differ-ence between the 8 models ( p &lt; 2 . 2 e  X  16 ). To then pinpoint where the difference precisely lies, pair-wise comparisons using Student X  X  t-test show that the difference between ILP (using semantics) and all of the other learning models is statistically signifi-cant at p &lt; 0 . 05 . Additionally, ILP with semantics is significantly better than ILP without it ( p &lt; 0 . 05 ). For Decision Tree, Naive Bayes and RIPPER, the improvement in using semantics is not statistically significant.

In Table 2, we list the results on Set B. Once again, our ILP model outperforms the other three learning models. Naive Bayes is much more com-petitive when using all the examples compared to using only examples with semantic data. In the case of the attribute-value machine learning models, the use of semantic data seems to marginally hurt the performance of the classifiers. However, this is in contrast to the relational ILP model which always performs better when using semantics. This result suggests that the use of semantic data with loss of in-formation may not be helpful, and in fact, it may ac-tually hurt performance. Based on ANOVA, the dif-ferences in these 8 models is statistically significant (using semantics) and each of the other attribute-value learning models shows that our results are sta-tistically significant at p &lt; 0 . 05 .
 In Table 3, we report the performance of the two ILP models on each relation. 3 In general, the models perform better on relations that have the most exam-ples.

The evaluation of work in discourse parsing is hindered by the lack of a standard corpus or task. Hence, our results cannot be directly compared to (Marcu, 2000; Sporleder and Lascarides, 2005; Wellner et. al., 2006), but neither can those works be compared among themselves, because of differ-ences in underlying corpora, the type and number of relations used, and various assumptions. However, we can still draw some general comparisons. Our ILP-based models provide as much or significantly relation Semantics No Semantics preparation:act 74.86 72.05 general:specific 31.74 28.24 joint 55.23 52 act:goal 86.12 83.85 criterion:act 77.37 75.32 goal:act 73.43 68.9 step1:step2 28.75 35.29 co-temp1:co-temp2 48.84 37.84 disjunction 83.33 80.81 act:criterion 54.29 54.79 contrast1:contrast2 22.22 5.0 act:preparation 65.31 70.59 act:reason 0 10.26 cause:effect 19.05 10.53 comparison 22.22 10.53 more improvement over a majority-class baseline when compared to these other works. This is the case even though our work is based on less training data, relatively more relations, relations both be-tween just two EDUs and those involving larger text segments, and we make no assumptions about the order of the relations. Our results are comparable to (Marcu, 2000), which reports an accuracy of about 61% for his classifier. His majority class baseline performs at about 50% accuracy. (Wellner et. al., 2006) reports an accuracy of up to 81%, with a ma-jority class baseline performance of 45.7%. How-ever, our task is more challenging than (Wellner et. al., 2006). They use only 11 relations compared to the 26 we use. They also assume the order of the relation in the examples (i.e. examples for goal:act would be treated as examples for act:goal by revers-ing the order of the arguments) whereas we do not make such assumptions. In addition, their training data is almost twice as large as ours, based on re-lation instances. (Sporleder and Lascarides, 2005) also makes the same assumption on the ordering of the relations as (Wellner et. al., 2006). They re-port an accuracy of 57.75%. Their work, though, was based on only 5 relations. Importantly, neither (Wellner et. al., 2006; Sporleder and Lascarides, 2005) model examples with complex text segments with more than one EDU. 5.2 How interesting are the rules? Given that our ILP models learn first-order logic rules, we can make some qualitative analysis of the rules learned, such as those below, learnt by the ILP model that uses semantics: (2a) is learned using examples such as relation( s 5 e 1 , s 5 e 2 , X  X ct:goal X ) from Example (1). (2b) uses relational semantic information. This rule can be read as follows: (2c) is a rule that makes use of the structural in-formation about complex text segments. When us-ing Set A, more than about 60% of the rules in-duced include at least one semantic predicate in its body. They occur more frequently in rules for re-lations like preparation:act while less in rules for general:specific and act:goal . 5.3 Discourse Parsing Results In order to test our discourse parser, we used 151 documents for training and 25 for testing. We eval-uated the performance of our parser on both the discourse parse trees it builds at the sentence level and at the document level. The test set contained 341 sentences out of which 180 sentences were seg-mented into more than one EDU. We ran experi-ments using our two ILP models for the relation identifier, namely ILP with semantics and without semantics. Our ILP based discourse parsing models are named SR-ILP. We compare the performance of our models against a right branching majority class baseline. We used the sign-test to determine statis-tical significance of the results. Using the automatic evaluation methodology in (Marcu, 2000), preci-sion, recall and F-Score measures are computed for determining the hierarchical spans, nucleus-satellite assignments and rhetorical relations. The perfor-mance on labeling relations is the most important measure since the results on nuclearity and hierar-chical spans are by-products of the decisions made to attach segments based on relations.

On labeling relations, the parser that uses all the features (including compositional semantics) for de-termining relations performs the best with an F-Score of 63.06%. The difference of about 4.5% (be-tween ILP with semantics and without semantics) in F-Score is statistically significant at p = 0 . 006 . Our best model, SR-ILP (using semantics) beats the baseline by about 28% in F-Score. Since the task at the document level is much more challenging than building the discourse structure at the sentence level, we were not surprised to see a considerable drop in performance. For our best model, the performance on labeling relations drops to 35.44%. Clearly, the mistakes made when attaching segments at lower levels have quite an adverse effect on the overall performance. A less greedy approach to parsing dis-course structure is warranted.

While we would have hoped for a better perfor-mance than 35.44%, to start with, (Forbes et. al., 2001), (Polanyi et. al., 2004), and (Cristea, 2000) do not report the performance of their discourse parsers at all. (Marcu, 2000) reports precision and recall of up to 63.2% and 59.8% on labeling relations using manually segmented EDUs on three WSJ articles. (Baldridge and Lascarides, 2005) reports 43.2% F-Score on parsing 10 dialogues using a probabilistic head-driven parsing model. In conclusion, we have presented a relational ap-proach for classifying informational relations and a modified shift-reduce parsing algorithm for building discourse parse trees based on informational rela-tions. To our knowledge, this is the first attempt at using a relational learning model for the task of relation classification, or even discourse parsing in general. Our approach is linguistically motivated. Using ILP, we are able to account for rich composi-tional semantic data of the EDUs based on VerbNet as well as the structural relational properties of the text segments. This is not possible using attribute-value based models like Decision Trees and RIP-PER and definitely not using probabilistic models like Naive Bayes. Our experiments have shown that semantics can be useful in classifying informational relations. For parsing, our modified shift-reduce al-gorithm using the ILP relation classifier outperforms a right-branching baseline model significantly. Us-ing semantics for parsing also yields a statistically significant improvement. Our approach is also do-main independent as the underlying model and data are not domain specific.

