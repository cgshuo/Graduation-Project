 Relevance Feedback (RF) is a technique allowing to enrich an initial query according to the user feedback. The goal is to express more precisily the user X  X  needs. Some open issues appear when considering semi-structured documents like XML documents. Most of the RF approaches proposed in XML retrieval are simple adaptations of traditional RF to the new granularity of information. They enrich queries by adding terms extracted from relevant elements instead of terms extracted from whole documents. In this paper we show how structural constraints can also be used in RF. We propose a new approach that is able to extend the initial query by adding one or more generative structures. This approach is applied to unstructured queries. Experiments are carried out on INEX collection and results show the interest of our method.
 H.3.3 [ Information storage and retrieval ]: Information search and retrieval X  retrieval models ; H.3.4 [ Information storage and retrieval ]: Systems and Software X  perfor-mance evaluation Measurement, Experimentation, Performance Relevance Feedback, Structure, XML Retrieval
In traditional IR, Relevance Feedback (RF) is a technique used to improve the accuracy of results. It usually consists in extracting keywords from documents judged relevant and then of adding these terms to the initial query [4]. Most of the relevance feedback methods proposed in XML retrieval uses similar approaches, although new issues linked to the structural content of documents appear when considering XML documents.
 In this paper, we focus on issues linked to Content-Only (CO) queries reformulation, i.e. queries composed of sim-ple keyword terms. This type of queries is used when users do not have any knowledge about the document structure. As a result, the information retrieval system returns ele-ments having different granularities ( article, section, url, etc. ). Our hypothesis is that for a given query, relevant information could be located in some types of elements (like for example: section, subsection and paragraph ). We think it could be interesting to add this structural information to query when doing RF. The main issues are: Do relevant structures really exist for a given query? How can these structures can be extracted and added to the initial query ?
XML IR deals with content and structure information contained in documents. It seems therefore intuitive that relevance is linked to both content and structural informa-tion. More precisely, our intuition is that if relevant ele-ments share some particular structures, relevance is proba-bly linked to these structures, and they can be thus added to the query.
 Before applying our approach of structure-oriented relevance feedback, we propose here to confirm this assumption. We studied the partition of relevant elements against structure types. Structures are limited to simple tags (i.e section , paragraph , ...). We used the topics and relevance judge-ments provided by the INEX 2005 campaign and we only considered very specific and very exhaustive elements 1 . Table 1 presents average results for all topics. We notice that 64% of relevant elements are contained in one struc-ture type, and that when considering three structure types, 93% of relevant elements can be retrieved. These observa-tions allow to conclude that for a given query, we can find at least one relevant structure and that the main part of elements (more than 90%) are related to 3 structures. The same conclusion was obtained by Kaamps et al. in [2].
Our goal in what we call structure-oriented RF is to en-rich the initial query (CO) by adding structural constraints.
Only the exhaustivity level of elements was provided to participants. We inferred the specificity dimension accord-ing to the granularity of information. Table 1: Partition of relevant elements against structure types -Average results Average 64 85 93 Min 23 44 60 Max 100 100 100 Our approach consists in refining the initial query by adding some structures extracted from the set of judged elements that could contain the information needed by the user. The idea behind structure-oriented RF is therefore to find for each query the appropriate generic structures, called here the generative structures, shared by the greatest amount of relevant elements.
 The algorithm used to find generative structures is described in [5]. The output of the algorithm is a set of generative structures and associated  X  X elevance X  scores. In order to express the new query, we then extract the k top ranked structures and add them as structure constraints to key-words of the initial query.
We evaluate our proposals with the INEX 2005 test suite [1]. Documents in the INEX test collection are scientific articles from IEEE Computer Society marked up in XML. The collection contains over 17000 articles from 21 maga-zines/transactions published between 1995 and 2004, where an article consists in average of 1500 XML nodes. Topics and relevance judgments are done by participants. Evaluation measures are proposed by G. Kazai and M. Lal-mas [3]. The two relevance dimensions (exhaustivity 2 and specificity 3 ) are aggregated in a single value. Two quan-tizations are used: strict and generalized [3]. For a given rank i ,thevalueof nxCG [ i ] reflects the relative gain the user accumulated up to that rank, compared to the gain he/she could have attained if the system also would have produced the optimum best ranking. We use the average of nxCG [ i ], denoted MAnxCG @ i and the uninterpolated mean average effort-precision, denoted MAep . The meaning of effort-precision ( ep ) at a given gain-recall ( gr ) 4 the amount of relative effort (where effort is measured in terms of number of visited ranks) that the user is required to spend to reach a given level of gain relative to the to-tal gain that can be obtained. MAep is calculated as the average of effort-precision values measured at each natural gain-recall points.
 To study the effectiveness our relevance feedback approach, we use the relative improvement( RI ) computed as: ( MAP ( RF run )  X  MAP ( BASErun )) /M AP ( BASErun ) where MAP in case of nxCG is MAnxCG@50 and in case of ep-gr is MAep .
 The relevance feedback run is built as follows: we consider the elements judged relevant according to the exhaustivity
An exhaustive element is element which contains all the information which respond to the user X  X  needs.
A specific element is an element which contains only the information needed by the user. gain-recall is calculated as a cumulated gain value divided by the total achievable cumulated gain. dimension in the top 20 elements of the original base run (as recommanded in the INEX 2005 protocol). In our contribu-tion, the base run results correspond to the results obtained using the XFIRM system [5], which is based on a relevance propagation method. We use the same parameters as the base run to run the reformulated queries.
 We designate by S 1 , S 2 , S 3 , S 4 and S 5 the number of struc-tures added to the initial query varying from 1 to 5. When no relevant elements are found in the top 20 elements of the base run, we artificially add structure conditions to the query. These conditions are on elements that are the most often returned by systems according to [1]. We notice that RI is always positive. Results confirm our hypothesis : adding structures ables to refine unstructured query. The most important relative improvement is obtained using 3 generative structures (MAep generalized is about 19%). Moreover, results are also better than base results for the MAnxCG@50 metric. It shows that our system is able to return more relevant elements at low recall levels which is the most important in an user point of view.

S 1 4.75 15.35 4.62 5.37
S 2 7.15 11.34 5.43 1.89
S 3 19.89 9.69 4.98 0.99
S 4 8.97 11.81 5.28 2.19
S 5 8.97 11.81 5.28 2.19
In this paper, we showed that relevance of elements is closely linked to structure. We proposed a new approach of relevance feedback based on relevant structures that can be added to original CO queries. Our proposals were eval-uated using the INEX 2005 protocol. Results confirm our hypothesis concerning the refinement of queries using struc-tural contraints.
 In future work, we will try to use the complete path of ele-ments to generalize our approach to heterogenous collections (we will use for example algorithms for tree comparison). We also plan to test a content-oriented RF approach that inte-grate the semantic of element types ( title, reference, section, image, etc. ) to select relevant terms.
