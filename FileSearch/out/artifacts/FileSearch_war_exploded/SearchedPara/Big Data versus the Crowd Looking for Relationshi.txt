 Relation extraction is the problem of populating a target relation (representing an entity-level relation-ship or attribute) with facts extracted from natural-language text. Sample relations include people X  X  ti-tles, birth places, and marriage relationships.
Traditional relation-extraction systems rely on manual annotations or domain-specific rules pro-vided by experts, both of which are scarce re-sources that are not portable across domains. To remedy these problems, recent years have seen in-terest in the distant supervision approach for rela-tion extraction (Wu and Weld, 2007; Mintz et al., 2009). The input to distant supervision is a set of seed facts for the target relation together with an (unlabeled) text corpus, and the output is a set of (noisy) annotations that can be used by any ma-chine learning technique to train a statistical model for the target relation. For example, given the tar-get relation birthPlace (person, place) and a seed fact birthPlace (John, Springfield), the sentence  X  John and his wife were born in Springfield in 1946  X  (S1) would qualify as a positive training example.
Distant supervision replaces the expensive pro-cess of manually acquiring annotations that is re-quired by direct supervision with resources that al-ready exist in many scenarios (seed facts and a text corpus). On the other hand, distantly labeled data may not be as accurate as manual annotations. For example,  X  John left Springfield when he was 16  X  (S2) would also be considered a positive ex-ample about place of birth by distant supervision as it contains both John and Springfield. The hy-pothesis is that the broad coverage and high redun-dancy in a large corpus would compensate for this noise. For example, with a large enough corpus, a distant supervision system may find that patterns in the sentence S1 strongly correlate with seed facts of birthPlace whereas patterns in S2 do not qualify as a strong indicator. Thus, intuitively the quality of distant supervision should improve as we use larger corpora. However, there has been no study on the impact of corpus size on distant supervision for re-lation extraction. Our goal is to fill this gap.
Besides  X  X ig data, X  another resource that may be valuable to distant supervision is crowdsourc-ing. For example, one could employ crowd work-ers to provide feedback on whether distant super-vision examples are correct or not (Gormley et al., 2010). Intuitively the crowd workforce is a perfect fit for such tasks since many erroneous distant la-bels could be easily identified and corrected by hu-mans. For example, distant supervision may mistak-enly consider  X  Obama took a vacation in Hawaii  X  a positive example for birthPlace simply because a database says that Obama was born in Hawaii; a crowd worker would correctly point out that this sentence is not actually indicative of this relation.
It is unclear however which strategy one should use: scaling the text corpus or the amount of human feedback. Our primary contribution is to empirically assess how scaling these inputs to distant supervi-sion impacts its result quality. We study this ques-tion with input data sets that are orders of magnitude larger than those in prior work. While the largest corpus (Wikipedia and New York Times) employed by recent work on distant supervision (Mintz et al., 2009; Yao et al., 2010; Hoffmann et al., 2011) con-tain about 2M documents, we run experiments on a 100M-document (50X more) corpus drawn from ClueWeb. 1 While prior work (Gormley et al., 2010) on crowdsourcing for distant supervision used thou-sands of human feedback units, we acquire tens of thousands of human-provided labels. Despite the large scale, we follow state-of-the-art distant super-vision approaches and use deep linguistic features, e.g., part-of-speech tags and dependency parsing. 2
Our experiments shed insight on the following two questions: 1. How does increasing the corpus size impact the 2. For a given corpus size, how does increasing
We found that increasing corpus size consistently and significantly improves recall and F1, despite re-ducing precision on small corpora; in contrast, hu-man feedback has relatively small impact on preci-sion and recall. For example, on a TAC corpus with 1.8M documents, we found that increasing the cor-pus size ten-fold consistently results in statistically significant improvement in F1 on two standardized relation extraction metrics (t-test with p=0.05). On the other hand, increasing human feedback amount ten-fold results in statistically significant improve-ment on F1 only when the corpus contains at least 1M documents; and the magnitude of such improve-ment was only one fifth compared to the impact of corpus-size increment.

We find that the quality of distant supervision tends to be recall gated , that is, for any given rela-tion, distant supervision fails to find all possible lin-guistic signals that indicate a relation. By expanding the corpus one can expand the number of patterns that occur with a known set of entities. Thus, as a rule of thumb for developing distant supervision sys-tems, one should first attempt to expand the training corpus and then worry about precision of labels only after having obtained a broad-coverage corpus.
Throughout this paper, it is important to under-stand the difference between mentions and entities . Entities are conceptual objects that exist in the world (e.g., Barack Obama), whereas authors use a variety of wordings to refer to (which we call  X  X ention X ) entities in text (Ji et al., 2010). The idea of using entity-level structured data (e.g., facts in a database) to generate mention-level train-ing data (e.g., in English text) is a classic one: re-searchers have used variants of this idea to extract entities of a certain type from webpages (Hearst, 1992; Brin, 1999). More closely related to relation extraction is the work of Lin and Patel (2001) that uses dependency paths to find answers that express the same relation as in a question.

Since Mintz et al. (2009) coined the name  X  X is-tant supervision, X  there has been growing interest in this technique. For example, distant supervision has been used for the TAC-KBP slot-filling tasks (Sur-deanu et al., 2010) and other relation-extraction tasks (Hoffmann et al., 2010; Carlson et al., 2010; Nguyen and Moschitti, 2011a; Nguyen and Mos-chitti, 2011b). In contrast, we study how increas-ing input size (and incorporating human feedback) improves the result quality of distant supervision.
We focus on logistic regression, but it is interest-ing future work to study more sophisticated prob-abilistic models; such models have recently been used to relax various assumptions of distant supervi-sion (Riedel et al., 2010; Yao et al., 2010; Hoffmann et al., 2011). Specifically, they address the noisy as-sumption that, if two entities participate in a rela-tion in a knowledge base, then all co-occurrences of these entities express this relation. In contrast, we explore the effectiveness of increasing the training data sizes to improve distant-supervision quality.
Sheng et al. (2008) and Gormley et al. (2010) study the quality-control issue for collecting train-ing labels via crowdsourcing. Their focus is the col-lection process; in contrast, our goal is to quantify the impact of this additional data source on distant-supervision quality. Moreover, we experiment with one order of magnitude more human labels. Hoff-mann et al. (2009) study how to acquire end-user feedback on relation-extraction results posted on an augmented Wikipedia site; it is interesting future work to integrate this source in our experiments. One technique for obtaining human input is active learning. We tried several active-learning techniques as described by Settles (2010), but did not observe any notable advantage over uniform sampling-based example selection. 3 Relation extraction is the task of identifying re-lationships between mentions, in natural-language text, of entities. An example relation is that two per-sons are married, which for mentions of entities x and y is denoted R ( x, y ) . Given a corpus C con-taining mentions of named entities, our goal is to learn a classifier for R ( x, y ) using linguistic features of x and y , e.g., dependency-path information. The problem is that we lack the large amount of labeled examples that are typically required to apply super-vised learning techniques. We describe an overview of these techniques and the methodological choices we made to implement our study. Figure 1 illus-trates the overall workflow of a distant supervision system. At each step of the distant supervision pro-cess, we closely follow the recent literature (Mintz et al., 2009; Yao et al., 2010). 3.1 Distant Supervision Distant supervision compensates for a lack of train-ing examples by generating what are known as silver-standard examples (Wu and Weld, 2007). The observation is that we are often able to obtain a structured, but incomplete, database D that instanti-ates relations of interest and a text corpus C that con-tains mentions of the entities in our database. For-mally, a database is a tuple D = ( E,  X  R ) where E is a set of entities and  X  R = ( R 1 . . . , R N ) is a tuple of instantiated predicates. For example, R i may con-tain pairs of married people. 4 We use the facts in R i combined with C to generate examples.

Following recent work (Mintz et al., 2009; Yao et al., 2010; Hoffmann et al., 2011), we use Freebase 5 as the knowledge base for seed facts. We use two text corpora: (1) the TAC-KBP 6 2010 corpus that consists of 1.8M newswire and blog articles 7 , and (2) the ClueWeb09 corpus that is a 2009 snapshot of 500M webpages. We use the TAC-KBP slot fill-ing task and select those TAC-KBP relations that are present in the Freebase schema as targets (20 rela-tions on people and organization).

One problem is that relations in D are defined at the entity level. Thus, the pairs in such relations are not embedded in text, and so these pairs lack the linguistic context that we need to extract features, i.e., the features used to describe examples. In turn, this implies that these pairs cannot be used directly as training examples for our classifier. To generate training examples, we need to map the entities back to mentions in the corpus. We denote the relation that describes this mapping as the relation EL( e, m ) where e  X  E is an entity in the database D and m is a mention in the corpus C . For each relation R i , we generate a set of (noisy) positive examples denoted R i defined as R { ( m 1 , m 2 ) | R ( e 1 , e 2 )  X  EL ( e 1 , m 1 )  X  EL ( e As in previous work, we impose the constraint that both mentions ( m 1 , m 2 )  X  R + i are contained in the same sentence (Mintz et al., 2009; Yao et al., 2010; Hoffmann et al., 2011). To generate negative ex-amples for each relation, we follow the assumption in Mintz et al. (2009) that relations are disjoint and sample from other relations, i.e., R  X  i =  X  j 6 = i R + j 3.2 Feature Extraction Once we have constructed the set of possible men-tion pairs, the state-of-the-art technique to generate feature vectors uses linguistic tools such as part-of-speech taggers, named-entity recognizers, de-pendency parsers, and string features. Following recent work on distant supervision (Mintz et al., 2009; Yao et al., 2010; Hoffmann et al., 2011), we use both lexical and syntactic features. After this stage, we have a well-defined machine learn-ing problem that is solvable using standard super-vised techniques. We use sparse logistic regression ( ` 1 regularized) (Tibshirani, 1996), which is used in previous studies. Our feature extraction process con-sists of three steps: 1. Run Stanford CoreNLP with POS tagging and 2. Run dependency parsing on TAC with the En-3. Run a simple entity-linking system that utilizes The output of this processing is a repository of struc-tured objects (with POS tags, dependency parse, and entity types and mentions) for sentences from the training corpus. Specifically, for each pair of entity mentions ( m 1 , m 2 ) in a sentence, we extract the fol-lowing features F ( m 1 , m 2 ) : (1) the word sequence (including POS tags) between these mentions after normalizing entity mentions (e.g., replacing  X  X ohn Nolen X  with a place holder PER); if the sequence is longer than 6, we take the 3-word prefix and the 3-word suffix; (2) the dependency path between the mention pair. To normalize, in both features we use lemmas instead of surface forms. We discard fea-tures that occur in fewer than three mention pairs. 3.3 Crowd-Sourced Data Crowd sourcing provides a cheap source of human labeling to improve the quality of our classifier. In this work, we specifically examine feedback on the result of distant supervision. Precisely, we construct the union of R + 1  X  . . . R + N from Section 3.1. We then solicit human labeling from Mechanical Turk (MTurk) while applying state-of-the-art quality con-trol protocols following Gormley et al. (2010) and those in the MTurk manual. 10
These quality-control protocols are critical to en-sure high quality: spamming is common on MTurk and some turkers may not be as proficient or care-ful as expected. To combat this, we replicate each question three times and, following Gormley et al. (2010), plant gold-standard questions: each task consists of five yes/no questions, one of which comes from our gold-standard pool. 11 By retaining only those answers that are consistent with this pro-tocol, we are able to filter responses that were not answered with care or competency. We only use an-swers from workers who display overall high consis-tency with the gold standard (i.e., correctly answer-ing at least 80% of the gold-standard questions). 3.4 Statistical Modeling Issues Following Mintz et al. (2009), we use logistic re-gression classifiers to represent relation extractors. However, while Mintz et al. use a single multi-class classifier for all relations, Hoffman et al. (2011) and use an independent binary classifier for each individ-ual relation; the intuition is that a pair of mentions (or entities) might participate in multiple target rela-tions. We experimented with both protocols; since relation overlapping is rare for TAC-KBP and there was little difference in result quality, we focus on the binary-classification approach using training exam-ples constructed as described in Section 3.1.
We compensate for the different sizes of distant and human labeled examples by training an objec-tive function that allows to tune the weight of human versus distant labeling. We separately tune this pa-rameter for each training set (with cross validation), but found that the result quality was robust with re-spect to a broad range of parameter values. 12 We describe our experiments to test the hypothe-ses that the following two factors improve distant-supervision quality: increasing the (1) corpus size, and (2) the amount of crowd-sourced feedback.
 We confirm hypothesis (1), but, surprisingly, are un-able to confirm (2). Specifically, when using logis-tic regression to train relation extractors, increasing corpus size improves, consistently and significantly, the precision and recall produced by distant supervi-sion, regardless of human feedback levels. Using the methodology described in Section 3, human feed-back has limited impact on the precision and recall produced from distant supervision by itself. 4.1 Evaluation Metrics Just as direct training data are scarce, ground truth for relation extraction is scarce as well. As a result, prior work mainly considers two types of evaluation methods: (1) randomly sample a small portion of predictions (e.g., top-k) and manually evaluate pre-cision/recall; and (2) use a held-out portion of seed facts (usually Freebase) as a kind of  X  X istant X  ground truth. We replace manual evaluation with a stan-dardized relation-extraction benchmark: TAC-KBP 2010. TAC-KBP asks for extractions of 46 relations on a given set of 100 entities. Interestingly, the Free-base held-out metric (Mintz et al., 2009; Yao et al., 2010; Hoffmann et al., 2011) turns out to be heavily biased toward distantly labeled data (e.g., increasing human feedback hurts precision; see Section 4.6). 4.2 Experimental Setup Our first group of experiments use the 1.8M-doc TAC-KBP corpus for training. We exclude from it the 33K documents that contain query entities in the TAC-KBP metrics. There are two key param-eters: the corpus size (#docs) M and human feed-back budget (#examples) N . We perform different levels of down-sampling on the training corpus. On TAC, we use subsets with M = 10 3 , 10 4 , 10 5 , and 10 6 documents respectively. For each value of M , we perform 30 independent trials of uniform sam-pling, with each trial resulting in a training corpus D i , 1  X  i  X  30 . For each training corpus D perform distant supervision to train a set of logistic regression classifiers. From the full corpus, distant supervision creates around 72K training examples.
To evaluate the impact of human feedback, we randomly sample 20K examples from the input cor-pus (we remove any portion of the corpus that is used in an evaluation). Then, we ask three differ-ent crowd workers to label each example as either positive or negative using the procedure described in Section 3.3. We retain only credible answers using the gold-standard method (see Section 3.3), and use them as the pool of human feedback that we run ex-periments with. About 46% of our human labels are negative. Denote by N the number of examples that we want to incorporate human feedback for; we vary N in the range of 0 , 10 , 10 2 , 10 3 , 10 4 , and 2  X  10 For each selected corpus and value of N , we per-form without-replacement sampling from examples of this corpus to select feedback for up to N exam-ples. In our experiments, we found that on aver-age an M -doc corpus contains about 0 . 04 M distant labels, out of which 0 . 01 M have human feedback. After incorporating human feedback, we evaluate the relation extractors on the TAC-KBP benchmark. We then compute the average F1, recall, and preci-sion scores among all trials for each metric and each (M,N) pair. Besides the KBP metrics, we also eval-uate each (M,N) pair using Freebase held-out data. Furthermore, we experiment with a much larger cor-pus: ClueWeb09. On ClueWeb09, we vary M over 10 3 , . . . , 10 8 . Using the same metrics, we show at a larger scale that increasing corpus size can signifi-cantly improve both precision and recall. 4.3 Overall Impact of Input Sizes We first present our experiment results on the TAC corpus. As shown in Figure 2, the F1 graph closely tracks the recall graph, which supports our earlier claim that quality is recall gated (Section 1). While increasing the corpus size improves F1 at a roughly log-linear rate, human feedback has little impact un-til both corpus size and human feedback size ap-proch maximum M, N values. Table 1 shows the quality comparisons with minimum/maximum val-ues of M and N . 13 We observe that increasing the corpus size significant improves per-relation recall and F1 on 17 out of TAC-KBP X  X  20 relations; in con-trast, human feedback has little impact on recall, and only significantly improves the precision and F1 of 9 relations  X  while hurting F1 of 2 relations (i.e., MemberOf and LivesInCountry ). 14 4.4 Impact of Corpus Size In Figure 3(a) we plot a projection of the graphs in Figure 2 to show the impact of corpus size on distant-supervision quality. The two curves corre-spond to when there is no human feedback and when we use all applicable human feedback. The fact that the two curves almost overlap indicates that hu-man feedback had little impact on precision or re-call. On the other hand, the quality improvement rate is roughly log-linear against the corpus size. Recall that each data point in Figure 2 is the aver-age from 30 trials. To measure the statistical signif-icance of changes in F1, we calculate t-test results to compare adjacent corpus size levels given each fixed human feedback level. As shown in Table 2(a), increasing the corpus size by a factor of 10 consis-tently and significantly improves F1. Although pre-cision decreases as we use larger corpora, the de-creasing trend is sub-log-linear and stops at around 100K docs. On the other hand, recall and F1 keep increasing at a log-linear rate. 4.5 Impact of Human Feedback Figure 3(b) provides another perspective on the re-sults under the TAC metric: We fix a corpus size and plot the F1, recall, and precision as functions of human-feedback amount. Confirming the trend in Figure 2, we see that human feedback has little impact on precision or recall with both corpus sizes.
We calculate t-tests to compare adjacent human feedback levels given each fixed corpus size level. Table 2(b) X  X  last row reports the comparison, for var-ious corpus sizes (and, hence, number of distant la-bels), of (i) using no human feedback and (ii) using all of the human feedback we collected. When the corpus size is small (fewer than 10 5 docs), human feedback has no statistically significant impact on F1. The locations of +  X  X  suggest that the influence of human feedback becomes notable only when the corpus is very large (say with 10 6 docs). However, comparing the slopes of the curves in Figure 3(b) against Figure 3(a), the impact of human feedback is substantially smaller. The precision graph in Fig-ure 3(b) suggests that human feedback does not no-tably improve precision on either the full corpus or on a small 1K-doc corpus. To assess the quality of human labels, we train extraction models with hu-man labels only (on examples obtained from distant supervision). We vary the amount of human labels and plot the F1 changes in Figure 4. Although the F1 improves as we use more human labels, the best model has roughly the same performance as those trained from distant labels (with or without human labels). This suggests that the accuracy of human labels is not substantially better than distant labels. 4.6 Freebase Held-out Metric In addition to the TAC-KBP benchmark, we also fol-low prior work (Mintz et al., 2009; Yao et al., 2010; Hoffmann et al., 2011) and measure the quality us-ing held-out data from Freebase. We randomly par-tition both Freebase and the corpus into two halves. One database-corpus pair is used for training and the other pair for testing. We evaluate the precision over the 10 3 highest-probability predictions on the test set. In Figure 5, we vary the size of the corpus in the train pair and the number of human labels; the pre-cision reaches a dramatic peak when we the corpus size is above 10 5 and uses little human feedback. This suggests that this Freebase held-out metric is biased toward solely relying on distant labels alone. 4.7 Web-scale Corpora To study how a Web corpus impacts distant-supervision quality, we select the first 100M English webpages from the ClueWeb09 dataset and measure how distant-supervision quality changes as we vary the number of webpages used. As shown in Fig-ure 6, increasing the corpus size improves F1 up to 10 7 docs ( p = 0 . 05) , while at 10 8 the two-tailed significance test reports no significant impact on F1 ( p = 0 . 05) . The dip in precision in Figure 6 from 10 6 to either 10 7 or 10 8 is significant ( p = 0 . 05 ), and it is interesting future work to perform a de-tailed error analysis. Recall from Section 3 that to preprocess ClueWeb we use MaltParser instead of Ensemble. Thus, the F1 scores in Figure 6 are not comparable to those from the TAC training corpus. We study how the size of two types of cheaply avail-able resources impact the precision and recall of dis-tant supervision: (1) an unlabeled text corpus from which distantly labeled training examples can be ex-tracted, and (2) crowd-sourced labels on training examples. We found that text corpus size has a stronger impact on precision and recall than human feedback. We observed that distant-supervision sys-tems are often recall gated ; thus, to improve distant-supervision quality, one should first try to enlarge the input training corpus and then increase precision.
It was initially counter-intuitive to us that human labels did not have a large impact on precision. One reason is that human labels acquired from crowd-sourcing have comparable noise level as distant la-bels  X  as shown by Figure 4. Thus, techniques that improve the accuracy of crowd-sourced answers are an interesting direction for future work. We used a particular form of human input (yes/no votes on dis-tant labels) and a particular statistical model to in-corporate this information (logistic regression). It is interesting future work to study other types of human input (e.g., new examples or features) and more sophisticated techniques for incorporating hu-man input, as well as machine learning methods that explicitly model feature interactions. We gratefully acknowledge the support of the Defense Advanced Research Projects Agency (DARPA) Machine Reading Program under Air Force Research Laboratory (AFRL) prime contract no. FA8750-09-C-0181. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the view of DARPA, AFRL, or the US government. We are thankful for the gen-erous support from the Center for High Through-put Computing, the Open Science Grid, and Miron Livny X  X  Condor research group at UW-Madison. We are also grateful to Dan Weld for his insightful com-ments on the manuscript.

