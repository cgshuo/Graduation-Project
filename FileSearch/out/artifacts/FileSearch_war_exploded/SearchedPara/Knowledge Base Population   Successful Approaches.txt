 Traditional information extraction (IE) evaluations, such as the Message Understanding Conferences (MUC) and Automatic Content Extraction (ACE), assess the ability to extract information from indi-vidual documents in isolation. In practice, how-ever, we may need to gather information about a person or organization that is scattered among the documents of a large collection. This requires the ability to identify the relevant documents and to integrate facts, possibly redundant, possibly com-plementary, possibly in conflict, coming from these documents. Furthermore, we may want to use the extracted information to augment an existing data base. This requires the ability to link indi-viduals mentioned in a document, and information about these individuals, to entries in the data base. On the other hand, traditional Question Answering (QA) evaluations made limited efforts at disam-biguating entities in queries (e.g. Pizzato et al., 2006), and limited use of relation/event extraction in answer search (e.g. McNamee et al., 2008). The Knowledge Base Population (KBP) shared task, conducted as part of the NIST Text Analysis Conference, aims to address and evaluate these capabilities, and bridge the IE and QA communi-ties to promote research in discovering facts about entities and expanding a knowledge base with these facts. KBP is done through two separate sub-tasks, Entity Linking and Slot Filling; in 2010, 23 teams submitted results for one or both sub-tasks. A variety of approaches have been proposed to address both tasks with considerable success; nev-ertheless, there are many aspects of the task that remain unclear. What are the fundamental tech-niques used to achieve reasonable performance? What is the impact of each novel method? What types of problems are represented in the current KBP paradigm compared to traditional IE and QA? In which way have the current testbeds and evalua-tion methodology affected our perception of the task difficulty? Have we reached a performance ceiling with current state of the art techniques? What are the remaining challenges and what are the possible ways to address these challenges? In this paper we aim to answer some of these ques-tions based on our detailed analysis of evaluation results. This section will summarize the tasks conducted at KBP 2010. The overall goal of KBP is to auto-matically identify salient and novel entities, link them to corresponding Knowledge Base (KB) en-tries (if the linkage exists), then discover attributes about the entities, and finally expand the KB with any new attributes. In the Entity Linking task, given a person (PER), organization (ORG) or geo-political entity (GPE, a location with a government) query that consists of a name string and a background document contain-ing that name string, the system is required to pro-vide the ID of the KB entry to which the name refers; or NIL if there is no such KB entry. The background document, drawn from the KBP cor-pus, serves to disambiguate ambiguous name strings. 
In selecting among the KB entries, a system could make use of the Wikipedia text associated with each entry as well as the structured fields of each entry. In addition, there was an optional task where the system could only make use of the struc-tured fields; this was intended to be representative of applications where no backing text was avail-able. Each site could submit up to three runs with different parameters. The goal of Slot Filling is to collect from the cor-pus information regarding certain attributes of an entity, which may be a person or some type of or-ganization. Each query in the Slot Filling task con-sists of the name of the entity, its type (person or organization), a background document containing the name (again, to disambiguate the query in case there are multiple entities w ith the same name), its node ID (if the entity appears in the knowledge base), and the attributes which need not be filled. Attributes are excluded if they are already filled in the reference data base and can only take on a sin-gle value. Along with each slot fill, the system must provide the ID of a document which supports the correctness of this fill. If the corpus does not provide any information for a given attribute, the system should generate a NIL response (and no document ID). KBP2010 defined 26 types of at-tributes for persons (such as the age, birthplace, spouse, children, job title, and employing organiza-tion) and 16 types of attributes for organizations (such as the top employees, the founder, the year founded, the headquarters location, and subsidiar-ies). Some of these attributes are specified as only taking a single value (e.g., birthplace), while some can take multiple values (e.g., top employees). The reference KB includes hundreds of thousands of entities based on articles from an October 2008 dump of English Wikipedia which includes 818,741 nodes. The source collection includes 1,286,609 newswire documents, 490,596 web documents and hundreds of transcribed spoken documents. To score Entity Linking, we take each query and check whether the KB node ID (or NIL) returned by a system is correct or not. Then we compute the Micro-averaged Accur acy, computed across all queries. To score Slot Filling, we first pool all the system responses (as is done for information retrieval evaluations) together with a set of manually-prepared slot fills. These responses are then as-sessed by hand. Equivalent answers (such as  X  X ill Clinton X  and  X  X illiam Jefferson Clinton X ) are grouped into equivalence classes. Each system response is rated as correct, wrong, or redundant (a response which is equivalent to another response for the same slot or an entry already in the knowl-edge base). Given these judgments, we count In Entity Linking, we saw a general improvement in performance over last year X  X  results  X  the top system achieved 85.78% micro-averaged accuracy. When measured against a benchmark based on in-ter-annotator agreement, two systems X  perform-ance approached and one system exceeded the benchmark on person entities. 3.1 A General Architecture A typical entity linking system architecture is de-picted in Figure 1. It includes three steps: (1) query expansion  X  ex-pand the query into a richer set of forms using Wikipedia structure mining or coreference resolu-tion in the background document. (2) candidate generation  X  finding all possible KB entries that a query might link to; (3) candidate ranking  X  rank the probabilities of all candidates and NIL answer. ploited different approaches at each step. In the following subsections we will highlight the new and effective techniques used in entity linking. 3.2 Wikipedia Structure Mining Wikipedia articles are peppered with structured information and hyperlinks to other (on average 25) articles (Medelyan et al., 2009). Such informa-tion provides additional sources for entity linking: (1). Query Expansion: For example, WebTLab (Fernandez et al., 2010) used Wikipedia link struc-ture (source, anchors, redirects and disambigua-tion) to extend the KB and compute entity co-occurrence estimates. Many other teams including CUNY and Siel used redirect pages and disam-biguation pages for query expansion. The Siel team also exploited bold texts fr om first paragraphs be-cause they often contain nicknames, alias names and full names. (2). Candidate Ranking: Stanford-UBC used Wikipedia hyperlinks (clarification, disambigua-tion, title) for query re-ma pping, and encoded lexi-cal and part-of-speech features from Wikipedia articles containing hyperlinks to the queries to train a supervised classifier; they reported a significant improvement on micro-averaged accuracy, from 74.85% to 82.15%. In fact, when the mined attrib-utes become rich enough, they can be used as an expanded query and sent into an information re-trieval engine in order to obtain the relevant source documents. Budapestacad team (Nemeskey et al., 2010) adopted this strategy. 3.3 Ranking Approach Comparison The ranking approaches exploited in the KBP2010 entity linking systems can be generally categorized into four types: (1). Unsupervised or w eakly-supervised learning, in which annotated data is minimally used to tune thresholds and parameters. The similarity measure is largely based on the unlabeled contexts. (2). Supervised learning, in which a pair of entity and KB node is modeled as an instance for classi-fication. Such a classifier can be learned from the annotated training data based on many different features. (3). Graph-based ranking, in which context entities are taken into account in order to reach a global optimized solution together with the query entity. (4). IR (Information Retrieval) approach, in which the entire background source document is consid-ered as a single query to retrieve the most relevant Wikipedia article. 
The first question we will investigate is how much higher performance can be achieved by us-ing supervised learning? Among the 16 entity link-ing systems which participated in the regular evaluation, LCC (Lehmann et al., 2010), HLTCOE (McNamee, 2010), Stanford-UBC (Chang et al., 2010), NUSchime (Zhang et al., 2010) and UC3M (Pablo-Sanchez et al., 2010) have explicitly used supervised classification based on many lexical and name tagging features, and most of them are ranked in top 6 in the evaluation. Therefore we can conclude that supervised learning normally leads to a reasonably good performance. However, a high-performing entity linking system can also be im-plemented in an unsupervised fashion by exploit-ing effective characteristics and algorithms, as we will discuss in the next sections. 3.4 Semantic Relation Features Almost all entity linking systems have used seman-tic relations as features (e.g. BuptPris (Gao et al., 2010), CUNY (Chen et al., 2010) and HLTCOE). The semantic features used in the BuptPris system include name tagging, infoboxes, synonyms, vari-ants and abbreviations. In the CUNY system, the semantic features are automatically extracted from their slot filling system. The results are summa-rized in Table 2, showing the gains over a baseline system (using only Wikipedia title features in the case of BuptPris, using tf-idf weighted word fea-tures for CUNY). As we can see, except for person entities in the BuptPris system, all types of entities have obtained significant improvement by using semantic features in entity linking. Table 2. Impact of Semantic Features on Entity 3.5 Context Inference In the current setting of KBP, a set of target enti-ties is provided to each system in order to simplify the task and its evaluati on, because it X  X  not feasible to require a system to generate answers for all pos-sible entities in the entire source collection. How-ever, ideally a fully-automatic KBP system should be able to automatically discover novel entities ( X  X ueries X ) which have no KB entry or few slot fills in the KB, extract their attributes, and conduct global reasoning over these attributes in order to generate the final output. At the very least, due to the semantic coherence principle ( McNamara , 2001 ), the information of an entity depends on the information of other entities. For example, the WebTLab team and the CMCRC team extracted all entities in the context of a given query, and disam-biguated all entities at the same time using a Pag-eRank-like algorithm (Page et al., 1998) or a Graph-based Re-ranking algorithm. The SMU-SIS team (Gottipati and Jiang, 2010) re-formulated queries using contexts. The LCC team modeled contexts using Wikipedia page concepts, and com-puted linkability scores iteratively. Consistent im-provements were reported by the WebTLab system (from 63.64% to 66.58%). 4.1 Comparison with Traditional Cross-Part of the entity linking task can be modeled as a cross-document entity resolution problem which includes two principal challenges: the same entity can be referred to by more than one name string and the same name string can refer to more than one entity. The research on cross-document entity coreference resolution can be traced back to the Web People Search task (Artiles et al., 2007) and ACE2008 (e.g. Baron and Freedman, 2008). Compared to WePS and ACE, KBP requires link-ing an entity mention in a source document to a knowledge base with or without Wikipedia arti-cles. Therefore sometimes the linking decisions heavily rely on entity profile comparison with Wikipedia infoboxes. In addition, KBP introduced GPE entity disambiguation. In source documents, especially in web data, usually few explicit attrib-utes about GPE entities are provided, so an entity linking system also needs to conduct external knowledge discovery fro m background related documents or hyperlink mining. 4.2 Analysis of Difficult Queries There are 2250 queries in the Entity Linking evaluation; for 58 of them at most 5 (out of the 46) system runs produced correct answers. Most of these queries have corresponding KB entries. For 19 queries all 46 systems produced different results from the answer key. Interestingly, the systems which perform well on the difficult queries are not necessarily those achieved top overall performance  X  they were ranked 13 rd , 6 th , 5 th , 12 nd , 10 th , and 16 respectively for overall queries. 11 queries are highly ambiguous city names which can exist in many states or countries (e.g.  X  X hester X ), or refer to person or organization entities. From these most difficult queries we observed the following chal-lenges and possible solutions.  X  Require deep understanding of context enti-In a document where the query entity is not a cen-tral topic, the author often assumes that the readers have enough background know ledge ( X  X nchor X  lo-cation from the news release information, world knowledge or related documents) about these enti-ties. For 6 queries, a system would need to inter-pret or extract attributes for their context entities. For example, in the following passage: in order to identify that the query  X  Brentwood  X  is located in California, a system will need to under-stand that  X  IHJ  X  is  X  I heart Jake community  X  and that the  X  Jake  X  referred to lives in Los Angeles, of which Brentwood is a part. 
In the following example, a system is required to capture the knowledge that  X  Chinese Christian man  X  normally appears in  X  China  X  or there is a  X  Mission School  X  in  X  Canton, China  X  in order to link the query  X  Canton  X  to the correct KB entry. This is a very difficult query also because the more common way of spelling  X  Canton  X  in China is  X  Guangdong  X .  X  Require external hyperlink analysis Some queries require a system to conduct detailed analysis on the hyperlinks in the source document or the Wikipedia document. For example, in the source document  X  ...Filed under: Falcons &lt;http://sports.aol.com/fanhouse/category/atlanta-falcons/&gt;  X , a system will need to analyze the document which this hyperlink refers to. Such cases might require new query reformulation and cross-document aggregation techniques, which are both beyond traditional entity disambiguation paradigms.  X  Require Entity Salience Ranking Some of these queries represent salient entities and so using web popularity rank (e.g. ranking/hit counts of Wikipedia pages from search engine) can yield correct answers in most cases (Bysani et al., 2010; Dredze et al., 2010). In fact we found that a na X ve candidate ranking approach based on web popularity alone can achieve 71% micro-averaged accuracy, which is better than 24 system runs in KBP2010. 
Since the web information is used as a black box (including query expansion and query log analysis) which changes over time, it X  X  more difficult to du-plicate research results. However, gazetteers with entities ranked by salience or major entities marked are worth encoding as additional features. For example, in the following passages: although there is little bac kground information to decide where the query  X  St Louis  X  is located, a sys-tem can rely on such a major city list to generate the correct linking. Similarly, if a system knows that  X  Georgia Institute of Technology  X  has higher salience than  X  Georgian Technical University  X , it can correctly link a query  X  Georgia Tech  X  in most cases. 5.1 A General Architecture The slot-filling task is a hybrid of traditional IE (a fixed set of relations) and QA (responding to a query, generating a unified response from a large collection). Most participants met this challenge through a hybrid system which combined aspects of QA (passage retrieval) and IE (answer extrac-tion). A few used off-the-shelf QA, either bypass-ing question analysis or (if QA was used as a  X  X lack box X ) creating a set of questions corre-sponding to each slot. three phases: document/passage retrieval (retriev-ing passages involving the queried entity), answer extraction (getting specific answers from the re-trieved passages), and answer combination (merg-ing and selecting among the answers extracted). The solutions adopted for answer extraction re-flected the range of current IE methods as well as QA answer extraction techniques (see Table 3). Most systems used one main pipeline, while CUNY and BuptPris adopted a hybrid approach of combining multiple approaches. 
One particular challenge for KBP, in compari-son with earlier IE tasks, was the paucity of train-ing data. The official training data, linked to specific text from specific documents, consisted of responses to 100 queries; the participants jointly prepared responses to another 50. So traditional supervised learning, based directly on the training data, would provide limited coverage. Coverage could be improved by usi ng the training data as seeds for a bootstrapping procedure. Figure 2. General Slot Filling System Architecture On the other hand, there were a lot of 'facts' avail-able  X  pairs of entities bearing a relationship corre-sponding closely to the KBP relations  X  in the form of filled Wikipedia infoboxes. These could be used for various forms of indirect or distant learn-ing, where instances in a la rge corpus of such pairs are taken as (positive) training instances. How-ever, such instances are noisy  X  if a pair of entities participates in more than one relation, the found instance may not be an example of the intended relation  X  and so some filtering of the instances or resulting patterns may be needed. Several sites used such distant supervision to acquire patterns or train classifiers, in some cases combined with di-rect supervision using th e training data (Chrupala et al., 2010). Several groups used and extended existing rela-tion extraction systems, and then mapped the re-sults into KBP slots. Mapping the ACE relations and events by themselves provided limited cover-age (34% of slot fills in the training data), but was helpful when combined with other sources (e.g. CUNY). Groups with more extensive existing ex-traction systems could primarily build on these (e.g. LCC, IBM). For example, IBM (Castelli et al., 2010) ex-tended their mention detec tion component to cover 36 entity types which include many non-ACE types; and added new relation types between enti-ties and event anchors. LCC and CUNY applied active learning techniques to cover non-ACE types of entities, such as  X  X rigin X ,  X  X eligion X ,  X  X itle X ,  X  X harge X ,  X  X eb-site X  and  X  X ause-of-death X , and effectively develop lexicons to filter spurious an-swers. Top systems also benefited from customizing and tightly integrating their recently enhanced extrac-tion techniques into KBP. For example, IBM, NYU (Grishman and Min, 2010) and CUNY ex-ploited entity coreference in pattern learning and reasoning. It is also notable that traditional extrac-tion components trained from newswire data suffer from noise in web data. In order to address this problem, IBM applied their new robust mention detection techniques for noisy inputs (Florian et al., 2010); CUNY developed a component to recover structured forms such as tables in web data auto-matically and filter spurious answers. 5.2 Use of External Knowledge Base Many instance-centered knowledge bases that have harvested Wikipedia are proliferating on the se-mantic web. The most well known are probably the Wikipedia derived resources, including DBpe-dia (Auer 2007), Freebase (Bollacker 2008) and YAGO (Suchanek et al., 2007) and Linked Open Data (http://data.nytimes.com/). The main motiva-tion of the KBP program is to automatically distill information from news a nd web unstructured data instead of manually constructed knowledge bases, but these existing knowledge bases can provide a large number of seed tuples to bootstrap slot filling or guide distant learning. 
Such resources can also be used in a more direct way. For example, CUNY exploited Freebase and LCC exploited DBpedia as fact validation in slot filling. However, most of these resources are manually created from single data modalities and only cover well-known entities. For example, while Freebase contains 116 million instances of 7,300 relations for 9 million entities, it only covers 48% of the slot types and 5% of the slot answers in KBP2010 evaluation data. Therefore, both CUNY and LCC observed limited gains from the answer validation approach from Freebase. Both systems gained about 1% improvement in recall with a slight loss in precision. 5.3 Cross-Slot and Cross-Query Reasoning Slot Filling can also benefit from extracting re-vertible queries from the context of any target query, and conducting global ranking or reasoning to refine the results. CUNY and IBM developed recursive reasoning components to refine extrac-tion results. For a given query, if there are no other related answer candidates available, they built "re-vertible X  queries in the contexts, similar to (Prager et al., 2006), to enrich the inference process itera-tively. For example, if a is extracted as the answer for org:subsidiaries of the query q , we can con-sider a as a new revertible query and verify that a org:parents answer of a is q . Both systems signifi-cantly benefited from recursive reasoning (CUNY F-measure on training data was enhanced from 33.57% to 35.29% and IBM F-measure was en-hanced from 26% to 34.83%). Slot filling remains a very challenging task; only one system exceeded 30% F-measure on the 2010 evaluation. During the 2010 evaluation data anno-tation/adjudication process, an initial answer key annotation was created by a manual search of the corpus (resulting in 797 instances), and then an independent adjudication pass was applied to as-sess these annotations together with pooled system responses. The Precision, Recall and F-measure for the initial human annotation are only about 70%, 54% and 61% respectively. While we believe the annotation consistency can be improved, in part by refinement of the annotation guidelines, this does place a limit on system performance. Most of the shortfall in system performance re-flects inadequacies in the answer extraction stage, reflecting limitations in the current state-of-the-art in information extraction. An analysis of the 2010 training data shows that cross-sentence coreference and some types of inference are critical to slot fill-ing. In only 60.4% of the cases do the entity name and slot fill appear together in the same sentence, so a system which processes sentences in isolation is severely limited in its performance. 22.8% of the cases require cross-se ntence (identity) corefer-ence; 15% require some cross-sentence inference and 1.8% require cross-slot inference. The infer-ences include:  X  Non-identity coreference: in the following pas- X  Cross-slot inference based on revertible que-KBP Slot Filling is similar to ACE Relation Ex-traction, which has been ex tensively studied for the past 7 years. However, the amount of training data is much smaller, forcing sites to adjust their train-ing strategies. Also, some of the constraints of ACE relation mention extraction  X  notably, that both arguments are present in the same sentence  X  are not present, making the role of coreference and cross-sentence inference more critical. factors, while generally recognized, is emphasized by examining the 163 slot values that the human annotators filled but that none of the systems were able to get correct. Many of these difficult cases involve a combination of problems, but we esti-mate that at least 25% of the examples involve coreference which is beyond current system capa-bilities, such as nominal anaphors: (underlined phrases are coreferential). 
While the types of inferences which may be re-quired is open-ended, certain types come up re-peatedly, reflecting the types of slots to be filled: systems would benefit from specialists which are able to reason about times, locations, family rela-tionships, and employment relationships. The increasing number of diverse approaches based on different resources provide new opportu-nities for both entity linking and slot filling tasks to benefit from system combination. The NUSchime entity linking system trained a SVM based re-scoring model to combine two indi-vidual pipelines. Only one feature based on confi-dence values from the pipelines was used for re-scoring. The micro-averaged accuracy was en-hanced from 79.29%/79.07% to 79.38% after combination. We also applied a voting approach on the top 9 entity linking systems and found that all combination orders achieved significant gains, with the highest absolute improvement of 4.7% in micro-averaged accuracy over the top entity link-ing system. 
The CUNY slot filling system trained a maxi-mum-entropy-based re-ranking model to combine three individual pipelines, based on various global features including voting and dependency rela-tions. Significant gain in F-measure was achieved: from 17.9%, 27.7% and 21.0% (on training data) to 34.3% after combination. When we applied the same re-ranking approach to the slot filling sys-tems which were ranked from the 2 nd to 14 th , we achieved 4.3% higher F-score than the best of these systems. Compared to traditional IE and QA tasks, KBP has raised some interesting and important research is-sues: It places more emphasis on cross-document entity resolution which received limited effort in ACE; it forces systems to deal with redundant and conflicting answers across large corpora; it links the facts in text to a knowledge base so that NLP and data mining/database communities have a bet-ter chance to collaborate; it provides opportunities to develop novel training methods such as distant (and noisy) supervision through Infoboxes (Sur-deanu et al., 2010; Chen et al., 2010). In this paper, we provided detailed analysis of the reasons which have made KBP a more challenging task, shared our observations and lessons learned from the evaluation, and suggested some possible research directions to address these challenges which may be helpful for current and new partici-pants, or IE and QA researchers in general. 
