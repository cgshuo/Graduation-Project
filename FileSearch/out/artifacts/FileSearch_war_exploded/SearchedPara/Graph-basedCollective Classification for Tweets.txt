 In this paper, we address the problem of classifying tweet-s into topical categories. Because of the short, noisy and ambiguous nature of tweets, we propose to collectively con-duct the classification by exploiting the context information (i.e. related tweets) other than individually as in conven-tional text classification methods. In particular, we augment the content-based representation of text with tweets sharing same #hashtag or URL, which results in a tweet graph. We then formulate the tweet classification task under a graph optimization framework. We investigate three popular ap-proaches, namely, Loopy Belief Propagation (LBP), Relax-ation Labeling (RL), and Iterative Classification Algorithm (ICA). Extensive experiment results show that the graph-based tweet classification approach remarkably improves the performance, while the ICA model with relationship of shar-ing the same #hashtag gives the best result on separate tweet graph.
 H.3.2 [ Information Storage ]: Record Classification; H.4.m [ Information Systems Applications ]: Miscellaneous Algorithms, Experimentation Tweet classification, graph-based classification Th e work was done when the first author was intern at Microsoft Research Asia
Twitter 1 has been an extremely popular channel that en-ables people to post short messages (i.e. tweets) up to 140 characters. People post tweets talking about various topics, such as breaking news, events, celebrities, and even status update, which makes Twitter a huge repository of super-fresh information. It has been reported that about 230 mil-lion tweets were published per day in September 2011 2 , and the number keeps increasing rapidly. Consequently, users are more and more interested in searching and navigating tweets in their daily life. For instance, users tend to search Twitter for real time information, second language learn-ing [1], promotion and branding [2], collaboration [3], and so on. Nevertheless, the huge amount of volume of tweets raises challenges for presenting the search or navigation re-sults for common users. More importantly, about 40% [4] of tweets are status updates, such as,  X  Just woke up and had halwa puri and breakfast  X . These tweets simply describe feel-ings and activities of individuals, which are meaningless to most people 3 .

There is an imperative need to organize tweets in terms of categories, and text classification offers an effective and effi-cient way to consume the tweets in either searching or nav-igation scenarios. Several web sites (e.g. TweetMeme 4 ) or-ganize tweets by thematic categories according to the popu-lar URLs shared in them. Some research also has been made recently. Sandra Garcia Esparza et al. [6] used Bag-of-Words model to categorize messages related to five product types on Twitter and Bippr with unigram features extracted from original text. Bharath et al. (2010) exploited a small set of domain-specific features extracted from tweets and users X  profiles for classification [8]. And Daniele Vitale et al. (2012) expanded Bag-of-Words model with the features extracted from Wikipedia [9] to recommend categories for short tex-t like tweet. However, classifying short text through local features encounters a common semantic gap problem due to the data sparseness. The short, noisy and ambiguous nature of tweets contributes to the fact that tweets do not provide h ttp://twitter.com http://bit.ly/OmJHsc
Particular readers may be interested in this kind of infor-mation. For example, the fans of Lady Gaga might like the example tweet if it is posted by her. We do not consider such special information needs in the paper. http://tweetmeme.com/ su fficient word co-occurrence or statistical information for effective similarity measurement, which is critical for con-ventional classification methods [5]. However, research on collective classification demonstrates that similar topics in related document help to boost the document classification with additional neighborhood information [7]. We consider to exploiting relationships among tweets to tackle the issues in tweet classification.

Tweets are connected to each other through different re-lations. Though there could be many different ways to link two tweets, in this paper, we are particularly interested in two kinds of relationships among tweets. First, tweets are usually connected together through #hashtags, which can be coarsely viewed as user-annotated topics. It has been widely recognized that tweets with the same #hashtags have a high probability that they belongs to the same category. The investigation results on 715 tweets indicate that 74% of tweets sharing common #hashtags have the identical cate-gory. Second, twitter users commonly post their comments to news articles as tweets and embed the news links in them. We can also have the assumption that tweets containing the same URLs would be more likely to be classified into the same category. Therefore, we propose to collectively con-duct the classification by exploiting the context information (i.e. related tweets) other than individually as in convention-al text classification methods. In particular, we augment the content-based representation of text with tweets shar-ing same #hashtag or URL, to build a tweet graph. The tweet classification task is then formulated under a graph optimization framework. We investigate three popular ap-proaches, namely, Loopy Belief Propagation (LBP), Relax-ation Labeling (RL), as well as Iterative Classification Algo-rithm (ICA) [7]. We have conducted extensive experiments on a real-life data set. Our experimental results lead to the following conclusions:
We exploit context information, e.g. the related tweets, for the task of tweet classification, augmenting the content-based representation of a tweet with its neighborhood as a tweet graph G = &lt; V,E &gt; , where each node v i  X  V,i [1 , | V | ] represents a tweet, and each edge e = &lt; v i ,v E,i,j  X  [1 , | V | ] is inserted if the corresponding tweets of v and v j are associated with certain relationship. In this pa-per, we particularly focus on two types of relations that con-nect tweets through similar topics: sharing the same #hash-tag and containing the same URL.

We classify the tweets collectively using graph-based clas-sification methods. Collective classification algorithm cate-gorizes multiple items in a joint fashion by integrating neigh-boring information [7]. An item is assumed only to be in-fluenced by its neighbors. Long distance relations among items are omitted. It assigns the most probable category for the item by minimizing the zero-one loss or error-rate. We employ LBP, RL, and ICA algorithms to gain a deep understanding of category distribution of tweets, which is calculated according to formula 1.

Where t i and t j are the i th and j th tweets.  X  i is the local content information of t i . N ( t i ) represents the neighbor collection of t i . C is the category collection. And c k c are the k th and l th categories.  X  ( t i ) denotes the category of t i .  X  refers to the clique potential function, which takes category distribution from neighborhood into consideration. And  X  denotes the local potential function, estimating the category distribution based on content information.
We use the standard computation of  X  in the above three graph-based collective classification algorithms. An ensem-ble content-based classifier is learned to initialize  X  , consist-ing of three sub-classifiers, which are denoted by MTEXT, MTAG, and MURL. The ensemble classifier is formulated as equation 2
Where Pr T EXT , Pr MT AG , and Pr MURL are the category distribution of tweets estimated by MTEXT, MTAG, and MURL.  X  ,  X  , and  X  are the weights of the sub-classifiers, which are learned by LIBSVM 5 , taking the output of them as the features.

MTEXT is a linear Bag-of-Words model trained from pure textual content of tweets. We extract unigrams and bigrams from the tweet content as features. Because of the length restriction, non-stop words repeat not many times in one tweet. Thus, we replace the TFIDF score of the term with whether it appearing in tweet or not in the Bag-of-Words model. MTAG and MURL are two classifiers categorizing tweets through the #hashtag and the URL they share re-spectively. We observe that, after removing stop words, about 60% of words in the corpus appear less than three times. Data sparseness is serious. Conversely, some #hash-tags (e.g. #football) and URLs appear in a certain category frequently. Therefore, we first predict the category distri-bution of #hashtags and URLs by applying MTEXT on a collection of tweets sharing them. Then MTAG and MURL adopt a weighted voting mechanism to classify the tweets based on learned knowledge. We do not use #hashtags and URLs directly as features in MTEXT because it possesses a high dimensional unigram and bigram feature space. The category information of them will be submerged. Formula 3 shows the voting mechanism of MTAG and MURL.

Where M i is the collection of #hashtags or URLs con-tained in t i . Pr (  X  ( m ij ) = c k ) represents the category dis-tribution of corresponding #hashtags or URLs, which is es-timated on a group of tweets containing m ij by MTEXT.
LI BSVM: http://www.csie.ntu.edu.tw/ cjlin/libsvm
Setup : The topical categories are usually pre-defined in terms of application scenarios. In this paper, we organize tweets by seven thematic categories: Entertainment(EN) , Politics(PL) , Science &amp; Technology(ST) , Lifestyle(LS) , Busi-ness &amp; Products(BP) , Sports(SP) , and others . The first six are the six most popular and informational topics user-s shared on Twitter. Pointless tweets like status updates and spams are excluded from informational topics in this work. We set a noisy category others to contain them. This category taxonomy is compatible to existing news portals.
We collect 25 million English tweets published in five days in September, 2010. Six types of tweets which either are ob-vious spams or mysterious fragments are filtered before the experiment. First, tweets including more than three trend-ing topics; second, tweets half of whose words are #hash-tags; third, tweets half of whose words are mentions of a user name; fourth, tweets whose out of vocabulary words accounts for more than 30% of the total words; fifth, tweets consisting of less than 5 words; last, URL fragments tweets, in which the content of the tweets is part of text in the URL they share.

After filtering, we randomly sample 5000 tweets as the ex-perimental data from the remaining. Table 1 shows the dis-tribution of sampled data over the seven categories. We can see that the distribution of tweets over the seven categories is seriously unbalanced. More than half of the tweets are la-beled as others , while Science &amp; Technology tweets account for less than 1%. For #hashtags and URLs categorization in graph initializing, we collect tweets in the remaining cor-pus except the 5000 sampled ones. At least 50 tweets are selected for each #hashtag and URL. Those have less than 50 tweets will not be categorized.
 T able 1: Distribution of test data over the seven categories
The classical Bag-of-Words model using unigram and bi-gram features is implemented as the baseline system in our experiments. The ensemble classifier in section 3 is estab-lished as another baseline, combining the classifier trained from #hashtag and URL features. The five-fold cross-validation is conducted to learn the two classifiers. Table 2 shows the classification results of them.

The ensemble classifier outperforms the Bag-of-Words mod-el measured by the f-score, while the accuracy almost re-mains the same. According to our analysis, the category in-formation of #hashtags and URLs alleviates the preference of major category of Bag-of-Words model. We can see from the Figure 1 that the classification results of all the first six categories, accounting for less than 40% of the tweets, are improved. Especially, the recall of them increased except sports category, which means the number of informational tweets misclassified to noise category diminishes. One disap-pointing fact is the precision of some minor categories drops. This is because of the noise introduced by spam tweets in others category. Spam tweets tend to share hot #hashtags and URLs to promotion itself in searching, but talking about the totally different topics with what they shared, which is harmful to classifiers.
 F igure 1: Performance of baseline classifiers over categories
In this subsection, we present the experimental result-s and the analysis of graph-based collective classification models on the two graphs described in section 3. We find that the collective classification model obtain remarkable im-provement, while ICA with the common #hashtag relation-ship gets the best performance on separate graph. Table 3 presents the results of the graph-based collective classifica-tion models.

T able 3: Performance of collective classification models
We can see from Table 3 that RL model and ICA model on #hashtag based graph outperform the baseline model significantly. Add they achieve comparable performance on URL based graph. Besides, both of them perform better on #hashtag based graph in comparison to the results on URL based graph. Differently, LBP model gets comparable results on both graphs on accuracy, but improves the f-score on URL based graph obviously. Table 3 also shows that the ICA model achieves the highest performance, the RL model takes the second the place, and the LBP model performs last for tweet classification.

The experimental results demonstrate that the topical re-lationships among tweets benefit the classification of such sh ort, noisy, and ambiguous text efficiently. Category dis-tribution from neighborhood provides useful additional in-formation to predict the local category. For example, it is hard to classify tweet X  Check this video out { Mint Condition -U Send Me Swingin' #MintCondition bit.ly/KMHXEa  X  from textual features. However, in topical graphs, we find it is connected to tweets which can be categorized to En-tertainment, for instance,  X  Yes sirrr! RT@wendellmartin82: #MintCondition's `De nition of A Band' is still one of the best musical albums of all times in my opinion  X . By the in-dicative information transferred from neighbors, the former tweet is also classified to Entertainment.

According to our analysis, the performance of LBP is im-pacted by the mistakes introduced by the initialization clas-sifier on both graphs. It updates the category distribution for one time when the iteration finishes. The mistakes are accumulated during message communication. And misclas-sification in the result of RL algorithm is mostly caused by overconfident probability estimation on imbalanced dataset.
Results in Table 3 show that the models on #hashtag based graph give significant improvement both in accuracy and f-score, while the result on URL based graph is com-parable to the baseline. The difference of the two results partly due to their graph structures. According to our in-vestigation, the average degree of each node in #hashtag based graph is 6.76. About 74% of tweets sharing common #hashtags can be classified into the same category, which fulfills the assumption quite well. The URL based graph is rather sparse, with an average degree as 1.78. About 56.4% of tweets sharing common URLs are classified into identical category, not quite consistent with the intuition of identical category distribution between related tweets.

We further analyze the difference of the performance of collective models over categories on the two graphs. Because ICA performs best, we illustrate our observations with this case. Figure 2 reports the performance of ICA over cate-gories on the two graphs measured by precision, recall, and f-score. We find that the model on the two graphs reveal dif-ferent preference over the seven categories. it performs best on Business &amp; Products category with both graphs. This is because that the #hashtags and URLs shared in Business &amp; Products tweets are less ambiguous than in the rest of the categories. Statistics show 82% of Business &amp; Products tweets connect to tweets of the same type, more than the average consistency of the other categories.
 Besides, it obtains better results on Politics, Lifestyle, and Sports category, which account for 11.7% of all tweets with the URL-based graph, while with the #hashtag based graph it obtains better results on Entertainment, Business &amp; Prod-ucts, and others category, which are three major categories in tweets. The URL based graph prefers minority categories. This is caused by the distribution of URLs over categories. Statistics show there is a higher proportion of URLs dis-tributed in these three types of tweets than in the rest. The #hashtag based graph prefers majority categories. Espe-cially, it gains the highest recall for others category, because #hashtags attached in tweets are not always expressive.
In this paper, we propose to collectively classify tweet-s into predefined thematic categories, utilizing contextual information (e.g. related tweets) in addition to individu-al textual features. We exploit relationships of sharing the same #hashtags and URLs to strengthen the content-based representation with the assumption that tweets sharing the same #hashtag or URL belong to the same category in a high probability. Three graph-based collective classification algorithms, LBP, RL, and ICA are investigated in the experi-ment. The experimental results demonstrate that the collec-tive classification algorithm improves the accuracy and the f-score significantly. The ICA model with the relationship of sharing common #hashtags achieves the best result. In the future, we plan to make use of more social features such as the time and the location of tweets to optimize the clas-sification. Besides, we find that the collective classification algorithm present complementary preference over categories with the two relationships. We would like to find a way taking advantage of both of them in one collective model. [1] E. Antenos-Conforti. Microblogging on twitter: Social [2] C. F. Greer and D. A. Ferguson. Using Twitter for [3] C. Honeycutt and S. C. Herring. Beyond [4] PearAnalytics. Twitter study-august 2009. 2009. [5] X.-H. Phan, L.-M. Nguyen, and S. Horiguchi. Learning [6] G. E. Sandra, P. O. Michael, and S. Barry. Towards [7] P. Sen and L. Getoor. Link-based classification. [8] B. Sriram, D. Fuhry, E. Demir, H. Ferhatosmanoglu, [9] D. Vitale, P. Ferragina, and U. Scaiella. Classification
