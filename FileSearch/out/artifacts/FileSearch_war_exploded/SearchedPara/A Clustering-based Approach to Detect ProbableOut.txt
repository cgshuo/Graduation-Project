 The numerous lawsuits in progress or already judged by the Brazilian Supreme Court consists of a large amount of non-structured data. This leads to a large number of hidden or unknown information, since some relationships between law-suits are not explicit in the available data; and contributes to generate non-intuitive in uences between variables, which in addition increases the degree of uncertainty on judicial outcomes. This work proposes an approach to identify pos-sible judgment outcomes that considers the use of similarity calculations and clustering mechanisms based on lawsuits patterns. The similarity problem was tackled by analysing metadata manually extracted from lawsuits; and this work also presents an approach to detect clusters and to compile past votes. From the results, it is possible to verify lawsuits most likely outcomes and to detect their degree of uncer-tainty.
 Clustering; Similarity; Lawsuit; Prediction
At the Brazilian Supreme Court (STF), the large amount of non-structured data and the huge number of parameters coming from the numerous lawsuits leads to non-intuitive in uences between variables and to some degree of uncer-tainty on outcomes. In this context, this work proposes an approach to infer possible results through the use of cluster-ing methods. Much of the analysis involving judicial law-suits depends on a large cognitive effort, which demands deep domain knowledge and ability to deal with subjective questions. These conditions surely introduce a component of difficulty to available AI technology and methods [4]. For instance, some questions that could arise are: \Which simi-lar lawsuits could be a reference to a new lawsuit?"; \What is the estimated time for taking a decision?"; \What is the like-lihood for the possible emergent results?". These issues are c  X  examples of information required to understand the dynam-ics of a judicial decision and may be lost in the large volume of data generated over time. However, many lawsuits can be decided based on certain parameters, as the comparison to lawsuits with similar features and the comparison to out-comes taken by a judge with a history of judging similar cases.

This work developed an approach to recommend possible outcomes for a given lawsuit based on modelling, similarity detection and clustering. It analyses past data to detect sim-ilarities and to anticipate judgments results. The solution searches for similar past cases and tests the behaviour of the involved judges through past judgments and the degree of agreement between them.

The remainder of the work is divided as follows: Section 2 describes how lawsuits were modelled; Section 3 describes the solution to infer lawsuits outcomes; Section 4 presents the main results achieved; and nally, Section 5 presents the nal remarks and future work.
In the Brazilian judicial system, there are several lawsuit classes. In this work, only lawsuits belonging to the Appeal class are considered. This choice was supported by two main reasons: the Appeal class corresponds to more than 50% of lawsuits judged by the STF, which is important in terms of the heterogeneity of the data, and its lawsuits have similar dynamics in their life cycles, not observed in other classes, which is important in terms of pattern detection. Thus, this class of lawsuits constrains the boundaries of the problem and approximates the solution results to the real outcomes.
In Law, appeal is an instrument to request a change on a lawsuit being judged, i.e. , it is the mean to review a judg-ment in order to get the reform, the invalidation, or the clari cation of a lawsuit.
Lawsuits information were extracted from public data avail-able on STF website 1 . The following steps were taken to model and add a lawsuit to the dataset: i) Look for an appeal lawsuit page in the STF website and identify its metadata, such as id, period (start and end date), state of origin, rapporteur, author, defendant, area of Law and subjects associated to the lawsuit.
Ava ilable in portuguese only. ii) Id entify the lawsuit summary and claim, which can be found in a PDF document that includes the Court nal de-cision and represents a formal report of the judgment, con-taining the votes given by each judge.
 A lawsuit can have many decisions before a nal decision. Hence, a lawsuit is related to many decisions and a decision is related to many judges. A decision may take the value \accepted" or \denied", depending on the majority of votes. Figure 1: Work ow proposed for lawsuits outcomes
The general work ow of the proposed solution is depicted in Figure 1. Each step (highlighted in numbers) is described below: 1. Features similarity extraction : At this step, each pair of modelled lawsuit receives a similarity coefficient re-garding to a property. For this purpose, one adjacency ma-trix N x N is calculated for each property (rapporteur, defen-dant, author, area of Law, subjects, summary and claim), where N is the number of lawsuits composing the dataset (see Step 1.1). In order to ll the similarity matrix regard-ing to a property, Jaccard index is applied for each pair of lawsuits: where a an d b are two lawsuits being compared and x is the property. Note that sets involved on Jaccard calculation correspond to the property x observed on lawsuits a and b . Thus, the Jaccard coefficient generates a number between 0 and 1. To meet a normalization that will be required later, we consider the value 1 J x ( a;b ) for each pair ( a;b ). So, law-suits are more similar if the coefficient is closer to zero. For some properties, as defendant and rapporteur, each lawsuit contributes with a single set; so, we have similarity matrices with 0's and 1's, indicating if two lawsuits have the same property. For other properties, as subjects and summary, sets have one or more elements; so, we have similarity ma-trices with values between 0 and 1. However, in both cases we can apply Jaccard index to calculate similarities.
In order to generate a mean similarity matrix, which is a resultant similarity metric (Step 1.2), the following mean calculation is performed: Not e that x varies from 1 to n , where n represents the num-ber of properties, which in this case is 7. The J x ( a;b ) is the Jaccard index computed for lawsuits a and b , consider-ing the x property, as described in equation 1. The w x is the weight assigned to the property x , where 1 w x 4, depending on the degree of in uence that each property has in the decision process. 2. Clustering algorithm : In this step, lawsuits are as-signed to groups according to their similarities. For this purpose, the mean similarity matrix generated on previous step is used as input for the hierarchical clustering algo-rithm. To achieve clustering results, it was adopted three agglomerative algorithms to guide the hierarchical cluster-ing: Ward's, Single-linkage and Complete-linkage [1]. The output of this step is a set of lawsuits clusters (Step 2.1). 3. Lawsuit instance assignment : This step checks in which cluster a single test lawsuit t should be assigned, con-sidering the lawsuits clusters computed in Step 2. For this purpose, we use the similarity calculation method described in Step 1. The instance t is compared to each classi ed lawsuit of each cluster, and then a coefficient from 0 to 1 is generated, indicating how similar the lawsuits are. With established clusters and similarity coefficients, an average is applied by cluster. Then, the instance t is assigned to a clus-ter { the cluster with the smallest average of coefficients and, therefore, the most similar group. 4. Decisions compilation : Considering the decisions data-set, this step collects the past votes given by judges on law-suits belonging to cluster (obtained from Step 3). We consider only the votes given by the judges that would de-cide the lawsuit t { such information is given as an input of the system { to then apply a lter on cluster votes. 5. Decisions prediction : Finally, the degree of agreement between judges is calculated based on collected past votes, i.e. , if judges agreed in past decisions taken on cluster . This is important to detect some divergent behaviour in the judgment, and then infer the uncertainty degree of the out-come. The output of this step, which is the output of the whole process, is the likely outcome (Step 5.1) { a number between 0 and 1, with 0 indicating the lawsuit denial and 1 corresponding to its acceptance.
This section presents the main results achieved from the proposed approach and the interpretation we can extract from them.
Two datasets were used: one composed by a set of 16 extracted lawsuits, and another one composed by 24 deci-sions taken on lawsuits. Each lawsuit may have one or more decisions.

Manual extraction of lawsuits features requires time and some cognitive efforts. The document containing important information like the summary and the claim of a lawsuit is extensive and written in a non-trivial language. Thus, the size of the dataset is due to this manual extraction limita-tion, which makes the phase of data collection an exhaustive task. In the nal considerations, we point out a proposal to automate this process.

Each lawsuit composing the lawsuits dataset provides the following information: lawsuit id, start/end date, state of origin, rapporteur, defendant, author, area of Law, subjects, summary and claim. On the other hand, each decision com-posing the decisions dataset provides the following informa-tion: associated lawsuit id, decision id, type of decision, date, votes tuple &lt; judge name, vote ( accepted or denied ) &gt; and resultant decision ( accepted or denied ). The type of de-cision may be Monocratic (1 judge), First Panel (5 judges), Second Panel (5 judges) or Plenary (11 judges).

For exempli cation purpose, the lawsuit below describes an instance composing the dataset: Lawsuit id: AI769177; Start/end date: 07/10/2009 , 28/03/2014; State of origin: SP; Rapporteur: Toffoli; Defendant: Claro Telecom S.A.; Author: City of Sao Jose dos Campos; Area of Law: Administrative Law; Sub-jects: Administrative acts, Licenses; Summary: Munici-pal Law, Right to build, Legislative power, Irregular con-struction, Urban planning, Urban land use, Telephony, An-tenna; Claim: Legislative power.
In order to achieve the similarities between lawsuits, all lawsuits are compared in pairs taken into account each of their properties. After all similarity matrices are computed, it is necessary to calculate a resultant matrix, which is ob-tained through a weighted average of each property similar-ity matrix. Figure 2 shows the nal result for the similarities compilation between lawsuits, where each row (column) rep-resents a lawsuit of the dataset and each cell indicates the similarity degree between two lawsuits. This matrix is the input necessary to perform clustering analysis. Figure 2: Mean similarity matrix: the closer to zero the coefficient is, more similar the lawsuits are
Figure 3 presents a heat map which displays clusters be-ing formed from the similarity matrix, indicating how hi-erarchical clustering has performed with Complete-linkage algorithm. Figure 3: Heatmap illustrating clusters formation from lawsuits similarities
Once the clustering analysis was made and the dataset is classi ed, we need to evidence what input structure is used. The input is basically a properties le that can be easily customizable for test purposes, and contains the following information:
Determining the number k of clusters in a dataset is a common problem in data clustering [2]. Table 1 displays the similarity rate for instance t , considering different agglom-erative algorithms and k varying from 2 to the number of lawsuits dataset entries.

Table 1 shows that Ward's and Complete-linkage algo-rithms performed better for the given instance, since Complete-linkage algorithm found the cluster with the smallest dis-tance for k = 4 and Ward's found the best one for k&lt; 4.
Tabl e 1: Clustering results obtained for instance t
The output presented in Table 2 corresponds to the nal results achieved for test instance t , once the most similar cluster was chosen. The Votes vector indicates the de-gree of acceptance of each judge in the cluster. That is, it corresponds to the ratio A A + D , where A is the number of lawsuits accepted by the judge in the cluster and D is the number of denied lawsuits in the same cluster. Thus, 0 means that the judge denied all lawsuits in the cluster and 1 means that all lawsuits were accepted by him/her. It is important to note that each element of the vector represents a judge. In this way, for results shown in Table 2, we have a vector of size 5, which means that this case is a Collegiate judgment. In addition, the prediction results for this test instance were achieved considering a con guration with 5 speci c judges participating. However, the list of judges can be easily changed, by just editing the properties le, i.e. , the solution supports other scenarios.

The Judges agreement vector corresponds to the degree of agreement among judges, i.e. , for each lawsuit belonging to cluster where the judge voted and other judges com-posing the input also voted, it is computed if they agreed or disagreed (1 or 0 is assigned, respectively). Then, the aver-age is calculated for each judge. As the Votes vector, each element of the Judges agreement vector represents a judge. The Likely outcome column is the average applied in the Votes vector. It can assume a prediction value from 0 to 1, where 0 indicates that the lawsuit would be denied and 1 indicates that it would be accepted. The Judges agreement vector is not used for outcome calculation purpose, but is an extra and useful information to reinforce the degree of uncertainty of the outcome and to detect whether a certain judge usually has a discrepant behaviour within the cluster context.

Finally, Lawsuits mean duration column is the average duration of lawsuits belonging to cluster , which may be a general estimation for the time required to have lawsuit t judged. Table 2: Outcomes for instance t , considering best solution found (Complete-linkage algorithm)
As pointed by Table 2, the outcome prediction for this instance seems to be well established, since all suggested results are close to 0. Indeed, for this lawsuit being tested, all judges denied it, following the rapporteur vote. That is, the actual outcome of the lawsuit was 0 (once this is an already judged lawsuit). In a scenario with k = 4, the prediction result was 0.07, being close to the real outcome.
However, depending on the test instance, it may happen that a large uncertainty appear. In this case, the cluster may have a similar proportion of accepted and denied decisions, which would demand a deep analysis in lawsuits composing the cluster to take more accurate conclusions.
In this work, the efforts were directed in order to use similarity calculations and clustering algorithms to nd the most similar lawsuits when compared to a new lawsuit be-ing tested. By analysing some metadata, it is possible that the test instance has a similar case already judged, since the amount of data provided by the judicial system are quite large. Thus, the challenge is to nd the best way to detect such similarities and to evaluate how close the past results are from the lawsuit being tested. To the best of our knowl-edge, this is the rst work that attempts to solve this kind of problem and the main contribution was the proposed work-ow described by Figure 1. The results demonstrate that it is possible to verify the most likely outcome and to detect the degree of outcome uncertainty by checking the degree of judges voting agreement.

As future work, some improvements and modi cations are already addressed. Firstly, the use of machine learning tech-niques are required, in order to improve the results accuracy and to detect other relationships that are currently hidden. Secondly, it is important to de ne a criterion for determin-ing the number of clusters according to the dataset size and the variance of lawsuits features. Thirdly, it is important to extract more data from the STF website in order to increase the dataset. For this purpose, we intend to replace manual extraction of features by automatic extraction through NLP techniques. So far we have only tested this solution with few cases, once this is a on-course work.

Another future direction of this work is the modelling and simulation of lawsuit decision process on which multiple variables are predicted, multiple scenarios are explored and what-if analyses could be done. Some approaches, as the one adopted by Gatti et al. [3], consider the use of stochas-tic modelling and simulation to evaluate the emergent be-haviour originated from the observed relationships. [1] M. Ackerman and S. Ben-David. Discerning [2] L. Cao, A. Bazzan, A. Symeonidis, V. Gorodetsky, [3] M. Gatti, P. Cavalin, S. Barbosa Neto, C. Pinhanez, [4] H. Surden. Machine Learning and Law. Social Science
