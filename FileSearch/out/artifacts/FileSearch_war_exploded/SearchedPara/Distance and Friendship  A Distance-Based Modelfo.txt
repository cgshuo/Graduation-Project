 Online social networks have gained a huge success during the past decade and play an important role in our daily life. For example, people publish statuses on Facebook, read news through Twitter and share photos on Instagram. During the past five years, with the development and deployment of mobile devices, such as smart phones and tablets, people begin to use social network services more often on mobile devices. For example, Facebook has 703 million daily active mobile users, and 30% of all the Facebook users only use mobile devices for Facebook services. 1 One interesting and important service related to mobile social network applications is location sharing which can be achieved through a number of localization and positi oning techniques, including the GPS satellite navigation system, Wi-Fi-based positioning system, and mobile phone tracking. Nowa-days, it is very common to see that users publish photos or statuses that are labeled with the corresponding locations. Moreover, a new type of social network services, namely location-based social networks (LBSNs), has emerged, e.g., Foursquare and Yelp. In LBSNs, users may just share their location t o participate in some kinds of social games or get coupons and discounts from restaurants and shops.
Human movement or mobility have been studied for a long time. With more and more people X  X  location information becoming available through social networks, quantitative study on human mobility becomes achievable (e.g., see [1,2,3,4,5,6,7]). Understanding human mobility can result in appealing applications such as targeted ad-vertising and friends recommendation. In a broader context, it also helps us to tackle the challenges that we are facing at the moment, e.g., urban planning, disease spread, pollution control, etc.

In this paper, we focus on mining social rel ationship between users based on their mobility information (see related work in Section 5). The main idea of our method is to measure the geographical distance between two users and use this distance to predict whether they are friends.
 Contributions. Our contributions in this work are summarized as follows.  X  We profile each user X  X  mobility using his frequent movement areas and propose  X  We exploit an important property of location, namely location popularity, to further  X  We directly exploit distance between two users to predict their friendship, and the  X  Moreover, we discover that certain periods of the day are more social than oth-Through extensive experiments on a Twitter d ataset collected by ourselves, we have demonstrated that our predictor outperforms the state-of-the-art solution by 30%. Note that the experiment code as well as the dataset are available upon request. Organization. After the introduction, we present the notations as well as the dataset used in the paper in Section 2. The relationshi p between distance and user friendship in LBSNs is analyzed in Section 3. We present our friendship predictor as well as its exper-imental evaluation in Section 4. Related works are summarized in Section 5. Section 6 concludes the paper with future work. We first introduce notations we use in the paper, and then describe the dataset we collect to conduct the experiments.
 Notations. Each user is denoted by u and set U contains all the users. If two users are friends, then there exists an edge between these two users. The social network thus forms a undirected graph G =( U , E ) ,where E contains all the e dges between users. We u s e to represent a location and it corresponds to a point denoted by ( lat , lon ) . For two locations and , d ( , ) represents their Euclidean distance. A user visiting a location, namely check-in, is represented as a tuple u ,t, ,where t is the time when the check-in happens. Without ambiguity, we use location and check-in interchangeably in the rest of the paper.
 Dataset. We exploit Twitter X  X  streaming API 2 to collect geo-tagged tweets in New York city from November 30th, 2014 to February 17th, 2015. When a user shares a geo-tagged tweet at a location, we say that he checks in at that location. In total, we have collected 2,543,776 check-ins from 175,566 users. Each check-in is represented as Figure 1 depicts a sample geographical distribution of the check-ins in our dataset. To obtain the social network data, we exploit Twitter X  X  REST API 3 to query each user X  X  followers and followees. Two users are c onsidered friends if they follow each other, this totally gives us a social network with 9,490,426 edges. In the rest of the paper, we only concentrate on users who have at least 50 and no more than 500 check-ins. 4 In the dataset there are totally 4,673 users of this kind, and we refer them as active users .The detailed description of the dataset is listed in Table 1. In this section, we first summarize each us er X  X  check-ins as his frequent movement areas. Then, based on two users X  frequent movement areas, we propose several metrics to quantify the distance between them. In the end, we study the relationship between distance and friendship. 3.1 Frequent Movement Areas user X  X  mobility is centered around severa l points such as home and office [8]. In Figure 2, the user u mainly visits places around up-east side and Empire state building, while another user u visits Midtown and Brooklyn often. To measure the geographical distance between two users based on their check-ins, we first need to summarize the places each of them has been, then define the distance based on this summarization. Clustering is the natural solution for this task. In this work, we exploit the centroid-based hierarchical clustering to profile each user X  X  mobility. The cut-off distance of the clustering is set to 500 meters which is a meaningful human move-ment range. In Section 4, we will further study the sensitivity of this linkage distance. All the places that a user has visited are then grouped into several clusters, we use the central point of a cluster to represent this cluster. Each central point is named as a frequent move-ment area of the user. A user u  X  X  mo-bility is then summarized by all his frequent movement areas denoted by m ( u ) . The frequent movement areas of the two users u and u are depicted in Figure 2 as well. 3.2 Distance Between Users After profiling each user X  X  check-ins, the distance between two users u and u can be measured by the distance between their frequent movement areas, i.e., between the two sets m ( u ) and m ( u ) . Our goal is to measure the distance between these two sets. There are several metrics proposed to quantify the distance between sets. In this work we adopt the following three ones.
 Minimal Distance. The minimal distance between u and u is defined as where min gives the smallest number in a set of values, and pd ( u , u ) is the pairwise distance between the frequent movement areas of u and u formally defined as Here, the minimal distance is simply the distance between two frequent movement ar-eas, one from each user, that are closest to each other.
 Average Distance. Besides minimal distance, we also exploit the average distance be-tween u and u as another metric, it is defined as Hausdorff Distance. Hausdorff distance is another classic metric for quantifying the distance between two sets. Here, we define the Hausdorff distance between u and u as where sup represents the supremum and inf the infimum.
 3.3 Distance and Friendship Previous works [9,8,10] have shown that the distance between two users X  home loca-tions is related to their relationship. Concre tely, they have discovered that friends tend to live closer than strangers. Generally speaking, we would like to check if friends X  frequent movement areas are closer than the ones of strangers.

Figure 3 depicts the cumulative distribution functions (CDF) of distances between friends as well as strangers under the three distance metrics. As we can see, the friends and strangers are easily separable by all the three metrics. In particular, more than 80% of friends X  minimal distances are less than 5km while only 40% of strangers X  minimal distances have the same value. This indicat es that the minimal distance between two users is an effective metric to separate fri ends and strangers. The same happens with the average distance. On the other hand, the difference driven by the Hausdorff distance is relatively smaller compared with the other two metrics. We further study the relation-ship of social strength (quantified by embeddedness) and the minimal distance between users. As shown in Figure 4, with the increase of mind ( u, u ) , the embeddedness be-tween them drops. This indicates the minimal distance betwen users is correlated with their social strength as well. 3.4 Location Popularity The popularity of locations can potentially affect the distance between friends and strangers. For two users who both have frequent movement areas near a popular place, such as a metro station, the chance that t hey know each other is low since they may just happen to take the metro everyday. On the other hand, as we show in the previous section the short distance between these two frequent movement areas is a strong indi-cator that these two users are friends. Therefore, to find a meaningful distance metric to separate friends and strangers, it is necessary to take location popularity into account.
In [11], the authors propose a metric named location entropy to quantify a location X  X  popularity. It is defined as follows where ci ( ) represents all the check-ins at location and ci ( , u ) contains the check-ins of u at . Popular places have higher location e ntropies than unpopular ones. Figure 5 depicts a heatmap of Midtown w.r.t. locatio n entropy. Since we focus on each user X  X  fre-quent movement areas, we further define the location entropy of a frequent movement area as the average location entropy of all lo cations in that cluster represented by the frequent movement area. Similarly, more popular a frequent movement area is, its lo-cation entropy is also getting higher. Moreover, instead of considering location entropy directly, we use location diversity defined as to represent a location X  X  popularity.

After having the distance between two frequent movement areas, we multiply the distance by the maximal loca tion diversity of these two frequent movement areas. The adjusted pairwise distance between u and u , namely ldpd ( u , u ) is ldpd ( u , u )= { d ( , )  X  max ( locdiv ( ) , locdiv ( )) | X  ( , )  X  m ( u )  X  m ( u ) } . With this adjustment, the distance measure between popular frequent movement areas is increased, while the long ones between unpopular places are redu ced. Based on this new pairwise distance, we redefine the minimal and average distances between users accordingly (denoted by ldmind ( u, u ) and ldavgd ( u, u ) ). In addition, the adjusted Hausdorff distance w.r.t. location diversity is defined as where ld di hausd ( u, u ) is defined as Figure 6 depicts the CDF of the adjusted distances between friends and strangers. As we can see, ldmind ( u, u ) can better differentiate friends and strangers compared with the other two metrics. Almost 70% of friends X  ldmind ( u, u ) are less than 10 while the value is less than 20% for strangers. Moreover, we notice that this difference is even larger than mind ( u, u ) depicted in Figure 3. In Section 4, we will demonstrate the effectiveness of this adjusted minimal distance on friendship prediction. On the other hand, the separations driven by ldavgd ( u, u ) and ldhausd ( u, u ) get less clear when compared with avgd ( u, u ) and hausd ( u, u ) .
 Link prediction plays an essential part in the context of social networks. For example, recommending friends to a newly joined user is crucial for attracting the user to stay with the social network service. In Section 3 , we have shown that friendship is related to distance, i.e., friends X  frequent movement areas are closer than strangers. In this section, we aim to predict friendship between users based on their distances. 4.1 Experiment Setup and Metrics All our experiments are conducted on a machine with 2.6GHz Intel Core i7 processor and 8Gb memory. We extract all the friends pairs from the active users in New York and randomly sample the same number of stranger pairs to construct a balanced dataset.
We exploit ROC curve and three other standard metrics including AUC (area under the ROC curve), Accuracy and F1score to evaluate our friendship predictor. Let TP , FP , TN and FN denote true positive, false positive, true negative and false negative, respectively. Accuracy and F1s core are defined as the following: 4.2 Prediction Based on Distances In Section 3, we have proposed 6 different metrics to quantify the distances between two and ldhausd ( u, u ) . We start by directly using these distances to predict whether u and u are friends or not. More precisely, we tune a threshold  X  and predict pairs of users whose distances are less than  X  to be friends. Figure 7 shows the AUC value of all the different distances for predicting friendships. Among all the six distances, ldmind ( u, u ) achieves the best performance (AUC = 0.81) followed by mind ( u, u ) . On the other hand, ldhausd ( u, u ) has the worst performance, with AUC equals to 0.65. This result is consistent with the friends and strangers separation results in Figure 3 and Figure 6, where ldmind ( u, u ) achieves the best result on differentiating friends and strangers while ldhausd ( u, u ) performs the worst. We also notice that adding location diversity to distances only improves the perform of the minimal distance. Meanwhile, ldavgd ( u, u )  X  X  performance gets even worse than avgd ( u, u ) . This indicates that the adjusted average distance cannot capture the distance between users very well. The same happens with the adjusted Hausdorff distance.

Since the results of all the distance-based link predictors are obtained by tuning the threshold  X  , we proceed by studying which is the optimal threshold for predict-ing friendships. Here, we focus on the best performance distance, i.e., ldmind ( u, u ) and find  X  w.r.t. prediction accuracy. As shown in Figure 8, when the threshold  X  falls into the range [8, 11], the accuracy achieves the highest value (0.75). In the following experiments, we set  X  to 10 when computing accu racy and F1score for ldmind ( u, u ) . 4.3 Parameter Sensitivity In our whole settings, there is only one parameter to adjust, which is the cut-off distance used in the hierarchical clustering algor ithm for finding each user X  X  frequent movement areas (see Section 3.1). For the above evalu ation as well as the evaluation in Section 3, we have set it to 500m. Next, we focus on the sensitivity of this cut-off distance.
We have performed friendship predictions through ldmind ( u, u ) on multiple cut-off distances. As we can see from Figure 9, our predictor achieves the best performance when the cut-off distance falls between [400m, 700m]. Moreover, we also notice that F1score drops when the distance becomes longer (such as 5km and 10km). This is expected considering the human movement range. For example, if the cut-off distance is set to 10km, then a user probably will only have one frequent movement area that covers the whole city. This is too coarse-grained and cannot properly reflect the user X  X  mobility. Based on this analysis, we set the c ut-off distance as 500m in our experiments. 4.4 Time and Friendship So far, our distance-based friendship predictor only considers mobility information from users (i.e., frequent movement areas) and locations (i.e., location popularity). On the other hand, time also plays an essential role on users X  mobility. For example, a user may check in at places close his office durin g the working hours while visiting bars and cinemas at his spare time. Intuitively, i f two users are close at a social time, the probability for them being friends is high. For example, if u and u are close (appearing at a same metro station) at 8am in the morni ng, then we are less confident that they are friends, compared with the case when their frequent movement areas are close during the midnight. Next, we verify whether this hypothesis holds in general.

We consider time on the daily scale as well as the weekly scale, respectively. For the daily scale, we divide a day by eight with each part being a three hour range staring from 0am. We extract each user X  X  check-ins under different time periods and construct the corresponding frequent movement areas. The so cial level of each time periods is eval-uated by the accuracy on predicting friendship through ldmind ( u, u ) . For the weekly scale, we consider users X  frequent movement areas on each day (from Sunday to Satur-day) and perform an evaluation similar to the daily scale.

As shown in Figure 10, on the daily scale, 0-3am is the most social time of the day followed by 3-6am and 9-12pm. This indicates that if two users X  frequent movement areas are close at these hours, the chance that they are friends is high compared with other hours. There is a sudden drop when the period is from 6am to 9am, this means that 6am to 9am is the least social hours of the day, most probably because 6-9am is the commuting hours of the day. On the other hand, the prediction accuracy stays stable on a weekly scale with Sunday and Saturday slightly higher than the weekdays (Figure 11). 4.5 Combining Features with Machine Learning We have shown that different distance measures between users together with location and time information can capture different aspects of friendship. As a consequence, it is natural to ask whether combining all the information together can further improve the results of link prediction.
 Feature Description. For two users u and u , we adopt mind ( u, u ) , avgd ( u, u ) and hausd ( u, u ) as three features for the classifier. Besides, we take the maximal value and standard deviation of the pairwise distance, i.e., pd ( u, u ) , as another two features as well. We also consider all the above distan ces X  adjusted versions, i.e., taking into account location popularity. This totally gives us 10 features. As some hours are more social than the others on the daily scale, besides the general distance between two users (10 features), we further take their distances at 0-3am and 3-6am into account. Each time period provides 10 features. In total, w e collect 30 features for each pair of users. Learning Techniques. Regarding the machine learning classifier, we have tried logis-tic regression, support vector machine, gradient boosting machine and random forest. It turns out that random forest outperforms the other algorithms. Thus we adopt random forest as our classifier. We put 70% of user pairs into our training set and the rest 30% are used for testing. In all sets, we perform 10-fold cross validation.
 Comparison with the State-of-the-Art Model. For baseline models, except for some of the distance-based predictors presented before, we also choose a state-of-the-art friendship predictor that exploits the loca tion information, namely the PGT model, pro-posed in [12]. For each pair of users, PGT first extracts their meeting events. Then, the model considers personal, global and temporal factors based on the meeting events to discover friendship. For the personal factor, PGT proposes a density-based function for each user. If the place of a meeting event is less visited by the user, PGT will value more on this event. For the global factor, PGT adopts the location entropy to adjust the meet-ing location popularity. In the end, PGT introduces the temporal factor to penalize the meeting event that happens closely with the following events. According to the experi-ment results in [12], PGT outperforms other location information based link prediction models including [13,11,14]. In our experi ments, we follow the parameter settings as specified in [12] for the PGT model including the distance and time for discovering a meeting event and two parameters used in the personal and temporal factors. Results. The experiment results including the ROC curve and three evaluation metrics are listed in Figure 12 and Table 2. As we can see, our random forest achieves a good prediction result and it outperforms all the other distance-based predictors. Besides, all our models outperform the PGT model. In particular, the machine learning classifier achieves a 30% improvement. We believe this is because PGT only focuses on meeting events between two users, which is too strict since friends can hang out at the same place but they do not have to check in together. In a broader view, according to the homophily theory [15], friends have similar interests. In the context of mobility, this means that friends tend to visit similar p laces such as same kinds of shops or bars, and this does not have to happen at the same time. Our model considers two users X  mobility at a macro level (through their frequent movement areas) which naturally captures the concept of homophily, while PGT and other solutions such as EBM [14] fail to do so. With the development of location-based soc ial networks, research on analyzing the social relationship and mobility has attracted a lot of attention. The research can be roughly partitioned into two groups. One is to use friendship to understand mobility, such as location prediction [8,16] and recommendation [17]; the other is to use mobil-ity information to infer friendship. Our work belongs to the second group.

Authors of [13] propose a probabilistic mode l to infer friendships from location data shared on Flickr. Their model considers both temporal and spatial information. How-ever, they make a strong assumption that each user only has one friend which is not the case in the real-life applications. Cranshaw et al. [11] propose to use a machine learning classifier to infer the friendship b etween two users. The features they consider include the ones related to locations as well as the social network structure. Besides, they also propose location entropy to characterize the popularity of a location. The ef-fectiveness of location entropy has been de monstrated in [14,12], we use it to measure the distance between users in this work as well. In [14], the authors propose an entropy-based model, namely EBM. The model first extracts a vector of meeting events between two users, then EBM builds two components based on these meeting events. The first component of EBM is named diversity which is a R  X  enyi entropy formalization on the meeting events vector. More locations two users visit together, better chance they will be friends. The second component is the weighted frequency which exploits location entropy to penalize meeting events at popular locations. Then diversity and weighted frequency are fitted by a linear regression to two users X  social strength quantified by Katz score. With the learned model, by tuning a threshold on Katz score, friendship prediction is achieved. Mo re recently, Wang et al. [12] propose the PGT model that we use in this work as the baseline model for friendship prediction.
 Advantages of Our Model. Besides prediction performance, our solution has the fol-lowing advantages compared with the two recently developed models, i.e., EBM and PGT. First, our model is intuitive and easy to implement. There is only one parameter to adjust in our solution which is the cut-off distance used in the clustering algorithm. On the other hand, both EBM and PGT have several parameters to adjust. Second, both EBM and PGT compute their model components based on the locations two users have visited together, i.e., their meeting events. However, meeting events largely depend on the parameter settings such as the time range and location distance. In PGT, the authors consider two check-ins to be a meeting event if their locations X  distance is less than 30m and they happen within one hour. How to set these parameters to find a meeting event is rather unclear. Moreover, as mentioned in Section 4, meeting events cannot capture im-portant social behaviors such as homophily. On the other hand, our model studies two users X  distance at a macro level which can naturally capture the concept of homophily. In this work, we have proposed to exploit the distance between two users to predict their friendship. We further integrated location popularity and time information into the prediction. With experiments, we have demonstrated the effectiveness of our approach.
There are several directions we would like to pursue in the future. First, we plan to integrate location and time semantics into the process of summarizing users X  frequent movement areas. Based on the new summarized frequent movement areas, we aim to further analyze the relation between friendship and distance. Second, our experiments only focus on the check-in data in New York, we also want to check whether our dis-coveries in this paper generally hold in other cities or countries.
