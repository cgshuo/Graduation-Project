 Due to the advance of computer and communication technologies, damages caused by the unexpected intrusions and crimes related to computers have been increased rapidly. Previously, most of the intrusion methods were very primitive and simple. However, they have been changed into more complicated forms, and eventually, they enough to preserve security just handling the known intrusion methods individually. 
The anomaly detection model focuses on the modeling the regular patterns of normal user activities. In anomaly detection, if a new user activity deviates from his/her normal behavior pattern, those can be regarded as a possible intrusion. Typical conventional anomaly detection researches [1, 2, 3] have used statistical approaches. intrusion detection can be minimized. However, the contents of a profile are rough to standard deviation are employed. As a result, anomalous user activities can be incorrectly detected. Furthermore, the statis tical methods cannot handle infrequent but periodically occurring activities. 
In this paper, a new anomaly detection method is proposed by clustering the considerable amount of transactional audit data. The proposed method is explained by a density-based clustering algorithm DBSCAN [4]. While the number of data objects conventional clustering algorithms, the number of distinct transactions i.e., the transaction support of data objects in a specific range is an important criterion in the proposed method. Therefore, not only the regular patterns of user normal activities but also infrequent activities can be effectively modeled by the proposed method. Meanwhile, when new transactions occur, their normal activities should be effectively reflected to the set of currently identified clusters. For this purpose, clustering should be performed on not only the set of new transactions but also all the previous transactions. Alternatively, an incremental clustering algorithm should be employed. These two methods need to maintain and process the set of all previous transactions. To avoid this, clustering can be only performed on the newly occurring transactions to produce collected data, and the clusters for total data are updated by the comparison between the previous clusters and the current clusters generated by using the newly collected data. 
This paper is organized as follows. In Section 2, a method of clustering the activities of transactions generated by a user is explained. In Section 3, how to update a profile incrementally is described. In Section 4, a method of detecting anomalous behavior is described. In Section 5, an anomaly detection method based on the proposed method presents and the performance of the proposed method are comparatively evaluated and discussed. Finally, this paper is concluded in Section 6. In this paper, the activities of a user are modeled by clustering similar activities based on various features. Each feature can be such as CPU usage, file access frequency and system call frequency. After clustering is performed on each feature, the abnormality of a new user activity can be identified by the clusters of past user activities. DBSCAN [4] is one of the most popular clustering algorithms and it finds the groups of similar data objects in a plain collection of data objects. The similarity among data objects is defined by a predefined clustering range  X  . In other words, two data objects are similar if the difference between their values is within  X  . Consequently, they can be contained in a same cluster. In addition, in order to identify the normal behavior of data group is defined by the ratio of the number of distinct transactions contained in the group over the total number of transactions. If the transaction support of the data group is greater than or equal to a certain number of distinct transactions i.e. minimum support s min , the group can be a cluster. Due to this mechanism, similar activities performed in a considerable number of distinct transactions are modeled as normal behavior [5]. Let TS denote a set of transactions occurring previously i.e., TS = {T 1 , T 2 , ..., T n }. k feature value for the activity a ij . Let D denote a set of all activities occurring until with respect to a predefined clustering range  X  is defined as follows: activity a is formally defined as follows: Definition 1. Similar group support a is represented as follows: Given the predefined values of a minimum support and a clustering range, clustering equal to the specified minimum support, the neighbor set becomes a new cluster; otherwise, it is considered as noise. In this algorithm, to denote the on-going clustering state of each data object, a state marker is associated with each data object. fixed to either noise or a cluster identifier that it belongs to. The detailed steps of the clustering algorithm are described as follows. [Step 1] Sort the data set D of the k th feature by an ascending order. [Step 5] If the stack becomes empty, go to Step 2. Otherwise, go to Step 4. As new sessions of a user take place, new transactions corresponding to the sessions need to be reflected to the set of current clusters. In other words, the activities of the newly occurring transactions may contain some new activities that are different from the old activities. Therefore, the current profile that has summarized the old activities should be updated accordingly. One simple way of reflecting is that clustering is performed on the total data containing the previous data and the current collected data. However, it includes two undesirable drawbacks. In other words, the previous clustering information is useless and the clustering cost becomes too expensive as the collected data increases. For solving these problems, clustering is only performed on between the previous profile and the current profile generated by using the newly newly occurring transactions, respectively. The entire data set D T is D T = D O  X  D N . Let C(D) denote a set of clusters identified in a data D. There are three different cases of two clusters c O  X  C(D O ) and c N  X  C(D N ) are illustrated in the Figure 3. Lemma 1. The intersection between two clusters c O  X  C(D O ) and c N  X  C(D N ) is contained in the updated profile. (Proof) Let G  X  (x, D) and sup(G  X  (x, D)) be the similar data group of x and its support, |D the updated profile.  X  set C(D N ) is not contained in the updated profile C(D T ). (Proof) Let D O -C(D O ) and D N -C(D N ) be the area which cannot generate any cluster in D not contained in that by Lemma 2. Therefore, the data contained in c O  X  c N and (c O  X  c ) c is not necessary to be accessed in the clustering process. However, the data algorithm is as follows. [Step1] The clustering is performed using the newly collected data D N . [Step2] The intersection between the previous profile C(D O ) and the cluster set C(D N ) [Step3] Select c i contained in C(D T ) and expand it forward or backward with [Step4] If there is no cluster to be expanded, procedure terminates.
 and the recent data D N are similar, the searching time for the original data will be very small. On the other hand, if D O and D N are different, the searching time will be very large. clustering algorithm. A cluster in a profile is represented by a tuple (average, support, within the range of the cluster and the support of a cluster represents its actual support i.e., the ratio of distinct transactions whose data objects lie in the range of the cluster over the total number of transactions. Finally, the length of a cluster is represented by the minimum and maximum values of the cluster. 
The transaction support of a cluster is important to identify the abnormality of the activities of a user. When an abnormal activity is detected between two adjacent clusters of the same feature, the abnormality of this activity is measured by the relative distance between the clusters as follows. Definition 2. Relative Distance corresponding feature value v of a user activity is defined as follows. In order to detect an anomaly for the online activities of a user, when a user logs in, his or her profile is pre-fetched to memory and the subsequent online activities of the user are monitored by evaluating the abno rmality between the online activities and abnormality increases as the difference between the current user activities and the profile becomes larger. For an online activit y of a user, the gross abnormal degree of all the features related to the activity is defined by Definition 3. Definition 3. Degree of Abnormality Let p denote the number of features related to an activity a and C k denote the closest v defined as In order to decide the rate of abnormal behavior in the new object o, a set of different activities. In this paper, two different abnormality levels ( green, red ) are considered in order to classify whether the activities of a new object are anomalous or not. The green level is safe while the red is warning. Let n denote the total number of abnormality  X  (TS) and its standard deviation sd for the past transactions of a user as follows. As a result, the abnormality of a specific online activity is set to one of the two levels as follows: In order to evaluate the performance of the proposed algorithm in a real world environment, we use DARPA log data sets collected in 1998 [6]. The feature values of the log data sets are extracted by BSM (Basic Security Module) [7] of Solaris 2.6. Among these signals, 84 signals are used as basic features in the experiments. In a log data set, an object is defined by the number of system calls occurring in a unix command on a host computer. We use two types of data sets for real world experiment: a programmer and a system administrator. In this experiment, the programmer is regarded as a target user for anomaly detection. To simulate the environment of each data stream, a data set is replicated multiple times and its transactions are looked up one by one in sequence. 
In Figure 2, the execution time of the proposed method is compared with that of the original DBSCAN method when the number of transactions is varied. In this experiment, the minimum support s min is set to 50% and the clustering range is set to 4. Also, 500,000 transactions are used for generate an initial profile. When the number of new transactions is varied from 1,000 through 500,000, the execution time of the proposed method is very lower than that of the DBSCAN method. 
Figure 3 shows the experimental results of the anomaly detection. The anomalies using the data generated with the normal user activity profile are shown in Figure 3(a), and the anomalies using intrusion data are shown in Figure 3(b). In Figure 3(a), although the user activities were normal with 90% of the minimum support , the degree of user anomalies is very high. In other words, as the minimum support increases, the number of the generated clusters decreases and the degree of user anomalies for various activities increases. However, the degree of anomaly of an range. Therefore, if clustering range is set under 32 and minimum support is set under 90%, the degree of the anomalies can be optimized. 
In Figure 4, the false alarm and detection rates in the proposed method are compared with those of NIDES. As shown in Figure 4, the false alarm rate of NIDES is higher than that of the proposed method. Furthermore, the detection rate of NIDES is much lower than that of the proposed method. As a result, the proposed method can detect an anomaly more effectively than NIDES. For the host-based intrusion detection, most of the previous approaches have been anomalies can be detected incorrectly because it depends on the average values for the activities effectively. To handle this problem, we propose a new anomaly detection method is proposed by clustering the considerable amount of transactional audit data. Especially, abnormal activities of a user can be analyzed in various aspects. That is to say, these activities can be classified by many different types of features and for each algorithm. In addition, when new transactions are added to the original data, the previous profile can be updated efficiently based on dynamic cluster updating. With the evaluation results, using the normal user patterns generated from the proposed scheme, we show that the user anomalies can be detected more easily and effectively than the previous statistical method.
 This work was financially supported by the Ministry Of Education Human Resources Development(MOE), the Ministry of Commerce, Industry(MOCIE) and Energy and the Ministry of Labor(MOLAB) through the fostering project of the Lab of Excellency. 
