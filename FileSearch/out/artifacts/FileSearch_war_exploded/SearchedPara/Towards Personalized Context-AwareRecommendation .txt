 Recent years have witnessed the increasi ng popularity of smart mobile devices, such as smart phones and pads. These devices are usually equipped with multi-ple context sensors, such as GPS sensors , 3D accelerometers and optical sensors, which enables them to capture rich contextual information of mobile users and thus support a wide range of context-aware services, including context-aware tour guide [15], location based reminder [13] and context-aware recommenda-tion [2,9,16,10], etc. Moreover, these co ntextual information and users X  corre-sponding activity (e.g., browsing web sites, playing games and chatting by So-cial Network Services) can be recorded into context logs to be used for mining users X  personal context-aware preferen ces. By considering both context-aware preferences and the current contexts of users, we may be able to make more personalized context-aware r ecommendations for mobile users.

Indeed, the personalized context-aw are recommendations can provide better user experiences than general context -aware recommendations which only take into account contexts but not users X  different personal preferences under same contexts. In recent years, many researche rs studied the problem of personalized context-aware recommendation [17,12,9]. However, most of this work is based on item ratings generated by users, whic h are difficult to obtain in practise. In contrast, user activity records in context logs are much easier to get for mobile users.

To the best knowledge of ours, how to mine personal context-aware preferences from context logs and then make persona lized context-awar e recommendations is still under-explored. To this end, in this paper we attempt to leverage mining user context logs for personalized cont ext-aware recommenda tion. However, a critical challenge of the problem is that individual user X  X  context logs usually have no sufficient training data for mining personal context-aware preferences. To be specific, as showed in Table 1, it can be observed that many context records have no corresponding activity record. As a result, if we only leverage individual user X  X  context logs for context-aware preference mining, it will be very difficult to learn personal context prefe rences for recommendation, which is also reflected by our experiments on a real w orld data set. To address this prob-lem, in this paper, we propose to mine C ommon C ontext-aware P references (CCPs) from many users X  context logs th rough topic models and represent each user X  X  personal context-aware preferences as a distribution of the mined com-mon context-aware preferences. To b e specific, first we extract bags of Atomic Context-Aware Preference (ACP) Features for each user from their historical context logs. Then, we propose to mine CCPs from users X  ACP-feature bags through topic models. Finally, we make recommendations according to the given contexts and CCP distributions of users. Figure 1 illustrates our procedure for generating personalized context-aware recommendation. In addition, we evalu-ate our proposed approach in a real-world data set of context logs collected from 443 mobile phone users spanning for several months, which contains more than 8.8 million context records, 665 different interactions in 12 content categories. The results clearly demonstrate the eff ectiveness of the proposed approach and indicate some inspiring conclusions.

The remainder of this paper is organi zed as follows. Section 2 provides a brief overview of related works. Then , Section 3 presents the idea of making personalized context-aw are recommendation by mining context logs for mining users X  context-aware preferences, and Section 4 presents how to mine common context-aware preferences through top ic models. Section 5 reports our experi-mental results on a real world data set. Finally, in Section 6, we conclude this paper. Today, the powerful sensing abilities of smart mobile devices enable to capture the rich contextual information of mobile users, such as location, user activ-ity, audio level, and so on. Consequentl y, how to leverage such rich contextual information for personalized contex t-aware recommendati on has become a hot problem which dramatically attracts many researchers X  attention.

Many previous works about personali zed context-ware recommendation for mobile users have been reported. For example, Tung et al. [14] have proposed a prototype design for building a pers onalized recommende r system to recom-mend travel related information according to users X  contextual information. Park et al. [12] proposed a location-based personalized recommender system, which can reflect users X  personal preferences by modeling user contextual information through Bayesian Networks. Bader et al. [2] have proposed a novel context-aware approach to recommending points-of-interest (POI) for users in an au-tomotive scenario. Speci fically, they studied the scenario of recommending gas stations for car drivers by leveraging a Multi-Criteria Decision Making (MCDM) based methods to modeling context and different routes. However, most of these works only leverage individual user X  X  historical context data for modeling per-sonal context-aware preferences, and do not take into account the problem of insufficient personal training data.
Actually, the problem of insufficient personal training data is common in practice and many researchers have studied how to address this problem. For example, Woerndl et al. [16] proposed a hybrid framework named  X  X lay.tools X  for recommending mobile applications by leveraging users X  context information. This recommendation framework are based on what other users have installed in similar context will be liked by a given user. Kim et al. [9] investigated several Collaborative Filtering (CF) based approaches for recommendation and devel-oped a memory based CF approach to providing context-aware advertisement recommendation. Specially, the proposed approach can leverage a classification rule of decision tree to understand users X  personal preference. Zheng et al. [17] have studied a model based CF approach to recommending user locations and activities according to users X  GPS trajectories. The approach can model user, lo-cation and activity as a 3-dimensional matrix, namely tensor, and perform tensor factorization with several constraints to capture user s X  preferences. Alexandros et al [10] proposed a model based CF approach for making recommendation with respect to rich contextual inform ation, namely multiverse recommenda-tion. Specifically, they modeled the rich contextual information with item by N-dimensional tensor, and proposed a novel algorithm to make tensor factor-ization. In a word, most of these approaches are based on rating logs of mobile users and the objective is to predict accurate ratings for the unobserved items under different contexts. However, usually we cannot obtain such rating data in user mobile devices. In contrast, it is easier to collect context logs which contain users X  historical context data and activity records, which motivates our work for exploring how to leverage contex t logs for personalized context-aware recommendation.
 The proposed approach in this paper exploits topic models for learning users X  CCPs. Indeed, topic models are widely used in text retrieval and information extraction. Typical topic models include the Mixture Unigram (MU) [11], the Probabilistic Latent Semantic Indexing (PLSI) [8], and the Latent Dirichlet Al-location (LDA) [4]. Most of other topic models are extended from the above ones for satisfying some specific requirements. In our approach, we exploit the widely used LDA model. As mentioned in Section 1, smart devices can capture the historical context data and corresponding activity records of users through multiple sensors and record them in context logs. For example, Table 1 shows a toy context log of a mobile user, which contains several context records , and each context record consists of a timestamp, the most detailed available context at that time, and the corresponding user activity record ca ptured by devices. A context consists of several contextual features (e.g., Day name, Time range, and Location) and their corresponding values (e.g., Saturday, AM8:00-9:00, and Home), which can be annotated as contextual feature-value pairs . And we mention  X  X vailable X  because a context record may miss some context data though which context data which should be collected is usually predefined. For example, the GPS coordinate is not available when the user is indoor. Moreover, interaction records can be empty (denoted as  X  X ull X ) because the user acti vities which can be captured by devices do not always happen.
 It is worth noting that we transform raw location based context data such as GPS coordinates or cell Ids into social locations which have explicit meanings such as  X  X ome X  and  X  X ork place X  by some existing location mining approaches (e.g., [5]). The basic idea of these approaches is to find clusters of user location data and recognize their social meaning by time pattern analysis. Moreover, we also manually transform the raw activity records to more general ones by mapping the activity of using a particular application or playing a particular game to an activity category. For example, we can transform two raw activity records  X  Play Angry Birds  X  X nd X  Play Fruit Ninja  X  to same activity records  X  Play action games  X . In this way, the context data and activity records in context logs are normalized and the data sparseness is some how alleviated for easing context-aware preference mining.

Given a context C = { p } where p denotes an atomic context, i.e., a contex-tual feature-value pair, the probability that a user u prefers activity a can be represented as where we assume that the atomic contexts are mutually conditionally indepen-dent given u .

Then the problem becomes how to calculate P ( a, p | u ).Accordingtoourpro-cedure, we introduce a variable of CCP denoted as z , and thus we have
P ( a, p | u )= where we assume that a user X  X  preference under a context only relies on the CCPs and his (her) context-aware preferences in the form of their distribution on the CCPs, rather than other information of the user. Therefore, the problem is further converted into learning P ( a, p | z )and P ( z | u ) from many users X  context logs, which can be solved by widely used topic models. In the next section, we present how to utilize topic models for mining CCPs, i.e., P ( a, p | z ), and accordingly make personalized context-aware r ecommendation. Topic models are generative models that are successfully used for document modeling. They assume that there exist several topics for a corpus D and a document d i in D can be taken as a bag of words { w i,j } which are generated by these topics. For simplicity, we refer the co-occurrence of a user activity a and the corresponding contextual feature-value pair p , i.e., ( a, p ), as Atomic Context-aware Preference feature ,and ACP-feature for short. Intuitively, if we take ACP-features as words, take context logs as bags of ACP-features to cor-respond documents, and take CCPs as topics, we can take advantage of topic models to learn CCPs from many users X  context logs.

However, raw context logs are not naturally in the form of bag of ACP-features so we need some preprocessing for extract ing training data. Specially, we first remove all context records without an y activity record and then extract ACP-feature from the remaining ones. Given a context record &lt;Tid,C,a&gt; where Tid denotes the timestamp, C = { p 1 ,p 2 , ..., p l } denotes the context and a denotes For simplicity, we refer the bag of ACP-features extracted from user u  X  X  context log as the ACP-feature bag of u .

Among several existing topic models, in this paper, we leverage the widely used Latent Dirichlet Allocation model (LDA) [4]. According to LDA model, the ACP-feature bag of user u i denoted as d i is generated as follows. First, before generating any ACP-feature bag, K prior ACP-feature conditional distributions given context-aware preferences {  X  z } are generated from a prior Dirichlet distri-bution  X  . Secondly, a prior context-aware preference distribution  X  i is generated from a prior Dirichlet distribution  X  for each user u i . Then, for generating the j -th ACP-feature in d i denoted as w i,j , the model firstly generates a CCP z from  X  and then generates w i,j from  X  z . Figure 2 shows the graphic representation of modeling ACP-feature bags by LDA.

In our approach, the objective of LDA model training is to learn proper es-timations for latent variables  X  and  X  to maximize the posterior distribution of the observed ACP-feature bags. In this paper, we choose a Markov chain Monte Carlo method named Gibbs sampling introduced in [6] for training LDA models efficiently. This method begins with a random assignment of CCPs to ACP-features for initializing the state of Markov chain. In each of the following iterations, the method will re-estimate the conditional probability of assigning a CCP to each ACP-feature, which is conditional on the assignment of all other ACP-features. Then a new assignment of CCP to ACP-features according to those latest calculated conditional probabilities will be scored as a new state of Markov chain. Finally, after rounds of iterations, the assignment will converge, which means each ACP-feature is assigned a stable and final CCP. Eventually, we which denote the probability that the ACP-feature ( a, p ) appears under the CCP z , and the probability that user u has the context-aware preference z , respectively. where the n ( a,p ) ( z ) indicates the number of times ACP-feature ( a, p ) has been assigned to CCP z , while n ( u ) ( z ) indicates the number of times a ACP-feature from user u  X  X  context log that has been assigned to CCP z .The A indicates the number of ACP-features from u  X  X  context log, and Z indicates the number of CCPs.
 LDA model needs a predefined parameter Z to indicate the number of CCPs. How to select an appropriate Z for LDA is an open question. In terms of guaran-teeing the performance of recommendation, in this paper we utilize the method proposed by Bao et al [3] to estimate Z ,andweset  X  to be 10% in our experi-ments accordingly. Please refer to [1] for more information.

After learning CCPs represented by distributions of ACP-features, we can predict users X  preference according to their historical context-aware preferences and current contexts, i.e., P ( a, C | u ). Then, we recommend users a rank list of different categories of contents accord ing to the preference prediction. For example, if we predict a user u is more likely willing to play action games than listen pop music, the recommendation priority of popular action games will be higher than that of recent hot pop music. In this section, we evaluate the perfo rmance of our LDA based personalized context-aware recommendation approach, namely P ersonalized C ontext-aware R ecommendation with LDA (PCR-LDA), with several baseline methods in a real-world data set. 5.1 Data Set The data set used in the experiments is collected from many volunteers by a major manufacturer of smart mobile devices. The data set contains context logs with rich contextual information and user activities of 443 smart phone users spanning for several months. The detailed statistics of our data set are illustrated in Table 2. From table 2 we can observe that only 12.5% context records have activities, which indicates the insufficient activity records for individual user in practice. Moreover, Table 3 shows the con crete types of context data contained in our data set. In addition, in our data set, all activities can be classified into 12 content categories, which are Call , Web , Multimedia , Management , Games , Sys-tem , Navigation , Business , Reference , S ocial N etwork S ervice (SNS) , Utility and Others . Specifically, in our experiments, we do not utilize the categories Call and others because their activity information is clear for making recommendations. Therefore, in our experiments we utilize 10 activity categories which contain 618 activities appear in total 408,299 activity-context records.

Figure 3 shows the distribution of context records and activity-context records for all users. From the figure we can see that usually though the context records of individual mobile users are sufficient, only small proportion of them have non-empty activity records and can be used as training data, which implies the limit of learning personal context-aware preferences only from individual user X  X  context logs. 5.2 Benchmark Methods To evaluate the recommendation performance of our approach, we chose two context-aware baseline methods as follows.

CPR stands for Context-aware Popularity based Recommendation which is a basic context-aware recommendation approach without considering personal context-aware preference. To be specific, in this approach, given a user u and acontext C , we predict user preferred activities by the most frequent activities appear under C according to all users X  histor ical context logs and recommend corresponding contents. This popularity based approach is widely used in prac-tical recommender systems.

PCR-i stands for Personalized Context-aware Recommendation by only lever-aging Individual user X  X  context logs. To be specific, in this approach, given a user u and a context C , we rank each activity a by probability P ( a | u, C ), which can be estimated by P ( a | u, C )  X  ( be calculated by P ( a, p | u )= n a,p n of ACP-feature ( a, p ) and all ACP-features appeared in the context log of u , respectively. 5.3 Evaluation Metrics In the experiments, we utilize 5-fold-cross validation to evaluate the performance of each recommendation approaches. To be specific, we first randomly divide each user X  X  context log into five equal parts, then use each part as test data while use other four parts as training data for total 5-rounds of recommendation. In the test process, we only take into account the co ntext records with non-empty activity records, and use the contexts and the content categories corresponding to the real user activity as context input and ground truth, respectively. In our experiments, each recommendation approach will return a ranked list of recommended content categories according to predicted user acti vities. To evaluate the performance of each approach, we leverage two different metrics as follows.

MAP@K stands for Mean Average Precision at top K recommendation re-sults. To be specific, MAP @ K = AP ( u ) @ K | U | ,where AP ( u ) @ K denotes the average precision at top k recommendation results on the test cases of user u ,and | U | indicates the number of the users. AP ( u ) @ K can be computed by user u , r denotes a given cut-off rank, P i ( r ) denotes the precision on the i -th test case of u at a given cut-off rank r ,and rel i () is the binary function on the relevance of a given rank.
 MAR@K stands for Mean Average Recall at top K recommendation results. To be specific, MAR @ K = AR ( u ) @ K | U | ,where AR ( u ) @ K denotes the average recall at top k recommendation results on the test cases of user u ,and | U | indi-cates the number of the users. AR ( u ) @ K can be computed by 1 N where N u denotes the number of test cases for user u , r denotes a given cut-off rank, and rel i () is the binary function on the relevance of a given rank. 5.4 Overall Results of Recommendation To evaluate our PCR-LDA recommendation approach, we compare its recom-mendation performance with other baselines. To be specific, according to the parameter estimation approaches introduced in Section 4, the number of CCPs for LDA training is set to be 15. In Section 5.5 we will further discuss the setting of this parameter. For the LDA training, the two parameters  X  and  X  are empir-ically set to be 50 /Z and 0.2 according to discussion in [7]. Both PCR-LDA and the two baselines are implemented by C++ and the experiments are conducted on a 3GHZ  X  4 quad-core CPU, 3G main memory PC.

We first test the MAP @ K performance of each recommendation approach with respect to varying K , which are shown in Figure 4. From the results we can observe that PCR-LDA outperforms other baselines with a significant margin.
Figure 5 shows the MAR @ K of each recommendation approach. From the re-sults we can observe our PCR-LDA can achieve 100% performance when K = 10, which means they can ret urn recommendation list contains at least one ground truth activities for all contexts. It is because PCR-LDA takes advantage of many users X  context logs. In contrast, PCR-i has worse MAR@K due to the insufficient training data in individual user X  X  context logs for mining context-aware prefer-ence. Moreover, due to the different conte xt-aware preference between users, the popularity based approach CPR under-performs the other approaches. 5.5 Robustness Analysis CPR-LDA needs a parameter Z to determine the number of CCPs. Although we can empirically select Z by estimating perplexity, we still study the impact of such parameter to our recommendation results. Figure 6 shows the MAP @10 of PCR-LDA with respect to varying Z . From the results we can observe that the MAP @10 of PCR-LDA is impacted dramatically by a relatively small Z and becomes stable with relatively big Z . It is because when a relatively small Z is selected, all ACP-features may hav e strong relationships with each CCP. Thus the approach is actually near to combine all users X  context logs as one log for recommendation, which will introduce many noisy data. Another interesting phenomenon is that the MAP @10 peaks when Z is set to be 15, which is consis-tent with our experimental setting and i mplies the parameter selection method if effective. The experimental results of MAP @ K with other settings of K show the similar phenomena.
 5.6 Case Study In addition to the studies on the overall performance of our recommendation ap-proach, we also study the cases in which PCR-LDA outperforms the baselines. For example, Table 4 shows the top 3 recommendation results of each approach for two test cases of two different users given the  X  { (Isholiday:No),(Daype-riod: Evening), (Time range: PM22:00-23:00), (Day name: Monday), (Profile: General), (Location: Home) }  X , which may imply the users X  leisure time at home. In this case, the activity records of user #152 and user #343 X  X  test cases are Multimedia and Web , respectively. From the results, we can observe that PCR-LDA recommend relevant content categories in the top one position. In contract, PCR-i can only recommend relevant content categories in the top one position for one test case, and the Popularity based approach CPR always recommend same content categories for all users and thus sometimes performs not well. In this paper, we investigated how to exp loit user context logs for personalized context-aware recommendation by mining CCPs through topic models. To be specific, first we extract ACP-Feature bags for each user from their historical context logs. Then, we propose to mine users X  CCPs through topic models. Fi-nally, we make recommendation according to the given context and the CCP distribution of the given user. The experimental results from a real-world data set clearly show that our proposed recommendation approach can achieve good performance for personalized context-aware recommendation.

