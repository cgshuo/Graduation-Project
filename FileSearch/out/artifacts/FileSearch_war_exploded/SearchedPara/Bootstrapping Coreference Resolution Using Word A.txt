 Coreference resolution (CoRe) is the process of find-ing markables (noun phrases) referring to the same real world entity or concept. Until recently, most ap-proaches tried to solve the problem by binary classi-fication, where the probability of a pair of markables being coreferent is estimated from labeled data. Al-ternatively, a model that determines whether a mark-able is coreferent with a preceding cluster can be used. For both pair-based and cluster-based models, a well established feature model plays an important role. Typical systems use a rich feature space based on lexical, syntactic and semantic knowledge. Most commonly used features are described by Soon et al. (2001).

Most existing systems are supervised systems, trained on human-labeled benchmark data sets for English. These systems use linguistic features based on number, gender, person etc. It is a challenge to adapt these systems to new domains, genres and lan-guages because a significant human labeling effort is usually necessary to get good performance.

To address this challenge, we pursue an unsuper-vised self-training approach. We train a classifier on a corpus that is automatically labeled using asso-ciation information. Self-training approaches usu-ally include the use of some manually labeled data. In contrast, our self-trained system is not trained on any manually labeled data and is therefore a com-pletely unsupervised system. Although training on automatically labeled data can be viewed as a form of supervision, we reserve the term supervised sys-tem for systems that are trained on manually labeled data.

The key novelty of our approach is that we boot-strap a competitive CoRe system from association information that is mined from an unlabeled cor-pus in a completely unsupervised fashion. While this method is shallow, it provides valuable informa-tion for CoRe because it considers the actual iden-tity of the words in question. Consider the pair of markables (Obama, President) . It is a likely coref-erence pair, but this information is not accessible to standard CoRe systems because they only use string-based features (often called lexical features), named entity features and semantic word class fea-tures (e.g., from WordNet) that do not distinguish, say, Obama from Hawking .

In our approach, word association information is used for clustering markables in unsupervised learn-ing. Association information is calculated as asso-ciation scores between heads of markables as de-scribed below. We view association information as an example of a shallow feature space which con-trasts with the rich feature space that is generally used in CoRe.
 Our experiments are conducted using the MCORE system ( X  X odular COreference REso-lution X ). 1 MCORE can operate in three different settings: unsupervised (subsystem A-INF ), super-vised (subsystem SUCRE (Kobdani and Sch  X  utze, 2010)), and self-trained (subsystem UNSEL ). The unsupervised subsystem A-INF ( X  X ssociation INFormation X ) uses the association scores between heads as the distance measure when clustering markables. SUCRE ( X  X Upervised Coreference REsolution X ) is trained on a labeled corpus (manually or automatically labeled) similar to standard CoRe systems. Finally, the unsupervised self-trained subsystem UNSEL ( X  X Nsupervised SELf-trained X ) uses the unsupervised subsystem A-INF to automatically label an unlabeled corpus that is then used as a training set for SUCRE.
Our main contributions in this paper are as fol-lows: 1. We demonstrate that word association informa-2. We introduce an unsupervised self-trained 3. We show that the performance of UNSEL is 4. MCORE is a flexible and modular framework
This paper is organized as follows. Related work is discussed in Section 2. In Section 3, we present our system architecture. Section 4 describes the ex-periments and Section 5 presents and discusses our results. The final section presents our conclusions. There are three main approaches to CoRe: super-vised, semi-supervised (or weakly supervised) and unsupervised. We use the term semi-supervised for approaches that use some amount of human-labeled coreference pairs.

M  X  uller et al. (2002) used co-training for coref-erence resolution, a semi-supervised method. Co-training puts features into disjoint subsets when learning from labeled and unlabeled data and tries to leverage this split for better performance. Ng and Cardie (2003) use self-training in a multiple-learner framework and report performance superior to co-training. They argue that the multiple learner ap-proach is a better choice for CoRe than the multi-ple view approach of co-training. Our self-trained model combines multiple learners (A-INF and SU-CRE) and multiple views (shallow/rich informa-tion). A key difference to the work by M  X  uller et al. (2002) and Ng and Cardie (2003) is that we do not use any human-labeled coreference pairs.

Our basic idea of self-training without human la-bels is similar to (Kehler et al., 2004), but we ad-dress the general CoRe problem, not just pronoun interpretation.
 Turning to unsupervised CoRe, Haghighi and Klein (2007) proposed a generative Bayesian model with good performance. Poon and Domingos (2008) introduced an unsupervised system in the framework of Markov logic. Ng (2008) presented a generative model that views coreference as an EM clustering process. We will show that our system, which is simpler than prior work, outperforms these systems.
Haghighi and Klein (2010) present an  X  X lmost un-supervised X  CoRe system. In this paper, we only compare with completely unsupervised approaches, not with approaches that make some limited use of labeled data.

Recent work by Haghighi and Klein (2009), Klen-ner and Ailloud (2009) and Raghunathan et al. (2010) challenges the appropriateness of machine learning methods for CoRe. These researchers show that a  X  X eterministic X  system (essentially a rule-based system) that uses a rich feature space includ-ing lexical, syntactic and semantic features can im-prove CoRe performance. Almost all CoRe systems, including ours, use a limited number of rules or fil-ters, e.g., to implement binding condition A that re-flexives must have a close antecedent in some sense of  X  X lose X . In our view, systems that use a few ba-sic filters are fundamentally different from carefully tuned systems with a large number of complex rules, some of which use specific lexical information. A limitation of complex rule-based systems is that they require substantial effort to encode the large number of deterministic constraints that guarantee good per-formance. Moreover, these systems are not adapt-able (since they are not machine-learned) and may have to be rewritten for each new domain, genre and language. Consequently, we do not compare our performance with deterministic systems.
 Ponzetto (2010) extracts metadata from Wikipedia for supervised CoRe. Using such additional resources in our unsupervised system should further improve CoRe performance. Elsner et al. (2009) present an unsupervised algorithm for identifying clusters of entities that belong to the same named entity (NE) class. Determining common membership in an NE class like person is an easier task than determining coreference of two NEs. Figure 1 illustrates the system architecture of our unsupervised self-trained CoRe system (UNSEL). Oval nodes are data, box nodes are processes. We take a self-training approach to coreference resolu-tion: We first label the corpus using the unsuper-vised model A-INF and then train the supervised model SUCRE on this automatically labeled train-ing corpus. Even though we train on a labeled cor-pus, the labeling of the corpus is produced in a com-pletely automatic fashion, without recourse to hu-man labeling. Thus, it is an unsupervised approach.
The MCORE architecture is very flexible; in par-ticular, as will be explained presently, it can be eas-ily adapted for supervised as well as unsupervised settings.

The unsupervised and supervised models have an identical top level architecture; we illustrate this in Figure 2. In preprocessing , tokens (words), mark-ables and their attributes are extracted from the input text. The key difference between the unsupervised and supervised approaches is in how pair estimation is accomplished  X  see Sections 3.1 &amp; 3.2 for de-tails.
 The main task in chain estimation is clustering. Figure 3 presents our clustering method, which is used for both supervised and unsupervised CoRe. We search for the best predicted antecedent (with coreference probability p  X  0 . 5 ) from right to left starting from the end of the document. McEnery et al. (1997) showed that in 98.68% of cases the an-tecedent is within a 10-sentence window; hence we use a window of 10 sentences for search. We have found that limiting the search to a window increases both efficiency and effectiveness.

Filtering. We use a feature definition language to define the templates according to which the fil-ters and features are calculated. These templates are hard constraints that filter out all cases that are clearly disreferent, e.g., (he, she) or (he, they) . We use the following filters: (i) the antecedent of a re-flexive pronoun must be in the same sentence; (ii) the antecedent of a pronoun must occur at a distance of at most 3 sentences; (iii) a coreferent pair of a noun and a pronoun or of two pronouns must not
Chain Estimation ( M 1 , M 2 , . . . , M n ) Pair Estimation ( M i , M j ):
Filtering ( M i , M j ): disagree in number; (iv) a coreferent pair of two pro-nouns must not disagree in gender. These four filters are used in supervised and unsupervised modes of MCORE. 3.1 Unsupervised Model (A-INF) Figure 4 (top) shows how A-INF performs pair esti-mation. First, in the pair generation step, all possible pairs inside 10 sentences are generated. Other steps are separately explained for train and test as follows.
Train. In addition to the filters (i) X (iv) described above, we use the following filter: (v) If the head of markable M 2 matches the head of the preceding markable M 1 , then we ignore all other pairs for M 2 in the calculation of association scores.

This additional filter is necessary because an ap-proach without some kind of string matching con-straint yields poor results, given the importance of string matching for CoRe. As we will show below, even the simple filters (i) X (v) are sufficient to learn high-quality association scores; this means that we do not need the complex features of  X  X eterminis-tic X  systems. However, if such complex features are available, then we can use them to improve perfor-mance in our self-trained setting.

To learn word association information from an unlabeled corpus (see Section 4), we compute mu-tual information (MI) scores between heads of mark-ables. We define MI as follows: (Cover and Thomas, 1991)
MI ( a, b ) = X E.g., P ( a,  X  b ) is the probability of a pair whose two elements are a and a word not equal to b .

Test. A key virtue of our approach is that in the classification of pairs as coreferent/disreferent, the coreference probability p estimated in supervised learning plays exactly the same role as the associ-ation information score N (defined below). For p , it is important that we only consider pairs with p  X  0 . 5 as potentially coreferent (see Figure 3). To be able to impose the same constraint on N , we normalize the MI scores by the maximum values of the two words and take the average: N ( a, b ) = In the above equation, the value of N indicates how strongly two words are associated. N is normalized to ensure 0  X  N  X  1 . If a or b did not occur, then we set N =0 .

In filtering for test, we use filters (i) X (iv). We then fetch the MI values and calculate N values. The clustering algorithm described in Figure 3 uses these N values in exactly the same way as p : we search for the antecedent with the maximum association score N greater than 0 . 5 from right to left starting from the end of the document.

As we will see below, using N scores acquired from an unlabeled corpus as the only source of in-formation for CoRe performs surprising well. How-ever, the weaknesses of this approach are (i) the fail-ure to cover pairs that do not occur in the unlabeled corpus (negatively affecting recall) and (ii) the gen-eration of pairs that are not plausible candidates for coreference (negatively affecting precision). To ad-dress these problems, we train a model on a corpus labeled by A-INF in a self-training approach. 3.2 Supervised Model (SUCRE) Figure 4 (bottom) presents the architecture of pair estimation for the supervised approach (SUCRE).
In the pair generation step for train, we take each coreferent markable pair ( M i , M j ) without inter-vening coreferent markables and use ( M i , M j ) as a positive training instance and ( M i , M k ) , i &lt; k &lt; j , as negative training instances. For test, we generate all possible pairs within 10 sentences. After filter-ing, we then calculate a feature vector for each gen-erated pair that survived filters (i) X (iv).
Our basic features are similar to those described by Soon et al. (2001): string-based features, dis-tance features, span features, part-of-speech fea-tures, grammatical features, semantic features, and agreement features. These basic features are engi-neered with the goal of creating a feature set that will result in good performance. For this purpose we used the relational feature engineering frame-work which has been presented in (Kobdani et al., 2010). It includes powerful and flexible methods for implementing and extracting new features. It allows systematic and fast search of the space of features and thereby reduces the time and effort needed for defining optimal features. We believe that the good performance of our supervised system SUCRE (ta-bles 1 and 2) is the result of our feature engineering approach. 2
As our classification method, we use a decision tree 3 (Quinlan, 1993) that is trained on the training set to estimate the coreference probability p for a pair and then applied to the test set. Note that, as is standard in CoRe, filtering and feature calculation are exactly the same for training and test, but that pair generation is different as described above. 4.1 Data Sets For computing word association, we used a cor-pus of about 63,000 documents from the 2009 En-glish Wikipedia (the articles that were larger than 200 bytes). This corpus consists of more than 33.8 million tokens; the average document length is 500 tokens. The corpus was parsed using the Berkeley parser (Petrov and Klein, 2007). We ignored all sen-tences that had no parse output. The number of de-tected markables (all noun phrases extracted from parse trees) is about 9 million.

We evaluate unsupervised, supervised and self-trained models on ACE (Phase 2) (Mitchell et al., 2003). 4 This data set is one of the most widely used CoRe benchmarks and was used by the sys-tems that are most comparable to our approach; in particular, it was used in most prior work on unsu-pervised CoRe. The corpus is composed of three data sets from three different news sources. We give the number of test documents for each: (i) Broadcast News (BNEWS): 51. (ii) Newspaper (NPAPER): 17. (iii) Newswire (NWIRE): 29. We report re-sults for true markables (markables extracted from the answer keys) to be able to compare with other systems that use true markables.
 In addition, we use the recently published OntoNotes benchmark (Recasens et al., 2010). OntoNotes is an excerpt of news from the OntoNotes Corpus Release 2.0 (Pradhan et al., 2007). The ad-vantage of OntoNotes is that it contains two parallel annotations: (i) a gold setting , gold standard manual annotations of the preprocessing information and (ii) an automatic setting , automatically predicted anno-tations of the preprocessing information. The au-tomatic setting reflects the situation a CoRe system faces in reality; in contrast, the gold setting should be considered less realistic.

The issue of gold vs. automatic setting is directly related to a second important evaluation issue: the influence of markable detection on CoRe evaluation measures. In a real application, we do not have ac-cess to true markables, so an evaluation on system markables (markables automatically detected by the system) reflects actual expected performance better. However, reporting only CoRe numbers (even for system markables) is not sufficient either since ac-curacy of markable detection is necessary to inter-pret CoRe scores. Thus, we need (i) measures of the quality of system markables (i.e., an evaluation of the markable detection subtask) and CoRe per-formance on system markables as well as (ii) a mea-sure of CoRe performance on true markables. We use OntoNotes in this paper to perform such a, in our view, complete and realistic evaluation of CoRe. The two evaluations correspond to the two evalua-tions performed at SemEval-2010 (Recasens et al., 2010): the automatic setting with system markables and the gold setting with true markables. Test set size is 85 documents.

In the experiments with A-INF we use Wikipedia to compute association information and then evalu-ate the model on the test sets of ACE and OntoNotes. For the experiments with UNSEL, we use its unsu-pervised subsystem A-INF (which uses Wikipedia association scores) to automatically label the train-ing sets of ACE and OntoNotes. Then for each data set, the supervised subsystem of UNSEL (i.e., SU-CRE) is trained on its automatically labeled training set and then evaluated on its test set. Finally, for the supervised experiments, we use the manually la-beled training sets and evaluate on the corresponding test sets. 4.2 Evaluation Metrics We report recall, precision, and F 1 for MUC (Vilain et al., 1995), B 3 (Bagga and Baldwin, 1998), and CEAF (Luo, 2005). We selected these three met-rics because a single metric is often misleading and because we need to use metrics that were used in previous unsupervised work.

It is well known that MUC by itself is insuffi-cient because it gives misleadingly high scores to the  X  X ingle-chain X  system that puts all markables into one chain (Luo et al., 2004; Finkel and Manning, 2008). However, B 3 and CEAF have a different bias: they give high scores to the  X  X ll-singletons X  system that puts each markable in a separate chain. On OntoNotes test, we get B 3 = 83 . 2 and CEAF = 71 . 2 for all-singletons, which incorrectly sug-gests that performance is good; but MUC F 1 is 0 in this case, demonstrating that all-singletons performs poorly. With the goal of performing a complete eval-uation, one that punishes all-singletons as well as single-chain, we use one of the following two com-binations: (i) MUC and B 3 or (ii) MUC and CEAF. Recasens et al. (2010) showed that B 3 and CEAF are highly correlated (Pearson X  X  r = 0 . 91 ). There-fore, either combination (i) or combination (ii) fairly characterizes CoRe performance. Table 1 compares our unsupervised self-trained model UNSEL and unsupervised model A-INF to
Prec. Rec. F 1 Prec. Rec. F 1
Prec. Rec. F 1 Prec. Rec. F 1
Prec. Rec. F 1 Prec. Rec. F 1
Prec. Rec. F 1 Prec. Rec. F 1
Prec. Rec. F 1 Prec. Rec. F 1 P&amp;D (Poon and Domingos, 2008) on ACE-2; and to Ng (Ng, 2008) and H&amp;K 5 (Haghighi and Klein, 2007) on ACE2003. To our knowledge, these three papers are the best and most recent evaluation results for unsupervised learning and they all report results on ACE-2 and ACE-2003. Results on SUCRE will be discussed later in this section.

A-INF scores are below some of the earlier unsu-pervised work reported in the literature (lines 2, 6, 10) although they are close to competitive on two of the datasets (lines 15 and 20: MUC scores are equal or better, CEAF scores are worse). Given the simplicity of A-INF, which uses nothing but asso-ciations mined from a large unannotated corpus, its performance is surprisingly good.

Turning to UNSEL, we see that F 1 is always bet-ter for UNSEL than for A-INF, for all three mea-sures (lines 3 vs 2, 7 vs 6, 11 vs 10, 16 vs 15, 21 vs 20). This demonstrates that the self-training step of UNSEL is able to correct many of the errors that A-INF commits. Both precision and recall are im-proved with two exceptions: recall of B 3 decreases from line 2 to 3 and from 15 to 16.
 When comparing the unsupervised system UN-SEL to previous unsupervised results, we find that UNSEL X  X  F 1 is higher in all runs (lines 3 vs 1, 7 vs 5, 11 vs 9, 16 vs 13&amp;14, 21 vs 18&amp;19). The differ-ences are large (up to 11%) compared to H&amp;K and Ng. The difference to P&amp;D is smaller, ranging from 2.7% (B 3 , lines 11 vs 9) to 0.7% (MUC, lines 7 vs 5). Given that MCORE is a simpler and more ef-ficient system than this prior work on unsupervised CoRe, these results are promising.

In contrast to F 1 , there is no consistent trend for precision and recall. For example, P&amp;D is better than UNSEL on MUC recall for BNEWS-ACE-2 (lines 1 vs 3) and H&amp;K is better than UNSEL on CEAF precision for NWIRE-ACE2003 (lines 18 vs 21). But this higher variability for precision and re-call is to be expected since every system trades the two measures off differently.

These results show that the application of self-training significantly improves performance. As dis-cussed in Section 3.1, self-training has positive ef-fects on both recall and precision. We now present two simplified examples that illustrate this point.
Example for recall. Consider the markable pair ( Novoselov 6 ,he ) in the test set. Its N score is 0 be-cause our subset of 2009 Wikipedia sentences has no occurrence of Novoselov. However, A-INF finds many similar pairs like ( Einstein,he ) and ( Hawk-ing,he ), pairs that have high N scores. Suppose we represent pairs using the following five fea-tures: &lt; sentence distance, string match, type of first markable, type of second markable, number agreement &gt; . Then ( Einstein,he ), ( Hawking,he ) and ( Novoselov,he ) will all be assigned the feature vector &lt; 1, No, Proper Noun, Personal Pronoun, Yes &gt; . We can now automatically label Wikipedia using A-INF  X  this will label ( Einstein,he ) and ( Hawking,he ) as coreferent  X  and train SUCRE on the resulting train-ing set. SUCRE can then resolve the coreference ( Novoselov,he ) correctly. We call this the better re-call effect .

Example for precision. Using the same repre-sentation of pairs, suppose that for the sequence of markables Biden, Obama, President the markable pairs ( Biden,President ) and ( Obama,President ) are assigned the feature vectors &lt; 8, No, Proper Noun, Proper Noun, Yes &gt; and &lt; 1, No, Proper Noun, Proper Noun, Yes &gt; , respectively. Since both pairs have N scores &gt; 0 . 5 , A-INF incorrectly puts the three markables into one cluster. But as we would expect, A-INF labels many more markable pairs with the second feature vector (distance=1) as coref-erent than with the first one (distance=8) in the en-tire automatically labeled training set. If we now train SUCRE on this training set, it can resolve such cases in the test set correctly even though they are so similar: ( Biden,President ) is classified as disref-erent and ( Obama,President ) as coreferent. We call this the better precision effect .

Recall that UNSEL has better recall and precision than A-INF in almost all cases (discussion of Ta-ble 1). This result shows that better precision and better recall effects do indeed benefit UNSEL.
To summarize, the advantages of our self-training approach are: (i) We cover cases that do not occur in the unlabeled corpus (better recall effect); and (ii) we use the leveraging effect of a rich feature space including distance, person, number, gender etc. to improve precision (better precision effect).
Learning curve. Figure 5 presents MUC scores of A-INF as a function of the number of Wikipedia articles used in unsupervised learning. We can see that a small number of input articles (e.g., 100) re-sults in low recall and high precision. When we in-crease the number of input articles, recall rapidly in-creases and precision rapidly decreases up to about 10,000 articles. Increase and decrease continue more slowly after that. F 1 increases throughout be-cause lower precision is compensated by higher re-call. This learning curve demonstrates the impor-tance of the size of the corpus for A-INF.
 Comparison of UNSEL with SUCRE Table 2 compares our unsupervised self-trained (UNSEL) and supervised (SUCRE) models with the recently published SemEval-2010 OntoNotes re-sults (gold and automatic settings). We compare with the scores of the two best systems, Relax and SUCRE 2010 7 (for the gold setting with true mark-ables) and SUCRE 2010 and Tanl-1 (for the automatic setting with system markables, 89.9% markable de-tection (MD) F 1 ). It is apparent from this table that our supervised and unsupervised self-trained mod-els outperform Relax, SUCRE 2010 and Tanl-1. We should make clear that we did not use the test set for development to ensure a fair comparison with the participant systems at SemEval-2010.

Table 1 shows that the unsupervised self-trained system (UNSEL) does a lot worse than the su-pervised system (SUCRE) on ACE. 8 In contrast, UNSEL performs almost as well as SUCRE on OntoNotes (Table 2), for both gold and automatic settings: F 1 differences range from + . 1 (Auto-matic, B 3 ) to  X  1 . 3 (Gold, MUC). We suspect that this is partly due to the much higher proportion of singletons in OntoNotes than in ACE-2: 85.2% (OntoNotes) vs. 60.2% (ACE-2). The low recall of the automatic labeling by A-INF introduces a bias for singletons when UNSEL is self-trained. Another reason is that the OntoNotes training set is about 4 times larger than each of BNEWS, NWIRE and NPAPER training sets. With more training data, UNSEL can correct more of its precision and re-call errors. For an unsupervised approach, which only needs unlabeled data, there is little cost to cre-ating large training sets. Thus, this comparison of ACE-2/Ontonotes results is evidence that in a realis-tic scenario using association information in an un-supervised self-trained system is almost as good as a system trained on manually labeled data.
 It is important to note that the comparison of SUCRE to UNSEL is the most direct comparison of supervised and unsupervised CoRe learning we are aware of. The two systems are identical with the single exception that they are trained on manual vs. automatic coreference labels. In this paper, we have demonstrated the utility of association information for coreference resolution. We first developed a simple unsupervised model for shallow CoRe that only uses association information for finding coreference chains. We then introduced an unsupervised self-trained approach where a su-pervised model is trained on a corpus that was auto-matically labeled by the unsupervised model based on the association information. The results of the ex-periments indicate that the performance of the unsu-pervised self-trained approach is better than the per-formance of other unsupervised learning systems. In addition, we showed that our system is a flexible and modular framework that is able to learn from data with different quality (perfect vs noisy markable de-tection) and domain; and is able to deliver good re-sults for shallow information spaces and competitive results for rich feature spaces. Finally, our frame-work is the first CoRe system that is designed to sup-port three major modes of machine learning equally well: supervised, self-trained and unsupervised. This research was funded by DFG (grant SCHU 2246/4).
 We thank Aoife Cahill, Alexander Fraser, Thomas M  X  uller and the anonymous reviewers for their help-ful comments.
