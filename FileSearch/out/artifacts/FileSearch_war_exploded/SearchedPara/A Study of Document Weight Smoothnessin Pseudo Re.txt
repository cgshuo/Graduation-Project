 Pseudo relevance feedback (PRF) assumes that the top n (e.g., 30) documents in the first-round retrieval are all relevant to the query. Due to its automatic manner and effective performance, PRF has been widely applied in information retrieval (IR), where the PRF (i.e., top n ) documents are often used to derive a new query model that expands the original query [5,8]. The document weight, which represents the weight of a PRF document in the query expansion (QE) model, is a key factor for the QE performance [8].
 In this paper, we investigate the smoothness issue of document weights in QE. The term smoothness in this paper does not refer to the smoothness of document language models [11,14,9]. Instead, it is with respect to the PRF document weights used in QE and means that, firstly, the doc ument weights decrease smoothly (i.e. gradually or slowly) from the top-ranked document to the subsequent ones along the rank list, and secondly, the document weights are smooth within the topi-cally similar documents, i.e., the topically similar documents should have simi-lar weights. We postulate that a reasonably smooth document weighting function (weighting function for short) can benefit the QE performance. First, it can re-duce the risk when some topmost-ranked documents with very high weights are not truly relevant. Second, considering the inter-document similarity can make smoother the conventional weighting functions which often take into account the query-document similarity only.

We test the above hypothesis under the Relevance Model (RM) [5], which is a typical language model based QE approach [8]. In RM, effectively the document weight consists of two components: the document relevance score and the doc-ument prior. The former represents the initial document relevance probability, while the latter is the prior probability of selecting the corresponding document to estimate the RM. In implementation (e.g. in the RM1 [5]), the document prior is set to be uniform, and the document relevance score is the query-likelihood (QL) [11,14,8]. Empirical evidence (se e Section 2) shows that the QL scores de-crease rapidly along the topmost-ranked k ( k&lt;n ) documents, where the truly relevant ones, however, are often quite randomly distributed. Moreover, the QL scoring function only considers the query-document similarity but ignores the inter-document similarity.

In the literature, various methods have been proposed to smooth the docu-ment relevance score or revise the document prior, thereby adjusting the doc-ument weights. Based on the clustering hypothesis [12], the score regulation method [2,3,4] forces the topically related documents to have similar relevance scores. In a similar manner, the graph-based smoothing framework proposed in [9] can also smooth the document relevance scores. To the best of our knowledge, neither of the above methods has been used to smooth the relevance scores for query expansion. Moreover, they do not e xplicitly consider the score smoothness along the document rank list. As for revising the document prior, the rank-related prior was proposed in [6] by utilizing the document rank and document length. This method, however, does not consider the inter-document similarity.
In this paper, we propose a two-step document weight smoothing method to obtain smoother weighting functions. The first step is to smooth the weights of the topmost documents in order to prev ent the document weights from drop-ping sharply along the rank list. The second step aims to further smooth the document weights of all the PRF documents, by considering the inter-document similarity. Specifically, we allocate the w eights of topmost-ranked documents to the lower-ranked documents which are statistically similar to the topmost ones. In this step, different weight allocation strategies as well as different similar-ity measures are considered and analy zed in terms of their effects on document weight smoothness, thus instantiating several smoothing methods each with dif-ferent smoothing effect. Experiments on three TREC collections show that the methods with better smoothing effects g enerally give better QE performance. In addition, the proposed smoothing method can significantly improve the per-formance of the RM, and outperform three comparative methods, i.e., the score regulation approach [2,3], the graph-based smoothing approach [9] and the rank-related prior approach [6], for revising the document weights in the RM. In this section, we start with a description of the Relevance Model (RM) and a re-formulation of the model for explicitly applying revised (e.g. smoothed) weighting functions in it. We then provide empirical evidence, showing that the query-likehood scores (as RM X  X  documen t weights) are not reasonably smooth along the rank list. 2.1 The Relevance Model (RM) For each given query q =( q 1 ,q 2 ,  X  X  X  ,q m ), based on the corresponding PRF doc-ument set M ( | M | = n ), the Relevance Model (RM) [5] estimates an expanded query model: where p ( w |  X  R ) is the estimated relevance model 1 . A number of terms with top probabilities in p ( w |  X  R ) will be used to estimate the query expansion (QE) model (i.e. the expanded query model). In Equation 1, p ( w |  X  d ) is the probability of a term w in the language model  X  d for a document d , p (  X  d )is d  X  X  prior probability, and p ( q |  X  d ) is the query likelihood (QL) [11,14]: In RM, the weighting function is: where the QL relevance score p ( q |  X  d ) and document prior p (  X  d ) are integrated to form the document weight. The f ( d, q ) plays a key role in RM since it distinguishes the RM from a mixture of document language model (say d  X  M p ( w |  X  d )).
To apply revised weighting functions under the RM framework, we re-formulate the RM as: where  X  f ( d, q ) denotes any revised document-w eighting function that satisfies 2.2 Smoothness of QL as the Document Weight In the RM [5,8], since the document prior p (  X  d ) is assumed to be uniform, it turns out that the weighting function is the normalized query likelihood (QL): The normalized QL scores are called as QL weights in this paper. From Equa-tion 5, it turns out that the QL weights do not take into account the inter-document similarity. Therefore, we just present the empirical evidence showing that the QL weights are not reasonably smooth along the PRF rank list. We start with a small example on one TREC collection, and then present more sta-tistical data on three TREC collections. In both cases, for each query, the top n = 30 documents are selected for the PRF documents. Note that the following data correspond to the topmost k ( k&lt;n ) documents. Therefore, the sum of QL weights of these topmost documents for each query will not necessary be 1.
The data in Table 1 are from the WSJ8792 collection and three queries. For each query, the QL weights of the topmost k = 4 documents are listed. As shown in Table 1, the QL weights decrease rapidly along the rank list, e.g., for all three queries, the weights of d 1 are about twice the d 3  X  X  weights and three times the d  X  X  weights. All the d 1 s, however, are non-relevant.

Next, we provide more statistical data about the topmost 4 documents, de-noted as d i (1  X  i  X  4) for different sets of queries from three TREC collections. First, we define two statistics: where Q denotes the set of all involved queries, | Q | is the number of queries, and r ( d i ,q )=1if d i is truly relevant to q , and 0 otherwise. The Mf QL ( d i ) computes the d i  X  X  mean QL weight, and the Mr ( d i ) denotes d i  X  X  mean relevance judgement. The values of these two statistics are summarized in Table 2, which shows that the mean QL weights drop rapidly along the topmost 4 documents. The truly relevant documents, however, are rather randomly distributed, since the mean relevance judgements decrease quite slowly. This indicates that the QL weights are not reasonably smooth on these collections and queries. Now, we propose a two-step weight smoothing method, in which the first step is to smooth the sharply dropping weights within the topmost-ranked documents, and the second step is to allocate the weights in the topmost-ranked documents to the lower-ranked documents, based on the similarity between these two parts. 3.1 Smoothing Topmost Weights Recall that in Section 2.2, we present ed the initial evidence that document weights drop rapidly along the topmost-ranked k ( k&lt;n )documents.Tosolve this problem, our basic idea is to smoo th every adjacently-ranked document pair subsequently, along the rank list. Specifically, given the topmost document to k  X  1, smooth  X  f ( d i ,q )and f ( d i +1 ,q ) as follows: The average operation (i.e. avg ) can reduce the difference between d i  X  X  weight and d i +1  X  X  weight subsequently. For example, consider the document weights of the query 151 in Table 1. The strategy is to first change  X  f ( d 1 ,q ) (0.2060) and and f ( d 3 ,q ) (0.0640) as the average weight 0.1051. The revised weights for these four documents are 0.1865, 0.1462, 0.1051 and 0.1051, which are smoother than the original weights, in the sense that the d 1  X  X  weight has been reduced, while the weights of d 2 and d 3 have been relatively improved.

The above strategy can retain the weight sum of topmost k documents, making the weight sum of all PRF documents to be always 1. Actually, we also considered smoothing the original weighting function by interpolating it with a uniform weight-ing function which assigns the same weight for every document. However, one more parameter (i.e., the interpola tion coefficient) was required to control the smoothing, and according to our prior study the experimental results were not so good. 3.2 Improving Lower Weights In this step, we aim to allocate the weights of topmost-ranked k ( k&lt;n )documents to the lower-ranked documents, accord ing to the similarity between these two parts of documents. This is not only to further smooth the document weights, but also to improve the ranks 2 of those documents which are truly relevant but have lower weights. Recall that usually the topmost-ranked documents (e.g, the first 5 documents) are more likely to be truly relevant, since the corresponding retrieval precision (e.g., P@5) is often relatively higher compared with the aver-age precision of all the PRF documents. According to the clustering hypothesis [12], the weight allocation methods, in which the allocation is actually based on the similarity value with respect to the topmost-ranked documents, could boost the weights of the truly relevant documents which may have lower initial weights. In the following, we present two weight allocation methods (WAs) with different smoothing effects. Note that in the formulation of WAs,  X  f ( d, q )isthe weighing function obtained from the previous step (see Section 3.1). Linear Weight Allocation (LWA). To see the basic idea, let us consider one topmost-ranked document d t , and a lower-ranked document d l . Our basic idea is to keep d t  X  X  weight unchanged, and meanwhile improve d l  X  X  weight based on proportion of d t  X  X  weight, and the allocation can be formulated as: where  X  f LW A ( d l ,q ) is the LWA weight for the d l .Forthe d t , LWA retains its own represent the LWA weight of d t due to the fact that sim ( d t ,d t )=1.
Next, if considering all the k topmost documents, for any PRF document d ,we have where  X  f LW A ( d, q ) denotes the LWA weighting function, Z is the normalization factor, and the M t is the set of the topmost k documents.
 Nonlinear Weight Allocation (NLWA). In addition to LWA, we propose a nonlinear version of weight allocation, called NLWA, which has the same basic idea as LWA. The difference between NLWA and LWA is the specific allocation strategy. For a topmost document d t and a lower one d l ,theNLWAweightsare formulated as: where d can be d t or d l . In a similar manner as for the LWA, if considering all the topmost documents, for any PRF document d , the NLWA weighting function is: Analyzing WAs X  Effects on Smoothing. Generally, the LWA weights are smoother than the NLWA weights. For simplicity, our analysis on WAs X  smooth-ing effects is only based on any two documents d t and d l ,where d t is ranked and from the Equation 10, we can obtain  X  f NLWA ( l )= s quotient of d l  X  X  LWA weight and d l  X  X  NLWA weight is: It turns out that d l  X  X  LWA weight is larger than its NLWA weight. Since d t  X  X  weight is unchanged in both LWA and NLWA, we can conclude that LWA makes the weight difference between d t and d l smaller than NLWA.
 Similarity Measurements with Different Smoothing Effects. The simi-larity metric that we adopt is the Cosine similarity between the tf  X  idf vectors of two documents. Here, we set two specific options for the Cosine similarity: the first option (S1) is the similarity based on the document vectors with all the terms, while the second option (S2) is the similarity based on the document vectors with query terms removed. Since query terms often have high term fre-quency in the PRF documents, the similarity values in S1 are generally larger than those in S2. If similarity values are larger, the lower-ranked documents can have more weights allocated by the WAs. Therefore, the S1 can lead to smoother document weights than the S2.
 Overall Smoothing Effect Analysis. Since different similarity measurement options have different smoothing effects, it is necessary to investigate different combinations of the weight allocation method (LWA or NLWA) and the similarity measurement option (S1 or S2) for the PRF. Accordingly, we denote the four resulting methods as LWA S1, LWA S2, NLWA S1 and NLWA S2. With the same similarity option, LWAs X  weights are generally more smooth than NLWAs X  weights. On the other hand, the similarity option S1 can give smoother weighting function than the S2 if we use the same weight allocation (WA) method. 4.1 Evaluation Configuration Collections. The evaluation involves topics 151-200 on WSJ87-92 (173,252 doc-uments) and AP88-89 (164,597 documents) in TREC disks 1 and 2, as well as topics 601-700 on ROBUST 2004 (528,155 documents) in TREC disks 4 and 5. The title filed of the topics are used as queries. The documents involved are related to a variety of texts, e.g., newswi re and journal articles. Lemur toolkit 4.7 [10] is used for indexing and retrieval. All collections are stemmed using the Porter stemmer and a standard stop words list is removed during the indexing. Evaluation Set-Up. The first-round retrieval is carried out by a standard lan-guage model (LM), i.e., the query-likelihood (QL) model [14,11]. LM is set as one of the baseline methods. The smoothing method for the document language model is the Dirichlet prior [14] with the fixed value 700. After the first-round retrieval, the top n ranked documents are selected as the pseudo relevance feed-back (PRF) documents. Due to the limited space, only the results with respect to n = 30 PRF documents will be reported. Nevertheless, we have similar ob-servations on other n (e.g., 50, 70, 90). Relevance Model (RM) in Equation 1, is selected as the second baseline metho d, where the document prior is set as uniform. For all the involved query expansion (QE) models, The top 100 terms are selected for the QE terms.
 Evaluation Procedure. The aim is to test the query expansion performance of different weighting functions. Recall that different weighting functions in Equa-tion 4 have different QE models. First, we evaluate the first-step of the proposed weight smoothing method, i.e., the smoothing topmost weights (STW) described in Section 3.1. Next, we compare different combinations of the weight allocation method (LWA or NLWA) and the similarity option (with query (S1) or without query (S1)).

We then compare the proposed approach with other three methods which can be used to adjust the document weights. They are: the score regulation (SR) approach [2,3,4], the graph-based smoothing framework [9], and the rank-related priors (RRP) [6]. The score regulation method is formulated as: where f  X  is the optimal relevance score and y is the original relevance score (i.e., QL score). We use the normalized f  X  (i.e., the sum is 1) as the weighting function for Equation 4. Under the smoothing framework [9], the DSDG method (i.e., smoothing relevance score with document graph) is formulated as: nal score. We use the normalized s as the corresponding weighting function for Equation 4. The rank-related priors [6] can be formulated as: where | d | is the d  X  X  document length and Rank ( d )is d  X  X  rank. This prior p (  X  d ) and the QL scores are integrated as the document weights in Equation 3. Parameter Configuration. For the proposed smoothing methods (i.e., STW and WAs), we tested different k in [2 , 10] with the increment 1. For the SR, we tuned three parameters: the  X  in [0 . 1 , 0 . 9] with the increment 0.1, the t  X  1 in [0 . 1 , 0 . 9] with the step 0.1, and the number of nearest neighbor kNN in [5 , 10] with the step 1. For the DSDG, we tuned two parameters: the  X  in [0 . 1 , 0 . 9] with the increment 0.1 and the nearest neighbor kNN in [5 , 10] with the step 1. The iteration number is fixed to 3. Basically, the above parameter settings for both SR and DSDG are consistent with those in the original papers [2,9]. The values of kNN are smaller than values in [2,9], since we focus on the PRF task. As for the RRP, the  X  is set as 140 and the  X  is set as 50, where both values are the optimal values reported in [6].
 Evaluation Metrics. The Mean Average Precision (MAP), which reflects the overall ranking performance, is adopted as the primary evaluation metric. The Wilcoxon signed rank test is the measure of the statistical significance of the improvement over baseline methods. For the original and the expanded query models, 1000 documents retrieved by the KL-divergence language model [10] are used for the performance evaluation. 4.2 Evaluation on Smoothing Topmost Weights The aim is to test the performance of the smoothing topmost weights (STW) method described in Section 3.1. The results are reported in Figure 1, from which we can come up with the following observations. Firstly, the STW X  X  performance increases before the k reaches a value ( k = 6 on WSJ8792 and k = 4 on other collections), and then performan ce stabilizes. Secondly, for every k ,STWout-performs the baseline (RM) on every co llection. The best performance of STW is reported in Table 3, from which we can observe that STW outperforms RM by about 2.8%, 4.7%, and 2.7% on three collections, respectively. 4.3 Evaluation on Weight Allocation Methods This set of experiments evaluates differ ent combinations of the weight alloca-tion method (LWA or NLWA) and the similarity measurement (S1 or S2) (see Section 3.2). The QE results of the fou r methods are summarized in Figure 1.
Generally, the results show that the smoother weighing functions generally give better results. Firstly, for every k , LWAs outperform the STW. This supports the effectiveness of the second step of the pro posed smoothing framework. Secondly, in most cases, the LWA S1, the most smooth method, gives the best performance, and LWAs generally outperform the NLW As. Thirdly, each WA method with the S1 performs better than the WA with the S2. Specifically, the LWA S1 outper-forms the LWA S2, and the NLWA S1 outperforms the NLWA S2. Finally, as for the parameter sensitivity of WAs , we can observe that NLWAs are more sensitive to different k values than LWAs.

Interesting observations can be made after we evaluate the re-ranking per-formance of the different WAs. The re-ranking performance is reported in the Figure 1, from which we can observe that all WAs outperform the baseline. This empirically demonstrates that WAs can improve the ranks of the truly relevant documents with lower initial weights (see the analysis in Section 3.2). In addi-tion, we can see that the least smooth method (i.e. NLWA S2) gives the best re-ranking performance. Moreover, the LWA S2 performs much better than the LWA S1, although the LWA S1 is a smoother method. This indicates that the improved QE performance might be more due to the better smoothness of doc-ument weights than due to a better PRF rank list, which in turn emphasises the importance of the smoothness of document weights for the QE. 4.4 Comparison with Other Weight Smoothing Methods Now, we compare the performance of LWA (i.e., LWA S1) with those of other document weight revision methods, i.e., the score regulation (SR) [2,3], the DSDG method [9] and the rank-related priors (RRP) [6]. The formulation and parameters configuration of SR, DSDG an d PPR are described in Section 4.1. We report the best performance of the above three methods in Table 3.
Both SR and DSDG can outperform the RM, but not significantly on some col-lections. On the other hand, the LWA outperforms SR and DSDG, and improves the RM significantly on all three collections. It is probably because neither SR nor DSDG considers the document weight smoothness along the rank list. The main aim of SR and DSDG is to re-rank the documents. However, as discussed in the previous experiments (see Figure 1), a better PRF rank list may not guarantee a better QE performance.

For the RRP, we found that its performance (using  X  = 140 and  X  = 50) is not so good. We think that this approach can help the RM become robust if a large number (e.g., 500) of PRF documents are involved, since it effectively depress the weights of lower-ranked documents. However, if the number of PRF documents is relatively small (e.g., 30), we can observe that it can make the document weights less smoother, and hence possi bly hurt QE retrieval performance. 4.5 Discussion In the above experiments, we did not interpolate the expanded query model with the original query model, since we wanted to focus on the document weight smoothness issue. As observed from our experiments and also in [7], the QE performance is very sensitive to interpolation coefficient  X  .Actually,usinga well-tuned  X  for the RM3 4 , the proposed weight smoothing method LWA can im-prove the RM3 by 4%-5% on the three TREC collections. However, the smoother weight smoothing methods (e.g., LWA) can not always have better QE perfor-mance. This also raises an important research question: how to define and control the weight smoothness degree for different q ueries? It is reasonable that different queries may need different degrees of the document weight smoothness for an optimal QE performance.

On the other hand, the score regulation method [2,3] and the DSDG method under the graph-based smoothing framework [9] both target at re-ranking the documents. Recently, the portfolio th eory has been adopted in [13] to derive an optimal document rank, by considering the document dependency into the probability ranking principle (PRP). However, for the query expansion task, as we have stressed before, a better PRF rank list may not guarantee a better QE performance. Therefore, how to fur ther smooth the document weight after a good document rank has been obtained by a re-ranking method, becomes an important problem. We will investigate this issue in-depth in the future. We have proposed to study the document weight smoothness issue in query expansion (QE) based on PRF documents. We have also proposed a two-step document weight smoothing method, in which the first step is to smooth the sharply dropping weights along a small number of topmost-ranked documents, and the second step is to allocate the weights of the topmost-ranked documents to the lower-ranked ones, based on the inter-document similarity. Under the framework of the Relevance Model (RM) , different document-weighting func-tions have been tested. The experiment s on three TREC collections show that the smoother weighting functions derived by the proposed method have better QE performance. The proposed method, in particular the LWA, can significantly improve the RM X  X  performance. Compared with other methods that can be used to revise the document weights, LWA also gives a better QE performance. We also would like to mention that LWA X  X  good performance is because that it has better effect on weight smoothing than NLWA, although its re-ranking perfor-mance is not better than that of NLWA (see Figure 1). This also suggests the importance of the smoothness of document weights for the QE.

In the future, we will investigate how to adapt the smoothness degrees of doc-ument weights to individual queries, in order to obtain an optimal QE perfor-mance. We are also planning to derive methods to further smooth the document weights after a good document rank has b een obtained by re-ranking methods. Furthermore, we will study the connection between the smoothness of document weights and the smoothness of document language models. Our goal is to build a formal and effective method for smoothing document weights not only under the RM framework but also for other QE models [8], to improve their performance. Acknowledgments. We would like to thank Jun Wang, Leszek Kaliciak and anonymous reviewers for their constructive comments. This work is supported in part by the UK X  X  EPSRC grant (No.: EP/F014708/2).

