 This paper proposes a new unified optimization framework combining pay-per-click auctions and guaranteed delivery in sponsored search. Advertisers usually have different (and sometimes mixed) marketing goals: brand awareness and di-rect response. Different mechanisms are good at addressing different goals, e.g., guaranteed delivery was often used to build brand awareness and pay-per-click auctions was widely used for direct marketing. Our new method accommodates both in a unified framework, with the search engine revenue as an optimization objective. In this way, we can target a guaranteed number of ad clicks (or impressions) per cam-paign for advertisers willing to pay a premium and enable keyword auctions for all others. Specifically, we formulate this joint optimization problem using linear programming and a column generation strategy for efficiency. To select the best column (a ranked list of ads) given a query, we pro-pose a novel dynamic programming algorithm that takes the special structure of the ad allocation and pricing mechanisms into account. We have tested the proposed framework and the algorithms on real ad data obtained from a commercial search engine. The results demonstrate that our proposed approach can outperform several baselines in guaranteeing the number of clicks for the given advertisers, and in increas-ing the total revenue for the search engine.
 H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval Online advertising, sponsored search, optimization, linear programming
Sponsored search is an important means of Internet mon-etization, and is the driving force of major search engines today. It has sustained a market of tens of billions of dol-lars, and the market size is still growing very fast [4]. The success of sponsored search is in part due to its business model, and in part due to its strong technical foundation in information retrieval, data mining, machine learning, and algorithmic economics.

Currently, sponsored search works in the following man-ner. When a user submits a query to a search engine, in addition to the organic search results, a list of advertise-ments (ads) are also presented to the user. The advertiser is charged only if the user clicks the ad. The selection, ranking, and pricing of these ads are determined by a search engine based on an auction mechanism. The most popular mecha-nism is generalized second price (GSP) [3], where the ads are ranked by their expected values (the predicted click proba-bility of an ad times the bid price given by the advertiser). The advertisers are charged according to the second-price rule, that is, the cost per click is the minimum bid price required to keep a given ad in its current rank position.
Another popular marketing strategy in online advertising is called guaranteed delivery (GD) where ads are grouped by theme into campaigns, and each campaign has a price for the prespecified number of clicks or impressions, called deliver-ies. Most popular GD solutions are based on offline opti-mization algorithms, adjusted for online setup [5]. In [11] Linear Programming is used to solve supply-demand prob-lem on a bipartite graph where supply nodes correspond to page visits, demand nodes -to advertising campaigns and the edges denote relevance between campaigns and page vis-its. LP optimizes the weights of the edges -how often to display a certain ad for a certain page visit.

The pay-per-click auction has been the main focus in spon-sored search while GD is a dominating solution in display ad-vertising. Obviously both strategies are important for search engine revenue and for the needs of the users (advertisers and searchers). In fact, the success of search advertising is usu-ally measured at the campaign level, e.g., the total number of ad impressions and clicks, and the average cost per click, in a certain period of time [8]. In addition many advertisers want to promote their brands through sponsored search, [9] [6] [12]. Such advertisers typically set campaign-level bud-gets for pre-defined numbers of reaches to the users (i.e., ad impressions) or the numbers of leads (i.e. clicks) to the ad-vertiser websites. Such goals are clearly closer to GD model. Can the strengths of both pay-per click auction and GD be combined in sponsored search? Furthermore, how to model both in a unified optimization framework? Those meaning-ful questions have not been studied before. Answering these questions with a principled solution is our aimed contribu-tion in this paper. By doing so, we will be able to provide the advertisers with more powerful and flexible means to achieve their marketing goals, as well as help search engines to attract more advertisers in a long run.

Current approaches in pay-per-click auctions cannot pro-vide guaranteed campaign level performance because the auctions are run greedily per individual query, not taking into account the total budgets and total number of targeted deliveries (ad impressions or clicks) as global optimization criteria. As a result, often a significant portion of the bud-gets allocated by advertisers remains unused, meaning that the advertisers cannot reach their expected campaign goals. Our analysis of one-month of auctions of a commercial search engine shows that the used-budget ratio is only around 10% on average. Some recent works propose modifications to the greedy approach by accommodating budgeted bidders (e.g., [2, 1]). Those approaches, however, have only focused on the advertisers whose budgets are running out, and not on the advertisers who cannot reach their targets in spending and click-through numbers. As a result, those methods are in-sufficient either for optimizing macro-level performance, or for best combining GD and auctions.

We propose a unified optimization framework for com-bining GD and pay-per-click auctions. Specifically, we for-mulate the optimization problem using linear programming, which maximizes the revenue of the search engine subject to a number of constraints, including maximum budgets in auctions and guaranteed click numbers in GD. We also pro-pose to use delayed column generation [7] to efficiently find the optimal solution in linear programming. To select the best columns (a ranked list of ads) given a query, we pro-pose a novel dynamic programming algorithm that takes the special structure of the ad allocation and pricing mecha-nisms into account. To our knowledge, this is the first work in the literature of sponsored search that addresses adver-tisers X  needs of both direct-response marketing and brand marketing using joint optimization of GD and auctions.
The remainder of the paper is organized as follows. In section 2 we introduce the unified framework, formulating the problem as a linear program with delayed column gen-eration and dynamic programming. Section 3 presents our experimental results and the comparison with representative baseline methods.
In this section we describe our novel approach to spon-sored search that combines together keyword auctions and guaranteed delivery in a unified optimization framework. In our proposed mechanism we allow two types of advertisers. Some advertisers are interested in auctions and bidding on keywords, they select relevant keywords and bids for their ads, we call them Auction-type advertisers and their cam-paigns accordingly -Auction campaigns. The others prefer to specify the number of clicks as the explicit goal of the campaign, they select relevant keywords for their ads, we call them GD advertisers and their campaigns -GD cam-paigns 1 . Whenever a query is submitted a ranked list of ads
Actually, one advertiser can run several campaigns: some of them can be Auction-type campaigns and some of them can be GD-type campaigns. This situation can be addressed by our solution.
 Figure 1: Supply-demand graph that represents our formulation. Supply nodes on the left-hand side cor-respond to query submissions. Demand nodes on the right-hand side correspond to campaign objec-tives. The decision variables determine how often to display a particular candidate ranked list of ads in response to a query. is displayed. This ranked list can contain both GD and auc-tion ads. GD ads can take any positions and Auction ads are partially ranked by expected value (product of predicted click probability and the bid). GD advertisers are charged per campaign, the penalty is imposed on the search engine if the advertiser X  X  goal (number of clicks) is not met. In sci-entific literature this penalty is usually taken to be linear. The Auction advertisers are charged per click according to the modified GSP pricing rule: the smallest bid that would preserve his/her position in the partial ranking of auction ads. Displaying the list of ads contributes to the goals of all the campaigns that have ads in it, Figure 1.

Let us assume that we can enumerate all possible ranked lists of ads consistent with the ranking criteria above. Ob-viously, the length of these lists is limited by the maximum number of ad positions on a search results page. How often do we need to display a particular ranked list of ads in order to satisfy the goals of the advertisers, the search engine and the users? To answer this question we formulate and solve the following Linear Program (see the notation in Table 1):
We use i to index queries, j to index ads and ik to index candidate ranked lists relevant to query q i . The decision variable of the problem x ik is the frequency of displaying the list s ik in response to a query q i . The objective function is the revenue of the search engine. The first summation of the objective function is the expected revenue from the auction campaigns. The coefficient  X  ik is the expected revenue for n displays of the list s ik (the summation over member ads):
Variable Description q i aquery n i number of times we expect q i to be issued s ik a ranked list of ads that can be displayed x ik  X  [0 , 1] the frequency of displaying the list s ik a j  X  C an individual advertisement that is a part
C ( j ) the campaign of an ad a j , i.e. C ( j )= C :
A, GD the sets of auction and GD type cam-d C a budget of a campaign C m C a click requirement for a GD campaign z ikj an indicator variable, z ikj = 1 if an ad a j p ikj the payment if an ad a j in the list s ik is c ikj the click-through rate (CTR) for an ad a j The second summation of the objective function is the rev-enue from GD campaigns penalized by underdelivery. We express underdelivery using slack variables  X  C . The first con-straint guarantees that the expected spending of the Auction campaign C is limited by the campaign budget d C .Thesec-ond constraint guarantees that the GD campaign C gets the required amount of clicks m C . The coefficients of the con-straints matrix  X  ikj represent the expected contribution of an ad a j in the list s ik to the campaign goals. The formulation (1) explicitly satisfies the following global goals: 1) maximize the search engine revenue, 2) guaran-tee the click requirements of GD campaigns and 3) provide equal opportunities to auction campaigns. We also expect our solution to 4) improve user X  X  satisfaction expressed by the average click-thru rate (CTR). Note, that unlike display advertisers who are interested in a guaranteed number of impressions, sponsored search advertisers are interested in a guaranteed number of clicks. This means that the user X  X  satisfaction is an implicit objective.

The dimensionality of (1) is huge because of k -summa-tion over feasible ranked lists of ads. There are exponentially many candidate lists. Our remedy to the size of the prob-lem is the fact that 1) only few  X  X ood X  candidate lists are worth considering; and 2) these  X  X ood X  candidate lists can be efficiently generated on the fly. To identify these good candidates we formulate a series of auxiliary optimization problems in section 2.1. To solve these problems we exploit the special structure of (1) in section 2.2
Linear programs with a huge number of variables and a small number of constraints can be solved using delayed column generation technique [7]. The number of non-zero (active) variables in the solution is small and to find them Figure 2: Dependencies in a ranked list of ads, that affect the objective. it is sometimes not necessary to consider all the variables. Delayed column generation finds the active variables itera-tively: start with an LP with a small subset of variables, solve this LP (also called restricted LP), find the variables that can improve the objective and add them to the re-stricted LP, solve again etc. Only the variables with positive reduced cost can improve the objective (see [7] for details). The reduced cost of a variable x ik of (1) is: Where y and  X  is the dual solution for restricted LP. y is dual to campaign constraints of (1) and  X  is dual to query constraints of (1). Usually the variables with the highest reduced cost are added. To find the maximizer of (5) we do not need to inspect all the possible ranked lists of ads s , it is sufficient to construct the best list. What makes this task challenging is the auction advertisements whose payments depend on the next auction advertisement in the list through the GSP pricing rule. We describe the solution to this problem in the next section. In this section we provide the solution to maximizing (5). Optimization of the objectives defined over the chains of objects, when the contribution of a current element depends not only on the element itself, but also on the next element in the chain, can be done by dynamic programming (DP). However (5) is more challenging because of the presence of two types of objects: GD ads (unchained) and auction ads (chained). If an auction ad is followed by one or more GD ads than its contribution depends not on the next object in the chain, but on the object located further down the list, Figure 2.

Our goal is to find a sequence of ads: that maximizes (5). Let us assume that we have assigned the first r  X  1 positions in this sequence: and reached a state that is a function of our decisions: Then our residual goal is to assign the ads to the positions r...p given the state T r . The sufficient condition of optimal-ity and applicability of dynamic programming is Bellman X  X  principle: the decisions at steps r...p that constitute opti-mal solution depend only on the state that we reach after steps 1 ...r  X  1. Then we can use backwards induction to solve this problem with complexity O ( M 2 L )where M is the number of possible states and L is the length of a chain. We want to find a compact set of states that satisfies the Bellman X  X  principle.
We claim that the allocation of future auction ads only depends on the last auction ad in the list a j 1 ...a j r  X  1 position. GD ads in the list are ranked by n i c ij r k y the allocation of future GD ads depends on how many GD ads were already allocated. I.e. the state function is the following tuple:
T r = { last auction ad, its position, number of GD ads } The size of this state space is bounded by ZLL ,where Z is the size of the pool of relevant auction ads and L is the length of the chain -usually a small integer (maximum number of ads displayed on a page). If we ignore the positional bias (dependency of click probabilities on position in the list) then the state space can be reduced to ZL .

The necessary condition for the optimal sequence is ex-pressed by Bellman X  X  equation that connects the residual objective at state T r with immediate gain from selecting an ad for the slot r : g ( a j r | T r ) and the residual objective for the next state T r + a j r  X  T r +1 : The immediate gain if a j r  X  GD is simply i.e., the expected number of clicks scaled by y C ( j r ) pute the immediate gain if a j r  X  A assume that the position of the last auction ad in the list T r is m . If we assign an ad a r  X  A to the slot r then the advertiser who got the posi-tion m for his/her ad a j m would pay the amount to maintain his/her position against a j r : where b ij is the bid value for a j on a keyword in query q This gives us the gain: Note that the CTR and the bid correspond to the ad in position r and the scaling factor 1  X  y C ( j m ) corresponds to theadinposition m .

The Bellman X  X  equation (6) can be solved with the back-ward induction algorithm.
The evaluation was performed on the log data of a com-mercial search engine. To make the problem manageable we use only the head queries. This is a standard technique (for example [1]) since few head queries cover a large propor-tion of query submissions. We discuss how to generalize our approach to the tail queries in Section 4. Our dataset con-tains 1000 unique query strings and 436K query submissions. A total of 37,864 unique ads from 2,801 unique campaigns match the selected queries.

Our data comes from the keyword auction log of the search engine and only contains Auction campaigns. We have no control of which advertisers and how many of them will switch their campaigns to GD -this will be driven by the market demand and will not be controlled by the search en-gine. To simulate GD campaigns we randomly select r %of auction campaigns and convert them to GD campaigns. In the simulation we investigate the performance of the algo-rithm for different values of r between 0 and 1. We do not impose extra payments (premiums) for using Guaranteed Delivery in the current experimental setup. Normally such payments would exist and would provide more opportunities for optimization and higher expected revenue for the search engine. We set the per click underdelivery penalty  X  C equal to the average per click payment of the campaign.
Baseline 1: We mimic the GSP mechanism currently em-ployed in the search engine. This baseline does not consider GD at all. By comparing to this baseline, we can see the value of our proposed concept, i.e., considering both auction and GD in sponsored search.

Baseline 2: For a more representative baseline we split the available resources (query submissions) proportionally between auction and GD campaigns. Then we run GD and auction allocation mechanisms independently. This baseline considers both auction and GD, but not in a unified frame-work. It mimics the approach applied in display advertising in which GD and Auctions coexist but do not compete for the same inventory. By comparing to this baseline, we can see the value of our proposed joint optimization framework.
The number of ads that we display for a query is the same for all three methods.

The experimental results are presented in Figures 3 and 4. From these figures, we have the following observations. First, the expected revenue (Figure 3, Left) of our proposed approach significantly outperform the two baselines. For ex-ample, the improvement in revenue over Baseline 1 ranges from 3.6% to 7.6%. The expected revenue is the utility of the search engine. The improvement in the expected number of clicks over Baseline 1 (Figure 3, Middle) reaches 12.2%. The number of clicks measures the success of both adver-tisers and the users. Indeed, the total number of displayed advertisements is the same for all the methods therefore the  X  X licks X  curves are proportional to the average clicktrough rate which is the standard measure for users X  satisfaction. These two metrics clearly show the advantage of jointly op-timizing GD and auction. Inferior performance of Baseline2 signals us about sub-optimality of straightforward resource distribution between auction and GD mechanisms and again emphasizes the importance of joint optimization.
 Another important metric is the average cost per click, CPC (Figure 3, Right). It is equal to the expected rev-enue of the search engine divided by the expected number of clicks. For the advertisers the lower CPC is better. If the proportion of GD campaigns is sufficiently large ( &gt; 0.2) our method demonstrates advantage over Baseline 1. This means that the increased revenue of the search engine is a result of a better placement of ads rather than higher costs for the advertisers. In the current setup we do not impose the premium payments for GD service and therefore there is a margin for improving the revenue of the search engine even further. Baseline 2, due to its low revenue, has the lowest CPC when the proportion of GD campaigns is small.
The last performance metric, average delivery rate, char-acterizes our ability to satisfy the click constraints for GD campaigns. Delivery rate for a GD campaign is equal to min { recieved clicks/requested clicks, 1 } . Since Baseline 1 has no guarantee on the delivery, we only make compari-son with Baseline 2. From Figure 4, we can see that our framework maintains the average delivery rate above 0.98 and significantly outperforms Baseline 2.

To sum up, all the above experimental results demon-strate the effectiveness of our proposed joint optimization framework.
In this paper we proposed the first optimization frame-work for combining pay-per-click auctions and guaranteed delivery (GD) in sponsored search, satisfying advertisers X  diverse needs and maximizing revenue for the search engine providers simultaneously. Our experimental findings demon-strate that the proposed approach can outperform represen-tative baseline methods without joint optimization.
For future work we plan to: (i) Model the advertisers X  preferences over Guaranteed De-livery and Auctions in this optimization framework. In our evaluation we group the advertisers randomly, however, it is more realistic that there is bias towards either GD or auc-tions based on the parameters of the campaign. (ii) Perform large scale optimization based on optimize-dispatch framework [10] and hierarchical decomposition of the space of users and queries. The current approach is only scalable to a limited set of head queries (several thousands). Solving the problem for millions of tail queries is an open re-search question. In addition for head queries it is important to discriminate between different types of users and incor-porate personalized and/or affinity-group-based click prob-abilities which further increases the scale of the problem. (iii) Investigate the effect of the error in forecasting the number of query submissions and predicting the click-through rates on the proposed approach. [1] Z. Abrams, O. Mendelevitch, and J. Tomlin. Optimal [2] N.R.DevenurandT.P.Hayes.Theadwords [3] B. Edelman, M. Ostrovsky, and M. Schwarz. Internet [4] IAB. http://www.iab.net/adrevenuereport. [5] R. M. Karp, U. V. Vazirani, and V. V. Vazirani. An [6] C. Lake. http://econsultancy.com/us/blog/7345-how-[7] M. Lubbecke and J. Desrosiers. Selected topics in [8] Microsoft. http://advertising.microsoft.com/small-[9] P. Parker. www.clickz.com/clickz/news/1694929/ [10] D. C. Parkes and T. Sandholm.
 [11] E. Vee, S. Vassilvitskii, and J. Shanmugasundaram. [12] L. Weiman. http://searchengineland.com/top-5-ways-
