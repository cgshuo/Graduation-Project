 In Computer Science, research and development depend upon the human understanding of computer knowledge. Nevertheless, NLP (Natural Language Processing) is the process developed to make computers understand human languages. NLP is a branch of artificial intelligence, which is mainly concerned with linguistics and improves the interaction between computer and human languages. current trends. This paper focuses mainly on text mining in NLP. Applications such as pattern detection and constructing unstructured texts are highly attractive in NLP [2]. using data mining, and the latter is largely involved in constructing the keywords into corpus and visualize the results in a 2d format [3]. In text mining, text categorization, summarization, information extraction, machine learning and entity relation modeling are highly dependent on the language components. While most text mining tools focus on processing English documents, mining from documents in other languages offers a new host of opportunities. In this article, Tamil text documents were used to perform the text mining tasks. 
Lyric mining is also known as text mining or knowledge discovery, from the lyric understanding and modeling knowledge, which cannot be fully formalized [4]. It properties different from traditional text documents; the lyrics may use 'slang' language or differ greatly in the length and complexity of the language used, and also song lyrics exhibit a certain structure as to how they are organized as blocks. Tamil is Tamil, given the music and theme [4]. Simile, metaphor, rhyme, pleasantness, repetition, onomatopoeia, epanalepsis and polyptoton are the different features of lyri cs [5]. The pleasantness scoring studied by the previous work [6] describes the pleasantness of Tamil words, by language dependent methods based on meaning, phoneme and grammar, and by language independent methods based on voice and articulation. The statistics in the lyrics were genres will have different feature sets [9]. Bag-of-word is another common approach in text retrieval to index documents using the tf-idf calculation. This method has been used to describe the importance of the terms and discriminate between the documents. rhyming patterns are defined to extract the rhyme features from the lyrics. Tagging of words was also performed using a Part-of-speech approach, in which words were addition, some statistical measures were also performed, based on the word or character frequencies. Based on the features discussed above the genre of the lyric can be classified. The similarity of the songs is defined with respect to the differences in distributions across clusters, in order to identify interesting genres. poems, lyrics, and so on, for easy retrieval of information, rather than to analyze the whole document. There are a lot of visualization techniques such as graphs, hierarchy, technique that creates multiple icons, based on both tunes and lyric keywords. It uses multiple icons, since it is complex to visualize the lyric in a single icon. It enables the users to understand both the sound and the content of the lyric [13]. 
Text and music information are retrieved, through the integration of the audio and [14]. The music slide showed a technique to create a slideshow, according to the story of the lyric. The slideshow is created using personal photos, based on the contents of and contextual features [16]. Visualization techniques that take multiple variables are treemaps), and iconographic techniques (eg: Chernoff faces, glyphs) [17]. create a visual of our choice. The features can then be passed to the visual as parameters, quickly from a data, rather than analyzing it word by word, which takes a lot of time. 3.1 Lyrics Gathering Lyrics gathering is considered to be an important step in the present work. Initially, a gathering lyric information, and ii) representation of the lyrics. (i) Gathering lyric information Tamil websites and various Tamil lyric books were used to collect large sets of lyrics. page contains most of the lyrics along with their information. The information which is available on the web is as follows: Movie X  X  name, Lyricist X  X  name, Singer X  X  name, Composer X  X  name, Year of the lyric, tune of the lyric and rhythm of the lyric. Other resources such as books and journals have also been used to collect the lyrics. (ii) Lyric representation XML() format. XML was used as a database to store a large set of data. This format is The XML format for the lyric is represented as: &lt;Xml-document&gt; &lt;Title&gt; title of the lyric &lt;/Title&gt; &lt;Movie&gt; name of the movie &lt;/Movie&gt; &lt;Music&gt; composer name for the lyric &lt;/Music&gt; &lt;Lyricist&gt; lyricist name for the lyric &lt;/Lyricist&gt; &lt;Singer&gt; singer name for the lyric &lt;/Singer&gt; &lt;Tune&gt; tune name of the lyric &lt;/Tune&gt; &lt;Rhythm&gt; rhythm name of the lyric &lt;/Rhythm&gt; &lt;Year&gt; year of the lyric &lt;/Year&gt; &lt;Lyric&gt; &lt;Chorus&gt; opening or first unit of the lyric &lt;/Chorus&gt; &lt;Anti-chorus&gt; second unit of the lyric &lt;/Anti-chorus&gt; &lt;Charanam&gt; third unit in the form of stanzas &lt;/Charanam&gt; &lt;/Lyric&gt; &lt;/Xml-document&gt; 3.2 Multi-search Engine three different searching facilities for a user, viz, keyword search, semantic search and lyricist search. For a given query term, the keyword search will provide the relevant documents based on the weighting factor of TF-IDF, whereas the concept search will give the relevant lyric documents based on the semantic representation, UNL. However, when the user gives the lyricist X  X  name as a search query, then the lyricist search gives all the relevant documents based on the style of the lyricist. Keyword Based Search Most of the search engines available on the web are based on keyword search. In this more necessary to perform a two-step process, such as stop words removal, and identifying the root word, using a morpholo gical analyzer for the document set. When frequency (IDF) based on the given formula 1: where, TF (t,d) is the number of times a given t (term) appears in that d (document), the term. Once the weighting calculation has been processed, the relevant documents were retrieved for further processing. The obtained relevant documents were then ranked, according to the higher value of the document, which has been determined by summing all the tf-idf terms in the document. Semantic based Search offline process, the list of concept words related to the query term is identified based on the universal word, a semantic representation of UNL (universal networking weighting factor. The relevant documents are subsequently ranked, based on the document is calculated, based on the formula 2: where, n represents the number of concept terms, tf is the number of times the term t the document. 
The inverse document frequency (idf) is usually obtained, by dividing the total number of documents (N) by the number of documents containing the term (d(t)), and then taking the logarithm of that quotient, equation 3. Then, the tf-idf for the term is calculated, using equation 4 Lyricist Search the relevant documents, depending upon the author X  X  name. Here, only a limited number of lyricists such as Kannadasan, Vaali and Vairamuthu were used. For searching the relevant documents and for ranking, the lyricist X  X  style is considered to internal and external features of the rhyme, words corresponding to pleasantness, and also words which are freshly used in the lyric. However, the pleasantness of the lyric is identified by using five models. Of these, three are language dependent, based on of articulation [5]. 3.3 Rhyming Score The Tamil language has three different rhyme schemes, Edhugai, Monai and Iyaibu. yappilakkanam. According to Tamil grammar, if the first two letters are identical for the last two letters of the two words in a rhyme, they are called edhugai (Example 1b) and iyaibu (Example 1c), respectively. Examples 1: Moreover, one may find that two words can rhyme in more than one pattern also, see example 2a and 2b. Examples 2: Monai between different words within a line also has different names. The one existing between the first and second words within a line is inai monai . Ex : a nnaiyin a npil ellOrum thiLaikka a kaththinil mEvum Oruu monai is the one which exists between the first and fourth word. Ex : a saivilaa nanneRi viLangum a Rivaal The kulai monai is the one between the first, second and third words. Ex : a vaniyum a rutkaN a maindhu malara Monai between the first, second and fourth words is kilkkatuvay monai . Ex : a rundhamizh a zhakum pozhindhadhu a dhandhalai A merkatuvay monai is that which occurs between the first, third and fourth words. Ex : a rumpum inimaiyum a dhanvazhi a NikoLum a rasena a aki by considering the second and last letter of the words in each line accordingly. Here, we also refer to this kind of categorization as internal rhyme. monai is only due to the consonants, not the vowels, then it is a varukka monai . Ex : pu laakkaLam seydha kalaaath thaanaiyan pi Rangunilai maatath thuRandhai yOnE The monai between long vowels is called as nedil monai . Ex : vaa lipaththil manmadhan lee laikaLil mannavan (idai-inam), there exist the vallina monai (Example 3a) , Mellina monai (Example 3b) , and idai-ina monai (Example 3c). Example 3 : a) the yvam thozhaaaL kozhunaR RozhudhezhuvaaL pey yenap peyyum mazhai b) mO ppak kuzhaiyum anichcham mukamdhirindhu nO kkak kuzhaiyum virundhu c) yaa mmeyyaak kaNtavatruL illai enai vaa imaiyin nalla piRa The nature of the letter sub-categorization discussed above, applies to edhugai and iyaibu also, by considering the second and last letter of words in each line accordingly. Depending upon the above classi fications, the scoring is determined by meRkadhuvaai and 0.5 value for inai, pozhippu and oru categories. summing all the values in the lyric, based on this classification; equation 5. 3.4 Freshness Score The algorithm involved in identifying the freshness of a word is given below: -Construct a timeline (5 year gap) in the lyric dataset and group the lyrics under each timeline. -Identify the unique words in each timeline. -Give the freshness score for each word as given below -Compare each word in the current era (timeline) with all the previous eras. -If any match is found then, the Freshness score -&gt; 1 -Else, Calculate: Cumulative document frequency using equation 6; Number of eras the word has occurred. where, D is the total number of lyrics in the previous era and {d: t  X  d} is the number of lyrics where the word w appears in th previous era Depending upon the above pleasantness, rhyming and freshness scoring models, the relevant documents are ranked by using the equations 8 &amp; 9: score, r d is the rhyme score and f d is the freshness scoring where P (d/D) is the probability of the number of lyricist X  X  documents occuring in the total number of lyric documents lot of time. search retrieves the relevant documents either by the keyword based or by the semantics based or the lyricist based methods. The obtained relevant lyric documents to improve the intention of the user in the lyric search engine, and also to know the lyric characteristic information, we propose a  X  X lower like structure X  model. This can be drawn by using the Java code in graphics2D for the center (ellipse), stem characteristics of each lyric are extracted, and given as parameters to be represented in the visual. The parts of the flower indicate each characteristic, which is given in a range, so that the parts size and color vary according to the parameters. The different lyric characteristics associated with the lyric are as follows: 4.1 Statistical Count The words in each sentence pass through the morphological analyser, to identify the root word and its grammatical properties. -The average number of characters in a lyric is calculated from the total number upon the counts. 4.2 Rhetorical Style Simile identified, then the simile count is incremen ted. Here, the flower structure represented similes and red=high similes). Repetition The reuse of words in a sentence in the lyri c is identified by checking their positions. If the words are identified, a flag is set. The existing Agaraadhi API, will be used to find the meaning of the words in the lyric. If the words have the same meaning, then the repetition count is incremented. Onomatopoeia meaning or not. If there is no meaning, then the onomatopoeia count is incremented. Polyptoton In a polyptoton, the lines in the lyric are tokenized, and each line token is sent to the polyptoton count is incremented. Eg: idi idithu mazhai pozhinthathu. Epanalepsis irandal un kankal irandal. Metaphor words used in a lyric, from the file. Eg:maanvizhi, thenmozhi. number of thorns in the proposed visualization structure. 4.3 Genre Classification the genres is identified, then the lyric is considered as a  X  X iscellaneous X  genre. The genre classification was performed using the following algorithm: -The stop words and pronouns are removed, and the root words are found, using the morphological analyzer. -The seed data in each genre consists of five songs. genre, with its frequency. The word pairs ar e then checked with the corpus to classify the genre for the rest of the data. pairs are appended to the list. -The genre's word pair with the highest score is set as the genre for the new lyric. namely,  X  X iscellaneous X . -The miscellaneous genre is again iterated with the newly appended word pairs to get classified. -If not classified, then it is kept as a separate genre. 
This identification represents the color of the petal in the flower structure. 4.4 Emotion Detection anger, love, fear, and surprise were considered. Initially, the set of keywords for each emotion is identified, and the percentage fo r each emotion of a lyric is calculated by counting the words that are matched with the keyword specified. Associate a lyric to petal in the flower structure. 4.5 Morpholgical Endings Extract the possible case endings from the root word using the morphological the case endings used in a lyric are examined, by dividing the number of case endings used by the total number of words in that lyric. This represents the length of the stem in the proposed flower structure. 4.6 Different Scores (Freshness, Rhyme and Pleasantness) the central part of the flower structure as a spot. If the freshness count is equal to 0, yellow spots. However, the rhyme score is calculated based on the above explanation, determines the color of the leaves in the structure. If the pleasantness count is equal to 0, then it shows a dark green color; else it represents light green as the leaf color. implementation of the main search engine visualization window. Here, when the user gives the word as the input, depending upon the requirements, the user can select any of the search technique, and retrieve the relevant documents. search technique, the output for the search term will be displayed. Here, the user gets the relevant documents according to the searching technique, that the user clicks. The output song X  X  title, the TF-IDF count for the lyric, movie X  X  name, singers of the lyric, composer, documents along with the lyric information are displayed. When the user clicks the button of the  X  X nvoke picture X  for the particular lyric, then relevant document. documents. The test set is consist of two types of queries such as term and concept. A random sample of 50 queries for each type query was chosen. This queries were effectiveness of the two types of queries, precision and recall mechanism were used. the search, suggested the importance and relevance of the documents. In the keyword the ignorance of the document, when the sear ch engine failed to retrieve the concept of the given keyword; it acquires only the information which is relevant to the given keyword. However , the proposed system shows the higher precision value of about 86% for the concept search, when compared to the keyword search. But, the lyricist available. For some set of documents, the lyricist can share the same score for all the style features. This is also one of the reasons for the lower value of precision scores. Note that, the recall from all the search m odels were not considered in the evaluation since the value was found very low compared to the precision . This is because, for a order to improve the recall value, higher level of semantic features will be considered to extract the meaning of the context for a given query term. Figure 5B represents the precision and recall score for each genre. For identifying shows that 27% of the lyrics are miscellaneous, and to improve the precision score of the genre, we consider the three factors: -Changing the set of songs kept in the seed data of each genre. just one line. -Using the compound analyser to get more word pairs. Figure 5C represents the precision and recall score of emotion detection. Here, the values are too low, due to the fact that the emotion database does not contain the largest amount of data. This improves the accuracy only by increasing the number of  X  X motion X  words in the emotion DB. Figure 5D shows the user evaluation for the proposed visualization. The proposed the user gets the information about the lyric X  X  characteristics and checked whether the user will able to get the requirements completely. For this, we have selected persons in the age group 20  X  40 to perform the evaluation. About 40 students (20 males &amp; 20 females) from Anna University and 40 random people were involved in this study. In order to obtain critical reviews, the evaluation was also performed by 4 linguistics in tacola lab, Anna University, India. The evaluation can be made, by using the parameters shown below: Question 1: Complete (the user can get all the characteristics of the lyrics) Question 2: Clear (the user can understand the characteristics clearly) Question 3: Interestingness (the user can feel interested in this structure) The users were asked to give a score from 1 to 5, where the score 5 denotes the highest value. The results from students showed lots of interest over the visualization model and the statistics showed 89% interest from students and 87% from random proposed visualization requires more data acquisition for some critical words such as retrieving the characteristics of every lyric document. Furthermore, the proposed explaining the cumulative information clear ly. The other ways require user to spend easily and makes it more attractive. Lyric visualization, based on statistical modeling was developed, to increase the attention lyric facilitates the user to manipulate the TF-IDF, UNL and other features of the models. exhibited a significant difference, when compared to the other models, when characterized using a precision and recall mechanism. fascinate the users. In addition to exploring the design space for visualizing the lyrics particular kind of feature. 
