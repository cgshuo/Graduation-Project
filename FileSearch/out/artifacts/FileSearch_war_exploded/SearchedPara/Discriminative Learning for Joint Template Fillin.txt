 Information extraction (IE) systems recover struc-tured information from text. Template filling is an IE task where the goal is to populate the fields of a tar-get relation, for example to extract the attributes of a job posting (Califf and Mooney, 2003) or to recover the details of a corporate acquisition event from a news story (Freitag and McCallum, 2000).

This task is challenging due to the wide range of cues from the input documents, as well as non-textual background knowledge, that must be consid-ered to find the best joint assignment for the fields of the extracted relation. For example, Figure 1 shows an extraction from CMU seminar announce-ment corpus (Freitag and McCallum, 2000). Here, the goal is to perform mention detection and extrac-tion, by finding all of the text spans, or mentions , that describe field values, unify these mentions by grouping them according to target field, and normal-izing the results within each group to provide the final extractions. Each of these steps requires sig-nificant knowledge about the target relation. For ex-ample, in Figure 1, the mention  X 3:30 X  appears three times and provides the only reference to a time. We must infer that this is the starting time, that the end time is never explicitly mentioned, and also that the event is in the afternoon. Such inferences may not hold in more general settings, such as extraction for medical emergencies or related events.

In this paper, we present a joint modeling and learning approach for the combined tasks of men-tion detection, unification, and template filling, as described above. As we will see in Section 2, pre-vious work has mostly focused on learning tagging models for mention detection, which can be diffi-cult to aggregate into a full template extraction, or directly learning template field value extractors, of-ten in isolation and with no reasoning across differ-ent fields in the same relation. We present a simple, feature-rich, discriminative model that readily incor-porates a broad range of possible constraints on the mentions and joint field assignments.

Such an approach allows us to learn, for each tar-get relation, an integrated model to weight the dif-ferent extraction options, including for example the likely lengths for events, or the fact that start times should come before end times. However, there are significant computation challenges that come with this style of joint learning. We demonstrate empiri-cally that these challenges can be solved with a com-bination of greedy beam decoding, performed di-rectly in the joint space of possible mention clusters and field assignments, and structured Perceptron-style learning algorithm (Collins, 2002).

We report experimental evaluations on two bench-mark datasets in different genres, the CMU semi-nar announcements and corporate acquisitions (Fre-itag and McCallum, 2000). In each case, we evalu-ated both template extraction and mention detection performance. Our joint learning approach provides consistently strong results across every setting, in-cluding new state-of-the-art results. We also demon-strate, through ablation studies on the feature set, the need for joint modeling and the relative importance of the different types of joint constraints. Research on the task of template filling has focused on the extraction of field value mentions from the underlying text. Typically, these values are extracted based on local evidence, where the most likely entity is assigned to each slot (Roth and Yih, 2001; Siefkes, 2008). There has been little effort towards a compre-hensive approach that includes mention unification, as well as considers the structure of the target rela-tional schema to create semantically valid outputs.
Recently, Haghighi and Klein (2010) presented a generative semi-supervised approach for template filling. In their model, slot-filling entities are first generated, and entity mentions are then realized in text. Thus, their approach performs coreference at slot level. In addition to proper nouns (named en-tity mentions) that are considered in this work, they also account for nominal and pronominal noun men-tions. This work presents a discriminative approach to this problem. An advantage of a discriminative framework is that it allows the incorporation of rich and possibly overlapping features. In addition, we enforce label consistency and semantic coherence at record level.

Other related works perform structured relation discovery for different settings of information ex-traction. In open IE , entities and relations may be in-ferred jointly (Roth and Yih, 2002; Yao et al., 2011). In this IE task, the target relation must agree with the entity types assigned to it; e.g., born-in relation re-quires a place as its argument. In addition, extracted relations may be required to be consistent with an existing ontology (Carlson et al., 2010). Compared with the extraction of tuples of entity mention pairs, template filling is associated with a more complex target relational schema.

Interestingly, several researchers have attempted to model label consistency and high-level relational constraints using state-of-the-art sequential models of named entity recognition (NER). Mainly, pre-determined word-level dependencies were repre-sented as links in the underlying graphical model (Sutton and McCallum, 2004; Finkel et al., 2005). Finkel et al. (2005) further modelled high-level se-mantic constraints; for example, using the CMU seminar announcements dataset, spans labeled as start time or end time were required to be seman-tically consistent. In the proposed framework we take a bottom-up approach to identifying entity men-tions in text, where given a noisy set of candidate named entities, described using rich semantic and surface features, discriminative learning is applied to label these mentions. We will show that this ap-proach yields better performance on the CMU semi-nar announcement dataset when evaluated in terms of NER. Our approach is complimentary to NER methods, as it can consolidate noisy overlapping predictions from multiple systems into coherent sets. In the template filling task, a target relation r is pro-vided, comprised of attributes (also referred to as fields, or slots) A ( r ) . Given a document d , which is known to describe a tuple of the underlying re-lation, the goal is to populate the fields with values based on the text.

The relational schema. In this work, we describe domain knowledge through an extended relational database schema R . In this schema, every field of the target relation maps to a tuple of another rela-tion, giving rise to a hierarchical view of template filling. Figure 2 describes a relational schema for the seminar announcement domain. As shown, each field of the seminar relation maps to another rela-tion; e.g., speaker  X  X  values correspond to person tu-ples. According to the outlined schema, most re-lations (e.g., person ) consist of a single attribute, whereas the date and time relations are characterised with multiple attributes; for example, the time rela-tion includes the fields of hour , minutes and ampm .
We will make use of limited domain knowledge, expressed as relation-level constraints that are typi-cally realized in a database. Namely, the following tests are supported for each relation.

Tuple validity. This test reflects data integrity. The attributes of a relation may be defined as mandatory or optional . Mandatory attributes are denoted with a solid boundary in Figure 2 (e.g., seminar.date ), and optional attributes are denoted with a dashed bound-ary (e.g., seminar.title ). Similar constraints can be posed on a set of attributes; e.g., either day-of-month or day-of-week must be populated in the date rela-tion. Finally, a combination of field values may be required to be valid, e.g., the values of day , month , year and day-of-week must be consistent.

Tuple contradiction. This function checks whether two valid tuples v tent, implying a negation of possible unification of these tuples. In this work, we consider date and time tuples as contradictory if they contain semantically different values for some field; tuples of location, person and title are required to have minimal over-lap in their string values to avoid contradiction.
Template filling. Given document d , the hierar-chical schema R is populated in a bottom-up fash-ion. Generally, parent-free relations in the hierar-chy correspond to generic entities, realized as en-tity mentions in the text. In Figure 2, these relations are denoted by double-line boundary, including lo-cation , person , title , date and time ; every tuple of
Figure 3 demonstrates the correct mapping of named entity mentions to tuples, as well as tuple uni-fication, for the example shown in Figure 1. For ex-ample, the mentions  X  X ean 5409 X  and  X  X ean Hall 5409 X  correspond to tuples of the location relation, where the two tuples are resolved into a unified set. To complete template filling, the remaining relations of the schema are populated bottom-up, where each field links to a unified set of populated tuples. For example, in Figure 3, the seminar.location field is linked to {  X  X ean Hall 5409 X , X  X ean 5409 X  } .
Value normalization of the unified tuples is an-other component of template filling. We partially ad-dress normalization: tuples of semantically detailed (multi-attribute) relations, e.g., date and time , are re-solved into their semantic union, while textual tuples (e.g., location ) are normalized to the longest string in the set. In this work, we assume that each tem-plate slot contains at most one value. This restriction can be removed, at the cost of increasing the size of the decoding search space. Next, we describe how valid candidate extrac-tions are instantiated (Sec. 4.1) and how learning is applied to assess the quality of the candidates (Sec. 4.2), where beam search is used to find the top scoring candidates efficiently (Sec. 4.3). 4.1 Candidate Generation Named entity recognition. A set of candidate men-tions S attribute a of a relation r  X  L , where L is the set of parent-free relations in T . We aim at high-recall extractions; i.e., S rect mentions with high probability. Various IE tech-niques, as well as an ensemble of methods, can be employed for this purpose. For each relation r  X  L , valid candidate tuples E the candidate mentions that map to its attributes.
Unification. For every relation r  X  L , we con-struct candidate sets of unified tuples, { C E d ( r ) } exponential in the size of E ever, the tuples within a candidate unification set are required to be non-contradictory . In addition, the text spans that comprise the mentions within each set must not overlap. Finally, we do not split tuples with identical string values between different sets.
Candidate tuples. To construct the space of candi-date tuples of the target relation, the remaining rela-tions r  X  { T  X  L } are visited bottom-up, where each field a  X  A ( r ) is mapped in turn to a (possibly uni-fied) populated tuple of its type. The valid (and non-overlapping) combinations of field mappings consti-tute a set of candidate tuples of r .

The candidate tuples generated using this proce-dure are structured entities, constructed using typed named entity recognition, unification, and hierarchi-cal assignment of field values (Figure 3). We will derive features that describe local and global prop-erties of the candidate tuples, encoding both surface and semantic information. 4.2 Learning We employ a discriminative learning algorithm, fol-lowing Collins (2002). Our goal is to find the candi-date that maximizes: where f ture functions describing a candidate record y of the target relation given document d and the extended schema T . The parameter weights  X  learned from labeled instances. The training pro-cedure involves initializing the weights  X   X  to zero. Given  X   X  , an inference procedure is applied to find the candidate that maximizes Equation 1. If the top-scoring candidate is different from the correct map-ping known, then: (i)  X   X  is incremented with the fea-ture vector of the correct candidate, and (ii) the fea-ture vector of the top-scoring candidate is subtracted from  X   X  . This procedure is repeated for a fixed num-ber of epochs. Following Collins, we employ the av-eraged Perceptron online algorithm (Collins, 2002; Freund and Schapire, 1999) for weight learning. 4.3 Beam Search Unfortunately, optimal local decoding algorithms (such as the Viterbi algorithm in tagging problems (Collins, 2002)) can not be applied to our prob-lem. We therefore propose using beam search to ef-ficiently find the top scoring candidate. This means that rather than instantiate the full space of valid can-didate records (Section 4.1), we are interested in in-stantiating only those candidates that are likely to be assigned a high score by F . Algorithm 1 outlines the proposed beam search procedure. As detailed, only a set of top scoring tuples of size k (beam size) is maintained per relation r  X  T during candidate generation. A given relation is populated incremen-tally, having each of its attributes a  X  A ( r ) map in turn to populated tuples of its type, and using Equa-tion 1 to find the k highest scoring partially popu-lated tuples; this limits the number of candidate tu-ples evaluated to k 2 per attribute, and to nk 2 for a relation with n attributes. While beam search is effi-cient, performance may be compromised compared with an unconstrained search. The beam size k al-lows controlling the trade-off between performance and cost. An advantage of the proposed approach is that rather than output a single prediction, a list of coherent candidate tuples may be generated, ranked according to Equation 1. Dataset The CMU seminar announcement dataset (Freitag and McCallum, 2000) includes 485 emails containing seminar announcements. The dataset has been originally annotated with text spans referring to four slots: speaker , location , stime , and etime . We have annotated this dataset with two additional at-tributes: date and title . 2 We consider this corpus as an example of semi-structured text, where some of the field values appear in the email header, in a tabu-lar structure, or using special formatting (Califf and
We used a set of rules to extract candidate named rules encode information typically used in NER, in-cluding content and contextual patterns, as well as lookups in available dictionaries (Finkel et al., 2005; Minkov et al., 2005). The extracted candidates are high-recall and overlapping. In order to increase recall further, additional candidates were extracted based on document structure (Siefkes, 2008). The recall for the named entities of type date and time is near perfect, and is estimated at 96%, 91% and 90% for location , speaker and title , respectively. Features The categories of the features used are
Lexical. These features indicate the value and pattern of words within the text spans correspond-ing to each field. For example, lexical features per Figure 1 include location.content.word.wean , loca-tion.pattern.capitalized . Similar features are derived for a window of three words to the right and to the left of the included spans. In addition, we observe whether the words that comprise the text spans ap-pear in relevant dictionaries: e.g., whether the spans assigned to the location field include words typi-cal of location, such as  X  X oom X  or  X  X all X . Lex-ical features of this form are commonly used in NER (Finkel et al., 2005; Minkov et al., 2005).
Structural. It has been previously shown that the structure available in semi-structured documents such as email messages is useful for information ex-traction (Minkov et al., 2005; Siefkes, 2008). As shown in Figure 1, an email message includes a header, specifying textual fields such as topic , dates and time . In addition, space lines and line breaks are used to emphasize blocks of important information. We propose a set of features that model correspon-dence between the text spans assigned to each field and document structure. Specifically, these features model whether at least one of the spans mapped to each field appears in the email header; captures a full line in the document; is indent; appears within space lines; or in a tabular format. In Figure 1, struc-tural active features include location.inHeader , lo-cation.fullLine , title.withinSpaceLines , etc.
Semantic. These features refer to the semantic interpretation of field values. According to the re-lational schema (Figure 2), date and time include detailed attributes, whereas other relations are rep-resented as strings. The semantic features encoded therefore refer to date and time only. Specifically, these features indicate whether a unified set of tu-ples defines a value for all attributes; for example, in Figure 1, the union of entities that map to the date field specify all of the attribute values of this relation, including day-of-month , month , year , and day-of-week . Another feature encodes the size of the most semantically detailed named entity that maps to a field; for example, the most detailed entity men-tion of type stime in Figure 1 is  X 3:30 X , compris-ing of two attribute values, namely hour and min-utes . Similarly, the total number of semantic units included in a unified set is represented as a feature. These features were designed to favor semantically detailed mentions and unified sets. Finally, domain-specific semantic knowledge is encoded as features, including the duration of the seminar, and whether a time value is round (minutes divide by 5).

In addition to the features described, one may be interested in modeling cross-field information. We have experimented with features that encode the shortest distance between named entity mentions mapping to different fields (measured in terms of separating lines or sentences), based on the hypoth-esis that field values typically co-appear in the same segments of the document. These features were not included in the final model since their contribution was marginal. We leave further exploration of cross-field features in this domain to future work. Experiments We conducted 5-fold cross vali-dation experiments using the seminar extraction dataset. As discussed earlier, we assume that a sin-gle record is described in each document, and that each field corresponds to a single value. These assumptions are violated in a minority of cases. In evaluating the template filling task, only exact matches are accepted as true positives, where partial matches are counted as errors (Siefkes, 2008). No-tably, the annotated labels as well as corpus itself are not error-free; for example, in some announcements the date and day-of-week specified are inconsistent. Our evaluation is strict, where non-empty predicted values are counted as errors in such cases.

Table 1 shows the results of our full model us-ing beam size k = 10 , as well as model variants. In order to evaluate the contribution of the proposed features, we eliminated every feature group in turn. As shown in the table, removing the structural fea-tures hurt performance consistently across fields. In particular, structure is informative for the title field, which is otherwise characterised with low content and contextual regularity. Removal of the semantic features affected performance on the stime and etime fields, modeled by these features. In particular, the optional etime field, which has fewer occurrences in the dataset, benefits from modeling semantics.
An important question to be addressed in evalu-ation is to what extent the joint modeling approach contributes to performance. In another experiment we therefore mimic the typical scenario of template filling, in which the value of the highest scoring named entity is assigned to each field. In our frame-work, this corresponds to a setting in which a unified set includes no more than a single entity. The results are shown in Table 1 ( X  X o unification X ). Due to re-duced evidence given a single entity versus a a coref-erent set of entities, this results in significantly de-graded performance. Finally, we experimented with populating every field of the target schema indepen-dently of the other fields. While results are overall comparable on most fields, this had negative impact on the title field. This is largely due to erroneous as-signments of named entities of other types (mainly, person ) as titles; such errors are avoided in the full joint model, where tuple validity is enforced.
Table 2 provides a comparison of the full model against previous state-of-the-art results. These re-sults were all obtained using half of the corpus for training, and its remaining half for evaluation; the reported figures were averaged over five random splits. For comparison, we used 5-fold cross vali-dation, where only a subset of each train fold that corresponds to 50% of the corpus was used for train-ing. Due to the reduced training data, the results are slightly lower than in Table 1. (Note that we used the same test examples in both cases.) The best results per field are marked in boldface. The proposed ap-proach yields the best or second-best performance on all target fields, and gives the best performance overall. While a variety of methods have been ap-plied in previous works, none has modeled template filling in a joint fashion. As argued before, joint modeling is especially important for irregular fields, such as title ; we provide first results on this field.
Previously, Sutton and McCallum (2004) and later Finkel et-al. (2005), applied sequential models to perform NER on this dataset, identifying named entities that pertain to the template slots. Both of these works incorporated coreference and high-level semantic information to a limited extent. We com-pare our approach to their work, having obtained and used the same 5-fold cross validation splits as both works. Table 3 shows results in terms of token F1. Our results evaluated on the named mention recogni-tion task are superior overall, giving comparable or best performance on all fields. We believe that these results demonstrate the benefit of performing men-tion recognition as part of a joint model that takes into account detailed semantics of the underlying re-lational schema, when available.

Finally, we evaluate the global quality of the ex-tracted records. Rather than assess performance at field-level, this stricter evaluation mode considers a whole tuple, requiring the values assigned to all of its fields to be correct. Overall, our full model (Table 1) extracts globally correct records for 52.6% of the examples. To our knowledge, this is the first work that provides this type of evaluation on this dataset. Importantly, an advantage of the proposed approach is that it readily outputs a ranked list of coherent pre-dictions. While the performance at the top of the output lists was roughly comparable, increasing k gives higher oracle recall: the correct record was included in the output k -top list 69.7%, 76.1% and 80.4% of the time, for k = 5 , 10 , 20 respectively. Dataset The corporate acquisitions corpus con-tains 600 newswire articles, describing factual or po-tential corporate acquisition events. The corpus has been annotated with the official names of the parties to an acquisition: acquired , purchaser and seller , as well as their corresponding abbreviated names and ing the relational structure depicted in Figure 4. The schema includes two relations: the corp relation de-scribes a corporate entity, including its full name, abbreviated name and code as attributes; the target acquisition relation includes three role-designating attributes, each linked to a corp tuple.

Candidate name mentions in this strictly gram-matical genre correspond to noun phrases . Docu-ments were pre-processed to extract noun phrases, similarly to Haghighi and Klein (2010).
 Features We model syntactic features, following Haghighi and Klein (2010). In order to compen-sate for parsing errors, shallow syntactic features were added, representing the values of neighboring verbs and prepositions (Cohen et al., 2005). While newswire documents are mostly unstructured, struc-tural features are used to indicate whether any of the purchaser , acquired and seller text spans appears in the article X  X  header. Semantic features are applied to corp tuples: we model whether the abbreviated name is a subset of the full name; whether the cor-porate code forms exact initials of the full or abbre-viated names; or whether it has high string similarity to any of these values. Finally, cross-type features encode the shortest string between spans mapping to different roles in the acquisition relation. Experiments We applied beam search, where corp tuples are extracted first, and acquisition tuples are constructed using the top scoring corp entities. We used a default beam size k = 10 . The dataset is split into a 300/300 train/test subsets.

Table 4 shows results of our full model in terms of field-level F1, compared against TIE, a state-of-the-art discriminative system (Siefkes, 2008). Unfortu-nately, we can not directly compare against a gener-ative joint model evaluated on this dataset (Haghighi shown in boldface. Our full model performs bet-ter overall than TIE trained incrementally (similarly to our system), and is competitive with TIE using batch learning. Interestingly, the performance of our model on the code fields is high; these fields do not involve boundary prediction, and thus reflect the quality of role assignment.

Table 4 also shows the results of model vari-ants. Removing the inter type and structural fea-tures mildly hurt performance, on average. In con-trast, the semantic features, which account for the semantic cohesiveness of the populated corp tuples, are shown to be necessary. In particular, remov-ing them degrades the extraction of the abbreviated names; these features allow prediction of abbrevi-ated names jointly with the full corporate names, which are more regular (e.g., include a distinctive suffix). Finally, we show results of predicting each role filler individually. Inferring the roles jointly ( X  X ull model X ) significantly improves performance.
Table 5 further shows results on NER, the task of recovering the sets of named entity mentions per-taining to each target field. As shown, the proposed joint approach performs overall significantly better than previous results reported. These results are con-sistent with the case study of seminar extraction. We presented a joint approach for template filling that models mention detection, unification, and field extraction in a flexible, feature-rich model. This ap-proach allows for joint modeling of interdependen-cies at all levels and across fields. Despite the com-putational challenges of this joint inference space, we obtained effective learning with a Perceptron-style approach and simple beam decoding.

An interesting direction of future research is to apply reranking to the output list of candidate records using additional evidence, such as support-ing evidence on the Web (Banko et al., 2008). Also, modeling additional features or feature combina-tions in this framework as well as effective feature selection or improved parameter estimation (Cram-mer et al., 2009) may boost performance. Finally, it is worth exploring scaling the approach to unre-stricted event extraction, and jointly model extract-ing more than one relation per document.
