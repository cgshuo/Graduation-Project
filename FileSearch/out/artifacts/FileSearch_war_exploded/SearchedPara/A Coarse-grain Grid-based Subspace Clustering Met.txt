 This paper proposes a subspace clustering algorithm which combines grid-based clustering with frequent itemset mining. Given a d -dimensional data stream, the on-going distribution statistics of its data elements in every one-dimensional data space so that all the one-dimensional clusters are accurately identified. By tracing a set of frequently co-occurred one-dimensional clusters, it is possible to find a coarse-grain dense rectangular space in a higher dimensional subspace. An ST -tree is introduced to continuously monitor dense rectangular spaces in all the subspaces of the d dimensions. Among the spaces, those ones whose densities are greater than or equal to a user defined minimum support threshold S min are corresponding to final clusters. H.2.8 [ Database Applications ]: Data mining Algorithms Data Streams, Subspace clustering, Data mining, Grid-based clustering, ST-tree To efficiently trace the current set of all subclusters over a multi-dimensional data stream, two major tasks are employed in the proposed method. One is tracing all the 1-D subclusters of each single dimension continuously. For this purpose, a one-dimensional version of the cell tree method[1] is employed. The other task is finding sets of frequently co-occurred 1-D subclusters. By regarding each 1-D subcluster as a distinct item, this task becomes the problem of finding frequent itemsets over an online data stream. Intuitively, given a d -dimensional data stream, when there exists a k -D subcluster in a k -dimensional subspace( k  X  d ), there should also exist k 1-D subclusters each of which includes a distinct one-dimensi onal projection of the k -D subcluster. In other words, every data element of the k -D subcluster should be contained in each of the 1-D subclusters according to its corresponding dimensional value. The range of each 1-D subcluster should include the projected range of the k -D cluster onto the dimension of the 1-D subcluster. By this observation, the existence of a k -D subcluster can be inferred. Given a set of k 1-D subclusters each of which exists in a distinct dimension, if their intersected k -dimensional rectangular space is not empty, there is a high possibility of existing a k -D subcluster inside the space. To find out whether the subcluster really exists or not, it is necessary to monitor the density of data elements inside the space more precisely. A transaction called a matching set is generated for a newly generated data element in order to convert the granules of the dimensional values of the data elem ent. For each dimension, if the corresponding dimensional value of th e new data element is within the range of a 1-D subcluster of the dimension, the value is replaced by the identifier of the 1-D subcluster. Otherwise, it is ignored. A set of frequently co-occurred k 1-D subclusters in the matching sets generated so far can form a candidate k -dimensional rectangular space for a k-D subcluster. A subspace tree ( ST -tree) is introduced to monitor all ca ndidate rectangular spaces. Its structure is identical to that of a lexicographic prefix tree [2] used in the estDec method[3] which finds frequent itemsets over an online data stream. Basically, the one-dimensional version of the cell-tree [1] is used to trace the one-dimensional cluste rs of each dimension. Given a data stream D t for a d -dimensional data space N = N 1-D subclusters of the dimension N j (1  X  j  X  d ) are continuously traced by a sibling list S j . Whenever a new data element e generated, its j th dimensional value is used to reflect the every dimensional value of e t is converted by producing a matching set. The matching set MS ( e t ) of the newly generated data element e t =&lt; e 1 t , e 2 t , ..., e d t &gt; is defined as follows: where C j t denote the set of 1-D subclusters found in the sibling list S (1  X  j  X  d ) for the j th dimension N j  X  N . Multi-dimensional subclusters in a data stream can be traced by monitoring all the sets of frequently co-occurred 1-D subclusters in the matching sets generated in the data stream. On top of a prefix tree in the estDec method, an ST-tree maintains a rectangular space synopsis additionally in order to keep track of the distribution statistics of those data elements that fall within the rectangular space of a multi-dimensional subspace. Given a predefined sequence of dimensions  X  = N 1  X  ...  X  N d Q t-1 , whenever a new data element e t arrives, its matching set MS(e t ) is generated. In order to upda te the occurrence counts of all the subsets of MS ( e t ), their corresponding nodes in the ST-tree are traversed in a depth-first manner. Upon visiting a node, if the next 1-D subcluster identifier of the matching set is matched with the 1-D subcluster identifier associated with the node, the count of the node is incremented by one. After the supports of all the nodes induced by the current matching set MS ( e t ) are updated, the ST-tree is traversed once again to find out whether a new node can be inserted by MS ( e not currently maintained in the ST-tree, the 1-D subcluster is node corresponding to a multi-dimens ional rectangular space, the support of the space is estimated as in [3]. When the estimated support of a candidate is greater than or equal to S corresponding to the candidate is inserted. The count of the newly inserted ( k+1 )-dimensional rectangular space is estimated by the counts of its k -dimensional projected rectangular spaces maintained in the ST-tree. Among the counts of these k rectangular spaces, the smallest va lue is assigned to the estimated count. c  X  c 2  X  ...  X  c k where c i  X  s ( 1  X  i  X  k ) are the associated 1-D subclusters. If the current support of the node is greater than or subcluster m is the k -dimensional rectangular space range(m)= corresponding 1-D subcluster c i in the i th dimension N a multi-dimensional subcluster, it is possible to refine its range with respect to the statistical properties i.e., the average and standard deviation of its rectangular space synopsis. In order to analyze the performance of the proposed method, a number of data sets each of which contains one million 40-dimensional data elements are gene rated. The domain size of each dimension is set to 100. Most of da ta elements are concentrated on randomly chosen 10 data regions whose sizes in each dimension are also randomly varied between 2 and 12. The accuracy of subspace clustering is measured by the ratio of the number of correctly clustered data elements over the total number of data elements. Figure 1 shows the performance of the proposed method by varying the average distance between the centroids of subclusters. As shown in Figures 1-(a) and 1-(b), the processing time and memory usage of the proposed method are decreased as the subclusters are getting closer. This is because the possibility of occurring an occultation on a dime nsion is increased. When more occultation events occur, the processing time and memory usage are decreased since the size of an ST-tree becomes smaller. However, these occultation events make the accuracy of the proposed method be degraded. The average dimensionality of subclusters in a data set used in th is experiment is 10. As shown in Figure 1-(d), the subclusters in low-dimensional subspaces are mostly affected by occultation events. Since every possible subspace can contain a candidate region for a subcluster, the amount of memory space required to keep track of the data distribution of data elemen ts generated in a data stream is huge. By employing the concept of frequent itemset mining, the proposed method can convert the gra nule of a grid-cell to be much coarser, so that it is possible to reduce both memory space and processing time greatly. On the other hand, its accuracy is slightly sacrificed specially for low-dimens ional subclusters. However, the effect of inaccuracy in low-dimensional subclusters is not substantial since high dimensiona l subclusters usually provide more interesting information. This work was supported by the Korea Science and Engineering Foundation(KOSEF) NRL Program grant funded by the Korea government(MEST). (No.R0A-2006-000-10225-0) [1] N. H. Park and W.S. Lee. Cell trees: An Adaptive Synopsis [2] R.C. Agarwal, C.C. Aggarwal, and V.V.V. Prasad, A Tree [3] J.H. Chang and W.S. Lee. Find ing recent frequent itemsets 
