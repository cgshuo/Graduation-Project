 How many iterations does the (ever more) popular HITS algorithm require to converge in score and, perhaps more importantly, in rank (i.e. to get the nodes of a graph  X  X n the right order X )? After pinning down the elusive notion of con-vergence in rank we provide the first non-trivial bounds on the convergence of HITS. A  X  X orst case X  example, requiring a number of iterations superexponential in the size of the target graph to achieve even  X  X ild X  convergence, suggests the need for greater caution in the experimental evaluation of the algorithm -as recent results of poor performance (e.g. vs. SALSA) might be due to insufficient iterations, rather than to an intrinsic deficiency of HITS. An almost matching upper bound shows that, as long as one employs exponen-tial acceleration e.g. through a  X  X quaring trick X , a polyno-mial running time (practical in many application domains) always provides strong convergence guarantees.
 Categories and Subject Descriptors: F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algo-rithms and Problems -Computations on discrete structures General Terms: Algorithms, Theory Keywords: link analysis, HITS, convergence, rank
Kleinberg X  X  celebrated HITS algorithm [4] is probably the most widely used link analysis algorithm outside of Web search -making it a reference algorithm for today X  X  link analysis, much like quicksort for sorting. Originally pro-posed to rank Web pages, HITS has been subsequently em-ployed, sometimes with small variations, to rank graph nodes in a vast (and growing!) number of IR applications, often with little or no connection to Web search (e.g. [1, 6, 7, 3] -see [10] for a more comprehensive bibliography).

The original version of HITS works as follows. In response to a query, a search engine first retrieves a set of Web graph nodes on the basis of pure textual analysis; for each such node it also retrieves all nodes pointed by it, and up to d nodes pointing to it. HITS operates on the subgraph G induced by this base set (which clearly depends on the query) iteratively (re)computing an authority score vector a ( t ) a where A is the adjacency matrix of G and 1 denotes the (column) vector whose components are all 1. The i th com-ponent a i of the limit score vector lim t  X  X  X  a ( t ) (which always exists [4]) is the authority score of the i th node, that sum-marizes both its quality and its relevance to the query. HITS effectively computes the dominant eigenvector of A
T A using the Power Method [2]; thus its speed of conver-gence in score is tied to the separation of the first and second eigenvalues of that matrix. However, no bounds on this sep-aration are known for the matrix derived from a graph -for arbitrary matrices of any fixed size the separation can be arbitrarily small and convergence arbitrarily slow.
In fact, most applications employ the score vector directly to rank the nodes of the target graph. In these cases it is even more important to understand the number of iterations required by HITS to converge in rank -informally to assign scores that, although potentially quite different from the limit scores, still place nodes in a  X  X orrect X  order. Again, no bounds are known on the convergence of HITS in rank: only a few experimental results are available, and only for the Web graph [4]. Being heavily application-dependent, these provide little information to guide the researcher who would port the famous algorithm to new application domains.
The informal definition of rank convergence above has two flaws. First, it does not deal with ties or  X  X lmost ties X : if the difference between the limit scores of two nodes is negligible, an algorithm effectively converges to a X  X orrect X  X anking even if it keeps switching their relative ranks. Second, it does not distinguish between an algorithm failing for a long time to produce a ranking even remotely close to the ultimate ranking, and one taking a long time to reach the ultimate ranking, but quickly reaching a ranking  X  X lose X  to it (e.g. with all elements correctly ranked, save the last few).
To address these issues we introduce a more general and formal definition of convergence in rank. Let a ranking be compatible with a score vector if no node with a higher score is ranked worse than one with a lower score (ties can be broken arbitrarily). Then:
Definition 1. Let an iterative algorithm ALG produce at each iteration t a score vector v ( t ) and converge to a score vector v (  X  ) . Then ALG  X  -converges on h of the top k ranks in (at most)  X  steps if, for all iterations t  X   X  , at least h of the top k items in a ranking compatible with v ( t ) are also among the top k items in a ranking compatible with v (  X  ) , or compatible with some vector w ( t ) at distance at most  X  from v (  X  ) .
In other words, we assume an algorithm has converged in rank as soon as it  X  X ets right X  (and keeps getting right) at least h of the top k items of any ranking compatible with the limit score vector, or with any score vector  X  X ufficiently close X  to it (the definition above implicitly assumes some distance function between score vectors -e.g. k X k 2 ). Note that with  X  = 0 and h = k  X  k our definition collapses back to the stricter,  X  X aive X  definition of convergence in rank. Our tech report [10] provides a more thorough discussion of the  X  X ice X  properties of this definition in the context of existing literature.
In our tech report [10] we prove that HITS can converge slowly, but not too slowly, both in score and in rank. On the one hand, we prove that a number of iterations super-exponential in the size of the target graph might be neces-sary to converge to a ranking (and a score) that is even re-motely accurate (see Theorem 1 below). On the other hand, we prove that such a number of iterations is also sufficient (Theorems 2 and 3). In this regard, one should note that the Power Method can be exponentially accelerated with only a modest space overhead through repeated squaring [5], computing a ( t ) = ( A T A ) t A T 1 by first computing ( A ( A an appropriate subset of those b lg( t ) c matrices. Thus, the complexity of converging to a result extremely close to the limit ranking (and score) is at most polynomial in the num-ber n of nodes of the target graph: more precisely O ( n 4+  X  (where  X ( n 2+  X  ) is the complexity of n by n matrix multi-plication) and O ( n 3+  X  ) in the important case of authority connected graphs. These results can be easily generalized to weighted graphs (important for many applications of HITS, e.g. [7, 6]) with only mild restrictions on the link weights. [10] provides a complete discussion of the hypotheses and proof techniques involved in the three Theorems below.

Theorem 1. For all k  X  3 and s  X  3 there exists a(n authority connected) graph  X  of maximum degree 4 k and 3( k + 1) s + k 3 + 2 k 2 + 2 k + 2  X  k 3 + 3 ks nodes on which HITS fails to  X  -converge on more than k +1 of the top k 2 ranks in less than k  X ( s ) iterations for all  X   X   X   X  =  X ( 1
Theorem 2. Let G be a graph of n nodes and maximum degree g whose arcs have integer weights at least 1 and at most w . Denote by A the weighted adjacency matrix of G . If A T A is a block matrix with at least two blocks of size m 1 and m 2 whose dominant, positive eigenvalues  X  1 and  X  2 &lt;  X  1 are respectively the largest and second largest eigen-value of A T A , then HITS  X  -converges in score (in k X k 2 and therefore on all ranks, on the nodes of G in at most
Theorem 3. Let G be a graph of n nodes and maximum degree g whose arcs have weights at least 1 and at most w . Denoting by A the weighted adjacency matrix of G , if A T is a block matrix such that all its non-zero blocks have size at most m and if the largest and the second largest eigenvalues of A T A are relative to the same block (including the case of just one non-zero block, i.e. if G is authority connected), then HITS  X  -converges in score (in k X k 2 ), and therefore on all ranks, on the nodes of G in at most ( wg ) O ( m ) (lg( 1 iterations.
The vast and growing number of applications of HITS in IR suggests greater effort should be spent in studying its convergence in score and, perhaps more importantly, in rank (the latter being a far more slippery issue -indeed, our contribution of a precise definition of the problem should be valuable in the study of other iterative ranking algorithms). We provide the first non-trivial bounds on the convergence rate of HITS, both in score and in rank.

We provide a X  X orst case X  X xample in which HITS requires a number of iterations superexponential in the graph size to converge, not only to within a relatively large distance of the limit score vector, but also to more than a tiny fraction of the limit top ranks. This suggests that experimental evaluation of the algorithm should be conducted with great(er?) care. Approximately half of all HITS related papers in the top IR conferences fail to report the termination criteria with which the algorithm is run, and most remaining ones report stopping the computation when the difference between two consecutive score vectors falls below a certain threshold -a condition that by itself in no way guarantees a correspond-ingly small distance from the limit score and/or rank vec-tor. One should then make certain that reported instances of poor performance of HITS (e.g. [8, 9]) are indeed due to an intrinsic deficiency of the algorithm, rather than simply to an insufficient number of iterations ; although understand-ing the properties of HITS when stopped before convergence (sometimes the only feasible option, as this work shows) cer-tainly seems a very promising line of research.

We also provide an almost matching upper bound on the convergence rate of HITS. While rather weak, it does show that, as long as HITS is accelerated through e.g. repeated squaring (a well known scheme that preserves almost all the  X  X ice X  X roperties of the Power Method) a polynomial running time guarantees almost complete convergence . In practical terms, this means HITS might be run online with strong convergence guarantees on graphs of up to several hundred nodes, and up to several thousands or even tens of thousands in the case of offline computation and/or  X  X avourable X  graph topologies; remembering that base sets are typically quite small, this includes many applications of practical interest. This work was supported by EU IP AEOLUS (FP6-015964).
