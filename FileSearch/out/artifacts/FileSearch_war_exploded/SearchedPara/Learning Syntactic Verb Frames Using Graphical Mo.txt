 Subcategorization frames (SCFs) give a compact de-scription of a verb X  X  syntactic preferences. These two sentences have the same sequence of lexical syntactic categories (VP-NP-SCOMP), but the first is a simple transitive ( X  X  understood Y X ), while the second is a ditransitive with a sentential complement ( X  X  persuaded Y that Z X ): 1. Kim (VP understood (NP the evidence 2. Kim (VP persuaded (NP the judge) (SCOMP
An SCF lexicon would indicate that  X  X ersuade X  is likely to take a direct object and sentential com-plement (NP-SCOMP), while  X  X nderstand X  is more likely to take just a direct object (NP). A compre-hensive lexicon would also include semantic infor-mation about selectional preferences (or restrictions) on argument heads of verbs, diathesis alternations (i.e. semantically-motivated alternations between pairs of SCFs) and a mapping from surface frames to the underlying predicate-argument structure. In-formation about verb subcategorization is useful for tasks like information extraction (Cohen and Hunter, 2006; Rupp et al., 2010), verb clustering (Korho-nen et al., 2006b; Merlo and Stevenson, 2001) and parsing (Carroll et al., 1998). In general, tasks that depend on predicate-argument structure can benefit from a high-quality SCF lexicon (Surdeanu et al., 2003).

Large, manually-constructed SCF lexicons mostly target general language (Boguraev and Briscoe, 1987; Grishman et al., 1994). However, in many domains verbs exhibit different syntactic behavior (Roland and Jurafsky, 1998; Lippincott et al., 2010). For example, the verb  X  X evelop X  has specific usages in newswire, biomedicine and engineering that dramatically change its probability distribution over SCFs. In a few domains like biomedicine, the need for focused SCF lexicons has led to manually-built resources (Bodenreider, 2004). Such resources, however, are costly, prone to human error, and in domains where new lexical and syntactic constructs are frequently coined, quickly become obsolete (Cohen and Hunter, 2006). Data-driven methods for SCF acquisition can alleviate these problems by building lexicons tailored to new domains with less manual effort, and higher coverage and scalability.

Unfortunately, high quality SCF lexicons are dif-ficult to build automatically. The argument-adjunct distinction is challenging even for humans, many SCFs have no reliable cues in data, and some SCFs (e.g. those involving control such as type raising) rely on semantic distinctions. As SCFs follow a Zip-fian distribution (Korhonen et al., 2000), many gen-uine frames are also low in frequency. State-of-the-art methods for building data-driven SCF lexicons typically rely on parsed input (see section 2). How-ever, the treebanks necessary for training a high-accuracy parsing model are expensive to build for new domains. Moreover, while parsing may aid the detection of some frames, many experiments have also reported SCF errors due to noise from parsing (Korhonen et al., 2006a; Preiss et al., 2007).
Finally, many SCF acquisition methods operate with predefined SCF inventories. This subscribes to a single (often language or domain-specific) inter-pretation of subcategorization a priori , and ignores the ongoing debate on how this interpretation should be tailored to new domains and applications, such as the more prominent role of adjuncts in information extraction (Cohen and Hunter, 2006).

In this paper, we describe and evaluate a novel probabilistic data-driven method for SCF acquisi-tion aimed at addressing some of the problems with current approaches. In our model, a Bayesian net-work describes how verbs choose their arguments in terms of a small number of frames, which are represented as distributions over syntactic relation-ships. First, we show that by allowing the infer-ence process to automatically define a probabilistic SCF inventory, we outperform systems with hand-crafted rules and inventories, using identical syntac-tic features. Second, by replacing the syntactic fea-tures with an approximation based on POS tags, we achieve state-of-the-art performance without relying on error-prone unlexicalized or domain-specific lex-icalized parsers. Third, we highlight a key advantage of our method compared to previous approaches: the ease of integrating and performing joint inference of additional syntactic and semantic information. We describe how we plan to exploit this in our future research. Many state-of-the-art SCF acquisition systems take grammatical relations (GRs) as input. GRs ex-press binary dependencies between lexical items, and many parsers produce them as output, with some variation in inventory (Briscoe et al., 2006; De Marneffe et al., 2006). For example, a subject-relation like  X  X csubj(HEAD, DEPENDENT) X  ex-presses the fact that the lexical item referred to by HEAD (such as a present-tense verb) has the lexi-cal item referred to by DEPENDENT as its subject (such as a singular noun). GR inventories include direct and indirect objects, complements, conjunc-tions, among other relations. The dependency rela-tionships included in GRs correspond closely to the head-complement structure of SCFs, which is why they are the natural choice for SCF acquisition.
There are several SCF lexicons for general lan-guage, such as ANLT (Boguraev and Briscoe, 1987) and COMLEX (Grishman et al., 1994), that depend on manual work. VALEX (Preiss et al., 2007) pro-vides SCF distributions for 6,397 verbs acquired from a parsed general language corpus via a system that relies on hand-crafted rules. There are also re-sources which provide information about both syn-tactic and semantic properties of verbs: VerbNet (Kipper et al., 2008) draws on several hand-built and semi-automatic sources to link the syntax and semantics of 5,726 verbs. FrameNet (Baker et al., 1998) provides semantic frames and annotated ex-ample sentences for 4,186 verbs. PropBank (Palmer et al., 2005) is a corpus where each verb is annotated for its arguments and their semantic roles, covering a total of 4,592 verbs.

There are many language-specific SCF acquisi-tion systems, e.g. for French (Messiant, 2008), Italian (Lenci et al., 2008), Turkish (Han et al., 2008) and Chinese (Han et al., 2008). These typ-ically rely on language-specific knowledge, either directly through heuristics, or indirectly through parsing models trained on treebanks. Furthermore, some require labeled training instances for super-vised (Uzun et al., 2008) or semi-supervised (Han et al., 2008) learning algorithms.

Two state-of-the-art data-driven systems for En-glish verbs are those that produced VALEX, Preiss et al. (2007), and the BioLexicon (Venturi et al., 2009). The Preiss system extracts a verb instance X  X  GRs us-ing the Rasp general-language unlexicalized parser (Briscoe et al., 2006) as input, and based on hand-crafted rules, maps verb instances to a predefined inventory of 168 SCFs. Filtering is then performed to remove noisy frames, with methods ranging from a simple single threshold to SCF-specific hypothesis tests based on external verb classes and SCF inven-tories. The BioLexicon system extracts each verb in-stance X  X  GRs using the lexicalized Enju parser tuned to the biomedical domain (Miyao, 2005). Each unique GR-set considered a potential SCF, and an experimentally-determined threshold is used to fil-ter low-frequency SCFs.

Note that both methods require extensive man-ual work: the Preiss system involves the a priori definition of the SCF inventory, careful construc-tion of matching rules, and an unlexicalized pars-ing model. The BioLexicon system induces its SCF inventory automatically, but requires a lexicalized parsing model, rendering it more sensitive to domain variation. Both rely on a filtering stage that depends on external resources and/or gold standards to select top-performing thresholds. Our method, by contrast, does not use a predefined SCF inventory, and can perform well without parsed input.

Graphical models have been increasingly popu-lar for a variety of tasks such as distributional se-mantics (Blei et al., 2003) and unsupervised POS tagging (Finkel et al., 2007), and sampling methods allow efficient estimation of full joint distributions (Neal, 1993). The potential for joint inference of complementary information, such as syntactic verb and semantic argument classes, has a clear and in-terpretable way forward, in contrast to the pipelined methods described above. This was demonstrated in Andrew et al. (2004), where a Bayesian model was used to jointly induce syntactic and semantic classes for verbs, although that study relied on manually annotated data and a predefined SCF inventory and MLE. More recently, Abend and Rappoport (2010) trained ensemble classifiers to perform argument-adjunct disambiguation of PP complements, a task closely related to SCF acquisition. Their study em-ployed unsupervised POS tagging and parsing, and measures of selectional preference and argument structure as complementary features for the classi-fier.

Finally, our task-based evaluation, verb clustering with Levin (1993) X  X  alternation classes as the gold standard, was previously conducted by Joanis and Stevenson (2003), Korhonen et al. (2008) and Sun and Korhonen (2009). In this section we describe the basic components of our study: feature sets, graphical model, inference, and evaluation. 3.1 Input and feature sets We tested several feature sets either based on, or approximating, the concept of grammatical relation described in section 2. Our method is agnostic re-garding the exact definition of GR, and for example could use the Stanford inventory (De Marneffe et al., 2006) or even an entirely different lexico-syntactic formalism like CCG supertags (Curran et al., 2007). In this paper, we distinguish  X  X rue GRs X  (tGRs), pro-duced by a parser, and  X  X seudo GRs X  (pGRs), a POS-based approximation, and employ subscripts to further specify the variations described below. Our input has been parsed into Rasp-style tGRs (Briscoe et al., 2006), which facilitates comparison with pre-vious work based on the same data set.

We X  X l use a simple example sentence to illustrate how our feature sets are extracted from CONLL-formatted data (Nivre et al., 2007). The CONLL format is a common language for comparing output from dependency parsers: each lexical item has an index, lemma, POS tag, tGR in which it is the de-pendent, and index to the corresponding head. Table 1 shows the relevant fields for the sentence  X  X e run training programmes in Romania and other coun-tries X .

We define the feature set for a verb occurrence as the counts of each GR the verb participates in. Table 2 shows the three variations we tested: the simple tGR type, with parameterization for the POS tags of head and dependent, and with closed-class POS tags (determiners, pronouns and prepositions) lexi-calized. In addition, we tested the effect of limiting the features to subject, object and complement tGRs, indicated by adding the subscript  X  X im X , for a total of six tGR-based feature sets.

While ideally tGRs would give full informa-
Index Lemma POS Head tGR 1 we PPIS2 2 ncsubj 2 run VV0 0 3 training NN1 4 ncmod 4 programme NN2 2 dobj 5 in II 4 ncmod 6 romania NP1 7 conj 7 and CC 5 dobj 8 other JB 9 ncmod 9 country NN2 7 conj Table 1: Simplified CONLL format for example sen-tence  X  X e run training programmes in Romania and other countries X . Head=0 indicates the token is the root.
 Table 2: True-GR features for example sentence: note there are also tGR  X  ,lim versions of each that only consider subjects, objects and complements and are not shown. tion about the verb X  X  syntactic relationship to other words, in practice parsers make (possibly prema-ture) decisions, such as deciding that  X  X n X  modifies  X  X rogramme X , and not  X  X un X  in our example sen-tence. An unlexicalized parser cannot distinguish these based just on POS tags, while a lexicalized parser requires a large treebank. We therefore define pseudo-GRs (pGRs), which consider each (distance, POS) pair within a given window of the verb to be a potential tGR. Table 3 shows the pGR features for the test sentence using a window of three. As with tGRs, the closed-class tags can be lexicalized, but there are no corresponding feature sets for param (since they are already built from POS tags) or lim (since there is no similar rule-based approach). Table 3: Pseudo-GR features for example sentence with window=3
Whichever feature set is used, an instance is sim-ply the count of each GR X  X  occurrences. We extract instances for the 385 verbs in the union of our two gold standards from the VALEX lexicon X  X  data set, which was used in previous studies (Sun and Korho-nen, 2009; Preiss et al., 2007) and facilitates com-parison with that resource. This data set is drawn from five general-language corpora parsed by Rasp, and provides, on average, 7,000 instances per verb. 3.2 SCF extraction Our graphical modeling approach uses the Bayesian network shown in Figure 1. Its generative story is as follows: when a verb is instantiated, an SCF is chosen according to a verb-specific multinomial. Then, the number and type of syntactic arguments (GRs) are chosen from two SCF-specific multino-mials. These three multinomials are modeled with uniform Dirichlet priors and corresponding hyper-parameters  X  ,  X  and  X  . The model is trained via collapsed Gibbs sampling, where the probability of assigning a particular SCF s to an instance of verb v with GRs ( gr 1 ...gr n ) is the product
The three terms, given the hyper-parameters and conjugate-prior relationship between Dirichlet and Multinomial distributions, can be expressed in terms of current assignments of s to verb v ( c sv ), s to GR-count n ( c sn ) and s to GR ( c sg ), the corre-sponding totals ( c v , c s ), the dimensionality of the distributions ( | SCF | , | N | and | G | ) and the hyper-parameters  X  ,  X  and  X  : P ( SCF = s | V erb = v ) = ( c sv +  X  ) / ( c v + | SCF |  X  ) P ( N = n | SCF = s ) = ( c sn +  X  ) / ( c s + | N |  X  ) P ( GR = gr i | SCF = s ) = ( c sgr
Note that N , the possible GR-count for an in-stance, is usually constant for pGRs ( 2  X  window ), unless the verb is close to the start or end of the sentence. o o  X  o o used.

We chose our hyper-parameters  X  =  X  =  X  = . 02 to reflect the characteristic sparseness of the phe-nomena (i.e. verbs tend to take a small number of SCFs, which in turn are limited to a small number of realizations). For the pGRs we used a window of 5 tokens: a verb X  X  arguments will fall within a small window in the majority of cases, so there is diminished return in expanding the window at the cost of increased noise. Finally, we set our SCF count to 40, about twice the size of the strictly syn-tactic general-language gold standard we describe in section 3.3. This overestimation allows some flex-ibility for the model to define its inventory based on the data; any supernumerary frames will act as  X  X unk frames X  that are rarely assigned and hence will have little influence. We run Gibbs sampling for 1000 iterations, and average the final 100 sam-ples to estimate the posteriors P ( SCF | V erb ) and P ( GR | SCF ) . Variance between adjacent states X  estimates of P ( SCF | V erb ) indicates that the sam-pling typically converges after about 100-200 itera-tions. 1 3.3 Evaluation Quantitative: cluster gold standard
Evaluating the output of unsupervised methods is not straightforward: discrete, expert-defined cate-gories (like many SCF inventories) are unlikely to line up perfectly with data-driven, probabilistic out-put. Even if they do, finding a mapping between them is a problem of its own (Meila, 2003).
Our goal is to define a fair quantitative compari-son between arbitrary SCF lexicons. An SCF lexi-con makes two claims: first, that it defines a reason-able SCF inventory. Second, that for each verb, it has an accurate distribution over that inventory. We therefore compare the lexicons based on their per-formance on a task that a good SCF lexicon should be useful for: clustering verbs into lexical-semantic classes. Our gold standard is from (Sun and Korho-nen, 2009), where 200 verbs were assigned to 17 classes based on their alternation patterns (Levin, 1993). Previous work (Schulte im Walde, 2009; Sun and Korhonen, 2009) has demonstrated that the quality of an SCF lexicon X  X  inventory and probabil-ity estimates corresponds to its predictive power for membership in such alternation classes.

To compare the performance of our feature sets, we chose the simple and familiar K-Means cluster-ing algorithm (Hartigan and Wong, 1979). The in-stances are the verbs X  SCF distributions, and we se-lect the number of clusters by the Silhouette vali-dation technique (Rousseeuw, 1987). The clusters are then compared to the gold standard clusters with the purity-based F-Score from Sun and Korhonen (2009) and the more familiar Adjusted Rand Index (Hubert and Arabie, 1985). Our main point of com-parison is the VALEX lexicon of SCF distributions, whose scores we report alongside ours.
 Qualitative: manual gold standard
We also want to see how our results line up with a traditional linguistic view of subcategorization, but this requires digging into the unsupervised out-put and associating anonymous probabilistic objects with established categories. We therefore present sample output in three ways: first, we show the clustering output from our top-performing method. Second, we plot the probability mass over GRs for two anonymous SCFs that correspond to recogniz-able traditional SCFs, and one that demonstrates un-expected behavior. Third, we compared the out-put for several verbs to a coarsened version of the manually-annotated gold standard used to evaluate VALEX (Preiss et al., 2007). We collapsed the orig-inal inventory of 168 SCFs to 18 purely syntactic SCFs based on their characteristic GRs and removed frames that depend on semantic distinctions, leav-ing the detection of finer-grained and semantically-based frames for future work. 4.1 Verb clustering We evaluated SCF lexicons based on the eight fea-ture sets described in section 3.1, as well as the VALEX SCF lexicon described in section 2. Table 4 shows the performance of the lexicons in ascending order.
 Table 4: Task-based evaluation of lexicons acquired with each of the eight feature types, and the state-of-the-art rule-based VALEX lexicon.

These results lead to several conclusions: first, training our model on tGRs outperforms pGRs and VALEX. Since the parser that produced them is known to perform well on general language (Briscoe et al., 2006), the tGRs are of high quality: it makes sense that reverting to the pGRs is unnecessary in this case. The interesting point is the major perfor-mance gain over VALEX, which uses the same tGR features along with expert-developed rules and in-ventory.
 Second, we achieve performance comparable to VALEX using pGRs with a narrow window width. Since POS tagging is more reliable and robust across domains than parsing, retraining on new domains will not suffer the effects of a mismatched parsing model (Lippincott et al., 2010). It is therefore pos-sible to use this method to build large-scale lexicons for any new domain with sufficient data.

Third, lexicalizing the closed-class POS tags in-troduces semantic information outside the scope of the alternation-based definition of subcatego-rization. For example, subdividing the indefinite pronoun tag  X  X N1 X  into  X  X N1-anyone X  and  X  X N1-anything X  gives information about the animacy of the verb X  X  arguments. Our results show this degrades performance for both pGR and tGR features, unless the latter are limited to tGRs traditionally thought to be relevant for the task. 4.2 Qualitative analysis Table 5 shows clusters produced by our top-scoring method, GR param,lex,lim . Some clusters are imme-diately intelligible at the semantic level and corre-spond closely to the lexical-semantic classes found in Levin (1993). For example, clusters 1, 6, and 14 include member verbs of Levin X  X  SAY, PEER and AMUSE classes, respectively. Some clusters are based on broader semantic distinctions (e.g. cluster 2 which groups together verbs related to locations) while others relate semantic classes purely based on their syntactic similarity (e.g. the verbs in clus-ter 17 share strong preference for  X  X o X  preposition). The syntactic-semantic nature of the clusters reflects the multimodal nature of verbs and illustrates why a comprehensive subcategorization lexicon should not be limited to syntactic frames. This phenomenon is also encouraging for future work to tease apart and simultaneously exploit several verbal aspects via ad-ditional latent structure in the model.

An SCF X  X  distribution over features can reveal its place in the traditional definition of subcategoriza-tion. Figure 2 shows the high-probability ( &gt; .02) tGRs for one SCF: the large mass centered on di-rect object tGRs indicates this approximates the no-tion of  X  X ransitive X . Looking at the verbs most likely to take this SCF ( X  X timulate X ,  X  X onserve X ) confirms 1 exclaim, murmur, mutter, reply, retort, say, 2 bang, knock, snoop, swim, teeter 3 flicker, multiply, overlap, shine 4 batter, charter, compromise, overwhelm, 5 abolish, broaden, conserve, deepen, eradi-6 gaze, glance, look, peer, sneer, squint, stare 7 coincide, commiserate, concur, flirt, inter-8 grin, smile, wiggle 9 confuse, diagnose, march 10 mate, melt, swirl 11 frown, jog, stutter 12 chuckle, mumble, shout 13 announce, envisage, mention, report, state 14 frighten, intimidate, scare, shock, upset 15 bash, falter, snarl, wail, weaken 16 cooperate, eject, respond, transmit 17 affiliate, compare, contrast, correlate, for-Table 5: Clusters (of size &gt; 2 and &lt; 20) produced this. Figure 3 shows a complement-taking SCF, which is far rarer than simple transitive but also clearly induced by our model.

The induced SCF inventory also has some redun-dancy, such as additional transitive frames beside figure 2, and frames with poor probability estimates. Most of these issues can be traced to our simplifying assumption that each tGR is drawn independently w.r.t. an instance X  X  other tGRs. For example, if an SCF gives any weight to indirect objects, it gives non-zero probability to an instance with only indi-rect objects, an impossible case. This can lead to skewed probability estimates: since some tGRs can occur multiple times in a given instance (e.g. in-direct objects and prepositional phrases) the model may find it reasonable to create an SCF with all probability focused on that tGR, ignoring all oth-ers, such as in figure 4. We conclude that our inde-pendence assumption was too strong, and the model would benefit from defining more structure within Figure 2: The SCF corresponding to transitive has most probability centered on dobj (e.g. stimulate, conserve, deepen, eradicate, broaden) Figure 3: The SCF corresponding to verbs taking complements has more probability on xcomp and ccomp (e.g. believe, state, agree, understand, men-tion) instances.

The full tables necessary to compare verb SCF distributions from our output with the manual gold standard are prohibited by space, but a few exam-ples reinforce the analysis above. The verbs  X  X oad X  and  X  X ill X  show particularly high usage of ditransi-tive SCFs in the gold standard. In our inventory, this is reflected in high usage of an SCF with probabil-ity centered on indirect objects, but due to the inde-pendence assumptions the frame has a correspond-ing low probability on subjects and direct objects, despite the fact that these necessarily occur along with any indirect object. The verbs  X  X cquire X  and  X  X uy X  demonstrate both a strength of our approach and a weakness of using parsed input: both verbs Figure 4: This SCF is dominated by indirect objects and complements, catering to verbs that may take several such tGRs, at the expense of subjects show high probability of simple transitive in our output and the gold standard. However, the Rasp parser often conflates indirect objects and preposi-tional phrases due to its unlexicalized model. While our system correctly gives high probability to ditran-sitive for both verbs, it inherits this confusion and over-estimates  X  X cquire X  X  X  probability mass for the frame. This is an example of how bad decisions made by the parser cannot be fixed by the graphi-cal model, and an area where pGR features have an advantage. Our study reached two important conclusions: first, given the same data as input, an unsupervised prob-abilistic model can outperform a hand-crafted rule-based SCF extractor with a predefined inventory. We achieve better results with far less effort than previous approaches by allowing the data to gov-ern the definition of frames while estimating the verb-specific distributions in a fully Bayesian man-ner. Second, simply treating POS tags within a small window of the verb as pseudo-GRs produces state-of-the-art results without the need for a pars-ing model. This is particularly encouraging when building resources for new domains, where com-plex models fail to generalize. In fact, by integrat-ing results from unsupervised POS tagging (Teichert and Daum  X  e III, 2009) we could render this approach fully domain-and language-independent.

We did not dwell on issues related to choosing our hyper-parameters or latent class count. Both of these can be accomplished with additional sampling methods: hyper-parameters of Dirichlet priors can be estimated via slice sampling (Heinrich, 2009), and their dimensionality via Dirichlet Process priors (Heinrich, 2011). This could help address the redun-dancy we find in the induced SCF inventory, with the potential SCFs growing to accommodate the data.
Our initial attempt at applying graphical models to subcategorization also suggested several ways to extend and improve the method. First, the indepen-dence assumptions between GRs in a given instance turned out to be too strong. To address this, we could give instances internal structure to capture condi-tional probability between generated GRs. Second, our results showed the conflation of several verbal aspects, most notably the syntactic and semantic. In a sense this is encouraging, as it motivates our most exciting future work: augmenting this simple model to explicitly capture complementary infor-mation such as distributional semantics (Blei et al., 2003), diathesis alternations (McCarthy, 2000) and selectional preferences (  X  O S  X  eaghdha, 2010). This study targeted high-frequency verbs, but the use of syntactic and semantic classes would also help with data sparsity down the road. These extensions would also call for a more comprehensive evaluation, aver-aging over several tasks, such as clustering by se-mantics, syntax, alternations and selectional prefer-ences.

In concrete terms, we plan to introduce latent vari-ables corresponding to syntactic, semantic and alter-nation classes, that will determine a verb X  X  syntac-tic arguments, their semantic realization (i.e. selec-tional preferences), and possible predicate-argument structures. By combining the syntactic classes with unsupervised POS tagging (Teichert and Daum  X  e III, 2009) and the selectional preferences with distribu-tional semantics (  X  O S  X  eaghdha, 2010), we hope to produce more accurate results on these complemen-tary tasks while avoiding the use of any supervised learning. Finally, a fundamental advantage of a data-driven, parse-free method is that it can be easily trained for new domains. We next plan to test our method on a new domain, such as biomedical text, where verbs are known to take on distinct syntactic behavior (Lippincott et al., 2010). The work in this paper was funded by the Royal So-ciety, (UK), EPSRC (UK) grant EP/G051070/1 and EU grant 7FP-ITC-248064. We are grateful to Lin Sun and Laura Rimell for the use of their cluster-ing and subcategorization gold standards, and the ACL reviewers for their helpful comments and sug-gestions.

