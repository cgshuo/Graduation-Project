 Newly emerging location-based and event-based social network ser-vices provide us with a new platform to understand users X  prefer-ences based on their activity history. A user can only visit a limited number of venues/events and most of them are within a limited dis-tance range, so the user-item matrix is very sparse, which creates a big challenge for traditional collaborative fi ltering-based recom-mender systems. The problem becomes more challenging when people travel to a new city where they have no activity history.
In this paper, we propose LCARS, a location-content-aware rec-ommender system that offers a particular user a set of venues (e.g., restaurants) or events (e.g., concerts and exhibitions) by giving con-sideration to both personal interest and local preference. This rec-ommender system can facilitate people X  X  travel not only near the area in which they live, but also in a city that is new to them. Specif-ically, LCARS consists of two components: of fl ine modeling and online recommendation. The of fl ine modeling part, called LCA-LDA, is designed to learn the interest of each individual user and the local preference of each individual city by capturing item co-occurrence patterns and exploiting item contents. The online rec-ommendation part automatically combines the learnt interest of the querying user and the local preference of the querying city to pro-duce the top-k recommendations. To speed up this online process, a scalable query processing technique is developed by extending the classic Threshold Algorithm (TA). We evaluate the performance of our recommender system on two large-scale real data sets, Douban-Event and Foursquare. The results show the superiority of LCARS in recommending spatial items for users, especially when traveling to new cities, in terms of both effectiveness and ef fi ciency. H.3.3 [ Information Search and Retrieval ]: Information Filtering; J.4 [ Computer Applications ]: Social and Behavior Sciences Recommender system; Location-based service; Probabilistic gen-erative model; TA algorithm; Cold start
Newly emerging event-based social network services (EBSNs), such as Meetup ( www.meetup.com ) and DoubanEvent ( www. douban.com/events/ ), provide online platforms for users to establish social events which will be held in physical places [16]. Given a created social event, users may express their intent to join by replying  X  X es X ,  X  X o X  or  X  X aybe X . Meanwhile, the advances in location-acquisition and wireless communication technologies en-able users to add a location dimension to traditional social net-works, fostering the growth of location-based social networking services (LBSNs), such as Foursquare ( foursquare.com )and Gowalla ( gowalla.com ) which allow users to  X  X heck-in X  at spa-tial venues and rate their visit via mobile devices.

In this paper, we aim to mine more knowledge from the user activity history data in LBSNs and EBSNs to answer two typical types of questions that we often ask in our daily: (1) If we want to visit venues in a city such as Beijing, where should we go? (2) If we want to attend local events such as dramas and exhibitions in a city, which events should we attend? In general, the fi rst question corresponds to venue recommendations, and the second question corresponds to event recommendations. By answering these two questions, we can satisfy the personalized information needs for many users in their daily routines and trip planning. For simplic-ity, we propose the notion of spatial items to denote both venues and events in a uni fi ed way, so that we can de fi ne our problem as follows: given a querying user u with a querying city l u interesting spatial items within l u , that match the preference of u .
However, inferring user preferences for spatial items is very chal-lenging by using users X  activity history in an EBSN or LBSN. First, a user can only visit a limited number of physical venues and attend a limited number of social events. This leads to a sparse user-item matrix for most existing location-based recommender systems [14, 10], which directly use collaborative fi ltering-based methods [20] over spatial items. Second, the observation of travel locality [14] makes the task more challenging considering that a user travels to a new place where he/she does not have any activity history. The observation of travel locality made on EBSNs and LBSNs shows that users tend to travel a limited distance when visiting venues and attending events. An investigation shows that the ac-tivity records generated by users in their non-home cities are very few and only take up 0 . 47% of the activity records they left in their home cities. This observation of travel locality is quite common in the real world [22], aggravating the data sparsity problem with personalized spatial item recommendations (e.g., if we want to sug-gest spatial items located in Los Angeles to people from New York City). In this case, solely using a CF-based method is not feasible any more, especially when coping with the new city problem, be-cause a querying user usually does not have enough activity history of spatial items in a city that is new to him/her.

Let us assume, for example, that querying user u is a Shopaholic and often visits shopping mall v in his/her home city; v is a popular local shopping mall in city l v that is new to u . Intuitively, a good recommender system should recommend v to u when he/she travels to l v . However, the pure CF-based methods fail to do so. For the item-based CF [15, 21], there are few common users between v and v according to the property of travel locality, resulting in the low similarity between the two items X  user vectors. For the user-based CF [1], it is most likely that all the k nearest neighbors of user u live in the same city as u , and that few of them have visited v according to the property of travel locality.

To this end, we propose a location-content-aware recommender system (LCARS) that exploits both the location and content infor-mation of spatial items to alleviate the data sparsity problem, es-pecially the new city problem. As is shown in Figure 1, LCARS consists of two main parts: of fl ine modeling and online recom-mendation. The of fl ine model, LCA-LDA, is designed to model user preferences to spatial items by simultaneously considering the following two factors in a uni fi ed manner. 1) User Interest :Mu-sic lovers may be more interested in concerts while Shopaholics would pay more attention to shopping malls. 2) Local Preference : When users visit a city, especially a city that is new to them, they are more likely to see local attractions and attend events that are popular in the city. Thus, the preferences of local people are a valuable resource for making a recommendation, especially when people travel to an unfamiliar area where they have little knowl-edge about the neighborhood. LCA-LDA can automatically learn both user interest and local preference from the user activity his-tory. Exploiting local preference can address the issue of data spar-sity to some extent. To further alleviate the data sparsity problem, LCA-LDA exploits the content information (e.g., item tags or cate-gory words) of spatial items to link content-similar spatial items to-gether, facilitating people X  X  travel not only near their home regions but also to cities that are new to them. It is worth mentioning that LCA-LDA can also capture the item co-occurrence patterns to link relevant items together, just like item-based collaborative fi ltering methods. To our best knowledge, ideas for unifying the in fl uence of local preferences, collaborative fi ltering and content-based rec-ommendation are unexplored and very challenging.

Given a querying user u with a querying city l u , the online rec-ommendation part computes a ranking score for each spatial item v within l u by automatically combining u  X  X  interest and the local preference of l u , which are learned of fl inebyLCA-LDA.Tospeed up the process of online recommendation, we propose a scalable query processing technique for top-k recommendations which sep-arates the of fl ine scoring computation from online scoring compu-tation to minimize the query time. Speci fi cally, we partition all spatial items into locations at a given level such as cities. For each location, as is shown in Figure 1, we store K lists of spatial items that fall into the location and each list is sorted by the items X  of-fl ine score in the corresponding dimension z . At query time, we retrieve all spatial items within l u , and then extend the Threshold Algorithm (TA) to compute the top-k spatial items by combining the score of each candidate item from K scorers.

The primary contributions of our research are summarized as fol-lows.
The remainder of the paper is organized as follows. Section 2 details the location-content-aware recommender system LCARS. We report the experimental results in Section 3. Section 4 reviews the related work and we conclude the paper in Section 5.
In this section, we fi rst introduce the key data structures and no-tations used in this paper, and then present the of fl ine modeling part and online recommendation part of our proposed location-content-aware recommender system.
For ease of the following presentation, we de fi ne the key data structures and notations used in this paper. Table 1 lists the relevant notations used in this paper.

De fi nition 1. (Spatial Item) A spatial item v refers to either an event or venue generated in various EBSNs or LBSNs.

De fi nition 2. (User Activity) A user activity is a triple ( u, v, l that means user u selects a spatial item v in location l v tion about the user activity history is given by S  X  X  X V X L , where user activities are positive observations in the past.
The dataset D used for our model learning consists of four el-ements, and they are users, spatial items, locations and content words, i.e., ( u, v, l v ,c v )  X  D where u  X  X  , v  X  X  , l and c v  X  X  v (i.e., C v denotes the content word set associated with spatial item v ). Note that a spatial item may contain multi-ple content words. For an activity history record of a user u se-lecting a spatial item v in l v , we have a set of four-tuples, i.e., D uv = { ( u, v, l v ,c v ): c v  X  X  v } .

De fi nition 3. (User Pro fi le) For each user u in the dataset D , we create a user pro fi le D u , which is a set of four-tuples (i.e., ( u, v, l v ,c v ) ) associated with u . Clearly, D uv  X  D
De fi nition 4. (Topic) A topic z in a spatial item collection V is represented by a topic model  X  z , which is a probability distribution over spatial items, i.e., { P ( v |  X  z ): v  X  X } or {  X  zv analogy, a topic in a content word collection C is represented by a topic model  X  z , which is a probability distribution over content words, i.e., { P ( c |  X  z ): c  X  X } or {  X  zc : c  X  X } .

It is worth mentioning that each topic z corresponds to two topic models in our work, i.e.,  X  z and  X  z . This design enables  X  to be mutually in fl uenced and enhanced during the topic discovery process, facilitating the clustering of content-similar spatial items into the same topic with high probability.

De fi nition 5. (User Interest) The intrinsic interest of user u is represented by  X  u , a probability distribution over topics.
De fi nition 6. (Local Preference) The local preference of loca-tion l is represented by  X  l , a probability distribution over topics. This modeling method can capture local folk-customs. In this subsection, we fi rst describe the of fl ine modeling part of LCARS, a probabilistic generative model called LCA-LDA, and then present its inference process.
 Model Description. The proposed of fl ine modeling part, LCA-LDA, is a location-content-aware probabilistic mixture generative model that aims to mimic the process of human decision making on spatial items. This mixture model considers the user X  X  personal in-terest and the in fl uence of local preference in a uni fi ed manner, and automatically leverages the effect of the two factors. Speci fi cally, given a querying user u with a querying city l u , the likelihood that user u will prefer item v when traveling to city l u , is sampled from the following LCA-LDA model.
 where P ( v |  X  u , X , X  ) is the probability that spatial item v is gen-erated according to the personal interest of user u , denoted as  X  and P ( v |  X  l u , X , X  ) denotes the probability that spatial item v is generated according to the local preference of l u , denoted as  X  The parameter  X  u is the mixing weight which controls the moti-vation choice. That is, when deciding individual preference on v , user u is in fl uenced by personal interest with probability  X  is in fl uenced by the local preference of l u with probability 1  X   X  It is worth mentioning that LCA-LDA holds personalized mixing weights for individual users, considering the differences between users in personality (e.g. openness, agreeableness).

To further alleviate the data sparsity problem, LCA-LDA incor-porates the content information of spatial items. Thus, we reformu-late Equation 1 as follows: where C v is a set of content words describing spatial item v .In LCA-LDA, both user interest  X  u and local preference  X  l u eled by a multinomial distribution over latent topics. Each spatial item v is generated from a sample topic z .LCA-LDAalsopa-rameterizes a distribution over content words associated with each topic z , and thus topics are responsible for simultaneously generat-ing both spatial items and their content words. Note that here we assume that items and their content words are independently con-ditioned on the topics. So, P ( v,c |  X  u , X , X  ) and P ( v,c |  X  can be computed according to Equations 5 and 6. Parameter esti-mation in LCA-LDA is thus driven to discover topics that capture both item co-occurrence and content word co-occurrence patterns. This encodes our prior knowledge that spatial items having many common users or similar content should be clustered into the same topic with high probability. Figure 2 illustrates the generative pro-cess with a graph model. The generative process is also summa-rized in Algorithm 1 where beta ( . ) is a Beta distribution, and  X  and  X  are two parameters.

Model Inference. Following the studies [26, 25], we use col-lapsed Gibbs sampling to obtain samples of the hidden variable assignment and to estimate unknown parameters {  X , X  , X , X  , X  }
Algorithm 1: Probabilistic generative process in LCA-LDA in the LCA-LDA. As for the hyperparameters  X  ,  X  ,  X  ,  X  ,  X  and  X  , for simplicity, we take a fi xed value (i.e.,  X  =  X  =50 /K ,  X  =  X  =0 . 01 ,  X  =  X  =0 . 5 ). In the sampling procedure, we begin with the joint probability of all user pro fi les in the data set. Next, using the chain rule, we obtain the posterior probability of sampling topics for each four-tuple ( u, v, l v ,c v ) . Speci fi cally, we employ a two-step Gibbs sampling procedure. Due to space constraints, we show only the derived Gibbs sampling formulas, omitting the detailed derivation process. We fi rst sample the coin s according to the posterior probability: where n us 1 is the number of times that s =1 has been sampled in the user pro fi le D u ; n us 0 is the number of times that s =0 has been sampled in the user pro fi le D u ; n uz is the number of times that topic z has been sampled from the multinomial distribution speci fi ctouser u ; n ux is the number of times that latent region z has been sampled from the multinomial distribution speci fi cto user u ; the number n  X  ui with superscript  X  ui denotes a quantity, excluding the current instance.

Then, we sample topic z according to the following posterior probability, when s ui =1 : when s ui =0 : where n zv is the number of times that spatial item v has been gen-erated by topic z ,and n zc denotes the number of times that content word c has been sampled from topic z .

After a suf fi cient number of sampling iterations, we can estimate the parameters  X  ,  X  ,  X  ,  X  and  X  as follows:
A query in our recommendation task takes two arguments ( u, l a querying user u with a querying city l u to which u is going to travel. The result of a query is a ranked list of spatial items located at the querying city that match the querying user X  X  preference. Once we have inferred LCA-LDA model parameters such as user inter-est  X  , local preference  X  , topics  X  and  X  , mixing weights  X  ,inthe of fl ine modeling phase, the online recommendation part computes a ranking score for each spatial item v within querying city l then returns top-k ranked spatial items as the recommendations.
In this part, we propose a ranking framework in Equation 16 which separates the of fl ine scoring computation from the online scoring computation. Speci fi cally, F ( l u ,v,z ) represents the of-fl ine part of the scoring, denoting the score of spatial item v with respect to location l u on dimension z that corresponds to topic z in the LCA-LDA model. Note that F ( l u ,v,z ) is independent of querying users. The weight score W ( u, l u ,z ) is computed in the online part, denoting the expected weight of the query ( u, l dimension z . It is worth mentioning that the main time-consuming components of W ( u, l u ,z ) are also computed of fl ine, and the on-line computation is just a simple combination process, as is shown in Equation 17. This design enables maximum precomputation for the problem considered, and in turn minimizes the query time. At query time, the of fl ine scores F ( l u ,v,z ) only need to be ag-gregated over K dimensions by a simple weighted sum function, in which the weight is W ( u, l u ,z ) . From Equations 17 and 18, we can see that W ( u, l u ,z ) consists of two components, designed to model user interest and local preference respectively, and each component is associated with a kind of user motivation. F ( l takes into account both the item co-occurrence information and the similarity of item contents to produce recommendations.

For the online recommendation phase, we have to compute the preference scores of a querying user to all spatial items within the querying city and subsequently select the best k among them to recommend to the user. When the number of spatial items becomes larger (e.g., millions), computing the top-k spatial items for each query requires millions of vector operations. To speed up the online process of producing recommendations, we extend the threshold-based algorithm [8] that is capable of correctly fi nding top-k results by examining the minimum number of spatial items.

We fi rst partition all spatial items into locations at a prede fi ned level such as cities. For each location, we precompute sorted lists of spatial items. This sorting is done of fl ine according to F ( l, v, z ) de fi ned in Equation 18. Given K dimensions, we carry out this procedure for each dimension z (i.e., having spatial items on the same dimension in each sorted list). When receiving a query q = ( u, l u ) ,we fi rst obtain K ranked list L z , z  X  X  1 , 2 , ..., K } ,of spatial items in location l u . Algorithm 2 computes the top-k spa-tial items from these K lists and returns them in priority queue L . The algorithm maintains a priority queue PQ of the lists L where the priority of a list is the ranking score of the fi rst spatial item in the list. This number is easily computed from the weight tial item v in the list. In each iteration, we pick the most promising spatial item from the list that is the head of PQ that we have not yet examined and add it to the results ( L ). The algorithm terminates early when the score of the k -th element of the results L is higher than the threshold ranking score which is computed in Algorithm 3.
In this section, we fi rst describe the settings of experiments in-cluding the data sets, comparative approaches, and the evaluation method. We then report major experimental results on both the recommendation effectiveness and ef fi ciency of our recommender system, followed by discussions.
DoubanEvent is China X  X  largest event-based social networking site where users can publish and participate in social events. On DoubanEvent, a social event is created by a user by specifying what, when and where the event is. Other users can express their intent to join events by replying online. This data set consists of 100,000 users, 300,000 events and 3,500,000 positive de fi nite RSVPs. The following information is recorded when collecting the data: 1) user information, including user-id, user-name and user-home city; 2) event information, consisting of event-id, event-name, event-latitude, event-longitude, event-summary and its cate-gory; 3) user feedback information, including user-id and event-id.
A publicly available LBSNs dataset, Foursquare [9], is also used in our experiment. It contains 11326 users and 1385223 check-ins. Note that this dataset does not contain item content information.
To utilize these two datasets in our proposed models, we pre-process them as follows: 1) we fi rst employ Google Maps API 2 to partition all the spatial items into cities according to their latitudes and longitudes; 2) for the DoubanEvent dataset, we then use NLP summary and category description.
We compare our proposed LCARS with the following six com-petitor methods, where the fi rst four approaches are the existing recommender systems, and the last two recommender models cor-respond to the two main components of our proposed LCA-LDA. Algorithm 2: Threshold-based algorithm Algorithm 3: Function ComputeTA()
We evaluate both the effectiveness of the suggested recommen-dations and the ef fi ciency for generating online recommendations.
Recommendation Effectiveness . To make an overall evaluation of the recommendation effectiveness of our proposed LCA-LDA, we fi rst design the following two real settings: 1) querying cities are new cities to querying users; 2) querying cities are the home cities of querying users. We then divide a user X  X  activity history into a test set and a training set. We adopt two different dividing strategies with respect to the two settings. For the fi rst setting, we select all spatial items visited by the user in a non-home city as the test set and use the rest of the user X  X  activity history in other cities as the training set. For the second setting, we randomly select 20% of spatial items visited by the user in personal home city as the test set, and use the rest of personal activity history as the training set.
According to the above designed dividing strategies, we split the user activity history S into the training data set S training test set S test . To evaluate the recommender models, we adopt the testing methodology and the measurement Recall@ k applied in [7, 5, 13, 32]. For each test case ( u, v, l v ) in S test : 1. We randomly select 1000 additional spatial items located at 2. We compute the ranking score for the test item v as well as 3. We form a ranked list by ordering all the 1001 spatial items 4. We form a top-k recommendation list by picking the k top
The computation of Recall@ k proceeds as follows. We de fi ne hit@ k for a single test case as either the value 1 if the test spatial item v appears in the top-k results, or else the value 0 . The overall Recall@ k are de fi ned by averaging all test cases: where # hit @ k denotes the number of hits in the test set, and | S is the number of all test cases.

Recommendation Ef fi ciency .Theef fi ciency of the online rec-ommendation mainly depends on 1) the number of all spatial items in the user-speci fi c querying city and 2) the number of spatial items recommended. Therefore, we test the ef fi ciency of our proposed LCARS over these two factors.
In this subsection, we fi rst report the performance of our LCARS on the recommendation effectiveness and then compare the time costs of different recommendation algorithms.
In this part, we fi rst present the optimal performance with well-tuned parameters and then study the impact of model parameters.
Figure 3 reports the performance of the recommendation algo-rithms on DoubanEvent dataset. We show only the performance where k is in the range [1 ... 20] , because a greater value of k is usu-ally ignored for a typical top-k recommendation task. It is apparent that the algorithms have signi fi cant performance disparity in terms of top-k recall. As shown in Figure 3(a) where querying cities are new cities, the recall of LCA-LDA is about 0 . 33 when k =10 , and 0 . 42 when k =20 (i.e., the model has a probability of 33% of placing an appealing event within the querying city in the top-10 and 42% of placing it in the top-20). Clearly, our proposed LCA-LDA model outperforms other competitor recommendation algo-rithms signi fi cantly. First, IKNN, CKNN and USG drop behind four other model-based methods, showing the advantage of using latent topic models to model users X  preferences and produce rec-ommendations. Second, LA-LDA outperforms LDA, justifying the bene fi t brought by considering local preferences. Third, CA-LDA exceeds LDA due to the advantages of taking item contents into consideration. Finally, LCA-LDA outperforms both LA-LDA and CA-LDA, showing the advantages of combining local preferences and item contents in a uni fi ed manner.

In Figure 3(b), we report the performance of all recommendation algorithms for the second setting where querying cities are home cities of querying users. From the fi gure, we can see that the trend of comparison result is similar to that presented in Figure 3(a). The main difference is that CKNN outperforms IKNN in Figure 3(a) while IKNN exceeds CKNN signi fi cantly in Figure 3(b), showing that the pure CF-based method (i.e., IKNN) better suits the set-ting where the user-item matrix is not very sparse, and the hybrid method (i.e., CKNN) is more capable of overcoming the dif fi culty of data sparsity, i.e., the new city problem. Another observation is that USG almost performs as well as LA-LDA, and outperforms LDA, CKNN and IKNN in the home city setting, verifying the ben-e fi t brought by considering the geographical in fl uence. However, USG is still less effective than LCA-LDA in this setting. Further-more, the performance of USG is poor in the new city setting, as shown in Figure 3(a), which shows that exploiting geographical in fl uence cannot alleviate the new city problem since there is no activity history of the querying user in the new city.

Figure 4 reports the performance of the recommendation algo-rithms on the Foursquare dataset. We only compare LA-LDA, one component of our LCA-LDA model, with LDA, USG and IKNN since this dataset does not contain item content information. From the fi gure, we can see that the trend of comparison result is similar to that presented in Figure 3, and LA-LDA performs best, showing the advantage of exploiting the local preference.

Impact of Model Parameters . Tuning model parameters, such as the number of topics for all topic models, is critical to the per-formance of models. We therefore also study the impact of model parameters on DoubanEvent dataset. Because of space limitations, we only show the experimental results for the new city setting.
As for the hyperparameters  X  ,  X  ,  X  ,  X  ,  X  and  X  , following existing works [26, 25], we empirically set fi xed values (i.e.,  X  =  X  =50 /K ,  X  =  X  =0 . 01 ,  X  =  X  =0 . 5 ). We tried different se-tups and found that the estimated topic models are not sensitive to the hyperparameters, but the performance of topic models such as LDA are slightly sensitive to the number of topics. Thus, we tested the performance of LDA, LA-LDA, CA-LDA and LCA-LDA mod-els by varying the number of topics, and present the results in Fig-ures 5(a) to 5(d). From the fi gures, we observe: 1) the Recall@ k values of all latent topic-based recommender models slightly in-crease with the increasing number of topics; 2) the performance of latent topic-based recommender models does not change signif-icantly when the number of topics is larger than 150 ; 3) LA-LDA, CA-LDA and LCA-LDA perform better than LDA under any num-ber of topics, and LCA-LDA consistently performs best.
In the ef fi ciency study on DoubanEvent, we tested 10000 query-ing users for the querying cities of Beijing, Shanghai, Guangzhou and Shenzhen respectively, by recommending a ranked list of events in each querying city for each test user. It is worth mentioning that there is different number of events in these four cities (i.e., |V recommendation algorithms were implemented in Java (JDK 1.6) and run on a Linux Server with 32 G RAM. For the online recom-mendation of LCARS, we adopt two methods to utilize the knowl-edge learnt of fl ine by LCA-LDA to produce recommendations. The fi rst is called LCA-LDA-TA proposed in Section 2.3.1, which ex-tends TA algorithm to produce top-k recommendations. The sec-ond is called LCA-LDA-BF which uses a brute-force algorithm to produce top-k recommendations. In LCA-LDA-BF, we online compute the preference score of a test user to all events within the querying city and subsequently select the best k ones.

Figures 6(a)-6(d) present the average online ef fi ciency of differ-ent methods, varying in the number of recommendations, for query-ing cities Beijing, Shanghai, Guangzhou, and Shenzhen respec-tively. For example, on average our proposed LCA-LDA-TA can fi nd the top-10 event recommendations from about 72,000 events within Beijing in 11.4ms, from 51,780 events within Shanghai in 6.7ms, from 18,000 events within Guangzhou in 6.1 ms, and from 13,290 events within Shenzhen in about 5.4 ms. From the fi gures, we observe that 1) LCA-LDA-TA outperforms LCA-LDA-BF sig-ni fi cantly in all querying cities, justifying the bene fi ts brought by the TA algorithm; 2) both LCA-LDA-TA and LCA-LDA-BF are consistently better than CKNN and IKNN, showing that the model-based methods can produce faster responses to querying users than memory-based methods once the model parameters are learnt of-fl ine; 3) the time costs of all algorithms increase slowly with the increasing number of recommendations; 4) the time cost (TS) of each algorithm in four different cities can be ranked as follows: that a city with more events available requires more processing time to produce top-k recommendations within this city.
In this section, we study the effects of personal interest and local preference on users X  decision making. The self interest in fl uence probability  X  u and the local preference in fl uence probability 1  X   X  are learnt automatically in our proposed LCA-LDA model. Since different people have different mixing weights, we plot the distri-butions of both self interest and local preference in fl uence probabil-ities among all users. The results on the DoubanEvent data set are shown in Figure 7, where Figure 7(a) plots the cumulative distribu-tion of self interest in fl uence probabilities, and Figure 7(b) shows the local preference in fl uence probabilities. It can be observed that, in general, people X  X  self interest in fl uence is higher than the in fl u-ence of the local preference. For example, Figure 7(a) shows that the self interest in fl uence probability of more than 70% of users is higher than 0 . 5 . The implication of this fi nding is that people mainly attend social events based on their self interests, and they sometimes attend popular local events regardless of their interests, especially when travelling in new cities. This fi nding also explains the superiority of LCA-LDA and LA-LDA in the recommendation performance (Section 3.2.1).
Figure 7: Local Preference In fl uence Result (DoubanEvent)
In this section, we introduce related works, including general recommender systems and location-based recommendation.
Collaborative fi ltering and content-based fi ltering techniques are two widely adopted approaches for recommender systems [1]. Both of them discover users X  personal interests and utilize these discov-ered interests to fi nd relevant items. Collaborative fi ltering tech-niques [5, 21] automatically suggest relevant items for a given user by referencing item rating information from other taste-similar users. The content-based recommendation [20] is based on the assump-tion that descriptive features of an item tell much about a user X  X  preference for an item. Recommender systems using pure collabo-rative fi ltering approaches tend to fail when little knowledge about the user is known or when no one has interests similar to the user X  X . Although the content-based method is capable of coping with the lack of knowledge, it fails to account for community endorsement. As a result, a certain amount of research has focused on combin-ing the advantages of both collaborative fi ltering and content-based methods [18, 4, 12]. Our proposal in this work is not only able to integrate the ideas behind collaborative fi ltering and content-based methods but also incorporates the in fl uence of the local preference into the recommendation process.
Regardless of the preference of an individual, some recent lit-eratures [27, 33] focus on non-personalized spatial item recom-mendation systems which encapsulate public opinions on spatial items and provide users with the most interesting ones. Several studies [17, 2] address the problem of predicting the future loca-tions of moving objects by using a model (e.g., a decision tree model or Hidden Markov Model) based on the mined trajectory patterns. Another branch of recent research focuses on learning user interest from the user X  X  activity history to make personalized recommendations. Speci fi cally, [14, 30, 24] deposited people X  X  ac-tivity history into user-venue matrix where each row corresponds to a user X  X  venue-visiting history and each column denotes a venue such as a restaurant. A user-based CF method is then employed to infer the user preference regarding an unvisited venue. Geo-measured friend-based collaborative fi ltering [30] produces recom-mendations by using only ratings from the querying user X  X  social-network friends who live in the same city.

However, solely using a CF-based method, either the user-based or the item-based, cannot handle the data sparsity problem very well if we directly formulate user-venue matrix. Although litera-tures [19, 33, 5] applied latent factor models such as topic model and matrix factorization to a user-venue matrix to reduce the data sparsity to some extent, these methods do not work well in the new city setting because there are few overlapped users, possibly none, between spatial items which are located in home cities and new cities respectively. Instead of using traditional CF-based meth-ods, [3] proposed a category-based similarity computation method whichisableto fi nd k -nearest neighbors for a querying user in a new city. Gao et al. [9] utilized the social network information to solve the  X  X old start X  location prediction problem, with a geo-social correlation model to capture social correlations on LBSNs. Mao et al. [31] exploited the geographical clustering phenomenon to improve the recommendation performance, with a uni fi ed frame-work to linearly fuse both user interest and geographical in fl uence. Woerndl et al. [29] developed a proactive context-aware model for mobile recommender systems which fi rst analyzes the current situ-ation and then computes the ranking scores of candidate items.
The interest in location-based data spans beyond the domain of spatial item recommendation (e.g., points of interest and events). Many recent literatures [23, 28, 6] have analyzed the interplay be-tween users X  mobility and their online social connections. Based on the analysis results, they proposed a link prediction framework to recommend social connections based on users X  physical mobility.
Our proposed location-content-aware recommender system dis-tinguishes itself from the above-mentioned works in the follow-ing three aspects: 1) We project a user X  X  activity history into a la-tent space which integrates the content knowledge of spatial items. Thus, we can recommend spatial items to a user in a new city by exploiting the content information about his/her preferred spatial items in other cities. 2) We take into account both user interest and local preference to produce recommendations. The local prefer-ence, which has previously been neglected, is a valuable resource for making a recommendation since people generally want to see local attractions and attend local popular events, especially when traveling to an unfamiliar city. 3) The idea of integrating local pref-erence X  X  in fl uences, collaborative fi ltering and content-based meth-ods into a probabilistic generative model is unexplored.
This paper proposed a location-content-aware recommender sys-tem, LCARS, which provides a user with spatial item recommen-dations within the querying city based on the individual interests and the local preferences mined from the user X  X  activity history. LCARS can facilitate people X  X  travel not only in their home area butalsoinanewcitywheretheyhavenoactivityhistory. By taking advantage of both the content and location information of spatial items, our system overcomes the data sparsity problem in the original user-item matrix. We evaluated our system using ex-tensive experiments based on two real data sets. According to the experimental results, our approach signi fi cantly outperforms exist-ing recommendation methods in effectiveness. The results also jus-tify each component proposed in our system, such as taking local preferences and item content information into account, and the pro-posed scalable query processing technique improves the ef fi ciency of our approach signi fi cantly.
This research is supported by the National Natural Science Foun-dation of China under Grant No. 60933004, 61073019 and 61272155. It is also partially supported by UTS Early Career Researcher Grant. This work is partially done when the fi rst author visited SA Center for Big Data Research hosted in Renmin University of China. This Center is partially funded by a Chinese National  X 111 X  Project  X  X t-tracting International Talents in Data Engineering and Knowledge Engineering Research X .
