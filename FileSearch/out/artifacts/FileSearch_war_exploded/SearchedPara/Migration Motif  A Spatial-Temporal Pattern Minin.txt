 A recent study by two prominent finance researchers, Fama and French, introduces a new framework for studying risk vs. return: the migration of stocks across size-value portfolio space. Given the financial events of 2008 , this first attempt to disentangle the relationships between migration behavior and stock returns is espe-cially timely. Their work, however, derives results only for market segments, not individual companies, and only for one-year moves. Thus, we see a new challenge for financial data mining: how to capture and categorize the migration of individual companies, and how such behavior affects their returns.

We propose a novel data mining approach to study the multi-year movement of individual companies. Specifically, we address the question:  X  X ow does one discover frequent migration patterns in the stock market? X  We present a new trajectory mining algorithm to discover migration motifs in financial markets. Novel features of this algorithm are its handling of approximate pattern matching through a graph theoretical method, maximal clique identification, and incorporation of temporal and spatial constraints. We have per-formed a detailed study of the NASDAQ, NYSE, and AMEX stock markets, over a 43-year span. We successfully find migration mo-tifs that confirm existing finance theories and other motifs that may lead to new financial models.
 Categories and Subject Descriptors: H.2.8 [Database Manage-ment]: Database Applications -Data Mining General Terms : Algorithms, Economics Keywords: migration motif, financial data mining, spatial-temporal pattern mining, trajectory mining, risk factor
The year 2008 witnessed the third worst performing stock mar-ket in more than one century and the start of the biggest economic recession in over 70 years. We are compelled to confront one of the most fundamental questions in financial and economic study: do we yet fully understand financial market risks? Over the past 40 years, a large body of financial literature has demonstrated that investment returns are driven by multiple factors, evolving from the single market factor theory specified by the Capital Asset Pricing Model of Sharpe [18] and Lintner [15]. Each risk factor is said to have a premium , the average incremental return that the mar-ket awards investors for undertaking the additional risk. Perhaps the most commonly identified factors are those associated with the Fama and French three-factor model [5]: the size premium based on market value of equity and the value premium based on the price-to-book ratio (or other ratios comparing an accounting-based number to market value). Although controversial, many financial economists believe the size and value premiums to be important risk factors. However, existing financial analyses treat these factors as prior or static factors, and do not consider their changes. Indeed, the dynamics of these risk factors are largely unknown.

To address this ignorance, Fama and French [7] recently investi-gated the dynamic nature of risk factors by examining movements of companies between portfolios based on size and the price-to-book ratio ( P/B ). They find that a significant portion of the value premium can by explained by the migration patterns of companies across portfolios. However, Fama and French examine migration patterns only from one year to the next. This raises the question as to whether there are multi-year patterns in the return data. Our paper attempts to answer this question by investigating multi-year migration patterns in a size-value grid.

In data mining terms, the portfolio of each company corresponds to a moving trajectory over a two-dimensional financial grid (dis-cretized size vs. discretized price-to-book ratio, a standard rep-resentation in financial circles). Thus, a migration pattern corre-sponds to a collection of subtrajectories which follow similar paths. This problem is related to sequential pattern mining [1], time se-ries motif discovery [14, 19], and trajectory mining [13, 16, 10, 8], which have been extensively studied in data mining. However, the interesting properties of the financial market and its migration patterns distinguish our problem from these existing works and call for new mining techniques. First, financial data is noisy and may have estimated values, so financial migration motifs must make ap-proximate rather than exact matches, requiring similarity functions unique to the application. Second, moving paths and migration mo-tifs are meaningful only if they comply with both temporal (the tim-ing of changes to the risk factors) and spatial (the degree of change) constraints. Specifically, the spatial constraints need to be repre-sented in terms of the discrete financial grid, which is quite different from typical trajectory mining which focuses on Euclidean space. Third, each company typically stays at one financial grid point for a certain period of time and thus in their moving trajectory, each point is repeated many times. Applying current sequential pattern mining and motif discovery methods would likely generate many redundant (meaningless) patterns. How to handle such repetitions is the key for effectively and efficiently extracting financially mean-ingful motifs.

Interestingly, we find that this migration pattern mining problem is not unique to financial market study, but can also find applica-tions in business and the social sciences. For instance, in customer relationship management (CRM), marketing researchers typically classify customers according to RFM: Recency (time of the last or-der), Frequency (quantity of orders), and Monetary value (value of orders). Further, to perform RFM analysis, each attribute is discretized to generate several categories [3] and thus produce a three-dimensional marketing grid. Current marketing practice uti-lizes such grids to analyze customer behavior and define market segments. However, how to categorize the dynamics of customer behavior, and how to adjust the managerial decision accordingly, remains on open problem in marketing. Thus, even though we fo-cus on mining migration trajectories from financial data, our prob-lem and algorithm can be easily generalized to similar problems in other domains.
We develop new methodologies for mining migration trajectories from financial data, undertake a detailed study of the US markets, and analyze the results. Specifically, (1) we formalize the migration motif definition and its mining problem for company trajectories over the financial grid; (2) we develop an efficient mining algorithm by utilizing a compact trajectory pattern representation and a graph theoretical method, utilizing maximal cliques, to discover all mi-gration motifs; (3) applying our tool to the financial data, we find interesting and significant motifs, not found in randomized data. Thus, these patterns are inherent and uniquely characterize the dy-namics of the financial market. (4) We relate migration motifs to financial economic theory. Trajectory Mining: Trajectory mining has attracted much at-tention over the last several years due to the widespread use of location-acquisition technologies, such as GPS, GSM, sensor net-works, and RFID. Researchers have developed methods for trajec-tory clustering, classification, and frequent pattern discovery [13, 16, 10, 8]. The existing work on trajectories focuses on physical geometric or geological space. Thus they aggressively utilize Eu-clidean space properties to define and approximate the trajectories [8, 13]. Since company trajectories move over the non-Euclidean financial grid, we cannot apply their similarity measures. Besides, most trajectory mining methods do not consider temporal factors, focusing only on the spatial properties of the moving path. In our problem, we must consider both spatial and temporal factors for the migration motifs.

The trajectory pattern or simply T-pattern in [10] is very similar to our migration motif definition. The major contribution of their work is to identify region-of-interests, i.e., the discretized regions which are shared and visited by many trajectories. Then, they as-sign each region a unique symbol and apply the TAS (Temporally-Annotated Sequence) algorithm (a frequent sequential pattern min-ing method) [9] to discover frequent patterns. What makes our problem unique is that each company is likely to stay at a loca-tion for a long time, and thus we have to deal with the repetition problem. Moreover, our migration motifs are defined in terms of pairwise-similar sub-trajectories, which is another difference from T-patterns.

We also note that trajectory mining and our problem can be looked upon as a special case of sequential pattern mining [1], which focuses on the discrete realm of categorical items and events. Trajectory mining and our problem target multivariate ordinal space and involve approximate matching in such space.
 Motif Discovery in Time Series: Several motif discovery ap-proaches have been developed for time series data. Dynamic Time Warping [17] permits a limited amount of time or speed varia-tion. Another avenue, usable for spatial variation as well, compares time series according to their Longest Common Subsequence [20]. LCSS has higher immunity to outliers [21], but it is not efficient for large sets of strings. Lin [14] uses a Monte Carlo projection method [2] to search randomly, reducing the expected time to find good matches. Recently, Minimum Description Length (MDL) has been applied to decompose time series and to identify interesting motifs [19]. Our problem and work differ from these works as we try to find motifs of any length, whereas these works focus on discovering motifs of a certain length. Also, our migration motif is specified by both spatial and temporal constraints, which are not included in other time series motif studies.
Our general goal is to find frequent patterns of company mi-gration in size-value space. Following Fama and French [7], we consider two attributes of stocks in the US: market capitalization (size) and P/B ratio (value), forming a two-dimensional space. The stocks of firms with low P/B ratios are considered to be value stocks, while the stocks of firms with high P/B ratios are consid-ered to be growth stocks. Fama and French partition the space into a 2  X  3 grid: {small, large}  X  {value, neutral, growth}. This grid size is too coarse to observe detailed migration patterns, so we in-crease the grid divisions to 10  X  10 and higher, setting boundaries by equally-sized percentiles ranges. We call this grid the Financial Grid . Company attributes are computed once per year. The location of each firm in the grid for year R is based on its size at the end of June that year and its P/B at the end of December of the previous year. That is, ( x, y ) r = ( size ( June ( r )) , value ( Dec ( r  X  1)) .
The Financial Trajectory of a company is simply a time se-quence, denoted as ( x 1 , y 1 ) , ( x 2 , y 2 ) , , ( x n is the company X  X  i th discrete point (or location) in the financial grid G 2 . Figure 1 shows an example of a financial grid and five trajectories, which will be used for a running example throughout this paper. The number next to each vertex is the duration that the company remains at that location.

A Sub-trajectory is a subsequence of a trajectory. Formally, for a given trajectory ( x 1 , y 1 ) , ( x 2 , y 2 ) , , ( x n , y is a sequence ( x  X  1 , y  X  1 ) , ( x  X  2 , y  X  2 ) , , ( x ists 0  X  i 1 &lt; i 2 &lt; &lt; i k  X  n , where ( x  X  1 ( x 1 , y i 1 ) , , ( x points is known as a k -length sub-trajectory. Note that a sub-trajectory by itself describes neither the elapsed time nor the origi-nal path between its points. For this reason, we will sometimes re-fer to sub-trajectories as sub-trajectory patterns , since they embody more than one possible set of timings and detailed paths. However, not every sub-trajectory is of interest for financial analysis. We are only interested in those sub-trajectories satisfying certain temporal and spatial constraints.

D EFINITION 1. (Sub-trajectory with Spatial and Tempo-ral Constraints) The spatial constraint for a sub-trajectory re-quires the intermediate trajectory points ( x k , y k two consecutive sub-trajectory points ( x i j , y i j ) and ( x i  X  k  X  i j +1 , to be within a range defined by these two points. The temporal constraint for a sub-trajectory requires that the number of intermediate trajectory points between consecutive sub-trajectory points be less than a limit U , that is, i j +1
For instance, the simplest spatial range function requires in-termediate points to be within the rectangular bounding box specified by the two consecutive sub-trajectory points, i.e., x j  X  (  X  ) x k  X  (  X  ) x i j +1 and y i j  X  (  X  ) y k  X  (  X  ) y helps us to find the minimum number of descriptive points in a tra-jectory. The intermediate points need not be included because they are guaranteed to follow a bounded path from one sub-trajectory point to another.

An upper bound time constaint is important in financial migration motif mining to model the short-term memory of investors. That is, even when long-term data is available for their consideration, investors tend to only consider a company X  X  recent history.
We now consider the problem of finding similar sub-trajectories within a collection of trajectories. Let D be a set of financial tra-jectories { T 1 , T N }, where the time interval t is the same for all trajectories. (In our examples, t = 1 year.) Not every trajectory starts at the same absolute time, however.

This problem could be simply converted into a sequential pattern mining problem by representing each grid point as a unique sym-bol. However, in financial data mining, exact sub-trajectory patterns may not capture the underlying behaviors shared by the companies due to noisy data. For example, book value is estimated and only available on a quarterly basis. Conversely, prices of publicly-traded stocks are available daily (even by the minute) but are very noisy. Hence, we are interested in a robustness measure for defining mi-gration motifs. Specifically, we introduce the similarities (distance) between two (sub)trajectories.

D EFINITION 2. (Distance between (Sub)Trajectories) For two aligned equal-length trajectories or sub-trajectories T = ( x 1 , y 1 ) , ( x 2 , y 2 ) , , ( x n , y n ) and T  X  = ( x ( x n , y  X  n ) , their distance D ( T, T  X  ) is the maximum of the distance between any two corresponding trajectory points: In our study, the distance between two trajectory points is defined as the L1-norm (Manhattan distance), since we operate in discrete space. For example, in Figure 1, if we assume trajectories stay at a location for only one year, then T W BC = (9 , 5) , (9 , 2) , (8 , 3) , (8 , 1) , (8 , 3) , (8 , 1) , (7 , 2) D EFINITION 3. (Migration Motif) Given a set of trajectories D = { T 1 , T N } , Let P k D be all k -length sub-trajectories from D (satisfying the spatial and temporal constraints). Let M  X  P a subset of k -length sub-trajectories, such that the following prop-erties hold: (1) (pair-wise similarity) for any two sub-trajectories m 1 , m 2  X  M , d ( m 1 , m 2 )  X   X  ; (2) (maximal) adding any other sub-trajectories to M will violate condition 1 ; (3) (frequent) the sub-trajectories in M come from at least  X  different trajectories. That is, if C = the set of trajectories which cover M , then | C | X   X  . A set M of sub-trajectories satisfying these properties is a k -length sub-trajectory pattern or k  X   X   X   X  -migration motif .
 Companies often stay at the same grid location for consecutive years. Such repetition can result in many redundant sub-trajectories from one company. Thus, requirement 3 for distinct trajectories prevents us from over-counting the effect of the repetition. It also helps to avoid over-counting the effect of a few trajectories which have cyclic behavior.
Given a support threshold  X  and distance threshold  X  , we would like to discover all the migration motifs. Our algorithm is built on two novel techniques: (1) a compact trajectory and pat-tern representation, which can significantly reduce the number of sub-trajectories, and (2) the combination of maximal clique and sequence-expanding properties. We will introduce these techniques in turn and then give the overall mining algorithm.
As we mentioned before, financial trajectories are very special because a firm often stays at one gird location for a number of years. For instance, consider a trajectory which stays at one location for 10 years and then moves to another location for the next 10 years. If these two locations happen to belong to a migration motif and the time constraint U  X  10 years, then this small trajectory alone gen-erates 100 valid sub-trajectories. An upper bound for the number of sub-trajectories produced by a single trajectory is Q i min ( c where c i is the time spent at location i , P i c i = length of the tra-jectory. If U is very relaxed, we can have an exponential number of sub-trajectories. Additionally, we have to consider the spatial and temporal constraints for each sub-trajectory. This type of repetition makes the motif mining very challenging, considering we have to extract motifs from a vast number of sub-trajectories.

To deal with these difficulties, we introduce a compact trajectory and pattern representation which significantly reduces the computa-tional cost of pattern mining by combining overlapped patterns into a single object. In a trajectory ( x 1 , y 1 ) , ( x 2 , y the company stays at the same location for consecutive time pe-riods, we merge the consecutive points into one and record time spent. Thus, we have the following representation: ( x  X  ( x 2 , y  X  2 ) : z 2 , , ( x  X  k , y  X  k ) : z k , where for any i , ( x ( x i +1 , y  X  i +1 ) . This representation not only reduces memory cost, but most importantly, it reduces the enumeration cost. Given this, we introduce the embedding of a sub-trajectory pattern as follows.
D EFINITION 4. (Sub-Trajectory Embedding) A sub-trajectory embedding is recorded in the following format: i 1 : ( x  X 
Figure 2: Timing Constraint on Subtrajectory Embedding sponding location in the compact trajectory representation, i i &lt; &lt; i k , and [ s j , e j ] is the range of valid time points for the corresponding location (1  X  s j  X  e j  X  z i j ) .

We will apply the sub-trajectory embedding to effectively com-press the sub-trajectory patterns. Note that such an embedding con-tains a total of Q 1  X  j  X  k ( e j  X  s j +1) possible sub-trajectory patterns pattern satisfies the spatial constraint, then the entire embedding satisfies the constraint, since member patterns describe the same location-sequence.
 This one-all property does not hold for the temporal constraint. Instead, for any t j in the range s j  X  t j  X  e j , there is at least one valid sub-trajectory appearing at that location at that time.
Figure 2 illustrates how timing constraints on a sub-trajectory embedding. Since we need to show time on the horizontal axis, we represent location as a single dimension on the vertical axis. If U = 3 , then we cannot include all 4 points from each location. Instead, we are limited to a range of 3 from the location transition. This gives us embedding 1 : ( x 1 ) : [2 , 4] , 2 ; ( x 2 arrow E . The three multi-arrows S 1 , S 2 , S 3 , each of length U , sum-marize the actual sub-trajectories contained within E . S the one valid sub-trajectory that can start as early as the 2 point of the first location. S 2 starts one time point later and embod-ies two valid sub-trajectories. S 3 starts at the last time point of the first location and includes U = 3 sub-trajectories. Note that E is the union of these three multi-arrows, but no single sub-trajectory can span the full range of E .

Given this complication, how can we efficiency test whether an embedding satisfies the temporal constraint? The following lemma helps us solve this problem.
 L EMMA 1. For an index i j in a sub-trajectory embedding, let Z ( i j ) be the absolute starting time for that interval in the original intervals in the sub-trajectory embedding, [ s j , e j ] and [ s the following two conditions suffice for validating the time con-straint for a sub-trajectory embedding ( U is the timing constraint threshold):
Additionally, an embedding is maximal if any extension of its interval (increasing e j +1 or decreasing s j ) would produce a non-valid embedding. The maximal property allows us to maximally compress the sub-trajectory patterns.
Now we consider two basic procedures for constructing the valid and maximal sub-trajectory embeddings. The first one addresses the base case, finding the 2 -length trajectory embeddings, and the Algorithm 1 EnumerateEmbedding2( T i ) 1: R  X  X  X  2: for i = 1 to k  X  1 do 3: t  X  0 {time difference from start to end} 5: for j = i + 1 to k do 6: if t &lt; U {time constraint threshold} then 16: R  X  R  X  ( S, E ) {add to the result set} 17: end if 19: end if 20: end for 21: end for 22: return R second one considers how to build smaller-length trajectory embed-dings into longer-length trajectory embeddings.
 Finding 2 -Length Trajectory Embeddings:
L EMMA 2. Algorithm 1 enumerates all the valid and maximal 2 -length trajectory embeddings which satisfy both spatial and tem-poral constraints.
 If the timing and spatial constraints are very loose, this algorithm will generate k 2 embeddings, for N trajectories of (average) length k . If the constraints are tight, the result size will be closer to N k . The time complexity is proportional to the result set size. To list each subtrajectory explicitly, without using the embedding format, would take O ( N k 2 U 2 ) .
 Merging Sub-trajectory Embeddings: Here we consider how to merge a k -length and a 2-length sub-trajectory embedding (both from the same master trajectory) to form a k +1 -length embedding. Let the two pre-merge sub-trajectory embeddings be as follows:
T = i 1 : ( x i 1 , y i 1 ) : [ s 1 , e 1 ] , , i k : ( x
T  X  = j 1 : ( x j 1 , y j 1 ) : [ s  X  1 , e  X  1 ] , j 2 : ( x If the last index of T is the same as the first index of T j ), we can merge them. However, due to the time constraint U , merging affects not only the time ranges of the overlap location, but also the ranges of the locations before and after it.
We identify the following three timing rules. To distinguish the various embeddings, let the time ranges of the merged embedding be called [ a i , b i ] . First, for the commonly shared location i the maximal time range is the overlap of the two input ranges. An overlap exists if e k  X  s  X  1 . Then, [ a k , b k ] = [ s k , e k ]  X  [ s  X  1 , e  X  1 ] = [ max ( s
We observe that if the time range for location i is set, then con-straint U has a propagating effect on the locations before and after: b Rule (2) addresses locations after the overlap point. Since we use a 2-length embedding, there is only one such point:
There are k-1 points before (to the left) of the overlap point. The third rule should be applied for c = ( k  X  1) downto 1 , or until [ a , b i ] is unchanged from [ s i , e i ] : [ a c , b c ] = [ max ( s c , Z ( i c +1 )  X  Z ( i c ) + a
If any of the intervals are empty, then these two embedding can-not be combined. We refer to this operation as Combine ( T, T Figure 3 illustrates the merging method. We again let U = 3 . T and T  X  are spatially mergeable because ( x 2 , y 2 ) = ( x apply temporal merging as follows:
Therefore, the merged sub-trajectory embedding T M 1 : ( x 1 , y 1 ) : [3 , 4] , 2 : ( x 2 , y 2 ) : [2 , 3] , 3 : ( x
L EMMA 3. If the existing k -length embeddings are maximal, then the procedure either produces a valid and maximal k + 1 -length embedding or determines that the two are not mergeable.
Given the compact pattern representation, we now consider the overall mining algorithm. The key observation here is that we can speed up our mining process using the motif-join operation which combines two shorter motifs into one longer motif. Specifically, let M k be a k -length migration motif, and let M 2 be a 2 -length motif. Motif-Join: The join between M k and M 2 is denoted as M k  X  M 2 = { Combine ( T, T  X  ) | T  X  M k , T  X   X  M 2 , and , Simply speaking, for each pair of embeddings, one each from M and M 2 , we only join those two embeddings which belong to the same trajectory and which overlap such that the last point for the k -embedding is the first point for the 2 -embedding.

The motif-join operator has an important property, referred to as the pairwise similarity preservation property , i.e., for any two sub-trajectories T 1 and T 2 in M k  X  M 2 , they satisfy the pairwise similarity condition, i.e., their distance d ( T 1 , T 2 )  X   X  . Further, we can see the following lemma.

L EMMA 4. If M k +1 is a ( k + 1) -length migration motif, then, there exists a k -length motif and a 2 -length motif, such that M Thus, from this lemma and the pairwise similarity preservation property of the motif-join operator, we can derive the following DFS algorithm to discover all the migration motifs efficiently. Algorithm 2 MigrationMotifMiner( D ) 1: V  X  X  X  2: for each T i  X  D do 4: end for 5: Construct Similarity Graph G 2 from V 6: Motifs  X  Maximal Cliques satisfying Frequency Constraint 7: Represent motifs by the centroid of each location 10: DFSEnumeration( m ) 11: end for 2: for each e  X  E do 5: continue; 6: end if 11: else 14: end if 15: end if 16: end for 17: clean the embedding list of m ; return H Maximal clique and 2 -length migration motif: All migration mo-tifs must satisfy a strict pairwise similarity measure. However, us-ing Lemma 4 and the similarity preservation property of the motif-join operator, we only need to test pairwise similarity for the orig-inal 2 -length motifs. That is, only the 2 -length migration motifs need to be constructed from scratch. Specifically, we construct the similarity graph to extract 2 -length motifs.

Let P 2 i be the set containing all the 2 -length sub-trajectories (sat-isfying the spatial and temporal constraints) of trajectory T construct the 2 -length sub-trajectory similarity graph as G where V is the set of all 2 -length sub-trajectories,  X  P ( u, v ) exists if distance d ( u, v )  X   X  . This implies that G because the grid partitions limit the number of possible neighbors. Let C be a maximal clique (complete subgraph) in G S . If the clique C has sub-trajectories coming from at least  X  different trajectories, then this maximal clique corresponds to a migration motif. We ap-ply the maximal clique enumeration algorithm introduced in [12] to discover maximal cliques from the 2 -length sub-trajectory similar-ity graph and choose those ones satisfying the frequency constraint as the 2 -length motifs. Later in the experimental study, we found this is very efficient for our datasets.
 Algorithm Description: Algorithm 2 shows our 3-stage mining algorithm. Stage 1 lists all the 2-length sub-trajectory embeddings by Algorithm 1. Stage 2 discovers 2-length motifs using the afore-mentioned method (Lines 5  X  8 ). Stage 3 uses DFS to efficiently generate all the longer motifs from the 2-Length motifs.
 We recursively mine the k -length migration motifs, when k &gt; 2 . For each 2-length motif in M 2 , we call the recursive procedure DF-SEnumeration for this purpose. First, we use the CandidateExten-sion procedure to find all spatially appropriate 2 -length migration motifs to extend migration motif m (Procedure line 1 ). Note that this reduces the search space by quickly pruning those 2 -length mo-tifs which cannot be joined with the current working motif m . Our rule compares the centroid of the last location of all sub-trajectories in m and the centroid of the first location of all sub-trajectories in the candidate 2 -length motif. A 2 -length motif can be combined with m only if d (( x k , y k ) , ( x  X  1 , y  X  1 )) &lt; 2  X   X .
It is easy to see if this is not the case, the two sub-trajectories cannot be combined, or are not mergeable. This operation places all the possible candidate 2 -length motifs to extend m in E .
Then, for each extension candidate in E , we use the motif-join procedure to join the embedding list of two migration motifs to pro-duce a ( k + 1) -length motif (Procedure line 2  X  3 , m  X  e ). We test whether each m  X  e satisfies the frequency constraint, saving only those whose patterns are sufficiently frequent ( DFSEnumera-tion lines 4  X  6 ). Each new discovered motif is indexed using its motif-centroid , which is the (rounded) average of each dimension (Procedure line 7) and try to store it in a hash table. However, the same motif might be produced more than once, as a result of dif-ferent motif joins. To quickly test whether the new motif has been detected before, we first check if other motifs have the same motif-centroid using the hash table. If we find a match, we compare their embedding lists and see if they are indeed the same. We applied our algorithm to the financial market data from the Center for Research in Security Prices (CRSP) and Compustat databases for the period 1964 to 2007. We include ordinary shares (share code 10 or 11) but exclude financial companies (SIC code 6000-6999), American Depository Receipts, and closed-end funds. We also require that companies exist in the metrics for at least 10 years. Each company belongs to one of three stock exchanges: NYSE, NASDAQ, and AMEX. After this filtering, we have 1717 companies in NYSE, 2675 in NASDAQ, and 825 in AMEX.

Following Fama and French X  X  approach, we define size to be stock price times number of share outstanding according to CRSP. Book value is set as total assets minus liabilities plus deferred taxes and investment tax credit, if available, minus liquidating, redemp-tion, or carrying value, of preferred stock from Compustat. In gen-eral, NYSE companies are relatively large, while NASDAQ and AMEX companies tend to be smaller. Therefore, we search for mo-tifs in each exchange separately. The grid is formed by partitioning each axis into equally-sized percentile ranges, updated each year. E.g., when we target a 10  X  10 grid, cell (1,2) contains companies in the [0 : 10) size percentile range and the [10 : 20) P/B per-centile range. Following the financial industry X  X  practice of setting global definitions of  X  X mall X  and  X  X arge, X  we use the same partitions for all three markets.
 We tested each combination of the following parameter values: temporal constraint,  X  is the spatial constraint, and  X  is the minimum support level. We also tested the following grid partitionings: (10  X  10) , (20  X  20) , (50  X  50) , and (100  X  100) . Our algorithm is very efficient. One combination of the parameter values can be tested in less than 2 and half minutes, using an Intel 3 . 2 GHz dual-core Xeon CPU with 4 GB RAM. Tables 1, 2 and 3 summarize the number of motifs ( M x corresponds to x -length migration motifs) detected for the NYSE, NASDAQ, and AMEX markets, respectively, under selected conditions. We use the following shorthand notation to indicate parameter settings: ( g/U/ X / X  ) , i.e. (10 g/U 3 / X  1 / X  10) , where g is for the number of grid partitionings.
In the existing Finance literature, researchers usually use a 2  X  3 grid or at most a 10  X  10 grid to analyze the financial markets. Our results show that the conventional grid sizes are not sufficient to analyze the migration of risk factors. We observed that motif dis-covery is sensitive to the grid scale. For the NYSE, the 10  X  10 grid generates the maximum number of motifs, for any combination of U and  X  . Meanwhile, the optimal grid partitioning for NASDAQ and AMEX markets is 50  X  50 . The reason is that a large portion of NASDAQ and AMEX trajectories are entirely contained within the lowest size decile. A 10  X  10 grid is reasonable for NYSE, since its company X  X  trajectories tend to make large movements. Markets with more concentrated trajectories, like NASDAQ and AMEX, need a finer partitioning. We show this zoom-in effect in Figures 4, 5, 6, and 7.

The longest motifs tend to appear with larger U and  X  . This is expected, because larger values imply looser spatial and temporal constraints.
We compared occurrences of motifs in real financial data vs. ran-domized datasets. To generate random but plausible data, we took each company X  X  compact trajectory and then randomly shuffled the order of its location points. Using 100 randomized datasets, we searched for motifs across a cross section of input parameters. Our results are shown in Tables 1, 2 and 3. Two-length motifs are com-mon in both randomized and real data, so they may not be meaning-ful. According to the Z -values, however, the frequency of longer motifs in real data is significant, not merely due to random activity. Table 1: NYSE Real vs. Randomized Data: (10 g/U 3 / X  1 / X  10) ; (20 g/U 5 / X  1 / X  10) ; (50 g/U 5 / X  2 / X  10) ; (100 g/U 5 / X  1 / X  10) Table 2: NASDAQ Real vs. Randomized Data: (50 g/U 3 / X  1 / X  10) ; (100 g/U 3 / X  1 / X  10)
These results show that risk factor migration in the stock mar-ket is not random, and should not be neglected. Companies show high frequent risk migration patterns, which implies that the re-turn that compensates for risk may also be associated with a certain patterns. The risk migration patterns may possibly explain some market anomalies that cannot be fully explained with conventional asset pricing models. Figures 4 and 5 depict representative NYSE motifs. Likewise, Figure 6 shows ones for NASDAQ and Figure 7 for AMEX. Note that in the NASDAQ and AMEX figures, we have focused on cer-tain size and P/B values to magnify the motifs.

An interesting class of motifs shows an oscillating migration pat-tern, with a pronounced back and forth change of value or size, e.g., M5-58 in Figure 4 and M3-172 in Figure 6. We call this the oscilla-tion migration . Fama and French [6] identify a convergence pattern using a short 1-year horizon. Our results imply that what Fama and French found is part of a longer horizon oscillation pattern.
When the movement is horizontal (value oscillation), companies migrate back and forth between the P/B spectrums of value and growth stocks. In terms of stock returns, this migration pattern means shifting between the high average to low average market ex-pected returns. The motifs we found strongly suggest that given a certain size, a company shows a consistent oscillation movement among the P/B cells. Our algorithm allows us to track such move-ment over a long horizon. The maximum length motif we found is M8 in NYSE (10 g/U 4 / X  2) . Oscillation motifs can be explained economically by an argument similar to that advanced by Fama and Table 3: AMEX Real vs. Randomized Data: (10 g/U 3 / X  1 / X  10) ; (20 g/U 3 / X  1 / X  10) ; (50 g/U 3 / X  2 / X  10) ; (100 g/U 4 / X  1 / X  10) French. Market power could erode the high profitability of growth companies, while P/B of value stocks tends to rise as companies restructure and improve in profitability. So, over several years we see a shifting back and forth along the P/B spectrum. Other pos-sible explanations could be exogenous, such as investors X  irrational response or endogenous, such as the company X  X  life cycle. We find size oscillation to be much rarer than value oscillation. Some examples are M5-37 in Figure 4, M5-13 and M5-10 in Fig-ure 5, and M5-3 in Figure 6. For size oscillation motifs, the P/B ratio of the companies usually is small, so those companies are value stocks. As Fama and French argued, value stocks have the potential to restructure so that it is possible for them to change their size very quickly.
The motifs, especially the longer motifs, are concentrated in cer-tain areas in the size-value grid. We identify those areas by show-ing some highly representative motifs in different markets in Fig-ures 4, 5, 6 and 7. In NYSE, the motifs tend to appear more fre-quently in the upper size range, e.g., M6-1 and M5-58 in Figure 4, and M4-184, M4-186, M5-16, and M6-2 in Figure 5. The members of these motifs are among the largest companies in the markets, such as General Motors (GM) in M5-58 in Figure 4. This implies that, once companies reach a very large size, their operation is rela-tively stable and predictable. The migration patterns of these large firms are probably due to cyclical macroeconomic factors. On the contrary, small companies may be more likely to bring unexpected and surprising performance (in terms of risk migration, jumping). Therefore, investors require a so-called  X  X ize premium X  for them.
However, most motifs for NASDAQ and AMEX appear in the smaller size range of the grid, e.g., M6-2, M5-17 in Figure 6 and M4-3 and M4-5 in Figure 7(c). A big jump across size is rare for motifs in these two markets. However, these two markets do show value oscillation motifs very similar to those of NYSE.

The low P/B range is another area where motifs appear fre-quently. The size oscillation migration patterns are common in this area for all three markets, e.g., M5-37 in Figure 4, M5-10 in Figure 5, M5-3 in Figure 6, and M6-1 in Figure 7(d). The verti-cal oscillations imply the potential restructuring behaviors for value stocks. In addition, the market participants generally expect com-panies with high P/B to grow in size. We also capture this belief in M3-170 in Figure 6. Figure 7: AMEX Motifs: (10 g/U 3 / X  1 / X  10) ; (20 g/U 3 / X  1 / X  10) ; (50 g/U 3 / X  2 / X  10) ; (100 g/U 4 / X  1 / X  10) Company Life Cycle. We wish to see what migration motifs have to say about the life cycles of companies. We record a starting age for each company, the point at which its migration pattern is first captured by a motif. E.g., HESS CORP(HES) becomes the member of M6-1 after it exists in our dataset for 24 years (Age 24). Some companies may have come into existence prior to their listing in our dataset. Nevertheless, our measurement at least obtains a minimum age (lower bound). We then calculate the average starting age for all motifs of the same length, for NYSE (10 g/U 3 / X  1 / X  10) , NASDAQ (50 g/U 3 / X  1 / X  10) , and AMEX (50 g/U 3 / X  2 / X  10) . The mean with 1  X  error bars are reported in Figure 8.

These data show that, in general, companies appear in a migra-tion pattern when they have at least several years of maturity. In other words, companies need to be  X  X ld X  to show a more consistent migration path. The average age to show M3 and longer motifs in NYSE ranges from 12-18 years. Though NASDAQ and AMEX companies tend to be younger overall, they still need 6-8 years be-fore the companies show a motif. This finding can be explained by the life cycle of companies. If a company survives in the capital market, it will generally grow to a large size, and the managerial op-eration tends to mature and be relative stable. For these companies the cyclical nature of the overall economy may drive the observed migration patterns.
 Average Staying Time . Our tests may provide an explanation for two famous finance anomalies, long-term return reversals (De Bondt and Thaler [4]) and short-term momentum (Jegadeesh and Titman [11]).

De Bondt and Thaler [4] establish two portfolios, losers and win-ners , based on historical performance. Losers are stocks that have had poor return over the past three years, and winners are those that had high returns over a similar period. They find that losers have much higher average returns than winners over the three years after the establishment of the portfolios.

If we reevaluate De Bondt and Thaler X  X  finding with the migra-tion approach, the winners portfolio will contain some value stocks located in the low end of the P/B spectrum, while the losers port-folio will contain some growth stocks located in the high end. In De Bondt and Thaler X  X  approach, winner and loser companies will tend to move to the opposite end of the return spectrum; in other words, opposite P/B ends from the migration perspective. We identify a few sample motifs with such characteristic. E.g., M5-58 in NYSE (10 g/U 3 / X  1 / X  10) . We record the average time spent in each cell before moving to another cell ( staying time ). M5-58 X  X  companies X  staying time in (10, 1) is 1.9 years, which is about the time to name them winners, according to De Bondt and Thaler X  X  approach. But after being chosen as the winners, it is about time for those com-panies to migrate to the lower return range (10, 6), where they are likely to stay for 2-3 years, the period over which Debondt and Thaler calculate their abnormal return.

This migration pattern provides a reasonable explanation for re-versal of the winner portfolio in their tests. In addition, our tests find that loser portfolios, which are on the left side of our financial grid, are likely to migrate after 2-3 years (e.g., in M5-58 from (10,8) to (10,1)), from the lower return range to the higher return range. This is the loser reversal of De Bondt and Thaler.

Jegadeesh and Titman [11] find that strategies which buy stocks that have performed well in the past and sell stocks that have per-formed poorly in the past generate significant positive returns over 3 to 12 month holding periods. Our results show that stocks X  average staying time is longer than one year. This means that risk migration is lower frequency than momentum strategy X  X  turnover period. This could imply that momentum is caused either by the unchanged risk factors or by other risk factors that migrate in high frequency.
Overall, our tests show that migration is a common phenomenon for the listed companies. Unlike other recent studies in migra-tion [7, 6], our tests provide a quantitative approach to describe the long-term historical migration path for companies.
 Motif Relation to Calendar Years . We list the membership infor-mation for several typical motifs in NYSE and NASDAQ (Table 4). For each motif, we provide each company X  X  ticker and time span. For motifs with value oscillation paths, members X  time spans are highly concentrated. For example, in NYSE, in M5-45, all mem-bers join the motif from 1982-1984 and leave it from 1988-1991. This tight time span is characteristic of all the representative motifs we identified in Figures 4 and 6.

The motifs with significant jumps show a slightly different pat-tern. E.g., M6-1 in NYSE and M3-22 in NASDAQ have starting years in the ranges 1966-1984 and 1976-2003. Although the years are widely spread, we can classify them into several periods. For M6-1, JM, CUE, ZB, PD, and ANR start in 1966-1967; HES, CEG, PGN, AEE in 1994, and MRO in 1984. For M3-22, ECOA, HELE, and KUST start in 1976-1978; MED, CRPB, SPSI, SMTH in 1991-1994, and TRNS, SATC, TGAL in 2002-2003.

In contrast, there is no clear clustering of starting years for ver-tical oscillation motifs. E.g., M5-37 in NYSE ranges from 1965-2002, and M5-3 and M4-50 in NASDAQ range from 1974-2000.

The causes for synchronicity (and asynchronicity) of motifs are not fully known. One possible explanation could be industry ef-fect, that companies in the same industry may tend to move at the same period. However, our results do not support the hypothesis. Although we find some companies in some motifs come from the same industry, for most motifs, the membership is widely spread in different industries. For example, even for NASDAQ, a market with highly concentrated industries, no company in M5-17 comes from the same industry.

We believe there exist market-level factors to cause the clustering of starting years, although there is no conclusive analysis on these factors. Market interest rate could be part of the cause. When the market interest rate moves, the market value and the book value of companies in general will change in the same direction. However, each company X  X  sensitivity of market value and book value to the market interest rate is different. This may bring different changes in P/B ratios. All this may cause some companies to appear in the same value oscillation pattern in the same period. If this is the case, then investors should pay more attention to market-level risk factors, e.g., interest rate, to evaluate the company risk migration. However, this explanation is not conclusive. We believe further research is needed to identify the cause of the migration patterns and their characteristics.
We have developed an efficient and novel method to discover mi-gration motifs in a financial grid, using a graph theoretical approach for performing approximate matching and incorporating spatial and temporal constraints. To our knowledge our study is the first at-tempt to find multi-year migration patterns in a financial dataset. Our also extends the work of Fama and French [7], which studies migration patterns over a one year time horizon. Perhaps the most interesting finding from our study is the existence of long hori-zon oscillation patterns in the financial data. Our method detects motifs in which firms migrate back and forth between  X  X alue X  and  X  X rowth X . This oscillation pattern may help to explain the so called  X  X alue premium X  identified by past financial researchers. This pat-tern may also help to explain the long term mean reversion of stock returns found in De Bondt and Thaler [4].

We see opportunities to apply our algorithm to conduct further experiments to study financial hypotheses. For example, it may be possible to identify firms that have a high probability of entering an oscillating pattern. If successful, such an exercise could provide investors a signal as to which stocks are likely to have high (or low) returns over the next few years.
