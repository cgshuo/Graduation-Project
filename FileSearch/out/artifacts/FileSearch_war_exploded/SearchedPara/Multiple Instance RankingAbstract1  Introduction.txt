 Charles Bergeron chbergeron@gmail.com Jed Zaretzki zaretj@rpi.edu Curt Breneman brenec@rpi.edu Kristin P. Bennett bennek@rpi.edu This paper introduces a new machine learning paradigm called multiple instance ranking (MIRank), bringing the concept of ranking to the framework of multiple instance learning. Some problems that MI-Rank could potentially solve based on prior data are: 1. For a given country, predict the city that contains 2. For a given state, predict the congressional dis-3. For a given document, predict the para-4. For a given molecular class, predict the molecule 5. For a given state, predict the division that con-6. For a given molecule, predict the site of It is this last application, that of hydrogen abstraction from the field of computational chemistry, that moti-vated this work. The fifth application, which involves making predictions from the census, is also explored here. Later in this paper, a general formulation for multiple instance ranking is provided, an algorithm for MIRank is proposed, and this algorithm is tested on datasets that stem from both applications as well as synthetic data.
 As introduced by Dietterich et al. (1997), the setup for multiple instance learning differs somewhat from the standard learning framework. In standard classi-fication, the task is to predict the class of each item. Each item has a corresponding binary classification la-bel, and features defined for each item are used to build the model. In multiple instance classification (MIC), each item belongs to a bag. The task is to predict the class of each bag of items. Features are defined for each item, but the class label is assigned to each bag. For simplicity of presentation, assume there are two classes: active and inactive. By definition, an active bag must contain at least one active item, while an inactive bag contains exclusively inactive items. It is not known which item is active.
 Figure 1 illustrates MIC, in which bags are ellipses, items in active bags are represented as stars, and items in inactive bags are marked as parallelograms. The straight line is the separating line representing the clas-sification function. Notice that at least one item from each active bag is found above the line, while all items in inactive bags are located below the line. The difficulty is that there exists an ambiguity as to which items in an active bag are actually active. For example, consider the drug discovery application (Di-etterich et al., 1997), with molecules as bags and con-formations (three-dimensional molecular shapes that differ from each other by the rotation of atom groups about one or more bonds) as items. If a molecule pos-sesses one X  X r possibly several X  X onformations that are active, then it is known that the molecule is ac-tive. However, it is not known which conformation is active. On the other hand, if none of a molecule X  X  conformations are active, then the molecule is deemed inactive, and in this case, it is inferred that all of that molecule X  X  conformations are inactive.
 Other applications of MIC include automatic image annotation (Andrews et al., 2003), context-based im-age indexing (Maron &amp; Ratan, 1998), text catego-rization (Andrews et al., 2003) and hard-drive fail-ure prediction (Murray et al., 2005). Algorithms for MIC stem from diverse density (Maron &amp; Ratan, 1998; Zhang &amp; Goldman, 2001), neural networks (Ramon &amp; Raedt, 2000), and generalisations of support vector machines (Andrews et al., 2003; Mangasarian &amp; Wild, 2008). The drug discovery application later inspired Ray &amp; Davis (2001) to formulate multiple instance re-gression, where this time the response assigned to each bag is a real number quantifying the activity of the molecules.
 Multiple instance ranking differs in that a classification label is not known for each bag. Rather, some pref-erence information is available for pairs of bags. For example, it may be known that bag A ranks higher than both bags B and C, while the relative ranking of bags B and C may not be known. In many appli-cations, even more structure exists. In these cases, it is convenient to think of every bag as belonging to a box. Within each box, exactly one bag ranks higher than the other ones in the box, and this bag is des-ignated the preferred bag. It is not known how the other bags in the box rank with respect to each other. Further, it is not known how bags rank with respect to each other across boxes. Additionally, there remains the ambiguity of which items in the preferred bags are preferred and which ones are not preferred. Figure 2 illustrates the situation. Large rectangles represent boxes. As was the case in Figure 1, bags are ellipses, items in preferred bags are represented as stars and items in the other bags are marked as parallelograms. Instead of being fixed, the separating line (represent-ing the ranking function) slides from one box to the next. For each box, the ranking function separates at least one item of the preferred bag from the remaining items of the box.
 The hydrogen abstraction application fits perfectly into this framework. For each molecule (box), the task is to find the group (bag) from which a hydrogen atom (item) is abstracted. It is not known which hydrogen atom is abstracted, only to which group it belongs. The organization of this paper is as follows. Section 2 defines some mathematical notation. Section 3 mo-tivates multiple instance ranking through the compu-tational chemistry problem of hydrogen abstraction. Multiple instance ranking is formulated, and an al-gorithm for MIRank is proposed, in Section 4. The model and algorithm are generalized to nonlinear MI-Rank problems in Section 5. Section 6 describes the datasets used in this paper, and Section 7 specifies the modeling results. Finally, Sections 8 and 9 constitute a discussion and outlook, respectively. Let x denote a vector in R n and let x T mark the transpose of x . Let 0 denote the vector of all zeros and e denote the vector of all ones. Let | x | denote the cardinality of x , that is, the number of entries in the vector. Let k x k 1 denote the 1-norm of x , equal to the sum of the absolute values of the entries of the vector. If x has nonnegative entries, then this equals e I and J indicate index sets. The cardinality of the set I is indicated by | I | . The matrix X I indicates the matrix in R | I | X  n with rows restricted to the index set I . A kernel matrix K ( X, H 0 ) maps R k  X  n and R n  X  m into R k  X  m . Each entry of the mapping results from a function (such as the radial basis function) applied to one row of X applied to one row of H . Bioavailability of a drug, or its ability to be adminis-tered orally, is a major concern to the pharmaceuti-cal industry. This characteristic depends on a drug X  X  capability to withstand degradation by intestinal and hepatic enzymes during first-pass metabolism in or-der to cross the intestinal lining and make it into the bloodstream so that its medicinal effect may be felt (Thummel et al., 1997). Hence, this process of drug metabolism needs to be better understood. More specifically, it is important to discover the attributes of molecules that identify sites which are vulnerable to enzymatic degradation.
 Cytochrome CYP3A4 is but one of many metabolis-ing enzymes found in the human liver and small intes-tine, yet this enzyme metabolises nearly 50% of mar-keted drugs (Guengerich, 1999; Rendic, 1997). For CYP3A4 substrates, approximately half of the known metabolism reactions occur via hydroxylation, the rate limiting step of which is hydrogen atom abstraction (Sheridan et al., 2007). Knowing where a molecule is preferentially oxidized by this cytochrome would aid the modification of compounds to improve their kinetic or pharmacological profiles (Afzelius et al., 2007). Normally, experimental techniques are used to identify the molecular sites susceptible to metabolism. This is a time-and labor-intensive process. While in vitro studies are increasingly high throughput, the in silico identification of metabolic liability early on in the drug discovery process will help prevent taking forward poor drug candidates. In addition, the constraints of the biological problem fit perfectly into the framework of a MIRank application, leading to a potential in silico solution.
 The goal is to build a model that predicts, for each molecule, the site of abstraction of a hydrogen atom during metabolism. In order to accomplish this, in-dividual hydrogen atoms are first grouped together according to molecular equivalence: hydrogens are placed within the same group if and only if the ab-straction of any hydrogen from within the group would result in the same metabolised molecule. In this way, groups are equivalent representations of potential sites of metabolism. Note that experimental data do not show which individual hydrogen is abstracted during metabolism, but rather to which group this hydrogen atom belongs. This setup perfectly fits that of mul-tiple instance ranking. Molecules can be viewed as boxes, groups as bags, and individual hydrogens as items. Figure 3 illustrates these using a stick repre-sentation of a molecule.
 Two prior modeling attempts are described. Firstly, Singh et al. (2003) chose the hydrogen atom that has the minimum estimated abstraction energy, with a suf-ficiently large surface area (of 8 squared Angstroms), as the abstracted hydrogen. Allowing 1 guess per molecule, their rule-based model performed correctly in 44% of molecules. Sheridan et al. (2007) later reported that this model has a prediction rate of 51%, allowing for 2 guesses per molecule. Secondly, Sheridan et al. (2007) assembled a database of 316 molecules (including the 50 molecules used by Singh et al. (2003)). They used a random forest applied to molecular descriptors, and found a model that cor-rectly predicted the site of abstraction for 77% of molecules, allowing for 2 guesses per molecule. Let ( I, J ) denote an ordered pair of bags where I and J are lists of indices referring to their items. Let x i denote a vector of n features for an item i , and let matrix X I  X  X  rows contain the features for each index in I . Further let f denote the ranking function. Then the statement bag I is preferred over bag J is expressed mathematically as The maximum operator on the right hand side can be replaced with all of the items it operates over, hence the inequality is rewritten as The maximum operator on the left hand side is also replaced. A convex combination of the items in bag I is taken, following the lead of Mangasarian &amp; Wild (2008) in their formulation of MIC. This convex com-bination is achieved through vector v I,J whose cardi-nality is that of I . In a slight abuse of notation, v I,J means the vector corresponding to the pair of bags ( I, J ). This vector is nonnegative v I,J  X  0, and its entries sum to one: e T v I,J = 1. This vector multi-plies matrix X I : Let the model be linear defined by vector w , i.e. In this case, we have This paper focuses on linear models, because chemists are interested model interpretation. However, this for-mulation is readily kernelized, as discussed in Section 5.
 Now introduce an empirical risk scalar  X  I,j based on the hinge-loss, allowing for errors in training the model: This inequality resembles the main constraint in Joachims X  ranking support vector machine (2002). It is also the key constraint in an optimization problem whose objective function is to minimize where  X  &gt; 0 is the tradeoff parameter and L emp and L reg are arbitrary loss functions.
 Choosing the 1-norm for both loss functions makes the objective linear in the variables, a choice that was also made by Mangasarian &amp; Wild (2008). Furthermore, using the 1-norm on w makes for sparse models, fa-cilitating the interpretability of linear models. There-upon, the 1-norm MIRank optimization problem is subject to The entries of empirical risk vector  X  are  X  I,j as they appear in the first constraint. This notation signifies that, for each pair ( I, J ), there is an empirical risk contribution from each item j  X  J . These are non-negative quantities, as per 6. Note that there are as many vectors v I,J as there are pairs ( I, J ). These vec-tors are forced to be nonnegative and to sum to one in constraints 4 and 5.
 Since the first constraint is linear and the remaining terms are linear, this is a bilinear optimization prob-lem. We use the successive linear programming algo-rithm given in Algorithm 1 to find a locally optimal Algorithm 1 Multiple instance ranking algorithm Select tolerance  X  and tradeoff parameter  X  .
Initialise u I,J = e | I |  X  ( I, J ). repeat until k v I  X  u I k 1  X   X   X  ( I, J ) solution of the bilinear problem. This proposed MI-Rank algorithm belongs to a family of algorithms that has proven to find good local solutions on a variety of bilinear machine learning problems. The subproblem solutions are not necessarily unique, but this has no impact on algorithm convergence.
 The convergence proof for the MIC algorithm in Man-gasarian &amp; Wild (2008) can be readily adapted to Al-gorithm 1. Specifically, the algorithm converges be-cause the sequence of objective function values at each iteration is nonincreasing and bounded below by zero, and every accumulation point satisfies a lo-cal minima property. The formal proof is omitted for brevity; see Mangasarian &amp; Wild (2008).
 Algorithm 1, as well the Mangasarian &amp; Wild (2008) algorithm for MIC, were implemented in Mat-lab using the linear programming solver MOSEK ( www.mosek.com ). A nonlinear MIRank function can be generated by kernel transformations (Shawe-Taylor &amp; Cristianini, 2004). We adopt the notation and direct kernel ap-proach used for MIC in Mangasarian &amp; Wild (2008). The linear ranking function 1 is replaced by the non-linear function: where x  X  R n is an item,  X   X  R m are the dual vari-ables and the matrix H  X  R n  X  m has as its rows all of the m items found collectively in all of the bags and boxes, and K ( x T , H T ) is an arbitrary kernel map. The bilinear program generating the nonlinear MI-Rank function becomes: subject to v
I,J T K ( X I , H T ) w  X  K ( x T j , H T )  X   X  1  X   X  I,j The kernel formulation remains a bilinear program and thus can be solved using Algorithm 1 by substituting  X  for w and bilinear program 8-12 for bilinear program 2-6. In addition to the hydrogen abstraction dataset, sev-eral additional datasets are used in modeling experi-ments. All three are described here. 6.1. CYP3A4 substrate dataset The CYP3A4 substrate dataset is made up of 227 small drug-like compounds. A series of 36 descriptors for each hydrogen atom for all molecules are calcu-lated:  X  the charge of the hydrogen;  X  the surface area of the hydrogen;  X  the non hydrogen surface area of the base atom  X  the hydrophobic moment: the hydrogen X  X  location  X  the span: a measure of whether the candidate hy- X  the topological neighborhood: the distributions of Recall that, for each molecule, the goal is to predict from which group a hydrogen atom is abstracted, and it is not known which hydrogen from the abstracted site is removed.
 These 227 molecules form are a subset of the 305 non-proprietary molecules used by Sheridan et al. (2007), and represent all those for which descriptor generation could be completed.
 6.2. Synthetic datasets This dataset consists of 227 boxes, five bags per box and five items per bag. There are two features. Each feature is calculated as follows: with  X  box i drawn from the uniform distribution U (  X  1 , 1),  X  bag j drawn from the distribution U (  X  A, A ) and  X  item k drawn from the distribution U (  X  B, B ). Put in words, the center of each box is chosen from a uni-form distribution, and the center of each bag with respect to its box is chosen from a different uniform distribution, and each item with respect to its bag is chosen from yet another uniform distribution. Param-eters A and B characterize these synthetic datasets. For each item, the response is the sum of the features. The goal is, for each box, to find the bag containing the item of greatest response. Five boxes of this dataset are portrayed as Figure 4. It illustrates the difficulty in constructing a linear function separating at least one circle from each box from the remaining circles and dots, as MIC attempts to do. On the other hand, it it possible to find a ranking function (the sliding line) that does this for each box, as MIRank does. Different values for dataset parameters A and B were attempted:  X  Synthetic-1 set A = B = 0 . 01.  X  Synthetic-2 set A = 0 . 1 and B = 0 . 01.
  X  Synthetic-3 set A = 0 . 01 and B = 0 . 1.  X  Synthetic-4 set A = B = 0 . 1. 6.3. Census datasets The two census datasets (census-16h and census-16l) belong to the Data for Evaluat-ing Learning in Valid Experiments (DELVE, http://www.cs.toronto.edu/  X  delve/ ) reposi-tory. It consists of 22784 towns spread amongst the 50 states of the United States of America. This study only considered the 3054 towns of more than 10000 inhabitants. Each town is assigned a 5-digit Federal Information Processing Standard (FIPS) place code (that is not a zip code). Typically, this dataset is used in a regression setting to model the response X  X hich is the town X  X  median housing unit price. The census-16h and census-16l datasets differ in their features: each consists of 16 features drawn from the 1990 census. These datasets are fitted into the multiple instance ranking framework as follows. States are boxes, di-visions of towns are bags and towns are items. For each state, towns whose place code begin with the same number are assigned to the same division. As no place code commences with the number 9, there are up to 9 divisions per state. The task is to predict, for each state, the division that contains the town with the highest median housing unit price. For each dataset, results were obtained using both the MIC and MIRank algorithms. For MIC, preferred bags were treated as active bags and other bags were treated as inactive bags. All results reported are for linear functions.
 The experimental design is as follows. Each dataset was randomly split into training, validation and test-ing subsets consisting of 60%, 20% and 20% of the boxes, respectively. The training subset was used to train both MIC and MIRank models for 19 values of tradeoff parameter  X  spread logarithmically over the range [10  X  3 , 10 6 ]. The model corresponding to the value of  X  that resulted in the best prediction accu-racy over the validation set was retained, and a pre-diction using this model was obtained for the testing subset. This process was repeated 32 times, and the average performance across these 32 testing subsets is reported in Table 1, along with the standard deviation as a measure of spread.
 All results in Table 1 are presented as a percentage of boxes for which the preferred bag was accurately predicted, allowing for 2 guesses per box, which is the metric employed by Sheridan et al. (2007). The al-gorithm tolerance  X  defined in Algorithm 1 was set to 10 For all datasets, the hypothesis that MIC and MIRank results are statistically equal is dismissed using paired t-testing at a 5% significance level. The p-values are reported in Table 2. The results of Section 7 make a strong case supporting the hypothesis that these problems, when framed in a multiple instance ranking paradigm, are better solved by an algorithm that is designed to solve problems of that paradigm over one that is not. Forcing MIRank problems into a MIC paradigm was not as successful. In other words, the improvement is due to choosing a model that better fits the problem.
 The MIRank result for the CYP3A4 substrate dataset reported in this paper compare favourably with ex-isting approaches to hydrogen abstraction. It clearly outperforms the results of Singh et al. (2003). Their results are reproducible and their reported error holds on new molecules. Comparison with Sheridan et al. (2007) is more difficult. Reproduction of their results is challenging since since their descriptors are not pub-lic and the details of the learning and model selection methods they used are not entirely clear. Our de-scriptors attempt to reproduce those of Sheridan et al. (2007), but could not be generated for all molecules. Hence, we regard their results as optimistic. A future controlled experiment is needed to fully com-pare the approaches of Sheridan et al. (2007) and those of this paper. This experiment would val-idate which descriptor set and modeling paradigm is most well suited for this chemistry applica-tion. To facilitate future investigations into MIRank and hydrogen abstraction, the datasets and Matlab source codes used in this paper are available from http://www.rpi.edu/  X  bennek/MIRank/ . This paper introduced a framework that tackles a novel machine learning question arising from an im-portant chemistry problem. A first working algorithm produces excellent results on it and other problems. We believe that this first paper for MIRank will gen-erate future research into new algorithms and appli-cations. This section explores several possible exten-sions.
 In the chemistry domain, we often restrict ourselves to sparse and linear models because model interpretabil-ity is a desired property in the particular application of drug discovery. However, this interpretability analysis is a paper of its own, and does not appear here. Hydrogen abstraction is an important application of MIRank modeling of great practical value for drug dis-covery. We are working to expand the efficacy and ap-plicability of the MIRank hydrogen abstraction models in several ways. First, we are increasing the number of molecules in the database of CYP3A4 substrates that can be used to develop and test new MIRank models. Second, we hope to build databases and models for new substrates, such as CYP2D6 and CYP2C9. Third, we are developing novel descriptors that are believed to be indicative of hydrogen abstraction.
 We are working to improve the MIRank modeling paradigm and investigating other potential multiple instance ranking problems. Reports here are limited to the linear MIRank models, but as discussed the ap-proach can be readily applied with nonlinear models using kernel functions. Research is needed to investi-gate how modeling results are affected by changing the loss functions in the empirical risk and/or regulariza-tion terms of the optimization problem.
 Finally, further improvements to the MIRank algo-rithm are possible. More scalable and efficient algo-rithms for finding locally optimal solutions could be developed by exploiting recent developments in large scale support vector machine algorithms. In addition, integer programming or cutting plane algorithms could be used to find global minima of the optimization prob-lem, but at much greater computational cost. Charles Bergeron is under fellowship from the Fonds qu  X eb  X ecois de la recherche sur la nature et les technolo-gies . This work was done under, and all authors belong to, the Rensselaer Exploratory Center for Cheminfor-matics Research (RECCR, reccr.chem.rpi.edu ). Afzelius, L., Arnby, C. H., Broo, A., Carlsson, L., Isaksson, C., Jurva, U., Kjellander, B., Kolmodin,
K., Nilsson, K., Raubacher, F., &amp; Weidolf, L. (2007). State-of-the-art tools for computational site of metabolism predictions: Comparative analy-sis, mechanistical insights, and future applications. Drug Metabolism Reviews , 39 , 61 X 86.
 Andrews, S., Tsochantaridis, I., &amp; Hofmann, T. (2003). Support vector machines for multiple-instance learning. Advances in Neural Information Processing Systems 15 .
 Dietterich, T. G., Lathrop, R. H., &amp; Lozano-Perez, T. (1997). Solving the multiple instance problem with axis-parallel rectangles. Artificial Intelligence , 89 , 31 X 71.
 Guengerich, F. P. (1999). Cytochrome p-450 3A4: Regulation and role in drug metabolism. Annual Review of Pharmacology and Toxicology , 39 , 1 X 7. Joachims, T. (2002). Optimizing search engines us-ing clickthrough data. KDD  X 02: Proceedings of the eighth ACM SIGKDD international conference on Knowledge discovery and data mining (pp. 133 X  142).
 Mangasarian, O. L., &amp; Wild, E. W. (2008). Multiple instance classification via successive linear program-ming. Journal of Optimization Theory and Applica-tions , Accepted.
 Maron, O., &amp; Ratan, A. L. (1998). Multiple-instance learning for natural scene classification. Proceedings of the 15th International Machine Learning Confer-ence .
 Murray, J. F., Hughes, G. F., &amp; Kreutz-Delgado, K. (2005). Machine learning methods for predicting failures in hard drives: A multiple-instance appli-cation. Journal of Machine Learning , 6 , 783 X 816. Ramon, J., &amp; Raedt, L. D. (2000). Multi instance neu-ral networks. Proceedings of the 17th International Machine Learning Conference .
 Ray, S., &amp; Page, D. (2001). Multiple instance regres-sion. Proceedings of the 18th International Machine Learning Conference .
 Rendic, S. (1997). Summary of information on human CYP enzymes: human P450 metabolism data. Drug Metabolism Reviews , 34 , 83 X 448.
 Shawe-Taylor, J., &amp; Cristianini, N. (2004). Kernel methods for pattern analysis . Cambridge University Press.
 Sheridan, R. P., Korzekwa, K. R., Torres, R. A., &amp;
Walker, M. J. (2007). Empirical regioselectivity models for human cytochromes P450 3A4, 2D6, and 2C9. Journal of Medicinal Chemistry , 50 , 3173 X  3184.
 Singh, S. B., Shen, L. Q., Walker, M. J., &amp; Sheri-dan, R. P. (2003). A model for predicting likely sites of CYP3A4-mediated metabolism on drug-like molecules. Journal of Medicinal Chemistry , 46 , 1330 X 1336.
 Thummel, K. E., Kunzea, K. L., &amp; Shen, D. D. (1997). Enzyme-catalyzed processes of first-pass hepatic and intestinal drug extraction. Advanced Drug Delivery Reviews , 27 , 99 X 127.
 Zhang, Q., &amp; Goldman, S. A. (2001). EM-DD: An improved multiple-instance learning technique. Ad-vances in Neural Information Processing Systems
