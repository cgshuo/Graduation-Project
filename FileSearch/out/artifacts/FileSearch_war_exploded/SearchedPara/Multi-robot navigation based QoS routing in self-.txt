 1. Introduction
With the recent development and convergence in the net-working technologies, the future network will develop into an integrated network environment consisting of multiple hetero-geneous sub-networks which are supported by multiple service providers ( Gabor et al., 2003 ). The convergence could happen between land networks and aeronautics &amp; astronautics networks, or between fixed networks and mobile networks. There are also rapid expansions in the types and amount of the networking devices. In addition, more and more intelligent network services and applications are developed. All these will result in much higher time-space complexity in the future network than before. Therefore, it is an important and challenging task to set up, manage, operate, and maintain such a large-scale, heterogeneous, and dynamic network ( Nakano and Suda, 2007 ).

In a self-organizing system, the participating entities establish an organizational structure that does not require any central coordination. Instead, the individual entities interact directly with each other and continuously react to changes in their local environments ( Christian and Christian, 2005 ). The phenomenon of self-organization is pervasive in both nature and human societies such as fish swarm, flock, population dynamics, economy, etc. The investigation shows that typically, such self-organizing systems are very scalable, adaptive, survivable, avail-able, simple, autonomous, and of small-world ( Junichi and
Tatsuya, 2005 ). These features are also the key requirements of the future network ( Whitacre et al., 2008 ). Swarm intelligence ( Kennedy and Eberhart, 2001 ) can exactly meet these require-ments by producing complicated and intelligent behaviors though local interactions between simple artificial autonomous life enti-ties without central control and global coordination. Therefore, inspired by swarm intelligence, we expect to reduce the net-work X  X  time-space complexity by forming it in a self-organizing way. Most probably, self-organizing networks (SON) will dom-inate the organizational structure of the future network ( Sudhir and Amardeo, 2005; Balasubramaniam et al., 2007 ).
 Routing is the fundamental component in any type of network.
In SON, the routing is required to support self-organization in addition to Quality of Service (QoS) ( Gabor et al., 2003 ). Due to that SON is large-scale, heterogeneous, and dynamic, the routing information cannot be accurately described. The commercialized operations of the network also require that the benefits of both the network service provider and the user should be considered simultaneously. Thus, the routing protocol should not only con-sider the user QoS requirements, but also support the effect of multi-party utility win X  X in ( Ito et al., 2009 ) in the network resource utilization. The routing optimization problem with two or more additive or multiplicative QoS parameters is proved to be NP-complete ( Fernando et al., 2002 ). The QoS routing problem in
SON is extremely difficult to be solved due to the aforementioned factors.
 algorithms and protocols have been proposed. In Xue et al. (2007) ,a k -approximation algorithm was proposed for per-hop routing to find a multi-constrained path satisfying multiple additive QoS constraints. In Xiao et al. (2011) , solid theoretical work has been done on the QoS routing selection. It considers only one QoS metric, i.e., the delay. The novelty of this paper is that the delay of a link is defined as a random variable with a known mean and a known variance. This is similar as the interval defined in this paper. However, although a random variable is very much suitable for theoretical research, it is far from reflect-ing the practical scenarios. In Zuo et al. (2008) , a multi-con-strained QoS routing protocol was proposed for ad hoc networks based on fuzzy logic. The novelty of the protocol is its service-awareness, that is, it considers the QoS requirements asked by different kinds of services. However, it does not consider the flexibility of QoS requirements from the practical applications. In
Kusy et al. (2009) , a predictive QoS routing algorithm is proposed for data delivery to mobile sinks in wireless sensor networks (WSNs). It takes the mobility into account. A mobility graph is extracted from the collected data and is used to predict future relay node on the path. By this way, the algorithm aims to reduce the packet loss and packet delivery delays. These two QoS metrics are very important to QoS routing in WSNs.
 networks was investigated. It proposes a fuzzy controller based
QoS routing algorithm with a multiclass scheme. The multicast algorithm aims to build a multicast tree from the source node to a set of destination nodes. There are lots of works which have been done on QoS multicast. The focus of this paper is on QoS unicast routing. In Lee et al. (2008) , a nature-inspired QoS routing algorithm was proposed. In this algorithm, artificial agents establish the best routes for each communication service whilst the network-wide resources are efficiently utilized. In McAuley et al. (2008) , the simulated annealing algorithm is used to find flexible QoS routes with diverse objectives and constraints. In
Amorim et al. (2006) , a SON routing architecture was proposed consisting of four main architectural components, namely, addressing, dissemination, discovery, and forwarding. In Liu et al. (2010) , a biologically inspired QoS routing protocol was proposed for mobile ad hoc networks. In this protocol, the principle of swarm intelligence is used to evolutionally maintain the routing information. The biological concept of stigmergy is applied to reduce the amount of control traffic.
 routing protocol was proposed for overlay networks. It makes adaptive response by attractor selection. In Liu et al. (2008) ,a biologically inspired energy-aware routing protocol was proposed based on evolutionary cooperation in a biological swarm. It uses the principle of swarm intelligence to reinforce good quality routes with local communication only. In Boleslaw et al. (2008) , a biologically inspired routing protocol was presented called self selective routing with preferred path selection for wireless sensor networks. In Balasubramaniam et al. (2009) , survivability-related routing algorithms (inspired by chemotaxis, reaction-diffusion, and quorum sensing biological processes) were proposed. They work together to effectively reconfigure network resources when transient link failures occur. The network survivability is thereby improved. In Mellouk et al. (2011) , a bio-inspired adaptive algorithmic inductive approach was proposed which can support multiple QoS criteria in routing decisions. In this approach,
Q-routing reinforcement learning is combined with Dijkstra multipath routing to find the best paths optimizing three routing metrics. Load balance is also considered in the approach. In
Junichi and Tatsuya (2005) , a middleware platform was proposed for a new biologically inspired network architecture. It has described a few simple biologically similar behaviors followed by entities. But, it does not mention any routing algorithms.
However, the aforementioned works have not addressed the routing problem in SON from the perspective of swarm intelli-gence and bio-inspired networking. In this paper, we first estab-lish the SON model based on the idea of bio-inspired networking and then design a QoS unicast routing protocol based on swarm intelligence. The inaccurate routing information is described by fuzzy mathematics methods. The multi-party utility win X  X in effect is achieved by microeconomics methods. The multi-robot navigation algorithm ( Tanner and Kumar, 2005 ) is employed to find a QoS path which approaches or achieves the Pareto-optimal under Nash equilibrium of the user utility and the network service provider utility. The proposed protocol is implemented and evaluated by simulation in NS2 ( NS-2 Network simulator ).
The simulation results show that it has outperformed both the swarm intelligence based routing protocols such as Particle Swarm Optimization (PSO) ( Zhan and Zhang, 2009 ) and Ant
Colony Optimization (ACO) ( Caro and Dorigo, 1998 ) and the traditional Dijkstra based routing protocol.

The rest of this paper is organized as follows: Section 2 describes various models used in this paper. Section 3 presents the design of the multi-robot navigation based routing protocol.
Section 4 describes the performance evaluation of the protocol and discusses the results. Finally, Section 5 concludes the paper. 2. Models 2.1. Self-organizing network model
A SON is modeled by graph G ( V , E ), where V is the set of nodes representing the routers and E is the set of links. In 8 v delay jitter, error rate, and the stability degree. In 8 e width, available bandwidth, delay, error rate, and the bandwidth cost. For simplicity, all the parameters of a node except the stability degree are integrated into the same parameters of the node X  X  downstream link. Thus, the link parameters are TB l bandwidth),  X  AB L l , AB H l (available bandwidth),  X  DL  X  JT l , JT H l (delay jitter),  X  LS L l , LS H l (error rate), and ct bandwidth cost). Thus, only one node parameter remains, i.e.,
SD i (the stability degree).

The node load and its neighbors X  load should be considered when calculating the node stability degree. To bear too much load or too little load will result in the load migration between nodes or the changes in the node status. For node i , its available CPU ratio RC i and available buffer ratio RB i are defined as below:
RC
RB time, the available CPU cycles in unit time, the buffer size, and the currently available buffer size, respectively. The load on node i is denoted as LD i and defined as below:
LD i  X  1 where l 1 and l 2 reflect to what extent the current occupancy in
CPU and buffer affects the node load. l 1 , l 2 4 0, l 1  X  l 0 r LD i r 1. A smaller LD i means the less load of the node. The stability degree of node i is denoted as SD i and defined as below: SD i  X  a LD nb  X  b 1 2 where a and b reflect to what extent the load on the neighboring nodes and on the node itself affects the stability degree of the node. a , b 4 0, a  X  b  X  1. If a node has multiple neighbors, LD takes the heaviest load among its neighborhood. Clearly, 0 r SD i r 1. A node bearing load closer to the intermediate value means that the node is more stable. When the node load is at the intermediate value, there is the least possibility that the load will migrate to any neighbor or the load on any neighbor will migrate to itself. 2.2. The user QoS satisfaction degree and bandwidth pricing
The user satisfaction degree over the link bandwidth bw l interval by the application. The user satisfaction degree over the required delay interval by the application. The user satisfaction specify the required delay jitter interval by the application. The user satisfaction degree over the error rate ls l is denoted as S application. S B l , S D l , S J l , and S L l are defined as below: S  X  S  X  S  X  S  X 
The general QoS satisfaction degree of the user on the link is defined as below: E where a 1 , a 2 , a 3 , and a 4 reflect to what extent the bandwidth, delay, delay jitter, and error rate are important for the user QoS requirement. 0 r a 1 , a 2 , a 3 , a 4 r 1, a 1  X  a 2  X  a 0 r E C l r 1. A larger value of E C l means that the user has higher satisfaction degree on the QoS parameters provided by the link.
Let Z l represent the load rate of link e l . We calculate Z below:  X  1 where AB l is the currently available bandwidth of e l , and TB total link bandwidth. To encourage the rational bandwidth usage, the bandwidth price is composed of basic price and adjustive price, as shown in Formula (11). Based on the link load rate ( Mackie and Varian, 1995 ), the basic price is determined by the network provider according to Formulae (12) and (13): pr  X  pb l  X  pf l  X  11  X  pb  X  8 &lt; :  X  12  X  pb  X  8 &lt; :  X  13  X  where Z 0 l and Z 1 l are predetermined empirical value, and 0 o Z 0 low-rate pricing interval. Therefore, the basic price is determined the high-rate pricing interval. The basic price is determined using the auction ( Andrew, 1999 ). In all the other cases, e l load and falls into the flat-rate pricing interval. The basic price is determined using Formula (13). pb min l , pb 0 l , and pb starting price of low-rate pricing interval, the starting price of flat-rate pricing interval, and the highest price of flat-rate pricing interval, respectively. We have pb min l r pb 0 l r pb max
Z max are the corresponding load rates. When Z min l r Z l r Z 0 similar as semi-Cauchy distribution ( Cintula, 2005 ). When b  X  2 and Z l  X  Z 0 l , we have pb l  X  pb 0 l . When Z l  X  Z min pb distribution ( Cintula, 2005 ). When Z l  X  Z 0 l , we have pb the parameters A , a , B , and d . As shown in Table 1 , the adjustive reflects the effect of all the other QoS parameters on the pricing.
In the table, K is a positive integer. 2.3. The utilities and game analysis
The price per unit time paid by the user for using the amount of bw l bandwidth on link e l is denoted as EP l . The cost spent by the network for providing the service is denoted as CT l . EP calculated as below:
EP  X  X  pb l  X  pf l  X  bw l  X  14  X 
CT  X  ct l bw l  X  15  X 
The utilities of the user and the network service provider on link e l is denoted as uu l and nu l , respectively. The Pareto advan-tage of the utility over / uu l , nu l S is denoted as PD
PD are, respectively, defined as below: nu  X  E C l nu  X 
PD  X  b u where b u and b n represent the incline weights over the utility of the user and the utility of the network service provider, respec-tively. 0 r b u , b n r 1, b u  X  b n  X  1. Smaller values of PD balanced utilities of both parties. Thus, the Pareto optimal can be approached or achieved.
 link to determine the best strategy for both parties to achieve the
Pareto optimal utilities under the Nash equilibrium. Assume that the user has n strategies represented by / bw l 1 , ... , bw represents the bandwidth utilized by the user under strategy x , x  X  1 , ... , n . Assume that the network service provider has m strategies represented by / pb l  X  pf l 1 , ... , pb l  X  pf gies correspond to m different bandwidth prices under different link qualities. The utility matrix of both parties over a link is spond to the user strategies and the network service provider strategies, respectively. By the game theory ( Rasmusen 2006 ), a strategy pair under the Nash equilibrium should satisfy ( strategy pair. If there is multiple pairs, the Pareto advantages should be compared. Then the one with the minimum Pareto advantage just corresponds to the best strategy pair ( i , j ) ( i n  X  1 , ... , n , j n  X  1 , ... , m ). 2.4. Small-world links and general path evaluation accumulate a few popular paths to other nodes. When a routing request arrives, one popular path recorded will be used if it satisfies the requirement. The nodes use these popular paths just like using local links. In this paper, we name these shortcut paths as small world links. It can save time to use the small world links.
However, these paths may not be the optimal ones. Therefore, the small-world links should be rationally used such as limiting their hop lengths, using them only when they end at the destination, and updating them periodically. If some small-world link can always be used successfully, the routing system should establish a tunnel between its two end nodes for routing optimization. in Table 2 . Initially this table is empty. With the running of the routing system, gradually more and more qualified paths are added into the table as small-world link entries. In this paper, only the path length is limited for a small-world link. When a small-world link is added at the first time, the usage times will be set as 0. Periodically the routing node will scan its table. It will delete those small-world links with the usage times 0 and set the usage times of all the remaining small-world links as 0. path P sd , H P sd still counts the actual hop number of the small-world link. l u and l n represent the incline weights over the utilities of the user and the network service provider, respec-and more balanced utilities for both parties, we need shorter paths. Therefore, a less path fitness means a better path. Shorter path length not only helps to achieve the Pareto optimal utilities of both parties under the Nash equilibrium over the selected path, but also helps to reduce the network resource consumption by reducing hops. 2.5. Optimization model
The user QoS routing request is denoted as / v s , v [ bw _ rq L , bw _ rq H ], [ dl _ rq L , dl _ rq H ], [ jt _ rq
From left to right, these elements represent the source node, the destination node, the bandwidth constraint, the delay constraint, the delay jitter constraint, the error rate constraint, and the upper bound of unit time price payable by the user. To well describe the inaccurate user QoS requirements, the constraints on the band-width, delay, delay jitter, and error rate are represented in intervals. The objective of the routing is to achieve the Pareto optimal utilities of both parties under the Nash equilibrium over the selected path whilst the user requirements are maximally satisfied. The routing protocol also aims to reduce the network resource consumption as much as possible. The mathematical model of this routing optimization problem is formulated as below:
Minimize f E P sd g X  23  X  s : t : BW P sd Z bw _ rq L  X  24  X  DL P sd r dl _ rq H  X  25  X  JT LS EP BW P sd  X  min f bw l 9 l A P sd g X  29  X  DL JT LS EP bandwidth, delay, delay jitter, error rate, and the unit time price paid by the user for using P sd , respectively. 3. Design of the multi-robot navigation based QoS routing protocol
In this paper, we propose a self-organizing QoS routing protocol based on the multi-robot navigation. In the multi-robot navigation ( Tanner and Kumar 2005 ), information is exchanged among multiple robots. Therefore, the robots can cooperate with and learn from each other. In a complex and unknown environ-ment, the multi-robot navigation can progress towards the ending node by continuously selecting the local targets. The selection is based on the environmental information within the eyeshot of the robot and the navigation information relayed or left by other robots. Both obstacles and possible collisions with other robots are avoided.

Since the self-organizing QoS routing protocol works in a distributed way, each node only maintains local information. When we apply the multi-robot navigation to the self-organizing routing, we make two kinds of extensions to the nodes. First, each node is associated with an eyeshot which is a k -hop local neighborhood centered at itself. Second, each node stores naviga-tion information to other nodes. The navigation information reflects the distance to the target and is updated continuously. A robot which has successfully reached the ending node will reversely update the navigation information along the path it has traveled. 3.1. Eyeshot design
In the routing protocol, we define the eyeshot of each node as its k -hop local neighborhood. In the proposed protocol, three data structures are designed in the table format and maintained by each node. The first is the eyeshot information table which stores the local paths to all the nodes within the eyeshot. It also contains other details about the eyeshot. The second is the navigation function table which records the navigation values to other nodes. The navigation values are calculated by the navigation function. The third is the eyeshot-navigation table which stores the navigation value from one node.

In the eyeshot information table, each entry corresponds to one individual node within the eyeshot and the entry is used to record the information about the path from the stand-by node to that eyeshot node. The information includes the degree of the eyeshot node, the bottleneck bandwidth, delay, delay jitter, error rate, hop count, routing request, and the node ID sequence of the path to the eyeshot node. There may have multiple routing requests which have used the same eyeshot path. We allow at most L routing requests to be stored at each entry.

Each node periodically sends the path collection packets to collect the eyeshot information. Each node also needs to receive and process the path collection packets. Therefore, there are two procedures involved and they are described as below: (1) Create and send the path collection packets.
 (2) Receive and process the path collection packets.

The robot, which has successfully arrived at the destination node v d , needs to go back to the source node along the reverse path. For all the intermediate nodes visited during the return journey, their navigation function values to v d are updated. For
NA  X  where hp id represents the hop count from v i to v d , and E represents the path fitness of P id . Each node has a navigation function table and the navigation function values to all the other nodes within its eyeshot are stored in this table.

Initially, the navigation function value to each destination node is set as 1/( MT ME ), where MT represents the maximum lifetime of the robot and ME is the pre-specified maximum path fitness. When the new navigation function value calculated by
Formula (34) is greater than the old value in the table, the old value will be replaced. When the robot selects the next hop, it needs to know the navigation function values of all the other nodes within its eyeshot. Therefore, in addition to maintaining its own navigation function values to the destination node, the node also needs to collect the navigation information from the nodes within its eyeshot. In our routing protocol, such information is collected and stored in the eyeshot-navigation table which has the structure as shown in Table 3 .

NA k represents the navigation function value from the eyeshot node v N k to the destination node v d . The initialization of the eyeshot-navigation table is the same as the initialization of the navigation function table. Every a certain time interval D t , each node sends its navigation function table to all the others nodes within its eyeshot. Upon receiving the navigation function tables, the node will update its eyeshot-navigation table. 3.2. Robot navigation
Each robot has a data structure PH , which is used to store the selected local path within its eyeshot. Initially, PH is empty. The local path selection procedure within the eyeshot is described as below:
Step 1 : For node v i , add all the available local paths in its eyeshot into a path set CP .

Step 2 : From CP , delete the following local paths: hop selection procedure is described as below: 3.3. Routing protocol maximum iteration number. IN represents the iteration counter.
RN represents the maximum number of robots which can be sent out at each iteration. rn represents the number of robots which have already been sent out. E n represents the path fitness. 4. Performance evaluation based routing protocol in NS2 and evaluated it based on three practical network topologies. They are CERNET as shown in Fig. 1 , CERNET2 as shown in Fig. 2 , and NSFNET as shown in Fig. 3 . CERNET has 36 nodes and the average node degree is 2.78. CERNET2 has 20 nodes and the average node degree is 2.2.
NSFNET has 18 nodes and the average node degree is 1.39. For comparison purposes, we also implement two other swarm intelligence based routing protocols, i.e., PSO based and ACO based. Then we conduct extensive experiments to compare the three routing protocols in the three network topologies. The performance metrics include the routing success ratio, protocol running time, utility, and path quality. 4.1. Routing success ratio
In the self-organizing network, due to the topology dynamics and local interaction, the routing needs to be done by probing methods. The transmission of routing control messages are some-times affected by the network condition. The QoS constraints proposed by some users may be too tough. All these factors possibly lead to the routing failures. Therefore, the routing success ratio is an important metric to evaluate the routing protocols in SON. For each routing request, we randomly select the source node, the destination node, and set its QoS level. The proposed multi-robot navigation based routing protocol is com-pared with the PSO based routing protocol and the standard ANTNET-1.10 protocol ( Caro and Dorigo 1998 ). The results over the three different topologies are presented from Figs. 4 X 6 . The results show that with the time passing away, all the protocols have improved routing success ratios. The improvement over the CERNET topology is the most significant among the three topol-ogies. At the beginning phase of the ANTNET protocol, due to no pheromone left in the network, the next hop selection is highly random. Therefore, initially its routing success ratio is much lower than the other two. Our multi-robot navigation based routing protocol always achieves the highest routing success ratio among the three.

In the PSO based routing protocol, small-world links are accumulated during the protocol running. However, due to the localized network information and the rapid topology changes, the previous small-world links may not be successfully adopted by the present routing requests. The routing success ratio will thereby occasionally decrease. However, in the multi-robot navi-gation based routing protocol, the eyeshot is a much extended local area. Within the eyeshot of each node, the local paths information is collected in advance of the arrival of routing requests. The update of the navigation function values helps the other robots to move toward the right direction. The contribu-tions made by all these factors result in its higher routing success ratio than that of the PSO based protocol. The price paid by our protocol is more network resources required for collecting the local paths information.

Both PSO and multi-robot navigation based protocols can find the feasible paths more quickly than ANTNET does. We have also compared the average routing success ratio for the three proto-cols when they deal with the same number of routing requests. Three topologies are all involved and the results are presented in Fig. 7 . We can see that in small networks like CERNET2 and
NSFNET, our protocol X  X  performance is slightly better than PSO X  X  performance. However, in the large network CERNET, it outper-forms PSO significantly in terms of the average routing success ratio. In all cases, ANTNET shows the worst performance. Table 4 presents the data used for plotting Figs. 4 X 7 . 4.2. Protocol running time
The running time is also an important performance metric for routing protocols. We expect that the protocol can find the routing path as quickly as possible. In the experiments, for each successful routing request, we record the time that each protocol has spent on finding the routing path. We divide the running time into continuous intervals and count the number of routing requests which have fallen into each interval. The results over three different topologies are shown from Figs. 8 X 10 . For both protocols, most of the routing requests take no greater than 0.18 s to find the routing paths. Prominently, the multi-robot navigation based routing protocol finds all the paths within 0.12 s. In the network with smaller average node degree and smaller network size, the protocols can find the successful routing paths quicker.
Table 5 presents the data used for plotting Figs. 8 X 10 . 4.3. Utility analysis 4.3.1. The user utility
To help analyze the user utility, we also implement a Dijkstra based routing protocol. Over the three topologies, we run PSO based, multi-robot navigation based, and Dijkstra based routing protocols, and get the respective user utilities. The results are shown in Fig. 11 . We can see that both multi-robot navigation based protocol and PSO based protocol get higher average user utility than Dijkstra based routing protocol. The reason is two-fold. First, the Dijkstra algorithm only aims to find the shortest path. With more routing requests arriving, it is more severe that the paths cannot satisfy the QoS requirements. Second, the user
However, with the protocol running, the QoS of the shortest paths is changed dynamically and the network service provider will increase the basic bandwidth price. Thus, the user needs to pay more and thereby the user utility is reduced.
 multi-robot navigation based routing protocol sends out multiple path probing robots, it can find multiple paths to the same destination through one time routing request. Therefore, it can efficiently utilize the network resources and avoid the congestion of certain link or path. The path with high user utility can thus be found. When there are a small number of routing requests, clearly shorter paths have higher user utilities. For this case, the average user utility of the two swarm intelligence based routing protocols is lower than the Dijkstra based routing protocol. In addition, in
CERNET2 which has a small average node degree and NSFNET which has a small node number, the user utilities of all three protocols are higher than their user utilities in CERNET. 4.3.2. The network service provider utility Over the three topologies, we run the multi-robot navigation,
PSO, and Dijkstra based routing protocols to compare the network service provider utilities. The results are shown in Fig. 12 . We can see that the three protocols show similar performance although The Average User Utility the multi-robot navigation based routing protocol is slightly better than the other two. 4.3.3. The general utility
We are also interested in the average general utility which reflects both the user utility and the network service provider utility. The results are presented in Fig. 13 . We can see that over the three topologies, the multi-robot navigation based protocol has the best performance in terms of the average general utility. PSO is better than Dijkstra. Overall, the performance difference between different protocols is not significant. Table 6 presents the data used for plotting Figs. 11 X 13 . 4.4. Path quality 4.4.1. Path diversity
Intuitively, a protocol, which can find the paths with higher diversity, is more capable of avoiding the local optimal. Therefore, over the same network topology, the more the paths found by the protocol, the higher the probability that the optimal path can be found. We compare the average number of paths searched by each protocol over the three different topologies. The results are shown in Fig. 14 . For CERNET2, since its average node degree is low, the average number of paths which are found over it is also low compared to the numbers over the other two topologies. The
PSO based routing protocol and the multi-robot navigation based routing protocol have competitive performance. Table 7 presents the data used for plotting Fig. 14 . 4.4.2. Path fitness
The path fitness is specific metric proposed in this paper to evaluate the path quality. Here, the less the fitness, the better the path. When both the user utility and the network service provider utility have large values, it means that the double-win effect could be most possibly achieved and therefore the path fitness is good. The comparison results are shown in Fig. 15 . The multi-robot navigation based routing protocol produces the best path fitness and the Dijkstra based routing protocol produces the worst one. In CERNET and CERNET2, there is slight difference of path
The average network service The Average General Utility 0 0.5 1 1.5 2 2.5 3 3.5 4 Path Fitness Value fitness between different protocols. However, in NSFNET, due to its small number of nodes, more network resources are occupied for the same number of routing requests. The basic price of bandwidth is thereby increased. Thus, the user utility is increased while the network service provider utility is decreased. This explains why the path fitness in NSFNET is worse than the path fitness in the other two topologies. Table 8 presents the data used for plotting Fig. 15 . 4.4.3. Ratio of Pareto-optimal paths under Nash equilibrium calculate the ratio of Pareto-optimal paths under the Nash equilibrium to the total number of paths. The results are pre-sented in Fig. 16 . A Pareto-optimal path means that the user and the network service provider are both satisfied with its perfor-mance. The higher the ratio, the better the protocol. From Fig. 16 , we can see that the multi-robot navigation based routing protocol achieves the highest ratio among the three protocols. Since the
Dijkstra based routing protocol does not consider the QoS requirements, compared to the other two protocols, less paths found by it can achieve the double-win effect. Therefore, the
Dijkstra based routing protocol obtains the lowest ratio. Table 9 presents the data used for plotting Fig. 16 . 5. Conclusions intelligent routing protocols. In this paper, a SON model is first established based on the idea of bio-inspired networking. Then, the inaccurate QoS information is formulated by fuzzy mathe-matics methods. By applying the game theory, we design the utility function for both the user and the network service provider. A QoS routing protocol is proposed based on the multi-robot navigation algorithm. We expect the win X  X in effect for the searched paths by the routing protocol. Therefore, the protocol aims to find a QoS path which achieves the Pareto optimal utilities under Nash equilibrium for both the user and the network service provider. By simulation in NS2, the proposed protocol is evaluated in term of the routing success ratio, protocol running time, various types of utilities, and the path quality. The results show that the multi-robot navigation based routing protocol beats other swarm intelligence methods based and traditional shortest-path algorithm based protocols.
 Acknowlegment This work was supported by the National Natural Science
Foundation of China under Grant nos. 61070162, 71071028, and 70931001; the Specialized Research Fund for the Doctoral Pro-gram of Higher Education under Grant nos. 20100042110025 and 20110042110024; the Fundamental Research Funds for the Cen-tral Universities under Grant no. N110204003.
 References
