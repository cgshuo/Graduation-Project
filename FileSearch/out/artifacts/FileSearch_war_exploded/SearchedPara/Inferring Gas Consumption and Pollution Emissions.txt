 This paper instantly infers th e gas consumption and pollution emission of vehicles traveling on a city X  X  road network in a current time slot, using GPS trajectories from a sample of vehicles (e.g., taxicabs). The knowledge can be used to suggest cost-efficient driving routes as well as identifying road segments where gas has been wasted significantly. The instant estimation of the emissions from vehicles can enable pollution alerts and help diagnose the root cause of air pollution in the long run. In our method, we first compute the travel speed of each road segment using the GPS trajectories received recently. As many road segments are not traversed by trajectories (i.e., data sparsity), we propose a Travel Speed Estimation (TSE) model based on a context-aware matrix factorization approach. TSE leverages features learned from other data sources, e.g., map data and historical trajectories, to deal with the data sparsity problem. We then propose a Traffic Volume Inference (TVI) model to infer the number of vehicles passing each road segment per minute. TVI is an unsupervised Bayesian Network that incorporates multiple factors, such as travel speed, weather conditions and geographical features of a road. Given the travel speed and traffic volume of a road segment, gas consumption and emissions can be calculated based on existing environmental theories. We evaluate our method based on extensive experiments using GPS trajectories generated by over 32,000 taxis in Beijing over a period of two months. The results demonstrate the advantages of our method over baselines, validating the contribution of its components and finding interesting discoveries for the benefit of society. H.2.8 [Database Management]: Da tabase Applications -data mining, Spatial da tabases and GIS; Urban computing; traffic pollution; gas consumption; trajectories. While consuming a huge amount of ga s, vehicles traveling in cities also generate greenhouse gases (GHG), like CO 2 , and air pollution, e.g., PM2.5. Figuring out the answers to challenging questions of emissions, such as how much gas is consumed by vehicles in a given city or on a particular road, or what volume of PM2.5 is generated as a direct result, is strategically impor tant to modeling urban traffic, gas consumption, and pollution emission, in order to help save energy and protect the environment [19]. For instance, if we were to know the gas consumption for traveling any road segment at any time, we can suggest cost-efficient driving routes and identify road segments where gas is being wasted significantl y. Such knowledge can impact authorities X  decision making on im proving a city X  X  transportation infrastructure. In the meantime, real-time estimation of emissions from vehicles can enable pollution alerts. In the long run, this information can help diagnose the root cause of air pollution. For example, whether reducing traffic of vehicles will significantly lower air pollution is still a controversial subject in developing countries. There is no clear method to determine the percentage of PM2.5 in a given air space that is generated by vehicles. As shown in Figure 1, we instantly estimate the total gas consumption and the corresponding pollution emissi on of vehicles traveling on any road segment in a city at a part icular time slot, using the GPS trajectories of a sample of vehicles (e.g. taxicabs). Specifically, we first infer the average travel speed on each road segment, using sparse GPS data from a few vehicles. We then estimate the traffic volume (i.e., the number of vehi cles/minute) traversing a road segment based on the average travel speed and other factors, such as weather and type of roads. Finally, the travel speed and traffic volume of a road segment are used to calculate the total gas consumption and vehicle emissions on the road, allowing us to determine the pulse of traffic, energy consumption, and emission levels throughout a city. Our work faces three main challenges. 1) Data sparseness : We can only have a sample of traffic data , as many vehicles do not have a GPS sensor installed. Moreover, in a given time slot, only a small portion of road segments are traversed by GPS-equipped vehicles. For example, according to the statistic on Beijing X  X  taxi data, on average, only 13% of road segments are traversed by taxis in an hour. 2) From travel speeds to traffic volumes : The traffic volume on a road segment depends on multiple factors, such as the current travel speeds and density of vehicles, the length, shape, and capacity of the road, as well as weather conditions. Unfortunately, it is not easy to obtain enough training data to learn the mapping between traffic volumes and these factors. In addition, the occurrence of sampled vehicles on roads may be skewed from that of the entire set of vehicles. For example, observing more taxis on a road segment does not mean more occurrences of other vehicles. Consequently, we can neither use the sampled traffic as a training set to learn the aforementioned mapping, nor simply multiply a factor to the volume of sampled vehicles. 3) Real-time and citywide : To enable a valuable service, e.g., enabling ai r pollution alerts, it is better to have real-time information about traffic, gas consumption and emissions, with a city scale. Th is calls for a knowledge discovery ability that is both efficient (i.e., providing information on the entire city a few minutes after receiving the data) and effective (e.g., consider the traffic conditions not only on a road segment individually but also on a road network systematically). Given the aforementioned challenges, existing methods for estimating the traffic conditions on a single road do not work well. For instance, traffic detection solutions [5, 7, 13] using loop sensors on roads and surveillance cameras are difficult to scale up to cover an entire city. Some approaches, e.g., fundamental diagram [1, 3], need a lot of training data, or are not applicable to a complex road network [2]. Conventional models using floating car data to estimate traffic conditions do not t ackle the data sparsity problem well, which cannot be simply solved by interpolation [18] or just using historical patterns [2] either (refer to the related work section for details). Our research ma kes three main contributions:  X  We infer the travel speed of a road segment throughout a  X  We propose an unsupervised graphical model for traffic  X  We evaluate the effectiveness and efficiency of our method The rest of the paper is organized as follows. Section 2 overviews our method. We detail the methodol ogy in Section 3 and evaluate our approach in Section 4. After reviewing related work in Section 5, we conclude this paper in Section 6. Definition 1: Trajectory . A spatial trajectory  X  X  is a sequence of time-ordered spatial points,  X : X  X   X   X  X   X   X  X  X  X   X  , where each point has a geospatial coordinate set  X  and a timestamp  X  ,  X  X , X  X  X  X  X  . Definition 2: POI . A point of interest POI is a venue (like a school and shopping mall) in the physical world, having a name, address, coordinates, category, and other attributes. Definition 3: Road Network . A road network  X  X  is comprised of a set of road segments  X  X  X  X  connected among each other in a graph format. Each road segment  X  is a directed edge having two terminal points, a list of intermediate points describing the segment, a length  X  X  X . X  , a level  X  X  X . X  (e.g., a highway or a street), a direction  X  X  X . X  (e.g., one-way or bi-directional) and the number of lanes  X . X  . Figure 2 presents the framework of our method, which is comprised of five major components: trajectory mapping, context extraction, travel speed estimation, traffic volume inference, and energy &amp; emission calculations, which will be elaborated respectively in Section 3. We first map the GPS trajectories received in the current time slot onto a road network using a map-matching algorithm [6], and then calculate the travel speed on the road segments covered by trajectories. We also extract road features from map data, like Points of Interests (POI) and road networks, and traffic patterns from historical trajectories. The road features and traffic patterns are used as context to improve the accuracy of travel speed estimation, which computes the average travel speeds of road segments that are absent of trajectory data through a c ontext-aware matrix-factorization approach. The road features and inferred travel speed as well as other features (like weather co nditions) are then employed as observations in a graphical model to infer traffic volumes on a road segment. Finally, employing existing equations from environmental science, we calculate the gas consumption and emission on each road segment. The trajectory mapping component receives GPS trajectories from vehicles and projects each traject ory onto a road network using a map-matching algorithm [6]. This component also calculates the average travel speed for road segments currently covered by the trajectory data received. As shown in Figure 3, three vehicles travel four road segments  X   X  ,  X   X  ,  X   X  and  X   X  trajectories  X  X   X  ,  X  X   X  , and  X  X   X  . After map-matching, each point from a trajectory is mapped onto a road segment. Then, we can calculate the travel speed for each point based on Equation 1, where  X  X  X  X  is a function calculating the road network distance between two points. Likewise, we can calculate the travel speed for other points and then compute the average and variance of travel speed of a road segment as Equation 2 and 3. For instance, the average travel speed of  X   X  is  X  X   X   X  X  ensure the quality of the calculated average speed, we require a road segment to be traveled by vehicles for certain times (e.g., 3 times in the experiments). Otherwise, the road segment is considered absent of data and will later be inferred by our method. The average speed and variance formulate a road segment X  X  traffic conditions, which will be used in both travel speed estimation and traffic volume inference components. This component generates two categories of knowledge. One is a set of physical features extracted from POI and road network databases, describing the geographic contexts of a road segment. The other is the traffic patterns learned from historical trajectories, revealing the correlation between different time slots. Physical features of a road : As shown in Figure 3 A), the physical features of a road segment  X  further consist of three parts: 1) Road network features  X   X  :  X  X  X . X  ,  X  X  X . X  ,  X  X  X . X  ,  X . X  , the number of connections, and a tortuosity  X  , which is the ratio between  X  X  X . X  and the Euclidian distance between the two terminals of  X  . In this example,  X   X  has two connections on one terminal and three on the other;  X   X   X  X  X .  X   X   X  X  X .  X   X  . terminals (e.g., within a disc of 200 meters), we calculate the distribution of POIs across 10 categories: Schools , Companies &amp; Offices , Banks &amp; ATMs , Malls &amp; Shopping , Restaurants , Gas stations &amp; Vehicle services , Parking , Hotels , Residences , Transportation, and Entertainment &amp; Living Services . The 10 POI categories are mined from POI and road network datasets, co-occurring with road segments most frequently. For instance, the  X   X  of  X   X  is (0, 0, 1, 1, 0, 1, 0, 0, 2, 0). The feature is further normalized into a distribution. 3) Global position feature  X   X  : This feature basically indicates which part of the city a road segment falls in. For instance, if we partition a city into 4  X  4 grids, the  X   X  of a road segment located in  X  represented by the IDs of its eight neighbors, i.e., (1,1,1,0,1,0,1,0, 1,1,1,0,0,0,0,0), as illustrated in Figure 3 B). If two road segments are geographically close to each other, their  X   X  will be similar. each row denotes a road segment an d a column represents a kind of feature.  X   X  and  X   X  represent the local features of a road segment, while  X  captures a road segment X  X  global geo-position. The general idea is would have a more similar traffic condition. Traffic Patterns : While the physical features of a road segment are static, we also extract from historical trajectories two matrices  X   X  that respectively represent fine and coarse-grained traffic patterns changing over time of day. Specif ically, as shown in the bottom of Figure 3, a row of  X   X  denotes a time slot (e.g., 2pm-2:10pm), and a column stands for a road segment. Each entry in  X  period (e.g., 2 months). The similari ty between two rows reveals the correlation between two time slots. Likewise, matrix  X   X  grained traffic patterns in a city, where a row stands for a time slot and a column denotes a grid cell. For exam ple, as shown in Figure 3 B), we partition Beijing into 16 disjoint grids, each of which contains some road segments. Each entry of  X   X  is the average number of vehicles on the data over a long period of time. In contrast to  X  level but denser representation of traffic patterns. To model the traffic patterns more accurately, we can maintain  X   X  correspond to workdays and holidays, respectively. This component estimates the traffic condition (  X  X  ,  X  X  ) on each road segment, using recently received trajectory data and contexts (extracted in Section 3.2) in a framework of collaborative filtering. where  X  X  X  X   X   X ||  X  ,  X  X  X  X   X   X ||  X  , and  X  contains the physical features of roads. Specifically,  X  X   X  and  X  X   X  are matrices built based on the recent trajectory data received from  X   X  to  X  where  X   X  is the current time slot.  X   X  and  X   X  matrices built over a long period of time, corresponding to the same time slots from  X   X  to  X   X  . In the implementation, we build  X  of an entire day in advance and retrieve the entries from  X  constructing  X  and  X  (refer to the broken li ne box in the bottom of Figure 3). Given the above settings, the goal of estimating current traffic conditions on a road network can be converted into filling the missing values in row  X   X  of  X  X   X  with the help of  X  Basically, we can achieve this goal through solely factorizing  X  X  into the product of two low-rank matrices based on the non-zero entries of  X  X   X  . However, as we mentioned before,  X  X  few non-zero entries due to the data sparsity problem. So, the approximation of  X  X   X  by solely factorizing itself is not accurate enough. To tackle the data sparsity problem, we incorporate another two context matrices  X  and  X  , where  X  models the temporal correlations between different time slots and  X  models the geographical similarity between two different road segments. Intuitively,  X  X   X  and  X  X   X  represent current traffic conditions in a city, and  X   X  and  X   X  denote historical traffic patterns. Putting  X  X  together with  X   X  (and  X  X   X  together with  X   X   X  reveals the deviation of current traffic conditions from the corresponding traffic patterns. Additionally,  X   X  and  X   X  built over a long period of time are much denser than the recently received data. As a result, the formulation of  X  and  X  can help tackle the data sparsity problem. More specifically, we can decompose  X  ,  X  and  X  as follows: t t t where , X , X , X  and  X  are low-rank matrices representing the latent factors;  X  and  X  share latent factor  X  ;  X  and  X  share latent factor  X  . As  X  and  X  can be built from other data sources, e.g., historical trajectories and map data, they are much denser than  X  . Consequently,  X  and  X  can improve the accuracy of the approximation, if we factorize  X  ,  X  and  X  collaboratively. After the factorization, we can recover  X  through the production of  X  and  X   X ; X   X   X  . The objective function is defined as Equation 5.  X   X   X , X , X , X   X   X   X  where  X  X  X  denotes the Frobenius norm. The first three terms in the objective function (5) control the loss in matrix factorization, and the last term controls the regularization over the factorized matrices so as to prevent over fitting. In general, the objective function is not jointly closed-form solutions to minimize th e objective function. Therefore, we iteratively minimize the objective function according to the gradient descent algorithm shown in Figure 5. Specifically, we have the gradients (denoted as  X  ) for each variable: Intrinsically, there exists a certain relationship, e.g., fundamental diagram, among traffic speed, volume and density. Yet to quantify this relationship accurately requ ires a large amount of traffic volume data. As many road segm ents are not equipped with in-road devices, collecting such training data with a city-scale is very costly. Thus, it is impractical to use supervised learning algorithms to learn the relationship. In addition, the occurrence of the sampled vehicles (e.g., taxis) on a road segment may be quite different from the entire set of vehicles, though their travel speed could be similar. In other word s, observing more taxis on a road segment does not deduce more o ccurrences of other vehicles. Given this, we cannot infer the to tal volume of traffic directly based on the sampled traffic data. To address this issue, we propose an unsupervised graphi cal model, TVI, based on a partially observed Ba yesian Network. Figure 6 presents the graphical structure of TVI model, where a gray node denotes a hidden variable and white nodes are observations. Note that we can train only one TVI model using the data of all road segments. The mo del is then applied to infer the traffic volume for each road segment respectively. Specifically, the traffic volume on each road lane  X   X  (i.e., the number of vehicles per minute per lane) of a road segment is influenced by four major factors, consisting of the weather conditions  X  , time of day  X  , the type of road  X  , and the volume of observed sample vehicles  X  Furthermore, a road X  X   X  is co-determined by its road network features  X   X  (such as  X  X  X . X  ), global position feature  X  surrounding POIs  X  which is influenced by  X   X  and the total number of POIs  X   X  .  X  X  and  X  X  are the average travel speed and speed varriance, respectively, inferred by TSE model.  X  X  is determined by  X  ,  X   X  , and  X  .  X  X  is co-determined by  X   X  ,  X   X  , and  X  X  . Due to the hidden nodes, the conditional probability of  X  be drawn simply by counting the occurrence of each condition. Hence, we use the Expectation-Maximization (EM) algorithm to learn the parameters in an unsupervised manner, i.e., without knowing the value of traffic volume  X   X  , as shown in Figure 7. At the beginning part, this algorithm sets the parameters, i.e., the conditional probabilities, e.g.  X  X  X  X  X   X   X ,  X   X  and  X   X   X  X  |  X  with random values. In the E-st ep (Line 4-7), we call exact inference method, i.e., use the simple Bayesian rule, to compute the values of the hidden nodes  X , X , X  X   X   X  for each instance of the observed data. This is actually an inference process. In the M-step (Line 8-10), by scanning the inferred results from the E-step, the algorithm recalculates the condi tional probabilities, which will replace the old parameters. Keep iterating until the parameters converge, we learn a solution for the unknown parameters. All the variables in our model are discretized. This reduces the inference difficulty, while ensuring the inferred results are statistically useful for gas consum ption and emission calculation. Some nodes are discretized ba sed on commonsense knowledge. For example, speed  X  X  has 7 categories, i.e., [0,10), [10,20), [20,40), [40,60), [60,80), [80,12 0), [120, ~) km/h, corresponding to different traffic conditions like free flow and congestion. However, it is difficult to find a proper discretization for traffic volumes (on each lane)  X   X  , as we do not really have prior knowledge on how big  X   X  could be on different road segments. To address this problem, we record 358 video clips on 50 road segments at different times of day, and then manually counted the number of vehicles passing these road segments in a given time slot (i.e. the true traffic volume) (see Ta ble 3 for details) by replaying the video clips. A simple method is to discretize the traffic volume data uniformly according to the range identified from the collected observations. However, the observations are too limited to reveal the true upper bound of the possible volume on road segments. In addition, road segments of different levels may have very different upper bound of traffic volumes. So, we employ the observed true volumes to fit a curve that reveals the distribution of the traffic volumes on different levels of road segments. Then, the fitted distribution is used as a guidance for the discretization of  X  As shown in Figure 8, the black data points indicate the observed true volumes, which have been projected onto buckets with a width of 2, i.e., [0, 2), [2, 4), and so on. Significant difference can be observed among the three road levels because of the different road features, such as speed limits and number of lanes. For example, the volume of level 0-1 roads centers in the range of [10, 40), while most volume data of level 3 roads is smaller th an 10. To model th e traffic volumes on different roads more accurately, we fit a dedicated distributions for each level of road segment (level 0 and 1 share the same distribution as both of them denote highways in Beijing). We adopt normal distribution to fit the observed volume data. The parameters are shown in Figure 7, e.g.,  X  =21.6 and  X  =6.38 are good fits for level 0-1 roads (p-value &gt; 0.05 in a chi-square test). Figure 8. Fitting volume distribut ion for different road levels The observations on these road segments can fit the distribution of traffic volume w.r.t. a level of roads for two reasons. First, the selected road segments of a level have a diversity of features (such as length) and traffic volumes . Second, we evenly select the observations from each road segment and in different time slots (82, 163, and 54 observations for le vel 0-1, 2, and 3 respectively). Given the fitted distribution of a road level, we find a group of splitting points  X   X   X ,  X   X , X ,  X  that divide the traffic volume into five categories (  X   X  ,  X   X  ,...,  X   X  ), such that  X   X  X , X  ; X  X  X  where  X   X  X  X  and  X   X  are the left and right boundary of category  X  range respectively;  X   X   X 0 ,  X   X   X  X  X  X  . The five categories may stand for tiny, small, median, big, and very large traffic volumes. For a more accurate inference, we train three different models for road segments of level 0-1, level 2, and level 3 respectively, based on the data of the corresponding level. Given a road segment  X  , we select a model according to  X  X  X . X  and then infer its traffic volume  X . X   X  according to the E-step in Line 4-7 of Algorithm 2. The output of the inference is a probability distribution over the 5 discretized volume categories. We choose  X  X  X  X  X  X   X  X   X   X  and convert the category  X  to a real traffic volume according to the corresponding volume distribution  X   X   X , X  ; X   X  and the inferred probability  X  X  X   X   X  X  X  . Specifically, we find the value  X  range) such that  X   X   X   X   X  X   X   X   X   X   X   X , X  ; X   X  / X d  X  the left boundary of  X   X  X  range, and 0.2 is the total probability of category  X  . The total traffic volume on a road segment  X  equal s  X . X   X   X . X  X  . The information of traffic speed and volume can be further exploited for estimating real-tim e gas consumption and emissions on road surfaces. Different models are available in environmental science, which quantify the rela tionship between emissions and speed, as well as other factors, based on large amounts of data. The most frequently used models include MOBILE and COPERT, which have been developed by scientists in the USA and Europe respectively [11]. We use COPERT model [8] because vehicles in Beijing currently adopt European-3 standards [14]. In the COPERT model, traffic em issions consist of three parts, namely hot emissions, cold st art emissions, and evaporative emissions. Hot emissions occur when the engine is at its normal mode, which is the general condition for a running vehicle and thus is our major concern. Cold start emissions denote emissions from transient engine operation, and evaporative emissions come from refueling and temperature changes. The latter two parts are omitted in our estimation due to lack of data; they are also of less significance in overall emissions [2]. Hot emission factor ( EF ), the amount of pollutant a single vehicle emits per kilometer (g/km), is calculated as a function of travel speed  X  X m/h X   X  . The generic function is The parameters are given in Table 1 to calculate different kinds of emissions and gas consumption, which applies for Euro 3 passenger cars (gas consumption calculation additionally requires a vehicle capacity of 1.4-2.0L). Although diversity of vehicles will slightly influence the computation, the results are still statistically useful as we select the most representative cars in the calculation. As for other pollutants like CO 2 and PM2.5, their emission factors are proportional to fuel consumption ( FC ). For instance, the conversion factor of CO 2 is 3.18 for gasoline, i.e.,  X  X   X  X  2  X  X  X 3.18 X   X  X  ; for PM  X . X  the conversion factor is 3 X 10  X  X  . The overall emission on a certain road  X  is: As the model introduced in Section 3.5 has already been tested in environmental research, we focus on evaluating TSE and TVI. Road networks : We use the road network of Beijing, which is comprised of 148,110 nodes and 196,307 edges. The road network covers a 40  X  50km spatial range, with a total length (of road segments) of 21,895km. Road segments with level 0 and 1 are highways. The bigger the level number is, the smaller the road is. POIs : The datasets consist of 273,165 POIs of Beijing, which are classified into 195 tier two categor ies. We only choose the top 10 categories that are located nearby ro ad segments most frequently. GPS Trajectories : We use GPS trajectories generated by 33,000 Beijing taxis over a period of 47 days. The number of GPS points reaches 673,469,757, and the total length of the trajectories is over 26,218,407km. The average sampling rate is 96 seconds per point. After projecting the trajectories onto the road network, we come up with the statistics shown in Table 2.  X % covered/time slot X  denotes the proportion of road segments traveled by at least one taxi in a given time slot (we set 10 minutes a time slot in the following experiments). The last row of Table 2 presents the average number of traverses by taxis in a time slot. Figure 9 A) presents the proportion of road segments traveled by taxis at different times. Even during the peak hours, the proportion is only about 20% on workdays and 17.5% on holidays, respectively. In reality, the travel speed derived from only one taxi X  X  trajectory (i.e., sup=1) is not reliable. If counting the number of road segments traveled by three taxis (i.e., sup=3) in a time slot, the proportion decreases to 8% on workdays and 5% on holidays, respectively. Figure 9 B) further shows the proportion changing over the number of traverses. For example, over 90 percent of road segments are traversed by less than 5 taxis in a time slot. The data presented in Table 2 and Figure 9 reveals the sparsity problem we are facing. KNN : This baseline uses the average speed and traffic volume of the nearest 3 neighbors to repres ent a road segment X  X  values.
 Kriging is a spatial prediction method with the best linear unbiased estimator [17]. Given a few detected neighbor points  X   X  Kriging uses a weighted linear combination estimator to predict an unknown point  X   X  as follows:  X   X   X   X   X   X   X   X   X   X  of samples. Using a Kriging model with a linear kernel, we interpolate the travel speed of a ro ad segment (absent of taxis) based on its 5 nearest neighbors with data. Ground Truth : When evaluating TSE, we randomly remove 30% of the non-zero entries from  X  X   X   X  X  last row (i.e., the current time slot) and predict their values using different methods. The 30 percent non-zero entries are then used as a ground truth to measure the accuracy of the predicted values by RMSE (root mean square error), which is defined as where  X   X   X  is a prediction and  X   X  is the ground truth. The ground truth of TVI is collected as introduced in Section 3.4.3. We calculate the mean absolute error (MAE) of volume on each lane (i.e., number of vehicles per minute per lane) as and the mean relative error (MRE) as where  X . X   X  is the ground truth of traffic volume on road  X   X  X  each lane and  X . X   X   X  is the prediction;  X . X  is the number of lanes in  X  . We set 10 minutes as a time slot in our experiment. We partition a city into 4  X  4 grids and calculate th e global position feature  X  historical traffic pattern  X   X  (we try different numbers for a partition, finding that 4  X  4 is slightly better th an others). During the experiments, we also found that using 6 time slots (1hour) to formulate  X  X   X  and  X  X   X  results in a relatively higher accuracy. We tried a dynamic extension of our TVI model, and experiment shows that TVI runs much faster without significant accuracy loss. Therefore we keep using the static TVI model in our experiments. In Table 4, we compare the overall performance of TSE with the baseline method that only fact orizes current traffic data  X  X  denoted as MF (  X  X   X  ), or that combines geographic features  X  with  X  X   X  , denoted as MF (  X  X   X   X  X  ), or that combines the temporal correlation between different time slots of  X  X   X  with  X  and  X  X  denoted as MF (  X  X   X   X  X  X   X   X  X  ). As a result, TSE outperforms all the baselines in terms of RMSE of  X  X  and  X   X  . The historical traffic patterns that TSE incorporates are very helpful, bringing a significant decrease of RMSE (about 0.5) over MF (  X  X   X  ). In addition, TSE has very good efficiency, much more so than Kriging. By only using one server (with 4-core, 3.4GHz CPU and 8GB RAM), TSE can infer the travel speed of every single road segment in Beijing within 22 seconds. Figure 10 A) further explores the performance of TSE changing over time of day. As there are on ly a few taxis traveling on road surfaces after 10pm and before 8am (see Figure 9 for a proof), the corresponding estimation error is bi gger than other time slots. As time goes by, we observe more taxis in the road network (i.e., more road segments are covered by trajectories). Consequently, the RMSE decreases and reaches its best performance at 4pm. While the number of taxis is approaching to its peak at 4pm, the traffic conditions start stepping into congestions. If focusing on estimating the gas consumption and pollution in daytime, our model is more accurate than the results presented in Table 4. Figure 10 B) shows the RMSE of TSE changing over the (real) travel speed of a road segment to be estimated. Intuitively, a high speed indicates a good traffic condition, in which people have more variance of speeds (  X   X  ) on a road segment can be big and become relatively difficult to estimate. In addition, the number of road segments that allow a high travel speed is small, making it difficult for TSE model to fill in missing values. However, a highway (  X  90km/h) usually has the lowest driving speed constraint, or people have the concern in mind when traveling on it. This will reduce the flexibility of driving at different speeds, possibly leading to the drop of RMSE after 90km/h in Figure 10 B). We further explore the performance of TSE on different levels of road segments in Table 5. It is worth noting that TSE has a good performance on level 2 and 3 road segments, which covers 88.5% of Beijing X  X  road network. Thes e road segments do not usually have a loop sensor. So, it is important to have a method like TSE that can infer the travel speed on such road segments. Table 6 presents the overall performance of TVI. Using the test data presented in Table 3, we co mpare TVI with six baselines: we first study not using the variance of speed  X  X  ( TVI w/o  X  X  ) and weather conditions  X  ( TVI w/o  X  ) in our model, and then compare TVI with several existin g methods, e.g., linear regression ( LR ) and fundamental diagram ( FD ). Clearly, TVI has better performance beyond TVI w/o  X  X  and TVI w/o  X  . As traffic conditions depend on the weather condition, e.g., on rainy days the traffic speed is much slower and thus traffic volume is smaller, in formation on weather conditions does help improve inference accuracy. Besides, having  X  X  together with  X  X  , we can better reveal the traffic conditi ons on road segments, thereby inferring traffic volumes more accurately. According to the efficiency study, TVI is very efficient, inferring the traffic volume in Beijing X  X  road network in 0.84 seconds, (i.e., 7  X  X  each). We also compare TVI with two s upervised methods, consisting of linear regression ( LR ) and Fundamental Diagram ( FD ), which learn a curve simulating the relation between the traffic volume and travel speed on a particular road segment based on a large volume of training data. For LR , we use half of the data as a training set and another half for a test. W.r.t. FD , we select three road segments with enough labels, using half for training and half for testing. Our TVI model outperforms the supervised LR and has a slightly bigger error than FD. Note that TVI is an unsupervised model that can scale up to the entire road network. Designing an unsupervised method with an accuracy even better than a supervised approach is indeed a contribution. In addition, the performance of TVI is tested based on the whole dataset presented in Table 1, while FD is only tested on three roads and LR is on half roads. Tested on the same three road segments, TVI has a volume error of 2.73 which is even closer to that of FD . It should be noted that FD needs training for each individual road segment, some of which may have no volume data at all. To address this issue, we fi rst cluster road segments into a few groups in terms of their geographical features in matrix  X  . We train a FD model based on the data from some road segments in a cluster, and then apply the model to other road segments in the same cluster ( FD-SC ). The performance decreases very quickly. If applying the model trained from one cluster to another cluster, the volume error is even bigger. These results denote that FD is not scalable to an entire road network. Table 7 further explores the performance of TVI on different road levels and in different type of days. It turns out that TVI has a better performance on level 2 road segments which are absent of a loop sensor but with a large volume of traffic, and thus are our major concerns. Additionally, TVI has a better performance on weekdays than weekends, as some taxi drivers do not work on weekends, and traffic conditions on weekends are relatively irregular and complex compared to weekdays. Table 8 further presents the time that different components spend on processing the data of a time slot (i.e., 10 minutes), if we only use a single core of a single server. Note that we can map-match the trajectories of different drivers separately and infer the traffic volume on different road segmen ts independently. Using five cores of the server to perform the map-matching and TVI in parallel, we can infer the travel speed, traffic volume, energy consumption, and pollution emission throughout Beijing X  X  road network in 1 minute. Figure 11 visualizes the traffic volume, energy consumption, and pollution emission around Beijing Olympic Park on a weekday (2013/9/17 Tuesday), weekend (2013/9/21 Saturday), and public holiday (2013/10/2), respectively. As depicted in the first row, in time slot 8-9pm, the region has a bigger traffic volume during the weekday than during the weekend and holiday. This is aligned with our commonsense knowledge that people usually visit this region in the daytime (rather than in the evening) of weekends or a holiday. The large volume of traffic on a weekday is caused by people who drive home after work passing by this region. Given the same reason, in the second row of Figure 11, we observe more red road segments, which denotes more energy consumption, on the weekday than on the weekend and the national holiday. The latter two days generally have a similar energy consumption pattern except several road segments where the national holiday is slightly higher than the weekend. The former has relatively more sightseeing buses arriving at the park or more tourists taking taxis to this region in the evening (than the latter). On the contrary, in the time slot from 10 to 11am, we observe more energy consumption on the weekend and holiday, as many people drive to the park at these times fo r fun. On a workday, after morning rush hours (e.g., 8-10am), people barely drive to this place during working time. The emissions of PM  X . X  and CO  X  have the same pattern as the energy consumption, just having different factors the emission of  X  X   X  in the region, where the workday has more emission than the weekend and national holiday in 8-9pm. Figure 12 demonstrates the gas consumption and emission of  X  X  around Zhongguancun area, which is a place mixed with many companies and entertainments, in the aforementioned three days, respectively. In the time slot from 3pm to 4pm, the time before evening rush hours, this area has less gas consumption on the workday than during the weekend and holiday, because people are still working indoors. When time goes to weekends and holidays, many people travel to this region for the purpose of entertainment, e.g., go shopping and watch a movi e, leading to more energy consumption and emission of CO, as illustrated in the two rows of Figure 12. There is a movie theater, a supermarket, and two shopping centers located in the regi on marked by the broken curve. Figures 13, 14 and 15 show the citywide traffic volume, gas consumption, and  X  X   X  emission on three types of days: weekdays, weekends, and public holidays. The number plotted in the three figures are averaged by day, respectively. Figure 13 presents the average traffic volume on a road segment in one minute, which depends on the travel speed on the road segment and the density of the traffic. Before 7am, a workday has a larger volume of traffic than a weekend or a holiday. At th is moment, the travel speed is very fast during the three types of days, while more people travel (to work) on a weekday than a holiday. When time goes to 8-10am (i.e., Beijing X  X  morning rush hours on workdays), however, the travel speed decreases signifi cantly on a weekday, reducing the traffic volume that can pass a ro ad segment. The weekend and holiday have a similar decreasing trend, but do not drop tremendously, because the travel speed is not that slow from 8am to 10am. After morning rush hours, the travel speed increases, leading to an increase of the traffic vol ume. Then, we see the decreasing pattern repeats in evening rush hours, 5-7pm, during a weekday. After evening rush hours, the traffic volume increases again with the increase of the travel speed on a weekday, until at later night when the traffic density decreases tremendously (we do not show the traffic volume after 11pm in these figures as they are very small and quite similar to each other). The public holiday has a bigger traffic flow than the other two days, as a portion of people leave Beijing for vacation, which reduces the traffic density slightly but enhances the travel speeds on roads significantly. Figure 14 shows the total energy consumption of the entire road network per hour changing over time of day. For instance, from 12pm to 1pm, about 3,850,000 liters of gasoline are consumed by vehicles in Beijing. Supposing there are 2 mil lion vehicles traveling on the road network in this time slot, each vehicle consumes 1.9 liter gasoline per hour, which is about 19 kilometers per hour. A peak occurs in this time slot due to th e bigger traffic volume and travel speed. The reason a public holiday consumes more energy may lie in the fast travel speed and a farther distance that people would travel during holidays. Figure 15 presents the total emission of  X  X   X  in Beijing X  X  road network, where weekends have the largest volume in the afternoon. Beijing is running a traffic control policy based on the license ID of a car on workdays. As this policy does not apply to weekends and holidays, the number of people who travel by car is even bigger on a weekend. On public holidays, many people leave the city for vacation, therefore the emissions are not heavy. Combining Figure 14 and 15, we find that public holidays have more gas consumption but less emission than weekdays and weekends, i.e., the energy has been used in a cleaner way. Figure 16 visualizes the mean traffic volume (i.e., the average number of vehicles per minute) traversing every road segment in Beijing from 6am to 10pm on workdays. The road segments with relatively large volumes of traffic (marked red) are mainly located in the south (e.g., the southern se gments of the fifth ring road) and some highways spreading towards rural areas. As the major business and entertainment areas are located in the northern and central part of Beijing, the average travel speed in these places are generally slower than the southe rn part. The slow speed reduces the traffic volume on corresponding road segments. The traffic volume on the northern segment of the fourth ring road is relatively larger than other road segments in the north part, which well matches our commonsense knowledge. Figure 17 presents the average energy consumption of vehicles on each road segment per hour, from 6am-10pm. As the total energy consumption depends on both travel speed and traffic volume, some road segments marked red in Figure 16 become green in Figure 17. Given this kind of visualization, urban planners and transportation authorities can identify the road segments that have wasted unnecessary energy (e.g., a road segment with small traffic volume while having a large energy consumption), therefore informing future urban planning. Figure 18 displays the total  X  X  emission on road segments per hour in the same time slot, where the ring roads and highways have more emissions. When the emission on some road segments exceeds a threshold, we can send alerts to people passing by or living around. The information can also guide drivers for finding the best route in terms of the energy consumption, air quality, and travel time. Traffic modeling on individual roads : Conventional methods use traffic monitoring cameras (usually combined with a speedometer) to observe speed and volume data where relevant instrumentation is installed. This kind of approach usually employs a Fundamental Diagram [1, 3] to learn a specific relation among travel speed, traffic density, and volume for a particular road, from a large amount of data collected by the camera and speedometer. As the number of vehicles traversing a road may not be perfectly detected by using automatic computer vision algorithms, in most cases, human effort is needed to count the vehicles so as to generate training data for the fundamental diagram. Consequently, this kind of methods is difficult to scale up to an entire city, let alone the limited coverage of traffic monitoring camera and speedometers. Later, in-road loop sensors are widely deployed to detect both travel speed and traffic volume. The rich data enables sophisticated modeling to simulate traffic status between the instrument [7, 13], or predict future traffic status [5], for a specific road where the device is installed. Unfortunately, the majority of these models do not incorporate the correlation between the traffic conditions of different road segments (especially those that are geospatially disconnected), when estimating the traffic on a road segment. Some methods [5] model several connecte d road segments simultaneously with a Markov Model. However, applying these methods to the entire road network will result in a huge model that has very poor efficiency and big issues with training parameters. Additionally, the coverage of loop-sensor systems is also limited due to the high expense for device installation and maintenance. Traffic modeling on a road network : Recently, more traffic modeling systems have turned to using Floating Car Data [10, 15], which is generated by vehicles traveling around a city with a GPS sensor. The trajectories of these ve hicles will be sent to a central system and matched onto the road network for deriving speed on road segments. However, due to the uneven distribution of the probing vehicles as well as the low sampling rate of GPS data (e.g., one point per minute), many road segments are not covered by any trajectory [17]. To address this problem, some interpolation-based methods, such as KNN and Kriging [18], have been proposed to infer the traffic conditions of a road segment based on the values of its spatial neighbors. More adva nced methods model the traffic conditions on a road network with a road-time matrix, where each entry stands for the traffic conditions at a specific road segment and in a particular time slot. These methods then adopt Compressive Sensing-based algorithms [16, 17] to fill in the missing entries in the matrix. The interpolation-based methods consider the spatial correlation among different locati ons X  traffic conditions, and the compressive sensing-based appro ach considers both spatial and temporal correlations. Unlike these methods, our model incorporates two additional (but very helpful) correlations from extra data sources. One is the corr elation between road segments in terms of their geographic features, such as the length, POI distributions, and number of connections, learned from road network and POI datasets. The geogr aphic features capture the local and global similarity between two road segments simultaneously. The other is the correlation between the current and historical traffic conditions, learned from historical trajectories over a period of time. Extensive experiments validate the contribution of these correlations beyond the original co rrelation solely learned from the road-time matrix. Vehicular fuel consumption and pollutant emission is a critical environmental issue nowadays. [9 ] studies the empirical relation between traffic emissions and travel speed as well as the acceleration for a single vehicle. [2] exploited a framework similar to ours to estimate macroscopic pollutant emissions. The main concern with this method is the use of the historical average to deal with the aforementi oned data sparsity problem. Consequently, irregular conditions (e.g., congestions caused by accidents) are not well captured. In addition, it applies a homogeneous FD to different roads in the same cluster, which has been compared with our method as a baseline ( FD-SC ). There also exist crowdsensing-based approaches [4, 12] that sense environmental data using people or vehicles carrying air quality sensors. These methods cannot bypa ss the data sparsity problem either when scaling up to a citywi de application, as the number of sensors is even smaller than the number of GPS-equipped vehicles. These approaches also do not an swer the questions, such as how much pollutant is generated from traffic. In this paper, we instantly infer the traffic volume, energy consumption, and the emissions of vehicles traveling on a city X  X  road networks, based on the GPS trajectories received from a sample of vehicles, e.g., GPS-e quipped taxicabs, in current time slot and over a period of histor y. The knowledge derived from our research can enable many valuable applications for social good, such as timely road-level pollution alerts, monitoring citywide traffic conditions, improving urban planning, and helping study the root cause of air pollution. This is a very ch allenging problem, however, considering its efficiency, effectiveness, and scalability. We address this problem through a three step approach, where we first propose TSE model to compute the travel speed on each road segment based on incomplete trajectory data, then infer the volume of a road segment by using TVI model, and finally calculate the energy consumpti on and pollution emission based on the inferred travel speed and traffic volume. We evaluate our approach based on extensive experiments that use GPS trajectories generated by over 32 ,000 taxicabs over a period of two months. The results demonstrate the effectiveness, efficiency and scalability of our method, which outperforms baseline approaches, such as Linear Re gression, Fundame ntal Diagram, and Kriging. Using five cores of a server, we can grasp the traffic conditions, energy consumption, and emissions of the past 10 minutes throughout Beijing X  X  road network within 1 minute. [1] Greenshields, B. D., Bibbins, J. R. , Channing, W. S., and Miller, H. [2] G X hnemann, A., Sch X fer, R. P., Thiessenhusen, K. U., and Wagner, [3] Helbing, D. 2001. Traffic and re lated self-driven many-particle [4] Honicky, R., Brewer, E. A., Paulos, E., and White, R. 2008. N-[5] Kwon, J., and Murphy, K. 2000. Modeling freeway traffic with [6] Lou, Y., Zhang, C., Zheng, Y., Xie, X., Wang, W., and Huang, Y. [7] Mu X oz, L., Sun, X., Horowitz, R. , and Alvarez, L. 2003. Traffic [8] Ntziachristos, L., Samaras, Z., Eggl eston, S., Gorissen, N., Hassel, [9] Panis, L.I., Broekx, S., and Liu, R. 2006. Modelling instantaneous [10] Sch X fer, R. P., Thiessenhusen, K. U., and Wagner, P. 2002. A traffic [11] Smit, R., Ntziachristos, L., and Bou lter, P. 2010. Validation of road [12] Steed, A., Spinello, S., Croxford, B., and Greenhalgh, C. 2003. E-[13] Wilkie, D., Sewall, J., and Lin, M. 2013. Flow reconstruction for [14] Xie S., Song X., and Shen X. 2006. Calculating Vehicular Emission [15] Yuan, J., Zheng, Y., Zhang, C., Xie, W., Xie, X., Sun, G., and [16] Zhang, Y., Roughan, M., Willinger, W., and Qiu, L. 2009. Spatio-[17] Zhu, Y., Li, Z., Zhu, H., Li, M., and Zhang, Q. 2013. A compressive [18] Zou, H. X., Yue, Y., Li, Q. Q., and Yeh, A. G. O. 2011. Traffic data [19] Zheng, Y., Capra, Li, Wolfson, O., Yang, H. 2014. Urban [20] Data released: http://research.microsoft.com/apps/pubs/?id=217455
