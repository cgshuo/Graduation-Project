 This paper is concerned with the problem of name disambiguation. By name disambiguati on, we mean distinguishing persons with the same name. It is a critical problem in many knowledge man-agement applications. Despite much research work has been con-ducted, the problem is still not resolved and becomes even more serious, in particular with the popularity of Web 2.0. Previously, name disambiguation wa s often undertaken in either a supervised or unsupervised fashion. This pape r first gives a constraint-based probabilistic model for semi-supe rvised name disambiguation. Specifically, we focus on investigating the problem in an aca-demic researcher social netw ork (http://arnetminer.org). The framework combines constraints and Euclidean distance learning, and allows the user to refine the disambiguation results. Experi-mental results on the researcher social network show that the pro-posed framework significantly outperforms the baseline method using unsupervised hierarchi cal clustering algorithm. H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval, Digital Libraries, I.2.6 [ Artificial Intelligence ]: Learning, H.2.8 [ Database Management ]: Database Applications. Keywords: Name Disambigua tion, Social Network Analysis, Digital Library, Semi-supervised Clustering The name disambiguation problem can be formalized as partition-ing collections of citations into clusters, with each cluster contain-ing only citations authored by th e same author, thus disambiguat-ing authorship in citations to induce author name identities [7]. Name disambiguation is a very critical problem in many knowl-edge management applications, su ch as Digital Libraries (like Citeseer and DBLP bibliographi y) and Semantic Web applica-tions (like semantic integrati on and ontology merging). Many knowledge management applications need take name disambigua-expert profiling, and information integration. In this paper, we focus on inve stigating the name disambiguation problem in an academic researcher social network, ArnetMiner (http://arnetminer.org) [10]. Specifically, we aim at assigning papers to the right researchers w ith the same name. We have ex-amined 30 random person names from ArnetMiner and found that more than 60% of the names have the ambiguity problem. Traditionally, name disambiguati on was often undertaken in ei-ther a supervised or unsupervised fa shion. In this paper, we intend to propose a general semi-supervised framework to combine the advantages of the supervised and unsupervised methods. Specifi-cally, our contributions are as follows: z We formalize the name disa mbiguation problem in a con-z We define six types of constrai nts and formalize them in the z We conducted empirical verifica tion of the effectiveness of The rest of the paper is organized as follows. In Section 2, we review related work. In Section 3, we formalize the disambigua-tion problem. In Section 4, we explain our approach to the prob-lem and in Section 5, we give the experimental results. We con-clude the paper in Section 6. A number of approaches have been proposed to name disam-biguation in different applications. For example, [3] tries to distingui sh web pages to different indi-viduals with the same name. They present two unsupervised frameworks for solving this probl em: one is based on link struc-ture of the Web pages and the other uses Agglomera-tive/Conglomerative Double Cluste ring method. In [8], name disambiguation is conducted on ema il data, and the authors use a lazy graph walk method based on the links among emails. There are also many works focusing on name disambiguation in publication data. For example, Ha n et al. propose an unsupervised learning approach using K-way spectral clustering method [7]. They calculate a Gram matrix for each person name and apply K way spectral clustering algorithm to the Gram matrix to get the result. In [4], the authors solve the problem by constructing a reference graph, and two different measures of relational similar-ity are experimented. See also [1 , 9]. These unsupervised methods use a parameter-fixed distance metric in their clustering algorithm, while parameters of our distance metric can be learned during the disambiguation process. Two supervised methods are proposed in [6] based on Na X ve Bayes and Support Vector Machin es. The methods learn a spe-cific model for each author name from the train data and use the model to predict whom a new cita tion is authored by. However, the method is user-dependent. It is impractical to train thousands of models for all person names in a large digital library. The other type of related work is semi-supervised clustering, e.g. [2] and [5]. [2] proposes a probab ilistic model for semi-supervised clustering based on Hidden Mar kov Random Fields. Their model combines the constraints and distance measures. Compared with [2], we define six kinds of c onstraints and our method generates the constraints automatically. We here give a formal defin ition of the name disambiguation problem. Given a person name a , we denote publications contain-ing the author name a as P ={ p 1 , p 2 , ..., p has six attributes as shown in Table 1. Here, each name a affiliation a i ( j ) .affiliation and an email a i ( j ) author name a i ( 0 ) , which is actually a , as the principal author and these n publications to their real researcher y i . Next, we define a set of constraint functions C ={ c The constraint function is a Boolean-valued function and is de-fined as follow: We extracted the attribute values of each paper from several digi-tal libraries, e.g., IEEE, Springer, and ACM by using heuristics. Our method is based on a unified probabilistic model using Hid-den Markov Random Fields (HMRF) . This model incorporates constraints and a parameterized-distance measure. The disam-biguation problem is cast as assigning a tag to each paper with each tag representing an actual researcher y i . Specifically, we define the a-posteriori probability as the objec-tive function. We aims at findi ng the maximum of the objective function. Six types of constraints are incorporated into the objec-tive function, where constraints are considered as a form of su-pervision. If one paper X  X  label a ssignment violates a constraint, it will be penalized in some sense, which in turn affects the result. A HMRF based semi-supervised framework is first introduced by [2]. Based on HMRF, the conditional distribution of the re-searcher labels y given the observation x (paper) has max ( | ) min { ( , ) ( ) [ ( , )]} where l i is the tag for x i , ( , ) x and researcher D ( x i , x j ) is the distance between paper x i for c k , and Z is the normalization factor. The key issue here is how effectively performing the disambiguation task. We define six types of constrai nts based on the characteristic of publication dataset as listed in Table 2. All these constraints are de fined between two papers p Constraint c 1 means the principal authors of two papers are from the same organization. Constraint c 2 means two papers have a secondary author with the same name, and constraint c paper cites another paper. Constraint c 4 means the principal au-thors of two publications have th e same email address (this is a strong constraint). Constraint c 5 denotes the user feedback. We use an example to explain constraint c 6 . Suppose p  X  X avid Mitchell X  and  X  X ndrew Mark X , and p j has authors  X  X avid Mitchell X  and  X  X ernando Mulford X . If  X  X ndrew Mark X  and  X  X ernando Mulford X  also coauthor one publication, then we say p i and p 2-CoAuthor constraint. We construct a matrix M (cf. Figure 1) to test whether two papers have a  X  -CoAuthor constraint. a Note that a 1 , a 2 ,..., a p does not include a identity matrix. In sub matrix M pa , an element on row p matrix M ap is symmetric to M pa . Sub matrix M authorship among a 1 , a 2 ,..., a p . The element on row x x is equal to 1 if and only if a i and a j coauthor one publication in our database (not just limited to p 1 , p 2 ,..., p n ), otherwise 0. By multiplying M by itself, i.e. M (1) = M  X  M , the element on row p and column p j becomes 1 if they have at least one common sec-ondary author. Thus, M shows 1-CoAuthor constraints between between papers. Likewise for the k -CoAuthor constraints. If p and p j have both  X  1 -CoAuthor and  X  2 -CoAuthor (  X  we only consider the  X  1 -CoAuthor constraint. Next, we set the weight for each type of constraint empirically. For example, we assign c 2 constraint Co-Author a relatively high weight and assign w 6 as the  X  power of w 2 , i.e. w can be regarded as unique identif iers for people, so we assign w the largest weight. The larger the weight, the greater the impact of that constraint is. In our experiment, we set w 1 0.6, 1.0, 0.9, 0.7  X  respectively. Three tasks are executed by the Expectation Maximization (EM) method: learning parameters of the distance measure, re-assignment of paper to researcher s, and update of researcher rep-resentatives y k . We define our distance function D ( x i , x j ) as follows: here A is a parameter matrix. For simplification, we define it as a diagonal matrix. The EM process can be summarized as follows: in the E-step, given the current researcher repr esentatives (the set of assigned papers), every paper is re-assigne d to the researcher by maximiz-ing p ( Y | X ). In the M-step, the researcher representative y estimated from the assignments to maximize p ( Y | X ) again, and the distance measure is updated to in crease the objective function. For initialization of our EM framework, we first cluster publica-if two publications have a constrai nt, then they are assigned to the the actual researcher number k , then these  X  groups are used as random perturbations of the global centroid. If  X  &gt;k , we cluster the nearest group until there are only k groups left. In the E-step, assignments of data points to researchers are up-quentially update the assignment of each paper. The algorithm performs assignments in random or der for all papers. Each paper x is assigned to y h that minimizes the function: The assignment of a paper is performed while keeping assign-ments of the other papers fixed. The assignment process is re-peated after all papers are assigned. This process runs until no paper changes its assignment be tween two successive iterations. In the M-step, each researcher representative is updated by the arithmetic mean of its points: Then, each parameter a mm in A is updated by (only parameters on 
Dx x x x  X   X  To evaluate our proposed methods, we created two datasets: Ab-breviated Name dataset and Real Name dataset. The first dataset was collected by querying 10 abbr eviated names in our database. All the abbreviated names are created by simplifying the original names to its first name initial and last name, for example,  X  X heng Chang X  to  X  X . Chang X . The simplification form is popular in bib-liographic records. Statistics of th is dataset is shown in Table 3. Another dataset is constructe d by querying two person names  X  X ing Zhang X  and  X  X i Li X . The purpos e of constructing this dataset Zhang X  has 54 publications by 25 different researchers and  X  X i Li X  has 42 publications by 22 different researchers. We designed two expe riments to evaluate our proposed name disambiguation method. The first experiment tests the eff ectiveness of our method with all kinds of constraints included. The experiment was conducted on the Abbreviate Name dataset. We defined a baseline method based on the previous work. The baseline method uses a hierar-chical clustering algorithm to group the papers into clusters. Then we view the grouped papers as the disambiguation results. In the clustering, we used words as feat ures and employed Cosine Simi-larity Measure to calculate the si milarity between two papers. We also suppose that th e number of persons k is provided empirically. To test how constraints of diffe rent types affect the performance of disambiguation, we also conduc ted experiments using different combination of the constraints and compared the results. This experiment was conducted on the Real Name dataset. In the experiments, we conducted evaluations in terms of pair-wise_precision, pairwise_recall, a nd pairwise_F1-measure [2]. The performances of both our method and the baseline methods on the Abbreviation Name dataset are shown in Table 4. The proposed method outperforms the baseline method by 8.0% in terms of pairwise_F1-measure. We investigated the contribution of each type of constraints in name disambiguation. Figure 2 s hows the F1 scores of  X  X ing Zhang X  and  X  X i Li X  in the Real Name dataset with various com-binations of constraints. We can see that the CoAuthor constraint contributes a lot to the overall results . It can be also seen that all the constraints we defined can enhance the final performance. In this paper, we have investig ated the problem of name disam-biguation in social networks. We have proposed a constrain-based probabilistic framework to the problem. The framework can in-corporate any kinds of domain background knowledge, as well as user interactions to improve th e disambiguation results. We have defined six types of constraints for disambiguating researchers in a real-world social network. We have employed EM algorithm to learn the parameters of the distance measure. Experimental results show that the proposed model significantly outperforms the unsu-pervised method using hierarchical clustering algorithm. As future work, we plan to inves tigate how to estimate the actual researchers number k for a given name automatically, which will greatly enhance the practice of the proposed approach. The work is supported by the National Natural Science Founda-tion of China under Grant No. 90604025. [1] Aswani, N., Bontcheva, K., and Cunningham, H. Mining [2] Basu, S., Bilenko, M., and M ooney, R. J. A probabilistic [3] Bekkerman, R. and McCallum, A. Disambiguating web ap-[4] Bhattacharya, I. and Getoor, L. Entity resolution in graphs. [5] Cohn, D., Caruana, R., and Mc Callum, A. Semi-supervised [6] Han, H., Giles, L., Zha, H., Li, C., and Tsioutsiouliklis, K. [7] Han, H., Zha, H., and Giles, C. L. Name disambiguation in [8] Minkov, E., Cohen, W. W., and Ng, A. Y. Contextual search [9] Tan, Y. F., Kan, M., and Lee, D. Search engine driven author [10] Tang, J., Hong, M., Zhang, J., Liang, B., Yao, L., and Li, J. 
