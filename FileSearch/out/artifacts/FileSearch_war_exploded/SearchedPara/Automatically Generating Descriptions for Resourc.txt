 We have been witnessing an increasing number of social tagging systems on the web. Tags help users understand a resource readily and accurately. In a social tagging sys-tem, however, there are typically a fairly large number of resources each associated with a long list of tags. When browsing resources, users are reluctant to read these tags one by one. Instead, users prefer a shorter list of tags as a compact description of a resource. Such a tag description facilitates users to understand the resource accurately and effortlessly. This calls for a generator for a tag description, which selects a set of high-quality tags for a given resource. The tag description condenses the original tag list by retain-ing the most important tags of the long list.

We propose that a good generator should go beyond pure tag popularity and towards diversifying a tag description. In this paper, we present a general framework of selecting a set of k tags as the description for a given resource. In addition, a generative model BTM is proposed to model users X  tagging process. The experimental results on real-world tagging data confirm the effectiveness of the proposed approach in social tagging systems, showing significant improvement over the other baselines.
 H.4 [ Information Systems Applications ]: Miscellaneous; H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval tag generation; tagging system; generative model
Advances in web technology and cloud services have led to a flourish of social tagging systems, such as Flickr , De-licious , Bibsonomy , Last.fm and YouTube . These systems provide platforms on which various resources, such as pho-tos, music, videos and webpages, are shared. One of the distinctive characteristics of these social tagging systems is that resources are tagged by communities of users. Tagging is a process by which users assign a few keywords to re-sources. Through manually-assigned tags, users can express their distinct interests on the various aspects or topics of the resources. For example, a photo could be tagged with words that describe the subjects, people and places in the photo; the artistic elements of the photo; or the historical background of the photo.

Since tagging does not require any prior knowledge of tax-onomy or specific skills for participating, an increasing num-ber of users have been taking part in social tagging systems and have contributed a great amount of content. For ex-ample, Flickr had more than 32 million users as of May 2009 1 and hosted over 4 billion photos as of October 2009 Last.fm claimed 30 million users and more than 7 million tracks cataloged as of March 2009 3 .

The strength of social tagging is multifold: First, tagging bridges the gap between search and browsing. On one hand, it allows users to find resources from a social tagging system by tags. On the other hand, tags ease users X  burden when they browse resources in that tags help users understand a resource readily and accurately. For instance, consider a video associated with a few tags in Youtube , which is an online video service. By browsing through the tag list of the video, one is able to identify general topic of this video before he or she actually watches it. As another example, in Delicious , an online social bookmarking system, tags serve as a complement to the title of a webpage to describe the bookmark from various perspectives. The descriptive tags enable users to understand the content of the webpage even without bothering clicking on its link. Another advantage of tagging lies in resource categorization and organization. Free-from tagging relieves the burden of fitting resources into a universal and predefined categories.

However, the benefits of social tagging do not come with-out a cost. In particular, a social tagging system typically has a fairly large number of resources each associated with a long list of tags. When browsing resources, users are re-luctant to read these tags one by one. For example, Figure 1 shows a sample photo taken from Flickr which is a popu-lar website for users to share pictures. It is observed that a http://www.flickr.com/help/forum/en-us/97258/ http://blog.flickr.net/en/2009/10/12/4000000000/ http://blog.last.fm/2009/03/24/lastfm-radio-announcement
Figure 1: A photo with its tags taken from Flickr photo can be associated with a large number of distinct tags. We also note that the order of the tags reflects the input se-quence and carries little information about their quality and relevance. The list of disorder and chaotic tags can result in a disaster, leaving the users muddled in a  X  X odgepodge X  [1]. It is difficult for users to digest a long list of tags. To address this problem, we propose to automatically generate a description, which consists of a set of a certain number of high-quality tags, as a compact representation for each re-source. This set of high-quality tags (referred to as keytags ) condenses the original list of tags by retaining the most im-portant tags of the long list, so that a user, who has already read through the tag description, does not need to go over the full list.

Generating tag descriptions can be also used for the appli-cation where only a limited number of tags can be displayed for each resource due to space limit, such as an applica-tion running on a mobile device, and a webpage which lists resources side by side. Most of the existing social tagging systems select the keytags to display purely based on the the number of times they are assigned to the resource. That is, they simply display the tags that are frequently assigned to the resource. We observe that this is not always the best approach because the selected keytags are often monotonic, all coming from the same topic . In other words, these tags cover the same aspect of a resource, such as tags car and automobile both describing a resource (e.g., a photo) from the car aspect, and thus anyone of them is considered redun-dant in limited space given the other. Consider bookmark http://www.youtube.com in the Delicious bookmarking sys-tem as an example. Users certainly do not want tags movie and film , which both cover the topic of movie of Youtube and have the same implication, to be simultaneously dis-played as a description of this bookmark, because having read tag movie the users do not acquire any more infor-mation about Youtube from reading tag film . On the other hand, users would be satisfied with the description with tags movie and social , since it covers the social topic of Youtube in addition to the movie topic. Therefore, we propose that a good generator for tag descriptions should go beyond pure tag popularity and towards providing a redundancy-free tag description by diversification.

Moreover, generating tag descriptions applies to resource categorization. Ideally, resources belonging to the same topic are supposed to categorized as one class. However, redundant tags can seriously impair the quality of catego-rization. Resources with different but synonymous tags are likely to be classified as multiple different classes. For ex-ample, a photo tagged with car and another photo tagged with automobile are considered completely unrelated to each other, and thus categorized into different groups. To allevi-ate this misclassification problem, a generator for redundancy-free tag descriptions for resources is needed.

Another application of generating tag descriptions is se-lecting a list of keytags to recommend to the user who is going to annotate the resource. In a social tagging system, each resource are supposed to receive sufficient tagging op-erations in order for effective retrieval and organization. De-spite no specific skills required for tagging, it is a burden for users to come up with a set of tags for each posted resource. To encourage tagging, the operations should be easy and ef-fortless. Automatic tag recommendation has attracted much research interest lately. The objective of a tag recommender is to suggest tags that are likely to be chosen by a user, which eases his or her burden of tagging. Almost all current social tagging systems simply recommend the most popular tags of a resource for users to pick. Due to the nature of folksonomy , these recommended tags are often nothing but the synonyms, cognates or abbreviations, which cover the same aspect of the resource. However, to facilitate resource retrieval, a social tagging system should make the tags with the same implication consistent. Bookmark Youtube with tag video cannot be retrieved if one searches for videos . As a result, to alleviate the tag synonymy problem, a tag rec-ommender takes on the responsibility of recommending a set of tags, each of which is a representative of each topic of the resource. A generator of diversified tag descriptions comes into play to select a set of tags that covers a variety of topics exhibited by the given resource for recommendation.

In this paper, we present a principal framework of gen-erating a description consisting of a set of k keytags for a given resource. The tag description has two properties: (1) relevant to the resource, (2) high coverage of the topics ex-hibited by the resource. This poses two challenges: 1. Generating tag descriptions can be formulated as an 2. Since topics are implicitly exhibited by resources and We address the first challenge by proposing a probabilistic approach. This approach takes relevance and diversity into account, and select a set of relevant tags which cover a va-riety of topics for a resource. To extract the latent topics, we propose the Bi-Tag Model (BTM), which is a generative model for the probabilistic approach.

The generative model simulates users X  tagging process in a social tagging system. As discussed, there are generally a multitude of topics for a given resource. When tagging a re-source, a user first identifies topics of his or her interest from the resource. For example, the user may be interested in the social characteristic of Youtube rather than its video-hosting feature. The user then expresses the chosen topics via a set of words (tags). Each topic accordingly corresponds to a probability distribution over tags, which gives the probabil-ity of picking out a tag with respect to a certain topic. In the Youtube example, we have  X  X ocial/community/web2.0 X  being an topic, and the word, say, social being a tag to express this topic. The proposed BTM statistically models this two-stage tagging process and extract topics from social tagging data. Table 1: Sample records taken from a social book-marking system
User ID Tag Resource
We run experiments on real-world tagging data highlight-ing the effectiveness of the proposed framework. The exper-imental results show that BTM outperforms all the other baselines in generating a tag description for a given resource. It is worth noting that our framework is applicable for any nature of social tagging systems (e.g. photos, videos and bookmarks), since it does not rely on analyzing the content of social media.

The reminder of this paper is organized as follows: Sec-tion 2 overviews related work. Section 3 lists the notations used and defines the problem. Section 4 details the Bi-Tag Model. The experimental evaluation is presented in Section 5. Finally, we come to the conclusions in Section 6.
There are a number of works studying the various proper-ties of social tagging systems. For example, [9] gives a survey of popular systems such as Delicious , Youtube , Flickr , and Last.fm . A study on the various factors that affect people X  X  tagging behavior is given in [10]. Also, [5, 6] provide some statistical analysis on social tagging systems.

We remark that the literature on tag generation for de-scribing resources in social tagging systems remains sparse. An active research topic, which is related to our work, on so-cial tagging systems is tag recommendation. The objective is to recommend a tag set Y given that a user has assigned some tags (in a tag set X ) to annotate a resource. A number of studies [11, 4, 12] have proposed different approaches to recommend tags to Flickr users.

There are also studies that address tag recommendations in more general settings, besides photo-sharing systems [7, 8]. For example, in [11], tag similarity is measured based on tag co-occurrences. Specifically, two tags are similar if they are often used to tag the same resources. For each tag in X , the method proposed in [11] determines a short-list of similar tags. By aggregating and ranking all the short-lists of the tags in X , the method determines a recommended set Y .

In addition to tag recommendation, tag-based searching has recently received much attention [3, 2]. For instance, [2] proposes a third-order tensor decomposition CubeLSI to search resources in a social tagging system.
Social tagging data consists of a large number of tagging records that reflects every user X  X  individual interest in re-sources. Table 1 presents a few sample records taken from a social bookmarking system. Each row represents a record that a user u annotates a resource r , i.e., a bookmark, with a tag t , and thus a tagging record can be represented as a Table 2: Notations used throughout this paper triple ( u,t,r ). For notational convenience, let U denote the set of users, T denote the set of tags, R denote the set of re-sources, and A  X  U  X  T  X  R denote the set of tag assignments in a social tagging system. The notations used throughout this paper is given in Table 2. Some of the notations will be explained in later sections.

The goal of our paper is to generate a list of k tags which well describes and summarizes a given resource. The k tags in the description are referred to as the keytags of this resource. It is thus crucial to define what a good tag description looks like. A straightforward way of generat-ing a description for resource r is to simply pick its top k most popular tags. In particular, given a resource r , this popularity-based method ranks its associated tags in de-creasing order of their frequency values, and then takes the top k tags as a description for resource r . Formally, let t( r ) = { t | ( u,t,r )  X  A,u  X  U,t  X  T } be the tag set of re-source r , and u( t,r ) = { u | ( u,t,r )  X  A,u  X  U } be the set of users who annotated resource r with tag t . The tag fre-quency is thus given by: The tags with the highest TF( t,r ) are then selected to de-scribe resource r .

The rationale behind this popularity-based method is that the frequency of a tag is positively related to its relevance to the annotated resource. If many users assign tag t to resource r , it is reasonable to infer that the tag t is highly relevant to this resource r , and accordingly it makes sense to include this tag t into r  X  X  description. However, we observe that the popularity-based method is not always the best approach to generating a tag description. This is because the tags that are frequently assigned to a resource tend to be similar to each other. This may lead to redundancy in the tag description. Tag redundancy refers to the situation where some keytags are of equivalent meaning, describing the same topic of a resource. For example, suppose that we want to describe bookmark http://www.youtube.com with five keytags. The popularity-based approach would select tags video , youtube , videos , media and movie as the five-keytag description. Obviously, these keytags all refer to the same topic of Youtube , describing Youtube from the video topic. They are, therefore, redundant in the sense that this five-keytag description conveys nothing more than the video , which is just the first keytag in the description.

The tag redundancy results from the assumption of the popularity method that the relevance of every tag to a given resource is independent. This assumption is not valid when it comes to generating a description with k keytags as a whole. In this situation, the relevance of a set of k tags to a resource is not simply adding up their individual rel-evances. Instead, the relevance reward of adding a tag de-clines when there already exists another tag covering the same topic in the description. For example, given a de-scription for Youtube with a single keytag video , including another tag videos would not increase the relevance of the description to Youtube , since the new tag covers the same video topic, and thus does not provide any more information about this bookmark. On the other hand, adding tag social instead into the description would make it more descriptive for Youtube in the sense that the new description covers an additional topic, which is the social feature of Youtube , and thus tells users more about the bookmark.

Therefore, we propose that a good tag description should be diversified to cover as many as topics of a given resource. If a description Y covers the topics exhibited by resource r , we say that the description Y is relevant to r . We denote this event by Y | r . The objective of generating a tag descrip-tion is then maximizing p ( Y | r ) which is the probability of description Y relevant to resource r .
 Problem Statement. Given a resource r and an integer k , the problem of generating a tag description is to find a set Y  X  T of k keytags that maximizes the probability p ( Y | r ) .
In order to estimate the probability p ( Y | r ), which is the probability of description Y covering the topics exhibited by resource r , we introduce a latent variable c to denote a topic of a resource, and let C denote the full set of topics in a social tagging system. By marginalizing the probability generating a tag description can be written as: where p ( Y | c ) is the probability of description Y covering the given topic c , and p ( c | r ) gives the probability that there exists topic c underlying resource r . We can interpret Equa-tion (2) as finding a set Y of k tags that maximizes the sum of the products of the probabilities of Y covering a topic and this topic is exhibited by the given resource r . This is exactly equivalent to the objective of the original problem statement.

This optimization problem poses two challenges. Firstly, we need to estimate the probability distributions p ( Y | c ) and p ( c | r ) in order to evaluate the right-hand side of Equation (2). Since topics are hidden in data, they need be extracted from tagging data first. The other challenge is that there are k or O ( J containing J unique tags. Enumerating them to find the one that maximizes P c  X  C p ( Y | c ) p ( c | r ) can be computationally Figure 2: The graphical model for the BTM gener-ative model expensive when k and the size of tag pool T are relatively large. In this paper, we introduce the Bi-Tag Model (BTM), which is specialized in dealing with both of the challenges.
By definition, description Y covers topic c if and only if any one or more of the tags in Y covers c . As a result, by the inclusion-exclusion principle, p ( Y | c ) can be written as: p ( Y | c ) = p ( t 1  X  t 2  X  t 3  X  X  X  X  X  t k | c ) t i  X  Y = Empirical studies show that the probability values of the terms with three tags or more are negligibly small, i.e., p ( T t mated by:
In order to obtain the distributions p ( t i | c ) and p ( t we propose a Bi-Tag Model (BTM) specially designed for modeling tag pair { t i ,t j } . Figure 2 shows the graphical model for BTM. Each resource is viewed as a mixture of la-tent topics from which tags are drawn. To be more specific, for a resource, we first pick the per-resource topic distribu-tion  X  from a Dirichlet prior with parameter  X  . This multi-nomial distribution  X  will then be used to generate both individual tags and tag pairs. In particular, to generate one tag for the resource, a topic c is first chosen from the topic distribution  X  . Tag t is then picked from the per-topic tag distribution  X  . On the other hand, to generate a tag pair for the same resource, again, a topic c 0 is first drawn from the same topic distribution  X  . Afterwards, tag pair t 0 { t ,t j } ) is chosen from the multinomial distribution  X  . Al-gorithm 1 summarizes the generative process for BTM.
Algorithm 1: Generative process for the BTM foreach topic c = 1 ,...,K do end foreach topic c = 1 ,...,K do end foreach resource r = 1 ,...,M do end
Our empirical studies are conducted on the data crawled from Delicious , an online social bookmarking system which allows users to bookmark their favorite URLs with descrip-tive tags.

The raw Delicious dataset is noisy and very sparse. To clean the data, we first convert all tag letters into lower-case, and then remove system-generated tags (e.g.,  X  sys-tem:imported  X ,  X  system:unfiled  X , etc.) and the tags identical to the domain names of their assigned URLs (e.g., tag  X  ya-hoo  X  for URL  X  http://www.yahoo.com  X ), since having shown the URLs, displaying such tags provides no more informa-tion regarding the bookmarks, and users cannot learn any-thing from such tags. For instance, tag yahoo makes no sense to the users who have never heard of Yahoo .

Afterwards, we follow a similar approach applied in [7] to eliminate outliers. In particular, a user, a tag or a bookmark is deleted if it appears in less than five tag assignments. By going through the deleted tags, we found that most of them were either incomprehensible gibberish or very specific terms that are rarely used. In case of being asked to generate a description for a deleted bookmark, we can simply select all the tags associated with this bookmark, since there are only less than five tags assigned to the deleted bookmarks. After cleaning the data, we have a total of 3,317,295 tag assignments, 309,684 unique users, 170,328 unique tags and 55,391 unique resources.
We will compare our BTM against four other methods later in this section. Let us begin with briefly describing these four competitors. 1. Popularity 2. TF-IRF 3. LDA 4. Diversified-LDA
To evaluate the overall quality of tag descriptions gener-ated by each algorithm, we conduct the following user study. Initially, every method is assigned a score of 0. For each re-source, these methods each generate a tag description, and then human experts increase by one the score of the method that gives the best description, judged from their personal points of view. In case of a tie, the one point increment is equally shared by all the algorithms generating the best descriptions. This procedure is carried out for varying k numbers of tags selected in descriptions ( k = 1 ,  X  X  X  , 5). By definition, the higher score a method gets, the better it is in generating tag descriptions that satisfy users. The score reflects the overall quality of the tag descriptions generated by an algorithm. In this experiment, we obtain a total of 100 testing resources with human judgements for the evaluation. Figure 3: Numbers of the best tag descriptions gen-erated by the five methods for varying k
The experimental result is shown in Figure 3. It is ob-served from Figure 3 that Popularity, TF-IRF and LDA all perform stably for varying k . BTM grabs the votes of Diversified-LDA as k increases. As a result, BTM consis-tently produces better results than the others. When k = 1, the five algorithms perform equally well as they assign al-most the same tags to the testing resources. Diversity does not help at all in this case. As k grows, Diversified-LDA gives an increasing number of diverse tags. However, these diverse tags may not be relevant to the testing resources. That is why it performs worse and worse. On the other hand, since our framework takes into account both relevance and diversity for generating tag descriptions, it outperforms the competing methods.
This paper presents a novel framework that describes a resource with a set of k keytags selected from the associated list of tags. In particular, our goal is about finding a de-scription Y consisting of a set of k tags, so as to maximize p ( Y | r ) which is the probability that the tag description Y is relevant to resource r . The description Y is considered as a compact representation of the given resource r . The Y which maximizes p ( Y | r ) automatically meets two proper-ties: (1) The tags in Y are relevant to r , (2) The tags in Y are diverse and cover multiple topics of r .

To maximize the probability p ( Y | r ), we face two chal-lenges: (1) How to solve this optimization problem? (2) The latent topics need to be extracted from tagging data. To address the first challenge, we propose a probabilistic approach that selects a set of relevant tags, which cover as many as topics of resource r , to construct description Y . In addition, we propose a generative model, BTM, to extract the topics. Experimental evaluations on Delicious tagging data show that BTM achieves encouraging results in com-parison with the competitors. [1] Osaf wiki.journal.hierarchyversusfacets. In [2] B. Bi, S. D. Lee, B. Kao, and R. Cheng. Cubelsi: An [3] B. Bi, L. Shang, and B. Kao. Collaborative resource [4] N. Garg and I. Weber. Personalized, interactive tag [5] S. Golder and B. A. Huberman. The structure of [6] S. A. Golder and B. A. Huberman. Usage patterns of [7] R. J  X  aschke, L. Marinho, A. Hotho, S.-T. Lars, and [8] L. B. Marinho and L. Schmidt-Thieme. Collaborative [9] C. Marlow, M. Naaman, D. Boyd, and M. Davis.
 [10] S. Sen, S. K. Lam, A. M. Rashid, D. Cosley, [11] B. Sigurbj  X  ornsson and R. van Zwol. Flickr tag [12] Z. Xu, Y. Fu, J. Mao, and D. Su. Towards the
