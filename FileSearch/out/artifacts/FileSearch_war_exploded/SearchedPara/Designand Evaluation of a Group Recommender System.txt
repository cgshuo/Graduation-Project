 Though most recommender systems make suggestions for individual users, in many circumstances the selected items (e.g., movies) are not for personal usage but rather for con-sumption in group. In this paper, we present a recommender system for audio-visual content that generates suggestions for groups of people (such as families or friends) in the home environment. In this context, different group recommen-dation strategies are evaluated for various algorithms and sizes of the group. An offline evaluation proves the assump-tion that for randomly composed groups the accuracy of all recommendation algorithms decreases if the group size grows. Besides, the results show that the group recommen-dation strategy which produces the most accurate results is depending on the algorithm that is used for generating individual recommendations. Consequently, if an existing recommender system for individuals is extended to a rec-ommender system for groups, the group recommendation strategy has to be chosen based on the utilized recommen-dation algorithm in order to maximize the efficiency of the group recommendations.
 H.5.3 [ Information Interfaces and Presentation ]: Group and Organization Interfaces Algorithms, Experimentation Group recommender, Evaluation, Aggregation strategy
Recommender systems can help users to find the most interesting products or content thereby addressing the in-formation overload problem of (online) services. Although the majority of the currently deployed recommender sys-tems are designed to generate personal suggestions for in-dividual users, in many cases content is selected and con-sumed by groups of users rather than by individuals. Many researchers have already investigated how the current state-of-the-art recommendation algorithms can be adapted in or-der to generate group recommendations [6]. In literature, group recommendations have mostly been generated either by aggregating the users X  individual recommendations into recommendations for the whole group (aggregating recom-mendations) or by aggregating the users X  individual prefer-ence model into a preference model of the group (aggregating preferences) [2].

The first recommendation strategy (aggregating recom-mendations) generates recommendations for each individual user using a traditional recommendation algorithm. Subse-quently the recommendation lists of all group members are aggregated into a group recommendation list, which (hope-fully) satisfies all group members. Different methods to ag-gregate the recommendation lists have been proposed during the last decade. Most of them make a decision based on the algorithm X  X  prediction value, i.e. a prediction of the user X  X  rating score for the recommended item. The second recom-mendation strategy (aggregating preferences) combines the group members X  preferences into a group preference model using a social value function. A social value function de-scribes how the opinions and preferences of individuals af-fect the group X  X  recommendations. In literature, different social value functions have been proposed to aggregate the members X  preferences, but still no consensus exists about the most optimal solution [5]. After aggregating the mem-bers X  preferences, the group X  X  preference model is treated as a pseudo user to produce group recommendations using a traditional recommendation algorithm.

The goal of this research is to find which of these group recommendation strategies generates the most accurate rec-ommendations for audio-visual content in a home environ-ment. Section 2 provides an overview of related work. Sec-tion 3 gives some information about the use case in which the results will be applied, i.e. a group recommender system for audio-visual content in the home environment. Section 4 elaborates on the implemented group recommendation strat-egies and Section 5 discusses the setup of our experiment. The results are presented in Section 6. Section 7 draws con-clusions and points to future work.
In the domain of movies, Polylens is an extension of Movie-len s that enables recommendations for groups [6]. Polylens allows users to create and manage their own groups in or-der to receive group recommendations next to the traditional individual recommendations. Both survey results and obser-vations of user behavior proved that group recommendations are valuable and desirable for the users.

A less obvious use case for group recommendations is a recipe recommender for families [2]. Since all family mem-bers typically eat a joint meal at least once a day, recipes and food consumption are good examples of a group activity. In the context of this recipe recommender, the aggregating preferences strategy and the aggregating recommendations strategy were compared. An evaluation with a number of families showed that the aggregating preferences strategy yield slightly better results than the aggregated recommen-dation lists. This recommender is based on collaborative filtering (CF) and the individual data of group members is aggregated in a weighted manner, such that the weights re-flect the observed interaction of group members. As was already remarked by other researchers, this is only one type of recommendation algorithm and one of the possible ap-proaches for aggregating prediction values or recommenda-tion lists [1]. So, an extensive comparison of the two strat-egies is still missing in literature. Our research compares the aggregated recommendations with the aggregating pref-erences strategy more thoroughly. In the context of a group recommender for movies, the two strategies are evaluated for different group sizes and different recommendation algo-rithms.

Research regarding the aggregating recommendations strat-egy has learned that the influence of the aggregation method is limited [1]. A comparison of the group recommendation lists generated using four commonly-used aggregation meth-ods showed similar results in terms of accuracy for all meth-ods. This study compared the results for groups with a size of 2, 3, 4 or 8 members using the aggregating recommenda-tions strategy and an algorithm based on SVD. Our research investigates the influence of the group size not only for the strategy that aggregates the recommendations, but also for the strategy that aggregates the members X  profiles. More-over, our research also considers other sizes of the group including very large groups, and compares the results for different classes of algorithms.
The recommender system proposed in this paper runs on a home-gateway that aggregates the content of the group members from different sources (local or remote, e.g., exter-nal hard drives, recorders, etc.) and provides an overview of their joint collection of content items (songs and videos). For each content item, a list of similar items is provided. Furthermore, personal suggestions are offered based on the preferences of the current users of the system. For scala-bility reasons, these suggestions are calculated by an exter-nal recommendation services and queried by the local client whenever needed. The content items and recommendations can be filtered based on genre and selected for playback on the desired device in the home environment (e.g., the tele-vision set). This interaction and viewing behavior is logged as implicit feedback for the recommender system. Besides, explicit feedback can be provided on individual items by the  X  X humbs up X  and  X  X humbs down X  icons or on genres, actors, and directors of the movie by selecting these attributes in Fig ure 1: A screenshot of the recommender system the interface. Figure 1 illustrates this functionality of the recommender system with a screenshot of the user interface.
Groups can be created or changed easily by the users ac-cording to the current situation in the home. E.g., a group can be composed for the family members that are going to watch a movie this evening. In addition to adding or remov-ing members of a group, users can assign a personal impor-tance weight to each member of the group. These weights can be used to express for example that older people (such as parents) have more influence on the recommendations than younger people (such as children). Three options are possible for these weights: a high, a low, and a neutral im-portance. The aggregation method or social value function of the grouping strategy (Section 4) takes these importance weights into account during the calculation of the group rec-ommendation list. Changing the group composition or the importance weights has an immediate impact on the group recommendations which are showed in interface. To enable these immediate adjustments to the recommendation list, recommendations are precalculated for every combination of group composition and importance weights. Given the small number of group members in a typical home environ-ment and the limited options for the importance weights (3 possible values), the total number of group combinations remains limited, so that the computation load is still accept-able.
To overcome the cold start problem and evaluate the group recommendation strategies, we used the Movielens (100K) data set in the calculation process of the recommender ser-vice. Therefore, the explicit and implicit feedback provided by the users of our system will be converted to the 5-point rating scale of the Movielens system. This way, the com-bined data set enables the CF to find neighbors for the new users of our system and generate accurate recommendations based on the community knowledge of the Movielens data set.

Before calculating the recommendations, the user X  X  rat-ings are normalized by subtracting the user X  X  mean rating and dividing this difference by the standard deviation of the user X  X  ratings. Some similarity metrics, such as the Pearson correlation, consider the fact that users are different with re-spect to how they interpret the rating scale; thereby making the normalization process unnecessary for calculating simi-larities. However, normalizing the ratings is still meaningful if the ratings of the group members are aggregated into a g roup rating before the similarities are calculated [5]. Af-ter normalization, the ratings can (optionally) be squared to incorporate the quadratic effect of feedback mechanisms. Research has proved that users may not rate items in a lin-ear way; this means: the further away from the middle point of the scale, the larger the differences between subsequent ratings [5]. E.g., the difference between a 5-star and a 4-star rating is more significant than the difference between a 4-star and a 3-star rating.

After transforming the data, group recommendations are calculated based on the preferences of all group members. Three group recommendation strategies are available in the current implementation of the video recommender system: aggregating recommendations, aggregating preferences, or a switching strategy that combines the two previous strate-gies. The switching strategy generates group recommenda-tions based on the aggregating recommendations strategy if the profile density of the group is below a certain threshold. Above that threshold, the aggregating preferences strategy is used. Switching between a strategy that aggregates the recommendations and a strategy that aggregates the prefer-ences might produce more accurate results than both indi-vidual strategies [2].

In case of the aggregating recommendations strategy, the aggregation method calculates for each item the average of the prediction values of each group member X  X  recommenda-tion list. Although several alternative aggregation methods, such as X  X verage without misery X  X nd X  X east misery X , are pos-sible, research has shown that the influence of these aggrega-tion methods on the accuracy of the group recommendations is limited [1]. In case of the aggregating preferences strategy, the members X  individual preferences are aggregated into a group preference by calculating the average of the members X  rating for each item. By using the same aggregation method (i.e. average) for both aggregating the individual recom-mendation lists and aggregating the individual preferences, the accuracy of all strategies can be compared (Section 6). If group members have an unequal importance weight, a weighted average is used as aggregation method to take the relative importance of each group member into account. Un-fortunately, the influence of the importance weights on the accuracy of the group recommendations could not be evalu-ated in the experiment of Section 5, since the data set that was used for this research does not contain these weights.
A number of state-of-the-art recommendation algorithms are used for comparing different group recommendation strat-egies. The used implementation of Collaborative Filter-ing (CF) is based on the work of Breese et al [3]. This nearest neighbor CF uses the Pearson correlation metric for discovering similar users in the user-based approach (UBCF) or similar items in the item-based approach (IBCF). As Content-Based recommender (CB) the InterestLMS pre-dictor of the open source implementation of the Duine frame-work [7] is adopted (and extended to consider extra meta-data attributes). Based on the actors, directors, and genres of the content items and the user X  X  ratings for these items, the recommender builds a profile model for every user. The used hybrid recommender (Hybrid) combines the recom-mendations with the highest rating prediction of the IBCF and the CB recommender into a new recommendation list. The result is an alternating list of the best recommendations originating from these two algorithms. A user-centric eval-uation comparing various algorithms based on various char-acteristics showed that this straightforward combination of CF and CB recommendations outperforms both individual algorithms on almost every qualitative metric [4]. As rec-ommender based on matrix factorization, we opted for the open source implementation of the SVD Recommender (SVD) of the Apache Mahout project [8]. The recommender is configured to use 19 features, i.e. the number of genres in the Movielens data set, and the number of iterators is set at 50. To compare the results of the various recommenders, the popular recommender was introduced as a baseline. This recommender generates for every user always the same list of most popular items, which is based on the number of received ratings and the mean rating of each item.
A major issue in the domain of group recommender sys-tems is the evaluation of the effectiveness. Interviewing groups or performing online evaluations can be partial solu-tions but are not feasible on a large scale or to extensively test alternative algorithms. Therefore, we are forced to per-form an offline evaluation, in which groups are sampled from the users of a traditional single-user data set, as was done by Baltrunas et al [1]. Firstly, all users are randomly assigned to one group of a specific size. Secondly, group recommen-dations are generated for each of these groups . Thirdly, the recommendations are evaluated individually as in the clas-sical single-user case, by comparing (the rankings of) the recommendations with (the rankings of) the items in the test set of the user. The evaluation of the group recommen-dations is based on the traditional procedure of dividing the data set chronologically in training set (60%) and test set (40%). For each user, the effectiveness of his group recom-mendations is evaluated based on his individual ratings in the test set using the Normalized Discounted Cumulative Gain (nDCG) [1]. We opted for a recommendation list of 5 content items, since this is a realistic length for a recommen-dation list in a TV interface. After calculating the nDCG for each individual user, the average nDCG over all users is calculated as an overall measure of efficiency. The group size is varying from 1 person per group (=individual recom-mendations) until 10 persons per group. Besides, the results are provided for very large group compositions (group sizes of 15 and 20 persons).
Figure 2 shows the mean nDCG together with the 95% confidence intervals, according to the recommendation algo-rithm and the group size. Since groups are randomly created and the accuracy of the recommendations is depending on the composition of the groups, 30 measurements are per-formed for each combination of group size and algorithm. The average of these 30 measurements is used as an esti-mation of the effectiveness of the group recommendations and is visualized in Figure 2. The bar series with the prefix  X  X ec X  are using the aggregating recommendations strategy whereas the prefix  X  X ref X  refers to the aggregating prefer-ences strategy. (The switching strategy is not evaluated.) The vertical axis crosses the horizontal axis at the accu-racy level of the popular recommender, which is constant for the various group sizes. This way, the bar chart shows the relative improvement of each algorithm with respect to the baseline accuracy of the popular recommender. Since all combinations of group size and algorithm show an accuracy improvement with respect to the static list of most popular items, this experiment shows that group recommendations are still useful, even for large groups.

As expected, the graph shows a decreasing performance of the group recommendations as the group size increases for all algorithms. The comparison between the aggregating recommendations strategy and the aggregating preferences strategy provides another interesting finding. The grouping strategy that provides the most accurate recommendations depends on the used algorithm. The CB and UBCF algo-rithm generate the most accurate group recommendations if the group members X  preferences are aggregated whereas the results of SVD and IBCF are most optimal if the members X  recommendations are aggregated. A possible explanation for these differences in accuracy lies in the way in which the algorithm processes the data. The CB and UBCF algorithm create some kind of user profile to find respectively matching items or similar users. In contrast, the matrix decomposition of SVD and the item-item similarities of IBCF provide less insight into the preferences of the users. So, aggregating the preferences of the group members provides optimal results if the algorithm internally composes some kind of user profile holding his preferences, whereas aggregating the recommen-dations of the group members is a better option if the users X  preferences are less transparent in the data structure of the algorithm. The internal modeling of the user profile can also explain why some combinations of algorithm and strategy (such as PrefSVD) deteriorate faster than others (such as PrefUBCF) as the group size increases. Finally, the results of Figure 2 show that the SVD and hybrid recommender produce the most accurate group recommendations for var-ious group sizes. However these results are only based on the Movielens data; probably the most optimal combination of algorithm and strategy depends on the data and scenario at hand. For the in-home recommender system presented in Section 3, we opted for the hybrid algorithm because of its accuracy and the positive evaluation regarding novelty, usefulness, satisfaction, and trust via previously conducted user tests [4].
We presented a group recommender for audio and video in the home environment and evaluated two commonly-used group recommendation strategies for different algorithms. Neither of these can be designated as the overall winner since the effectiveness of grouping strategies is influenced by the used recommendation algorithm. If recommender sys-tems for individual users are extended to enable group rec-ommendations, these results can be used to choose the most optimal grouping strategy based on the currently employed algorithm. In the future, we want to investigate the pro-posed switching strategy that combines the two group rec-ommendation strategies as well as other techniques to com-bine the strategies. Besides, the accuracy of the grouping strategies will be compared for groups which are composed so that the group members have a high similarity. [1] L. Baltrunas, T. Makcinskas, and F. Ricci. Group [2] S. Berkovsky and J. Freyne. Group-based recipe [3] J. S. Breese, D. Heckerman, and C. Kadie. Empirical [4] S. Dooms, T. De Pessemier, and L. Martens. A [5] J. Masthoff. Group modeling: Selecting a sequence of [6] M. O X  X onnor, D. Cosley, J. A. Konstan, and J. Riedl. [7] Telematica Instituut/Novay. Duine Framework, 2009. [8] The Apache Software Foundation. Apache Mahout,
