 Hybrid P2P architectures include two types of nodes. There are leaf nodes that provide information as well as post requests. Leaf nodes can be used to model an own but which provide regional directory services construct and collectively work to cover the whole network. Figure 1 illustrates the hybrid P2P networks. The black nodes are directory nodes, and the gray nodes are leaf nodes. because they provide directory services to improve the routing of information requests, which could be useful for result merging. The results that need to be merged at a directory node may include not only the results from other directory nodes down the query path, but also the results from the neighboring leaf nodes. approaches due to unique characteristics of P2P environments, for example, skewed collection statistics, and higher communication costs. About the related work, in PlanetP[1], it first ranks peers according to the goodness of each peer X  X  to the submitted query and then ranks the documents returned by these peers. However, its Zhiguo Lu have proposed a deterministic strategy, but it requires full cooperation pure structured P2P systems and need global statistics such as the inverse document frequency, which can only be obtained in completely cooperative environments where each node share its document and corpus statistics. Jie Lu [4] adapted Semi-Supervised Learning (SSL) result merging algorithm to hybrid P2P networks with multiple directory nodes. A directory node that uses SSL learns a query-dependent transforms neighbor-specific documents to directory-specific document scores. However, the modified SSL algorithm requires downloading documents from neighboring nodes to server as training da ta that means higher communication costs. Jie Lu also proposed another result merging algorithm, which is called SESS. SESS is information for each of their top-ranked documents. with the exception of modified SSL. However, SSL requires downloading documents from neighboring nodes to serve as training data that means higher communication costs [4]. In this paper, we propose a novel result merging algorithm that can be used by directory node, which is called RMNC  X  result merging with no cooperation  X  . RMNC is deterministic and doesn X  X  require neighboring nodes to provide any statistics information, which makes it different from other algorithms that require cooperation from participants. approach to merge results. Section 3 proposes one method for ranking the neighboring with respect to a given query are important for result merging. Section 4 and Section 5 explain our experimental methodology. Section 6 concludes. Our RMNC algorithm is base on a function that maps local document ranks obtained from a neighboring node into global document scores which can then been merged together with document ranks from other neighboring nodes. The local document ranks mean the ranks of the documents at a neighboring node resulted from relevance scoring computed locally by the node. The global document scores mean directory-specific scores, which are the new scores of the documents after being merged. In order to explain the algorithm, we suppose a set of neighboring nodes P = { P 1 , P relevance scores with respect to the given query q . O u,v denotes the rank of document u in neighboring node v . In the final stage, K top documents are to be retrieved, where K is determined by the user. are good indicators: the number of relevant documents returned by each peers and its follows. relevant documents for a given query, if it found more documents. rank to directory-specific relevance score mapping for a given query q . into account the number of relevant documents returned by each neighboring nodes. Also, our algorithm is deterministic and does not require any cooperation from participants, which means that our algorithm has many advantages compared to other result merging algorithms, for example, less communication costs. scores of neighboring nodes with respect to a given query q . Next we will identify the problem. Many nodes ranking algorithms used by directory nodes require cooperation from neighboring nodes, which we would prefer to avoid. On the other hand, neighboring nodes ranking in hybrid P2P networks is not a simple adaptation of existing approaches [5-7] due to unique characteristics of P2P environments, for example, skewed collection statistics, and higher communication costs. It is a more difficult problem especially in uncooperative P2P environments. In this paper, we adapt KL [7] algorithms to rank neighboring nodes, described below. modification of the Kullback-Leibler divergence which is the conditional probability of predicting the collections C for a given query Q: collection, and | C | is the total number of term occurrences in the collection. Kullback-textbooks on information theory [8].Because f ( Q , w j )/ | Q | is independent of any node X  X  collection, the ranking of neighboring nodes based on KL ( Q,C ) is equivalent to ranking based on S ( Q,C ) scores calculated as: term and term frequency information of a neighboring node X  X  collection. As discussed above  X  we would prefer to avoid cooperation from neighboring nodes. So instead of obtaining the resource descriptions directly from its neighboring nodes, the directory Next we adapt Equation 4 to ranking neighboring nodes in uncooperative P2P environments. That is: Given a new query, the directory node computes scores for its neighboring nodes using Equation 5. There has been no standard data for evaluating the performance of results merging in hybrid P2P networks, so we developed one test set, which is a 6 gigabyte, 1.1 million document set downloaded from Web. The test data was divided into 2,400 collections based on document URLs. The HTML title fields of the documents were used as document names. Each of the 2,400 collections defined a leaf node in a hybrid P2P network. queries. Here we extract key terms from document names. Most queries had 2-3 terms and no query had more than 7 terms. 12,000 queries were randomly selected from the automatically-generated queries to be used in our experiments. For each query, a leaf node was randomly chosen to issue the query. Next we will discuss how to construct the topology of hybrid P2P network. between directory nodes. A directory node had on average 5 directory node neighbors and 16 leaf node neighbors. As in the Gnutella protocol [11], each message had a time-to-live (TTL) field that causes the query to expire and is not further propagated routed to directory nodes. Top 50 documents retrieved from a single large collection were treated as the relevant documents for each query. Modified SSL algorithms are also be implemented in order to have a comparison with our RMNC algorithm. technology. Here we use 11-point recall-precision to evaluate the merged retrieved results from the hybrid P2P networks. algorithms when 6,000 queries have been randomly issued. The lower bound was generated by directly merging documents from different neighboring nodes using their local document scores. The upper bound was generated by the documents according to their corresponding scores in the retrieval results from the whole single collection. The RMNC algorithm using modified KL method improved the average precision by 18.1% compared with the lower bound. Our RMNC algorithm had near optimal performance compared with modified SSL algorithm. However, modified SSL requires downloading large documents from neighboring nodes to serve as training data, which means higher communication costs. In this paper, we propose a novel result merging algorithm used by directory nodes in hybrid P2P networks. Our algorithm does not require cooperation from neighboring nodes, which makes it different from other algorithms except modified SSL. However, modified SSL can induce higher communication costs. Experimental results demonstrate that our algorithm is effective and has near optimal performance compared with modified SSL. 
