 Template-filling information extraction (IE) sys-tems must merge information across multiple sen-tences to identify all role fillers of interest. For instance, in the MUC4 terrorism event extrac-tion task, the entity filling the individual perpetra-tor role often occurs multiple times, variously as proper, nominal, or pronominal mentions. How-ever, most template-filling systems (Freitag and McCallum, 2000; Patwardhan and Riloff, 2007) assign roles to individual textual mentions using only local context as evidence, leaving aggrega-tion for post-processing. While prior work has acknowledged that coreference resolution and dis-course analysis are integral to accurate role identi-fication, to our knowledge no model has been pro-posed which jointly models these phenomena.

In this work, we describe an entity-centered ap-proach to template-filling IE problems. Our model jointly merges surface mentions into underlying entities (coreference resolution) and assigns roles to those discovered entities. In the generative pro-cess proposed here, document entities are gener-ated for each template role, along with a set of non-template entities. These entities then generate mentions in a process sensitive to both lexical and structural properties of the mention. Our model outperforms a discriminative mention-level base-line. Moreover, since our model is generative, it (a) (b) can naturally incorporate unannotated data, which further increases accuracy. Figure 1(a) shows an example template-filling task from the corporate acquisitions domain (Fre-itag, 1998). 1 We have a template of K roles (
PURCHASER , AMOUNT , etc.) and we must iden-tify which entity (if any) fills each role ( CSR Lim-ited , etc.). Often such problems are modeled at the mention level, directly labeling individual men-tions as in Figure 1(b). Indeed, in this data set, the mention-level perspective is evident in the gold annotations, which ignore pronominal references. However, roles in this domain appear in several lo-cations throughout the document, with pronominal mentions often carrying the critical information for template filling. Therefore, Section 3 presents a model in which entities are explicitly modeled, naturally merging information across all mention types and explicitly representing latent structure very much like the entity-level template structure from Figure 1(a). We describe our generative model for a document, which has many similarities to the coreference-only model of Haghighi and Klein (2010), but which integrally models template role-fillers. We briefly describe the key abstractions of our model.
Mentions: A mention is an observed textual reference to a latent real-world entity. Mentions are associated with nodes in a parse tree and are typically realized as NPs. There are three ba-sic forms of mentions: proper ( NAM ), nominal (
NOM ), and pronominal ( PRO ). Each mention M is represented as collection of key-value pairs. The keys are called properties and the values are words. The set of properties utilized here, de-noted R , are the same as in Haghighi and Klein (2010) and consist of the mention head, its depen-dencies, and its governor. See Figure 2 for a con-crete example. Mention types are trivially deter-mined from mention head POS tag. All mention properties and their values are observed.

Entities: An entity is a specific individual or object in the world. Entities are always latent in text. Where a mention has a single word for each property, an entity has a list of signature words. Formally, entities are mappings from properties r  X  X  to lists L r of  X  X anonical X  words which that entity uses for that property.

Roles: The elements we have described so far are standard in many coreference systems. Our model performs role-filling by assuming that each entity is drawn from an underlying role. These roles include the K template roles as well as  X  X unk X  roles to represent entities which do not fill a tem-plate role (see Section 5.2). Each role R is rep-resented as a mapping between properties r and pairs of multinomials (  X  r ,f r ) .  X  r is a unigram dis-tribution of words for property r that are seman-tically licensed for the role (e.g., being the sub-ject of  X  X cquired X  for the ACQUIRED role). f r is a  X  X ertility X  distribution over the integers that char-acterizes entity list lengths. Together, these distri-butions control the lists L r for entities which in-stantiate the role.

We first present a broad sketch of our model X  X  components and then detail each in a subsequent section. We temporarily assume that all men-tions belong to a template role-filling entity; we lift this restriction in Section 5.2. First, a se-mantic component generates a sequence of enti-ties E = ( E 1 ,...,E K ) , where each E i is gen-erated from a corresponding role R i . We use R = ( R 1 ,...,R K ) to denote the vector of tem-plate role parameters. Note that this work assumes that there is a one-to-one mapping between entities and roles; in particular, at most one entity can fill each role. This assumption is appropriate for the domain considered here.

Once entities have been generated, a dis-course component generates which entities will be evoked in each of the n mention positions. We represent these choices using entity indicators de-noted by Z = ( Z 1 ,...,Z n ). This component uti-lizes a learned global prior  X  over roles. The Z i in-dicators take values in 1 ,...,K indicating the en-tity number (and thereby the role) underlying the i th mention position. Finally, a mention genera-tion component renders each mention conditioned on the underlying entity and role. Formally: P ( E , Z , M | R , X  ) =  X   X   X   X  3.1 Semantic Component Each role R generates an entity E as follows: for each mention property r , a word list, L r , is drawn by first generating a list length from the corre-sponding f r distribution in R . 2 This list is then populated by an independent draw from R  X  X  uni-gram distribution  X  r . Formally, for each r  X  X  , an entity word list is drawn according to, 3 3.2 Discourse Component The discourse component draws the entity indica-tor Z j for the j th mention according to, P ( Z j | Z &lt;j , X  ) = When the j th mention is non-pronominal, we draw Z j from  X  , a global prior over the K roles. When M j is a pronoun, we first draw an antecedent men-tion position j 0 , such that j 0 &lt; j , and then we set Z j = Z j 0 . The antecedent position is selected ac-cording to the distribution, where T REE D IST ( j 0 , j ) represents the tree distance between the parse nodes for M j and M j 0 . 4 Mass is restricted to antecedent mention positions j 0 which occur earlier in the same sentence or in the previ-ous sentence. 5 3.3 Mention Generation Once the entity indicator has been drawn, we gen-erate words associated with mention conditioned on the underlying entity E and role R . For each mention property r associated with the mention, a word w is drawn utilizing E  X  X  word list L r as well as the multinomials ( f r , X  r ) from role R . The word w is drawn according to,
P ( w | E,R )=(1  X   X  r ) For each property r , there is a hyper-parameter  X  r which interpolates between selecting a word uni-formly from the entity list L r and drawing from the underlying role distribution  X  r . Intuitively, a small  X  r indicates that an entity prefers to re-use a small number of words for property r . This is typi-cally the case for proper and nominal heads as well as modifiers. At the other extreme, setting  X  r to 1 indicates the property isn X  X  particular to the entity itself, but rather always drawn from the underly-ing role distribution. We set  X  r to 1 for pronoun heads as well as for the governor properties. Since we will make use of unannotated data (see Section 5), we utilize a variational EM algorithm to learn parameters R and  X  . The E-Step re-quires the posterior P ( E , Z | R , M , X  ) , which is intractable to compute exactly. We approximate it using a surrogate variational distribution of the following factored form: Each r j ( Z j ) is a distribution over the entity in-dicator for mention M j , which approximates the true posterior of Z j . Similarly, q i ( E i ) approxi-mates the posterior over entity E i which is asso-ciated with role R i . As is standard, we iteratively update each component distribution to minimize KL-divergence, fixing all other distributions: q i  X  argmin
For example, the update for a non-pronominal entity indicator component r j (  X  ) is given by: 6 A similar update is performed on pronominal en-tity indicator distributions, which we omit here for space. The update for variational entity distribu-tion is given by: ln q i ( e i )  X  E Q/q It is intractable to enumerate all possible entities e (each consisting of several sets of words). We instead limit the support of q i ( e i ) to several sam-pled entities. We obtain entity samples by sam-pling mention entity indicators according to r j . For a given sample, we assume that E i consists of the non-pronominal head words and modifiers of mentions such that Z j has sampled value i .
During the E-Step, we perform 5 iterations of updating each variational factor, which results in an approximate posterior distribution. Using ex-pectations from this approximate posterior, our M-Step is relatively straightforward. The role param-eters R i are computed from the q i ( e i ) and r j ( z ) distributions, and the global role prior  X  from the non-pronominal components of r j ( z ) . We present results on the corporate acquisitions task, which consists of 600 annotated documents split into a 300/300 train/test split. We use 50 training documents as a development set. In all documents, proper and (usually) nominal men-tions are annotated with roles, while pronouns are not. We preprocess each document identically to Haghighi and Klein (2010): we sentence-segment using the OpenNLP toolkit, parse sentences with the Berkeley Parser (Petrov et al., 2006), and ex-tract mention properties from parse trees and the Stanford Dependency Extractor (de Marneffe et al., 2006). 5.1 Gold Role Boundaries We first consider the simplified task where role mention boundaries are given. We map each la-beled token span in training and test data to a parse tree node that shares the same head. In this set-ting, the role-filling task is a collective classifica-tion problem, since we know each mention is fill-ing some role.

As our baseline, INDEP , we built a maxi-mum entropy model which independently classi-fies each mention X  X  role. It uses features as similar as possible to the generative model (and more), in-cluding the head word, typed dependencies of the head, various tree features, governing word, and several conjunctions of these features as well as coarser versions of lexicalized features. This sys-tem yields 60.0 mention labeling accuracy (see Ta-ble 1). The primary difficulty in classification is the disambiguation amongst the acquired, seller, and purchaser roles, which have similar internal structure, and differ primarily in their semantic contexts. Our entity-centered model, JOINT in Ta-ble 1, has no latent variables at training time in this setting, since each role maps to a unique entity. This model yields 64.6, outperforming INDEP . 7
During development, we noted that often the most direct evidence of the role of an entity was associated with pronoun usage (see the first  X  X t X  in Figure 1). Training our model with pronominal mentions, whose roles are latent variables at train-ing time, improves accuracy to 68.2. 8 5.2 Full Task We now consider the more difficult setting where role mention boundaries are not provided at test time. In this setting, we automatically extract mentions from a parse tree using a heuristic ap-proach. Our mention extraction procedure yields 95% recall over annotated role mentions and 45% precision. 9 Using extracted mentions as input, our task is to label some subset of the mentions with template roles. Since systems can label mentions as non-role bearing, only recall is critical to men-tion extraction. To adapt INDEP to this setting, we first use a binary classifier trained to distinguish role-bearing mentions. The baseline then classi-fies mentions which pass this first phase as before. We add  X  X unk X  roles to our model to flexibly model entities that do not correspond to annotated tem-plate roles. During training, extracted mentions which are not matched in the labeled data have posteriors which are constrained to be amongst the  X  X unk X  roles.
 We first evaluate role identification ( R OLE ID in Table 2), the task of identifying mentions which play some role in the template. The binary clas-sifier for INDEP yields 71.6 F 1 . Our JOINT+PRO system yields 74.3. On the task of identifying and correctly labeling role mentions, our model out-performs INDEP as well ( O VERALL in Table 2). As our model is generative, it is straightforward to uti-lize totally unannotated data. We added 700 fully unannotated documents from the mergers and ac-quisitions portion of the Reuters 21857 corpus. Training JOINT+PRO on this data as well as our original training data yields the best performance ( BEST in Table 2). 10
To our knowledge, the best previously pub-lished results on this dataset are from Siefkes (2008), who report 45.9 weighted F 1 . Our BEST system evaluated in their slightly stricter way yields 51.1. We have presented a joint generative model of coreference resolution and role-filling information extraction. This model makes role decisions at the entity, rather than at the mention level. This approach naturally aggregates information across multiple mentions, incorporates unannotated data, and yields strong performance.
 Acknowledgements: This project is funded in part by the Office of Naval Research under MURI Grant No. N000140911081.

