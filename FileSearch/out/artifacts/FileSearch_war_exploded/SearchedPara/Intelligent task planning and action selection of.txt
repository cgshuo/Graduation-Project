 1. Introduction
Robot soccer systems have been a thrust area for active research in robotics for the last several years ( Kitano et al., 1998;
Asada et al., 1999; Veloso et al., 1999; Huang and Liang, 2002 ). It makes use of several key areas such as mechanics ( Pourboghrat and Karlsson, 2002 ), sensors ( Treptow and Zell, 2004 ), vision (Schmitt et al., 2002 ), communication ( Pagello et al., 1999 ), coordination ( Kok, et al., 2005 ), path planning ( Kim and Kim, 2003), control ( Fierro and Lewis 1998 ), and artificial intelligence (Jolly et al., 2007 ). In the recent past, micro-robots and miniature robots were developed for various purposes of entertainment and education ( Kim et al., 1997) and these small sized robots have all the functionalities and characteristics of the large robots. Robot soccer is a multi-agent system (MAS) consisting of autonomous mobile robots in which each robot of the team has to co-operate with others while facing competition from the opponent team. An agent may have intelligence, autonomous behaviours, and can be equipped with knowledge, motivation, reasoning, and planning capabilities. Due to inherent uncertainties and inaccuracies in the sensor data, and dynamic nature of the system, planning of a strategic action selection mechanism for the entire domain is difficult with conventional mathematical approaches. In a fuzzy inference system, fuzzy logical rules can model the qualitative aspects of human knowledge and reasoning processes without develop basic skills like positioning, passing, dribbling, and shooting with the help of an offline coach ( Gupta et al., 2001 ).
Probabilistic search techniques ( Stroupe and Balch, 2005 ) are developed to determine the best action for each robot in a MAS and it uses the current team-mates positions to approximate team-mate contributions in the next step. Reinforcement learning schemes can be developed through Q-learning ( Park et al., 2001 ) for the action selection mechanism in a MAS by dividing the robot soccer field into different regions.

Intelligence of an agent is desirable for appropriate action selection, avoiding unexpected collision with the other robots in the field, finding optimal path or intercepting the ball from the opponents ( Springer et al., 1997; Kim and Kim, 2003; Abdessemed et al., 2004 ). Reinforcement learning schemes ( Arai, et al., 1999) are desirable to acquire adaptive behaviours for avoiding surrounding obstacles in a MAS, in which the learning process is ongoing. Methods have been developed for detecting and tracking the ball in a robot soccer scenario without using the colour information ( Treptow and Zell, 2004 ). Vision processing algo-rithms ( Schmitt et al., 2002 ) and omni directional catadioptric vision systems ( Limaa et al., 2001 ) have been developed for tracking multiple moving objects and predicts their trajectories in a MAS. Alexis ( Pantola and Salvador, 2001 ) has presented a pose estimation algorithm using ANN, which is concerned with the determination of the position and orientation of the soccer robots from the vision data. Different schemes for the intelligent control of mobile robots are available for realizing the decisions made during the path planning stage. Adaptive control rules ( Pour-boghrat and Karlsson, 2002 ) at the dynamics level for a nonholonomic mobile robot with unknown dynamic parameters are also available. In the implementation level, emergent cooperative behaviours of the robots are realized through various control schemes ( Jeong and Lee,1997; Fierro and Lewis, 1998 ).
This paper proposes a fuzzy neural network based approach ( Chao et al., 1996; Young and Wang, 2001 ) for the intelligent action selection mechanism of a mobile robot in a MAS.

This paper is organized as follows. The problem formulation is presented in the Section 2. The details of two-dimensional fuzzification of the soccer field and the structure of the fuzzy neural network system (FNNS) are introduced in this section. The mathematical analysis of the proposed five layer FNNS are discussed in Section 3. Method of training data generation, and simulation results are given in Section 4. 2. Problem formulation
The global objectives of an agent in a robot soccer team are to strike as many goals as possible and to defend the ball from conceding a goal. The team that can satisfy the global objectives efficiently and quickly is going to win the game. There are several conditions, which are to be fulfilled in order to satisfy the global objectives and these conditions are known as local objectives. The local objectives include defending the attack of the opponent robots, passing the ball to the team-mate, shooting the ball to the opponent goal post, avoiding the obstacles like opponent robots, goalkeeper and walls at the field boundary, acquiring control over small ball movements, and intercepting the ball from the opponent robots. If a robot in a team could pass the ball from the pass zone to its team-mate in the attack zone and the team-mate could shoot the ball to the opponent goal post avoiding the goalkeeper, then it is going to be a goal. The act of passing the ball to the team-mate and shooting the ball toward opponent goal post avoiding goalkeeper by the team-mate are the local objectives. So the problem in a robot soccer system is to find a suitable sequence of action, which will result in the fulfilment of factors depend on the ball position and the game dynamics and therefore appropriate angle and force are to be decided according to the ball position and the game dynamics. This paper proposes a strategy based intelligent action selection mechanism using FNNS, with which a robot takes sensible actions in all game situations.
Initially the playground of robot soccer system is divided into two regions, domain and boundary, so as to device different strategies for different regions. Boundary is the region near the walls of the playground. Domain is the region of the playground excluding boundary. An agent may have different strategies at the domain and the boundary. When the ball is in the boundary, the robot may not be able to hit the ball at the desired angle due to the inherent nonholonomic constraint. In such cases the robot will hit the ball towards the boundary at an appropriate angle so as to get it reflected back to the desired region of the domain. In order to implement different strategies at different areas of the domain, the domain is divided into 3 zones such as  X  X efence zone X ,  X  X ass zone X , and  X  X ttack zone X  as shown in Fig. 1 . Attack zone of the home team will be the defence zone of the opponent team. Their attack zone will be the defence zone of the home team. The pass zone is common for both the teams. The behaviour and strategy of an agent is to be changed when the zone of the ball is changed. Positions of the opponents and team-mates are also having an influence on the strategy adapted by an agent. The robot, which is approaching the ball, is exhibiting an action based on this strategy.

The robot, which is near the ball, is allowed to approach the ball and at a time only one robot from each team moves towards the the opponent goal post. When the ba ll is in the pass zone, the robot the team-mate is away from the pass zone or attack zone it dribbles the ball towards the opponent goal post. In the defence zone, home robots tries to block or intercept the ball, then hit it away from their goal post. Simultaneously attacking robots of the opponent team tries to hit the ball for scoring a goal. The goalkeeper moves along the goal line to restrict the goals. It tries to block the movement of the ball and kick it towards the opponent X  X  side. For further refining therulebase,intheproposedwork,thedomainofeachzoneis further divided into three sections as  X  X op X ,  X  X iddle X , and  X  X ottom X .
The number of rules for selecting an action is different for different field configurations due to the difference in their fuzzy membership values. The position and orientation of various objects at any time during the game define the configuration of the field at that time. A pose estimation algorithm ( Pantola and Salvador, 2001 ), utilizing vision data provides the configuration of the different objects with sufficient accuracy. Using this data , distance of the various robots from the ball is determined, along with the orientation of the robot with respect to the ball. An ANN technique ( Jolly et al., 2007 )isused in the proposed approach for deciding which robot in the team is to approach towards the ball for a given field configuration. According to ANN, one robot from each team will be moving toward the ball.
Before reaching the ball these robots are to decide the force of hit and direction of hit for the given field configuration. The path followed by the robot depends on the direction of hit and the final velocity of the robot depends on the force of hit. The configuration of the field at any time during the game can be represented by a crisp set of coordinates of various objects as
R  X f b x , b y , r 1 x , r 1 y , r 2 x , r 2 y , r 3 x , r 3 where { b x , b y }are the coordinates of the ball position, the home robots are represented by a set { r 1, r 2, g 1} and the opponent robots action of the robot R 1 on the ball can be represented as A  X  F , y  X  X  I  X  b x , b y , r 2 x , r 2 y , r 3 x , r 3 y , r 4 non-zero elements of the set (3) of the objects in Eq. (2). Through a FNNS the various non-zero elements of the set (3) can be combined to take an action. In the proposed work FNNS are developed for the home robots R 1 and R 2 , and the effectiveness of the proposed approach is established through system simulation.

The proposed network consists of five layers; input layer, fuzzification layer, identification layer, rule layer, and defuzzifica-tion layer. Fig. 3 (a) and (b) shows the part of the FNNS for robot R which selects appropriate actions when the ball is in the defence zone and the opponent robots are attacking. In these figures L where i  X  1 to 5 stands for the various layers of the network and the number associated with L i represents the number of nodes in that layer. When the opponent robots drive the ball to their attack zone, home robots take a defensive strategy. For this zone ball has non-zero membership values in some of the ten fuzzy sets corresponding to the left boundary and the defence zone. In this situation robot R 1 adapt the strategy of blocking, intercepting, dribbling or kicking the ball in an appropriate direction to save the goal. The action selection mechanism of R 1 in this zone is described in the network using 132 fuzzy neurons in the fourth layer. When the ball is in the pass zone, some of the five fuzzy sets defined for the pass zone are having non-zero membership values and the nearest robot from the teams approaches the ball. Considering the robot R 1 , it tries to pass the ball to robot R 2 ,providedR positioned ahead of R 1 in the pass zone or in the attack zone.
Otherwise it kicks the ball in a direction towards the opponent goal post. The part of the FNNS showing this strategy of R 1 is represented in Fig. 3 (c) through 125 fuzzy neurons in the fourth layer. The home robots must exhibit an attacking strategy when the ball is in their attack zone. When the ball is in this zone, robot
R (or R 2 ) tries to shoot the ball into the opponent goal post. At the same time the opponent robots attempt to hinder the attack.
Usually opponent goalkeeper is moving along the goal line to safeguard the goal box and at the time of shoot it has to correct orientation according to the position of the ball and its direction. The shooting strategy of the robot R 1 is modelled as a part of the
FNNS as shown in Fig. 3 (d) using 30 fuzzy neurons in the fourth layer. Sixteen fuzzy sets are used to represent the boundary rules membership values in only one of the fuzzy sets representing the field. Correspondingly membership set of the ball defined by Eq. (3) can have only one non-zero element. Depending upon the position of the non-zero element in the set (3) of the ball, robot R action. Fig. 3 (e) shows the part of the FNNS used for taking boundary decision using 16 neurons in the third layer. When the ball is in the boundary zone, as it is possible to take an action on the basis of the position of the ball alone, the FNNS proposed for this zone has only four layers. The structure of the fuzzy neurons used in the fourth layer of the network is shown in Fig. 4 .The
Each neuron in the third layer has two input nodes, one is from the fuzzified x -coordinate of the object and the other is from the fuzzified y -coordinate of the same object. There can be two or more output nodes. The position of an object in the field is identified algebraic product is used as it provides continuous first order derivatives as net  X  yk 2 a p yk 2 b q , where i  X  X  p 1  X  5  X  q  X  10  X 
The output of the third layer are given by yk  X  I 3 i  X  net 3 i  X  X  yk 2 a p yk 2 b q  X  11  X 
In the fourth layer, each neuron for the defence zone has three input nodes where as the neurons for the other zones have only two input nodes. In this zone, fuzzy operations like S-norms and
T-norms and their combinations are considered for the fuzzy inferencing mechanism. Algebraic sum, which provides a con-tinuous first order derivative compared to the logical sum or bounded sum is considered for implementing the fuzzy S-norm.
However the fuzzy rules for the pass zone and the attack zone can be represented through a T-norm operation alone. Fourth layer receives the output of the third layer, the nodal activity for the various zones namely defence zone, pass zone, and attack zone are, respectively, given by net D 1  X  y 1
Outputs of the fourth layer neurons are calculated using a zone indicator  X  Z  X  so that Z is D for defence zone, Z is P for pass zone, and Z is A for attack zone. Thus the output of the fourth layer is yZ yD  X  y 1 3 i  X  y 3 3 p  X  y 4 3 q y 3 3 p y 4 3 q  X  X  13  X  yP  X  y 1 3 i y 2 3 j  X  14  X  yA  X  y 1 3 i y 5 3 r  X  15  X 
Fifth layer is the defuzzification layer and in this Layer crisp actions are computed using centre of area defuzzification method (Chao et al., 1996; Tsoukalas and Uhrig, 1997 ). Each of the 303 neurons in the fourth layer is connected to two output neurons in the fifth layer. Combining the neurons in the different zones of the soccer field, input to the fifth layer can be represented as u  X  net 5 f =
Final output of the network is obtained after the activation in the neurons of the output layer as y  X  f  X  u 5 f  X  X  u 5 f ; f  X  1 , 2  X  17  X  where f is the number of neurons in the output layer of the FNNS.
Using a rule base, developed on the basis of the knowledge acquired from the experts, the desired action of a robot on the ball for a given field configuration can be decided. Eq. (17) predicts the action of the network for the same configuration of the field by assigning suitable initial values to the parameters of the FNNS.
Adjusting the network parameters through the error back propagation learning ( Chao et al., 1996; Haykin, 1999 ) algorithm, the difference between the actions inferred from the rule base and the action predicted can be minimized. Network parameters include, synaptic weights at the output layer of the network and the Gaussian function parameters used in the second layer for fuzzification. In the error back propagation learning algorithm, error at the output layer is propagated back and the local gradient of the error is calculated for each layer. For a desired output d 5 error at the output node during the n th step of the gradient decent learning is given by e  X  n  X  X  d 5 f u 5 f  X  n  X  X  18  X  where the index a  X  1, 3, 5, 7, 9 represents the x -coordinates of the various objects and p  X  1, 2, 3, 4, 5 are the neurons representing different levels of fuzzification. d d
Local gradient for a y -neuron in the second layer can be obtained in the same manner as d where the index b  X  2, 4, 6, 8, 10 represents the y -coordinates of the various objects and q  X  1, 2, 3, 4, 5 are the neurons repre-senting different levels of fuzzification. In these equations k  X  1, 2, 3, 4, 5 stands for the object number. Network parameters are optimized through the minimization of the error function given in Eq. (19). Gradient of the error function is evaluated with respect to the various network parameters. Local gradients determined in the previous steps are used for evaluating the gradient of the error function. Synaptic weights in the fifth layer can be modified iteratively using Eq. (20) as w fK  X  n  X  1  X  X  w 5 fK  X  n  X  X  Z d where the learning rate Z and the momentum coefficient m can be suitably selected between 0 and 1. Similarly the adaptive rule for the Gaussian function parameters in the second layer can be written using the local gradient calculated in Eqs. (28) and (29) as  X  n  X  1  X  X  s xp  X  n  X  X  Z d 2 a p  X  2  X  x a m xp  X  2 = s xp yq  X  n  X  1  X  X  s yq  X  n  X  X  Z d 2 b q  X  2  X  x b m yq  X  2 = s m xp  X  n  X  1  X  X  m xp  X  n  X  X  Z d 2 a p  X  2  X  x a m xp  X  = s xp m yq  X  n  X  1  X  X  m yq  X  n  X  X  Z d 2 b q  X  2  X  x b m yq  X  = s yq 4. Training data generation
The input to the FNNS consists of the coordinates of the various objects represented in Eq. (5). The desired output of the
FNNS is the best possible action of the robots for that field configuration. For the simulation of the proposed FNNS, the soccer field is defined in terms of the pixel values. The size of the field and the various zones are initialized with the pixel values according to the MiroSot small league game as shown in Fig. 2 .
Using a random number generation algorithm, coordinates of the various objects are generated zone by zone. A set of 1000 field configurations is a reasonable representation of the game situation. The desired action of the robot R 1 on the ball corresponding to each configuration of the field is determined using the rule base. A particular configuration of the field taken from the training set is shown in Fig. 5 (a). For this configuration, a crisp set of membership values can be determined for each object as given in Eq. (3). The action of the robot depends on the non-zero members of these sets. Combining the non-zero membership values of the relevant objects, zone by zone, a rule base can be developed. Since each object is fuzzified into five levels along the length and breadth, the number of rules involved seems to be large. However all these rules are not required in deciding an action because strategies of the robot depend on its zone. The rules are written for zones, so that the number of active rules for a is in the defence zone, having membership in four fuzzy sets such situations in developing a rule b ase. Force exerted on the ball corresponding to each action of the robot has to be properly scaled and fuzzified before making a rule base. Forces along the and they are represented through linguistic variables such as  X  X ribbling Force (XDF) X ,  X  X mall Force (XSF) X ,  X  X edium Force (XMF) X ,  X  X arge Force (XLF) X , and  X  X reat Force (XGF) X . Similar fuzzy sets are defined to fuzzify the forces along the breadth of the field as shown in Fig. 5 (c). 5. Results and discussion
The effectiveness of the proposed FNNS architecture for the intelligent task planning and action selection of a mobile robot in a multi-agent system is established through simulation. FNNS algorithm is implemented in a visual C++ environment, and it consists of three stages. In the first stage a separate algorithm is developed for generating the training data using a fuzzy inferencing system described in the previous section. It is verified that the training set contains representatives from every part of the field. If the generated training data is not representing every part of the field, then synaptic weights of the corresponding neurons in the fifth layer of the network are not improved through learning. This is because fuzzy sets representing those regions are always having zero membership values, and hence neurons representing that region of the field are not fired.
Every possible configurations of the field will be modelled with a combination of one or more fuzzy neurons of the proposed FNNS. Desired output for the network obtained with the rule base representing the actual action of the robot is logically verified.

In the second stage of the simulation, learning algorithms are developed for the FNNS through error back propagation techni-ques using the Eqs. (30) X (34). All synaptic weights in the fifth layer are initialized to zero. The centres of the Gaussian functions are initialized to corresponding pixel values shown in Fig. 2 and considering the spread of the membership functions as 3 s the variances of the Gaussian functions can be initialized. All the objects are initialized with the same centre and variance.
Learning curve of the trained FNNS is shown in Fig. 6 indicate that learning process is fast and the value of the error function decreased to an acceptable level. During the learning, parameters 0.00 0.003 0.006 0.009 0.012 0.015 0.018 Mean Square Error Field width 
Field width (100,190) development of the FNNS. Using FNNS, a Robot can exhibit appropriate actions in the defence zone, pass zone, attack zone, and in the boundary of the field. This point is further illustrated in
Figs. 11 X 13 using a few sample configurations from the test data set. It is seen that, as shown in Fig. 12 , action of the FNNS is according to the action predicted by the rule base. For a given strategy the proposed FNNS is useful for the action selection of both the robot R 1 and R 2 . The investigations revealed that the proposed FNNS is successful in selecting a sensible action for any possible field configuration. As the strategy of the opponent robots is different from that of the home robots, and their FNNS is to be trained separately.

The effectiveness of the FNN based technique is further illustrated through the robot soccer simulation shown in Figs. 14 and 15.
In this simulation, top view of the soccer robot system, which is equivalent to the image captured by the vision camera, is generated. Playground, robots, and the ball are generated are same as the FIRA X  X 
MiroSot small league specifications ( www.fira.net ) using thread functions. The various algorithms implemented and tested through this simulation include the high level decision making through
ANNs ( Jolly et al., 2007 ); intelligent action selection mechanism based on FNNS and a Bezier curve based path planning techniques.
In the simulation home team with robots R 1 ,R 2 ,G 1 is coloured RED while the opponent team with robots R 3 ,R 4 ,G 2 is coloured BLUE.
According to this action selection mechanism, the action of an agent depends on the field configurations. This simulation exhibit various coordinated behaviours such as ball passing, blocking, goal shooting, obstacle avoidance, and interception. These simulations show that coordination, corporation and intelligent decision making can be possible with FNN based action selection mechanism. 6. Conclusion
A fuzzy-neural network based intelligent task planning and action selection mechanism has been proposed in this paper, for a mobile robot in a robot soccer system . The proposed fuzzy neural network system has been trained using error back propagation learning algorithm. A two dimensional fuzzification of the robot soccer field has been attempted in this work for the construction of the proposed fuzzy neural network system. The strategy based action selection depends on the field configuration, and emer-gence of a particular field configuration in turn depends on the game dynamics. A robot changes its strategy when the config-uration of the objects in field changes. The development of an
FNNS based approach for the determination of the goalkeeping
