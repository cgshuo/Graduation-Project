 Traditionally, the task of statistical machine trans-lation (SMT) is defined as translating a source sen-tence f J 1 = { f 1 , . . . , f J } to a target sentence e { e 1 , . . . , e I assumed to be a word in the source and target lan-guages. However, the definition of a  X  X ord X  is of-ten problematic. The most obvious example of this lies in languages that do not separate words with white space such as Chinese, Japanese, or Thai, in which the choice of a segmentation standard has a large effect on translation accuracy (Chang et al., 2008). Even for languages with explicit word boundaries, all machine translation systems perform at least some precursory form of tokenization, split-ting punctuation and words to prevent the sparsity that would occur if punctuated and non-punctuated words were treated as different entities. Sparsity also manifests itself in other forms, including the large vocabularies produced by morphological pro-ductivity, word compounding, numbers, and proper names. A myriad of methods have been proposed to handle each of these phenomena individually, including morphological analysis, stemming, com-pound breaking, number regularization, optimizing word segmentation, and transliteration, which we outline in more detail in Section 2.

These difficulties occur because we are translat-ing sequences of words as our basic unit. On the other hand, Vilar et al. (2007) examine the possibil-ity of instead treating each sentence as sequences of characters to be translated. This method is attrac-tive, as it is theoretically able to handle all sparsity phenomena in a single unified framework, but has only been shown feasible between similar language pairs such as Spanish-Catalan (Vilar et al., 2007), Swedish-Norwegian (Tiedemann, 2009), and Thai-Lao (Sornlertlamvanich et al., 2008), which have a strong co-occurrence between single characters. As Vilar et al. (2007) state and we confirm, accu-rate translations cannot be achieved when applying traditional translation techniques to character-based translation for less similar language pairs.
In this paper, we propose improvements to the alignment process tailored to character-based ma-chine translation, and demonstrate that it is, in fact, possible to achieve translation accuracies that ap-proach those of traditional word-based systems us-ing only character strings. We draw upon recent advances in many-to-many alignment, which allows for the automatic choice of the length of units to be aligned. As these units may be at the charac-ter, subword, word, or multi-word phrase level, we conjecture that this will allow for better character alignments than one-to-many alignment techniques, and will allow for better translation of uncommon words than traditional word-based models by break-ing down words into their component parts.

We also propose two improvements to the many-to-many alignment method of Neubig et al. (2011). One barrier to applying many-to-many alignment models to character strings is training cost. In the inversion transduction grammar (ITG) framework (Wu, 1997), which is widely used in many-to-many alignment, search is cumbersome for longer sen-tences, a problem that is further exacerbated when using characters instead of words as the basic unit. As a step towards overcoming this difficulty, we in-crease the efficiency of the beam-search technique of Saers et al. (2009) by augmenting it with look-ahead probabilities in the spirit of A* search. Secondly, we describe a method to seed the search process us-ing counts of all substring pairs in the corpus to bias the phrase alignment model. We do this by defining prior probabilities based on these substring counts within the Bayesian phrasal ITG framework.

An evaluation on four language pairs with differ-ing morphological properties shows that for distant language pairs, character-based SMT can achieve translation accuracy comparable to word-based sys-tems. In addition, we perform ablation studies, showing that these results were not possible with-out the proposed enhancements to the model. Fi-nally, we perform a qualitative analysis, which finds that character-based translation can handle unseg-mented text, conjugation, and proper names in a uni-fied framework with no additional processing. As traditional SMT systems treat all words as single tokens without considering their internal structure, major problems of data sparsity occur for less fre-quent tokens. In fact, it has been shown that there is a direct negative correlation between vocabulary size (and thus sparsity) of a language and transla-tion accuracy (Koehn, 2005). Sparsity causes trou-ble for alignment models, both in the form of incor-rectly aligned uncommon words, and in the form of garbage collection, where uncommon words in one language are incorrectly aligned to large segments of the sentence in the other language (Och and Ney, 2003). Unknown words are also a problem during the translation process, and the default approach is to map them as-is into the target sentence.
This is a major problem in agglutinative lan-guages such as Finnish or compounding languages such as German. Previous works have attempted to handle morphology, decompounding and regulariza-tion through lemmatization, morphological analysis, or unsupervised techniques (Nie X en and Ney, 2000; Brown, 2002; Lee, 2004; Goldwater and McClosky, 2005; Talbot and Osborne, 2006; Mermer and Ak X n, 2010; Macherey et al., 2011). It has also been noted that it is more difficult to translate into morpho-logically rich languages, and methods for modeling target-side morphology have attracted interest in re-cent years (Bojar, 2007; Subotin, 2011).

Another source of data sparsity that occurs in all languages is proper names, which have been handled by using cognates or transliteration to improve trans-lation (Knight and Graehl, 1998; Kondrak et al., 2003; Finch and Sumita, 2007), and more sophisti-cated methods for named entity translation that com-bine translation and transliteration have also been proposed (Al-Onaizan and Knight, 2002).

Choosing word units is also essential for creat-ing good translation results for languages that do not explicitly mark word boundaries, such as Chi-nese, Japanese, and Thai. A number of works have dealt with this word segmentation problem in trans-lation, mainly focusing on Chinese-to-English trans-lation (Bai et al., 2008; Chang et al., 2008; Zhang et al., 2008b; Chung and Gildea, 2009; Nguyen et al., 2010), although these works generally assume that a word segmentation exists in one language (English) and attempt to optimize the word segmentation in the other language (Chinese).

We have enumerated these related works to demonstrate the myriad of data sparsity problems and proposed solutions. Character-based transla-tion has the potential to handle all of the phenom-ena in the previously mentioned research in a single unified framework, requiring no language specific tools such as morphological analyzers or word seg-menters. However, while the approach is attractive conceptually, previous research has only been shown effective for closely related language pairs (Vilar et al., 2007; Tiedemann, 2009; Sornlertlamvanich et al., 2008). In this work, we propose effective align-ment techniques that allow character-based transla-tion to achieve accurate translation results for both close and distant language pairs. SMT systems are generally constructed from a par-allel corpus consisting of target language sentences E and source language sentences F . The first step of training is to find alignments A for the words in each sentence pair.

We represent our target and source sentences as e 1 and f the target and source sentences respectively. These may be words in word-based alignment models or single characters in character-based alignment mod-els. 1 We define our alignment as a K 1 , where each element is a span a k =  X  s, t, u, v  X  indicating that the are aligned to each-other. 3.1 One-to-Many Alignment The most well-known and widely-used models for bitext alignment are for one-to-many alignment, in-cluding the IBM models (Brown et al., 1993) and HMM alignment model (Vogel et al., 1996). These models are by nature directional, attempting to find the alignments that maximize the conditional prob-computational reasons, the IBM models are re-stricted to aligning each word on the target side to a single word on the source side. In the formal-ism presented above, this means that each e i must be included in at most one span, and for each span u = v . Traditionally, these models are run in both directions and combined using heuristics to create many-to-many alignments (Koehn et al., 2003).
However, in order for one-to-many alignment methods to be effective, each f j must contain enough information to allow for effective alignment with its corresponding elements in e I 1 . While this is often the case in word-based models, for character-based models this assumption breaks down, as there is often no clear correspondence between characters. 3.2 Many-to-Many Alignment On the other hand, in recent years, there have been advances in many-to-many alignment techniques that are able to align multi-element chunks on both sides of the translation (Marcu and Wong, 2002; DeNero et al., 2008; Blunsom et al., 2009; Neu-big et al., 2011). Many-to-many methods can be ex-pected to achieve superior results on character-based alignment, as the aligner can use information about substrings, which may correspond to letters, mor-phemes, words, or short phrases.

Here, we focus on the model presented by Neu-big et al. (2011), which uses Bayesian inference in the phrasal inversion transduction grammar (ITG, Wu (1997)) framework. ITGs are a variety of syn-chronous context free grammar (SCFG) that allows for many-to-many alignment to be achieved in poly-nomial time through the process of biparsing, which we explain more in the following section. Phrasal ITGs are ITGs that allow for non-terminals that can emit phrase pairs with multiple elements on both the source and target sides. It should be noted that there are other many-to-many alignment meth-ods that have been used for simultaneously discov-ering morphological boundaries over multiple lan-guages (Snyder and Barzilay, 2008; Naradowsky and Toutanova, 2011), but these have generally been applied to single words or short phrases, and it is not immediately clear that they will scale to aligning full sentences. In this work, we experiment with the alignment method of Neubig et al. (2011), which can achieve competitive accuracy with a much smaller phrase ta-ble than traditional methods. This is important in the character-based translation context, as we would like to use phrases that contain large numbers of characters without creating a phrase table so large that it cannot be used in actual decoding. In this framework, training is performed using sentence-wise block sampling, acquiring a sample for each sentence by first performing bottom-up biparsing to create a chart of probabilities, then performing top-down sampling of a new tree based on the probabil-ities in this chart.

An example of a chart used in this parsing can be found in Figure 1 (a). Within each cell of the chart spanning e t s and f v u is an  X  X nside X  probabil-ity I ( a s,t,u,v ) . This probability is the combination of the generative probability of each phrase pair P ( e t s , f v u ) as well as the sum the probabilities over all shorter spans in straight and inverted order 2 where P x ( str ) and P x ( inv ) are the probability of straight and inverted ITG productions.

While the exact calculation of these probabilities can be performed in O ( n 6 ) time, where n is the length of the sentence, this is impractical for all but the shortest sentences. Thus it is necessary to use methods to reduce the search space such as beam-search based chart parsing (Saers et al., 2009) or slice sampling (Blunsom and Cohn, 2010). 3
In this section we propose the use of a look-ahead probability to increase the efficiency of this chart parsing. Taking the example of Saers et al. (2009), spans are pushed onto a different queue based on their size, and queues are processed in ascending or-der of size. Agendas can further be trimmed based on a histogram beam (Saers et al., 2009) or probabil-ity beam (Neubig et al., 2011) compared to the best hypothesis  X  a . In other words, we have a queue dis-cipline based on the inside probability, and all spans a k where I ( a k ) &lt; cI ( X  a ) are pruned. c is a constant describing the width of the beam, and a smaller con-stant probability will indicate a wider beam.
This method is insensitive to the existence of competing hypotheses when performing pruning. Figure 1 (a) provides an example of why it is unwise to ignore competing hypotheses during beam prun-ing. Particularly, the alignment  X  X es/1960s X  com-petes with the high-probability alignment  X  X es/the, X  so intuitively should be a good candidate for prun-ing. However its probability is only slightly higher than  X  X nn  X  ees/1960s, X  which has no competing hy-potheses and thus should not be trimmed.

In order to take into account competing hypothe-ses, we can use for our queue discipline not only the inside probability I ( a k ) , but also the outside proba-bility O ( a k ) , the probability of generating all spans other than a k , as in A* search for CFGs (Klein and Manning, 2003), and tic-tac-toe pruning for word-based ITGs (Zhang and Gildea, 2005). As the cal-culation of the actual outside probability O ( a k ) is just as expensive as parsing itself, it is necessary to approximate this with heuristic function O  X  that can be calculated efficiently.

Here we propose a heuristic function that is de-signed specifically for phrasal ITGs and is com-putable with worst-case complexity of n 2 , compared with the n 3 amortized time of the tic-tac-toe pruning algorithm described by (Zhang et al., 2008a). Dur-ing the calculation of the phrase generation proba-bilities P t , we save the best inside probability I  X  for each monolingual span.
 For each language independently, we calculate for-ward probabilities  X  and backward probabilities  X  . For example,  X  e ( s ) is the maximum probability of the span (0 , s ) of e that can be created by concate-nating together consecutive values of I  X  e :  X  ( s ) = max Backwards probabilities and probabilities over f can be defined similarly. These probabilities are calcu-lated for e and f independently, and can be calcu-lated in n 2 time by processing each  X  in ascending order, and each  X  in descending order in a fashion similar to that of the forward-backward algorithm. Finally, for any span, we define the outside heuristic as the minimum of the two independent look-ahead probabilities over each language
O  X  ( a
Looking again at Figure 1 (b), it can be seen that the relative probability difference between the highest probability span  X  X es/the X  and the spans  X  X nn  X  ees/1960s X  and  X 60/1960s X  decreases, allowing for tighter beam pruning without losing these good hypotheses. In contrast, the relative probability of  X  X es/1960s X  remains low as it is in conflict with a high-probability alignment, allowing it to be dis-carded. While the Bayesian phrasal ITG framework uses the previously mentioned phrase distribution P t dur-ing search, it also allows for definition of a phrase pair prior probability P prior ( e t s , f v u ) , which can ef-ficiently seed the search process with a bias towards phrase pairs that satisfy certain properties. In this section, we overview an existing method used to cal-culate these prior probabilities, and also propose a new way to calculate priors based on substring co-occurrence statistics. 5.1 Word-based Priors Previous research on many-to-many translation has used IBM model 1 probabilities to bias phrasal alignments so that phrases whose member words are good translations are also aligned. As a representa-tive of this existing method, we adopt a base mea-sure similar to that used by DeNero et al. (2008): P m 1 ( e , f ) = M 0 ( e , f ) P pois (
M 0 ( e , f ) =( P m 1 ( f | e ) P uni ( e ) P m 1 ( e | f ) P P pois is the Poisson distribution with the average length parameter  X  , which we set to 0.01. P m 1 is the word-based (or character-based) Model 1 probabil-ity, which can be efficiently calculated using the dy-namic programming algorithm described by Brown et al. (1993). However, for reasons previously stated in Section 3, these methods are less satisfactory when performing character-based alignment, as the amount of information contained in a character does not allow for proper alignment. 5.2 Substring Co-occurrence Priors Instead, we propose a method for using raw sub-string co-occurrence statistics to bias alignments to-wards substrings that often co-occur in the entire training corpus. This is similar to the method of Cromieres (2006), but instead of using these co-occurrence statistics as a heuristic alignment crite-rion, we incorporate them as a prior probability in a statistical model that can take into account mutual exclusivity of overlapping substrings in a sentence.
We define this prior probability using three counts c ( f ) count the total number of sentences in which the substrings e and f occur respectively. c ( e , f ) is a count of the total number of sentences in which the substring e occurs on the target side, and f occurs on the source side. We perform the calculation of these statistics using enhanced suffix arrays, a data structure that can efficiently calculate all substrings in a corpus (Abouelhoda et al., 2004). 4
While suffix arrays allow for efficient calculation of these statistics, storing all co-occurrence counts c ( e , f ) is an unrealistic memory burden for larger corpora. In order to reduce the amount of mem-ory used, we discount every count by a constant d , which we set to 5. This has a dual effect of reducing the amount of memory needed to hold co-occurrence counts by removing values for which c ( e , f ) &lt; d , as well as preventing over-fitting of the training data. In addition, we heuristically prune values for which the conditional probabilities P ( e | f ) or P ( f | e ) are less than some fixed value, which we set to 0.1 for the reported experiments.

To determine how to combine c ( e ) , c ( f ) , and c ( e , f ) into prior probabilities, we performed pre-liminary experiments testing methods proposed by previous research including plain co-occurrence counts, the Dice coefficient, and  X  -squared statistics (Cromieres, 2006), as well as a new method of defin-ing substring pair probabilities to be proportional to bidirectional conditional probabilities
P for all substring pairs where c ( e , f ) &gt; d and where Z is a normalization term equal to The experiments showed that the bidirectional con-ditional probability method gave significantly better results than all other methods, so we adopt this for the remainder of our experiments.

It should be noted that as we are using discount-ing, many substring pairs will be given zero proba-bility according to P cooc . As the prior is only sup-posed to bias the model towards good solutions and not explicitly rule out any possibilities, we linearly interpolate the co-occurrence probability with the one-to-many Model 1 probability, which will give at least some probability mass to all substring pairs
P prior ( e , f ) =  X P cooc ( e , f ) + (1 We put a Dirichlet prior (  X  = 1 ) on the interpolation coefficient  X  and learn it during training. In order to test the effectiveness of character-based translation, we performed experiments over a variety of language pairs and experimental settings. TM (en) 2.80M 3.10M 2.77M 2.13M TM (other) 2.56M 2.23M 3.05M 2.34M LM (en) 16.0M 15.5M 13.8M 11.5M LM (other) 15.3M 11.3M 15.6M 11.9M Tune (en) 58.7k 58.7k 58.7k 30.8k Tune (other) 55.1k 42.0k 67.3k 34.4k Test (en) 58.0k 58.0k 58.0k 26.6k Test (other) 54.3k 41.4k 66.2k 28.5k 6.1 Experimental Setup We use a combination of four languages with En-glish, using freely available data. We selected French-English, German-English, Finnish-English data from EuroParl (Koehn, 2005), with develop-ment and test sets designated for the 2005 ACL shared task on machine translation. 5 We also did experiments with Japanese-English Wikipedia arti-cles from the Kyoto Free Translation Task (Neu-big, 2011) using the designated training and tuning sets, and reporting results on the test set. These lan-guages were chosen as they have a variety of inter-esting characteristics. French has some inflection, but among the test languages has the strongest one-to-one correspondence with English, and is gener-ally considered easy to translate. German has many compound words, which must be broken apart to translate properly into English. Finnish is an ag-glutinative language with extremely rich morphol-ogy, resulting in long words and the largest vocab-ulary of the languages in EuroParl. Japanese does not have any clear word boundaries, and uses logo-graphic characters, which contain more information than phonetic characters.

With regards to data preparation, the EuroParl data was pre-tokenized, so we simply used the to-kenized data as-is for the training and evaluation of all models. For word-based translation in the Kyoto task, training was performed using the provided tok-enization scripts. For character-based translation, no tokenization was performed, using the original text for both training and decoding. For both tasks, we selected as training data all sentences for which both source and target were 100 characters or less, 6 the total size of which is shown in Table 1. In character-based translation, white spaces between words were treated as any other character and not given any spe-cial treatment. Evaluation was performed on tok-enized and lower-cased data.

For alignment, we use the GIZA++ implementa-tion of one-to-many alignment 7 and the pialign im-plementation of the phrasal ITG models 8 modified with the proposed improvements. For GIZA++, we used the default settings for word-based alignment, but used the HMM model for character-based align-ment to allow for alignment of longer sentences. For pialign, default settings were used except for character-based ITG alignment, which used a prob-ability beam of 10  X  4 instead 10  X  10 . 9 For decoding, we use the Moses decoder, 10 using the default set-tings except for the stack size, which we set to 1000 instead of 200. Minimum error rate training was per-formed to maximize word-based BLEU score for all systems. 11 For language models, word-based trans-lation uses a word 5-gram model, and character-based translation uses a character 12-gram model, both smoothed using interpolated Kneser-Ney. 6.2 Quantitative Evaluation Table 2 presents a quantitative analysis of the trans-lation results for each of the proposed methods. As previous research has shown that it is more diffi-cult to translate into morphologically rich languages than into English (Koehn, 2005), we perform exper-iments translating in both directions for all language pairs. We evaluate translation quality using BLEU score (Papineni et al., 2002), both on the word and character level (with n = 4 ), as well as METEOR (Denkowski and Lavie, 2011) on the word level.
It can be seen that character-based translation with all of the proposed alignment improvements greatly exceeds character-based translation using one-to-many alignment, confirming that substring-based information is necessary for accurate align-ments. When compared with word-based trans-lation, character-based translation achieves better, comparable, or inferior results on character-based BLEU, comparable or inferior results on METEOR, and inferior results on word-based BLEU. The dif-ferences between the evaluation metrics are due to the fact that character-based translation often gets words mostly correct other than one or two letters. These are given partial credit by character-based BLEU (and to a lesser extent METEOR), but marked entirely wrong by word-based BLEU.

Interestingly, for translation into English, character-based translation achieves higher ac-curacy compared to word-based translation on Japanese and Finnish input, followed by German,
Source Unk. Word: tasa-arvodirektiivi (13/26) Char: equality directive
Target Unk. Word: yoshiwara no eki (5/26) Char: yoshiwara-juku station
Uncommon Word: world health (5/26) Char: world health organisation and finally French. This confirms that character-based translation is performing well on languages that have long words or ambiguous boundaries, and less well on language pairs with relatively strong one-to-one correspondence between words. 6.3 Qualitative Evaluation In addition, we performed a subjective evaluation of Japanese-English and Finnish-English translations. Two raters evaluated 100 sentences each, assigning a score of 0-5 based on how well the translation con-veys the information contained in the reference. We focus on shorter sentences of 8-16 English words to ease rating and interpretation. Table 3 shows that the results are comparable, with no significant dif-ference in average scores for either language pair.
Table 4 shows a breakdown of the sentences for which character-based translation received a score of at 2+ points more than word-based. It can be seen that character-based translation is properly handling sparsity phenomena. On the other hand, word-based translation was generally stronger with reordering and lexical choice of more common words. 6.4 Effect of Alignment Method In this section, we compare the translation accura-cies for character-based translation using the phrasal ITG model with and without the proposed improve-ments of substring co-occurrence priors and look-ahead parsing as described in Sections 4 and 5.2. ITG +cooc +look 28.94 25.31 24.58 35.71 ITG +cooc -look 28.51 24.24 24.32 35.74 ITG -cooc +look 28.65 24.49 24.36 35.05 ITG -cooc -look 27.45 23.30 23.57 34.50
Figure 5 shows METEOR scores 12 for experi-ments translating Japanese and Finnish. It can be seen that the co-occurrence prior gives gains in all cases, indicating that substring statistics are effec-tively seeding the ITG aligner. The introduced look-ahead probabilities improve accuracy significantly when substring co-occurrence counts are not used, and slightly when co-occurrence counts are used. More importantly, they allow for more aggressive beam pruning, increasing sampling speed from 1.3 sent/s to 2.5 sent/s for Finnish, and 6.8 sent/s to 11.6 sent/s for Japanese. This paper demonstrated that character-based trans-lation can act as a unified framework for handling difficult problems in translation: morphology, com-pound words, transliteration, and segmentation.
One future challenge includes scaling training up to longer sentences, which can likely be achieved through methods such as the heuristic span prun-ing of Haghighi et al. (2009) or sentence splitting of Vilar et al. (2007). Monolingual data could also be used to improve estimates of our substring-based prior. In addition, error analysis showed that word-based translation performed better than character-based translation on reordering and lexical choice, indicating that improved decoding (or pre-ordering) and language modeling tailored to character-based translation will likely greatly improve accuracy. Fi-nally, we plan to explore the middle ground between word-based and character based translation, allow-ing for the flexibility of character-based translation, while using word boundary information to increase efficiency and accuracy.
