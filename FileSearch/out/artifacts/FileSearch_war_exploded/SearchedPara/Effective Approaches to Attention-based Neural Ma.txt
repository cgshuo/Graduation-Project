 Neural Machine Translation (NMT) achieved state-of-the-art performances in large-scale trans-lation tasks such as from English to French (Luong et al., 2015) and English to German (Jean et al., 2015). NMT is appealing since it requires minimal domain knowledge and is conceptually simple. The model by Luong et al. (2015) reads through all the source words until the end-of-sentence symbol &lt; eos &gt; is reached. It then starts emitting one tar-get word at a time, as illustrated in Figure 1. NMT Figure 1: Neural machine translation  X  a stack-ing recurrent architecture for translating a source sequence A B C D into a target sequence X Y Z . Here, &lt; eos &gt; marks the end of a sentence. is often a large neural network that is trained in an end-to-end fashion and has the ability to general-ize well to very long word sequences. This means the model does not have to explicitly store gigantic phrase tables and language models as in the case of standard MT; hence, NMT has a small memory footprint. Lastly, implementing NMT decoders is easy unlike the highly intricate decoders in stan-dard MT (Koehn et al., 2003).

In parallel, the concept of  X  X ttention X  has gained popularity recently in training neural networks, al-lowing models to learn alignments between dif-ferent modalities, e.g., between image objects and agent actions in the dynamic control problem (Mnih et al., 2014), between speech frames and text in the speech recognition task (Chorowski et al., 2014), or between visual features of a picture and its text description in the image caption gen-eration task (Xu et al., 2015). In the context of NMT, Bahdanau et al. (2015) has successfully ap-plied such attentional mechanism to jointly trans-late and align words. To the best of our knowl-edge, there has not been any other work exploring the use of attention-based architectures for NMT.
In this work, we design, with simplicity and ef-fectiveness in mind, two novel types of attention-based models: a global approach in which all source words are attended and a local one whereby only a subset of source words are considered at a time. The former approach resembles the model of (Bahdanau et al., 2015) but is simpler architec-turally. The latter can be viewed as an interesting blend between the hard and soft attention models proposed in (Xu et al., 2015): it is computation-ally less expensive than the global model or the soft attention; at the same time, unlike the hard at-tention, the local attention is differentiable, mak-also examine various alignment functions for our attention-based models.

Experimentally, we demonstrate that both of our approaches are effective in the WMT trans-lation tasks between English and German in both directions. Our attentional models yield a boost of up to 5.0 BLEU over non-attentional systems which already incorporate known techniques such as dropout. For English to German translation, we achieve new state-of-the-art (SOTA) results for both WMT X 14 and WMT X 15, outperforming previous SOTA systems, backed by NMT mod-els and n -gram LM rerankers, by more than 1.0 BLEU. We conduct extensive analysis to evaluate our models in terms of learning, the ability to han-dle long sentences, choices of attentional architec-tures, alignment quality, and translation outputs. A neural machine translation system is a neural network that directly models the conditional prob-ability p ( y | x ) of translating a source sentence, x ,...,x n , to a target sentence, y 1 ,...,y m . 3 A basic form of NMT consists of two components: (a) an encoder which computes a representation s for each source sentence and (b) a decoder which generates one target word at a time and hence de-composes the conditional probability as:
A natural choice to model such a decomposi-tion in the decoder is to use a recurrent neural net-work (RNN) architecture, which most of the re-cent NMT work such as (Kalchbrenner and Blun-som, 2013; Sutskever et al., 2014; Cho et al., 2014; Bahdanau et al., 2015; Luong et al., 2015; Jean et al., 2015) have in common. They, however, dif-fer in terms of which RNN architectures are used for the decoder and how the encoder computes the source sentence representation s .
 Kalchbrenner and Blunsom (2013) used an RNN with the standard hidden unit for the decoder and a convolutional neural network for encoding the source sentence representation. On the other hand, both Sutskever et al. (2014) and Luong et al. (2015) stacked multiple layers of an RNN with a Long Short-Term Memory (LSTM) hidden unit for both the encoder and the decoder. Cho et al. (2014), Bahdanau et al. (2015), and Jean et al. (2015) all adopted a different version of the RNN with an LSTM-inspired hidden unit, the gated re-
In more detail, one can parameterize the proba-bility of decoding each word y j as: with g being the transformation function that out-puts a vocabulary-sized vector. 5 Here, h j is the RNN hidden unit, abstractly computed as: where f computes the current hidden state given the previous hidden state and can be either a vanilla RNN unit, a GRU, or an LSTM unit. In (Kalchbrenner and Blunsom, 2013; Sutskever et al., 2014; Cho et al., 2014; Luong et al., 2015), the source representation s is only used once to initialize the decoder hidden state. On the other hand, in (Bahdanau et al., 2015; Jean et al., 2015) and this work, s , in fact, implies a set of source hidden states which are consulted throughout the entire course of the translation process. Such an approach is referred to as an attention mechanism, which we will discuss next.
 In this work, following (Sutskever et al., 2014; Luong et al., 2015), we use the stacking LSTM architecture for our NMT systems, as illustrated in Figure 1. We use the LSTM unit defined in (Zaremba et al., 2015). Our training objective is formulated as follows: with D being our parallel training corpus. Our various attention-based models are classifed into two broad categories, global and local . These classes differ in terms of whether the  X  X ttention X  is placed on all source positions or on only a few source positions. We illustrate these two model types in Figure 2 and 3 respectively.

Common to these two types of models is the fact that at each time step t in the decoding phase, both approaches first take as input the hidden state h t at the top layer of a stacking LSTM. The goal is then to derive a context vector c t that captures rel-evant source-side information to help predict the current target word y t . While these models differ in how the context vector c t is derived, they share the same subsequent steps.

Specifically, given the target hidden state h t and the source-side context vector c t , we employ a simple concatenation layer to combine the infor-mation from both vectors to produce an attentional hidden state as follows:
The attentional vector  X  h t is then fed through the softmax layer to produce the predictive distribu-tion formulated as:
We now detail how each model type computes the source-side context vector c t . 3.1 Global Attention The idea of a global attentional model is to con-sider all the hidden states of the encoder when de-riving the context vector c t . In this model type, a variable-length alignment vector a t , whose size equals the number of time steps on the source side, is derived by comparing the current target hidden state h t with each source hidden state  X  h s : Here, score is referred as a content-based function for which we consider three different alternatives:  X  Figure 2: Global attentional model  X  at each time step t , the model infers a variable-length align-ment weight vector a t based on the current target state h t and all source states  X  h s . A global context vector c t is then computed as the weighted aver-age, according to a t , over all the source states.
Besides, in our early attempts to build attention-based models, we use a location-based function in which the alignment scores are computed from solely the target hidden state h t as follows: Given the alignment vector as weights, the context vector c t is computed as the weighted average over
Comparison to (Bahdanau et al., 2015)  X  While our global attention approach is similar in spirit to the model proposed by Bahdanau et al. (2015), there are several key differences which reflect how we have both simplified and generalized from the original model. First, we simply use hidden states at the top LSTM layers in both the encoder and decoder as illustrated in Figure 2. Bahdanau et al. (2015), on the other hand, use the concatena-tion of the forward and backward source hidden states in the bi-directional encoder and target hid-den states in their non-stacking uni-directional de-coder. Second, our computation path is simpler; we go from h t  X  a t  X  c t  X   X  h t then make a prediction as detailed in Eq. (5), Eq. (6), and Figure 2. On the other hand, at any time t , Bah-danau et al. (2015) build from the previous hidden state h t  X  1  X  a t  X  c t  X  h t , which, in turn,  X  Figure 3: Local attention model  X  the model first predicts a single aligned position p t for the current target word. A window centered around the source position p t is then used to compute a context vec-tor c t , a weighted average of the source hidden states in the window. The weights a from the current target state h t and those source states  X  h s in the window. goes through a deep-output and a maxout layer al. (2015) only experimented with one alignment function, the concat product; whereas we show later that the other alternatives are better. 3.2 Local Attention The global attention has a drawback that it has to attend to all words on the source side for each tar-get word, which is expensive and can potentially render it impractical to translate longer sequences, e.g., paragraphs or documents. To address this deficiency, we propose a local attentional mech-anism that chooses to focus only on a small subset of the source positions per target word.

This model takes inspiration from the tradeoff between the soft and hard attentional models pro-posed by Xu et al. (2015) to tackle the image cap-tion generation task. In their work, soft attention refers to the global attention approach in which weights are placed  X  X oftly X  over all patches in the source image. The hard attention, on the other hand, selects one patch of the image to attend to at a time. While less expensive at inference time, the hard attention model is non-differentiable and re-quires more complicated techniques such as vari-ance reduction or reinforcement learning to train.
Our local attention mechanism selectively fo-cuses on a small window of context and is differ-entiable. This approach has an advantage of avoid-ing the expensive computation incurred in the soft attention and at the same time, is easier to train than the hard attention approach. In concrete de-tails, the model first generates an aligned position p for each target word at time t . The context vec-tor c t is then derived as a weighted average over the set of source hidden states within the window [ p t  X  D,p t + D ] ; D is empirically selected. 8 Unlike the global approach, the local alignment vector a t sider two variants of the model as below.

Monotonic alignment ( local-m )  X  we simply set p = t assuming that source and target sequences are roughly monotonically aligned. The alignment
Predictive alignment ( local-p )  X  instead of as-suming monotonic alignments, our model predicts an aligned position as follows: W be learned to predict positions. S is the source sen-tence length. As a result of sigmoid , p t  X  [0 ,S ] . To favor alignment points near p t , we place a Gaussian distribution centered around p t . Specif-ically, our alignment weights are now defined as: a t ( s ) = align( h t ,  X  h s ) exp  X  We use the same align function as in Eq. (7) and the standard deviation is empirically set as  X  = D It is important to note that p t is a real nummber; whereas s is an integer within the window cen-tered at p t . 10
Comparison to (Gregor et al., 2015)  X  have pro-posed a selective attention mechanism, very simi-lar to our local attention, for the image generation task. Their approach allows the model to select an image patch of varying location and zoom. We, instead, use the same  X  X oom X  for all target posi-tions, which greatly simplifies the formulation and still achieves good performance. Figure 4: Input-feeding approach  X  Attentional vectors  X  h t are fed as inputs to the next time steps to inform the model about past alignment decisions. 3.3 Input-feeding Approach In our proposed global and local approaches, the attentional decisions are made independently, which is suboptimal. Whereas, in standard MT, a coverage set is often maintained during the translation process to keep track of which source words have been translated. Likewise, in atten-tional NMTs, alignment decisions should be made jointly taking into account past alignment infor-mation. To address that, we propose an input-feeding approach in which attentional vectors  X  h t are concatenated with inputs at the next time steps ing such connections are two-fold: (a) we hope to make the model fully aware of previous align-ment choices and (b) we create a very deep net-work spanning both horizontally and vertically.
Comparison to other work  X  Bahdanau et al. (2015) use context vectors, similar to our c t , in building subsequent hidden states, which can also achieve the  X  X overage X  effect. However, there has not been any analysis of whether such connections are useful as done in this work. Also, our approach is more general; as illustrated in Figure 4, it can be applied to general stacking recurrent architectures, including non-attentional models.

Xu et al. (2015) propose a doubly attentional approach with an additional constraint added to the training objective to make sure the model pays equal attention to all parts of the image during the caption generation process. Such a constraint can also be useful to capture the coverage set effect in NMT that we mentioned earlier. However, we chose to use the input-feeding approach since it provides flexibility for the model to decide on any attentional constraints it deems suitable. We evaluate the effectiveness of our models on the WMT translation tasks between English and Ger-man in both directions. newstest2013 (3000 sen-tences) is used as a development set to select our hyperparameters. Translation performances are reported in case-sensitive BLEU (Papineni et al., 2002) on newstest2014 (2737 sentences) and new-stest2015 (2169 sentences). Following (Luong et al., 2015), we report translation quality using two types of BLEU: (a) tokenized 12 BLEU to be com-BLEU to be comparable with WMT results. 4.1 Training Details All our models are trained on the WMT X 14 train-ing data consisting of 4.5M sentences pairs (116M English words, 110M German words). Similar to (Jean et al., 2015), we limit our vocabularies to be the top 50K most frequent words for both lan-guages. Words not in these shortlisted vocabular-ies are converted into a universal token &lt; unk &gt; .
When training our NMT systems, following (Bahdanau et al., 2015; Jean et al., 2015), we fil-ter out sentence pairs whose lengths exceed 50 words and shuffle mini-batches as we proceed. Our stacking LSTM models have 4 layers, each with 1000 cells, and 1000-dimensional embed-dings. We follow (Sutskever et al., 2014; Luong et al., 2015) in training NMT with similar set-tings: (a) our parameters are uniformly initialized in [  X  0 . 1 , 0 . 1] , (b) we train for 10 epochs using plain SGD, (c) a simple learning rate schedule is employed  X  we start with a learning rate of 1; after 5 epochs, we begin to halve the learning rate ev-ery epoch, (d) our mini-batch size is 128, and (e) the normalized gradient is rescaled whenever its norm exceeds 5. Additionally, we also use dropout for our LSTMs as suggested by (Zaremba et al., 2015). For dropout models, we train for 12 epochs and start halving the learning rate after 8 epochs.
Our code is implemented in MATLAB. When System Ppl BLEU Existing NMT systems RNNsearch (Jean et al., 2015) 16.5 RNNsearch + unk replace (Jean et al., 2015) 19.0 Our NMT systems Base 10.6 11.3 Base + reverse 9.9 12.6 ( +1.3 ) Base + reverse + dropout 8.1 14.0 ( +1.4 ) Ensemble 8 models + unk replace 23.0 ( +2.1 ) running on a single GPU device Tesla K40, we achieve a speed of 1K target words per second. It takes 7 X 10 days to completely train a model. 4.2 English-German Results We compare our NMT systems in the English-German task with various other systems. These include the winning system in WMT X 14 (Buck et al., 2014), a phrase-based system whose language models were trained on a huge monolingual text, the Common Crawl corpus. For end-to-end neu-ral machine translation systems, to the best of our knowledge, (Jean et al., 2015) is the only work ex-perimenting with this language pair and currently the SOTA system. We only present results for some of our attention models and will later ana-lyze the rest in Section 5.

As shown in Table 1, we achieve progressive improvements when (a) reversing the source sen-tence, + 1 . 3 BLEU, as proposed in (Sutskever et al., 2014) and (b) using dropout, + 1 . 4 BLEU. On top of that, (c) the global attention approach gives a significant boost of + 2 . 8 BLEU, making our model slightly better than the base attentional sys-tem of Bahdanau et al. (2015) (row RNNSearch ). When (d) using the input-feeding approach, we seize another notable gain of + 1 . 3 BLEU and out-perform their system. The local attention model with predictive alignments (row local-p ) proves to be even better, giving us a further improve-ment of + 0 . 9 BLEU on top of the global attention model. It is interesting to observe the trend pre-viously reported in (Luong et al., 2015) that per-plexity strongly correlates with translation quality. In total, we achieve a significant gain of 5.0 BLEU points over the non-attentional baseline, which al-ready includes known techniques such as source reversing and dropout.

The unknown replacement technique proposed in (Luong et al., 2015; Jean et al., 2015) yields another nice gain of + 1 . 9 BLEU, demonstrating that our attentional models do learn useful align-ments for unknown works. Finally, by ensembling 8 different models of various settings, e.g., using different attention approaches, with and without dropout etc., we were able to achieve a new SOTA result of 23 . 0 BLEU, outperforming the existing best system (Jean et al., 2015) by + 1 . 4 BLEU. System BLEU SOTA  X  NMT + 5-gram rerank (MILA) 24.9 Our ensemble 8 models + unk replace 25.9 Table 2: WMT X 15 English-German results  X  NIST BLEU scores of the existing WMT X 15 SOTA system and our best one on newstest2015.

Latest results in WMT X 15  X  despite the fact that our models were trained on WMT X 14 with slightly less data, we test them on newstest2015 to demon-strate that they can generalize well to different test sets. As shown in Table 2, our best system es-Table 3: WMT X 15 German-English results  X  performances of various systems (similar to Ta-ble 1). The base system already includes source reversing on which we add global attention, drop out, input feed ing, and unk replacement. tablishes a new SOTA performance of 25 . 9 BLEU, outperforming the existing best system backed by NMT and a 5-gram LM reranker by + 1 . 0 BLEU. 4.3 German-English Results We carry out a similar set of experiments for the WMT X 15 translation task from German to En-glish. While our systems have not yet matched the performance of the SOTA system, we never-theless show the effectiveness of our approaches with large and progressive gains in terms of BLEU as illustrated in Table 3. The attentional mech-anism gives us + 2 . 2 BLEU gain and on top of that, we obtain another boost of up to + 1 . 0 BLEU from the input-feeding approach. Using a better alignment function, the content-based dot product one, together with dropout yields another gain of + 2 . 7 BLEU. Lastly, when applying the unknown word replacement technique, we seize an addi-tional + 2 . 1 BLEU, demonstrating the usefulness of attention in aligning rare words. We conduct extensive analysis to better understand our models in terms of learning, the ability to han-dle long sentences, choices of attentional archi-tectures, and alignment quality. All models con-sidered here are English-German NMT systems tested on newstest2014. 5.1 Learning curves We compare models built on top of one another as listed in Table 1. It is pleasant to observe in Fig-ure 5 a clear separation between non-attentional and attentional models. The input-feeding ap-Figure 5: Learning curves  X  test cost ( ln perplex-ity) on newstest2014 for English-German NMTs as training progresses. proach and the local attention model also demon-strate their abilities in driving the test costs lower. The non-attentional model with dropout (the blue + curve) learns slower than other non-dropout models, but as time goes by, it becomes more ro-bust in terms of minimizing test errors. 5.2 Effects of Translating Long Sentences We follow (Bahdanau et al., 2015) to group sen-tences of similar lengths together and compute a BLEU score per group. As demonstrated in Fig-ure 6, our attentional models are more effective than the other non-attentional model in handling long sentences: the translation quality does not de-grade as sentences become longer. Our best model (the blue + curve) outperforms all other systems in all length buckets. Figure 6: Length Analysis  X  translation qualities of different systems as sentences become longer. 5.3 Choices of Attentional Architectures We examine different attention models ( global, local-m, local-p ) and different alignment func-tions ( location, dot, general, concat ) as described in Section 3. Due to limited resources, we can-not run all the possible combinations. However, System Ppl global (location) 6.4 18.1 19.3 (+1.2) global (dot) 6.1 18.6 20.5 (+1.9) global (general) 6.1 17.3 19.1 (+1.8) local-m (dot) &gt; 7.0 x x local-m (general) 6.2 18.6 20.4 (+1.8) local-p (dot) 6.6 18.0 19.6 (+1.9) local-p (general) 5.9 19 20.9 (+1.9) Table 4: Attentional Architectures  X  perfor-mances of different attentional models. We trained two local-m (dot) models; both have ppl &gt; 7 . 0 . results in Table 4 do give us some idea about dif-ferent choices. The location-based function does not learn good alignments: the global (location) model can only obtain a small gain when perform-ing unknown word replacement compared to using other alignment functions. 14 For content-based functions, our implementation of concat does not yield good performances and more analysis should ing to observe that dot works well for the global attention and general is better for the local atten-tion. Among the different models, the local atten-tion model with predictive alignments ( local-p ) is best, both in terms of perplexities and BLEU. 5.4 Alignment Quality A by-product of attentional models are word align-ments. While (Bahdanau et al., 2015) visualized alignments for some sample sentences and ob-served gains in translation quality as an indica-tion of a working attention model, no work has as-sessed the alignments learned as a whole. In con-trast, we set out to evaluate the alignment quality using the alignment error rate (AER) metric. Given the gold alignment data provided by RWTH for 508 English-German Europarl sen-tences, we  X  X orce X  decode our attentional models to produce translations that match the references. We extract only one-to-one alignments by select-ing the source word with the highest alignment Table 6: AER scores  X  results of various models on the RWTH English-German alignment data. weight per target word. Nevertheless, as shown in Table 6, we were able to achieve AER scores com-parable to the one-to-many alignments obtained
We also found that the alignments produced by local attention models achieve lower AERs than those of the global one. The AER obtained by the ensemble, while good, is not better than the local-m AER, suggesting the well-known observa-tion that AER and translation scores are not well correlated (Fraser and Marcu, 2007). Due to space constraint, we can only show alignment visualiza-5.5 Sample Translations We show in Table 5 sample translations in both directions. It it appealing to observe the ef-fect of attentional models in correctly translat-ing names such as  X  X iranda Kerr X  and  X  X oger Dow X . Non-attentional models, while producing sensible names from a language model perspec-tive, lack the direct connections from the source side to make correct translations.

We also observed an interesting case in the second English-German example, which requires translating the doubly-negated phrase,  X  X ot in-compatible X . The attentional model correctly produces  X  X icht ... unvereinbar X ; whereas the non-attentional model generates  X  X icht vereinbar X , model also demonstrates its superiority in trans-lating long sentences as in the last example. In this paper, we propose two simple and effec-tive attentional mechanisms for neural machine translation: the global approach which always looks at all source positions and the local one that only attends to a subset of source positions at a time. We test the effectiveness of our mod-els in the WMT translation tasks between En-glish and German in both directions. Our local attention yields large gains of up to 5 . 0 BLEU over non-attentional models that already incorpo-rate known techniques such as dropout. For the English to German translation direction, our en-semble model has established new state-of-the-art results for both WMT X 14 and WMT X 15.

We have compared various alignment functions and shed light on which functions are best for which attentional models. Our analysis shows that attention-based NMT models are superior to non-attentional ones in many cases, for example in translating names and handling long sentences. We gratefully acknowledge support from a gift from Bloomberg L.P. and the support of NVIDIA Corporation with the donation of Tesla K40 GPUs. We thank Andrew Ng and his group as well as the Stanford Research Computing for letting us use their computing resources. We thank Rus-sell Stewart for helpful discussions on the models. Lastly, we thank Quoc Le, Ilya Sutskever, Oriol Vinyals, Richard Socher, Michael Kayser, Jiwei Li, Panupong Pasupat, Kelvin Gu, members of the Stanford NLP Group and the annonymous review-ers for their valuable comments and feedback.
