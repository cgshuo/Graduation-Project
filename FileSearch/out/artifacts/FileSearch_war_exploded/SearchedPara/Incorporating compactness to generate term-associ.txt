 1. Introduction
Web ontologies described in RDF Schema and the OWL Web Ontology Language provide shared terms search.
 employee X  X , Person and Employee are two query-relevant terms in an ontology, and the relation For example, in Fig. B.1 , there is an indirect relation between  X  query-relevant terms with direct relations or indirect but close relations are preferred in a snippet. tions is as small as possible. For example, in Fig. B.1 ,if should find a relation from Person to AcademicStaff via Employee ence (e.g. the relation rdfs:subClassOf is preferred than the relation is measured by the sum of the reciprocal of the preference of each constituent term association. are usually ten snippets to be shown in a page.
 r-radius subgraphs , which preserves all close relations between terms. sub-snippets and assemble them to form the result.
 pet. Section 7 evaluates our approach. Section 8 gives the conclusion and future work. 2. Related work 2.1. Ontology search ments. Among these ontology search engines, Swoogle, 3 Watson, this is the most common type of user interactions. 2.2. Snippet generation rithm can not effectively generate snippets for ontology search.
 but also their close relations. 2.3. Ontology summarization are members of the same concept sets.
 be biased towards queries. 2.4. Keyword search on (semi-)structured data connect these elements.
 rank them. But in our case, we expect that there is only one relevant piece. 3. Term association graph 3.1. Ontology and RDF sentence
In RDF, identifiers consist of three disjoint sets: URIs ( U ), blank nodes ( U [ B [ L ). An RDF graph is a set of RDF triples.
 Definition 1. [Ontology] An ontology O , h ID ; T ; R i consists of: ID, a namespace URI as its identification, T , a set of terms that are classes, properties, or individuals identified by URIs in the namespace ID, R , an RDF graph describing the terms in T .
 et al., 2007 ) to encapsulate these triples as a whole.
 transitive.

Fig. B.2 . 3.2. Preference of RDF sentences them is not possible ( Hayes and Gutierrez, 2004 ). We use a simple heuristic rule to this issue.
An RDF sentence S is a schema sentence, if there is an RDF triple s 2 S satisfying: pred( s )= rdf: type and obj( s )= C , where C is a class defined by OWL or RDFS ontology ( pred( s )= p , where p is a non-annotation property defined by OWL or RDFS ontology
For example, h a , rdfs: seeAlso , b i is not a schema sentence, as all sentences listed in the right hand side of Fig. B.2 are schema sentences.
For an RDF sentence S , the following equation denotes its preference: where 0.5 &lt; a &lt; 1 and SchemaSents is the set of all schema sentences. 3.3. Term association achieve this, we propose a notion of term association that operates on the concept of RDF sentence.
Definition 3. (Term Association) For two terms t 1 and t 2 sentences in R , in each of which there is a directed path connecting t For example, in Fig. B.2 , there is a directed path connecting Project and Person is { S 6 }.

The preference of a term association N ( t 1 , t 2 , R ) is given by: tween its constituent terms.

Definition 4. (Term Association Graph (TAG)) Given an ontology O , its term association graph G  X  O  X  consists of: V , T  X  O  X  , the set of nodes,
E # V V , the set of undirected edges, where h v 1 , v 2 i2 E if and only if N  X 
Lbl V : V  X  2 W , a function that labels each v 2 V with a set of words collected from its local name set of words collected from local names and labels of all terms.

Lbl E : E  X  2 N , a function that labels each h v 1 , v 2
Wt E : E # R , a weighting function, Wt E  X h v 1 ; v 2 i X   X  1 4. Maximal r -radius subgraph 4.1. Motivation graphs. In this subsection, we will give a solid discussion.
 imal r -radius subgraphs, in which the greatest distance between any pair of vertices, i.e. diameter, pair of terms whose distance is within 2 r must be contained in some maximal r -radius subgraphs. units for data organization. And keywords in the query can locate them quickly with an index. 4.2. Subgraph decomposition we introduce the concept of r -radius subgraph, which allows subgraphs whose radiuses less than r.
Definition 5. ( r -Radius subgraph) G i is an r -radius subgraph of G , iff G equal to r . graph is introduced.

Definition 6. (Maximal r -radius subgraph) Given a graph G and an r -radius subgraph G subgraph if there is no other r -radius subgraph G j such that G graph are contained in the large one. If true, remove this small one in line 19. Algorithm 1. The algorithm MRR _ extraction to extract all maximal r -radius subgraphs from the graph G 1 G is a set; 2 foreach node v i in V ( G ) do 3 V i :  X  breadth _ first _ search ( G , v i , r ); 4 G i is a subgraph of G induced by V i ; 5 insert G i into G ; 6 end 7 n :  X j G j ; 8 for every pair of graphs G i and G j in G do 9 G i is the graph with fewer nodes; 10 G j is the graph with more nodes; 11 isSubSet = true ; 12 foreach node v i in V( G i ) do 13 if v i R V( G j ) then 14 isSubSet :  X  false ; 15 break; 16 end 17 end 18 if isSubSet == true then 19 remove G i from G ; 20 end 21 end 22 return G ; number of nodes in the graph.
 of all maximal r -radius subgraphs is less than or equal to the number of nodes of the original graph. For example, for the TAG in Fig. B.2 , we generate five maximal 1-radius subgraphs in Fig. B.3 . sely-related terms.

Theorem 2. Given a graph G, its all maximal r-radius subgraphs MRR(G) have two important properties: " G i 2 MRR(G), " v i ,v j 2 V(G i ), d(v i ,v j ) 6 2r, where d(v 2. All pairs of nodes within 2r must be contained in some maximal r-radius subgraph, i.e. " $ G i 2 MRR(G), v i ,v j 2 V(G i )) .
 5. Sub-snippet generation 5.1. Query-relevant maximal r-radius subgraph
For a query Q , i.e. a set of keywords, a maximal r -radius subgraph G in Q that matches at least one node in G i . We call these keywords  X  X  X elevant keywords X  X . Formally, G $ q 2 Q , $ v 2 V( G i ), q 2 Lbl V ( v ); The relevant keywords of G
Relevant keywords in subgraph (c) are  X  X  X erson X  X  and  X  X  X taff X  X . 5.2. Sub-snippet tions are preserved in sub-snippets.

Definition 7. [Sub-snippet] Given a maximal r -radius subgraph G snippet G sub is a connected subgraph of G i satisfying " q 2 Q nodes Person and AcademicStaff are matched with  X  X  X erson X  X  and  X  X  X taff X  X , respectively. the Formula 4 , a compact sub-snippet (with large compactness) should be with a small graph weight is the sum of weights of all edges: 5.3. An algorithm for generating compact sub-snippets
In a maximal r -radius subgraph G i , for each relevant keyword q satisfies q i 2 Lbl V ( v ), i.e. its label is matched with q the problem of finding the compact sub-snippet is transformed to the following problem: given a graph G required node sets { V 1 , V 2 , ... , V g }, to find G sub Algorithm 2. The algorithm GroupSteiner for computing a compact sub-snippet in a weighted graph 1 foreach v 1 2 V 1 do 2 foreach V i 2 { V 2 , ... , V g } do 3 foreach v i 2 V i do 4 p v 5 end 6 p v 7 end 9 end 10 G V 1 :  X  min v 1 2 V 1 j Wt G  X  G v 1  X j ; 11 G sub :  X  find a spanning tree  X  G V 1  X  ; 12 return G sub ;
Algorithm 2 computes a compact sub-snippet in a weighted graph. In lines 1 X 9, for each node (Dijkstra X  X  algorithm) from v 1 to each other node set is found, and let G graph is computed as the sub-snippet to be outputted.
 computed in O ( nlogn + m ) steps. It is executed n 1 ( n ated by our algorithm is shown in the dashed ellipse. 6. Snippet generation 6.1. Requirements for snippet any) between two terms corresponding to the pair of keywords.
 TAG). Given a TAG G , the compactness of the snippet G S is more compact.
 achieved by defining a normalized metric named snippet relevance. Specifically, given a snippet G the snippet relevance is We incorporate both snippet relevance and snippet compactness into a single quality function: them into the final snippet without violating the length constraint (the number of terms). 6.2. Sub-snippet assembling terminated.
 result is shown in Fig. B.4 . 7. Evaluation methods. 7.1. Feasibility ontology consists of 554 terms described by 2179 RDF triples, or 1917 RDF sentences. line. All experiments are performed on a IBM server with two 4-core Xeon E7400 (2.4G) and 24GB memory. 7.1.1. Usability of maximal 1-radius subgraphs of subgraph extraction for reducing the graph scales.
 graphs have more than 100, 1000 and 10,000 nodes, respectively.
 only subgraphs whose node number is between 100 and 1000 by trading off between time and space. 7.1.2. Response time unacceptable. 7.2. Effectiveness 7.2.1. Competitors the snippet, such as Swoogle ( Ding et al., 2005 ) and Watson ( d X  X quin et al., 2007 ). relevant ones to form the snippet, (e.g., Zhang et al., 2007; Penin et al., 2008 ). also their relations.
 7.2.2. Participants uation. All these participants come from two Chinese universities and two Chinese companies. 7.2.3. Experimental design ment. Statement 4 (Overall) asks their overall experience. 7.2.4. Experimental results queries has more than five keywords. The longest query contains 11 keywords. relevance is the essential factor for the snippet.
 compact sub-snippet is useful in our context.
 7.3. Parameter selection the degree of users X  satisfaction. 7.3.1. Competitors in the quality metric.
 7.3.2. Participants and four Chinese companies. 7.3.3. Experimental design previous experiment. 7.3.4. Experimental results pactness also takes effects in the quality metric, and we recommend that b = 0.25. 8. Conclusion and future work engine. 20 The technical contributions of this paper are summarized as follows: ciations is incorporated into the edge weight of the graph. algorithm is proposed to divide each TAG into some maximal r -radius subgraphs. association view snippet considering the query relevance and the compactness. esting research work to find other algorithms to assemble sub-snippets into the final result. Acknowledgements Appendix A. Proof of Theorem 1 subgraph G i , there exists a node v i whose distance to any other node in G rad( G i ) = min v 2 V( G
Next, we prove that all r -radius subgraphs in the result are maximal. That is, for each subgraph G other subgraph G j in the result such that G i is a subgraph of G of G induced by V i (line 4). That is, for any pair of nodes
E( G ) 6 # E( G j ). So G i is maximal.
 r -radius subgraph that are not included in our result. According to the definition, rad G the node v 0 i , lines 3 X 4 generate a subgraph G i . Because line 3 computes all nodes that
Moreover, as G i is a subgraph of G induced by V  X  G i  X  ; E G the result in line 8 X 21, in this situation there is another graph G in the result such that G 0 i is a subgraph of it. Therefore, G the time complexity of lines 12 X 17 is O ( n ). Therefore, the time complexity of lines 8 X 28 is O ( n complexity of the entire algorithm. h Appendix B. Proof of Theorem 2
Proof. 1. As G i is a maximal r -radius subgraph, the radius of ( G eccentricity is less than or equal to r. For every two nodes d ( v i , v j ) 6 d ( v , v i )+ d ( v , v j ) 6 2 r . 2. If the distance between v i and v j is less than or equal to 2 r , there exists a node has a path to v j within r steps. As our algorithm generates a r -radius subgraph from are included in the graph. Thus, the nodes v i and v j must be in some maximal r -radius graph. h References
