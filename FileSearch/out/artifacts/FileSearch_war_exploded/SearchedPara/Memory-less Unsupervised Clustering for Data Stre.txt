 The challenge of clustering on data stream is the ability to deal with the continuous incoming data which are unlimited and unable to store all of them. To manage the storage crisis, the data must be processed in a single pass or only once after the arrival and are thrown away outer. All previously clustered data must be mathematically captured in terms of group features since those data are already non-existent.
The proposed data stream clustering algorithm is divided into two main phases, namely on-line and off-line. In the on-line phase, new micro-cluster features are proposed. Our micro-cluster features better r epresent the arriving data than the traditional micro-cluster features. In the off-line phase, the prepared micro-clusters are categorized by their densi-ties. The proposed method can generate the final clusters with different shapes and densities. Based on entropy, pu-rity, Jaccard coefficient, and Rand statistic measures, our algorithm being applied on synthetic and real data outper-forms the other previous data stream clustering algorithms. H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval X  Clustering ; F.1.2 [ Computation by Abstract Devices ]: Modes of Computation X  Online com-putation Theory, Algorithms, Experimentation Data Stream Clustering, Micro-cluster, Online Incremen-tally
In recent applications, the data set are accumulated at a rapidly rate referred to as data stream, i.e., a continuous create a set of initial micro-clusters on a set of initial points using a standard K -means clustering algorithm. It is diffi-cult for CluStream to discover clusters with arbitrary shapes and unable to deal with noise. Moreover, the number K of clusters must be known a priori.

In DenStream [3], a micro-clusters is represented in the form of a spherical shape of the same size. The main differ-ent from CluStream is the criteria for the off-line clustering which discover the clusters with an arbitrary shape instead of a spherical shape. They also first need to create the ini-tial micro-clusters on the initial points using the DBSCAN clustering algorithm [4].

Other data stream clustering algorithms [2,8,10,11] based on micro-cluster have been proposed and compared with CluStream and DenStream methods. These algorithms tried to improve the methods in the off-line clustering phase.
In this paper, we introduced the new micro-cluster fea-tures which represent the members in the micro-cluster in the form of a hyper-elliptical shape. The performance of our algorithm is compared to two main existing algorithms, CluStream and DenStream. Our proposed ideas and funda-mental concepts are presented in the next section.
In our approach, a micro-cluster is represented in the form of an ellipsoidal shape in arbitrary direction. To explain our concept, only a 2-dimensional ellipsoid function and its fea-sibility are discussed first. Fig. 2 shows the conceptual micro-cluster bounda ry which is an ellipsoid with principal directions q 1 and q 2 . These principal directions can be de-fined by the eigenvectors of covariance matrix of the data in micro-cluster. Let x =[ x 1 x 2 ] T be a data point which can be transformed into y =[ y 1 y 2 ] T and y i = q T i x , i =1 , 2. We assume that the length along with these directions are l 1 and l 2 , respectively. With respect to q 1 and q 2 directions, the equation of an ellipsoid can be written as follows:
Since the eigenvalues represent the variances of the data projected on the corresponding eigenvector, the lengths l 1 and l 2 can be determined by k and  X  2 are the eigenvalues that correspond to the eigen-vectors q 1 and q 2 , respectively. Hence, equation (1) can be transformed into the following form: y tion can be written as the following: where  X  1 , ...,  X  j , ... X  d are the eigenvalues corresponding to the eigenvectors q 1 , ..., q j , ..., q d , respectively.
Generally, let x =[ x 1 ...x d ] T be a d -dimensional data vec-tor. The covariance matrix of the set of data vectors is a d -by-d matrix R as shown by where E [ . ] represents the expected value or mean value.
Let the eigenvalues of the d -by-d matrix R be denoted by  X  =diag[  X  1 , ...,  X  j , ...,  X  d ], and the associated eigenvec-
In streaming or on-line environment, the data impose a one-pass constraint. The summary information are repre-sented by the features of micro-cluster as defined in Defini-tion 1 and Definition 2. These information must be stored and updated during the learning process. To update the value of R i , c i ,and n i based on only the new incoming data, these features must be written in the forms of the following recursive functions.

For any arbitrary cluster i (both elliptical micro-cluster or and R ( new ) i be the new features after being updated. When an incoming data vector x arr is deterministically assigned to a cluster, the new features of the cluster can be incrementally adjusted as follows:
The boundary and size of a cluster is determined by the value of k in equation (10). The greater k leads to the larger boundary. The boundary of a micro-cluster with an arbi-trary center is defined in Definition 3.

Definition 3. The boundary of an elliptical micro-cluster i is a set of vectors x defined by the following equation: where k  X  is a positive real number.

Since the direction of each elliptical micro-cluster may be different, the Euclidean distance is not the real distance. In this paper, we proposed another distance measure be-tween two elliptical micro-clusters as the distance between the boundaries of both micro-clusters. Let Emc 1 ( R 1 , c 1 ,n 1 ) and Emc 2 ( R 2 , c 2 ,n 2 ) be the features of these two elliptical micro-clusters. The boundary of each micro-cluster deter-mined by a constant k  X  = k asshowninFig.3isfoundby the two following equations:
Suppose b 1 is a point on the boundary of the first elliptical micro-cluster. The direction from c 1 to b 1 is the same as the direction from c 1 to c 2 . Similarly, b 2 is a point on the boundary of the second elliptical micro-cluster. The direction from c 2 to b 2 is the same as the direction from c 1 to c 2 .Noticethat c 1 , c 2 , b 1 and b 2 lie on the same straight line. In order to find the distance between both boundaries, let where || . || represents Euclidean norm. If the values of L , l 1 and l 2 are known, then the distance between the boundaries can be simply determined by
Therefore, the distance between the boundaries of two elliptical micro-clusters can be computed by:
Note that the distance d between two elliptical micro-clusters can be any real number. If d&lt; 0, both elliptical micro-clusters are intersecting as shown in Fig 3(a). In Fig 3(b), both elliptical micro-clusters are separate since d&gt; 0.
The described concept and definitions will be used in the proposed algorithm of the next section.
The proposed algorithm for data steam clustering is di-vided into two processes, on-line process and off-line process.
In this process, the features of an elliptical micro-cluster and a spares micro-cluster are defined in Definition 1 and Definition 2, respectively. When the data arrive, there are four possible situations: (1) the features of an elliptical micro-cluster are updated; (2) the features of a sparse micro-cluster are updated; (3) a new elliptical micro-cluster is cre-ated and a sparse micro-cluster is deleted; or (4) a new sparse micro-cluster is created.

If the arriving data point falls within the boundary of an elliptical micro-cluster. The boundary of the elliptical-micro-cluster is defined in Definition 3. The scale of the boundary depends on the constant k  X  . In our proposed al-gorithm, the arriving data point will be assigned to the el-liptical micro-cluster having highest density area.
If the arriving data point does not fall within the bound-ary of the elliptical micro-cluster but within the boundary of the sparse micro-cluster, the features of this sparse micro-cluster are updated instead. Whenever the features of the compact elliptical micro-cluster then it will be labelled as the same cluster. Moreover, if it is also compact then it can expand to other elliptical micro-clusters.

After that, the other new clusters are created by expand-ing the rest non-labelled elliptical micro-clusters. The non-labelled elliptical micro-cluster which connect to the last la-belled micro-cluster will be labelled as the same cluster and expanded to other non-labelled elliptical micro-clusters.
Lastly, if the sparse micro-clusters connects to an ellip-tical micro-cluster, then mark it as the same cluster label, otherwise mark it as noise. The description of the off-line clustering process is shown in Algorithm 2.
In our experiment, the proposed algorithm is compared with CluStream and DenStream. In each algorithm, we tried to set fairly parameters summarized in Table 1.
The experimental results showed that our proposed algo-rithm outperformed the existing algorithms for dealing with noise as shown in Fig 4-6. The blue dot (.) symbols represent the points which are contained in one of all micro-clusters. The red plus (+) symbols represent the data points which are treated as outliers. The circular and elliptical lines rep-resent the micro-clusters boundaries. The stream speed was set as 100 points per time stamp.

A set of initial points was unnecessary in our approach. In contrast, the initial 500 points were needed to create a set of initial micro-clusters in CluStream and DenStream as shown in Fig 4(a) and Fig 5(a), respectively. After 3150 points arrived, the micro-clusters for three algorithms were repre-sented in Fig 4(b), Fig 5(b) and Fig 6(b). CluStream created too many micro-clusters which were not compact for repre-senting the members in the micro-cluster. In DenStream , the mistake was occurred because the micro-cluster radius was barely changed by the arriving data point, specifically, in the micro-cluster with a large number of points. Thus, a large amount of points were contained in the micro-cluster even if they were outside the boundary. Evidently, the pro-Table 1: The used parameters for three algorithms. t
The importance parameter setting in our algorithm was the initial radius ( r  X  ) when the new sparse micro-cluster was created. Figures 7 showed the results with the different threshold radii. The larger radius provided the lower number of micro-clusters as in Fig 7(a) and (c). If the threshold radius was too small, the clusters were possibly separated by the tiny distance between micro-clusters as shown in Fig 7(b).

Although the threshold radius was chosen in advance, it just affected the earliest stage where an elliptical micro-clusters was created. When the number of data points in the elliptical micro-cluster increased, its shape was converted to the compact elliptical shape ( n  X  2 n  X  )whichwasefficient for representing the members in the micro-cluster without effecting of the chosen threshold radius. In our experiment, the used real data set is KDD-CUP X 99 Network Intrusion Detection stream dataset [13] which has been widely used to evaluate accuracy in the existing data stream clustering algorithms. The used data set contains 494020 connections which are the sequences of TPC packets including the total 42 available attributes (all 34 continuous attributes are used). Each connection was labelled as one of 23 attack-types.

The parameters in three algorithms were carefully chosen as follows: CluStream: InitN =1000, InitK =500, t RMS =2 and K =23. DenStream: InitN =1000, =16,  X  =10. Pro-posed algorithm: r  X  =16, n  X  =10, k  X  =2. Three algorithms were compared by four measures of cluster validity [12], i.e., entropy, purity, rand statistic and jaccard coefficient.
Entropy and purity are cluster validities based on classifi-cation oriented measures. The entropy was used to measure class distribution of data in each cluster, i.e. the lower en-tropy is better. Fig 8(a) showed that the entropy in the pro-posed algorithm was always less than the entropy in CluS-tream at any times and was less than the entropy in Den-Stream in most of the times.

The purity was used to measure that a cluster contains objects of a single class, i.e. the higher purity is better. Fig 8(b) showed that the purity in the proposed algorithm was often higher than the purity in CluStream and DenStream,
