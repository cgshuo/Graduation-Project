 A verb plays a primary role in conveying the meaning of a sentence. Capturing the sense of a verb is essential for natural language processing (NLP), and thus lexical resources for verbs play an important role in NLP.
 Verb classes are one such lexical resource. Manually-crafted verb classes have been devel-oped, such as Levin X  X  classes (Levin, 1993) and their extension, VerbNet (Kipper-Schuler, 2005), in which verbs are organized into classes on the basis of their syntactic and semantic behavior. Such verb classes have been used in many NLP ap-plications that need to consider semantics in par-ticular, such as word sense disambiguation (Dang, 2004), semantic parsing (Swier and Stevenson, 2005; Shi and Mihalcea, 2005) and discourse pars-ing (Subba and Di Eugenio, 2009).

There have also been many attempts to auto-matically acquire verb classes with the goal of ei-ther adding frequency information to an existing resource or of inducing similar verb classes for other languages. Most of these approaches assume that all target verbs are monosemous (Stevenson and Joanis, 2003; Schulte im Walde, 2006; Joa-nis et al., 2008; Li and Brew, 2008; Sun et al., 2008; Sun and Korhonen, 2009; Vlachos et al., 2009; Parisien and Stevenson, 2010; Parisien and Stevenson, 2011; Falk et al., 2012; Lippincott et al., 2012; Reichart and Korhonen, 2013; Sun et al., 2013). This monosemous assumption, however, is not realistic because many frequent verbs actually have multiple senses. Moreover, to the best of our knowledge, none of the following approaches at-tempt to quantitatively evaluate soft clusterings of verb classes induced by polysemy-aware unsuper-vised approaches (Korhonen et al., 2003; Lapata and Brew, 2004; Li and Brew, 2007; Schulte im Walde et al., 2008).

In this paper, we propose an unsupervised method for inducing verb classes that is aware of verb polysemy. Our method consists of two clustering steps: verb-specific semantic frames are first induced by clustering verb uses in a cor-pus and then verb classes are induced by clus-tering these frames. By taking this step-wise ap-proach, we can not only induce verb classes with frequency information from a massive amount of verb uses in a scalable manner, but also deal with verb polysemy.

Our novel contributions are summarized as fol-lows: As stated in Section 1, most of the previous studies on verb clustering assume that verbs are monose-mous. A typical method in these studies is to rep-resent each verb as a single data point and apply classification (e.g., Joanis et al. (2008)) or clus-tering (e.g., Sun and Korhonen (2009)) to these data points. As a representation for a data point, distributions of subcategorization frames are often used, and other semantic features (e.g., selectional preferences) are sometimes added to improve the performance.

Among these studies on monosemous verb clus-tering (i.e., predominant class induction), there have been several Bayesian methods. Vlachos et al. (2009) proposed a Dirichlet process mix-ture model (DPMM; Neal (2000)) to cluster verbs based on subcategorization frame distributions. They evaluated their result with a gold-standard test set, where a single class is assigned to a verb. Parisien and Stevenson (2010) proposed a hierar-chical Dirichlet process (HDP; Teh et al. (2006)) model to jointly learn argument structures (sub-categorization frames) and verb classes by using syntactic features. Parisien and Stevenson (2011) extended their model by adding semantic features. They tried to account for verb learning by children and did not evaluate the resultant verb classes. Modi et al. (2012) extended the model of Titov and Klementiev (2012), which is an unsupervised model for inducing semantic roles, to jointly in-duce semantic roles and frames across verbs using the Chinese Restaurant Process (Aldous, 1985). All of the above methods considered verbs to be monosemous and did not deal with verb polysemy. Our approach also uses Bayesian methods, but is designed to capture verb polysemy.

We summarize a few studies that consider poly-semy of verbs in the rest of this section.
Miyao and Tsujii (2009) proposed a supervised method that can handle verb polysemy. Their method represents a verb X  X  syntactic and seman-tic features, and learns a log-linear model from the SemLink corpus (Loper et al., 2007). Boleda et al. (2007) also proposed a supervised method for Catalan adjectives considering the polysemy of adjectives.

The most closely related work to our polysemy-aware task of unsupervised verb class induction is the work of Korhonen et al. (2003), who used dis-tributions of subcategorization frames to cluster verbs. They adopted the Nearest Neighbor (NN) and Information Bottleneck (IB) methods for clus-tering. In particular, they tried to consider verb polysemy by using the IB method, which is a soft clustering method (Tishby et al., 1999). However, the verb itself is still represented as a single data point. After performing soft clustering, they noted that most verbs fell into a single class, and they decided to assign a single class to each verb by hardening the clustering. They considered multi-ple classes only in the gold-standard data used for their evaluations. We also evaluate our induced verb classes on this gold-standard data, which was created on the basis of Levin X  X  classes (Levin, 1993).

Lapata and Brew (2004) and Li and Brew (2007) proposed probabilistic models for calculat-ing prior probabilities of verb classes for a verb. These models are approximated to condition not on verbs but on subcategorization frames. As mentioned in Li and Brew (2007), it is desirable to extend the model to depend on verbs to fur-ther improve accuracy. They conducted several evaluations including predominant class induction and token-level verb sense disambiguation, but did not evaluate multiple classes output by their mod-els. Schulte im Walde et al. (2008) also applied probabilistic soft clustering to verbs by incorporat-ing subcategorization frames and selectional pref-erences based on WordNet. This model is based on the Expectation-Maximization algorithm and the Minimum Description Length principle. Since they focused on the incorporation of selectional preferences, they did not evaluate verb classes but evaluated only selectional preferences using a lan-guage model-based measure.

Materna proposed LDA-frames, which are de-fined across verbs and can be considered to be a kind of verb class (Materna, 2012; Materna, 2013). LDA-frames are probabilistic semantic frames automatically induced from a raw corpus. He used a model based on latent Dirichlet allo-cation (LDA; Blei et al. (2003)) and the Dirichlet process to cluster verb instances of a triple (sub-ject, verb, object) to produce semantic frames and roles. Both of these are represented as a proba-bilistic distribution of words across verbs. He ap-plied this method to the BNC and acquired 1,200 frames and 400 roles (Materna, 2012). He did not evaluate the resulting frames as verb classes.
In sum, there have been no studies that quantita-tively evaluate polysemous verb classes automati-cally induced by unsupervised methods. 3.1 Overview Our objective is to automatically learn semantic frames and verb classes from a massive amount of verb uses following usage-based approaches. Although Bayesian approaches are a possible so-lution to simultaneously induce frames and verb classes from a corpus as used in previous stud-ies, it has prohibitive computational cost. For in-stance, Parisien and Stevenson applied HDP only to a small-scale child speech corpus that contains 170K verb uses to jointly induce subcategoriza-tion frames and verb classes (Parisien and Steven-son, 2010; Parisien and Stevenson, 2011). Ma-terna applied an LDA-based method to the BNC, which contains 1.4M verb uses, to induce seman-tic frames across verbs that can be considered to be verb classes (Materna, 2012; Materna, 2013). However, it would take three months for this ex-though it is best to use the largest possible cor-pus for this kind of knowledge acquisition tasks (Sasano et al., 2009), it is infeasible to scale to giga-word corpora using such joint models.
In this paper, we propose a two-step approach for inducing semantic frames and verb classes. First, we make multiple data points for each verb to deal with verb polysemy (cf. polysemy-aware previous studies still represented a verb as one data point (Korhonen et al., 2003; Miyao and Tsu-jii, 2009)). To do that, we induce verb-specific semantic frames by clustering verb uses. Then, we induce verb classes by clustering these verb-specific semantic frames across verbs. An interest-ing point here is that we can use exactly the same method for these two clustering steps.

Our procedure to automatically induce verb classes from verb uses is summarized as follows: 1. induce verb-specific semantic frames by clus-2. induce verb classes by clustering the induced Each of these two steps is described in the follow-ing sections in detail. 3.2 Inducing Verb-specific Semantic Frames We induce verb-specific semantic frames from verb uses based on the method of Kawahara et al. (2014). Our semantic frames consist of case slots, each of which consists of word instances that can be filled. The procedure for inducing these seman-tic frames is as follows: 1. apply dependency parsing to a raw corpus 2. merge the predicate-argument structures that 3. apply clustering to the initial frames based These three steps are briefly described below. 3.2.1 Extracting Predicate-argument We apply dependency parsing to a large raw cor-pus. We use the Stanford parser with Stanford lapsed dependencies are adopted to directly extract prepositional phrases.

Then, we extract predicate-argument structures from the dependency parses. Dependents that have the following dependency relations to a verb are extracted as arguments: In this process, the verb and arguments are lem-matized, and only the head of an argument is pre-served for compound nouns.

Predicate-argument structures are collected for each verb and the subsequent processes are ap-plied to the predicate-argument structures of each verb. 3.2.2 Constructing Initial Frames from To make the computation feasible, we merge the predicate-argument structures that have the same or similar meaning to get initial frames. These ini-tial frames are the input of the subsequent cluster-ing process. For this merge, we assume one sense per collocation (Yarowsky, 1993) for predicate-argument structures.

For each predicate-argument structure of a verb, we couple the verb and an argument to make a unit for sense disambiguation. We select an argument in the following order by considering the degree of
Then, the predicate-argument structures that have the same verb and argument pair (slot and word, e.g.,  X  X obj:effect X ) are merged into an ini-tial frame. After this process, we discard minor initial frames that occur fewer than 10 times. 3.2.3 Clustering Method We cluster initial frames for each verb to pro-duce semantic frames using the Chinese Restau-rant Process (Aldous, 1985), regarding each initial frame as an instance.

We calculate the posterior probability of a clus-ter c j given an initial frame f i as follows:
P ( c j j f i ) / where N is the number of initial frames for the tar-get verb and n ( c j ) is the current number of initial frames assigned to the cluster c j .  X  is a hyper-parameter that determines how likely it is for a new cluster to be created. In this equation, the first term is the Dirichlet process prior and the second term is the likelihood of f i .
 P ( f i j c j ) is defined based on the Dirichlet-Multinomial distribution as follows: where V is the vocabulary in all case slots cooc-curring with the verb and count ( f i , w ) is the num-ber of w in the initial frame f i . The original method in Kawahara et al. (2014) defined w as pairs of slots and words, e.g.,  X  X subj:child X  and  X  X obj:bird, X  but does not consider slot-only fea-tures, e.g.,  X  X subj X  and  X  X obj, X  which ignore lex-ical information. Here we experiment with both representations and compare the results.
 P ( w j c j ) is defined as follows:
P ( w j c j ) = where count ( c j , w ) is the current number of w in the cluster c j , and  X  is a hyper-parameter of Dirichlet distribution. For a new cluster, this prob-ability is uniform ( 1 / j V j ).

We regard each output cluster as a semantic frame, by merging the initial frames in a clus-ter into a semantic frame. In this way, semantic frames for each verb are acquired.

We use Gibbs sampling to realize this cluster-ing. 3.3 Inducing Verb Classes from Semantic To induce verb classes across verbs, we apply clustering to the induced verb-specific semantic frames. We can use exactly the same clustering method as described in Section 3.2.3 by using se-mantic frames for multiple verbs as an input in-stead of initial frames for a single verb. This is because an initial frame has the same structure as a semantic frame, which is produced by merging initial frames. We regard each output cluster as a verb class this time.

For the features, w , in equation (2), we try the two representations again: slot-only features and slot-word pair features. The representation using only slots corresponds to the consideration of only syntactic argument patterns. The other representa-tion using the slot-word pairs means that semantic similarity based on word overlap is naturally con-sidered by looking at lexical information. We will compare in our experiments four possible combi-nations: two feature representations for each of the two clustering steps. We first describe our experimental settings and de-fine evaluation metrics to evaluate induced soft clusterings of verb classes. Then, we con-duct type-level multi-class evaluations, type-level single-class evaluations and token-level multi-class evaluations. These two levels of evaluations are performed by considering the work of Reichart et al. (2010) on clustering evaluation. Finally, we discuss the results of our full experiments. 4.1 Experimental Settings We use two kinds of large-scale corpora: a web corpus and the English Gigaword corpus.

To prepare a web corpus, we extracted sen-tences from crawled web pages that are judged to be written in English based on the encoding infor-mation. Then, we selected sentences that consist of at most 40 words, and removed duplicated sen-tences. From this process, we obtained a corpus of one billion sentences, totaling approximately 20 billion words. We focused on verbs whose fre-quency in the web corpus was more than 1,000. There were 19,649 verbs, including phrasal verbs, and separating passive and active constructions. We extracted 2,032,774,982 predicate-argument structures.

We also used the English Gigaword corpus (LDC2011T07; English Gigaword Fifth Edition). This corpus consists of approximately 180 mil-lion sentences, which totaling four billion words. There were 7,356 verbs after applying the same frequency threshold as the web corpus. We ex-tracted 423,778,278 predicate-argument structures from this corpus.

We set the hyper-parameters  X  in (1) and  X  in (3) to 1.0. The cluster assignments for all the com-ponents were initialized randomly. We took 100 samples for each input frame and selected the clus-ter assignment that has the highest probability. 4.2 Evaluation Metrics To measure the precision and recall of a cluster-ing, modified purity and inverse purity (also called collocation or weighted class accuracy) are com-monly used in previous studies on verb clustering (e.g., Sun and Korhonen (2009)). However, since these measures are only applicable to a hard clus-tering, it is necessary to extend them to be applica-ble to a soft clustering, because in our task a verb propose a normalized version of modified purity and inverse purity. This kind of normalization for soft clusterings was performed for other evalua-tion metrics as in Springorum et al. (2013).
To measure the precision of a clustering, a nor-malized version of modified purity is defined as follows. Suppose K is the set of automatically in-duced clusters and G is the set of gold classes. Let K i be the verb vector of the i -th cluster and G j be the verb vector of the j -th gold class. Each com-ponent of these vectors is a normalized frequency, which equals a cluster/class attribute probability given a verb. Where there is no frequency in-formation available for class distribution, such as the gold-standard data described in Section 4.3, we use a uniform distribution across the verb X  X  classes. The core idea of purity is that each clus-ter K i is associated with its most prevalent gold class. In addition, to penalize clusters that consist of only one verb, such singleton clusters in K are considered as errors, as is usual with modified pu-rity. The normalized modified purity (nmPU) can then be written as follows: nmPU = verb classes verb classes place 9 drop 9 , 45, 004, 47, focus 31 , 45 bake 26 , 45 stare 30 persuade 002 lay 9 sparkle 43 build 26 , 45 pour 9 , 43, 26, 57, glow 43 invent 26 , 27 Table 1: An excerpt of the gold-standard verb classes for several verbs from Korhonen et al. (2003). The classes starting with  X 0 X  were de-rived from the LCS database, those starting with  X  X  X  were defined by Korhonen et al., and the other classes were from Levin X  X  classes. A bolded class is the predominant class for each verb. where N denotes the total number of verbs, j K i j denotes the number of positive components in K i , and c iv denotes the v -th component of K i .  X  verbs in K i \ G j , given by summing up the values in K i . In case of evaluating a hard clustering, this is equal to j K i \ G j j because all the values of c iv are equal to 1.

As usual, the following normalized inverse pu-rity (niPU) is used to measure the recall of a clus-tering: Finally, we use the harmonic mean (F 1 ) of nmPU and niPU as a single measure of clustering quality. 4.3 Type-level Multi-class Evaluations We first evaluate our induced verb classes on the test set created by Korhonen et al. (2003) (Table 1 of their paper) which was created by considering verb polysemy on the basis of Levin X  X  classes and the LCS database (Dorr, 1997). It consists of 62 classes and 110 verbs, out of which 35 verbs are monosemous and 75 verbs are polysemous. The average number of verb classes per verb is 2.24. An excerpt from this data is shown in Table 1.
As our baselines, we adopt two previously pro-posed methods. We first implemented a soft clus-tering method for verb class induction proposed by Korhonen et al. (2003). They used the information bottleneck (IB) method for assigning probabilities of classes to each verb. Note that Korhonen et al. (2003) actually hardened the clusterings and left method K nmPU niPU F 1 IB ( k =35, t =0.10) 35.0 53.59 51.44 52.44 IB ( k =35, t =0.05) 35.0 53.67 52.62 53.10 IB ( k =35, t =0.02) 35.0 54.42 54.43 54.40 IB ( k =35, t =0.01) 35.0 54.60 55.54 55.04 IB ( k =42, t =0.10) 41.6 55.42 49.46 52.24 IB ( k =42, t =0.05) 41.8 55.55 49.97 52.59 IB ( k =42, t =0.02) 42.0 56.19 51.24 53.58 IB ( k =42, t =0.01) 42.0 56.80 51.92 54.24 Gigaword/S-S 272.8 63.46 67.66 65.49 Gigaword/S-SW 36.4 31.49 95.70 47.38 Gigaword/SW-S 186.2 63.52 64.18 63.84
Gigaword/SW-SW 30.0 36.27 94.66 52.40 web/S-S 363.6 61.32 78.64 68.90 web/S-SW 52.2 35.80 99.30 52.62 web/SW-S 212.2 66.26 77.38 71.39 web/SW-SW 55.0 36.70 96.25 53.13 Table 2: Type-level multi-class evaluations. K rep-resents the (average) number of induced classes.  X  X  X  denotes the use of slot-only features and  X  X W X  denotes the use of slot-word pair features. For ex-ample,  X  X W-S X  means that slot-word pair features are used for semantic frame induction and slot-only features are used for verb class induction. the evaluations of soft clusterings for their future work. For input data, we employ VALEX (Ko-rhonen et al., 2006), which is a publicly-available ing the method of Korhonen et al. (2003), preposi-tional phrases (pp) are parameterized for two fre-quent subcategorization frames (NP and NP PP), and the unfiltered raw frequencies of subcatego-rization frames are used as features to represent a verb. It is necessary to specify the number of clusters, k , for the IB method beforehand, and we adopt 35 and 42 clusters according to their re-ported high accuracies. To output multiple classes for each verb, we set a threshold, t , for class at-tribute probabilities. That is, classes that have a higher class attribute probability than the thresh-old are output for each verb. We report the results of the following threshold values: 0.01, 0.02, 0.05 and 0.10.

The other baseline is LDA-frames (Materna, 2012). We use the induced LDA-frames that are erage) number of induced classes. duced from the BNC and consists of 1,200 frames and 400 semantic roles. Again, we set a threshold for frame attribute probabilities.

We report results using our methods with four feature combinations (slot-only (S) and slot-word pair (SW) features each used for both the frame-generation and verb-class clustering steps) for both the Gigaword and web corpora. Table 2 lists evaluation results for the baseline methods and our methods are obtained by averaging five runs.
We can see that  X  X eb/SW-S X  achieved the best performance and obtained a higher F 1 than the baselines by more than nine points.  X  X eb/SW-S X  uses the combination of slot-word pair fea-tures for clustering verb-specific frames and slot-only features for clustering across verbs. Inter-estingly, this result indicates that slot distributions are more effective than lexical information in slot-word pairs for inducing verb classes similar to the gold standard. This result is consistent with ex-pectations, given a gold standard based on Levin X  X  verb classes, which are organized according to the syntactic behavior of verbs. The use of slot-word pairs for verb class induction generally merged too many frames into each class, apparently due to ac-cidental word overlaps across verbs.

The verb classes induced from the web corpus achieved a higher F 1 than those from the Gigaword corpus. This can be attributed to the larger size of the web corpus. The employment of this kind of huge corpus is enabled by our scalable method. 4.4 Type-level Single-class Evaluations Since we focus on the handling of verb polysemy, predominant class induction for each verb is not our main objective. However, we wish to compare our method with previous work on the induction of a predominant (monosemous) class for each verb.
To output a single class for each verb by us-ing our proposed method, we skip the induction of verb-specific semantic frames and instead cre-ate a single frame for each verb by merging all predicate-argument structures of the verb. Then, we apply clustering to these frames across verbs. For clustering features, we again compare two rep-resentations: slot-only features (S) and slot-word pair features (SW).

We evaluate the single-class output for each verb based on the predominant gold-standard classes, which are defined for each verb in the test set of Korhonen et al. (2003). This data con-tains 110 verbs and 33 classes. We evaluate these single-class outputs in the same manner as Korho-nen et al. (2003), using the gold standard with mul-tiple classes, which we also use for our multi-class evaluations.

As we did with the multi-class evaluations, we adopt modified purity (mPU), inverse purity (iPU) and their harmonic mean (F 1 ) as the metrics for the evaluation with predominant classes. It is not nec-essary to normalize these metrics when we treat verbs as monosemous, and evaluate against the predominant sense. When we evaluate against the multiple classes in the gold standard, we do nor-malize the inverse purity.
 For baselines, we once more adopt the Nearest Neighbor (NN) and Information Bottleneck (IB) methods proposed by Korhonen et al. (2003), and LDA-frames proposed by Materna (2012). The clusterings with the NN and IB methods are ob-tained by using the VALEX subcategorization lex-icon. To harden the clusterings of the IB method and the LDA-frames, the class with the highest probability is selected for each verb. This hard-ening process is exactly the same as Korhonen et al. (2003). Note that our results of the NN and IB methods are different from those reported in their
Table 3 lists accuracies of baseline methods and our methods. Our proposed method using the web corpus achieved comparable performance with the baseline methods on the predominant class evalu-ation and outperformed them on the multiple class evaluation. More sophisticated methods for pre-dominant class induction, such as the method of Sun and Korhonen (2009) using selectional pref-erences, could produce better single-class outputs, but have difficulty in producing polysemy-aware verb classes.

From the result, we can see that the induced verb classes based on slot-only features did not achieve a higher F 1 than those based on slot-word pair features in many cases. This result is differ-ent from that of multi-class evaluations in Section 4.3. We speculate that slot distributions are not so different among verbs when all uses of a verb are merged into one frame, and thus their discrimina-tion power is lower than that in the intermediate construction of semantic frames. 4.5 Token-level Multi-class Evaluations We conduct token-level multi-class evaluations us-ing 119 verbs, which appear 100 or more times in sections 02-21 of the SemLink WSJ corpus. These 119 verbs cover 102 VerbNet classes, and 48 of them are polysemous in the sense of being in more than one VerbNet class. Each instance of these 119 verbs in this corpus belongs to one of 102 Verb-Net classes. We first add these instances to the instances from a raw corpus and apply the two-step clustering to these merged instances. Then, we compare the induced verb classes of the Sem-Link instances with their gold-standard VerbNet classes. We report the values of modified purity (mPU), inverse purity (iPU) and their harmonic mean (F 1 ). It is not necessary to normalize these metrics because the clustering of these instances is hard. method K mPU iPU F 1 Gigaword/S-NIL  X  93.43 20.06 33.03 Gigaword/SW-NIL  X  94.45 41.07 57.25 Gigaword/S-S 512.2 75.06 45.26 56.47
Gigaword/SW-S 260.6 73.98 56.45 64.04 web/S-NIL  X  93.70 32.96 48.76 web/SW-NIL  X  94.51 44.95 60.92 web/S-S 500.0 72.25 52.48 60.79 web/SW-S 255.2 72.65 61.00 66.31 Table 4: Token-level evaluations against VerbNet classes. K represents the average number of in-duced classes.

For clustering features, we compare two fea-ture combinations:  X  X -S X  and  X  X W-S, X  which achieved high performance in the type-level multi-class evaluations (Section 4.3). The results of these methods are obtained by averaging five runs. For a baseline, we use verb-specific semantic frames without clustering across verbs ( X  X -NIL X  and  X  X W-NIL X ), where these frames are consid-ered to be verb classes but not shared across verbs. Table 4 lists accuracies of these methods for the two corpora. We can see that  X  X W-S X  achieved a higher F 1 than  X  X -S X  and the baselines without verb class induction ( X  X -NIL X  and  X  X W-NIL X ).
Modi et al. (2012) induced semantic frames across verbs using the monosemous assumption and reported an F 1 of 44.7% (77.9% PU and 31.4% iPU) for the assignment of FrameNet frames to the FrameNet corpus. We also con-ducted the above evaluation against FrameNet 62.79% (66.97% mPU and 59.09% iPU) for  X  X eb/SW-S, X  and an F 1 of 60.06% (65.58% mPU and 55.39% iPU) for  X  X igaword/SW-S. X  It is dif-ficult to directly compare these results with Modi et al. (2012), but our induced verb classes seem to have higher F 1 accuracy. 4.6 Full Experiments and Discussions We finally induce verb classes from the semantic frames of 1,667 verbs, which appear at least once in sections 02-21 of the WSJ corpus. Based on the best results in the above evaluations, we in-duced semantic frames using slot-word pair fea-tures, and then induced verb classes using slot-only features. We ended with 38,481 semantic frames and 699 verb classes from the Gigaword Table 5: Examples of induced verb classes. Un-derlined semantic frames are shown in Table 6. corpus, and 61,903 semantic frames and 840 verb classes from the web corpus. It took two days to induce verb classes from the Gigaword corpus and three days from the web corpus.

Examples of verb classes and semantic frames induced from the web corpus are shown in Table 5 and Table 6. While there are many classes with consistent meanings, such as  X  X lass 4 X  and  X  X lass 16, X  some classes have mixed meanings. For in-stance,  X  X lass 2 X  consists of the semantic frames  X  X eed:2 X  and  X  X ay:2. X  These frames were merged due to the high syntactic similarity of constituting slot distributions, which are comprised of a sub-ject and a sentential complement. To improve the quality of verb classes, it is necessary to develop a clustering model that can consider syntactic and lexical similarity in a balanced way. We presented a step-wise unsupervised method for inducing verb classes from instances in giga-word corpora. This method first clusters predicate-argument structures to induce verb-specific se-mantic frames and then clusters these semantic frames across verbs to induce verb classes. Both clustering steps are performed with exactly the same method, which is based on the Chinese Restaurant Process. The resulting semantic frames and verb classes are open to the public and also can Table 6: Examples of induced semantic frames. The number following an instance word denotes its frequency and  X  s  X  denotes a sentential comple-ment.

From the results, we can see that the combi-nation of the slot-word pair features for cluster-ing verb-specific frames and the slot-only features for clustering across verbs is the most effective and outperforms the baselines by approximately 10 points. This indicates that slot distributions are more effective than lexical information in slot-word pairs for the induction of verb classes, when Levin-style classes are used for evaluation. This is consistent with Levin X  X  principle of organizing verb classes according to the syntactic behavior of verbs.

As applications of the resulting semantic frames and verb classes, we plan to integrate them into syntactic parsing, semantic role labeling and verb sense disambiguation. For instance, Kawahara and Kurohashi (2006) improved accuracy of de-pendency parsing based on Japanese semantic frames automatically induced from a raw corpus. It is also valuable and promising to apply the in-duced verb classes to NLP applications as used in metaphor identification (Shutova et al., 2010) and argumentative zoning (Guo et al., 2011).
 This work was supported by Kyoto University John Mung Program and JST CREST. We also gratefully acknowledge the support of the National Science Foundation Grant NSF-IIS-1116782, A Bayesian Approach to Dynamic Lexical Re-sources for Flexible Language Processing. Any opinions, findings, and conclusions or recommen-dations expressed in this material are those of the authors and do not necessarily reflect the views of the National Science Foundation.
