 Domain-specific sense of a word is crucial informa-tion for many NLP tasks and their applications, such as Word Sense Disambiguation (WSD) and Informa-tion Retrieval (IR). For example, in the WSD task, McCarthy et al . presented a method to find predom-inant noun senses automatically using a thesaurus acquired from raw textual corpora and the Word-Net similarity package (McCarthy et al., 2004; Mc-Carthy et al., 2007). They used parsed data to find words with a similar distribution to the target word. Unlike Buitelaar et al . approach (Buitelaar and Sacaleanu, 2001), they evaluated their method us-ing publically available resources, namely SemCor (Miller et al., 1998) and the SENSEVAL-2 English all-words task. The major motivation for their work was similar to ours, i.e. , to try to capture changes in ranking of senses for documents from different do-mains.

Domain adaptation is also an approach for fo-cussing on domain-specific senses and used in the WSD task (Chand and Ng, 2007; Zhong et al., 2008; Agirre and Lacalle, 2009). Chan et. al. proposed a supervised domain adaptation on a manually se-lected subset of 21 nouns from the DSO corpus hav-ing examples from the Brown corpus and Wall Street Journal corpus. They used active learning, count-merging, and predominant sense estimation in order to save target annotation effort. They showed that for the set of nouns which have different predomi-nant senses between the training and target domains, the annotation effort was reduced up to 29%. Agirre et. al. presented a method of supervised domain adaptation (Agirre and Lacalle, 2009). They made use of unlabeled data with SVM (Vapnik, 1995), a combination of kernels and SVM, and showed that domain adaptation is an important technique for WSD systems. The major motivation for domain adaptation is that the sense distribution depends on the domain in which a word is used. Most of them adapted textual corpus which is used for training on WSD.

In the context of dictionary-based approach, the first sense heuristic applied to WordNet is often used as a baseline for supervised WSD systems (Cotton et al., 1998), as the senses in WordNet are ordered ac-cording to the frequency data in the manually tagged resource SemCor (Miller et al., 1998). The usual drawback in the first sense heuristic applied to the WordNet is the small size of the SemCor corpus. Therefore, senses that do not occur in SemCor are often ordered arbitrarily. More seriously, the deci-sion is not based on the domain but on the frequency of SemCor data. Magnini et al . presented a lexi-cal resource where WordNet 2.0 synsets were anno-tated with Subject Field Codes (SFC) by a procedure that exploits the WordNet structure (Magnini and Cavaglia, 2000; Bentivogli et al., 2004). The results showed that 96% of the WordNet synsets of the noun hierarchy could have been annotated using 115 dif-ferent SFC, while identification of the domain labels for word senses was required a considerable amount of hand-labeling.

In this paper, we focus on domain-specific senses and propose a method for assigning cate-gory/domain label to each sense of words in a dictio-nary. Our approach is automated, and requires only documents assigned to domains/categories, such as Reuters corpus, and a dictionary with gloss text, such as WordNet. Therefore, it can be applied easily to a new domain, sense inventory or different lan-guages, given sufficient documents. Our approach, IDSS consists of two steps: selection of senses and computation of rank scores. 2.1 Selection of senses The first step to find domain-specific senses is to se-lect appropriate senses for each domain. We used a corpus where each document is classified into do-mains. The selection is done by using a text classi-fication technique. We divided documents into two sets, i.e. , training and test sets. The training set is used to train SVM classifiers, and the test set is to test SVM classifiers. For each domain, we collected noun words. Let D be a domain set, and S be a set of senses that the word w  X  W has. Here, W is a set of noun words. The senses are obtained as follows: 1. For each sense s  X  S , and for each d  X  D ,we 2. All the training and test documents are tagged 3. The SVM was applied to the two types of train-4. SVM classifiers are applied to the test data. If The procedure is applied to all w  X  W . 2.2 Computation of rank scores We note that text classification accuracy used in se-lection of senses depends on the number of words consisting gloss in a dictionary. However, it is not so large. As a result, many of the classification ac-curacy with word replacement were equal to those without word replacement 1 . Then in the second pro-cedure, we scored senses by using MRW model.
Given a set of senses S d in the domain d , G d = ( S d , E ) is a graph reflecting the relationships be-tween senses in the set. Each sense s i in S d is a gloss text assigned from a dictionary. E is a set of edges, which is a subset of S d  X  S d . Each edge e ij in E is associated with an affinity weight f ( i  X  j ) between senses s i and s j ( i = j ). The weight is com-puted using the standard cosine measure between two senses. The transition probability from s i to s j is then defined by normalizing the corresponding affinity weight p ( i  X  j ) = f ( i  X  j ) P | S otherwise, 0.

We used the row-normalized matrix U ij = (
U sponding to the transition probability, where U ij = p ( i  X  j ) . To make U a stochastic matrix, the rows with all zero elements are replaced by a smooth-ing vector with all elements set to 1 | S form of the saliency score Score ( s i ) can be formu-lated in a recursive form as in the MRW model:  X  is a vector of saliency scores for the senses. e is a column vector with all elements equal to 1.  X  is a damping factor. We set  X  to 0.85, as in the PageR-ank (Brin and Page, 1998). The final transition ma-trix is given by the formula (1), and each score of the sense in a specific domain is obtained by the princi-pal eigenvector of the new transition matrix M .
We applied the algorithm for each domain. We note that the matrix M is a high-dimensional space. Therefore, we used a ScaLAPACK, a library of high-performance linear algebra routines for dis-tributed memory MIMD parallel computing (Netlib, 2007) 2 . We selected the topmost K % senses accord-ing to rank score for each domain and make a sense-domain list. For each word w in a document, find the sense s that has the highest score within the list. If a domain with the highest score of the sense s and a domain in a document appearing w match, s is re-garded as a domain-specific sense of the word w . 3.1 WordNet 3.0 We assigned Reuters categories to each sense of words in WordNet 3.0 3 . The Reuters documents are organized into 126 categories (Rose et al., 2002). We selected 20 categories consisting a variety of genres. We used one month of documents, from 20th Aug to 19th Sept 1996 to train the SVM model. Similarly, we classified the following one month of documents into these 20 categories. All documents were tagged by Tree Tagger (Schmid, 1995).

Table 1 shows 20 categories, the number of train-ing and test documents, and F-score (Baseline) by SVM. For each category, we collected noun words with more than five frequencies from one-year Reuters corpus. We randomly divided these into two: 10% for training and the remaining 90% for test data. The training data is used to estimate K according to rank score, and test data is used to test the method using the estimated value K . We man-ually evaluated a sense-domain list. As a result, we set K to 50%. Table 2 shows the result using the test data, i.e. , the total number of words and senses, and the number of selected senses (Select S) that the classification accuracy of each domain was equal or higher than the result without word replacement. We used these senses as an input of MRW.

There are no existing sense-tagged data for these 20 categories that could be used for evaluation. Therefore, we selected a limited number of words and evaluated these words qualitatively. To do this, we used SFC resources (Magnini and Cavaglia, 2000), which annotate WordNet 2.0 synsets with do-main labels. We manually corresponded Reuters and SFC categories. Table 3 shows the results of 12 Reuters categories that could be corresponded to SFC labels. In Table 3,  X  X euters X  shows categories, and  X  X DSS X  shows the number of senses assigned by our approach.  X  X FC X  refers to the number of senses appearing in the SFC resource.  X  X  &amp; R X  denotes the number of senses appearing in both SFC and Reuters corpus.  X  X rec X  is a ratio of correct assignments by  X  X DSS X  divided by the total number of  X  X DSS X  as-signments. We manually evaluated senses not ap-pearing in SFC resource. We note that the corpus used in our approach is different from SFC. There-fore, recall denotes a ratio of the number of senses matched in our approach and SFC divided by the total number of senses appearing in both SFC and Reuters.

As shown in Table 3, the best performance was  X  X eather X  and recall was 0.986, while the result for  X  X ar X  was only 0.149. Examining the result of text classification by word replacement, the for-mer was 0.07 F-score improvement by word replace-ment, while that of the later was only 0.02. One rea-son is related to the length of the gloss in WordNet: the average number of words consisting the gloss as-signed to  X  X eather X  was 8.62, while that for  X  X ar X  was 5.75. IDSS depends on the size of gloss text in WordNet. Efficacy can be improved if we can assign gloss sentences to WordNet based on corpus statis-tics. This is a rich space for further exploration.
In the WSD task, a first sense heuristic is often applied because of its powerful and needless of ex-pensive hand-annotated data sets. We thus compared the results obtained by our method to those obtained by the first sense heuristic. For each of the 12 cat-egories, we randomly picked up 10 words from the senses assigned by our approach. For each word, we selected 10 sentences from the documents belonging to each corresponding category. Thus, we tested 100 sentences for each category. Table 4 shows the re-sults.  X  X ense X  refers to the number of average senses par a word. Table 4 shows that the average preci-sion by our method was 0.648, while the result ob-tained by the first sense heuristic was 0.581. Table 4 also shows that overall performance obtained by our method was better than that with the first sense heuristic in all categories. 3.2 EDR dictionary We assigned categories from Japanese Mainichi newspapers to each sense of words in EDR Japanese dictionary 4 . The Mainichi documents are organized into 15 categories. We selected 4 categories, each of which has sufficient number of documents. All documents were tagged by a morphological analyzer Chasen (Matsumoto et al., 2000), and nouns are ex-tracted. We used 10,000 documents for each cate-gory from 1991 to 2000 year to train SVM model. We classified other 600 documents from the same period into one of these four categories. Table 5 shows categories and F-score (Baseline) by SVM.
We used the same ratio used in English data to es-timate K . As a result, we set K to 30%. Table 6 shows the result of IDSS.  X  X rec X  refers to the preci-sion of IDSS, i.e. , we randomly selected 300 senses for each category and evaluated these senses qualita-tively. The average precision for four categories was 0.642.

In the WSD task, we randomly picked up 30 words from the senses assigned by our method. For each word, we selected 10 sentences from the doc-uments belonging to each corresponding category. Table 7 shows the results. As we can see from Table 7 that IDSS was also better than the first sense heuristics in Japanese data. For the first sense heuristics, there was no significant difference be-tween English and Japanese, while the number of senses par a word in Japanese resource was 3.191, and it was smaller than that with WordNet (4.950). One reason is the same as SemCor data, i.e. , the small size of the EDR corpus. Therefore, there are many senses that do not occur in the corpus. In fact, there are 62,460 nouns which appeared in both EDR and Mainichi newspapers (from 1991 to 2000 year), 164,761 senses in all. Of these, there are 114,267 senses not appearing in the EDR corpus. This also demonstrates that automatic IDSS is more effective than the frequency-based first sense heuristics. We presented a method for assigning categories to each sense of words in a machine-readable dictio-nary. For evaluation of the method using Word-Net 3.0, the average precision was 0.661, and recall against the SFC was 0.686. Moreover, the result of WSD obtained by our method outperformed against the first sense heuristic in both English and Japanese. Future work will include: (i) applying the method to other part-of-speech words, (ii) comparing the method with existing other automated method, and (iii) extending the method to find domain-specific senses with unknown words.
