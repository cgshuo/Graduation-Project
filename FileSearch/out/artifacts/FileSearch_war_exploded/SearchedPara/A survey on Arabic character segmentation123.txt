 ORIGINAL PAPER Yasser M. Alginahi Abstract Arabic character segmentation is a necessary step in Arabic Optical Character Recognition (OCR). The cursive nature of Arabic script poses challenging problems in Arabic character recognition; however, incorrectly segmented char-acters will cause misclassifications of characters which in turn may lead to wrong results. Therefore, off-line Arabic character segmentation is a difficult research problem and little research has been achieved in this area in the past few decades. This is due to both the cursive nature of Arabic writ-ing in both printed and handwritten forms and the scarcity of Arabic databases and dictionaries. Most of the character recognition methods used in the recognition of Arabic char-acters are adopted from available methods used on handwrit-ten Latin and Chinese characters; however, other methods are developed only for Arabic character segmentation. This survey presents the description of the Arabic script charac-teristics with an overview on OCR systems and a compre-hensive review mainly on off-line printed Arabic character segmentation techniques.
 Keywords Arabic OCR  X  Arabic character segmentation  X  Off-line recognition  X  Cursive script  X  Arabic OCR software 1 Introduction Optical Character Recognition, usually abbreviated to OCR, is the machine replication of human reading and has been the subject of intensive research since the development of digital computers. OCR involves computer systems designed to translate images of typewritten text (typically captured by a scanner) into machine-editable text to translate pic-tures of characters into a standard encoding scheme rep-resenting them in ASCII format. The motivation behind text recognition research stems from the necessity to con-vert data from conventional media into electronic media to be used in many applications such as machine document processing, bank cheques processing, automatic mail sort-ing and routing, signature verification, product identifica-tion, publishing applications and machine vision. OCR is a field of research in artificial intelligence, pattern recog-nition and machine vision. In the last century, the research concentrated mainly on Latin, Chinese and Japanese char-acters, and it is not until the last two decades that other languages were seriously researched. These include: Ara-bic, Farsi, Korean, Hindi, Urdu, Bengal and so forth. More research is found in the area of Handwritten Latin as well as the increase in the interest in researching handwritten Arabic text. In [ 1 ], the survey by Lorigo and Govindaraju, published in 2006, presented Arabic handwritten recogni-tion techniques and concentrated on providing the recogni-tion rates, description of the methods, and techniques used to recognize handwritten Arabic text. This research work did not provide detailed explanation of the segmentation techniques used in the recognition engines surveyed; it only provided a short subsection on the segmentation techniques with about 7 references used in this segmentation section. Therefore, [ 1 ] is an excellent survey which provides detail of handwritten Arabic OCR engines; however, it does not provide much detail on the characters segmentation tech-niques used. Thus, this survey differs in its purpose from [ 1 ] since it concentrates on techniques related to charac-ters segmentation for printed Arabic text. In addition it provides an up-to-date comprehensive detail pertaining to Arabic characters segmentation techniques, detailed expla-nation of the characteristics of Arabic characters, sections on databases and commercially available OCR software and finally recommendations for future directions in this area of research.

The research of Arabic character recognition started in 1975 by Nazif [ 2 ] as compared to Latin X  X  which can be traced back to the mid 1940s [ 3  X  5 ]. Commercial Latin OCRs have been used since early 1950s and 1960s, the first commercial system was installed at the Readers Digest in 1955 and the United States Postal Services has been using OCR in postal machines to pre-sort mail since 1965 [ 6 ]. Although, almost 1/4 of the world population use Arabic language in speaking, writing and/or reading [ 7 ], little progress in both on-line and off-line research has been achieved towards automatic Ara-bic character recognition; therefore, much more attention is needed to achieve better results. This is mainly caused by the lack of research funding, scarcity of databases and dictionar-ies, and the cursive nature of Arabic writing.

Off-linerecognitionisperformedafterthewritingorprint-ing is completed. This means that sometimes the temporal information of text is lost which, in turn, adds to the com-plexity problem of character segmentation [ 3 ]. It is not sur-prising that the recognition rate of Arabic characters is lower than those of non-cursive Latin characters. Therefore, in this paper, the characteristics of Arabic characters are explained in terms of a comprehensive up-to-date review of off-line Arabic character segmentation methods related mainly to printed text as well as a comprehensive overview on Ara-bic OCR systems. 2 Characteristics of Arabic characters Arabic is used as the principal language in all Arab countries of the Middle East and Northern Africa. Arabic is the offi-cial language of 26 countries with approximately 300 million native speakers and 250 million non-native speakers [ 8 , 9 ]. It is considered the world X  X  5th most influential language [ 10 ]. Arabic is estimated as the 7th top language of the Internet in millions of users in 2010 [ 11 ]. It is also central to other languages in the Muslim world such as Farsi (Persian), Urdu, Sindhi and Pashto. Some minority languages in China such as Uighur, Kazakh and Kirghiz are all written using a modified Arabic script.

The Arabic Alphabet consists of 28 characters and has many characteristics, [ 3 , 5 , 12 , 13 ]. The main features of the Arabic writing are: 1. It possesses a cursive text even when printed and the 2. It is written from right to left with the exception of num-3. Its written form has no equivalent to capital letters. 4. Its letters change their shape depending on their position 5. Arabic characters are justified by a stretching baseline 6. A character can be represented with a vowel or diacritic 7. Several Arabic alphabet letters share the same shape, and 8. Arabic writing has also some ligatures, which are excep-9. Additional characters: Ta-Marbuta, , Hamza, , and 10. Arabic characters have different lengths. As a result, 11. The Arabic numerals, (0 1 23456789),areused The characteristics of Arabic text heavily influence the char-acter segmentation rate which is one of the crucial and time-consuming steps in any Arabic segmentation based OCR system. Most of the recognition errors are attributed to this phase. The techniques for recognizing Arabic characters are not fundamentally different from those used for Latin OCR or any other language. However, the wider variability of the Arabic character shapes and the linguistic rules associated with the Arabic writing need to be taken into consideration during the segmentation process. Also, more attention is needed to segment the characters in order to get a higher rec-ognition rate. Typeset Arabic character recognition is harder than typewritten text of other languages due to the ligatures and character overlapping found in Arabic text resulting in over or under segmentation of characters as shown in Fig. 8 . Recognition of Arabic handwritten text is even harder than typewritten text and the research in this area is progressing well as many techniques are being proposed and used. Many researchers find this area of research more challenging and are investigating techniques related to all different phases of Arabic OCR systems [ 14 ]. 3 A general OCR system The main parts of a typical OCR system are shown in Fig. 9 . The system goes through preprocessing, character segmenta-tion, classification, recognition and post processing. A paper document is first transferred into a digital form i.e. a bitmap file by using a scanner. For most documents with complex or non uniform backgrounds, the image has to go through thres-holding or binarization to remove the background and, for some document images page segmentation may be required to keep only the text. The characters in the binary image are then isolated or segmented to extract the character posi-tions, which will be used in the next step of processing. Some preprocessing may be used depending on the quality of the character images. Such preprocessing could involve noise reduction, normalization of the character images, skew detec-tion and correction or compression techniques which pre-serve the shape of the character such as thinning [ 15 ]. These steps work together to achieve one goal which is converting an image into an ASCII format that can be edited. Therefore, the output of each step propagates to the next stage in a pipe-line fashion making the OCR system work as a whole and, if one stage fails the performance is significantly affected. In the classification stage, the extracted features are com-pared to the prototypes; if the features are matched or closely matched, the input character is classified into the appropriate class. In this stage, if a single classifier fails to yield high performance; several classifiers may be combined to give acceptable results [ 16 ]. The feature extraction, learning, clas-sification and recognition steps of OCR are beyond the scope of this survey and for further details the reader may consult the following references [ 12 , 17 ] or other related references in scientific literature.

Some of the problems associated with character segmen-tation and lower recognition rates in Arabic OCR are:  X  The poor knowledge and understanding of the Arabic lan- X  The cursive nature of Arabic writing both printed and  X  Variation of character sizes in width and height compar- X  The presentation of different kinds of diacritics cause  X  The use of ligatures where characters occupy a shared  X  The character shapes change depending on their location  X  The similarity in shape of some characters with only a  X  The omission of whitespace when writing in Arabic such 4 Benefits of OCR OCRsoftwarehasmanybenefitsandcansaveindividualsand businesses time and money. Some of the benefits of OCR are [ 18 ]:  X  OCR software converts scanned text into a word process- X  OCR classifies documents automatically saving time and  X  Data accuracy increases since data is extracted, validated  X  The minimizing of manual data entry maximizes the ben- X  Scanning paper documents saves on storage space by Therefore, the more stable and better performance of an OCR system the higher the productivity of businesses in maximiz-ing their return on investment. 5 Character segmentation techniques Character segmentation is a necessary preprocessing step for character recognition in many OCR systems. It is an impor-tant step since incorrectly segmented characters produce mis-classification or rejection of characters during the recognition process. The most difficult case in character segmentation is cursive script. The scripted nature of Arabic written language poses some difficult challenges for automatic character seg-mentation and recognition. Character segmentation of cur-sive text is the hardest, crucial, and time consuming step of any OCR system. It represents the main challenge in Arabic character segmentation systems, even more than the recogni-tion phase and is considered the main source of recognition errors [ 3 , 19  X  21 ].

The vertical projection method or those based on the his-togram of the image are considered one of the first attempted methods used in Arabic character segmentations [ 22  X  26 ]fol-lowed by other methods such as contour tracing [ 27 , 28 ], thin-ning [ 29  X  31 ], neural networks (NNs) [ 32 , 33 ], graph-based [ 34 ], morphological techniques [ 35  X  37 ] and Hidden Markov Models(HMMs) [ 38 , 39 ]. Most of these techniques are ana-lytical where words are segmented into characters. Others use the holistic or segmentation-free approach with words being recognized without segmentation. The rest of the sec-tion provides an attempt to divide the character segmentation techniques into different categories. 5.1 Segmentation based on histogram and baseline The use of the projection or histogram method simplifies the problem of character segmentation into a 1D system instead of a 2D system. In [ 40 ], Najoua and Noureddine presented a method based on modulated histogram, as well as the number of black segments in a line of pixels. The algorithm consists of the following steps: identifying text lines, segmenting text lines into Pieces of Arabic Words (PAW), separating each PAW into connected components, locating roughly lim-its of the different characters in the PAW, calculating the maximum number of black segments in a line of pixels, extracting primitives and finally using an error checker for detecting segmentation errors. This technique was applied on Arabic fonts such as Neskh, Bagdad, and Mehdi which have no overlapping characters or ligatures. The segmenta-tion results were between 99 and 100%, and when overlaying characters where tested as in Kaahra font the error checker detects errors which could not be corrected. This method is intended for specific fonts which do not deal with ligatures and could not be used with other fonts or handwritten Arabic character segmentation.

The technique presented by Parhami and Taraghi, [ 22 ]for the recognition of printed Farsi text which is also applicable to printed Arabic text, goes through two steps. The first is to isolate symbols within each sub-word and the second is recognition. The segmenting of parts is to determine the pen (script) thickness which is used to find candidate connection columns. As reported by the authors, the technique provided a 100% recognition rate when used to segment Farsi news-paper headlines; however, the system is font dependent and smaller font size result in a lower recognition rate.
Amin and Masini in [ 25 ] proposed a system for segmen-tation and recognition that used horizontal and vertical pro-jections and shape primitives. On 100 multi-font words, it achieved a character recognition rate of 85% and word rec-ognition rate of 95%.

In [ 26 ] Ymin and Aoki presented a technique for seg-menting Uygur characters. Uygur is a Turkish language used in the Xingjian Uygur autonomous region in China and Central Asia; it uses Arabic characters with few added let-ters. The technique presented consists of two segmentation steps; namely, topological segmentation and Quasi-topolog-ical segmentation. Topological segmentation traces the outer contour of the words from the edge of character strokes of the upper zone then it searches for any possibility breaks along the vertical projection. Next, the characters formed by loops are segmented into two or more parts which in itself is just a rough segmentation. Finally, the quasi-topological is used to section the characters based on combination of feature-extraction and character-width measurements. The authors claim a 93% average success rate, with errors mainly induced by poor-quality printers and short horizontal links between consecutive characters.
 In the recognition system proposed by Hamami and Berkani, the text was segmented into lines and connected components using horizontal and vertical projections, then the connected components, words and sub-words, were seg-mented into characters. The segmentation is based on the contextual properties of Arabic writing and gives a solution to the over-segmentation problem of some characters. The authors claim a recognition rate of 98% using multi-font Arabic script [ 41 ].

Zheng et al. [ 42 ], proposed a new printed Arabic character segmentation algorithm, which is based on the vertical histo-gram and some other rules. Besides the structural characteris-tics between background regions and character components, characteristics of isolated Arabic characters, are also used to check whether the sub-word includes only one character. Then the vertical histogram and some other rules were used to find real segmentation points. Finally, sub-words were split at the segmentation points. The experimental results show that the algorithm achieved about 94% correct segmentation.
In [ 21 ] and [ 43 ] the vertical projection of the middle zone instead of the entire word was used. Four text line zones were identified; namely, baseline, middle, upper and lower zones. The vertical projection of the middle zone was created and a fixed threshold was used for segmenting the word into characters. If the value of the vertical projection of the mid-dle zone is lower than two thirds of the baseline thickness, the area is considered a connection area between two charac-ters. Then any area follows the connection area with a larger value being considered as the start point of a new character as long as the profile is greater than one third of the baseline. This technique was used with the Naskh font and over-seg-mentation was seen with some characters such as, . The problem was then solved in the recognition phase by combining more than one segment to produce the correct character.

In [ 44 ] El-Sheikh and Guindi developed a method that calculates the distance between the extreme point of inter-section of the contour with a vertical line. The detected boundaries should be on the baseline and no secondaries should be detected. Then, for each sub-word the average ver-tical distance is calculated, if it is lower than a certain thresh-old then a silence region is detected. The same idea was also used with a modification in the width of the baseline in [ 45 ].
In [ 46 , 47 ] the character segmentation involves the build-ing of vertical projection profile of the middle zone of the word. A fixed threshold is used for segmenting a word into characters. From the threshold level, the algorithm searches for the break along the vertical projection. Once the charac-ters are segmented, a lower level of segmentation is applied to isolate the diacritic and dots that are associated with the characters; Fig. 11 shows the horizontal and vertical profiles of a word in Arabic.

The research in [ 48 ] proposes a new segmentation pre-recognition algorithm for Arabic handwritten text for which the algorithm goes through the following steps: the stroke width is measured, sub-words and dots are detected and noise removed. The dot groups and numbers are determined and assigned to a sub-word. Then a new image of each sub-word is produced. For each sub-word image loops are detected and the baseline optimized. Characters were Over-segmented using gradients and  X  X own-up X  method. Finally, breakpoints in loops at edges are removed and using knowledge of let-ter shapes dot groups are assigned to letters. Segmentation is availableformost,notall,letters,andthesystemdoesnotcur-rently handle markings like Sha X  X da and Hamza. The letters not handled have a compound appearance, and the authors stated that future work would provide routines to recognize them even if segmentation breaks them.

In [ 49 ] Zidouri et al. proposed a method for Arabic char-acter segmentation, after applying preprocessing techniques, skeletonization of text, horizontal and vertical projections are employed to segment a page into separate lines and lines into sub-words respectively. Arabic characters are connected on the baseline. In order to dissect a sub-word into characters, the junction point between connected characters lies at base-line. After performing the above mentioned steps, an image with several guide bands is obtained. In order to select a cor-rect guide band for sub-word dissection, several features are extracted from each guide band, the selection of these fea-tures are driven through several rules. If it satisfies the rules, then it is selected; otherwise, it is rejected.

In [ 50 ], El-Khaly and Sid-Ahmed showed that a thinned sub-word is segmented into characters by following the base-line of the sub-word. The sub-word is segmented when pixels start to move above or below the baseline.

The work of Abuhaiba, [ 51 ], laid, for the first time, the groundwork for the design of new fonts to produce discrete Arabic scripts instead of a cursive Arabic script. In his work, the history of Arabic calligraphy was presented since its start. Then, he called for breaking the cursive law of Arabic script which is possible by preserving all its other properties. The author selected a TrueType Arabic transparent font from which two new discrete Arabic script fonts were developed.
The character recognition step started with preprocessing to correct any skew followed by removal of solid lines and pepper noise then, the segmentation was performed using horizontal white cuts. The system produced excellent recog-nitionrateof99.5%eventhoughitwastestedon8-pointfonts and poor-quality DeskJet printer. Therefore, it is possible to achieve a 100% recognition rate with higher font-size and better quality printers/scanners. Figure 12 shows an example of a text line in discrete Arabic script fonts.

Amin and Mari in [ 52 ] presented a structural probabilis-tic approach to recognize Arabic printed text. Words were segmented into characters using vertical projections. Word recognition is based on Viterbi algorithm and can handle some identification errors. The system was tested on just a few words and no figures were reported about its perfor-mance. It seems that the technique has inherent ambiguity and deficiencies due to interconnectivity of Arabic text.
It is very clear from the above techniques that the verti-cal projection method depends on the baseline. This method works very well for printed characters with no overlapping between them. The segmentation results are very poor with fonts forming ligatures and overlapping between characters [ 53 , 54 ]. The same problem is also observed with handwritten text due to the inter-line distance variability and the shift or skewness of the baseline [ 55 , 56 ]. Many other methods based on vertical projections are also available in the literature. In addition, many techniques use vertical projection as an initial or preprocessing stage to segment documents into lines then lines into words [ 25 , 47 , 57  X  64 ]. 5.2 Segmentation based on contour tracing Many techniques have been developed using contour trac-ing to solve the problem of character segmentation. In [ 27 ] the lower contour part is first examined to see where there are touching characters or an End-Ya ( ). Segmentation of touching characters is achieved by tracing the lower part of the contour from right to left. The lowest values in the vertical direction are recorded. The touching point is found to occur between two of these points and is the highest value in the vertical direction that satisfies the threshold condition men-tioned above. Once a touching point is found, the characters are separated. This leads to dividing the contour into two or more parts depending on the number of touching characters. Consequently, the contour of the first part is extracted once more. The lower part of this contour is examined for occur-rence of the End-Ya character. However, the segmentation and recognition procedures are interconnected so that each segmented character is first thinned and its features are then extracted. If it is not recognized, its segmentation is cancelled and the next segmentation point is taken and a recognition attempt is repeated. This self-correction procedure is neces-sary to increase the accuracy of both the segmentation and recognition procedures.

In an attempt to solve the problem of overlapping lower or upper strokes in handwritten Arabic text, Romeo-Pakker etal.[ 28 ],proposedamethodusingacontour-followingalgo-rithm which starts in the lowercase writing area and labels the detected contours. In the first stage, the junction seg-ments connecting the characters to each other are detected by taking into account the writing line thickness. The second stage detects the upper contour of each word. The strokes are detected in order to find primary segmentation points. These points are analyzed with an automaton that consid-ers the shape of the word for the determination of definitive segmentation points.
The segmentation in [ 65 ] is based on the contour of the main body of the words. In a first step, the start and end-point of the upper contour is determined. It is important to find the lower right and the lower left point of the contour because of the long vertical lines at the beginning of a word. Then, a seg-mentation of the upper contour into parts is made through a curvature of the same sign. Starting with a positive curvature for example, the change to a negative curvature will finish this segment and start with a new one. A low pass filter on the contour points is used to reduce the noise sensitivity of this procedure. In some cases where the horizontal line between the characters differs very much in length, but this length contains no information. Then, a horizontal line detector is used to mark these lines as unimportant for the recognition process. The classification in this system requires segmented characters and this segmentation is realized through the rec-ognition step. A character can only be segmented, if the clas-sification of the corresponding segments is successful.
The segmentation points in the Arabic character recogni-tion system, [ 44 ], by El-Sheikh and Guindi, were based on minimal heights of word contours and the character classifi-cation was based on Fourier descriptors as features extracted from the segmented characters.

Peng et al. in [ 66 ] proposed a scheme for the segmentation of Arabic printed characters based on the analysis of the char-acteristics of character boundary. First, the baseline position of a given word is estimated, and the cure D(x) of the dis-tance between the contour and the baseline is outlined. The candidate segmentation points are, then, found out by ana-lyzing the curve D(x). Finally, structural rules are proposed to merge over-segmented characters. It is concluded that it is hard to distinguish similar characters found in different languages. The research did not provide specific recognition rate on Arabic text, but stated results in regard to other lan-guages, Uighur/Chinese/English. The Uighur language char-actersaresimilartoArabicandtherecognitionratewasfound to be around 98%.

Mehran et al. [ 67 ] investigates the Persian/Arabic scripts and found that the upper contour of the primary stroke of sub-words called PAWs (Piece of Arabic Word) has a high gradient at the junction points, and after most junction points, the vertical projection has a value larger than the mean. On the other hand, the pen tip is generally positioned near the baseline in the desired junction points. These features are used together to identify the junction points.

The method presented by Sari et al. [ 68 ] used the con-tour presentation to detect segmentation points by applying rules to local minima of the lower contour of each sub-word. Characters, vertically overlapped due to the writing style or slant, were processed in an advanced stage. The success rate was 86% on a limited dataset of 100 words only. There-fore, the methods presented above show the need for combin-ing contour features with other features in order to achieve better character segmentation which would ultimately pro-vide higher recognition rate for OCR systems. 5.3 Segmentation based on thinning The skeleton of an object provides its essential information. A number of approaches for thinning have been reported in the literature. The thinning algorithm proposed in [ 30 ] and [ 31 ] is based on clustering the character image. The algo-rithm employs the ART2 network which is a self-organized NN. The skeleton is generated by plotting the cluster cen-ters and connecting adjacent clusters by straight lines. This method was used on isolated handwritten Arabic characters and recognition rate based on connected characters text was not provided meaning that this technique cannot be used to segment Arabic characters. Lam and Suen [ 69 ] referenced 138 publications in 1992. A simple search, today, for material on thinning identifies more than 200 papers which shows the importance of thinning in pattern recognition and the various approaches to yield skeletons of shapes. Tellache and Sid-Ahmed in [ 29 ] presented two parallel thinning algorithms used on isolated Arabic characters; the first is based on local operations to detect edge points, end-points and break-points. The second is a matching algorithm in which a set of eight templates and two images are used in the processing.
Cowell and Hussain in [ 70 ] used an iterative thinning algorithm with post processing to produce thinned forms of isolated Arabic characters. The authors also discussed the problems of thinning Arabic characters from poor quality image. In [ 71 ] thinning and stroke, segmentation were used in a preprocessing stage in a recognition system for hand-written Arabic text. Some researchers have used thinning in handwritten Arabic character recognition [ 72  X  74 ]. Thinning is an essential technique that could aid in solving the charac-ter segmentation problem; however, combining it with other techniques would be essential to guarantee better segmenta-tion. Figure 13 shows an example of an Arabic word before and after using a thinning technique. 5.4 Segmentation based on NNs Little research using NN in segmenting printed Arabic char-acters is reported in literature. The work in [ 32 , 33 ] was per-formed on handwritten Arabic writing and it is presented here to show that NN can be used in segmenting Arabic characters and that it should be suitable in printed Arabic characters. Hamid and Haraty [ 33 ] developed a technique that segments handwritten Arabic text. A recursive conven-tional algorithm was used for the initial segmentation of the text into connected blocks of characters. The algorithm, then, generates pre-segmentation points for these blocks. A NN is subsequently used to verify the accuracy of these segmenta-tion points. Two major problems were encountered: though the segmentation phase proved to be successful in vertical segmentation of connected blocks of characters it could not segment characters that are horizontally overlapped. Second, segmentation of handwritten Arabic text depends largely on contextual information, and not only on topographic fea-tures extracted from these characters. The segmentation rate reported was 69.72% and most of the errors were due to hori-zontal and vertical overlapping of characters. Ligatures could not be segmented and diacritics were miss-located especially as in handwriting, people tend to move things and not place them on top or below the associated characters. Therefore, NN is a powerful tool and using it in preprocessing stages of OCR to segment characters is a very promising and fur-ther research is encouraged in this area. Table 2 shows 6 methods of character segmentation techniques based on NNs [ 75  X  79 ], in addition to the method explained above [ 33 ]for Latin handwritten and printed text. The results confirm that low recognition rate is obtained with cursive handwritten text and better recognition rate is found with printed Latin text, however, the printed Arabic text shows very low recognition rate compared to the other NN techniques tested on Latin text this is due to the nature of the Arabic text and the difficulty in segmenting words into characters. 5.5 Segmentation methods based on graph theory Several techniques have been developed using graph theory as an attempt to solve the character segmentation problem in Arabic scripts. Elgammal and Ismail character segmen-tation approach [ 34 ] is based on representing the text using line adjacency graph representation for the segmentation of cursive text. The segmentation is achieved by considering the relation between the text baseline and this graph. The approach can segment vertical overlapping of text. The graph representing the text is used to extract structural shape fea-tures such as strokes, loops and feature points that are used in the recognition. Using two different classifiers combined with some linguistic rules, the final recognition results are obtained using a regular grammar describing the formation of the characters from the basic scripts or segments. Figure 14 illustrates a text line and the strokes, feature points and loops for the Arabic word ( ).
 The multi-queue model proposed by Xiu et al. uses a Positional Relationship Graph (PRG) to produce graphemes based on positional constraints with this PRG several paral-lel queues of graphemes are generated. The merging prob-lem is inherently a process of walking in segmentation space, which is generated from the multi-queue structure with some defined metric. The optimization can be conducted to get the appropriate merging path. The experiments performed on handwritten Arabic characters using this model show that the principle of multi-queue merging scheme has positive impact on the system performance [ 80 ].
The ORAN off-line recognition of Arabic characters and numerals [ 81 ] is based on Modified Covering Run expres-sion MCR. By using the correspondence between binary images and bipartite graphs, the MCR expression is obtained by constructing a minimum covering or maximum matching in the corresponding graph. The strokes of characters were described from the structural information obtained from the MCR expression according to some extracted features. Using zoning, the baseline was detected and the line of text was divided into four zones. Simple matching was, then, pre-formed against reference prototypes to recognize the text. Reference prototypes for the system are built according to a structural description of characters in some model document; therefore, this overcomes the problem of segmentation. Sim-ple matching is performed for the candidate characters to reference prototypes. A recognition rate of more than 97% is achieved.

The research in this area shows that graph theory needs to be extensively studied area to provide better segmentation techniques. 5.6 Segmentation based on morphological operators Morphological operators have not been extensively investi-gated for the purpose of character segmentation and, very few methods have been developed. The technique in [ 35 ]is segmentation free technique based on describing symbols in terms of shape primitives. At recognition time, the primi-tives are detected on a word image using mathematical mor-phology operations. The system, then, matches the detected primitives with symbol models. This leads to a spatial arrangement of matched symbol models. The system con-ducts a search in the space of spatial arrangements of models and outputs the arrangement with the highest posterior prob-ability as the recognition of the word. The advantage of using this whole word approach versus a segmentation approach is that the result of recognition is optimized with regard to the whole word. Results of preliminary experiments using a lex-icon of 42,000 words show a recognition rate of 99.4% for noise-free text and 73% for scanned text.

Timsari and Fahimi [ 36 ] used morphological hit or-miss transformation to segment characters. Having the input words described in terms of some pre-defined patterns, the system knowledge base, holding descriptions for all charac-ters, is searched for possible matches. Finding a match ends in the recognition of a character. This approach proves to be fast and reliable in practice. 5.7 Segmentation based on HMMs HMMs have been used successfully in speech recognition applications [ 82  X  85 ]. In [ 38 ], HMM was used in off-line printed Arabic character segmentation, after the secondary strokes were removed a sliding window was used to scan each line from right to left. Features were extracted from the windows then applied to the HMM models. M different numbers of HMMs were constructed for each character or ligature. Using only two fonts, the simplified and traditional Arabic fonts of Microsoft word application a segmentation accuracy rate of 99% was recorded. The system performance decreased as the number of models increased when using more font styles and including secondary strokes. In [ 86 ] HMM based speech recognition system performed well on OCR tasks with minimum changes and without pre-segmen-tation of data.

Touj et al. in [ 39 ] presented character segmentation rel-ative to planar HMM-based model for off-line recognition of Arabic cursive handwritten Tunisian city names. El-Hajj et al. in [ 87 ] proposed a 1D HMM off-line handwriting recog-nition system employing an analytical approach. The system is supported by a set of robust language independent fea-tures extracted on binary images. Parameters such as lower and upper baselines are used to derive a subset of baseline dependent features. Thus, lexical variability due to lower and upper parts of words is better taken into account. In addition, the proposed system learns character models without char-acter pre-segmentation.

The work of Rashwan [ 88 ] which started in 2000 and con-tinued further by him and other researchers in [ 89 ] proposed an Arabic OCR system analogous to HMM-Based Automatic Speech Recognition system. In their work most recent work in 2008 [ 89 ], the authors, tried to overcome some of the fol-lowing challenges found in Arabic OCR systems: connect-ing,dotting,multiplegraphemes,ligaturesanddiacritics.The proposed system was tested on three different fonts (Simpli-fied, Mudir and Traditional) with ligatures, the results show that the average word error rate was 3.3% and the character error rate was 0.69%.

From the above techniques using HMM, it is very clear that HMM has not been fully investigated in character seg-mentation of off-line Arabic printed text and, most of the work in Arabic handwritten text uses HMM as a classifier to recognize words [ 91  X  94 ]. 5.8 Segmentation based on template matching Template matching is a technique in digital image processing for finding small parts of an image which match a template image. Template matching has been used in character rec-ognition applications. It is used as a technique to recognize characters or words with a reference to a stored database containing a set of images for the characters or words. This technique can be considered as a segmentation technique but, the characters or segments have to be chosen manually and stored to be used for comparison. In [ 95 ] a technique was pro-posed that searches for the occurrence of an angle formed by the joining of two characters at the baseline. Using a 7  X  window the neighborhood of the characters is examined to decide on the segmentation. Although this method was able to achieve a good result, its success in finding the proper angle depends very heavily on the noise in the image.
Template matching is not a suitable technique for hand-written and or printed Arabic character recognition due to the different styles handwritings, in addition it also takes time to check all the templates especially with too many font styles and sizes, therefore, such a system is very slow and impractical. 5.9 Segmentation based on transforms Techniques based on transforms such as Hough transform or Wavelet transforms have been developed to segment char-acters from Arabic scripts. Two techniques proposed by Touj et al. in [ 96 ] are based on feature extraction using the Hough Transform. The first uses the Standard Hough Transform (SHT) based approach by dynamic sliding win-dow. This approach includes a pre-processing step feature extraction process based on SHT and classification step using HMM. The pre-processing step mainly eliminates the diacritics and centers the characters in fixed dimensioned image. Then, six directional quantified maps are obtained from the feature maps related to the orientation by using the Hough Transform. These characters are, then, passed through the HMM classifier. The dynamic sliding window technique is based on the recognition of the beginning and ending characters of the sub-word. Next, the remaining mid-dle characters of the chain that composes the sub-word are identified. Therefore, for each sub-word target image the width of the dynamic window is computed. Computing the width of the dynamic window at the right side (beginning character), the left side (ending character) and sliding the window from the left to the right of the middle characters, for each window portion the Hough space is computed, then passed through the SHT/HMM character recognition engine, Fig. 15 . This method is more sensitive to any mistakes during the serial-by-character recognition process and, it produced a recognition rate of 91%. The second method in [ 96 ]used the Generalized Hough Transform (GHT) which is applied to the whole sub-word image instead of windowed portions of the image. The obtained GHT accumulators correspond-ing to the different characters models extract the characters composing of sub-word and estimate their relative positions. This method was more efficient than the former since it solves the cases of touching between sub-words in the text and the process is independent of the character positions in the sub-word. The recognition rate of this method was 97%.
In [ 97 , 98 ] Broumandnia et al. introduced a technique based on wavelet transform, where the extracted wavelet coefficients are exploited in detecting underlying horizontal edges. The pre-processing is performed to remove artefacts on the bases of the projection of horizontal edges, the base-line is detected. The projection of horizontal edges and their location on baseline provide the segmentation points then, the classification method which is based on four NN classi-fiers, is used to distinguish the true segmentation points.
From the above methods, other transforms need to be investigated with their application to character segmentation. 5.10 Segmentation based on strokes, segments and tokens Character segmentation methods are developed on the basis of projection profiles, baseline, contour tracing, NNs, graph theory, morphology, template matching, transforms and/or techniques combining more than one method may be applied to strokes, tokens and segments of characters. Then, these small parts are combined to form characters. In [ 99 ] Cheung et al. developed an algorithm for Arabic word segmentation which, also, separates horizontally overlap-ping Arabic words/sub-words based on combining character fragments. There is, also, a feedback loop to control the combination of character fragments for recognition. This recognition-based segmentation technique is developed by fragmenting Arabic words using their structural properties, connectivity points and Convex Dominant Points. Recogni-tion is, then, preformed by combining fragments, using this technique the segmentation step is bypassed so there is no need to determine the actual character segmentation points. As there is no exact character segmentation points, some problems may occur such as that characters which look simi-lar may be misrecognized. Another problem is that characters may deform or stack on other characters. The stack problem makes the character look different and leads to misclassifi-cation which can be solved by adding such sets of characters to the database. In addition, a horizontal fragmentation algo-rithm is required to segment the characters. The system was implemented and the results show 90% recognition accuracy with a 20 characters per second recognition rate.
The work of Almuallim and Yamaguchi, [ 100 ], first, seg-ment words into strokes, then geometrical and topological features are extracted. Following this, the elative positions of the classified strokes are examined and the strokes are combined in several steps into a string of characters which represents the recognized word. A maximum recognition rate of 91% was achieved. The system failure, in most of the cases, was due to wrong segmentation of words into characters.

In [ 101 ], Ramsis et al. developed a technique for seg-menting Arabic typewritten characters after recognition. As the characters are not separated yet, they assume that the rightmost columns of a word, the number of which equals the width of the smallest character, constitute a character. If a character is not found, another column is appended to the underlying portion of the word and moments are calculated and checked against the feature space of the font. This pro-cess is repeated until a character is recognized or the end of the word is reached. The technique allowed the system to handle overlapping and to isolate the connecting baseline between connected characters. However, it seems to be sen-sitive to font type and input pattern variations. The authors did not report figures on the system performance.
Zahour et al. [ 102 ] presented a method for automatic rec-ognition of off-line Arabic cursive handwritten words based on a syntactic description of words. The features of a word are extracted and ordered to form a tree description of the script with two primitive classes: branches and loops. In this description, the loops are characterized by their classes and the branches by their marked curvature, their relationship, and whether they are in clockwise or counterclockwise direc-tion. Some geometrical attributes are applied to the primitives that are combined to form larger basic forms. A character is, then,describedbyasequenceofthebasicforms.Thereported recognition rate of the system is 86%.

In [ 103 ] Abuhaiba presented a text recognition system capable of recognizing off-line handwritten Arabic cursive text. A straight-line approximation of an off-line stroke is converted to a 1D representation from which tokens are extracted. The tokens of a stroke are re-combined to mean-ingful strings of tokens. The process of extracting the best set of basic shapes that represent the best set of token strings that constitute an unknown stroke was described. A method was developed to extract lines from pages of handwritten text, arrange main strokes of extracted lines in the same order as they were written, and present secondary strokes to main strokes. Presented secondary strokes are combined with basic shapes to obtain the final characters by formulating and solv-ing assignment problems for this purpose. The system pro-vided an overall sub-word and character recognition rates of 55.4 and 51.1%, respectively.

The above methods show that more research is needed to investigate techniques applied on character tokens, segments and strokes. This can be done by applying the segmentation-recognition approach if the characters forming more than one segment are known to the system. 5.11 Holistic approach in Arabic character segmentation The holistic approach, implicit segmentation (attempts to perform the task of segmentation and recognition simulta-neously), or segmentation-free segmentation is motivated by the discoveries in psychological studies of the human reading process. In segmentation-free techniques, words are recog-nized as a whole without dissecting them into characters as is the case in speech processing applications [ 83 , 84 , 86 ].
In [ 104 ], the word shape is analyzed with a unique vector of features which, then, are matched against a database of prototyped feature vectors. In [ 105 ], Amin fed the attributes obtained from words into an inductive learning system. In [ 106 , 107 ], words are represented by a set of Fourier coef-ficients. The holistic word recognition techniques discussed for Arabic word recognition go through the steps of a typ-ical OCR system from extraction of features, classification, where feature vectors are being compared against prototype feature vectors, and finally recognition of words. The seg-mentation-free approach in [ 108 , 109 ] is applied to four dif-ferent Arabic typefaces, where ligatures and overlaps pose challenges to segmentation-based methods. The 2D Fourier transform was applied to the normalized polar image of the wordrepresentingeachwordwithatemplatesetFouriercoef-ficients. The recognition is based on a normalized Euclidean distance from the templates of features.

In [ 110 ] Tse and Bigun proposed a segmentation free OCR technique for Serto, the cursive alphabet of Syriac-Aramaic, with which Arabic writing shares some features. The system uses linear symmetry with a threshold of correlation for each character and ordered sequence of characters to be searched for has given results of 90% correctly identified characters for the overall system ranging from 100% for some charac-tersto59%forothers.Thecombinationofusingbothordered sequence of character and the appropriate threshold of cor-relation, together, yielded the best results. Yet the authors believe that further work is needed to make the system more flexible in terms of fonts and to speed up the execution of the system.

A major drawback of holistic approaches is that their use is usually restricted to a predefined lexicon. In [ 111 ] Dehghan et al. the authors developed a word recognition system for a specific application namely, the recognition of handwritten Iranian city names from postal addresses. In [ 39 ] a method based on HMM was developed for the recognition of hand-written Tunisian city names. This is because complete words are treated as symbols for recognition instead of letters. The training stage is mandatory to expand or modify the lexicon of words. This property makes these kinds of approaches limited to only static dictionary applications like bank check recognition or for on-line recognition on a personal computer with the recognition algorithm trained for a specific user and on a particular vocabulary [ 112 , 113 ].

On the other hand, the main advantage of the holistic techniques is that they bypass serious character separation problems. In principle, no specific segmentation algorithm for the specific script is needed and, recognition errors are mainly due to failures during the classification stage. For these reasons, more and more cursive script OCR systems use this technique for improving the recognition accuracy [ 35 , 59 , 114 ]. This approach is also known as segmentation-freerecognitionduetotheabsenceof thecharacter separation stage.

In conclusion, from the character segmentation methods surveyed in this paper, some are summarized in Table 3 ,it is very clear that the structural and statistical methods pro-vide better results than others; thus, techniques based on the structural and statistical features of the characters seem to be promising for better performance. In addition, the survey in [ 1 ] also presents the features used in handwritten Arabic recognition and almost all of the features presented are struc-tural and/or statistical features and this confirms the impor-tance of further investigation of such techniques in the areas of printed and handwritten Arabic recognition. Finally, the unsatisfactory performance of OCR products, unavailability of comprehensive realistic databases and very low research support for this track of research are reasons discouraging researchers in the Middle East to extensively work in this area and this could be the reason that research groups outside of the Middle East are progressing well in this area. 6 Recent work on Arabic character segmentation Arabic character segmentation continues to be a very impor-tant area of research. In the proposed work in [ 115 ]pri-mary and secondary strokes of the sub-words are separated and, then, segmentation points are identified in the primary strokes. The vertical projection graph for each line is com-puted,whichis,then,processedtogenerateastringindicating relative variations in pixels. The string is scanned further to produce characters from the sub-words. The Sindhi text, a super set of Arabic, was used for segmentation into charac-ters. This method has been tested on images of text in many fonts and sizes, and the results show its success on their seg-mentation. It is observed that the characters like siin ( ) and baa ( ) are segmented into more than one character, so it is required that such characters be given an extra atten-tion at the later stages of the complete recognition system. No recognition rate was provided and, still, several char-acters are segmented into more than one part. Therefore, this method suffers from over segmentation of some char-acters.

Other work improved on previous techniques such as that of Zidouri in [ 116 ] he continued the project he started in [ 49 ] and proposed a general character segmentation tech-nique which, he claims, is independent of font size and font type. The claim doesn X  X  seem to be valid since only 4 fonts have been used in testing for this technique. The technique still produces over and/or under segmentation of characters. According to the author, these problems are solved by tak-ing those characters that form a ligature (combination of two or more characters) as one class and the other problems are solved during the recognition step. In my opinion, the prob-lemofover/undersegmentationwillescalateifmorefontsare added to this system; this is the main problem contributing to low recognition rates in OCR.

Recently, the research on Arabic document analysis has been of interest to many researchers. In the last few years, there, also, has been recent work in different areas such as text segmentation from mixed documents [ 117 ], omnifont Ara-bic text recognition using HMM [ 118 ], online Arabic hand-writing modeling [ 119 ], font recognition for Arabic scripts [ 120 , 121 ] and Farsi scripts [ 122 ], text-line segmentation of Arabic ancient handwritten document images [ 123 ], char-acter segmentation for Arabic handwritten text recognition [ 124 , 125 ], online recognition of Arabic [ 126 , 127 ], Persian [ 98 , 126 ] and Urdu [ 128 ] text, text font estimation [ 129 ], ... etc. 7 Arabic databases According to [ 130 ], there are many reasons why there is a need to develop a reliable and robust Arabic OCR system: no current product is yet satisfactory enough to pro-vide good performance, the Arabic language has a huge her-itage to be digitized with the fear that wars could destroy many of these material and there is a large market of such a technology of over 300 million people speak Arabic, in addition other numerous interested parties such as intelli-gent agencies, businesses, tourism agencies, social research ...etc.

In [ 131 ] AbdelRaouf et al. stated that  X  X xcellent OCR now exists for Latin based languages, but there are few systems that read Arabic, which limits the penetration of Electronic Document Management Technology into Arabic speaking countries. X  In their work, the authors emphasized the necessity of creating a database of Arabic words and pro-vided a comprehensive study and analysis of Arabic words by constructing a database for printed character recogni-tion.
According to [ 131 , 132 ], there is no central organiza-tion responsible for generating an Arabic corpus; there-fore, there is no standard reference list of Arabic words. From surveying the literature, currently there are very few large-scale image databases of Arabic printed text avail-able for the scientific research committee. Furthermore, most of the developments in OCR research have been benchmarked on private databases. To the best knowl-edge of the author the only image based databases related to the research in this survey are: ERIM and APTI dat-abases.

The Environment Research Institute of Michigan (ERIM) created a printed database of 750 pages (images) collected from books and magazines resources X , but it seems difficult to have access to this database [ 133 ]. In the work carried by a joint collaboration between DIVA Group at the univer-sity of Fribourg (Switzerland), the REGIM group at Univer-sity of Sfax (Tunisia) and the Software Engineering Unit at the Business Information System Institute (Switzerland) a synthetically generated database was developed using lexi-cons of 113,284 words, 10 fonts, 10 fonts sizes and 4 fonts styles. This databasecontains 45,313,600singlewordimages totaling more than 250-million characters. This database is called APTI for Arabic Printed Text Images [ 132 , 134 ]. To the best of the author X  X  knowledge, no database with isolated characters was reported in literature and, if there are any they would be limited and used for specific applications.
The most recent database is the one developed by the Ara-bic Language Technology Center (ALTEC), [ 135 ], which provides a database with three Arabic fonts for character sizes from 12 to 22 and resolutions 200, 300 and 600 dpi all images were scanned or captured using different scan-ners and digital cameras; however, this database was limited to printed books and theses only which does not reflect the wide variety of documents available in hardcopies. The AL-TEC website does not provide the size of the database and the database is not free since it requires a fee of $600 for a limited academic use and $6000 for a full database for commercial use.

On the other hand, Arabic text corpus or lexical databases are available from different associations or institutes, some of the research work in this area can be found in [ 131 , 136  X  138 ]. 8 Arabic OCR software In the last few decades, many OCR software solutions, com-mercial and open source have been developed to convert scanned images into text format, but very few supports Ara-bic documents. Very few Arabic OCR systems are available; however, their performance lags behind those developed for Latin or Chinese and this is mainly due to the cursive prop-erty of Arabic script [ 51 ]. According to www.aramedia.com [ 139 ], the following OCR software: Readiris Pro 11 Middle-East, VERUS, OmniPage for Arabic and Sakhr Automatic Reader are the most stable OCR software which support Ara-bic, in addition to other languages which use the Arabic script such as Farsi.

To the best knowledge of the author, very few refer-ences are available which provide some evaluation of Ara-bic OCR software. In [ 140 , 141 ], Kanungo et al. compared the performance evaluation of Sakhr OCR and OmniPage for Arabic text. In their evaluation, the authors established that the Sakhr OCR product has absolute page accuracy rates of 90.33% compared to OmniPage with 86.89%. This evaluation was performed on the SAIC Arabic image dataset and was only performed on pages which produced output. On the other hand, an evaluation of two of the earli-est developed Arabic OCR software, during the early to mid 1990s:TextPert3.7ArabicandAl-QariAl-Ali.Theprograms were tested and it was determined that Al-Qari Al-Ali is more powerful and performs better than TextPert but no quantitative data of performance was presented in the eval-uation performed [ 142 ]. The authors in [ 142 ] stated that the Al-Qari Al-Ali is very powerful and promising software. The evaluation results presented were according to the stan-dards and status of technology at the time the evaluation was performed. Also, the evaluation provided the company with recommendations for improvements. It is fair to men-tion that the above two evaluations were performed in the 1990s and that they do not reflect the current progress in technology of the first and second decades of the 21st cen-tury.

Numerous OCR companies claim that their products pro-vide high performance; however, in reality such a per-formance is rarely achieved. Most of the companies do not disclose information on the techniques/algorithms used in their system leading to more systems being developed instead of building on current technology. Most of the time systems break down when the input document is highly degraded/badly-illuminated/old/printed on low-qual-ity papers/scanned from old photocopied documents, the layout structure of the document has not been used dur-ing the training process, and fonts used are not supported by the system and availability of ligatures and diacritics. In my opinion, most of the claims on high recognition rates found in research are valid only when such systems are used in applications with specific document structures trained using databases designed for those applications. Therefore, due to the large number of OCR software avail-able mainly for languages using Latin characters and the infi-nite combinations of document types, e.g., Arabic/English, English/French, ..., etc., it is possible that no engine may perform better with particular document type than another. Thus, OCR engines developed for specific languages are found performing overall better than those including many languages.

The OCR software performance analysis provided by www.itp.net/arabic for the three prominent Arabic OCR software, Readiris 11 Pro, Venus standard and Automatic Reader 90 is the most recent OCR software performance analysis available in literature, [ 90 ]. The performance results in Table 4 show Venus Standard OCR software provides the best results with an accuracy rate of 94.5%; how-ever, this software is considered the slowest among the others, i.e., it takes longer to process an image in order to produce an output text file. All these software must specify the language before the OCR engine can start the recognition process and in some software two lan-guages can be specified such as in Automatic Reader 9.0. These software are considered expensive and they are mainly used commercially. Also, the unsatisfactory performance of OCR products, made people not inter-ested in owning such software. This confirms that com-mercially available Arabic OCR software are far from perfection and far from being acceptable to be used in applications of archiving since more time would take to edit and approve such documents recognized by these systems. Therefore, it is recommended that more research is needed to provide better techniques to deal with the character seg-mentation and classification techniques in order to develop better OCR engines. 9 Observations and discussion From the character segmentation techniques studied in this survey the following observations are noted: Charac-ter segmentation is considered a preprocessing stage in Arabic OCR Systems. Some techniques which are based on baseline detection, vertical projection, thinning, con-tour tracing, structural measures, and HMMs were used in developing techniques for character segmentation and fea-ture extraction, then preparing the text for the recognition process. The problem of Arabic character segmentation is mainly due to touching and overlapping of characters, the presence of diacritics and ligatures, and the differ-ent widths of Arabic characters. Most of the techniques propose rules that apply to most characters and fail to segment other characters causing over or under-segmenta-tion. Isolated characters may be over-segmented and over-lapping characters may suffer from under-segmentation. Some of these problems could be solved by consider-ing more than one segment for each character or apply-ing implicit-segmentation where segmentation and recog-nition are applied simultaneously and still this solution will not guarantee the proper segmentation of all the characters.

The segmentation techniques developed for certain fonts may not be appropriate for other fonts. Most of the developments in printed Arabic character recognition have been benchmarked on private databases and; therefore, the comparison of different systems or research work is rather difficult unless the same database is used then the comparison would be a valid one. Table 3 summarizes some of the techniques explained in this survey and shows that none of the techniques presented use the same data-base.

Some techniques presented were only used on hand-written text. These techniques should be further investi-gated in printed Arabic text. Most of the work in literature is based on specific fonts where no ligatures or diacritics were present. Furthermore, in most cases these diacrit-ics are called secondaries and removed as part of prepro-cessing. Specific fonts with limited data only are used. Techniques are intended mainly for specific applications on specific styles which tend to fail when used on other font types.

Databases available for printed Arabic image characters are very few. On the other hand, Arabic databases for spe-cific applications are developed from different research work such as the work of Alohali et al. in [ 143 ] who devel-oped Arabic cheque databases from real-life Arabic cheques for research in the recognition of handwritten cheques. The databases developed were, then, used in word recog-nition for legal check amounts using HMM as a classifier [ 144 ].

From the many techniques available, only limited exem-plars or datasets were presented. The dataset could be lim-ited to one font or few fonts, the number of dataset could be limited to few hundred words or images. An appropriate size Arabic database is not available and the results tend to be unacceptable on limited datasets. Therefore, most of the techniques presented do not provide the character segmen-tation rate as they only stated the overall recognition rate of the system. In doing so, the efficiency of the segmentation method is not accurate since other factors could be involved to improve the recognition rate. However, when it comes to 99% recognition rate or higher accuracy, the best method is to design a font that makes it easy to segment the characters as is the case in OCR-B font used in the Machine Readable Zone of passports [ 145 ]. The OCR-B font prints all charac-ters with the same height and width making it easy to dissect each character as a separate image. This could be difficult given the cursive nature of the Arabic writing. For specific applications using segmentation free techniques, the results are somewhat acceptable both in printed and handwritten Arabic text recognition. Abuhaiba in [ 51 ] stated that,  X  ... to produce an Arabic OCR system with performance compara-ble to that for OCR systems of other languages, we believe that breaking the cursive law of Arabic script is a great step towards achieving that goal, i.e., new fonts are designed to write Arabic in a discrete manner in a way similar to other languages such as Latin alphabet languages and Chinese. If such a step is achieved, then almost all methods and tech-niques used in other OCR systems can be used in Arabic OCR systems as well. X 
The segmentation of Arabic characters is very challeng-ing and a combination of techniques should be considered with segmentation-recognition approaches in order to guar-antee acceptable recognition rates. The problem, mainly, lies in the touching and overlapping of characters. Segmentation of ligatures proved to be difficult and, in most cases where the researchers took such fonts producing ligatures, ligatures were considered as one character which, in turn, increased the number of classes to choose from during the recognition stage.

This study concludes that, in order to guarantee better results,hybridormulti-segmentationmethodsshouldbeused to combine the success of several methods. Hence, based on this survey techniques using structural and statistical features in the segmentation stage of the OCR engine are suggested to be further investigated in this area of research to be applied to both printed and handwritten Arabic OCR systems. Segmen-tation-recognition approaches are, also, effective in solving some issues where over-segmentation may be present, thus combining several techniques could result in better perfor-mance.

The priority in this research area is to develop Arabic dat-abases of both printed and handwritten text to be used for research. The first step would be to develop real databases that can be used in research. The concentration should not be limited to specific applications such as cheques. Also limiting the recognition to the text without the diacritics causes prob-lems in understanding the context when it comes to non-Ara-bic speakers. Parallel recognition systems should be used to recognize both diacritics and text separately at the same time. 10 Conclusion In conclusion, from the techniques presented in this survey, it is very clear that none provided perfect segmentation results for a wide range of fonts making it difficult to achieve recog-nition rates above 99%. Therefore, the problem of character segmentation in both printed and handwritten Arabic text is, still, a very challenging one and, still, needs to be further investigated. A suitable solution could be the development of discrete fonts as proposed by Abuhaiba by designing fonts which introduce white space between characters in a word or sub-word. It is impossible to develop a technique which is independent of font type or size due to vast number font type with different features. In addition, this survey recom-mends the following topics for further future investigation: develop a comprehensive real Arabic database, perform anal-ysis of segmentation techniques used on both printed and handwritten Arabic text, investigate the use of combination of character segmentation techniques and improve current segmentation techniques used in commercial OCR software. Finally, researchers are trying to give more emphasis to hand-written text even though the research in the area of character segmentation of printed Arabic text is still not completely resolved as it is proven from the performance analysis of the available Arabic OCR software, Table 4 .
 References
