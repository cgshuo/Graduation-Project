 Influence maximization problem is first proposed by Dominigos and Richardson in a probabilistic perspective [6,14]. Kempe et al. [10] formulate the problem as a discrete optimization problem and propose two funda mental diffusion models, Independent Cas-cade (IC) model and Linear Threshold (LT) model. Given a social network, a diffusion model and a parameter k , the influence maximization pr oblem is formally represented as choosing a set of k seed users, under the chosen diffusion model, to maximize the influence spread. Kempe et al. [10] have pro ven that the influence maximization prob-lem is NP-hard under both IC and LT models. Although the problem is NP-hard, many into two directions. The one is greedy-based methods and the other is heuristics-based methods.

Guaranteed by the submodular property of influence spread function, the greedy-based methods can provide a (1  X  1 /e  X   X  ) approximation to the optimal solution. The basic idea of greedy-based methods is repeatedly selecting the users with largest marginal influence spread and adding them into seed users until the budget k is reached. However, computing exact influence spread under both IC and LT models is # P-hard [3]. Hence, greedy-based algorithms must run thousands of Monte-Carlo (MC) sim-This time-consuming simulation process cau ses a severe performance drawback in real applications. Heuristics-based methods, in contrast, can achieve much lower computa-tional cost by using heuristic strategies. However, the performance of heuristics-based methods is unstable because of no theoretical guarantees.
 To address these issues, in this paper we propose a greedy-based algorithm, named UserGreedy. In UserGreedy, we propose a novel concept, Activation Set , which is de-on the most standard and popular independent cascade (IC) model. Using the concept culation instead of the expensive MC simulation process. Thus, the computational cost of UserGreedy is much lower than that of trad itional greedy-based algorithms. Besides, we mathematically prove that the influence spread function based on Activation Set has the property of monotonicity and submodularity, which provides theoretical guarantee for the UserGreedy algorithm, and hence over comes the drawback of heuristics-based algorithms. The main contributions of this paper are summarized as follows.  X  We first propose an improved greedy-based algorithm named UserGreedy for in- X  We then design an influence spread function based on the the Activation Set and  X  Besides, we propose an influence-path based method to efficiently obtain the Acti- X  Extensive experiments on real-world social networks demonstrate that UserGreedy
The remainder of this paper is organized as follows. Section 2 presents the related work. In Section 3, we review the influence maximization problem. Section 4 depicts our UserGreedy algorithm. In Section 5 we describe our experiments and analyze the experimental results. Finally , Section 6 concludes the paper. Domingos and Richardson [6,14] firstly formulate the influence maximization problem as a ranking problem using a Markov random field model. Kempe et al. [10] formally propose two diffusion models and develop the greedy algorithm to solve the problem with approximation guarantees. However, the main drawback of their work is the scal-ability of their greedy algorithms. Several studies have been put to solve this issue.
Leskovec et al. [11] pr opose a  X  X azy-Forward X  optimization, called CELF. By ex-ploiting the submodular prope rty of influence function, C ELF greatly reduces the num-ber of evaluations on the influence spread. Chen et al. [4] generate a new smaller graph for every Monte-Carlo simulation and use a linear scan of the new graph by BFS or DFS to speed up the greedy algorithm. Wang et al. [16] exploit the community structure property of social networks and propose a community-based greedy algorithm (CGA). In [5], Cheng et al. propose a static greedy algorithm, which reuses the generated sub-graphs to guarantee the submodular pr operty of influence spread function. Greedy-based algorithms are not scalable to large networks as it involves too many Monte-Carlo simulations. Hence, several heuristics-based algorithms are proposed un-der the IC model to avoid using Monte-Carlo simulations. Chen et al. [4] present a degree discount heuristic algorithm called DegreeDiscountIC. DegreeDiscountIC adds of nodes to approximate the influence pr opagation and propose the PMIA algorithm. IRIE algorithm proposed in [9] integrates influence ranking with influence estimation to overcome the disadvantages of pure influe nce ranking methods. Heuristics-based al-gorithms can improve the scalability of greedy-based algorithms but without theoretical guarantees, and thus the solution quality is unstable.

Recently, several extensions of influence maximization problem have been proposed. [1,8] extend the problem into competitive settings, [2,15] study the time constrained influence maximization problem, [12] combines conformity and [7] combines novelty decay into their models. Generally, a social network can be seen as a social graph. A social graph G =( V,E ) consists of a set of vertices V representing users and a set of edges E representing relationships between users. In the I ndependent Cascade (IC) model, each edge e u,v function p : E  X  [0 , 1] . The state of each node is either active or inactive. When an At each step t , each node u activated at step t  X  1 has a single chance to activate its inactive neighbor v with probability p u,v .If u succeeds, then v will become active at step t +1 . Whether or not u succeeds, it cannot make any further attempts to activate v in subsequent rounds. The process terminates when no more activations are possible. expected number of active nodes at the end of diffusion process.
 Problem 1 (Influence Maximization). Given an input parameter k and a social graph G (
V,E ) , the influence maximization problem is to select a seed user set S  X  V ,( | S | = k ) by activating them to maxim ize the influence spread of S ,  X  ( S ) .
It is proved that the influence maximization problem is NP-hard and the influence spread function  X  (  X  ) is monotone and submodular [10]. A set function f from sets to reals f :2 V  X  R is monotone, if f ( S )  X  f ( T ) for all S  X  T . The function f is w/  X  T . Based on Theorem 1, a greedy algorith m can be used to solve the influence maximization problem.
 Theorem 1. In [13], if the set function f is non-negative, monotone and submodular with f (  X  )=0 , then the greedy algorithm achieves at least (1  X  1 /e ) approximation f (
S  X  ) ,where S  X  is the optimum solution. 4.1 Activation Set To describe the Activation Set , let us first consider an extreme situation as shown in probability is 1 . The user set activated by each user in Fig. 1 is shown in Table 1(a). first seed user. In order to calculate the marginal influence spread, the only necessary u 1 will be chosen as the second seed user. Figure 2 shows an example social network in situation, one user can spread influence to another user via the Influence Path which is defined as follows.
User ActivationSet u u u u u Definition 1 (Influence Path). Given a node u  X  V , a simple path P = &lt;u 1 ,u 2 , P IPS v ,
AP IPS 0 . 4  X  0 . 8)  X  (1  X  0 . 5  X  0 . 2) = 0 . 388 .
 Definition 2 (Activation Set). Given a seed user s  X  V that can be activated by it-that can be activated by s through the influence paths starting from s , i.e., AS ( s )= { ( ( s, 1) .
 The Activation Set of users in Fig. 2 are shown in Table 1(b). Based on the Activation seed user independently influences v , then the user v will be influenced by the seed users S with probability p S,v which can be calculated by Equation (2). Therefore, the influence spread of seed users S is the expected value of p S,v , 2 . p  X  X  u 1 } ,u 5  X   X  ( S )=1+(1  X  (1  X  0 . 2)  X  (1  X  0 . 4))+1+0 . 5+(1  X  (1  X  0 . 16)  X  of the largest marginal influence spread. 4.2 Monotonicity and Submodularity Theorem 2. The influence spread function  X  (  X  ) based on Activation Set is monotone and submodular.
 Proof. Let us firstly consider the set function g (  X  ) ,whichis Then, we can prove that g (  X  ) is monotone for S  X  T as follow. As S  X  T and p  X  [0 , 1] ,then g ( S )  X  g ( T ) and g (  X  ) is monotone. { w } )  X  g ( T ) ,where S  X  T and w/  X  T . Let us firstly consider the left part of the inequality,
As p  X  [0 , 1] and S  X  T ,then that is, g (  X  ) is submodular.

As pointed out in [10], a non-negative linear combination of monotone and submod-ular functions is also monotone and submodular. From Equation (3), we can see that  X  monotone and submodular, which concludes the proof. Algorithm 1. UserGreedy 4.3 UserGreedy Algorithm Based on Theorem 1 and Theorem 2, a greedy-based algorithm named UserGreedy can be proposed to solve the influence maximization problem.
 Algorithm 1 shows the details of our UserGreedy algorithm. The first phase of User-directly calculate the influence spread of each user. In the second phase of UserGreedy, we adopt the CELF optimization [11] to reduce the number of evaluations on the influ-ence spread of users. Max-heap H is used to keep an ordered list of marginal gain of ing the maximal marginal gain. In each iteration, a set E is used to record the examined users. We get the user u who has maximal marginal gain from the max-heap H .If u has been examined in this iteration, then it should be chosen as the next seed user. If not, subroutine MG (Algorithm 3) is called to compute the marginal gain of u with respect to S .

Algorithm 2 shows the details of obtaining Activation Set by enumerating influence when the length of the path becomes longer. These long paths with extremely small probabilities have few contributions to the influence spread but very time-consuming. Thus, we can choose a threshold  X  to prune the paths whose Pr( P ) are smaller than  X  (Lines 5-7). IPS u,v records the paths from u to v (Line 4) and then we calculate the probability that u activates v by Equation (1) (Lines 9-12). We will give a heuristic value for  X  and show the effect of choosing different  X  in Section 5.2.

Algorithm 3 calculates the marginal gain of adding a node u into seed set S . For each node v in the Activation Set of seed set, as we described in Section 4.1, we recompute Algorithm 2. Obtaining Activation Set Algorithm 3. Computation of Marginal Gain paths containing nodes in S  X  X  u } . And these validate the assumption that each seed user influences v is independent in Section 4.1.

Let n (resp. m ) be the number of nodes (resp. edges) in G . The time complexity of UserGreedy includes two parts. The first part is the time of obtaining Activation Set and the second is the time of using greedy optimization. The time complexity of the In this section, we conduct experiments on several real-world social networks to com-pare our algorithms with other existing algorithms. All algorithms are implemented in 32 GB memory. 5.1 Experiment Setup Datasets. We use four real-world social networks, NetPhy [4,5] 1 , Douban 2 , Ama-zon [3] 3 , DBLP [3,5,9] 1 , to demonstrate the performance of our algorithms comparing with other existing algorithms. The number o f nodes, edges and the type of direction of the networks are summarized in Table 2.
 Algorithms. We compare our algorithms with the other greedy-based algorithms and heuristics-based algorithms. The following is a list of baseline algorithms evaluated in our experiments. Since PMIA and IRIE are the two state-of-the-art heuristic algorithms, we do not implement others, such as Degr eeDiscountIC and Degree Centrality.  X  CELFGreedy[CELF] . The original greedy algorithm with the CELF optimization.  X  MixGreedy[MG] . The mixed greedy algorithm proposed in [4] for the IC model.  X  StaticGreedy[SG] . A greedy algorithm reuses the generated subgraphs to reduce  X  UserGreedy[UG] . The algorithm we proposed in this paper. The parameter  X  is set  X  X MIA . A heuristic algorithm uses the maximum influence paths for influence  X  X RIE . A heuristic algorithm integrates the advantages of influence ranking and in- X  X egree . A heuristic method selects k nodes according to the descending order of Influence Model. In this paper, we focus on the influence propagation in the IC model and all algorithms are implemented under the IC model. We adopt the weighted cascade model for assigning propagation probabilities among edges [3,5,10]. Each edge( u , v )in weighted cascade model is assigned a propagation probability p ( u, v )=1 /d v ,where d v is the indegree of node v . 5.2 Experimental Results The evaluation metrics include influence spread and running time. In order to get the ground truth of influence spread of seed us ers obtained by each algorithm, we conduct influence estimation using 10000 times of MC simulation with respect to the size k , from 1 to 50. For the comparison of running time, we focus on the seed size k =50 . Influence Spread. Figure 3 shows the influence spread obtained by algorithms on the four datasets. As CELF algorithm is very time-consuming, we only do CELF on the small scale networks, NetPhy and Douban . MixGreedy and StaticGreedy almost perform the same results as CELF, so we only show the result of CELF.
Among all these tests, our UserGreedy al gorithm has stable performance and per-poor performance on Douban but performs better than PMIA on other datasets. The results show that the performance of heuristic algorithms cannot be guaranteed. PMIA is more stable than IRIE but has the worse performance than User Greedy algorithms in all datasets. The results of Degree show that simply choosing high degree nodes is not effective to solve the influence maximization problem. Running Time. Figure 4(a) shows the running time of UserGreedy algorithms com-pared with greedy-based algorithms, CELF, MixGreedy and StaticGreedy. As reported in other experiments, CELF is extremely time-consuming. MixGreedy performs better than CELF, but the improvement is very small, only 0.8%. StaticGreedy is faster than CELF Greedy and MixGreedy but much slow er than UserGreedy. When the size of graph increases, the running time of StaticGreedy grows very fast. Figure 4(b) shows the running time of UserGreedy algorithm compared with heuristics-based algorithms. Heuristics-based algorithms are faster than UserGreedy, but we can see that the gap between UserGreedy and IRIE,PMIA is not large.
 Tuning of Parameter  X  . In Algorithm 2, we propose a pruning parameter  X  to con-trol the length of influence path. Here, we study how different  X  can affect the influ-ence spread and running time. We run UserGreedy with different value of  X  (0.0001  X  0.001) on datasets NetPhy and Amazon . Figure 5(a) and 5(b) show the results of in-Phy and Amazon has little effect on influence spread, but smaller  X  can speed up the running time. It means that we can choose an appropriate  X  to balance the influence spread and running time. We consider the  X  is related with 1 /R ( R is the number of Monte-Corlo simulations) as the relationship between frequency and probability. So we suggest  X  =[1  X  10]  X  1 /R .
 In this paper, we proposed an improved greedy-based algorithm, UserGreedy, for solving the influence maximization problem under the independent cascade model. UserGreedy exploits the Activation Set to estimate influence spread instead of time-consuming Monte-Carlo simulations. We h ave mathematically proven that influence spread function based on Activation Set has the property of monotonicity and submod-ularity, which provides theoretical guarant ee for the UserGreedy algorithm. Besides, we proposed an influence-path based method to efficiently obtain the Activation Set . The extensive experiments on real-world social networks demonstrate that the User-Greedy algorithm achieves better performance than the state-of-the-art heuristics-based algorithms and runs much faster than other greedy-based algorithms.

