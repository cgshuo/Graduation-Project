 Over the past decade tremendous progress has been made in data mining methods like clustering, classification, fre-quent pattern mining, and so on. Unfortunately, however, the advanced implementations are often not made publicly available, and thus the results cannot be independently ver-ified. We believe that this hampers the rapid advances in the field. With this workshop we intended to promote open source data mining (OSDM) by creating a first meeting place to discuss open source data mining methods.
 The first steps towards an open source data mining work-shop were set in previous years by the Frequent Itemset Mining Implementations workshops (FIMI), which enjoyed a large popularity [1; 2]. The OSDM workshop was held in the same spirit as these earlier workshops, and, in its first edition, the workshop therefore had a special focus on imple-mentations of frequent pattern mining algorithms. We hope that in the next years the workshop will also focus on open source implementations for other data mining problems like clustering, classification, outlier detection, and so on. Frequent pattern mining is a core field of research in data mining encompassing the discovery of patterns such as item-sets, sequences, trees, graphs, and many other structures. Varied approaches to these problems appear in numerous papers across all data mining conferences. Generally speak-ing, the problem involves the identification of items, prod-ucts, symptoms, and so forth, that often occur together in a given dataset. As a fundamental operation in data min-ing, algorithms for FPM can be used as a building block for other, more sophisticated data mining processes. During the last decade, a huge number of algorithms have been devel-oped in order to efficiently solve all kinds of FPM problems. All submissions to this workshop were necessarily accompa-nied by source code. This source code can also be found on the homepage of the OSDM 2005 workshop: All papers were independently reviewed by the members of the program committee, consisting of: Charu Aggarwal, Christian Borgelt, Mohammad El-Hajj, Lawrence B. Holder, Akihiro Inokuchi, George Karypis, Sergei Kuznetsov, Sergei Obiedkov, Jian Pei, Hannu Toivonen, and Takeaki Uno. We wish to thank all members of this committee for their effort. Also, we would like to thank all the authors, the invited speaker, and all attendees for contributing to the success of the workshop. Geoff Webb gave an invited talk about  X  X inding the Real Patterns X . Pattern discovery typically explores a massive space of potential patterns to identify those that satisfy some user-specified set of criteria. This process entails a huge risk (in many cases a near certainty) that many patterns will be false discoveries. These are patterns that satisfy the specified criteria with respect to the sample data but do not satisfy those criteria with respect to the population from which those data are drawn. The talk discussed the problem of false discoveries, and presented techniques for avoiding them. The workshop started off with a paper about  X  X enchmark-ing Frequent Itemset Mining Algorithms X , by Bal  X azs R  X acz, Ferenc Bodon and Lars Schmidt-Thieme. Traditionally, pub-lications about frequent pattern mining have a large stress on the efficiency of algorithms. To prove that an algorithm is efficient, it is common practice to perform experiments in which the run-time behavior of several frequent pattern mining implementations are compared. R  X acz et al. argued that such results should be considered with caution. They showed that differences in implementation can sometimes have a large influence on run-time behavior: FP-Trees stored in arrays sometimes result in almost 10 times faster execu-tion than FP-Trees stored using separately allocated objects. R  X acz et al. therefore argued that it could be beneficial to develop a frequent pattern mining library; this would allow for a better comparison of the merits of algorithms in stead of implementations . The authors proposed such a library and discussed some of its details; they provided an experi-mental comparison of several algorithms, obtained through this library.
 The author of the next paper, Christian Borgelt with  X  X eep-ing Things Simple: Finding Frequent Item Sets by Recur-sive Elimination X , also concentrated on a different aspect than efficiency in his presentation about the Recursive Elim-ination (RELIM) algorithm. He introduced a new frequent itemset mining algorithm whose main purpose is to be sim-ple. The algorithm is similar to well-known algorithms such as FP-Growth, but uses a simpler datastructure to store transactions during the recursive search. Still, it was shown that an implementation of this new algorithm sometimes outperforms implementations of other well-known algorithms. In another presentation,  X  X n Implementation of the FP-growth Algorithm X , Christian Borgelt elaborated on the de-tails of his implementation of FP-Growth. The distinguish-ing feature of FP-Growth, in comparison with RELIM, is the FP-Tree. This is an important difference as the construc-tion of FP-Trees through projections is usually the most time consuming part of FP-Growth. Christian Borgelt dis-cussed several alternatives to built FP-Trees  X  level-wise or branch-wise  X  and showed that the branch-wise approach seems to be the more favorable.
 It is well-known that every datastructure has its own mer-its  X  some allow for quick set inclusion tests in dense sets (like bitmaps), while others are more space efficient in the case of sparse sets (like lists). An algorithm which makes a predefined choice for one datastructure, is bound to perform efficient on one kind of dataset, but less efficient on another. This issue was studied by Takeaki Uno, Masashi Kiyomi and Hiroki Arimura, who introduce the 3rd incarnation of their LCM algorithm in  X  X CM ver 3.: Collaboration of Array, Bitmap and Prefix Tree for Frequent Itemset Mining X . This new algorithm tries to choose a suitable datastructure more dynamically, and is therefore shown to perform well on a wider variety of datasets.
 For dense datasets the number of frequent itemsets can of-ten become excessively large. In recent years this observa-tion has led to the development of condensed representa-tions. A condensed representation is a compact represen-tation of the set of frequent itemsets, from which still all frequent itemsets can be deduced. One such deduction pro-cedure relies on the inclusion-exclusion principle for sets. Although the inclusion-exclusion principle can reduce the number of patterns very effectively, the computation of this condensed representation can be very costly. Bassem Sayra, Dirk Van Gucht and Paul W. Purdom presented results  X  X n the Effectiveness and Efficiency of Computing Bounds on the Support of ItemSets in the Frequent ItemSets Mining Problem X . They provide theoretical and practical results involving heuristics for determining the inclusion-exclusion test more efficiently.
 Another condensed representation is based on maximal fre-quent itemsets, which are frequent itemsets that do not have a frequent superset. Mohammad El-Hajj and Osmar R. Za  X  X ane presented their work on  X  X mplementing Leap Traver-sals of the Itemset Lattice X . They introduce a strategy for determining the maximal frequent itemsets more quickly, thus possibly reducing the size of the search space. The ap-proach can be integrated in a modification of FP-Growth, or in the COFI algorithm, which is earlier work of the authors. As can be seen from the list of presentations up to now, the workshop had a strong focus on mining itemsets. However, also other pattern domains were present at the workshop. First, there was a presentation by Christial Borgelt, Thorsten Meinl and Michael Berthold about  X  X OSS: A Program for Molecular Substructure Mining X . The database that is mined in this work consists of a set of molecules in a graph rep-resentation. The problem is that of discovering frequent subgraphs. To make the patterns more meaningful, the au-thors consider several extensions of  X  X asic X  frequent subgraph mining: they study the use of wildcard labels and extensions with ring structures. Also the possibility of mining closed subgraphs was discussed.
 Details of another graph miner, Subdue, were presented by Nikhil S. Ketkar, Lawrence B. Holder and Diane J. Cook, in  X  X ubdue: Compression-Based Frequent Pattern Discovery in Graph Data X . Subdue differs essentially from the other pattern mining algorithms in the sense that it does not con-centrate on discovering frequent patterns; rather, it searches for patterns that achieve a high compression of the data, and relies on beam search to find those patterns. The output of Subdue is smaller than that of other pattern mining algo-rithms, but therefore also less complete. The authors pro-vided an experimental comparison which showed that the number of discovered patterns is indeed smaller, and there-fore possibly more useful; the run-time experiments showed however that Subdue required more time to find this smaller set of patterns.
 The third pattern domain that was studied at the workshop, was that of mining sequences. The interesting property of this pattern domain is that it is very simple, but, in some cases, still generalizes slightly over the problem of mining frequent itemsets, and thus provides new challenges for fre-quent pattern mining.
 The first paper about sequence mining,  X  X LWAP Sequential Mining: Open Source Code X , by Christie Ezeife, Yi Lu and Yi Liu, provided an extensive comparison between imple-mentations of the PLWAP, WAP and GSP sequence mining algorithms. Both WAP and PLWAP are very similar to FP-Growth; GSP ressembles the original Apriori algorithm. When using FP-Tree-like structures in sequence mining, the challenge is to encode positions and orders of items in the tree. WAP and PLWAP differ mainly in their solutions to this problem. In terms of run-time, the PLWAP algorithm was shown to perform better.
 The second paper about sequence mining was presented by Ferenc Bodon, and discussed  X  X  Trie-based APRIORI Im-plementation for Mining Frequent Item sequences X . Whereas the paper of Ezeife et al. concentrated mainly on depth-first tree mining, Bodon considered the details of an Apriori-like algorithm. Special attention was devoted to implementation issues, thus taking care of the earlier remark that implemen-tation details can be important. The workshop covered a broad range of relevant topics. Among others, implementation issues, condensed representations and varieties in datastructures and pattern domains were stud-ied. Everybody who is working on frequent pattern mining problems has to deal with some of these issues. We be-lieve the workshop was very successfull in bringing all these related topics together, and hope that the open source im-plementations of the presented algorithms may help many researchers in the development of their own frequent pattern mining algorithms and implementations. [1] Bart Goethals and Mohammed Javeed Zaki, editors. [2] Roberto J. Bayardo Jr., Bart Goethals, and Mo-
