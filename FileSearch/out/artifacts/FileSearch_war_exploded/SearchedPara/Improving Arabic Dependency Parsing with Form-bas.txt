 Parsers need to learn the syntax of the modeled lan-guage in order to project structure on newly seen sentences. Parsing model design aims to come up with features that best help parsers to learn the syn-tax and choose among different parses. One as-pect of syntax, which is often not explicitly mod-eled in parsing, involves morphological constraints on syntactic structure, such as agreement, which of-ten plays an important role in morphologically rich languages. In this paper, we explore the role of morphological features in parsing Modern Standard Arabic (MSA). For MSA, the space of possible mor-phological features is fairly large. We determine which morphological features help and why. We also explore going beyond the easily detectable, reg-ular form-based ( X  X urface X ) features, by represent-ing functional values for some morphological fea-tures. We expect that representing lexical abstrac-tions and inflectional features participating in agree-ment relations would help parsing quality, but other inflectional features would not help. We further ex-pect functional features to be superior to surface-only features.

The paper is structured as follows. We first present the corpus we use (Section 2), then rele-vant Arabic linguistic facts (Section 3); we survey related work (Section 4), describe our experiments (Section 5), and conclude with an analysis of pars-ing error types (Section 6). We use the Columbia Arabic Treebank (CATiB) (Habash and Roth, 2009). Specifically, we use the portion converted automatically from part 3 of the Penn Arabic Treebank (PATB) (Maamouri et al., 2004) to the CATiB format, which enriches the CATiB dependency trees with full PATB morpho-logical information. CATiB X  X  dependency represen-tation is based on traditional Arabic grammar and emphasizes syntactic case relations. It has a re-duced POS tagset (with six tags only  X  henceforth CATIB 6), but a standard set of eight dependency re-lations: SBJ and OBJ for subject and (direct or indi-rect) object, respectively, (whether they appear pre-or post-verbally); IDF for the idafa (possessive) re-lation; MOD for most other modifications; and other less common relations that we will not discuss here. For more information, see Habash et al. (2009). The CATiB treebank uses the word segmentation of the PATB: it splits off several categories of orthographic experiments reported in this paper, we use the gold segmentation. An example CATiB dependency tree is shown in Figure 1. In this section, we present the linguistic concepts rel-evant to our discussion of Arabic parsing.

Orthography The Arabic script uses optional di-acritics to represent short vowels, consonantal dou-bling and the indefininteness morpheme ( nunation ). text, only around 1.6% of all words have any dia-critic (Habash, 2010). As expected, the lack of dia-critics contributes heavily to Arabic X  X  morphological ambiguity. In this work, we only use undiacritized text; however, some of our parsing features which are derived through morphological disambiguation include diacritics (specifically, lemmas , see below).
Morphemes Words can be described in terms of their morphemes; in Arabic, in addition to concate-native prefixes and suffixes, there are templatic mor-phemes called root and pattern . For example, the one prefix and one suffix, in addition to a stem com-the pattern 1A2i3 . 1
Lexeme and features Alternatively, Arabic words can be described in terms of lexemes and inflectional features. The set of word forms that only vary inflectionally among each other is called the lexeme . A lemma is a specific word form cho-sen to represent the lexeme word set; for example, Arabic verb lemmas are third person masculine sin-gular perfective. We explore using both the dia-critized lemma and the undiacritized lemma (here-after LMM ). Just as the lemma abstracts over in-flectional morphology, the root abstracts over both inflectional and derivational morphology and thus provides a deeper level of lexical abstraction, indi-cating the  X  X ore X  meaning of the word. The pat-tern is a generally complementary abstraction some-times indicating sematic notions such causation and reflexiveness. We use the pattern of the lemma, not of the word form. We group the ROOT , PATTERN , LEMMA and LMM in our discussion as lexical fea-tures . Nominal lexemes can also be classified into two groups: rational (i.e., human) or irrational (i.e. X  non-human). 2 The rationality feature interacts with syntactic agreement and other inflectional features (discussed next); as such, we group it with those fea-tures in this paper X  X  experiments.

The inflectional features define the the space of variations of the word forms associated with a lex-eme. PATB-tokenized words vary along nine di-mensions: GENDER and NUMBER (for nominals and verbs); and CASE , STATE , and the attached defi-nite article proclitic DET (for nominals). Inflectional features abstract away from the specifics of mor-pheme forms. Some inflectional features affect more than one morpheme in the same word. For exam-ple, changing the value of the ASPECT feature in the example above from imperfective to perfective sponded X , which differs in terms of prefix, suffix and pattern.
Surface vs. functional features Additionally, some inflectional features, specifically gender and number, are expressed using different morphemes in different words (even within the same part-of-speech). There are four sound gender-number suf-fixes in Arabic: 3 +  X  (null morpheme) for masculine Plurality can be expressed using sound plural suf-fixes or using a pattern change together with singu-lar suffixes. A sound plural example is the word pair ter/granddaughters X . On the other hand, the plural of the inflectionally and morphemically feminine sin-gular word  X  X P Y X  madras+a ~  X  X chool X  is the word  X P @ Y X  madAris+  X   X  X chools X , which is feminine and plural inflectionally, but has a masculine singular suffix. This irregular inflection, known as broken plural , is similar to the English mouse/mice , but is much more common in Arabic (over 50% of plurals in our training data). A similar inconsistency ap-pears in feminine nouns that are not inflected using sound gender suffixes, e.g., the feminine form of the this inconsistency in the correspondence between in-flectional features and morphemes, and inspired by (Smr X , 2007), we distinguish between two types of inflectional features: surface (or form-based) 4 fea-tures and functional features.

Most available Arabic NLP tools and resources model morphology using surface inflectional fea-tures and do not mark rationality; this includes the PATB (Maamouri et al., 2004), the Buckwalter mor-phological analyzer (BAMA) (Buckwalter, 2004) and tools using them such as the Morphological Analysis and Disambiguation for Arabic (MADA) system (Habash and Rambow, 2005). The Elixir-FM analyzer (Smr X , 2007) readily provides the func-tional inflectional number feature, but not full func-tional gender (only for adjectives and verbs but not for nouns), nor rationality. Most recently, Alkuhlani and Habash (2011) present a version of the PATB (part 3) that is annotated for functional gender, num-ber and rationality features for Arabic. We use this resource in modeling these features in Section 5.5.
Morpho-syntactic interactions Inflectional fea-tures and rationality interact with syntax in two ways. In agreement relations , two words in a spe-cific syntactic configuration have coordinated values for specific sets of features. MSA has standard (i.e., matching value) agreement for subject-verb pairs on adjective pairs on NUMBER , GENDER , CASE , and DET . There are three very common cases of excep-tional agreement: verbs preceding subjects are al-ways singular, adjectives of irrational plural nouns are always feminine singular, and verbs whose sub-jects are irrational plural are also always feminine singular. See the example in Figure 1: the adjective,  X  X he-governmental X , of the feminine plural (and irra-lar. These agreement rules always refer to functional morphology categories; they are orthogonal to the morpheme-feature inconsistency discussed above. MSA exhibits marking relations in CASE and STATE marking. Different types of dependents have different CASE , e.g., verbal subjects are al-rarely explicitly manifested in undiacritized MSA. The D ET feature plays an important role in distin-guishing between the N-N idafa (possessive) con-struction, in which only the last noun may bear the definite article, and the N-A modifier construction, in which both elements generally exhibit agreement in definiteness.

Lexical features do not constrain syntactic struc-ture as inflectional features do. Instead, bilexical dependencies are used to model semantic relations which often are the only way to disambiguate among different possible syntactic structures. Lexical ab-straction also reduces data sparseness.

The core POS tagsets Words also have associ-ated part-of-speech (POS) tags, e.g.,  X  X erb X , which further abstract over morphologically and syntac-tically similar lexemes. Traditional Arabic gram-mars often describe a very general three-way dis-tinction into verbs, nominals and particles. In com-parison, the tagset of the Buckwalter Morphologi-cal Analyzer (Buckwalter, 2004) used in the PATB has a core POS set of 44 tags (before morphologi-cal extension). Cross-linguistically, a core set con-taining around 12 tags is often assumed, including: noun, proper noun, verb, adjective, adverb, preposi-tion, particles, connectives, and punctuation. Hence-forth, we reduce CORE 44 to such a tagset, and dub it
CORE 12. The CATIB 6 tagset can be viewed as a further reduction, with the exception that CATIB 6 contains a passive voice tag; however, this tag con-stitutes only 0.5% of the tags in the training.
Extended POS tagsets The notion of  X  X OS tagset X  in natural language processing usually does not refer to a core set. Instead, the Penn English Treebank (PTB) uses a set of 46 tags, including not only the core POS, but also the complete set of morphological features (this tagset is still fairly small since English is morphologically impover-ished). In PATB-tokenized MSA, the corresponding type of tagset (core POS extended with a complete description of morphology) would contain upwards of 2,000 tags, many of which are extremely rare (in our training corpus of about 300,000 words, we en-counter only 430 of such POS tags with complete morphology). Therefore, researchers have proposed tagsets for MSA whose size is similar to that of the English PTB tagset, as this has proven to be a useful size computationally. These tagsets are hybrids in the sense that they are neither simply the core POS, nor the complete morphologically enriched tagset, but instead they selectively enrich the core POS tagset with only certain morphological features. A full dicussion of how these tagsets affect parsing is presented in Marton et al. (2010); we summarize the main points here.

The following are the various tagsets we use in this paper: (a) the core POS tagset CORE 12; (b) the CATiB treebank tagset CATIB E X , a newly in-troduced extension of CATIB 6 (Habash and Roth, 2009) by simple regular expressions of the word form, indicating particular morphemes such as the is the best-performing tagset for Arabic on pre-dicted values. (c) the PATB full tagset ( BW ), size  X  2000+ (Buckwalter, 2004); We only discuss here the best performing tagsets (on predicted values), and BW for comparison. Much work has been done on the use of morpholog-ical features for parsing of morphologically rich lan-guages. Collins et al. (1999) report that an optimal tagset for parsing Czech consists of a basic POS tag plus a CASE feature (when applicable). This tagset (size 58) outperforms the basic Czech POS tagset (size 13) and the complete tagset (size  X  3000+). They also report that the use of gender, number and person features did not yield any improvements. We got similar results for CASE in the gold experimen-tal setting (Marton et al., 2010) but not when using predicted POS tags (POS tagger output). This may be a result of CASE tagging having a lower error rate in Czech (5.0%) (Haji  X  c and Vidov X -Hladk X , 1998) compared to Arabic (  X  14.0%, see Table 2). Simi-larly, Cowan and Collins (2005) report that the use of a subset of Spanish morphological features (num-ber for adjectives, determiners, nouns, pronouns, and verbs; and mode for verbs) outperforms other combinations. Our approach is comparable to their work in terms of its systematic exploration of the space of morphological features. We also find that the number feature helps for Arabic. Looking at He-brew, a Semitic language related to Arabic, Tsarfaty and Sima X  X n (2007) report that extending POS and phrase structure tags with definiteness information helps unlexicalized PCFG parsing.

As for work on Arabic, results have been reported on PATB (Kulick et al., 2006; Diab, 2007; Green and Manning, 2010), the Prague Dependency Tree-bank (PADT) (Buchholz and Marsi, 2006; Nivre, 2008) and the Columbia Arabic Treebank (CATiB) (Habash and Roth, 2009). Recently, Green and Manning (2010) analyzed the PATB for annotation consistency, and introduced an enhanced split-state constituency grammar, including labels for short Idafa constructions and verbal or equational clauses.
Nivre (2008) reports experiments on Arabic pars-ing using his MaltParser (Nivre et al., 2007), trained on the PADT. His results are not directly compara-ble to ours because of the different treebanks X  repre-sentations, even though all the experiments reported here were performed using MaltParser. Our results agree with previous work on Arabic and Hebrew in that marking the definite article is helpful for pars-ing. However, we go beyond previous work in that we also extend this morphologically enhanced fea-ture set to include additional lexical and inflectional features. Previous work with MaltParser in Russian, Turkish and Hindi showed gains with case but not with agreement features (Nivre et al., 2008; Eryigit et al., 2008; Nivre, 2009). Our work is the first using MaltParser to show gains using agreement-oriented features (Marton et al., 2010), and the first to use functional features for this task (this paper). Throughout this section, we only report results us-ing predicted input feature values (e.g., generated automatically by a POS tagger). After presenting the parser we use (Section 5.1), we examine a large space of settings in the following order: the contri-bution of numerous inflectional features in a con-trolled fashion (Section 5.2); 5 the contribution of the lexical features in a similar fashion, as well as the combination of lexical and inflectional features (Section 5.3); an extension of the DET feature (Sec-tion 5.4); using functional NUMBER and GENDER feature values, as well as the RATIONALITY feature (Section 5.5); finally, putting best feature combina-tions to test with the best-performing POS tagset, and on an unseen test set (Section 5.6). All results are reported mainly in terms of labeled attachment accuracy score (parent word and the dependency re-lation to it, a.k.a. L AS ). Unlabeled attachment ac-curacy score (U AS ) is also given. We use McNe-mar X  X  statistical significance test as implemented by Nilsson and Nivre (2008), and denote p &lt; 0 . 05 and p &lt; 0 . 01 with + and ++ , respectively. 5.1 Parser For all experiments reported here we used the syn-tactic dependency parser MaltParser v1.3 (Nivre, 2003; Nivre, 2008; K X bler et al., 2009)  X  a transition-based parser with an input buffer and a stack, using SVM classifiers to predict the next state in the parse derivation. All experiments were done using the Nivre "eager" algorithm. 6 For training, de-velopment and testing, we follow the splits used by Roth et al. (2008) for PATB part 3 (Maamouri et al., 2004). We kept the test unseen during training.
There are five default attributes , in the MaltParser terminology, for each token in the text: word ID (or-dinal position in the sentence), word form, POS tag, head (parent word ID), and deprel (the dependency relation between the current word and its parent). There are default MaltParser features (in the ma-chine learning sense), 7 which are the values of func-tions over these attributes, serving as input to the MaltParser internal classifiers. The most commonly used feature functions are the top of the input buffer (next word to process, denoted buf[0]), or top of the stack (denoted stk[0]); following items on buffer or stack are also accessible (buf[1], buf[2], stk[1], etc.). Hence MaltParser features are defined as POS tag at stk[0], word form at buf[0], etc. K X bler et al. (2009) describe a  X  X ypical X  MaltParser model con-figuration of attributes and features. 8 Starting with it, in a series of initial controlled experiments, we settled on using buf[0-1] + stk[0-1] for wordforms, and buf[0-3] + stk[0-2] for POS tags. For features of new MaltParser-attributes (discussed later), we used buf[0] + stk[0]. We did not change the features for deprel. This new MaltParser configuration resulted in gains of 0.3-1.1% in labeled attachment accuracy (depending on the POS tagset) over the default Malt-Parser configuration. 9 All experiments reported be-low were conducted using this new configuration. 5.2 Inflectional features In order to explore the contribution of inflectional and lexical information in a controlled manner, we focused on the best performing core ( X  X orphology-free X ) POS tagset, CORE 12, as baseline; using three different setups, we added nine morphological fea-tures with values predicted by MADA: DET (pres-ence of the definite determiner), PERSON , ASPECT , phological marking as head of an idafa construc-tion), and CASE . In setup All , we augmented the baseline model with all nine MADA features (as nine additional MaltParser attributes); in setup Sep , we augmented the baseline model with the MADA features, one at a time; and in setup Greedy , we combined them in a greedy heuristic (since the entire feature space is too vast to exhaust): starting with the most gainful feature from Sep , adding the next most gainful feature, keeping it if it helped, or discarding it otherwise, and continuing through the least gainful feature. See Table 1.

Somewhat surprisingly, setup All hurts perfor-mance. This can be explained if one examines the prediction accuracy of each feature (top of Table 2). Features which are not predicted with very high ac-curacy, such as CASE (86.3%), can dominate the negative contribution, even though they are top con-tributors when provided as gold input (Marton et al., 2010); when all features are provided as gold in-put, All actually does better than individual features, which puts to rest a concern that its decrease here is due to data sparseness. Here, when features are predicted, the DET feature (determiner), followed by the STATE (construct state, idafa ) feature, are top in-dividual contributors in setup Sep . Adding DET and the so-called  X  -features ( PERSON , NUMBER , GEN -DER , also shorthanded PNG ) in the Greedy setup, yields 1.43% gain over the CORE 12 baseline. 5.3 Lexical features Next, we experimented with adding the lexical fea-tures, which involve semantic abstraction to some degree: LEMMA , LMM (the undiacritized lemma), and ROOT . We experimented with the same setups as above: All, Sep , and Greedy . Adding all four features yielded a minor gain in setup All . LMM was the best single contributor, closely followed by ROOT in Sep . CORE 12+ LMM + ROOT (with or with-out LEMMA ) was the best greedy combination in setup Greedy . See Table 3. All lexical features are predicted with high accuracy (bottom of Table 2).
Following the same greedy heuristic, we augmented the best inflection-based model CORE 12+ DET + PNG with lexical features, and found that only the undiacritized lemma ( LMM ) alone improved performance (80.23%). See Table 4. 5.4 Inflectional feature engineering So far we experimented with morphological fea-ture values as predicted by MADA. However, it is likely that from a machine-learning perspective, rep-resenting similar categories with the same tag may be useful for learning. Therefore, we next exper-imented with modifying inflectional features that proved most useful.

As DET may help distinguish the N-N idafa con-struction from the N-A modifier construction, we attempted modeling also the DET values of pre-vious and next elements (as MaltParser X  X  stk[1] + buf[1], in addition to stk[0] + buf[0]). This vari-ant, denoted DET 2, indeed helps: when added to the CORE 12, DET 2 improves non-gold parsing qual-ity by more than 0.3%, compared to DET (Ta-ble 5). This improvement unfortunately does not carry over to our best feature combination to date, CORE 12+ DET + PNG + LMM . However, in subsequent feature combinations, we see that DET 2 helps again, or at least, doesn X  X  hurt: L AS goes up by 0.06% in conjunction with features LMM + PERSON +F N * NGR in Table 6.

We also experimented with P ERSON . We changed the values of proper names from  X  X /A X  to  X 3 X  (third person), but it resulted in a similar or slightly de-creased performance, so it was abandoned. 5.5 Functional feature values The NUMBER and GENDER features we have used so far only reflect surface (as opposed to functional ) values, e.g., broken plurals are marked as singular. This might have a negative effect on learning gen-eralizations over the complex agreement patterns in MSA (see Section 3), beyond memorization of word pairs seen together in training.

Predicting functional features To predict func-NALITY , we build a simple maximum likelihood es-timate (MLE) model using these annotations in the corpus created by Alkuhlani and Habash (2011). We train using the same training data we use through-out this paper. For all three features, we select the most seen value in training associated with the triple word-CATIB E X -lemma ; we back off to CATIB E X -lemma and then to lemma . For gender and num-ber, we further back off to the surface values; for rationality, we back off to the most common value ( irrational ). On our predicted dev set, the over-all accuracy baseline of predicting correct functional gender-number-rationality using surface features is 85.1% (for all POS tags). Our MLE model reduces the error by two thirds reaching an overall accuracy of 95.5%. The high accuracy may be a result of the low percentage of words in the dev set that do not appear in training (around 4.6%).

Digit tokens (e.g.,  X  4  X ) are also marked singu-lar by default. They don X  X  show surface agreement, even though the corresponding number-word token (  X  X K . P @ Arb  X  ~  X  X our.fem.sing X ) would. We further ob-serve that MSA displays complex agreement pat-terns with numbers (Dada, 2007). Therefore, we alternatively experimented with binning the digit to-kens X  NUMBER value accordingly:  X  the number 0 and numbers ending with 00  X  the number 1 and numbers ending with 01  X  the number 2 and numbers ending with 02  X  the numbers 3-10 and those ending with 03-10  X  the numbers, and numbers ending with, 11-99  X  all other number tokens (e.g., 0.35 or 7/16) and denoted these experiments with N UM D GT B IN . Almost 1.5% of the tokens are digit tokens in the training set, and 1.2% in the dev set. 10
Results using these new features are shown in Ta-ble 6. The first part repeats the CORE 12 baseline. The second part repeats previous experiments with surface morphological features. The third part uses the new functional morphological features instead. The performance using NUMBER and GENDER in-creases by 0.21% and 0.22%, respectively, as we re-place surface features with functional features. (Re-call that there is no functional PERSON .) We then see that the change in the representation of digits does not help; in the large space of experiments we have performed, we saw some improvement through the use of this alternative representation, but not in any of the feature combinations that performed best and that we report on in this paper. We then use just the RATIONALITY feature, which results in an increase over the baseline. The combination of all three func-provides for a nice cumulative effect. Adding PER -SON hardly improves further.

In the fourth part of the table, we include the other features which we found previously to be helpful, namely DET and LMM . Here, using DET 2 instead of DET (see Section 5.4) gives us a slight improvement, providing our best result using the CORE 12 POS tagset: 80.53%. This is a 1.85% improvement over using only the CORE 12 POS tags (an 8.7% error re-duction); of this improvement, 0.3% absolute (35% relative) is due to the use of functional features. We then use the best configuration, but without the RA -TIONALITY feature; we see that this feature on its own contributes 0.1% absolute, confirming its place in Arabic syntax. In gold experiments which we do not report here, the contribution was even higher (0.6-0.7%). The last row in the fourth part of Table 6 shows that using both surface and functional variants of NUMBER and GENDER does not help (hurts, in fact); the functional morphology features carry suf-ficient information for syntactic disambiguation.
The last part of the table revalidates the gains achieved of the best feature combination using the two other POS tagsets mentioned in Section 3: CAT -
E X (the best performing tagset with predicted val-ues), and BW (the best POS tagset with gold val-ues in Marton et al. (2010), but results shown here are with predicted values). The CATIB E X result of 80.83% is our overall best result. The result using BW reconfirms that BW is not the best tagset to use for parsing Arabic with current prediction ability. 5.6 Validating results on unseen test set Once experiments on the development set were done, we ran the best performing models on the pre-viously unseen test set (Section 5.1). Table 7 shows that the same trends hold on this set as well. We analyze the attachment accuracy by attachment type. We show the accuracy for selected attach-ment types in Table 8. Using just CORE 12, we see that some attachments (subject, modifications) are harder than others (objects, idafa). We see that by adding LMM , all attachment types improve a little bit; this is as expected, since this feature provides a slight lexical abstraction. We then add features designed to improve idafa and those relations sub-ject to agreement, subject and nominal modification ( as expected, subject, nominal modification (MN), and idafa reduce error by substantial margins (error reduction over CORE 12+ LMM greater than 8%, in the case of idafa the error reduction is 16.7%), while object and prepositional attachment (MP) improve to a lesser degree (error reduction of 6.2% or less). We assume that the relations not subject to agree-ment (object and prepositional attachment) improve because of the overall improvement in the parse due to the improvements in the other relations.

When we move to the functional features, we again see a reduction in the attachments which are subject to agreement, namely subject and nomi-nal modification (error reductions over surface fea-tures of 2.1% and 4.4%, respectively). Idafa de-creases slightly (since this relation is not affected by the functional features), while object stays the same. Surprisingly, prepositional attachment also improves, with an error reduction of 3.3%. Again, we can only explain this by proposing that the im-provement in nominal modification attachment has the indirect effect of ruling out some bad preposi-tional attachments as well.

In summary, we see that not only do morphologi-cal features  X  and functional morphology features in particular  X  improve parsing, but they improve pars-ing in the way that we expect: those relations subject to agreement improve more than those that are not.
Last, we point out that MaltParser does not model generalized feature checking or matching directly, i.e., it has not learned that certain syntactic relations require identical (functional) morphological feature values. The gains in parsing quality reflect that the MaltParser SVM classifier has learned that the pair-ing of specific morphological feature values  X  e.g., fem.sing. for both the verb and its subject  X  is use-ful, with no generalization from each specific value to other values, or to general pair-wise value match-ing. We explored the contribution of different morpho-logical (inflectional and lexical) features to depen-dency parsing of Arabic. We find that definiteness ( and undiacritized lemma ( LMM ) are most helpful for Arabic dependency parsing on predicted input. We further find that functional morphology features and rationality improve over surface morphological fea-tures, as predicted by the complex agreement rules of Arabic. To our knowledge, this is the first result in Arabic NLP that uses functional morphology fea-tures, and that shows an improvement over surface features.

In future work, we intend to improve the predic-tion of functional morphological features in order to improve parsing accuracy. We also intend to investi-gate how these features can be integrated into other parsing frameworks; we expect them to help inde-pendently of the framework. We plan to make our parser available to other researchers. Please contact the authors if interested.
 This work was supported by the DARPA GALE program, contract HR0011-08-C-0110. We thank Joakim Nivre for his useful remarks, Otakar Smr X  for his help with Elixir-FM, Ryan Roth and Sarah Alkuhlani for their help with data, and three anony-mous reviewers for useful comments. Part of the work was done while the first author was at Columbia University.
