 We propose a query-by-example geographic object search method for users that do not know well about the place they are in. Ge-ographic objects, such as restaurants, are often retrieved using an attribute-based or keyword query. These queries, however, are dif-ficult to use for users that have little knowledge on the place where they want to search. The proposed query-by-example method al-lows users to query by selecting examples in familiar places for retrieving objects in unfamiliar places. One of the challenges is to predict an effective distance metric, which varies for individuals. Another challenge is to calculate the distance between objects in heterogeneous domains considering the feature gap between them, for example, restaurants in Japan and China. Our proposed method is used to robustly estimate the distance metric by amplifying the difference between selected and non-selected examples. By using the distance metric, each object in a familiar domain is evenly as-signed to one in an unfamiliar domain to eliminate the difference between those domains. We developed a restaurant search using data obtained from a Japanese restaurant Web guide to evaluate our method.
 H.3.3 [ Information Systems ]: Information Storage and Retrieval X  Information Search and Retrieval Algorithms, Experimentation Geographic search, query-by-example, dynamic feature-space, het-erogeneous domains
A large amount of geographic object data, such as shops, ho-tels and landmarks, are available on the Web. Geographic ob-ject search has recently received much attention from several Web services. GourNavi 1 , which is a Japanese restaurant Web guide, stores over 500,000 restaurants, and Booking.com 2 is an online ho-tel reservation site with more than 70,000 hotels listed. Keyword and attribute-based search, which require users to translate their search intentions into concrete words or values, are often used in those commercial sites. However, it is difficult to explain such an object by using keywords or attributes, especially for a visitor in a place he/she does not know well. For example, if you visited Japan, you would find that almost all of the restaurants are different from those in your home town. In that case, you might find it difficult to make a query without knowledge on what kinds of food are popular and what the average cost is, even though you could query easily in your home town.

Thus, we adapt a query-by-example paradigm for geographic object search, which has been used in multimedia retrieval (often called content-based retrieval ) [3]. The advantage of the query-by-example paradigm is that users do not need to express their search intentions explicitly, but only choose examples they think to be rel-evant in a well known domain. Even if you do not have any knowl-edge about a place where you wants to find information, you can search as if you were in your home town by imagining what objects would be relevant there.

Figure 1 shows the query-by-example interface we developed for geographic object search. The interface presents two maps: one is a known place to the user, e.g., his/her hometown, and the other is an unknown place containing objects to be retrieved. They are called source map and target map , respectively. Users can select which area is shown for both maps, and which objects in the source map are relevant to their search intentions. Then, the closest objects to an input are returned as search results.

To rank objects based on an input query, the distance between ob-jects should be defined. (Note that a term distance basically means distance in a feature-space in this paper. Only a phrase geographic distance means distance in the real world.) There are mainly two problems in measuring distance.

First, the notion of distance (or similarity) depends on users. For example, the distance between two restaurants, one French for a http://www.gnavi.co.jp/ http://www.booking.com/ Figure 1: Query-by-example interface for geographic object search. $40 -meal, and the other Japanese for a $40 -meal, can be either close or far by focusing on the prices or styles. Attributes that are focused on vary by user. Thus, the adaptive distance metric should be considered, which gives weight to important dimensions in the distance calculation.

The second problem is measuring distance between objects in heterogeneous domains, i.e., a familiar and an unfamiliar place. Consider the distance in a feature-space between restaurants in Japan and China. There is a large gap between price range, popular food, styles, and scales of geographic distance. The differences raise the following questions: 1,000 yen and 70 renminbi ,howmuch are they different, and whether 5km in Japan and 5km in China are sensuously the same. Therefore, a method to deal with these heterogeneous dimensions is required for the proposed geographic search.

We followed the adaptive distance model proposed by Ishikawa et al. (MindReader) [2], and improved the model by amplifying the difference between selected and non-selected examples. For the second problem, we modeled it as an assignment problem between heterogeneous domains. Each object in one domain is mapped to one in another to minimize the sum of all the distances between the assigned pairs. The assignment bridges the gap between het-erogeneous domains, and makes it possible to find correspondence to given examples without directly calculating their distance. We evaluated the effectiveness of our proposed method by comparing it with a baseline.
Geographic objects have several attributes, including position, and each attribute value is represented as a point in n -dimensional space. An object is defined as o =( o a 1 , o a 2 ,..., o where a vector o a i is an attribute value for an attribute a as budget for restaurants. The vector o a i can represent a scalar, such as budget for restaurants, or descriptions as a term frequency-inverse document frequency (tf-idf) vector. The vector o pos position vector containing latitude and longitude.

Query-by-example for geographic object search enables users to select examples in a familiar place, and retrieves and ranks objects in an unfamiliar place based on their distances. Users can also choose a familiar place and an unfamiliar one, which are called source domain O s  X  O ,and target domain O t  X  O ( O is a set of all the objects). We assume that a user knows all the objects in the source domain O s .Since O s can be changed by individual users, it is a reasonable assumption in this model.

From the source domain O s , users can select a subset as a query to search for objects in the target domain O t . Consequently, a set of queries Q , and data D to be retrieved in query-by-example for geographic object search are defined as follows: Q =2 O s , O . Given a query Q i  X  Q , objects in D are ranked using a rank-ing function Rank( Q i , d j )= f ( Q i , d j , dist(  X  , dist(  X  ,  X  ) is the distance between selected objects and an object, i.e., dist : Q  X  O  X  R . We explain a method of determining a dis-tance metric based on dynamic feature-space selection in Section 3. The details of Rank( Q i , d j ) are discussed in Section 4. This section presents the variable distance function proposed in MindReader, explains the difference from our problem, and pro-poses an adaptation to geographic object search.
In MindReader, the distance function between a query Q i and an object o is dist( Q i , o )=( o  X  m ) T W ( o  X  m ) where it is assumed that a user has an ideal query m and an expected distance corresponding to a symmetric matrix W in mind, and the problem is to predict m and W from the given set of examples Q i .The basic idea of the prediction is to minimize the distance between se-lected examples Q i and the ideal query m . If a user had an ideal query and an ideal distance, examples selected by the user would be close to the ideal query based on his/her distance metric. Ac-cording to the assumption, the prediction of the ideal query m and the matrix of the ideal distance matrix W is formulated as a mini-mization problem: min m , W q subject to the constrain det( W )=1 . The scalar g k is a goodness value for selected examples, and the default value is 1 (it can be multi-level.)
The problem was solved analytically. The ideal vector m equals to an average of selected examples, and the matrix of the ideal dis-tance is proportional to an inverse covariance matrix. The problem we raised in Section 2 is different from that of MindReader. There are selected, and also non-selected examples  X  Q i = O s  X  Q i in our problem. Both types of examples contain meaningful information, and considering the non-selected exam-ples makes it possible to see the regional contexts . We could imag-ine the difference of the meanings between an inexpensive restau-rant in a place where there are many expensive ones and the same one in a place where there are many inexpensive ones. The former strongly indicates that price is very important, and the latter does not.

The selected examples can be regarded as positive ones, how-ever, the non-selected examples are not always negative. This is why we cannot use the method of u tilizing both positive and nega-tive examples proposed by Ashwin et al. [1].

Therefore, we propose a method for predicting the distance met-ric by difference amplification. When a user chooses examples as positive ones, it is assumed that he/she should select the closest ones to the ideal query m , while the others are not selected because he/she considers them far from the ideal query m . The basic idea of our approach is to minimize the distance between selected exam-ples Q i and the ideal query m , and also maximize the distance between non-selected examples  X  Q i and the ideal query m .The non-selected examples do not affect the ideal query m . With the ideal query m fixed to the average of Q i , non-selected examples change the ideal distance matrix W to amplify the difference be-tween selected and non-selected examples. Figure 2: Problem of ranking based on distance in heteroge-neous domains. Horizontal axis represents how Japanese-like food restaurant serves. Vertical axis represents the same for Chinese-like food.

The modified minimization problem of MindReader is: subject to the constraint: W =1 ,w ij  X  0 where w ij is an i -j element of matrix W ,and m is an average of Q i (weighted by g ,) i.e., m = 1 N
The major modifications can be seen in the range of summation, the ideal vector, and the penalty term. First, we take a sum for all the examples, including non-selected examples with negative scalar values  X  h ( Q i , o ) . The function h ( Q i , o ) has some variations, which are explained in our experiment. Second, the ideal vector is fixed to the average of selected examples, which is no longer a vari-able in the minimization, but the same as the solution of the ideal query m in MindReader. Finally, in judging the distance between objects, some attributes are commonly important, whereas others are meaningless. Thus, we pre-define a standard distance  X  an extraordinary distance obtained with the prediction is given a penalty W  X   X  W 2 .
The simplest method for ranking objects in a target domain is using the distance metric as a ranking function: Rank( Q i  X  dist( Q i , d j ) , which indicates that closer objects to a given query would receive higher ranks. This definition seems to be reasonable, however, as mentioned in Section 1, there is a fundamental problem concerning the distance between objects in heterogeneous domains. The left side of Figure 2 shows a simple example of this problem. There are many Japanese restaurants in Japan, and a few Japanese and many Chinese restaurants in China. If a source domain was set to Japan, and a target domain to China, whatever a user selects from the source domain, only the Japanese restaurant in China would be returned at the top of search results. Even if the most Chinese-like restaurant in Japan was selected, the search result would not change.

Therefore, we propose a method for eliminating the gap between heterogeneous domains by solving an assignment problem between objects in the two domains. As seen in the right side of Figure 2, the best assignment minimizes the sum of the distances between the pairs, where all the objects must be evenly assigned to one or more objects. The even assignment matches one distribution with another, and makes results different for different queries con-sidering the relativeness of features. It can be easily interpreted as an assignment problem in a bipartite graph.

The bipartite graph of the source-target domains is a pair of nodes and edges, B =( V, E ) ,where V = O s  X  O t , E  X  O s  X  O t . The distance function d between two objects is defined as d ( o i , o j )=( o i  X  o j ) T W  X  ( o i  X  o j ) ,where W distance matrix obtained in Section 3.
 The variable x i,j is defined as 1 if ( o i , o j )  X  E ,otherwise0. Assume, without loss of generality, that the size of O s is less than that of O t . The assignment problem leads to the minimization problem for edges E as follows.
 1 where x =max { n | n  X  Z  X  n  X  x } ,and x =min { n | n  X  Z  X  x  X  n } . The first restriction on the variable x i,j jects in a source domain to have almost an equal amount of edges to those in a target domain. The second restriction makes objects in a target domain have an edge to ones in a source domain.
By using the optimal assignment E  X  , Rank( Q i , d j ) takes the average of the distance between selected examples Q i and objects assigned to the data d j . The ranking function is defined as fol-lows: Rank( Q i , d j )=  X  1 N N
This section first describes our implementation of our query-by-example method for geographic object search. We then present the set up of a test set for our experiment and discuss the experimental results.
The geographic objects we used were obtained from GourNavi, which is a service for introducing Japanese restaurants. A map interface was implemented with Google Maps API 3 as can be seen in Figure 1, which allows users to select examples in a familiar place to search for restaurants in an unfamiliar place.
Restaurant objects were obtained through the GourNavi Web ser-vice 4 . The number of retrieved objects was 46,945, and were stored and indexed by latitude and longitude. There are various types of attributes, text, float, integer, and set; however, some attributes are insignificant for object distance. We only used five attributes for measuring distance between objects; name, category, category la-bel, introduction, and budget.

The standard tf-idf method was used for a text (name, category, and introduction) and set attribute (category label) value. These at-tribute values are very sparse and are represented as points in a high dimensional space. For example, 27,212 dimensions are allocated for text attribute values, and 158 for category labels (e.g., Japanese and Chinese ). Thus, we applied latent semantic analysis to com-press their dimensions into 50 for text and 20 for category labels. The budget attribute was also normalized so that the maximum dis-tance is 2, which is the same as the other attributes.
Four volunteers manually created a test set for performance eval-uation. The test set consisted of search intentions, queries, and data http://www.google.com/apis/maps/ http://api.gnavi.co.jp/ Table 1: Search intentions, source maps, and target maps. with a relevance score. The search intentions, source maps (where users select examples as a query,) and target maps (where exam-ples are retrieved) are listed in Table 1. As can be seen, we had 20 queries and 2 data sets to be retrieved. On an average, 3.4 examples were selected as a query. In our experiment, the combinations, i.e., 40 tests, were tried with each method described in the next section.
To validate the effectiveness of our method, MindReader was used for comparison, explained in Section 2 ( MindReader ). Our proposed method for predicting the distance metric by Difference Amplification is represented as DA . The Ranking by Assignment between heterogeneous domains is represented by RA . DA does not use the method RA, and we compared three methods Min-dReader, DA, and DA+RA in this experiment. In this experiment, the distance matrices were limited to a diagonal matrix.
The function h ( Q i , o ) and parameter  X  in Equation 1 were de-termined in a preliminary experiment; h ( Q i , o )=1 if the distance in a feature-space between the average vector of Q i and the vector o is less than  X  , otherwise 0. Note that the distance is normalized by the average distance between selected objects Q i ,and  X  =2 . 0 and  X  =3 . 0 . The parameter  X  wasfixedto1.
The comparison of our proposed methods with MindReader is shown in Table 2. DA method obtained higher nDCG and MAP scores than MindReader, and there was a significant difference be-tween them ( p &lt; .05). This was because the small number of given examples made it difficult to predict the distance metric for each search intension. Using the method DA, we were able to use more information including selected examples and also non-selected ones, and estimate the distance metric robustly. On the other hand, even though DA+RA got higher scores than MindReader except @1 precision, it failed to improve the performance from only DA.
We explain a case study to show the effects by DA+RA. Figure 3 shows, in the source domain of this case, restaurants are rela-tively inexpensive, on the other hand, in the target domain, some of restaurants are so expensive. There is a gap on the average bud-get between the source and target domains. Given two expensive French examples as a query, in Table 3, DA+RA returned a little different result from only DA. At the third rank, DA returned a very cheap Italian restaurant, while DA+RA presented rather expensive Japanese one.

The difference was made by their budget distributions. Imagine a user that selected the two restaurants as a query. There are a few restaurants for more than 6,000 Yen in the source domain (around 10%,) and the two restaurants should be considered the most ex-pensive restaurants for the user. On the other hand, in the target do-main, there are more restaurants for over 6,000 Yen (around 20%,) and the most expensive restaurants should be for more than 9,000 Yen (around 10%.) Considering the gap between the heterogeneous domains, the result by DA+RA was more reasonable.
We proposed a method of searching for geographic objects in an unfamiliar place with a query-by-example in a familiar place. Even if a user does not have any knowledge about a place where he/she wants to find information, the proposed method enables he/she to make a query by selecting relevant examples in a well known place.
This work was supported in part by the following projects and in-stitutions: Grants-in-Aid fo r Scientific Res earch (Nos. 18049041, 21700105 and 21700106) from MEXT of Japan, a Kyoto Univer-sity GCOE Program entitled  X  X nformatics Education and Research for Knowledge-Circulating Society, X  and the National Institute of Information and Communications Technology, Japan. [1] T. V. Ashwin, R. Gupta, and S. Ghosal. Adaptable similarity [2] Y. Ishikawa, R. Subramanya, and C. Faloutsos. Mindreader: [3] A. Yoshitaka and T. Ichikawa. A survey on content-based
