 1. Introduction In many application fields of Information Retrieval, the documents to be managed con-tain information which is structured into sub components. The diffusion of the de-facto standards for the definition of semi-structured documents such as HTML and XML, wit-nesses the tendency of producing documents in which the information is organized into (often hierarchical) components. The World Wide Web mainly contains documents having heterogeneous structures that are aimed either at specifying distinct sections intended as thematic pieces of information, or at organising the layout of the text in a graphical format. In the former case we can talk about a  X  X ogical X  structure of the document; an example of this kind of structure is given by a scientific paper, which is organised in sections such as T itle , A uthors , Introduction , References . Moreover, distinct information media such as text, images, and sound have a distinct informative role which participates in the definition of the logical structure of a document. This first kind of structure is easily and explicitly supported by means of the XML (http://www.w3.org/XML/).

On the other hand, the structure supported by the HTML can be defined as a  X  X resentation X  structure, for the information within a document is organized in sections each of which has its own typographical appearance: for example, different character dimensions and underlined words are used in order to give a distinct emphasis to distinct documents X  subparts. 302 BORDOGNA AND PASI
Most of the operating IRSs are based on indexing functions which take into account only marginally the structure of documents, being mainly based on their overall content synthesis. This allows for the retrieval of a document as a unit of information; in the case of structured documents this retrieval criterion can be in contrast with the real users X  needs, as relevant information could be found in just some subparts of a document. In order to improve the effectiveness of IRSs some considerable efforts are being spent in trying to define new conceptual models aimed at indexing and querying structured documents (Bordogna and P asi 1995, Chiaramella et al. 1996, Kaszkiel and Zobel 1997, Lalmas 1997, Navarro and Baeza Yets 1995, Wilkinson 1994). In Chiaramella (1996) the idea of producing a composite representation of structured documents is exploited, together with the idea of focusing the retrieval only on subparts of a document. In Lalmas (1997) this basic scheme is enriched with by modeling the uncertainty inherent the representation of contents. In Chiaramella (2000) and Macleod (1990) other approaches to the representation and retrieval of structured documents are presented.

In Bordogna and Pasi (1995) a novel idea of defining an indexing mechanism which e xploits users X  indication to create personalized and distinct representations of the same structured document for distinct users X  was proposed. This model exploits the vagueness in the indexing process and makes the system able to learn the users needs at the indexing level. This pioneer work has been adopted and further developed in Kazai et al. (2001) Besides the main usual methods based on relevance feedback (Crestani and Pasi 2000, Kraft et al. 1999, Pasi 2003, Salton and McGill 1984, Van Rijsbergen, 1979) the approach based on personalized indexing constitutes a novel way to design flexible Information Retrieval Systems (IRSs) able to learn the users X  preferences.

In this paper starting from the basic model in Bordogna and Pasi (1995) we propose a model to flexibly indexing and querying documents having heterogeneous structures. This model is formalized within fuzzy set theory (Klir and Folger 1988, Zadeh 1983, Zadeh 1965). By the terms  X  X eterogeneous structured documents X  we indicate documents having distinct structures, i.e., differing in some or even all their constituents subparts (components or sections).

In Bordogna and Pasi (1995) we have outlined that the production of an information surrogate, i.e., a document synthesis used for representing the document content, is strongly subjective and depends on the personal view of the interpreter, i.e., the human indexer, of this information. This observation supports the need of an indexing function able to diversify the document representations, based on the users X  view. Most of the existing indexing functions behave as a black box producing the same document representation to all users. The index terms are generally extracted from specific and short subparts of the documents, such as the title. The documents X  structure is not considered as a useful hint for producing a more e xhaustive document representation. We think that the information carried by the document structure can be exploited not only to determine useful criteria for the selection of the index terms (as some existing Web crawlers do) but specifically for the estimate of the index term significance in representing the document content.

It is well known that the index terms play a distinct role depending on the sections in which they appear: the index terms significance is strongly dependent not only on the frequency of the terms but also on the sections in which the terms occur. Further, the significance of PERSONALISED INDEXING AND RETRIEVAL 303 the terms is strongly dependent on the user needs: users prefer sections which they estimate to bear the most interesting information. So the proposed indexing model is composed of two main components: a static component, aimed at the pre-calculation of terms occurrence information within the paragraphs, i.e., the building bricks of the documents, and an adaptive component that, based on the user X  X  indications computes the index terms weights used by the matching mechanism. In particular, we propose in this paper a generalization of the model presented in Bordogna and Pasi (2000), Bordogna and Pasi (1995) by assuming that the documents to be indexed may have distinct structures, i.e., heterogeneous structures. We also propose a flexible query language for expressing soft selection conditions on both the documents X  structure and contents. The evaluation of these flexible queries makes it possible to select a fuzzy subset of semi-structured documents from a heterogeneous collection. For example, if one is interested in reading scientific papers he/she may filter documents having most of the following sections: T itle, abstract, authors, text references . The linguistic quantifier most , that specifies the soft constraint on the document structure allows not to disregard potential interesting documents whose structure is not complete with respect to the specifications; for example documents lacking the abstract section. Further, users can indicate preferences on the desired sections. The two levels of soft conditions on the structure and on the content of documents are expressed in two distinct phases but are ev aluated in a unique step so that the Retrieval Status Value reflects the satisfaction of the global query.

The paper is organized as follows: in Section 2 a synthesis of the main approaches to the representation and retrieval of structured documents is presented. In Section 3 some basic notions of fuzzy set theory are outlined. In Sections 4 and 5 the static and adaptive components respectively of the proposed indexing procedure are described. In Section 6 the structure of a flexible query language is defined to make it possible the specification of selection conditions on structured documents. Finally in Sectio n7a simple illustrative e xample of how the proposed indexing model works is given. 2. Indexing and retrieving structured documents In many application fields one has to manage documents of heterogeneous collections that are characterised by different logical structures. For example, scientific papers can be struc-tured in several distinct ways depending on the fact that they are published in journals models for structured documents (Callan 1994, Chiaramella 2000, Lalmas and Ruthven 1998, Macleod 1990, Wilkinson 1994). Two main aspects have been investigated regarding the management of structured documents, i.e. how to index structured documents so as to usefully exploit their structure in their formal representation, and how to define query ev aluation mechanisms that can retrieve also document subparts, thus not considering the whole document as the retrievable information unit. Passage retrieval is mainly concerned with the problem of retrieving subparts of a textual document as retrievable information units. One of the main aim of passage retrieval is to identify short blocks of relevant in-formation amongst irrelevant text (Callan 1994, Kaszkiel and Zobel, 1997). In Macleod (1990) a conceptual model for structured documents has been proposed, which supports a 304 BORDOGNA AND PASI query language enabling to retrieve any element in the structure based on the context as well as content. As outlined in Kazai et al. (2001) another approach to the representation and retrieval of structured documents is constituted by what the authors call aggregation-based approaches. These approaches represent or estimate the relevance of document sub-parts based on the aggregation of the representation or estimated relevance of their own (Bordogna and Pasi 1995, Chiaramella et al. 1996, Frisse 1988, Lalmas 1997, Myaeng et al. 1998).

In this paper we present an indexing model of structured documents which is based on the w ork presented in Bordogna and Pasi (1995); the peculiarity of that approach is to achieve flexibility and user adaptivity in the indexing process. We also present the structure of a query language which flexibly exploits the representation of documents obtained with the proposed indexing model. By submitting queries in this query language it is possible to retrieve the whole documents as units of information. Nevertheless, our indexing model could also be the basis for designing a passage retrieval paradigm that retrieves documents e xcerpts of variable length in response to the statements of user interests expressed in a query.

The flexibility and novelty of this indexing model mainly consists in the possibility for a user to guide the computation of an index term weight based on her/his real information interests.

In Bordogna and Pasi (1995) one-level structured documents with a fixed structure are considered. The proposed indexing function is seen as a composite function and the weight of an index term in a given document is computed by an aggregation of partial weights of the index terms within the constituents document subparts. Distinct indexing functions are defined for the distinct document sections: the occurrences of index terms in the distinct documents X  sections are considered to a distinct extent depending on the section semantics.
To obtain an overall index term weight for a given document the computed index term e xploiting possible users X  indications. This indexing model is composed of a  X  X tatic X  com-ponent and of an  X  X daptive X  component; the former produces a basic weighed representation (formally defined within fuzzy set theory) and is run as an off-line procedure, while the latter is activated at retrieval time and possibly specified through a query by a user. The user can associate a distinct importance (preference) with the sections and can require a term to be present in all the sections of the document or in at least a certain number of them for the document to be relevant to her/his needs. The query evaluation mechanism performs a partial matching between the query and the weighed representation. In Bordogna and Pasi (2000) a generalisation of the model in Bordogna and Pasi (1995) has been formalised to deal with documents having a higher level hierarchical structure.

In this paper, while we retain the definition of the static component proposed in Bordogna and Pasi (2000) for representing structured documents, we change the adaptive component of the indexing module. This is necessary since in the previous model we assumed that all documents of the collection shared a common structure. In particular we focus on the problem of defining a flexible indexing and retrieval model for documents having heterogeneous structures. During the adaptive indexing process, users can directly express PERSONALISED INDEXING AND RETRIEVAL 305 soft constraints on the desired structure of documents. This information together with the content-based selection conditions in a query influences the computation of the significance degrees of the index terms in the document and thus the retrieval results. The weighed document representation produced by the static phase of the indexing model is described in the Section 4. In Section 5 the adaptive component of the indexing model is described, allowing a user to personalise this weighed representation of structured documents. In the next section some basic notions of fuzzy set theory are presented. 3. Some basic notions of fuzzy set theory concepts Zadeh (1965). A fuzzy subset A of a universe of discourse U is defined through a membership function  X  A : U  X  [0, 1]; the value 1 indicates full membership of an element of U to A , the value 0 no membership, and a value between 0 and 1 partial membership. When a fuzzy subset A is defined on a finite set U it is denoted by: If U is an infinite set, A is denoted by: Fo re xample, the vague characterisation tall on the set of the persons X  heights can be defined as a fuzzy subset of the numeric values of the human height. Each numeric value x of height belongs to the fuzzy set tall to a given degree: this membership degree is indicated by  X  tall (x) (see figure 1).

The most common definition of the cardinality of a fuzzy set A , indicated by Count( A ) is defined as: in which  X  A ( u )i s the membership degree of u to A .
 306 BORDOGNA AND PASI
A fuzzy binary relation R is defined on the cartesian product X  X  Y , and takes values in [0, 1]; it is then a fuzzy set: in which the membership value  X  R ( x , y )i sa measure of the intensity or strength of the relation R e xisting between the elements x and y .F or example, the fuzzy relation  X  X lose ( x can be represented by a matrix (Klir and Folger 1988). 3.1. Aggregation operators Here, we recall three main classes of aggregation operators: the t -norms denoted by T ( x , y ), the t -conorms, S ( x , y ) and the mean operators, M ( x , y ), where x and y are numeric values, for example belonging to the set of real numbers . These three classes of operators satisfy the following: and x + y  X  x  X  y . Notice that the min and the max are the only t -norm and t -conorm oper-ators which satisfy the idempotence property, i.e., min( x , x ) = x and max( x , x ) = x , and they are usually adopted for the union and intersection operations respectively (Dubois and Prade 1985).

A mean operator is a continuous function M that is idempotent, symmetric, and mono-tonic. These properties imply that mean operators lie between min and max. Example of mean operators include the harmonic mean 2 xy / ( x + y ), the geometric mean and Rubens 1994). 3.2. Aggregation guided by linguistic quantifiers An aggregation process of a set of numerical values can be specified by means of a linguistic quantifier such as most , at least 80%, etc. With a linguistic quantifier a mathematical aggregation operator is associated, which can be specified either by a fuzzy integral or by means of OWA (Ordered Weighted Averaging) operators, which will be explained below. In order to make the reader well aware of the formal definition of a linguistic quantifier formally define an aggregation operator starting from a formal definition of fuzzy linguistic quantifier.
 PERSONALISED INDEXING AND RETRIEVAL 307
In Zadeh (1983) two types of linguistic quantifiers have been defined as fuzzy subsets, i.e. the absolute and the relative quantifiers. Absolute quantifiers, such as about 7, almost 6, etc. are defined as fuzzy sets with membership function  X  Q :  X  [0,1], where  X  x  X  the value  X  Q ( x ) indicates the degree to which the amount x satisfies the concept associated with the quantifier Q . Relative quantifiers like most, or about 70%, are defined as fuzzy the degree to which the proportion x satisfies the concept Q .I n figure 2 a possible definition of the quantifier most is shown. For an introduction to linguistic quantifiers (see Yager 1988, Y ager and Kacprzyk 1997, Zadeh 1965).

Fo re xample the absolute quantifier at least 5 depicted in figure 3 acts as the specification of a fuzzy or tolerant threshold of value 5 on its argument. If its argument x is equal or greater than 5, the value at least 5( x )i s1 . When 2  X  x &lt; 5, the value at least 5( x )is greater than zero.

We now illustrate how a linguistic quantifier can be associated with an aggregation operator defined as an Ordered Weighted Averaging Operator (OWA).

An Ordered Weighted Averaging (OWA) operator of dimension n is a non linear aggre-gation operator:
OW A: [0,1] n  X  [0,1] with a weighting vector W = [ w 1 ,w 2 ,...,w n ] such that: in which Max j ( x 1 , x 2 ,..., x n )i s equal to the j -th biggest element of all the x i (Yager 1988).
 308 BORDOGNA AND PASI x = 1) = x
OW A operators are mean operators, the values produced as a result of their aggregation lie between those produced by the min and those produced by the max. The degree of orness of an OWA aggregation operator expresses its closeness to the OR behaviour, and it is defined as: The OWA operator with the weighting vector W * defined as [1, 0, . . . , 0] so that w 1 = 1 corresponds to the OR operator, i.e., the max. In this case, orness ( W  X  ) = 1. The OWA operator with the weighting vector W  X  defined as [0, . . . 0, 1] so that w n = 1 corresponds to the AND operator, i.e., the min. In this case, orness ( W  X  ) = 0.

An OWA operator can be defined with a weighting vector W modeling a linguistic allows to interpret them as aggregation operators in multicriteria decision making.
The linguistic quantifiers all and at least one correspond to the OWA operators with weighting vector W  X  and W  X  respectively.

OW A operators modeling the semantics of a linguistic quantifier with a soft behavior between the two extremes all and at least one can be defined as follows: first, as it has been explained previously, the membership function of the fuzzy subset representing the monotone non-decreasing relative quantifier Q is defined: Q : [0, 1]  X  [0, 1]. Then the N elements w i  X  [0 , 1] of the weighting vector W are obtained as follows: The weighting vector of the OWA associated with the quantifier most depicted in figure 2 is defined by W most = [0 , 0 , 0 , 5 / 9 , 4 / 9 , 0].

A proposed definition of OWA operator when distinct importance degrees I 1 ,..., I n  X  [0 , 1] are associated with its arguments, is based on a modification of the values x so as to increase the contrast between the more important arguments with respect to the less important ones. The modified degrees a 1 ,..., a N are obtained as follows: where W is the OWA weighting vector, and  X  is defined as the max operator. Then, the OW A operator is applied to the modified values a 1 ,..., a N . 4. The static component of the flexible indexing model In the following, we adopt a graph-based representation of structured documents, such as the one shown in figure 4.
 PERSONALISED INDEXING AND RETRIEVAL 309
We assume that a document can be characterised by a finite number of sections, sub-sections and paragraphs, nested one into another. By the terms section and subsections we indicate document subparts that are themselves structured. They corresponds with the in-termediate nodes in the tree herarchy. By the term paragraph we indicate the subparts of the documents that are not dealt as structured, and corresponds with the leaves in the tree hier-archy. The paragraphs can be either pieces of unstructured text of variable length, or entities such as images and tables that constitute the building bricks of the document. Sections and paragraphs are handled distinctly by the indexing process. While the paragraphs are indexed by the static indexing module that yields their  X  X bjective X  and  X  X tatic X  representation, the sections are indexed by the dynamic component module and their representation reflects the subjectivity of the user needs.

In one-level structured documents the information is organised into a finite number of sections. For example, let us think at a scientific paper structured in logical sections such as title, author and introduction (see figure 5).

A one-level structured document d has a structure denoted by S 0 1 consisting of n sections identified by s 1 1 i  X  S 0 1 ={ s 1 11 ,..., s 1 1 n } where i  X  1 ,..., n , and n =| S 0 1 | .
In these documents the occurrences of a given term have a distinct informative role depending on the sections in which they appear. For example, in the case we consider fully concerned with the concept expressed by the term, while a single occurrence in the 310 BORDOGNA AND PASI r eferences suggests that the paper refers to other publications dealing with that concept. The role of each term occurrence depends then on the semantics of the section where it is located. By considering term occurrences within the documents X  sections, an indexing function can be defined for each section of the document (or for classes of sections); in this way the occurrences of a term contribute distinctly to the computation of the significance weight (index term weight) of the term in the whole document. In the  X  X tatic X  indexing phase, for each term, a set of numeric weights is then computed, one for each document section. These weights are aggregated into the overall index term weight during the retrieval phase by the adaptive module on the basis of the user indication, as explained in the following section. F ormally, we represent a one-level structured document as a fuzzy binary relation R d : Fo r sake of simplicity, as we are now considering one level structured documents, we have omitted both subscripts and superscripts from the symbols s denoting the document X  X  sections.

The value  X  ( t , s ) = F s ( d , t )e xpresses the significance of term t in the section s of function F s : D  X  T  X  [0 , 1] is then defined for each section s . The definition of F s is based on the semantics of the section s and can be specified by an expert during the indexing phase. For example, for textual sections containing short texts or formatted texts, such as author and ke ywords ,a single occurrence of a term makes it fully significant in that section: the other side, for sections containing textual descriptions of different length such as the abstract and title , F s ( d , t ) can be computed as a function of the normalised term frequency in the section (Bordogna and Pasi 1995): in which IDF t is the inverse document frequency of term t defined as: where | D | is the total number of documents in the collection D , and f td is the number of documents in which term t occurs (Salton, Fox and Wu 1983). tf dst can be defined as: in which OCC dst is the number of occurrences of term t in section s of document d and MAXOCC sd is a normalization parameter depending on the section X  X  length so as not to underestimate the significance of short sections with respect to long ones (Jones 1972).
A generalisation of the weighted representation of one-level structured documents can be easily obtained for documents with a K -level structure.
 PERSONALISED INDEXING AND RETRIEVAL 311
Let us define the fuzzy representation of the j -th section s i j at the i -th level of a document d , denoted by R i sj ,a s the fuzzy binary relation: is the significance degree of term t in section s i + 1 j of document d computed by a function F previous section. When the document d has a one-level structure, then i = 1 and j = 1, and formula (8) reduces to formula (5).
 Ag i + 1 :[0 , 1] n  X  [0 , 1] that combines the n significance degrees of term t in the immediate child nodes (subsections) of s i + 1 j . result of an aggregation step of the significance of their child nodes of level i + 3, unless they are leaves nodes, i.e., paragraphs, in which case they are computed based on one of the functions defined previously.

In the most general case, a distinct Ag i + 1 can be defined for each intermediate node, i.e. for each section s i + 1 j . This choice makes the indexing process the most flexible. The opposite solution is to assume a unique definition for all the structured sections: this makes the indexing process the most rigid one, since sections having different semantics and nature are forced to adopt the same aggregation criterion. In the definition of the Ag function one has to take into account that the indexing quality is strongly dependent on it. In particular, it influences the selectivity of the index terms. The Ag function can be defined as a mean operator, or a weigthed mean. In our approach we propose to define it by means of linguistic quantifiers such as all, most, at least n.
 In our context, linguistic quantifiers are defined by means of Ordered Weighed Averaging Operators (OWA) (Yager 1988, Yager and Kacprzyk 1997).

The aggregation function Ag i associated with section i has the meaning of quantifying the number of its subsections in which a term should appear to be considered significant in section i . This means that if one wants, as far as possible, to generate an exhaustive document representation one can set Ag i = at least one which means that the presence of an index term in a single subsection is sufficient to consider the term very significant in section i . On the other hand, if one wants, as far as possible, to generate selective representations one can set Ag i equal to at least n, or most ,or all so as to indicate that the index terms must be significant in at least n, most or all the subsections to be considered significant in section i . 312 BORDOGNA AND PASI
It is very important to notice that during the first phase (static phase) of the indexing section. The significance degrees of the structured sections at the intermediate hierarchical level (root level included) are computed at retrieval time by the user-adaptive indexing module. 5. The adaptive component of the indexing model The static component of the indexing module computes the significance degrees for doc-uments X  sections. The aim of the adaptive indexing module that is activated by the users during the retrieval phase is to compute the global significance degree F ( d , t ) for each document d and each term t in a user query, so as to generate a personalised document representation.
 structure and thanks to computation of sections index term weights by aggregation operators, the index term weights can be easily computed also for sections, thus allowing the retrieval and ranking of documents components. Moreover the index term weights computation is propagated in a bottom-up fashion by the aggregation process.

The collection of documents that we are addressing can be any collection of heteroge-neous structured documents, i.e., documents differing in some or even all their constituents sections.

During the retrieval phase, users, besides content-based retrieval can perform a structure-based retrieval so as to select from the heterogeneous collection a sub-collection of semi-structured documents, i.e., documents constituted by some basic common sections with possible additional individual sections and subsections.

Users can indicate the sections that the desired documents should contain and also distinct preferences on these sections by specifying an importance weight  X  s  X  [0,1] associated with the section name s ,s o that the preference increases with the increase of the value  X  (  X  s = 1 means that section s has maximum preference,  X  s = 0 means no importance, then no preference for section s ). Preferences can also be specified by ranking the sections names so that it is assumed that section s i is more important than section s j iff i &lt; j (being i and j the positions of s i and s j respectively in the ordered list). The documents sections that have no preference value associated with them or that do not explicitly appear in this ranked list are not considered to compute the documents X  relevance. Starting from the ranked lists the adaptive indexing module computes the numeric importance degrees of the sections, i.e.,  X  memberof [0,1], in which 0 means no importance and 1 maximum importance by applying the following formula: in which k is the cardinality of the ranked list and  X  i is the importance degree computed for section s i in the ranked list. The documents X  sections which are not listed are assigned an importance weight of zero.
 PERSONALISED INDEXING AND RETRIEVAL 313
The second phase of the user-system interaction consists in quantifying the number of preferred sections that must be present in a document for it to be selected for further analysis. This information is provided in a query together with the content-based selection condition e xpressed by a search term. If the user has only a vague idea of the possible structure of the documents available on a topic of interest he/she would not be very specific in requiring a rigid structure. In this case, he/she will be satisfied if the document structure is constituted by at least one ( at least a few ) preferred sections. On the other hand, if he/she wants to be v ery selective he/she will require to select only documents having most , all the indicated preferred sections.

The linguistic quantifier specified by the user to filter the desired structure of the doc-uments can be chosen among a set of relative quantifiers such as at least one or most respectively. Then, the OWA operator associated with the selected linguistic quantifier is applied to the modified values a 1 ,..., a n .

As we will see below, the soft constraint specified by the linguistic quantifier is expressed in combination with the content selection condition in a query. In other words, the retrieval function evaluates the satisfaction of the two-level constraints in a query by each document in the archive; the value of this function on a given document d is the Retrieval Status Value of that document and expresses the degree of relevance estimated by the system on the basis of the user X  X  indications. 6. The two level query evaluation mechanism IR users generally have only a vague idea of what they are looking for and do not want to be bothered with complex query languages that force them to know how the information is organised and stored in order to express queries, as it commonly happens to the users of data bases. Our intent here is thus to maintain as far as possible a simple query formulation that besides allowing the expression of selection conditions on the documents content, basically based on keyword searching, also allows the expression of soft selection conditions on the composition of the document into sections. Our objective is then complementary to the database approaches that define query languages for XML documents trying to incorporate ke ywords searching into structured queries (Florescu et al. 1999, Fuhr and Gro  X  johann 2001, http://www.w3.org/XML/, Macleod 1990).

We propose to define a generalisation of the Boolean query language by extending the atomic selection conditions (which in the Boolean query language are single terms) express-ing a content-based selection constraint, to express also soft constraints on the document structure. We propose the definition of the following atomic component of the query (basic selection criterion): in which t is a search term expressing a content-based selection constraint, and Q is a linguistic quantifier such as all, most ,or at least k% . Q e xpresses a part of the structure-based selection constraint. It is assumed that the quantification refers to the sections that are semantically meaningful to the user, i.e. those that the user has specified in a list, possibly 314 BORDOGNA AND PASI ordered as described in the previous section. Q is used to aggregate the significance degrees of t in the desired sections and then to compute the global Retrieval Status Value RSV( d , aq )o f the document d with respect to the atomic query condition aq .

The evaluation mechanism of an atomic query component against a document d w orks in a bottom-up fashion. The structure of document d is traversed starting from the leaf-nodes to reach the root node and the desired sections specified in the user query are identified. The corresponding significance degrees F s 1 ( d , t ) ,..., F s if d does not contain a desired section s the values F s ( d , t ) = 0 for any term t . Also if t does not index a desired section s then F s ( d , t ) = 0.

The value RSV( d , aq )i s then obtained by combining the single significance degrees of the desired sections in the document through the aggregation function (an OWA opera-tor) identified by the linguistic quantifier Q , possibly by taking into account the sections importance weights  X  s  X  [0 , 1] specified in the query.

If the user does not specify any preference on the documents X  sections, the sections are assumed equally important, and the OWA Q operator is directly applied to the significance degrees: If the sections have distinct importance weights, the significance degrees are first modified according to the formula (4) and then the OWA operator defined in formula (1) is applied to the modified values.

Only in the case that the user does not specify a structure-based selection condition but only a content-based condition the actual tree structure of the document is assumed as a reference schema to compute RSV( d , aq ). In this case the default aggregation operators Ag specified during the static indexing phase are used to compute the significance degrees of the query term t in the intermediate nodes of the hierarchy (root included). In this way, the global significance degree F ( d , t )i s derived and interpreted as the RSV( d , aq ).
Let us now consider a legitimate query of the proposed flexible query language such as the following one: To compute the overall Retrieval Status Value of a document d with respect to the whole query q , i.e., RSV( d , t ), the query evaluation mechanism first evaluates the atomic compo-nents and then combines the partial RSVs of the atomic components, i.e., the RSV( d , aq ), by interpreting the AND and the OR as the min and max respectively. 7. An example of query evaluation Let us assume to be interested in documents of research institutions such as universities and research centers carrying out research activities on  X  vegetables  X . We can guess that such PERSONALISED INDEXING AND RETRIEVAL 315 institutions can have semi-structured documents illustrating their research activitites and organisations sharing a common set of sections such as  X  X ame  X ,  X  departments  X ,  X  r esearch projects  X ,  X  publications X  , X  courses  X , and  X  laboratories  X . However, since we are not sure that all the documents of scientific research centers contain all these sections we rank them in decreasing order of their supposed likelihood to characterise what we are looking for as follows:  X  r esearch projects  X ,  X  publications X  ,  X  X ame  X ,  X  laboratories  X .  X  departments  X ,  X  courses  X , and we consider ourselves satisfied if documents have most of the specified preferred sections. Further, the content-based condition is specified by the term t =  X  vegetables  X . On these basis we will formulate the following query: By this query we intend to reject documents that are not of scientific centres even if they deal a lot with  X  vegetables  X  such as documents relatives to restaurants, or documents about recipes.

At the same time we are willing to consider also the documents in which one or two sections are missing, such as the documents without  X  departments  X  and  X  courses  X . Table 1 shows the significance degrees of the term t =  X  vegetables  X  X  n the desired sections for a set of four documents. Notice that the values of 0 indicates either that term t is not significant in section s or that section s is not present in the document. In the example we have that document d 2 is not of a scientific research center but o fa r estaurant :i t contains only the sections publications and courses , while document d 3 is a scientific research center in which  X  vegetables  X  X  s present only in the name of the institute, departments , and courses .
These degrees are computed during the static phase of the indexing process; since the  X  X ame  X ,  X  laboratories  X  and  X  departments  X  sections are short texts, their significance de-grees are defined so as to take values in { 0, 1 } .

The linguistic quantifier most is defined as a fuzzy subset of the unit interval with mem-bership function: 316 BORDOGNA AND PASI The weighting vector of the OWA most operator is obtained from  X  most through the appli-sections  X  i , i = 1 ,..., 6 are obtained from the sections X  ranking through the application of formula (10) as follows:  X  i = 6  X  i + 1 6 ,i n which i is the position of the section and 6 is the number of the sections within the ranked list. We then obtain the following importance 1 / 2;  X  courses = 1 / 3. The modified values of the significance degrees of the term t in each section of the documents in Table 1 are reported in Table 2. They are computed through the application of formula (4) by the adaptive indexing component. The last column reports the retrieval status value of the documents with respect to the query obtained by applying formula (1) to the modified values.

By this simple example it can be seen that documents d 1 and d 4 are retrieved with d 1 having a higher relevance than d 4 . This reflects the fact that d 1 satisfies the constraints specified by the query to a greater degree with respect to d 4 since the term  X  vegetables X  is more significant in a greater number of sections of d 1 than of d 4 . Document d 2 is not retrieved because its structure is judged not satisfying the requirements: the presence of only two important sections out of 6 in the document structure is not enough to consider the document satisfying the structure-based condition. Finally document d 3 is not retrieved because it does not satisfy the content-based selection condition. 8. Conclusions In this paper a flexible indexing model of heterogeneous structured documents has been defined and a flexible query language allowing the specification of both content-based and structure-based selection conditions on structured documents has been proposed. The pecu-liarity of the model is that users can personalise the document representations according to their search perspective and filter the interesting documents based on their composition into logical sections by specifying content-based and structured-based selection conditions. The proposed model is formalized within fuzzy set theory, whose basic notions are summarized in Section 3. The indexing mechanism is splitted into a static and a dynamic component: the first one, introduced in Section 4, has the goal of indexing the building bricks composing documents, i.e., the paragraphs consisting of unstructured text, images, tables, etc.. The dy-namic component, described in Section 5, is run at retrieval time during query evaluation and has the objective of computing the significance of the query terms in the documents sections by taking into account the the user needs expressed in the structured-based conditions. PERSONALISED INDEXING AND RETRIEVAL 317
The definition of this adaptive indexing mechanism constitutes a step towards the design of flexible IRSs allowing different levels of adaptability to the user needs.
 References 318 BORDOGNA AND PASI
