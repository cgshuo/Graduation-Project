 We have proposed a model of data mining pattern, called,  X  X overage patterns X  and a methodology to discover coverage patterns from transactional databases. Given a set of data items, a coverage pattern is a set of non-overlapping data items covered by a certain percentage of transactions. An Apriori-like algorithm [1] called CMine is proposed for mining coverage patterns.

In the literature, the notion of coverage is being used for solving the set cover prob-lem [2] in set theory and node cover problem [3] in graphs respectively. In [4], the notion of coverage and overlap is used to examine the creation of a tag cloud for ex-ploring and understanding a set of objects. In [5], the notion of coverage and overlap is used to solve the problem of topical query decomposition. In this paper, we have pro-posed a different kind of knowledge patterns. The proposed patterns can be employed in improving the performance of several applications such as banner advertisements.
The research in this paper is motivated w ith the problem of banner advertisement placement. The background and probl em description is as follows.

Banner advertising is one of the dominant modes of online advertising, in addition to the contextual and sponsored search advertising. A banner advertisement is described as a hypertext link that is associated with a box containing graphics which is redirected to a particular web page when a user clicks on the banner [6]. The following three entities are involved in banner advertising: advertiser, publisher and visitor. An advertiser is interested in endorsing products through banner advertisements. A publisher manages a web site or an advertisement network that sells banner advertisement space. Finally, a visitor visits the web pages of a web site which contains banners.

An advertiser has the goal of spreading his/h er advertisement to a certain percentage of people visiting a web site. The goal of the publisher is to make more revenue by effi-ciently using the advertising space availa ble in the web pages of a web site and meeting the demands of multiple advertisers. For a given web site and period, one can analyse the visitors X  behaviour by processing the transactions generated based on click stream dataset and identify the sets of web pages that cover a given percentage of visitors X  pop-ulation. However, the research issue here is t o investigate the approaches for discovering the sets of web pages which can cover a given percentage of visitors X  population based on transactions extracted from the click stream data.

Most of the research work on online adver tisement has been focused on auction models [7], keyword or phrase identification based on user queries [8], contextual ad-vertising [9] and allocation and scheduling of advertisements [10]. To our knowledge, not much amount of research work has been carried out on improving the options of-fered by the publisher to the advertisers.

The proposed model of coverage patterns could help the advertiser by making his advertisement visible to a certain percentage of web site visitors. With the proposed approach, it is possible to ensure that the publisher can meet the demands of multi-ple advertisers by considering several groups of potential pages. Through experimental results on the real world datasets we show that the proposed model and algorithm is efficient. It has a potential to improve the p erformance of banner advertisement place-ment.

A preliminary approach was presented in [11] to extract coverage patterns for banner advertisement placement. In this paper we have elaborated the model and presented a formal model of coverage patterns. We also proposed an efficient algorithm to extract complete set of coverage patterns and conducted experiments.

The rest of this paper is organized as follows: In section 2, we propose the model and approach to extract coverage patterns. In section 3, we present experimental results. In the last section, we present the conclusion and future work. In this section, we first explain the model of coverage patterns. Next, we discuss the computational issues involved in extracting coverage patterns and explain how the no-tion of sorted closure property can be exploited for efficient extraction of coverage patterns. Subsequently, we present the algorithm to extract coverage patterns. 2.1 Coverage Patterns As already mentioned, we identify the issu e of banner advertisement placement as one of the potential application of coverage patterns. For a given e-commerce web site, the transactions generated from click stream dataset can be used to identify the sets of web pages that cover a given percentage of visitors X  population. Such a knowledge could be used to place the banner advertisements assuming similar visitors X  behaviour. The related issues will be investigated as a part of future work.

To present the model of coverage patterns, we consider transactions generated from click stream data of a web site. However, the model can be extended to any transactional data set.

The basic terminology is as follows: Let W = { w 1 ,w 2 ,  X  X  X  ,w n } be a set of iden-tifiers of web pages and D be a set of transactions, where each transaction T is a set of web pages such that T  X  W . Associated with each transaction is a unique trans-actional identifier called TID .Let T w i , w i  X  W be the set of all TIDs in D that contain the web page w i . A set of web pages X  X  W i.e., X = { w p ,  X  X  X  ,w q ,w r } , 1  X  p  X  q  X  r  X  n , is called the pattern. A pattern containing k number of web pages is called a k -pattern. In other words, the length of k -pattern is k .
 Example 1. Consider the transactional database shown in Table 1. It contains 10 transactions. The set of pages, W = { a, b, c, d, e, f } .The TIDs containing the web page  X  a  X  are 1, 2, 3, 4 and 10. Therefore, T a = { 1 , 2 , 3 , 4 , 10 } . The set of web pages 2-pattern.
 The percentage of transactions in D that contain the web page w i  X  W is known as the  X  X elative frequency of a web page w i  X  W  X  and denoted as RF ( w i ) .
 Definition 1. (Relative frequency of a web page w i  X  W .) Let | T w i | indicates the total number of transactions that contain w i . The relative frequency of w i is denoted as RF ( w i ) . That is, RF ( w i )= | T w i | | D | .
 Note that from the advertisement point of vi ew the pages that are visited by more num-ber of users are interesting. We capture this aspect with the notion of frequent page. The frequent web pages are web pages which have relative frequency no less than the user-specified threshold value, called minimum relative frequency.
 Definition 2. (Frequent web page.) A web page w i  X  W is considered frequent if RF ( w i )  X  minRF ,where minRF is the user-specified minimum relative frequency threshold.
 Example 2. Continuing with the example, the relative frequency of  X  a  X  i.e., RF ( a )= | = 5 10 =0 . 5 . If the user-specified minRF =0 . 5 ,then X  a  X  is called a frequent web page because RF ( a )  X  minRF . Next, we capture the notion that given a set of web pages how many users visit at least one web page in the set. It means that if we place an advertisement on all pages in the set it will guarantee the delivery of advertisement to the users who visit atleast one page. This aspect is captured through the notion of coverage set .
 Definition 3. (Coverage set of a pattern X = { w p ,  X  X  X  ,w q ,w r } , 1  X  p  X  q  X  r  X  n .) The set of distinct TIDs containing at least one web page of X is called the coverage set of pattern X and is denoted as CSet ( X ) . Therefore, CSet ( X )= T w p  X  X  X  X  X  T w q  X  T A pattern will be interesting if its coverage set contains more than a threshold number of transactions. This aspect is captured through the notion of coverage support. Definition 4. (Coverage-support of a pattern X .) The ratio of size of coverage set of X to the transactional database size is called the coverage-support of pattern X and is denoted as CS ( X ) .
 coverage support of { a, b } i.e., CS ( { a, b } )= | CSet ( { a,b } ) | | D | = 10 10 =1 . For a pattern X , CS ( X )  X  [0 , 1] .If CS ( X )=0 , no single web page of X has appeared in the entire transactional database. If CS ( X )=1 , every transaction in T contains at least one web page w j  X  X .

It can be noted that once a pattern X has certain coverage-support, then adding other web pages in particular web pages co-occurring with any of the web pages belonging to X to that pattern may not increase the coverage support significantly. From the ad-vertisement point of view, such a pattern can be uninteresting to the advertiser. This is because the same users visit the web pages as there is an overlap of coverage set of X and coverage set of new single web page pattern.
 Example 4. In the transactional database shown in Table 1, T { a } = { 1 , 2 , 3 , 4 , 10 } If user-specified minCS =0 . 5 ,then { a, c } is an interesting pattern. However, this pattern is uninteresting as the pattern  X  c  X  has not increased coverage-support of the pattern  X  a  X .
 To capture this aspect, we introduce the notion overlap ratio of the pattern . Definition 5. (Overlap ratio of a pattern.) Overlap ratio of a pattern X = { w p ,  X  X  X  ,w q ,w r } ,where 1  X  p  X  q  X  r  X  n and | T w p | X  X  X  X  X  X | T w q | X | T w r | ,is the ratio of the number of transactions common in X  X  X  w r } and { w r } to the number of transactions in w r . It is denoted as OR ( X ) and is measured as follows. For a pattern X , OR ( X )  X  [0 , 1] .If OR ( X )=0 , there exists no common transactions between X  X  X  w r } and { w r } .If OR ( X )=1 , w r has occurred in all the transactions where at least one web page w j  X  ( X  X  X  w r } ) has occurred.
 0 . 4 .
 Note that a coverage pattern is interesting if it has high coverage support and low over-lap ratio. As a result an advertisement is exposed to more number of users by reducing repetitive display of the advertisement. The definition of coverage pattern is as follows. Definition 6. (Coverage pattern X .) A pattern X is said to be a coverage pattern if CS ( X )  X  minCS , OR ( X )  X  maxOR and RF ( w i )  X  minRF ,  X  w i  X  X .The variables, minCS and maxOR represent user-specified minimum coverage support and maximum overlap ratio, res pectively. A coverage pattern X having CS ( X )= a % and OR ( X )= b % is expressed as Example 6. If minRF =0 . 4 , minCS =0 . 7 and maxOR =0 . 5 , then the pattern { a, b } is a coverage pattern. It is because RF ( a )  X  minRF , RF ( b )  X  minRF , CS ( { a, b } )  X  minCS and OR ( { a, b } )  X  maxOR . This pattern is written as follows: Problem statement: Given a transactional database D , set of web pages W , and user-specified minimum relative frequency ( minRF ), minimum coverage support ( minCS ) and maximum overlap ratio ( maxOR ), discover complete set of coverage patterns such that i. If X is a coverage 1-pattern (i.e., k =1 ), then RF ( w i )  X  minRF and RF ( w i )  X  ii. Otherwise (i.e., when k&gt; 1 ), each coverage pattern X must have CS ( X )  X  2.2 Mining Coverage Patterns A naive approach to find the complete set of c overage patterns for a dataset consisting of n web pages is to generate all possible (2 n  X  1) combinatorial patterns (CP) from n web pages. Now, each pattern in CP is added to the coverage pattern set if it satisfies minCS, minRF and maxOR constraints. The problem with this approach is, if n is large the search space will be large leading to high computational cost. The search space can be reduced if the coverage pattern satisfies downward closure property on either coverage support or overlap ratio.

Our analysis on coverage patterns states that the measure coverage support does not satisfy downward closure property . That is, although a pattern satisfies minCS ,itis not necessary that all its non-empty subsets will also satisfy minCS value. Example 7. Consider the patterns { a } , { e } and { a, e } . The coverage supports of these patterns are 0.5, 0.4 and 0.7, respectively. If the user-specified minCS =0 . 7 ,then the pattern { a, e } satisfies minCS value. However, its non-empty subsets do not satisfy minCS value.
 The parameter overlap ratio also does not satisfy downward closure property if a pat-tern is considered as an unordered set of web pages. However, this measure satisfies downward closure property if a pattern is an ordered set, where web pages are sorted in descending order of their frequenc ies. This property is known as the sorted closure property [12].
 Property 1. If X  X  Y ,then CSet ( X )  X  CSet ( Y ) .
 Property 2. Sorted closure property :Let X = { w p ,  X  X  X  ,w q ,w r } beapatternsuch that RF ( w p )  X  X  X  X  X  X  RF ( w q )  X  RF ( w r ) and 1  X  p  X  q  X  r  X  n .If OR ( X )  X  maxOR , all its non-empty subsets containing w r and having size k  X  2 will also have overlap ratio less than or equal to maxOR .
 RF ( w c ) .If OR ( w a  X  w c ) &gt;maxOR ,then OR ( { w a  X  w b } X  w c ) &gt;maxOR because from Property 1 Definition 7. (Non-overlap pattern X .) A pattern X is said to be non-overlap if OR ( X )  X  maxOR and RF ( w i )  X  minRF ,  X  w i  X  X .
 Every coverage pattern is a non-overlap pattern, however it is not the same vice versa. The sorted closure property of non-overlap patterns is used for minimizing the search space while mining complete set of coverage patterns by designing an algorithm similar to the Apriori algorithm [1]. The detailed algorithm for mining the complete coverage patterns is given in next subsection. 2.3 Coverage Pattern Extraction Algorithm We use the following notations. Let F be a set of frequent items, C k be a set of can-didate k -patterns, L k be a set of coverage k -patterns and NO k be a set of non-overlap k -patterns. The proposed algorithm CMine employs a level-wise search to discover the complete set of coverage patterns. In level-wise search, k -patterns are used to explore ( k +1) -patterns. The proposed CMine algorithm is different from Apriori algorithm [1] used for mining frequent patterns. The main reason is as follows: Frequent patterns sat-isfy downward closure property . Therefore, Apriori algorithm uses frequent k -patterns to explore ( k +1) -patterns. CMine cannot explore ( k +1 )-patterns with coverage k -patterns as coverage patterns no longer satisfy downward closure property .
The detailed description of the algorithm is as follows: The algorithm CMine begins with a scan of the database and discovers set of all frequent web pages (denoted as F ) and coverage 1-patterns (denoted as L 1 ). Non-overlap 1-patterns (denoted as NO 1 ) will be the set of all frequent 1 web pages. Next, web pages in NO 1 are sorted in descending order of their frequencies. This is an exception from Apriori algorithm [1] that has to be carried out in CMine algorithm to efficiently mine coverage patterns. Each web page w contain the web page w i .Using NO 1 as a seed set , candidate patterns C 2 are generated by combining NO 1 NO 1 .From C 2 , the patterns that satisfy minCS and maxOR are generated as coverage 2-patterns, L 2 . Simultaneously, all candidate 2-patterns that satisfy maxOR are generated as non-overlap 2-patterns NO 2 . Since overlap patterns satisfy sorted closure property , C 3 is generated by combining NO 2 NO 2 .From C , L 3 and NO 3 are discovered. At each level  X  k  X , a two-step process is followed, consisting of join and prune actions [13]. 1. The join step: To find L k , a set of candidate k-web page sets C k is generated by 2. The prune step: C k is a superset of L k , that is, its members may or may not be The above process is repeated until no new coverage pattern is found or no new candi-date pattern can be generated.

The proposed algorithm uses bitwise operations to find the complete set of coverage patterns. So, a single scan of the database (to find the bit strings for all single web page sets) is sufficient for the algorithm to find the complete set of coverage patterns. Generation of bit strings for larger web page sets and computation of CS , OR for a web page set can be carried out by using simple bitwise AND and OR operations which makes the algorithm computationally very fast.
 We now explain the working of CMine algorithm using the transactional database, T , shown in Table 1. There are 10 transactions in this database, that is, | T | =10 .Let the user-specified minRF , minCS and maxOR be 0.4, 0.7 and 0.5, respectively. The column titled Bitstring represents binary representation of coverage set of pattern i .For example, the bit string corresponding to the pattern  X  { b,a }  X  is  X 1111111111 X . This im-plies that every transaction of T contains either b or a or both. For binary representation of TID X  X , union of coverage sets of two patterns is equal to boolean OR operation of cor-responding bit strings. Similarly, intersection of coverage sets of two patterns is equal to boolean AND operation of corresponding bi t strings. We use Figure 1 to illustrate the CMine algorithm for finding coverage patterns in T . i. The algorithm CMine scans all the transactions to generate bit string B w i and rel-ii. From C 1 , the set of coverage 1-patterns, L 1 , are discovered if their frequencies iii. To discover the set of coverage 2-patterns, L 2 , the algorithm computes the join of iv. Using Equation 1, coverage support of each candidate pattern is computed by v. The set of candidate 2-patterns that satisfy maxOR are discovered as non-overlap vi. Next, C 3 is generated by NO 2 NO 2 .Thatis, C 3 = NO 2 NO 2 = {{ b, a, c } , vii. As in step v , we discover non-overlap 3-patterns, NO 3 , and coverage 3-patterns, For experimental purposes we have chosen four real world datasets and one synthetic dataset. The detailed description of the datasets are given below. i. Kosarak dataset is a sparse dataset with 990,002 number of transactions containing ii. MSNBC dataset contains data from Internet Information Server (IIS) logs for iii. Mushroom dataset is a dense dataset containing 8,124 transactions and 119 distinct iv. BMS-POS dataset contains click stream data of a dotcom company [14]. The dataset v. The synthetic dataset T40I10D100K is generated by the dataset generator [16]. The The CMine algorithm was written in Java and run with Windows XP on a 2.66 GHz machine with 2GB memory. 3.1 Coverage Pattern Generation The Figure 2(a) shows the number of patterns generated (y-axis) for BMS-POS dataset for different values of minCS (x-axis) while minRF and maxOR are fixed at the val-ues 0.01 and 0.7 respectively. It can be observed from the Figure 2(a) that the number of coverage patterns decrease with the increase in minCS , and more importantly, the number of patterns generated are very few when minCS is greater than 0.5. In general, for a given maxOR , coverage support of coverage patterns increases with the length of the pattern due to the addition of new frequent items. The length of a coverage pat-tern increases with increasing levels of iteration for generation of candidate itemsets in CMine algorithm. However for higher levels of iteration due to overlap ratio constraint, the number of non-overlap patterns generated is decreased. Therefore, the number of coverage patterns generated having higher coverage support decreases with increasing minCS . The relation between the number of coverage patterns generated and minCS which was apparent in Figure 2(a) is also observed for Figure 2(b) and 2(c). It can also be observed form Figure 2(c) that no coverage patterns are generated for minCS = 0.35. This implies, that maximum threshold of minCS for minRF = 0.03, maxOR =0.8 for T40I10D100k dataset is 0.35 since no cove rage patterns are generated for minCS greater than 0.35.

The Figure 2(d) shows number of patterns generated (y-axis) for BMS-POS dataset for different values of maxOR (x-axis) while minRF and minCS are fixed at the values 0.01 and 0.40 respectively. It can be observed from Figure 2(d) that the gradient of the curve increases linearly from maxOR = 0.1 to 0.4. For maxOR = 0.4, the gradient of the curve changes and again increases linearly from maxOR = 0.4 to 0.7. However, the gradient of the curve from maxOR = 0.4 to 0.7 is greater than the curve for maxOR = 0.1 to 0.4. This implies that the number of pa tterns generated incr eases with increasing maxOR value. As the maxOR value is increased, the number of items of the candidate sets C i (i =2,3,4...k-1) are increas ed which will result in increase of number of coverage patterns generated. Similar to the Figure 2(d ), the phenomenon of increase in generation of coverage patterns with respect to maxOR value is also observed in Figure 2(e) and 2(f). It can be observed form Figure 2(f) that the number of patterns generated become constant for maxOR  X  0.30. This implies that no new nonoverlap patterns are generated for higher levels of iteration for generation of candidate item sets in CMine algorithm such that coverage patterns extracted from non-overlap patterns have coverage support greater than 0.225. 3.2 Scalability Experiment We u s e d Kosarak dataset to conduct scalability experiment. We divided the dataset into five portions of 0.2 million transactions in each part. We investigated the performance of CMine Algorithm after cumulatively adding each portion with previous parts and extracting coverage patterns each time. The values of minRF , minCS and maxOR are fixed at 0.01, 0.1 and 0.5 respectively. The experimental results are shown in Figure 3. It is clear from the Figure 3 that as the databas e size increases, the execution time also increased linearly.
 3.3 Usefulness of Coverage Patterns Table 2 shows some coverage patterns generated by Cmine algorithm for minCS =0 . 4 and maxOR =0 . 5 and minRF =0 . 02 for MSNBC dataset. The names of web page categories involved in MSNBC are  X  X rontpag e X ,  X  X ews X ,  X  X ech X ,  X  X ocal X ,  X  X pinion X ,  X  X n-air X ,  X  X isc X ,  X  X eather X ,  X  X ealth X ,  X  X ivi ng X ,  X  X usiness X ,  X  X ports X ,  X  X ummary X ,  X  X bs X  (bulletin board service),  X  X ravel X ,  X  X sn-news X , and  X  X sn-sports X . From Table 2, it can be observed that any of the six coverage pa tterns ensure about 40 percent coverage. The result indicates how the proposed approach provides flexibility to the publisher to meet the demands of multiple advertisers by considering different sets of web pages. In this paper we have proposed a new data mining pattern called  X  X overage pattern X  and proposed an efficient methodology to extract the same from transactional databases. We have explained how coverage patterns could be useful by considering the issue of banner advertisement placement. By conducting experi ments on different kinds of datasets, we have shown that the proposed model and methodology can effectively discover coverage patterns.

As a part of the future work, we are going to investigate how both frequent and cov-erage pattern knowledge can be used for effi cient banner advertisement placement. In addition we are planning to investigate how the content of the web page and search query can be exploited to explore content specific coverage patterns. We are also ex-ploring how the notion of coverage patterns can be extended to other domains like bio-informatics for extracting potential knowledge patterns.
