 In this paper , we present a general frame work to disco ver spatial associations and spatio-temporal episodes for scientific datasets. In contrast to pre vious work in this area, features are modeled as geo-metric objects rather than points. We define multiple distance met-rics that tak e into account objects X  extent and thus are more rob ust in capturing the influence of an object on other objects in spatial neighborhood. We have developed algorithms to disco ver four dif-ferent types of spatial object interaction (association) patterns. We also extend our approach to accommodate temporal information and propose a simple algorithm to deri ve spatio-temporal episodes. We sho w that such episodes can be used to reason about critical events. We evaluate our frame work on real datasets to demonstrate its efficac y. The datasets originate from two dif ferent areas: Com-putational Molecular Dynamics and Computational Fluid Flo w. We present results highlighting the importance of the identified patterns and episodes by using kno wledge from the underlying domains. We also sho w that the proposed algorithms scale linearly with re-spect to the dataset size.
 H.2.8 [Database Applications] X  X ata Mining, Scientific Databases, Spatial Databases and GIS Algorithms, Experimentation Spatial Object Association, Spatio-temporal Association/Episode, Scientific Data
Analyzing spatial data is an important problem in man y applica-tion domains, including geographical information systems, bioin-formatics, scientific and engineering informatics, and computer aided design. The main dif ference between analyzing such data and data This work is funded by NSF grants ITR-NGS ACI-0326386, CA-REER IIS-0347662, and SOFTW ARE ACI-0234273. All corre-spondence should be addressed to Dr . Srini vasan Parthasarathy at srini@cse.ohio-state.edu.
 Cop yright 2005 ACM 1-59593-135-X/05/0008 ... $ 5.00. in a transactional form is that an object can influence the proper -ties of objects located in the same spatial neighborhood [19] and therefore must be modeled in the analysis. Analyzing and reason-ing about relationships among spatial objects is further complicated if the data is time varying in nature. Data produced from protein folding or fluid dynamics simulations, or geoinformatics datasets that track the beha vior of intrusions are examples that have this ad-ditional constraint. Mining spatial relationships in these datasets is an important and interesting problem, since specific relationships may be indicators or predictors of upcoming events (e.g., vorte x amalgamation and dissipation in fluid flo ws [18]).

Unfortunately , mining relationships among spatial objects is an extremely challenging task. First, almost all the related work done to date on this problem models features as single points [12, 26]. Ho we ver, especially in physical sciences, the extent and shape of a feature can play an important role in determining its influence on neighboring objects [10, 18]. Second, there is a strong need to develop techniques to capture and reason about the interactions among features. These interactions if properly captured can help domain experts to understand the underlying processes in an effec-tive manner . Third, one needs to develop effecti ve techniques to incorporate temporal information in the overall analysis and rea-son about them. Finally , recent technological adv ances in com-putational sciences have resulted in huge amounts of data. Tradi-tional statistical approaches to model such interactions do not scale very well to lar ge datasets [5]. In this paper we propose a general-purpose frame work to address these challenges.

To address the first challenge, a straightforw ard solution is to represent a feature by its Minimum Bounding Box (MBB). Ho w-ever, MBBs are not ideal for all situations. For example, vortices are well represented by ellipsoids [16] but not by MBBs. Alter -nati vely , defect structures in materials [10] require irre gular shape descriptors such as landmarks [14]. Our proposed frame work ad-dresses this issue by supporting flexible schemes to model and rep-resent features of interest (see Fig. 1 for examples in 2D).
To address the second challenge, we examine the use of distance metrics that tak e features X  shape and extent into account. Simply measuring the distance between centroids is often inadequate. We propose and evaluate the use of three distance metrics and demon-strate their suitability on dif ferent end applications. Additionally , we belie ve it is important to effecti vely model dif ferent types of in-teractions that capture various spatial (distance-based, topological and directional) constraints. Our frame work currently supports four types of spatial object association patterns (SO APs), Star , Clique , Sequence , and minLink , which are used to model dif ferent inter -actions. For example, Clique SO APs in Molecular Dynamics data indicate the presence of compact defects. Compact defects are usu-ally more stable and often govern the properties of materials. Se-quence SO APs on the other hand can indicate the formation of long extended defects from smaller point defects [15].

To address the third challenge, we have designed a simple ap-proach that accommodates temporal information to deri ve spatio-temporal patterns in data produced by such scientific datasets. We define three types of events to describe SO APs X  evolutionary be-havior: formation , dissipation , and continuation . Such events char -acterize the stability of dif ferent interactions. For each identified SO AP , we further construct its spatio-tempor al episodes , mark ed by pairs of formation and dissipation events. We then use these episodes to infer critical events such as vorte x amalgamation. We also demonstrate that, by combining episodes associated with mul-tiple SO AP types, we are able to model the evolutionary beha vior of interactions among features.

To address the final challenge, we inte grate effecti ve optimiza-tion techniques and leverage novel data structures to mak e the SO AP mining algorithms efficient [23]. We validate the utility and demon-strate the scalability (can easily process up to several GBs of data in minutes) of our frame work on two applications dra wn from the sci-entific and engineering community , namely , Computational Fluid Dynamics (CFD) and Computational Molecular Dynamics (CMD).
Spatial Featur e Repr esentation We propose three dif ferent representation schemes: parallelepiped (or parallelogram in 2D), ellipsoid (or ellipse in 2D), and landmarks based representation, where landmarks are sampled boundary points [14]. These schemes can be used to model features from a variety of scientific domains. Parallelepipeds (or parallelograms) subsume MBBs, thus are appli-cable to model features in relati vely regular shape. Whereas ellip-soids or ellipses are appropriate for vortices. Finally , landmarks are effecti ve to model highly irre gular -shaped features such as defect structures in materials. The number of landmarks needed to repre-sent a feature is domain dependent. The frame work also supports elemental shapes such as lines and splines.

As sho wn in Figs. 1 (a) and (b), the shape descriptor of a parallel-ogram or an ellipse can be described as A basic = &lt; ( x; y ) ; l In cases where landmarks are used (Fig. 1c), the shape descriptor is mark. These descriptors can be easily extended to 3D. Figur e 1: Shapes (a)P arallelogram (b)Ellipse (c)Irr egular
Dataset Repr esentation The dataset consists of n features extracted from r&gt; 1 snapshots, tak en at time steps t 1 : : : &lt; t r ). The n features are further cate gorized into the cate gorization is governed by the underlying domain. Each fea-ture type is assigned with a unique label in = f c 1 ; : : : ; c ture X  s geometric properties are captured by one of the three repre-sentation schemes described earlier . Thus a feature f at time be described as a vector f = &lt;t i , loc , A geo , type loc is f  X  X  position at t i , and A geo 2f A basic , A landmar k the geometric properties of f at t i .

Note that in the rest of the paper , we refer to a feature corre-sponding to the abo ve vector as a spatial object . We also assume without loss of generality the existence of an ordering among the l feature types: c 1 &lt;c 2 : : : &lt; c l . Furthermore, we refer to a snap-shot X  s associated time t i as its ID.

Shape-based Distance Measur ements The frame work supports three distance measurements for two objects o i and o j in the same snapshot: (1) Point-P oint : This is simply the Euclidian distance between object centroids; (2) Line-Line : If o i and o j lelepipeds (or parallelograms), we first identify the line segment between the midpoints of the upper and lower surf aces (or sides) in each object, then compute the shortest distance between these two line segments. If o i and o j are ellipsoids (or ellipses), the line-line distance is the shortest distance between the two ellipses X  major axes; and (3) Boundary-Boundary : This is the shortest pairwise distance between the landmarks of o i and o j . Notice that the last two metrics tak e objects X  geometric properties into account. The frame work also supports Hausdorf f distance [1]. Since this dis-tance is not applicable to the applications described in this article, we do not discuss it here.

Two objects o i and o j have a closeT o relationship if the dis-tance between them is " , a user -specified parameter . Two ob-jects are neighbor s if the y have a closeT o relationship. We also define the isAbo ve relationship, a special type of directional rela-tionship, between two objects, In a coordinate system, o i to have an isAbo ve relationship with o j , if the upper -left corner of o i  X  X  MBB 1 , denoted as ( x i ; y i ; z i ), and the upper left corner of o  X  X  MBB, denoted as ( x j ; y j ; z j ), meets the follo wing condition: ( z i &gt; z j ) _ [( z i = z j ) ^ [( y i &gt; y j ) _ (( y i 3D, or ( y i &gt; y j ) _ [( y i = y j ) ^ ( x i &lt; x j
Spatial Object Association Patter n (SO AP) A SO AP of size denoted as k-SO AP , characterizes the closeT o or isAbo ve relation-ships among k object types. The frame work supports the disco very of four SO AP types: Star , Clique , Sequence , and minLink (Fig. 2). These SO AP types can be abstracted as undirected graphs. In such graphs, a node corresponds to an object-type c i 2 , and an edge ( c ; c j ) indicates a closeT o or isAbo ve relationship between c . These SO AP types can also be represented as lists subject to certain constraints. We next describe each SO AP type in detail:
The abo ve SO AP types capture three basic spatial relationships: distance-based, topological, and directional. The closeT o relation-ship is both distance and topology based. As for directional re-lationships, we currently only consider the isAbo ve relationship, captured by Sequence SO APs. Such relationships are important 1 In 3D, it is defined as the upper -left corner of its top surf ace. in understanding dif ferent interacting beha viors in man y scientific applications. We plan to implement other types of spatial relation-ships and examine their uses for dif ferent applications in the future.
A SO AP is said to be autocorr elated if an object-type occurs multiple times. For example, ( c 1 ; c 1 ; c 2 ) is an autocorrelated 3-SO AP as the object-type c 1 occurs twice. An instance of a SO AP is the set of spatial objects that meet all the requirements specified by p . For instance, ( o i , o j ) is an instance of the Clique 2-SO AP ( c , c 2 ), if o i . type = c 1 , o j . type = c 2 , and closeT o ( Figur e 2: SO AP Types:(a)Star(b)Clique(c)Sequence(d)minLink=2
We define two measures, support and realization , to characterize the importance of a SO AP . The support of a SO AP p is the number of snapshots in the dataset where p occurs. Assume support (p)=s , let n i be the number of p  X  X  instances in the i th snapshot where appears, realization( p )= min f n i g . A pattern p is frequent if support ( p ) minSupp , and prevalent if realization( p ) minRealization . Both minSupp and minRealization are user -specified parameters.
Spatio-temporal Episodes Spatial relationships among objects (or features) evolv e over time. As a result, SO APs of dif ferent types also evolv e over time. We identify the follo wing three evolution-ary events for a SO AP p : (1) Formation : when the number of instances changes from zero to non-zero; (2) Dissipation : when all p  X  X  instances become invalid. The dissipation of a SO AP can occur due to man y reasons. For example feature(s) involv ed in a SO AP may cease to exist or mer ge into a new one; and (3) Contin-uation from time t i to time t i +1 : if there exists at least one instance of p in each snapshot tak en in [ t i , t i +1 ]. These events essentially characterize the stability of interactions among dif ferent features. The y are useful to model and subsequently predict features X  future spatio-temporal beha viors.

Formation and dissipation events can occur to a SO AP man y times. Thus a SO AP can exist in multiple disjoint temporal in-terv als, where each interv al starts at a formation event and ends at a dissipation event. We refer to a SO AP X  s continuation in each of such interv als as a spatio-tempor al episode . Let I t SO AP p  X  X  instances at time t , an episode of p in the discr ete inter -val [ t s ; t e ] can then be described as: p [ t s ; t e
Spatial object association patterns proposed in this work share some commonalities with collocation patterns, which identify fea-tures that are frequently located in the same neighborhood. Ho w-ever, most work on collocation pattern mining is limited to ap-plications where subjects of interest can be represented as points [12, 13, 26]. Furthermore, such points are located in a single map, which corresponds to a snapshot in our work. Recently , Xiong et al. proposed an approach to disco ver collocation patterns for ex-tended spatial objects including line-strings and polygons [20]. For each object, the y identify its neighborhood and then consider ob-jects that have overlapped neighborhood as candidate collocation patterns. This is similar to the Clique SO APs in this article. Ho w-ever, the y only consider objects located in the same map.
The SO AP mining problem also shares some similarity with fre-quent subgraph mining [21]. In order to apply the con ventional graph mining algorithms to disco ver SO APs, the notion of nodes needs to be extended to inte grate spatial properties such as location and shape. The notion of edges also needs to be modified to reflect dif ferent spatial relationships such as closeT o . Furthermore, it is not straightforw ard to inte grate topological or directional relationships into the graph mining process. Finally , minLink 2 SO APs allo w us to disco ver rigid sub-structures. This is generally not supported by graph mining algorithms.

Our research on spatio-temporal association patterns shares some of the objecti ves with approaches for spatial reasoning. Baile y-kellogg and Zhao [2] propose a methodology for reasoning about such problems called qualitati ve spatial reasoning (QSR). Their work is methodology dri ven and mainly focuses on conceptual top-ics such as data representations and manipulations. The y also dis-cuss the use of dif ferent spatial primiti ves to model objects of dif-ferent shapes and spatial relationships among objects. Our frame-work is an efficient realization of their conceptual methodology for scientific data. In addition we also support the disco very of spatio-temporal episodes that is not explicitly considered in their work. Fern yhough et al. implemented techniques to detect events by iden-tifying frequently occurring spatial relationships [4, 6]. Ho we ver, their proposed technique only considers pair -wise relationships. Thus interactions involving more than two features will be missed.
An overvie w of the frame work is given in Fig. 3. This frame work is mainly moti vated by the follo wing three scientific applications: defects simulation in Molecular Dynamics, protein structure analy-sis in Bioinformatics, and vorte x simulation in Computational Fluid Dynamics. We have implemented techniques to detect, extract, and classify features for the first two applications [10, 22]. For the third application, we use existing algorithms to detect vortices and sub-sequently classify the detected vortices [8]. In this article, we focus on the four tasks enclosed by the dashed rectangle in the figure.
We organize the dataset in the follo wing manner . The n jects are first grouped into l partitions, where each partition is com-posed of objects of the same type. Within each partition, objects are first ordered by the time the y appeared, then by their locations at a certain time. This data organization is analogous to the vertical format used for association rule mining [25].

Equi valence Classes Based on the list-based SO AP represen-tation,we organize SO APs as equi valence classes. A k-equivalence class , denoted by k-EquiClass , is defined as the set of that (1) are of the same SO AP type; and (2) have the same pre-fix, where the prefix of a k -SO AP consists of its first k-1 elements. For instance, star SO APs ( c 1 ; c 2 ; c 3 ) , ( c 1 ; c will be organized into the same 3-EquiClass, with ( c 1 ; c the the prefix. By using equi valence classes, our mining algorithms only need to compute the closeT o or isAbo ve relationships among objects once (when generating 2-SO APs). The equi valence classes also help to impro ve locality while generating SO APS [25]. As a result, our algorithms can efficiently disco ver dif ferent types of SO APs from lar ge amounts of data.

Mining Star and Clique SO APs The first step is to generate frequent 1-SO APs. For each object-type c i , the procedure counts the number of snapshots that contain at least one object of type If the count minSupp , then ( c i ) is a frequent 1-SO AP . The set of all frequent 1-SO APs is denoted by P 1 . The next step disco vers 2-SO APs and organizes them into 2-EquiClasses.
 A 2-EquiClass is generated for each frequent 1-SO AP . The 2-EquiClass of 1-SO AP ( c i ) 2 P 1 , denoted by E 2 ;c quent 2-SO APs in the form of ( c i ; ). To generate E 2 ;c cedure considers the follo wing 2-SO APs as candidates: ( where ( c j ) 2 P 1 . The condition c j &gt;c i needs to hold in the case of mining Clique SO APs. For each candidate 2-SO AP p 2 =( the procedure identifies all the snapshots where p 2 occurs. An in-stance of p 2 =( c i ; c j ) is an object pair ( o i ; o j ^ ( o j :type = c j ) ^ ( distance ( o i ; o j , distT ype ) minSupp snapshots, it is frequent and added to E 2 ;c rithm next disco vers SO APs of size 3. Two k -SO APs in the same k -EquiClass are combined to construct a candidate ( k +1)-SO AP . For each candidate ( k +1)-SO AP p k +1 deri ved by appending the last element of p k;j to p k;i , the algorithm identifies all the snapshots where p k +1 occurs. p k;i denotes the i th k -SO AP in a To compute the instances of p k +1 in the snapshot t i , we combine each pair of instances from p k;j to p k;i . An instance pair can be joined to produce a p k +1 instance if the y have the same first objects and dif ferent last objects. For Clique SO APs, an additional condition must also hold: there is a closeT o relationship between the two instances X  last objects. SO APs with the same prefix are or-ganized into one equi valence class as being generated. The process stops when it has found all the frequent SO APs.

The abo ve procedure disco vers SO APs that are frequent and have realization 1 . We use a simple example to explain why we need to keep all the SO APs that have realization 1 . Let f a be the only objects in a snapshot and the y are neighbors. Assume minRealization=2 , in order to deri ve the two instances and ( a 1 ; b 2 ) of the 2-SO AP ( a; b ), the 1-SO AP ( a tained even if its realization is 1 in the snapshot. Therefore, if minRealization &gt; 1, an additional step is needed to identify the SO APs that are frequent and have realization &gt; 1 .

Mining Sequence SO APs Unlik e mining star or clique SO APs, which uses two k-SO APs in the same equi valence class to generate a candidate (k+1)-SO AP ( k 2), the algorithm joins one k and one 2-SO AP . The first two steps disco ver all the frequent SO APs and 2 -SO APs respecti vely . These two steps are the same as that of mining Star or Clique SO APs except that a valid Sequence 2 -SO AP instance also needs to meet the isAbo ve relationship other than being neighbors. For each k -SO AP p k =( c [1] ; : : : ; c algorithm first locates the 2-EquiClass E 2 ;c SO AP is in the form ( c [ k ] ; c [ j ] ): closeT o( c [ k ] A set of candidate ( k +1) -SO APs are then generated by combining p with each 2-SO AP in E 2 ;c frequent if it appears in minSupp snapshots. Instances of the snapshot t i are generated by combining each pair of instances from p k;i and p 2 ;j . An instance pair , I k;i and I 2 ;j p 2 ;j respecti vely , can be combined if the last object in same as the first object in I 2 ;j . For the same reason explained be-fore, if minRealization &gt; 1 , an additional step is required to mark SO APs being both pre valent and frequent. The algorithm stops when no more SO APs can be disco vered.

Mining minLink SO APs The algorithm starts by identifying all frequent and pre valent 1-SO APs and 2-SO APs, which are the same as mining Clique SO APs. To generate a (k+1) -SO AP , the al-gorithm tak es one k -SO AP and one 1-SO AP . For each k -SO AP the algorithm first collects the set of features (1-SO APs) that have a closeT o relationship with at least one feature in p k . These features can be easily identified from 2-EquiClasses. Let C be the set of all such 1-SO APs. A candidate (k+1) -SO AP p k +1 is then generated by appending a feature c i 2 C to p k . Ho we ver, the same can be generated multiple times. For example, consider the follo w-ing 2-SO APs p 1 : ( c 1 ; c 2 ) and p 2 : ( c 1 ; c 3 ) , to form a 3-SO AP ( c 1 ; c 2 ; c 3 ) . Similarly c 2 can be joined with to obtain the same 3-SO AP . To avoid such redundant computation, the algorithm checks if a candidate SO AP has been encountered be-fore processing it. It proceeds to process the candidate SO AP if it has not been processed. Similarly , instances of a candidate (k+1) -SO AP p k +1 , obtained from appending a feature c i to a are deri ved by by combining each pair of instances from p An instance I k of p k can be combined with an object of type the y meet the follo wing conditions: (1) o i is not in I a closeT o relationship with at least one object in I k ; and (3) the linka ge of the new instance is minLink .
 Note that when minLink &gt; 1 , to disco ver all the frequent (k+1) -SO APs, the algorithm needs to identify all the frequent k with linka ge 1 . This is because the linka ge of SO APs is not anti-monotone. For instance, the linka ge of the Clique SO AP ( a; b ) Ho we ver, the linka ge of the Clique SO AP ( a; b; c ) is minLink &gt; 1 , the algorithm needs to mark SO APs that have enough linka ge . For the same reason stated before, if minRealization extra step is needed to label SO APs being pre valent and frequent.
We also implement effecti ve optimization techniques so that the mining algorithms are capable to handle lar ge out-of-core datasets. Please refer to [23] for details.

Analyzing Spatio-temporal Episodes For each frequent SO AP , we construct its spatio-temporal episodes by identifying the associ-ated formation and dissipation events. We then use these episodes to address two important issues: (1) to reason about critical events such as the mer ging of multiple features; and (2) to model how interactions among a certain set of features evolv e over time.
The first issue is addressed by analyzing indi vidual episodes. Let [ t i s ; t i e ] be an episode of SO AP p . For each instance of pearing in [ t i bounding box (MBB), where the MBB of a SO AP instance encom-passes every object in the instance and is minimum in size. We then mak e inferences on critical events by observing the changing trend of the area of an instance X  s MBB. For instance, if the MBB of an instance decreases from t i objects will mer ge at its corresponding SO AP X  s dissipation.
The second issue is addressed by two steps. Let F = f c 1 be the set of features of interest. We first find all the episodes that are associated with F . These episodes can be of dif ferent SO AP types. We then order all these episodes by their formation time. The resulting sequence of SO AP episodes is then used to model the interactions among features in F . As mentioned earlier , dif ferent SO AP types characterize dif ferent types of interactions. Therefore, a transition between two dif ferent SO AP types (e.g., from Star to Clique ) indicates a significant change having occurred to an inter -action. Such transitions can be easily identified from the episode sequence described abo ve. Furthermore, we can reason about crit-ical events based on these transitions [23]. Fig. 4 summarizes the transitions between the three SO AP types and their implications, which are encoded in our reasoning algorithms.
In this section we evaluate our frame work on datasets from two dif ferent scientific domains: Computational Molecular Dynamics and Computational Fluid Dynamics. We also evaluate the perfor -mance and scalability of the frame work on lar ge datasets. Exten-sive experiments were also conducted on datasets dra wn from the bioinformatics domain. Due to space constraint, we do not present the results here. Please refer to [23] for details. The Molecular Dynamics (MD) dataset is generated using the Object-oriented High-performance Multi-scale Multi-resolution Sim-ulator for material science (OHMMS) [15]. A slice of Silicon (Si) lattice is simulated to understand the creation of stable structures and dimer rows. The dataset consists of 4000 Silicon slices, corre-sponding to 4000 snapshots. There are 94 atoms in each slice.
Cr eation of stable structur es Figs. 5(a) and (b) sho w the slice of Si lattice at t=0 and at t=3999 respecti vely . At t=0 , there are no stable structures in the lattice. Ho we ver, stable structures are formed at t=3999 and can be easily spotted from Fig. 5(b). These structures corresponds to the pentagon-lik e rings formed by five Si atoms. Our frame work can disco ver these structures automatically by mining minLink=1 SO APs from the dataset. Two atoms are considered as neighbors if the distance between them is 2.7 Cr eation of dimer rows A dimer is defined as a pair of con-Figur e 6: (a)Dimers on Si surface at t 2000 (b)Dimers on Si sur -face at t 2500 (c) Dimer on Si surface at t 3999 nected atoms with their bond length falls within a threshold ( our evaluation). In order to be considered as a dimer , two atoms should also be oriented at an angle of around 45 degrees. A dimer row is created when indi vidual dimers align themselv es in a par -ticular fashion. For example, Figure 6(c) sho ws a detected dimer row (enclosed in the rectangle). The figure also sho ws other dimer rows at dif ferent evolutionary stages. Dimer rows were disco vered by mining sequence SO APs. We consider two dimers as neighbors if their distance is 5  X  A.

SO AP episodes Fig. 6 illustrates a SO AP episode identified in the dataset. Fig. 6(b) sho ws two 2-SO APs (box ed in the figure) that have no interaction. Ho we ver, after a few time steps a new dimer is created between them. This new dimer acts as a link be-tween the two 2-SO APs, which leads to the formation of a SO AP of 5 dimers 6(c). Such an episode involv es two SO AP events: the amalgamation of two 2-SO APs and the creation of a 5 -SO AP .
The vorte x dataset is generated by implementing a simplistic ver-sion of the algorithm proposed by Christian [3]. The dataset con-sists of 1970 snapshots, with around 200 vortices in each snapshot. The number of vortices in each frame is changing over time, as an existing vorte x can dissipate, new vorte x can be created, or two vortices can mer ge to form a new vorte x.

Fig. 7 sho ws three simulation snapshots at dif ferent times. Fig. 7 (a) sho ws the initial configuration of the vortices with no SO APs. Fig. 7 (b) sho ws the creation of a SO AP . This SO AP is formed because the two vortices are mo ving towards each other and even-tually their distance falls in the the distance threshold. Fig. 7(c) also sho ws a very interesting result. The two vortices involv ed in the SO AP came closer and eventually mer ged into a new vorte x. This event is captured by the SO AP X  s dissipation (resulting from an amalgamation of two features). We were also able to mak e in-ference on such events by identifying the changing trend of the corresponding instance X  s MBB. Note that SO AP dissipation does not necessarily imply dissipation of features.
 Figur e 7: (a)V ortices at t 0 (b)SO AP Formation at t 90 Mer ging at t 104
Spatio-temporal episode evaluation As mentioned earlier , com-bining episodes associated with dif ferent SO AP types can be used to model the evolving nature of interactions among dif ferent fea-tures. For the same set of features, the formation of dif ferent SO AP types at dif ferent time indicates a potential change in their interact-ing beha vior , since dif ferent types of SO APs characterize dif ferent types of interactions.
 Figur e 8: Ev olving SO AP: (7 8 96 99) starts as a Clique ( evolv es into a Star ( t 20 ), eventually out of interaction range (SO AP dissipation)( t 28 )
Fig. 8 demonstrates how the interactions among four vortices evolv e over time and are captured by combing multiple episodes formed at dif ferent time. The four vortices form a clique SO AP at t . This clique SO AP continues for 11 time steps and then evolv es into a star SO AP at time t 12 , which continues for another 15 time steps (Fig. 8(b) ). A clique SO AP points to the presence of com-pact spatial patterns, where each feature is interacting with every other feature. The transition of a clique SO AP to Star implies that features are mo ving way from each other and may cease to interact after some time. Fig. 8(c) demonstrates exactly this beha vior .
Other transitions such as from star to clique are also identified for dif ferent sets of features. In the case that a SO AP evolv es from Star to Clique , we observ e that features are mo ving towards each other and thereby increasing the level of interactions. This may eventually lead to the mer ging of multiple features.
In this section we present results on scalability of our frame-work. All the experiments were carried out on a Pentium 1.7GHz machine of 1GB memory . We applied the SO AP mining algorithms to a lar ge Molecular Dynamics dataset produced by OHMMS. The dataset consists of 387 ; 999 slices of Si lattice and is of size 1.5GB. We first identify all the dimers in each slice and then disco ver dif-ferent SO AP types in the dataset.

Fig. 9 sho ws the time tak en to disco ver all types of SO APs at dif-ferent support thresholds for the 1.5GB dataset. First of all, even for a lar ge dataset we are able to mine all SO APs in reasonable amount of time. Time increases as support threshold decreases, because more SO APs will be generated at a lower support value. Ho we ver, this increase in time is linear . For example, at 20% support we tak e 180 seconds to disco ver all the star SO APs, the time just increases by 50 seconds for a very low support threshold of 0.5%. Figure 9 sho ws the performance results on the 1.5GB dataset. Please note that minLink SO AP subsumes all the other SO AP types. As a re-sult, the algorithm can compute all the other SO AP types within roughly the same time (ne gligible overhead) it tak es to compute minLink patterns.
Figur e 9: Running Time on 1.5GB Dataset (minDist=5  X  A)
In order to capture dif ferent interactions among evolving objects, it is critical to use an appropriate distance metric. In this section we present results demonstrating the importance of using distance metrics that are capable of taking objects X  shape and extent into account. We compare the number of SO APs generated from using an object-based distance metric and that from the commonly used point-based metric. Due to space constraint, we only present results on the vorte x dataset, where each vorte x is represented as an ellipse.
As mentioned earlier , the ellipse-based shape representation and boundary-boundary distance mak e the most sense in this case. To justify this, we compare the numbers of SO APs disco vered by using B-B distance and C-C distance. As sho wn in Table 1, we are able to get twice as man y SO APs based on Boundary-Boundary distance compared to Centroid-Centroid distance. Results on MD datasets were very similar in spirit, howe ver due to lack of space we are not presenting the results.

In this paper , we present a general frame work for mining spatial associations and spatio-temporal episodes for scientific datasets. Features are modeled as geometric objects rather than points. We define multiple distance metrics that tak e into account objects X  shape and extent and thus are more rob ust in capturing the influence of an object on other objects in its spatial neighborhood. We have de-veloped algorithms to disco ver four dif ferent types of spatial object association patterns across multiple maps. We also extend our ap-proach to mine for spatial temporal episodes and thereby present a methodology for reasoning about critical events.

Empirical results on three real case study applications, dra wn from the scientific and engineering disciplines serv e to validate the frame work. We sho w that the disco vered interactions are mean-ingful and can be used to unco ver important spatial and spatio-temporal patterns in the underlying scientific domain. We further demonstrate that the dif ferent association pattern types our frame-work when used in conjunction can pro vide an effecti ve mechanism to support qualitati ve spatio-temporal reasoning. Performance stud-ies carried out on lar ge out-of-core datasets indicate that the frame-work is both efficient and scalable.

We are currently extending the frame work to include other types of association patterns, for example, patterns concerning both topo-logical and neighborhood relationships. We are also implementing new approaches towards more rob ust spatio-temporal inferences and reasoning. Our frame work also currently tar gets the disco v-ery of important frequent spatial interactions, but in man y cases rare interactions can also be important. We plan to extend our work to address this limitation.

Ackno wledgments: We thank J. Wilkins and T. Lenosk y for pro viding and helping validate the MD results, and thank R. Machi-raju, D. Thompson, K. Marsolo and D. Polshak ov for valuable comments, discussion and validation of results pertaining to CFD and bioinformatics.
