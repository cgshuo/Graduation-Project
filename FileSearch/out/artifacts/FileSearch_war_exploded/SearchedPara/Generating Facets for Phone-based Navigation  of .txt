 Designing interactive voice systems that have optimum cognitive load on callers has been an active research topic for quite some time. There have been many studies comparing the user preferences on navigation trees with higher depths over higher breadths. In this paper, we cons ider the navigation of structured data containing various types of attributes using phone-based interactions. This problem is pa rticularly relevant to emerging economies in which innovative voice-based applications are being built to address semi-literate popul ation. We address the problem of identifying the right sequence of facets to be presented to the user for phone-based navigation of the data in two stages. Firstly, we perform extensive user studi es in the target population to understand the relation between the nature of facets (attributes) of the data and the cognitive load. Secondly, we propose an algorithm to design optimum navigation trees based on the inferences made in the first phase. We compare the proposed algorithm with the traditional facet generation algorithms with proposed algorithm. H.1.2 [ Models and Principles ] User/Machine Systems  X  human information processing, human factors. H.3.3 [ Information Search and Retrieval ]  X  information filtering, selection process . Phone-based interaction, navigation of structured data, cognitive load. In this paper, we consider th e problem of navigating a list of structured records using phone-based interactions. For example, if a job seeker, calls into a job -finding system, and there are 100 jobs that match her profile, the que stion of interest is  X  X ow to information about the job of her interest with minimum effort? X  We describe the motivation behind considering this problem in the next section. Assuming that the quality of audio heard over phone is good; the effort in going through various options includes comprehending the questions asked, processing the given options and choosing an option. This effort is also referred to as the cognitive load [1]. We assume that the user chooses an option by pressing a number on the telephone X  X  keypad or by saying the corresponding number. We do not assume the ability of unconstrained speech recognition mainly because various languages and dialects present in emerging countries (especially in India) and the noise in the audio over telephones make speech recognition difficult. In the context of presenting options to navigate through structured ordered. Categorical attribut es do not have any order among various values for example, lo cation, and skills. Examples of ordered attributes are age, experience, salary, etc. Qualification can be considered as categorical as well as ordered as they are not strictly ordered. Similarly, loca tions can be ordered with respect the distance from a reference location. Hence, locations can also be considered both as categorical and ordered. Ordered options can be presented in increasing or decreasing order or in random order. While minimizing the average cognitive load of reaching a record in a structure database, it may be necessary to present the options in the decreasing order of the number of records. This would result in presenting the orde red options in a random order. Cognitive load on a caller depends on factors such as the type of options heard, number of options heard (breadth of navigation tree), order of options heard, and number of questions asked (depth of navigation tree). We refer to these factors as the navigational factors . The ultimate objective of phone based navigation is to design a navigation tree that minimizes the average cognitive load to reach a r ecord in the structured data. In the cognitive load based on our extensive user-study and infer their implications on the generation of the navigation tree. Then, we develop a facet generation algorithm based on the observations and compare the performance the traditional facet generation influencing the cognitive factors. We observe that the proposed algorithm performs better. Paper contributions: We established a relationship between cognitive load and the navigational factors associated with facet navigation and derived the implications on the user interface design parameters. We proposed a new navigation tree generation algorithm, compared its performance with that of the most popular traditional algorithm and demonstrated that the new proposed algorithm performs better than the traditional one with respect the parameters important to phone-based navigation. Paper organization: We motivate the problem in the next section. In Section 3, we review the re lated literature. We describe our user-study and summarize the imp lications of observations made during the user-study on the facet generation algorithm in Section 4. We develop a facet generation algorithm and describe the experimental study in Section 5. We summarize our contributions and conclude the paper with future research directions in Section 6. In emerging countries, mobile phone penetration surpasses broadband penetration. For example, in India, the subscriber base of mobile connections is about 881 million as of October 2011 whereas the number of broadband connections is about 121 million as of December 2011 [18]. The majority of the mobile communicate rather than other features mainly because of the learning curve associated with text-based menu-driven applications [25]. Technologies such as Spoken Web [4] have been invented to create channels of information to mobile phone users. Soon there will be applicati ons such as job-search, medical doctor search and auctions on these platforms. In these applications, the underlying data va ries with time. For example, the available jobs or candidates change with time in a job-search application. As discussed above, there is a need to provide audio-interface to time varying database of records. There are two types of tasks one may do on those records: 1. search for a specific type of record that the caller is looking for; 2. explore the contents of the database to see whether any record is of interest to the caller. One way of accomplishing the first task mentioned above is by audio-search wherein the callers speaks the words that indicate the words from the speech, searches in the records for the query words and present the results in a ranked manner. However, the scenario we are considering in this paper (emerging markets in general and India in specific), speech recognition is not effective because of various languages and dialects present in the region and noise in the audio obtained over telephones. Hence, we assume that the user inputs are lim ited to numbers (0 to 9) through either DTMF (Dual Tone Multi Frequency) or limited speech recognition. Under this assumpti on, tasks 1 and 2 can have a single solution. Viz., at every interaction, the system presents a couple of options summarizing the data that satisfies the options chosen in the previous interacti ons and user chooses the option of his interest to go to the next leve l. The user has an option of going back to the previous options at every interaction. It may be noted that the traditional IVRs (Inter active Voice Response Systems) with a fixed navigational menu will not be effective for the problem under consideration mainly because the data is dynamic and some of the existing options may not result in any records in the database. Hence the navigational tree used for phone-based interaction should be dynamic and depend on the records present in the database. In case of web-interfaces, the problem of presenting structured data to the user is efficiently addressed using faceted search (dimensions associated with the data) are visually presented in the web-interface which also gives a summary of the data apart from aiding easy navigation of data. In an audio-based channel such as telephone, the summary information needs to be presented in a sequential way. The user (calle r) will have to reconstruct the summary and decide to make choi ces to navigate the data from only audio information presented in a sequential manner. Hence it is very important to present the facets over phone-based interactions in a way such that the average cognitive load on the user to navigate to a data item is minimized. There has been a lot of research on design and usability engineering of IVRs. A nice summary of design guidelines can be found in [10]. These guidelines mainly focus on IVRs where in the underlying data is static and fi xed. When the data is dynamic and frequently changing, dynamic navigation trees which can be used in IVRs are needed. The research on design guidelines when we are constructing IVRs from su ch dynamic data has not been explored in the literature. However, there has been some re lated work which is noteworthy. Commarford P. M. et al. [11] compares broad and deep audio menus in IVRs. Prompting strategies in IVRs when speech recognition is used in searching was discussed in [12]. Analytic tools that examine the usage patte rns and suggest changes to IVR navigation trees to improve th e user experience are being developed. Cognitive load has been cons idered as a multidimensional construct that describes the load imposed by performing a certain task on the cognitive system of a learner [1]. It has been shown to have both causal factors and a ssessment factors, comprising variables such as task (environment), task/learner interactions, learner X  X  characteristics, mental load, effort and performance [1]. For the present study, cognitive lo ad is measured in terms of performance on the task and choosi ng time, since performance is a reflection of the other causal factors influencing cognitive load [1]. In previous research, perfo rmance as a measure of cognitive load has been defined in terms of the learner X  X  achievements with respect to the number of correct test items, number of errors, and given task [14]. Reaction time has also been considered in previous research on cognitive lo ad [28], and thus choosing time was considered as a measure of cognitive load in our study. Research on IVR design has yet to examine the impact of the characteristics of the navigation tree in general, and the features of the questions and options, in par ticular, on the cognitive load of the individual. The present study aims to address this gap in research by examining cognitive load in terms of choosing time and performance. Further, research on IVR design has traditionally focused on literate populations and developed markets. There is a tremendous opportunity to explore various aspects of IVR design and use for semi-literate populations in emerging markets, given the constraints of literacy and the growing adoption of mobile phones in an emerging market like India. Faceted classification categorizes each information element along multiple explicit dimensions, enabling the classifications to be accessed and ordered in multiple ways. Faceted search is a technique for accessing information organized according to a information by applying multiple filters corresponding to various dimensions. Faceted search techniques have been applied to unstructured [5] [21] [22] [23] [24] and structured [9] [20] data. In case of unstructured data, the main challenges are in discovering facets and the keywords representing thos e facets, and choosing the best facets to present on a web-interface to give maximum information to the user. For example, automatic construction of faceted browsing interfaces was dealt in [24] in which many of these issues are addressed. Tunkela ng developed Dynamic Category Sets, a new approach to address the vocabulary problem for faceted data [22]. The study used a data-driven approach to discover sets of values across multiple facets that best match the query . Hearst presents a user interface to display facets when some of the facets have hierarchical structure in [5]. She also discusses various issues both in the presentation of navigation options in the interface in presence of key-word searching and in how to extend the model to allow more flexibility in discovery the facets in [21]. Faceted Search on more complex data models and extensions to the basic faceted search paradigm are discussed in [23]. Faceted search on audio was previously used in [13]. The navigation tree used in [13] is built using the metadata on audio files and based on traditional way of building decision trees. construct such navigation trees [6] [7] [8] [9] [20]. In these algorithms, all types of attributes are considered in the same manner and there is no order in the attribute values. The main focus is on choosing an attribute that is to be asked at a particular split considers the distribution of data at that particular level perform entropy minimization. The algorithms try to reduce the number of questions you must answer to arrive at the desired data record. As mentioned earlier, this way of finding an attribute works fine for the visual interfaces. However, these are not good for phone-based interactions. Thus, in this paper, we study the effect of navigational factors on the cognitive load on the users to navigate the database via phone-b ased interactions. We also modify the popular decision tree algorithm based on the observations from the study to consider the cognitive load imposed during phone-based navigation. Various measures of entropy can be found in the literature. One such measure can be found in [8] and [20] and we use this measure as a baseline to compare the proposed algorithm. The attribute that disambiguates th e maximum number of pairs of level. Let D be the given data and a i be the i represents the number of distinct values of a i partition of D where a i = j where j can take N i The traditional algorithm calculates Indg for all the attributes and the attribute with minimum Indg is chosen as the root node for the navigation tree. If an attribute is presented at a particular node, the becomes inactive. The subsequent nodes in the tree are calculated similarly excluding the already selected attributes. This process is continued till the necessary information is found. A summary of the algorithm is shown in Figure 1. There has been in depth research around information retrieval on mobile interfaces [19]. They have focused on issues related to the experience of navigation, retrie val and location of web-based documents on mobile interfaces with a limited emphasis on the user X  X  experience with IVR menus. Our study therefore is an effort to explore factors associated with search and retrieval in IVR menus, particularly in a job-search context. Figure 1: Traditional decision tree algorithm using data distributions. We propose the following factors (referred to as navigation factors) that influence the effort n eeded by a user to interact with a phone-based system: 1. Number of options (breadth at the node). 2. Number of questions already an swered (depth of the node). 3. Type of options: There are two types of options. Categorical 4. Order of presentation of numerical options: In order to The effort could be measured in terms of time taken to choose an option and the number of extra options heard after the correct option was mentioned during the interaction as indicated in Figure 2. We mainly consider the choosing time as a quantitative measure reflecting the cognitive load. Figure 2: Relationship between navigation related factors and cognitive load indicators conducted to understand the rela tion between the navigational factors and the cognitive load. We created an IVR application to navigate a database of structured records. It is a DTMF based VoiceXML application for locating a record in the database. We used the scenario of job search where the database contains synthetically created jobs with details such as required experience, location of the job, educational qualification required, duration of the job and the skill required. We designed 8 tasks such that the impact of different parameters reflecting navigation factors menti oned in the previous subsection, on the cognitive load can be measur ed. In each task, we give the participant a candidate profile and ask the user to find a job for the candidate based on the details given. The participant listens to the system and presses the correct options for the sequence of questions asked to successfully comp lete the given task. It may be noted that the 8 tasks vary in te rms of number of questions needed to be answered to complete the task, the number of options for each of these questions and the answer type (categorical/ numerical) of these questions. Th e IVR system is built in two languages  X  Telugu and Hindi becau se of the demographics of people who participated in the study. An example candidate profile is as follows:  X  X here is a plumber at Vishakhapatnam (a place in the state of Andhra Pradesh, India) with 9 years of experience and has passed only the 6 th grade. X  The task is to find a job for this ca ndidate using the IVR system. The correct call-flow corresponding to this task is given below where the system prompts and the responde nt X  X  correct actions are given alternatively.  X   X  X hat is your profession? Press 1 for Carpenter, 2 for Driver,  X  Respondent presses 6  X   X  X hat is your location? Press 1 for Hyderabad, 2 for  X  Respondent presses 4  X   X  X hat is your experience? Press 1 if it is below 2 years, 2 if  X  Respondent presses 3 and listens to a job for the selected As one may observe, this task tests cognitive load corresponding to higher number of options and numerical options presented in random order (3 rd question). While the information needs presented in the experimental tasks are synthetic in nature, they reflect the real world scenario of job search, with a particular reference to type of job, educa tional qualifications, locations and other factors relevant to the sa mple demographic considered in this study, and thus the cognitive load of the experimental tasks are assumed to be similar to a real mobile-based job search. The tasks themselves therefore have also been designed to resemble real world tasks involving job search. We conducted the study over two-month period involving 44 participants. The average age of the participant in the study is 28.09 years. There are 6 females and 38 males who took part in this study. Out of the 44 participants, 4 were completely illiterate, 16 individuals had studied up to 10th grade or below, 8 subjects had received education up to 12th grade (intermediate), 7 were diploma holders, 6 individuals held graduate degrees and 3 held post graduate degrees. The occupati ons of the participants include housekeeping, gardening, catering, electricians, mechanics, sales, general administration, IT support, and security. Their average employment experience was 5.07 years. The average income is Rs.6573.86. Telugu is the mother tongue of 22 participants, Hindi of 16, Oriya of 5 and Tamil of one. The participants with Oriya mother tongue chose Hindi and with Tamil chose Telugu for the study. We performed the user study such that each of the 8 tasks was performed by 20 participants. So, we collected the data corresponding to 160 trials from 44 respondents. Each participant performed between 2 to 6 tasks. We established an initial rapport with the respondents by enquiring about their background, and their awareness and experience with respect to the us e of mobile phones in general, and IVR systems in particular. Their demographic details were experiment. We discovered that st riking an initial rapport in their local language is very important with many of the respondents to make them feel comfortable to interact with the system and to give us the feedback. We then explain the candidate profiles corresponding to different tasks using pictorial handouts for them to easily understand the profile and to quickly recall various profile attributes during the performance of the task. Respondents were subsequently given a few practice trials to familiarize them with the type of questions and options that would be asked in each trial. As part of the practice trials, the users were guided for selecting the appropriate option for each question, for the first few questions on the trial. They were subsequently encouraged to explore the system on their own so that they would be comfortable selecting the options for the rele vant profile shown to them, as part of the actual experiment. Th e users were asked to press the correct option as soon as they hear the correct option and were sure about it. Any doubts or ques tions regarding the IVR system were clarified as part of the practice trials. The extent of practice greatly varied among the res pondents. Some were very comfortable even with the very fi rst trial whereas with two people we could not continue with the study as they couldn X  X  perform any task even after repeated prompting and many practice trials. After the practice trials, the users were then instructed that the actual experiment would now begin, and they would have to refer to the candidate profile shown to them and search for a matching job. They were reminded that this is not a test of their memory and that they were free to choose the appropriate option for each question as and when it appeared in the IVR, and thus they did not have to remember all the options for each question. As the experiment was started, we noted down the time taken by the user to choose the correct option for each question and the number of options heard after the correct option mentioned as a measures of average choosing time (in seconds). The whole interaction was also digitally recorded and the noted observations were cross verified. We analyzed the data using multiple regression to examine the impact of factors relating to que stions and options on the choosing time. Table 1 shows the number of samples for each position of correct option, along with the average choosing time for each group. 
Table 1: Showing the number of samples and choosing time Figure 3 plots these variables, showing the average choosing time with respect to the position of the correct option. We observe that the choosing time is high for the first position. The respondents processing the question while hearing the first option, and they are new to the task. Their familiarity with the nature of options from the second position onwards would have possibly led to the reduction the choosing time for the remaining questions. 
Figure 3: Showing average choosin g time for each position of When the impact of the number of questions on choosing time was analyzed, it was found that after 2 questions the average choosing time was lower. Practice or learning effects on the part of the user experience with the navigation of the IVR, she possibly chose Table 2 shows the number of samples for each question number, along with the average choosing time for each group. 
Table 2: Showing the number of samples and choosing time This relationship is shown below in Figure 4. 
Figure 4: Showing average choosing time based on question Comparison between groups for cate gorical and numeric questions is statistically significant ( p =0.01 ) with the overall mean for choosing time for categorical que stions (mean = 3.48 seconds) lower than that of numeric (ordered and unordered) questions (mean = 5.89 seconds). The comp arison of choosing time between categorical and numeric options w ith respect to position of correct option is shown in Figure 5 and with respect to the question number in Figure 6. In both cases , choosing time for categorical options is lower than that of num eric questions. It may be noted that choosing among categorical options requires the individual to match her information with that provided on the IVR, while numerical questions put more cogn itive load on the user as she has to compare the numerical options presented with the numerical details relevant to her profile. Figure 5: Showing average choosing time for categorical and numerical options against positi on of the correct option Figure 6: Showing average choosing time for categorical and numeric questions against the question number We further analyzed the choos ing times when the numerical attributes are presented in an ordered way or a random way. Figure 7 shows that the choos ing time for randomly ordered options is higher than that for or dered options for all the positions of correct options except for the first one. The mean for randomly ordered options is 7.50 seconds wh ile that of ordered options is 3.67 seconds. This difference is statistically significant ( p &lt;0.01). We analyzed the difference in c hoosing time with respect to the menus in Telugu and Hindi. The m ean choosing time for the Hindi menu was 8.92 seconds, which was higher than the mean choosing time for the Telugu menu of 3.43 seconds. This difference was statistically significant (p&lt;0.01). There were 10 samples with errors detected during this study. The analysis of the error data showed th at 5 of the errors were for task 2 which had 5 questions. Thus errors were higher when the number of questions was high. 7 out of the 10 samples had errors on randomly ordered options, indicating that respondents faced a challenge while processing and correctly choosing randomly presented options. In 8 samples, the errors were noted beyond the 3 or 4 th question. Although the choosing time is lower for questions presented later, as disc ussed above, they are more likely to make errors as they progress with the task. 9 out of the 10 errors were on numerical questions. Out of the 9 numerical questions, 7 questions were randomly ordered. Figure 7: Average choosing time for ordered and randomly ordered questions against posi tion of the correct option When we compared the error data with respect to the total number of questions, the mean choosing time for the error responses was noted to be 3.75 seconds which was higher than the mean choosing time for the correct responses (mean -3.30 seconds, p&lt;0.10). A comparison between th e error responses and total number of ordered options heard showed that the mean choosing time for the error responses was higher at 6.17 seconds, while that of correct responses was substa ntially lower at 3.07 seconds (p&lt;0.05). Finally, a comparison between errors and the total number of random options heard showed the mean choosing time for error responses to be lower at 4.42 seconds while that of correct responses was higher at 7.24 seconds (p&lt;0.10). In this subsection, we summarize the implications of navigational factors on cognitive load and in turn, on the algorithm generating the facets. 1. Order and number of options: 2. Type of options: 3. Number of questions: Ev en though the response time The following are the implicati ons from the above observations. 1. Nodes with large number of records must be placed between 2. Categorical options are preferred over ordered options. 3. Number of options could be higher for categorical questions. 4. Numerical options are preferred to be presented in an ordered 5. Questions with categorical options are preferred for the The traditional algorithm for genera ting the navigation trees takes into account only the distribution of data across various attribute values to generate the optimal facets. While generating the navigation tree for the audio, the above mentioned additional navigational parameters also need to be taken into consideration so as to minimize the cognitive load on the person who needs to listen to the questions related to the facets and the related options sequentially and press the right option for the question. Based on the above findings, we propose the Facet Generation for Phone Based Interaction (FGPBI) algorithm. It builds on the traditional algorithm by considering the implications in Section 4.5. FGPBI algorithm modifies the traditional algorithm in 4 ways. 1. The priority to choose a particular type of attribute is decided 2. Whenever the number of options at a node is greater than 3. Within a node, it distributes the attribute values based on the 4. All the numerical attributes are presented in an ordered way. The algorithm is summarized below. We use Indg function as in (1) for choosing an attribute at a node while building the navigational tree. However, the way Indg is computed differs when the number of attribute values is greater than maxC for categorical and maxN for numerical attributes . When the number of attribute values is greater than max ( maxC or maxN ), the Indg function of the attribute is computed as the minimum of all Indg functions of partitions of the attribute values such that there are max -1 attribute values and one  X  X thers X  option which represents all the other a ttribute values. In this case, | D is computed as the number of t uples that are under the  X  X thers X  option. As a result of the optimum split, a new attribute is created. The new attribute will have the attribute values corresponding to the  X  X thers X  option. The attribute selected at a node will not be considered at the subsequent nodes. However, if the attribute has greater than max values and is split, the resulting new attribute will be considered at subsequent nodes. The process of recursively finding an attribute continues till the each split results in a small set of tuples. We change the criteria for selection of an attribute based on the depth as mentioned in the 5 th implication. We divide the depth of the tree into 3 levels. First level is from 0 to m questions (depth = remaining questions (depth &gt; n ) comprise the third level. 2. In the second level, Categorical attributes are preferred over 3. In the third level, minimum of the categorical attribute is Once the children of (options at) a node are determined they are ordered based on the type of the attribute. The options for the categorical attribute are ordered such that the option with large number of records is presented in the second position and from then the options are presented in the descending order of the number of records. The option with the least number of records is presented first. If there is an  X  X th ers X  option for an attribute, it will always be presented last. The options for numerical attribute values are always presented in the decreasing order of the attribute values. ------------Beginning of FGPBI Algorithm ----------Notation: L = Depth; a i represents i th attribute; N i = the number of values of a i; T = a threshold; Input: D, a dataset at a node Output: Tree Algorithm: FindTree( D,L,A ){ (a,S,A 1 ) =attributeMinimizeIndg( D,L,A ); // S contains values of a to split D D ij = j th split of D according to S FindTree( D ij ,L+1,A 1 ); } ( a , S , A 1 )=attributeMinimizeIndg( D , L,A ){ For all a i in A { if ( N i &gt; max C &amp; a i .type=Categorical) { a into a i1 &amp; a i2 where a i1 has maxC -1 values }else if ( N i &gt;maxN &amp; a i .type=Numerical){ a into a i1 &amp; a i2 where a i1 has maxN-1 values } else { } if ( L &lt;= m ) { k = arg min j D j ; a = a k ; } else if ( L &gt; m and L &lt;= n ) { p = arg min j D j , a j .type = categorical q = arg min j D j , a j .type = numerical if ( D p / D q &gt; T ) a = a q ; else a = a p ; } else { k = arg min j D j : a j .type = categorical; a = a k ; if (No categorical attributes){ a = a k ; } } if ( a is split){ S = all values a i1 and  X  X thers X ; 
A 1 = { A -a + a i2 } ; else{ S = all values of a ; 
A 1 = { A -a }; } Values in S are ordered by value if a is numerical; } ------------End of FGPBI Algorithm ----------In this section, we describe th e experimental study in which we compared the performance of FGPBI with that of the traditional algorithm mentioned in Section 3.3. We have applied these algorithms on 2 synthetically gene rated data sets and compared various parameters of the ge nerated navigational trees. We have taken the scenario of job search and have prepared job data for comparing the above two algorithms. Each data set has 10000 jobs. Each job has the following attributes -duration of the skill required.
 There are a total of six attributes out of which three are categorical and three are numerical. The number of attribute values for an attribute varied between 6 and 21: viz., duration  X  11; experience  X  6; location  X  21; qualification  X  8; company  X  6; skill -12. One are uniformly distributed for each attribute. Another data set is a skewed dataset which has all the attribute values distributed based on the Zipf X  X  law where the value of the exponent is taken as 1. Zipf X  X  distribution is a popular distribution which is found in many real world databases. In the experiments, the maxi mum number of options for the categorical attributes ( maxC ) is considered as 9 and for the numerical attributes (maxN) as 6. We set m (the end of 1 be 2 and n (the end of 2 nd level) to be 5 to change the priorities for categorical and numerical while generating the tree using FGPBI. parameters can be made depending on the application. Table 1 shows various parameters relating to the navigational trees obtained by applying the traditional and FGPBI algorithms on both the data sets generated using Uniform and Zipf X  X  distributions. In every row, th e optimum number corresponding to each of the data sets is mentioned in bold . The difference between the numbers corresponding to both the algorithms are highlighted and color-coded for each of the data sets. We summarize below our observations from the table 1. Questions versus options: The average number of questions 2. Categorical questions are more preferred than Numerical 3. Average number of options per question should be less for The FGPBI algorithm is particularly useful in data driven applications like e-commerce, job portals etc, which have more data points and more attribute valu es per attribute. These types of applications have sufficient number of questions to take advantage of the FGPBI algorithm. The data should also have a good mix of categorical attributes and numerical attributes. The algorithm works slightly better on uniform distribution of data of distributions show a significant improvement on traditional algorithm. In this paper, we considered the problem of designing phone-problem is particularly relevant in the emerging economies. We have analyzed the relationship between cognitive load and the navigational factors associated with facet navigation. We have conducted extensive user study among the semi-literate population in one of the emerging economies, viz., India. We have derived the implications of the discovered relationship on the parameters associated with de signing IVR system to navigate the structured data. We have proposed a new navigation tree generation algorithm and compared its performance with that of the most popular traditional algorithm. We show that the new proposed algorithm performs better than the traditional one with respect the parameters important to phone-based facet navigation. In this paper, we assumed that the user interacts with phone system by either pressing the number keys or by saying the numbers assuming that the speech recognizer used by the phone system is accurate in recognizing the numbers. There have been advances in speech recognition of Indian languages (for example, [26]) and also availability of industry-strength speech recognizers [27]. However, these speech recognizers will have limited accuracies when deployed over phone-systems even if we restrict understand the cognitive load a ssociated with the faceted navigation of structured data using systems employing speech recognizers and the implications on the facet-generation. The findings presented in this paper would be applicable to other similar settings which employ search using mobile-based platforms. [1] Paas, F.G.W.C. and Van Merrienboer, J.J.G. 1994. [2] Just, M.A., and Carpenter, P.A. 1992. A capacity theory of [3] Daneman, M., and Carpente r, P.A. 1980. Individual [4] Kumar, A., Agarwal, S.K. and Manwani, P. 2010. The [5] Hearst, M.A. 2006. Design reco mmendations for hierarchical [6] Moret, M.E.B. 1982.Decisi on trees and diagrams. [7] Murthy, S. 1998. Automatic construction of decision trees [8] Chakaravarthy, V.T. , Pandit, V. , Roy, S., Awasthi, P. , [9] Basu Roy, S., Wang, H., Nambiar, U., Das, G., and Mohania, [10] Suhm, B. 2008. IVR Usability E ngineering using Guidelines [11] Commarford, P.M., Lewis, J.R., Smither, J.A. and Gentzler, [12] Vanhoucke, V., Neeley, W. L., Mortati, M., Sloan, M., and [13] Diao, M., Mukherjea, S. , Rajput N. and Srivastava K., [14] Paas, F., Tuovinen, J.E., Tabbe rs, H., Van Gerven, P.W.M. [15] Baddeley, A.D., and Hitch, G. (1974) Working memory. In [16] Miller, G.A. The magical number seven, plus or minus two: [17] Wolters, M., Georgila, K., Moore, J.M., Logie, R.H., [18] http://en.wikipedia.org/wiki/Communications_in_India [19] Proceedings of the 2008 workshop on mobile information [20] S. Roy, H. Wang, G. Das, U. Nambiar and M. K. Mohania. [21] Hearst, M.: UIs for faceted navigation: recent advances and [22] D. Tunkelang. Dynamic category sets: An approach for [23] Ori Ben-Yitzhak, Golbandi N., Har'El N., Lempel R., [24] Wisam Dakka, Panagiotis G. Ipeirotis, and Kenneth R. [25] Kumar, A., Rajput, N., Chakraborty, D., Agarwal, S.K., and [26] Sivaraman G. and K Samudravijaya. Hindi Speech [27]  X  X uance Launches 9 Languages For Speech Recognition X  [28] Roland Brunken, Jan L. Plass and Detlev Leutner Direct 
