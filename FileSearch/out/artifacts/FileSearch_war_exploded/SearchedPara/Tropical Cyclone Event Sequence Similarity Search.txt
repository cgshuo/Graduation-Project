 The Earth Observing System Data and Information System (EOSDIS) is a comprehensive data and information system which archives, manages, and distributes Earth science data from the EOS spacecrafts. One non-existent capability in the EOSDIS is the retrieval of satellite sensor data based on weather events (such as tropical cyclones) similarity query output.

In this paper, we propose a framework to solve the simi-larity search problem given user-defined instance-level con-straints for tropical cyclone events, represented by arbitrary length multidimensional spatiotemporal data sequences .A critical component for such a problem is the similarity/metric function to compare the data sequences. We describe a novel Longest Common Subsequence (LCSS) parameter learning approach driven by nonlinear dimensionality reduction and distance metric learning. Intuitively, arbitrary length mul-tidimensional data sequences are projected into a fixed di-mensional manifold for LCSS parameter learning. Similar-ity search is achieved through consensus among the (similar) instance-level constraints based on ranking orders computed using the LCSS-based similarity measure.

Experimental results using a combination of synthetic and real tropical cyclone event data sequences are presented to demonstrate the feasibility of our parameter learning ap-proach and its robustness to variability in the instance con-straints. We, then, use a similarity query example on real tropical cyclone event data sequences from 2000 to 2008 to discuss (i) a problem of scientific interest, and (ii) challenges and issues related to the weather event similarity search problem.
 I.2.6 [ Computing Methodologies ]: Artificial Intelligence X  Learning: Parameter Learning ; I.5.4 [ Computing Method-ologies ]: Pattern Recognition X  Applications ;J.2[ Computer Applications ]: Physical Sciences and Engineering X  Earth and atmospheric sciences Algorithm, Design Metric learning, parameter learning, spatio-temporal data mining, mining multi-dimensional data sequences, similarity search, ensemble method, dimensionality reduction, embed-ding method, atmospheric events, tropical cyclones.
The Earth Observing System Data and Information Sys-tem (EOSDIS) 1 is a comprehensive data and information system which archives, manages, and distributes Earth sci-ence data from the EOS spacecrafts (a.k.a. satellite sensors) [10]. A challenge of EOSDIS is how to  X  X elp users find the data that they need and how to get it to them X  [2]. One non-existent capability in the EOSDIS is the accurate and efficient ad-hoc query and retrieval of Earth science satellite sensor data for dynamic atmospheric events such as tropi-cal cyclones based on ad-hoc user-defined criteria and event instances. Recently, we introduced a fast and effective data retrieval framework driven by a spatio-temporal partitioning scheme on the moving satellite trajectories for satellite data retrieval [12]. The main input for the data retrieval frame-work is the set of [similar] atmospheric event instances.
In this paper, we propose a framework to solve the simi-larity search problem given user-defined instance-level con-straints for tropical cyclone events, represented by arbitrary length multidimensional spatiotemporal data sequences .A tropical cyclone event is a  X  X on-frontal synoptic scale low-pressure system over tropical or sub-tropical waters with organized convection and definite cyclonic surface wind cir-culation X  2 . The frequently used term hurricane describes a high-intensity tropical cyclone with sustained surface wind intensity equal or more than 119km/h. Some examples of similarity of interest to scientists and meteorologists are track similarity (Hurricane Audrey (1957) and Hurricane Rita (2005) 3 ), strength similarity (Hurricane Katrina (2005) and Hurricane Camille (1969) [13]) and hurricane origin (Cape Verde hurricanes: Hurricane Isabel (2003), Hurricane http://esdis.eosdis.nasa.gov http://www.aoml.noaa.gov/hrd/tcfaq/A1.html
National Weather Service Forecast Office. http://www. srh.noaa.gov/lch/rita/rita_audrey.php Floyd (1999), and Hurricane Hugo (1989) 4 ). These similar-ity searches can be transformed into queries shown below.
Q1. Track: List all tropical cyclones that passed through
Q2. Strength: List all tropical cyclones that have intensity
Q3. Origin: List all tropical cyclones that evolve from re-The queries can be implemented using standard sequential query language (Q2) or spatial query language (Q1 and Q3) [11]. One similarity query that is impossible using current database query language is the use of condition containing instance-level constraints [22] shown below (Q4).
Q4. Instances: List all tropical cyclones that are similar This query type implementation requires solutions beyond set-theoretic (Q2) and geometric (Q1 and Q3) algorithm. This query enables users to perform (i) event data sequence clustering or categorizing based on knowledge of limited number of events, and (ii) similar events identification for data retrieval and analysis. For example, a scientist pro-vides the query system with a small set of tropical cyclones that have similar trajectories and wind intensity time series, but travelling at different speed. The system returns tropi-cal cyclone events from the past 20 years that exhibit similar characteristics and related satellite data for the scientist to further analyze and compare the events. The instance-level constraints query type can be extended to other arbitrary length multidimensional event (or object) data sequences with diverse feature attribut es in earth and ocean sciences.
The similarity query and search problem can be solved in a metric learning framework [24] where the instance-level constraints are split into two sets: dissimilar and similar. The main challenges for this similarity (parameter) learning problem are (i) the arbitrary length and multidimensional nature of the spatiotemporal data sequences, and (ii) the non-metric similarity measure.

In this paper, the main technical contribution is a simi-larity (parameter) learning fra mework for general (arbitrary length and multidimensional) data sequences which inte-grates both supervised metric learning and dimensionality reduction (which is some form of unsupervised metric learn-ing) to learn the similarity measure based on longest com-mon subsequences (LCSS) [21]. The main purpose for the di-mensionality reduction is to identify a fixed dimension mani-fold, with nonlinear geometric structure derived from the ar-bitrary length multi-dimensional data sequences, to perform similarity learning. In Figure 1, one observes the projection of the data sequences into the fixed 2-D metric space induced by the LCSS-based similarity measure. Similarity learning is performed in the 2-D space to learn the best LCSS parame-ters satisfying the similar and dissimilar data sequence con-straints. The identification of similar data sequences from
National Climatic Data Center (NCDC). Climate of 2003: Comparison of Hurricane Floyd, Hugo, and Is-abel. http://www.ncdc.noaa.gov/oa/climate/research/ 2003/fl-hu-is-comp.html Figure 1: Projecting arbitrary length multidimen-sional sequences into a fixed 2-D space for similarity learning. Dotted lines (below) and corresponding circles in square boxes in 2-D space (above) repre-sent dissimilar cyclone trajectories; solid lines (be-low) and corresponding circles in 2-D space (above) represent user-defined similar cyclone trajectories. Feature values (e.g., wind intensity and pressure) are not shown in the figure. a pool of unlabeled data sequences is based on a majority vote among the user-defined similar data sequences. The vote from each user-defined similar data sequence is based on the order ranking of the unlabeled data sequences from the user-defined similar data sequence. In particular, if an unlabeled data sequence is ranked as among the C most sim-ilar data sequences to a user-defined similar data sequence, it will receive a vote from that data sequence.

The outline of this paper is as follows. In Section 2, we briefly review similarity measures for data sequences and distance metric learning. In Section 3, the tropical cyclone data sequences used in the paper is described. In Section 4, the concept of longest common subsequence (LCSS) based similarity measure is introduced and generalized. In Section 5, we describe and discuss our proposed similarity (parame-ter) learning and search approach in detail. In Section 6, experimental results using a combination of synthetic and real tropical cyclone event data sequences are presented to demonstrate the feasibility of our parameter learning ap-proach and its robustness to variability in the instance-level constraints. We, then, use a similarity query example on real tropical cyclone event data sequences from 2000 to 2008 to discuss (i) a problem of scientific interest, and (ii) challenges and issues related to our proposed approach.
Many similarity measures for data sequences have been proposed (see [9] and references herein). The two main cat-egories are the L p -norm based similarity measures and the elastic similarity measures. The former similarity measures are metric, but they assume fixed length data sequences and do not support local time shifting; The latter can be used to compare arbitrary length data sequences and sup-port local time shifting but they are not metrics. The com-mon L p -norm based similarity measures use L 1 ,L 2 ,or L norm. The classical elastic measure that is first used to overcome the weakness of L p norms is the Dynamic Time Warping (DTW) [3]. The Longest Common Subsequence (LCSS) based similarity measure was proposed to handle two-and three-dimensional arbitrary length data sequences. The LCSS-based similarity measure is robust to noise and give more weight to the similar portion of the sequences [21]. The Edit Sequence on Real Sequence (EDR) is robust to noise, shifts and scaling of data [7]. Both Time Warp Edit Distance (TWEP) [17] and ERP [6] (which combines L -norm and the edit distance) support local time shifting and they are metrics. However, both ERP and TWEP are derived on 1-D time series and only shown empirically on 1-D time series.

Distance metric learning [24, 23, 16, 1] aims to learn a distance metric for the input data space from a collection of similar/dissimilar points that preserves the distance relation among the training data. However, not all similarity func-tions satisfy the metric prope rties. Moreover, it has been shown empirically that non-metric similarity functions have better performance than the metric similarity functions for problem such as similarity search problem for time series or data sequences [9]. Recently, a hashing approach has been proposed that takes into accord the learned Mahalanobis distance metric for scalable similarity search on image and systems data sets [15].

To the best of the authors X  knowledge, metric learning has never been applied to similarity search for weather events data sequences consisting of both trajectory and feature at-tributes. The most related work is by Yu and Gertz [25] who proposed learning the DTW distance by direct application of Xing et al. X  X  approach on the Mahalanobis distance [24] with the two trajectories interpolated to the same length. Even though our proposed framework is motivated by [24], it is fundamental different from [25]. The similarity (pa-rameter) learning problem is solved in a fixed dimensional metric space which preserves the nonlinear geometric struc-ture in the data sequence input space using a LCSS-based similarity measure.
A tropical cyclone event data sequence consists of both the trajectory and the feature attributes. A trajectory is the path a moving object follows through space and time. It is described by (i) spatial attributes (latitude and longi-tude), and (ii) temporal attributes (year, day, time). The feature attributes are (i) the maximum sustained wind in-tensity (knots) and (ii) the minimum central pressure (mb). Two consecutive data vectors in a data sequence are six hours apart.

One can retrieve tropical cyclone and some subtropical cy-clone event data sequences from the NOAA Coastal Services Figure 2: Histogram for the data sequence length of tropical cyclones occurring from 2000 to 2008.
 Figure 3: Relationship between any two attributes in the data sequences for tropical cyclones occurring in the North Atlantic Ocean from 2000 to 2008.
 Center website 5 for both the North Atlantic Ocean and the Eastern North Pacific Ocean from 1851 to 2008. For this paper, 116 tropical cyclones occurring in the Atlantic Ocean from 2000 to 2008 and synthetic data sequences generated based on the 116 tropical cyclones are used in our experi-ments.
 The tropical cyclone data sequ ences have arbitrary length. From Figure 2, one sees that most of the data sequences con-sist of between ten to sixty data vectors for tropical cyclone occurring in North Atlantic Ocean between 2000 and 2008. The top left graph in Figure 3 shows the trajectories for the tropical cyclones. From the bottom right graph, one observes that there is an anti-correlation between the min-imum central pressure and the maximum sustained wind intensity. Hence, we need only use one of the two feature attributes in our similarity learning and search problem. In this paper, we use the maximum sustained wind intensity. In the next section, we describe the Longest Common Sub-sequences (LCSS) similarity measure which supports local time shifting to handle arbitrary length data sequences.
It has been empirically shown that no one similarity mea-http://csc-s-maps-q.csc.noaa.gov/hurricanes/ sure outperforms the others for time series [9]. Moreover, the proper parameter values are critical for the effectiveness of the similarity measure. In this paper, we use the Longest Common Subsequence (LCSS), an edit distance based elastic similarity measure, for similarity measure learning. In this paper, we extend the LCSS-based similarity measure from multidimensional (at most three) trajectory [21] to general multidimensional data sequences.

Consider two arbitrary length multidimensional spatiotem-poral data sequences with m attributes and of length n and l , respectively. Define the similarity function S 1 between A and B ,given  X  and E =( 1 , 2 ,..., m ), by with the generalized LCSS defined by such that Head ( A )isthesequence ( t a, 1 ,a 1 , 1 ,...,a n and for some predefined  X  and E . To have good performance, the parameters  X  and E have to be tuned according to the specific application. One concludes from Example 1 that the LCSS-based similarity measure S 1 is sensitive to the parameters  X  and E .
 and B = (0 , 1 3 ) , (1 , 2 1 ) , (2 2 , 1 4 ) where d =1 and m =0 . 1.  X  =1 and E =(1) .
 2.  X  =0 . 25 and E =(1) .
 3.  X  =1 and E =(0 . 5) .
 4.  X  =0 and E =(0) .

In Section 5.1, we describe our proposed approach for learning LCSS-based similarity parameters for arbitrary length multidimensional data sequences. In Section 5.2, we de-scribeavotingmethodtoselectthemostsimilardatase-quences from a pool of unlabeled data sequences based on the user-defined similar data sequences and the learned LCSS-based similarity measure.
The most intuitive distance metric learning approach to use for our problem is the one proposed by Xing et al. [24]. In their approach, the metric learning problem is posed as a convex optimization problem with the constraints given by the  X  X ust-link X  data pairs and  X  X annot-link X  data pairs. The objective is to find the matrix representing the Maha-lanobis metric that allows the similar data points close to one another and the dissimilar data points far away from the similar data points.

The main differences in the problem setting are (i) the non-metric LCSS-based similarity S 1 used in our problem, and (ii) arbitrary length multidimensional data sequence pair constraints. Moreover, the optimization step has to be modified for the integer time parameter  X  in LCSS.
Xing et al. X  X  metric learning framework is extended to learning parameters of non-metric similarity for generic (ar-bitrary length and multidimensional) data sequences. A dimensionality reduction component is integrated into the Xing et al. X  X  framework to fac ilitate similarity learning in a fixed low dimensional metric space induced by the non-metric S 1.

Let f S 1 be a transformation fro m the data sequence in-put space to a fixed low dimensional space M induced by S 1. Let S and D be the set of  X  X ust-link X  pairs and the set of  X  X annot-link X  pairs, respectively. To perform the sim-ilarity learning, we use a variant of the objective function introduced in [24] as such: where P =( 1 , 2 ,..., m , X  )  X  ( R + ) m  X  Z + .Solvethe unconstrained minimization problem: g ( S, D, P )= where || X || is some metric norm (e.g. l 2 norm) in M .The additional terms are used to control the magnitude of para-meter vector P .

The coordinate descent method [5] is used for the mini-mization step to avoid gradient computation. g (  X  ) is mini-mized along one coordinate direction at each iteration. In our implementation, the coordinate is selected based on such that I = { P i =( k 1 ,  X  X  X  , k +1 i ,  X  X  X  , k m , X  ) h e i } , e i is the i th unit vector, h i is a fixed small value. We fix  X  and allow search in i space first. When the global minimum (at fixed  X  ) is achieved, we perform minimization with stepsize 1 on  X  . Initialization of P starts near the zero vector. One notes that as i and  X  increase, the similarity value between two data sequences increases.
The nonlinear dimensionality reduction is used to trans-form ( f S 1 ) the original data sequences based on S 1torep-resentations in a fixed low dimensional space. In this paper, we use Isometric Feature Mapping (ISOMAP), an exten-sion of linear embedding approaches (e.g., multidimensional scaling, MDS [8]), which learns the global nonlinear geo-metric structure of the input data [20]. One capability of ISOMAP is its ability to discover nonlinear degrees of free-dom that underlie complex natural observations such as the trajectory and feature attributes of tropical cyclones. On the other hand, one notes that other type of linear or non-linear dimensionality reduction approaches can also be used to replace ISOMAP for the transformation F S 1 .

The ISOMAP algorithm consists of two main steps: 1. Estimate the geodesic distance between points in a 2. Apply MDS to find points in M such that the distance
ISOMAP is able to discover the d  X  dimensional manifold embedded in a high dimensional input space. In our prob-lem, we assume that there exists some intrinsic low dimen-sional (Euclidean) structure embedded in the high dimen-sional  X  X ata sequence space X . Bernstein et al. [4] established that the estimated geodesic distance between points in the original space converges to the true geodesic distance be-tween points in M . If we assume that the data sequences are sampled from a convex Euclidean domain, then the geodesic distance between points in M are equal to the Euclidean dis-tance in that domain. With the two conditions satisfied, the MDS step in ISOMAP will asymptotically recover the em-bedded (Euclidean) data structure [4]. Hence, by adding this dimensionality reduction step into similarity learning, we ensure that similarity learning is performed in a fixed dimensional metric space which preserves the nonlinear geo-metric structure of the  X  X ata sequence space X . This nice property ensures that the LCSS measure learned is robust to variation in user-defined similar data sequences. In other words, the learned similarity measure can still distinguish similar and dissimilar data sequences accurately as the fea-ture and spatio-temporal variations increase for the user-defined similar data sequences.

Algorithm 1 provides a high level description of the LCSS-based similarity parameter learning procedure. In Step 2, we construct the  X  X ust-link X  pairs by pairing up all the data sequences in the set S of similar data sequences. Hence, |
S data sequences in the set D of dissimilar data sequences are all paired up first. Then. each data sequence in S are paired with all the data sequences in D .Hence, | D | = ISOMAP algorithm. Step 3 computes the K  X  nearest neigh-bor graph using S 1 defined by P for the data sequences in S and D . Step 4 computes the geodesic distance between all data sequences using Dijkstra X  X  algorithm and S 1 defined by P . Step 5 constructs the low dimensional manifold M us-ing MDS. Lines 7 computes the objective function 2. Line 8updatesthe P parameter. Line 9 is the stopping criterion based on the absolute difference between two consecutive Input : S , similarity set; D , dissimilar set; K .
Output : Parameter vector, P .
Algorithm 1 : LCSS-based similarity parameter learn-ing objective function values, g i +1 and g i . Algorithm 1 halts when the criterion value is less than  X  .

The computational complexity of the LCSS-based simi-larity parameter learning algorithm is analyzed by breaking it down into 3 components: dissimilarity matrix construc-tion by computing S1 values for all sequence pairs (Step 3), ISOMAP (Step 4 and 5), and the coordinate descent method (Step 6 to 8). Based on Lemma 1 in [21], the (dis)similarity matrix construction can be computed in O ( s 2  X l )where s is the number of data sequences and l =2max( l 1 ,  X  X  X  ,l s ) ,l 1 ,  X  X  X  ,s are the sequence lengths. For the ISOMAP algo-rithm, the computational complexity is O ( s 3 ). The con-vergence rate of coordinate descent method is similar to steepest descent method. Even though it can be slow, it is still effective for practical purposes [5]. During each iter-ation, one needs to construct the dissimilarity matrix only once and run the ISOMAP algorithm. From a practical im-plementation perspective, dissimilarity matrix construction step (Step 3) is the most expensive steps as s&lt;l and  X  s&lt;l as the number of user-defined data sequences for the similarity query is assumed to be limited.
To select the most similar data sequences from a set U of unlabeled data sequences, we use a voting scheme to decide among the data sequences in the similar set S using the LCSS-based similarity and the learned parameter vector P . The voting scheme is a combination of ranking the unla-beled data sequences and a majority vote decision based on the ranking. For each data sequence s  X  S , the unlabeled data sequences in U are ordered based on their Euclidean distances from s . If an unlabeled data sequence u  X  U is ranked as among the C most similar (or closest) data se-quences to s , it will receive a vote from s .If u received more than | S | 2 votes, it is considered similar to the data sequences in S .

Algorithm 2 shows our voting approach for similar data sequences selection using the learned LCSS-based similarity measure S 1 from Algorithm 1. Lines 1 to 3 are the steps for the ISOMAP algorithm using the learned LCSS-based simi-larity measure S 1. Line 4 computes the Euclidean distances
Input : S , similarity set; U , the set of unlabeled data
Output : O , the set of similar data sequences.
Algorithm 2 : Data sequence voting-based similarity search. from all the unlabeled data sequences in U to each data se-quence in the similar set S in the fixed manifold M .Line5 sorts and ranks the unlabeled data sequences for each data sequences in S using the computed Euclidean distances in Step 4. Line 6 gathers the C most similar unlabeled data sequences for each data sequence in S into a single set. Line 7 counts the number of times an unlabeled data sequence is among the top C unlabeled data sequences closest to each data sequence in S . Line 8 is a voting scheme which se-lects a data sequence if it is ranked among the top C data sequences for more than half the data sequences in S .
Other variants of the voting scheme can also be used for the similarity search. In particular, vote counts can be based on the C farthest from the data sequences in the dissimilar set or vote counts based on ranking data sequences from both similar and dissimilar sets.
In Section 6.1, we show the feasibility of our LCSS-based similarity parameter learning approach (Algorithm 1) and its robustness to variability in the instance-level constraints. In Section 6.2, we present a scenario when a user provides a similar set S and a dissimilar set D , and uses our proposed approach to search for similar data sequences.
In the first experiment, the thresholds for both the tra-jectory and feature attribute values of the data sequences in the similar set S are increased from 1 to 5 to test the robustness of our approach. In this experiment, synthetic data sequences are generated based on real tropical cyclone sequences. For each experimental trial, one similar set S of synthetic tropical cyclone sequences is generated as follows. 1. Randomly pick one data sequence s q from the real 2. Specify a threshold  X  a for each trajectory and feature 3. Specify a translational threshold  X  so that a generated 4. Generate each of the 10 new similar data sequences as Then, we randomly pick 30 data sequences from the tropical cyclone event sequence set, excluding s q , and include them into the dissimilar set D .Inourexperiment,since | S | =10 and | D | = 30, | S | = 10  X  9 2 =45and | D | = 30  X  29 2 2040, respectively, according to Section 5.1. Moreover,  X  varied from 1 to 5 for all a ,  X  =1,and t = l .Foreach  X  a value, we perform 20 trials.

Using the above procedure for similar set generation, we generate another 100 positive testing examples. 85 data se-quences, excluding the 30 in D and s q , from the real tropical cyclone event sequence set are used as negative testing ex-amples. Hence, we have | U | = 185. K issetto10for the ISOMAP algorithm, the manifold dimensions for the similar and dissimilar data sequences are set to 10 and 30, respectively. This is to ensure that we can capture suffi-cient nonlinear geometric information without the manifold dimensionality higher than the number of data sequences. Accuracy of a similarity measure is computed as follows. First, similarity values between s q and all the data sequences in U are computed. Then, the similarity values are sorted. The positive testing examples should be among the 100 clos-est to s q .Hence, where Pe and Ne are the sets of positive and negative testing examples, respectively; S p and S n are the similarity values for a positive example p and a negative example n , respectively, and S | Pe | is the similarity value of the sorted value at position | Pe | (assuming sorting in increasing or-der). Since accuracy is based on the ranking for all the data sequences, true positive (or true negative) is a sufficient per-formance indicator if we know both | Pe | and | Ne | .Figure 4 shows the experimental result when no parameter learn-ing is performed and a fixed P =(1 , 1 , 5 , 1) is used instead. As  X  a increases, the number of true positive decreases. In
As described earlier in Section 3, 116 tropical cyclones oc-curring in the North Atlantic Ocean from 2000 to 2008 are used in our experiments. other word, as the data sequences in S become more di-verse, the LCSS-based similarity measure using a fixed P is less likely to measure similarity accurately for the data sequences that are generated from the same distribution as those in S . Moreover, one observes that the true positive variance among the 20 trials increases as  X  a increases.
Next, we compare the LCSS-based similarity parameter learning approach with (i) the direct application of Xing et al. X  X  metric learning approach to learn the LCSS parame-ter, and (ii) when no learning approach is used. Figure 5 and 6 show the performance comparison for the three ap-proaches based on (i) S 1 measures in the data sequence input space, and (ii) Euclidean distance in the fixed low dimensional space, respectively. One unexpected obser-Figure 5: Accuracy using S 1 measure in the data sequence input space.
 Figure 6: Accuracy using Euclidean distance in a low dimensional space. vation from Figure 5 is the poor performance of Xing et Figure 7: The five data sequences [solid lines] in the similar set S and the ten data sequences [dashed lines] in the dissimilar set D (trajectories only). al. X  X  approach to learn the LCSS-based similarity measure for the data sequences. The performance is even worse than using a good fixed P for S 1 measure. From Figure 6, the accuracy for Xing et al. X  X  approach improved when sorting and ranking are done using Euclidean distance in the fixed low dimensional space derived using ISOMAP based on the learned S1 similarity measure. From both figures, one ob-serves that our approach has favorable performance and its performance is consistent as variability increases. Moreover, from Figure 6, one also observes that the performances for the other two approaches become more consistent in a fixed low dimensional space as variability increases. We present a scenario when a user provides a similar set S and a dissimilar set D , and uses our proposed approach to search for similar data sequences. This corresponds to the query First, we include 5 tropical cyclone event data sequences from the real tropical cyclone event data sequence set into S and include another 10 data sequences into D .Figure7 shows the sets S and D used for LCSS-based similarity pa-rameter learning (Algorithm 1). We then include the other 101 tropical cyclone events into U . For both Algorithm 1 and 2, K = 15. For Algorithm 2, C =5. Figure8shows the 5 most similar data sequences for each of the five data sequences in S based on Step 6 in Algorithm 2. Figure 9 shows the two trajectories [solid lines] and wind intensity time series of the output from Algorithm 2 together with the trajectories of the 5 similar data sequences. Figure 10 shows some seemingly similar data sequences to the data se-quences in S and their corresponding N u values (see Step 7, Algorithm 2). One notes that N u needs to be greater than 2 to be output by Algorithm 2. One observes from Figure 9 and 10 that the initial subsequences of those data sequences having higher N u (greater or equal 2) tends to be very similar to those initial subsequences of data sequences in S . Also, from Figure 8, one observes that a data sequence may be similar to some data sequences that  X  X ook X  different (e.g., the third and the fourth sequences). This affects the N u value which is used in making selection decision in Al-gorithm 2. Moreover, the user-defined ranking cut-off, C also affects the number of data sequences selected. In other words, with higher C and a fixed | S X  | , there will be more selected data sequences (see Figure 11).
 Figure 9: Top: The five data sequences (dashed lines) in the similar set S and the two output tra-jectories [solid lines] using Algorithm 2. Bottom: Wind intensity time series from the similar set S and the two wind intensity time series from output data sequences.
Using the similarity query and search example in Section 6.2, we discuss (i) a problem of scientific interest, and (ii) challenges and issues related to our proposed framework and approach.
 Figure 11: Number of output data sequences vs user-defined ranking cut-off, C when | S | =5 .
 The target users for the query described in Section 6.2 are scientists studying weather events. The objective of such a query is to support scientists in narrowing down their searches for weather events of specific characteristics de-scribed by data sequences as instance-level constraints. This capability is currently not available in standard database query and search functionalities.

Such query can sometimes pose new interesting scientific problem. For example, our similarity search approach iden-tifies two tropical cyclones similar to data sequences in S . However, there are some similarities and some differences between the two tropical cyclones. From Figure 9, one ob-serves that their trajectories and wind intensity time series are similar initially during the first few time instances. How-ever, one of the two (Hurricane Helen, September 12 to 27, 2006) became a Category 3 hurricane while the other (Tropi-cal Storm Josephine, September 2 to 9, 2008) weakened after three days. Why did one intensify and the other one die out in a few days? This example demonstrates the tropical cy-clone intensification problem which one attempts to discover the factors and conditions a tropical cyclone intensifies. Us-ing each of the two tropical cyclones separately, one can further perform similarity search to identify two groups of similar tropical cyclones, retrieve the corresponding satellite data, and analyze them.

By integrating query type described in Section 6.2 into a sequences in S . satellite data retrieval system [12], one can retrieve satellite data based on the output from the query for analysis. More-over, this framework can be easily extended to other event (or object) data sequences in earth and ocean sciences. Some technical challenges and (open) issues are briefly dis-cussed here. 1. Which dimensionality reduction approach is the best? 2. Applying our approach to other data sequence similar-3. Better approach for similarity search.
 4. How can local/partial similarity search be achieved?
We propose a framework to solve the similarity search problem given user-defined instance-level constraints for trop-ical cyclone events, represented by arbitrary length multi-dimensional spatiotemporal data sequences .Wedescribea novel Longest Common Subsequence (LCSS) parameter learn-ing approach driven by nonlinear dimensionality reduction and distance metric learning. Similarity search is achieved through consensus among the (similar) instance-level con-straints based on ranking orders computed using the learned LCSS-based similarity.

Experimental results using a combination of synthetic and real tropical cyclone event data sequences are presented to demonstrate the feasibility of our parameter learning ap-proach and its robustness to variability in the instance con-straints. We also present a similarity query example using real tropical cyclone event data sequences from 2000 to 2008.
The main contributions of this paper are the introduction of novel problems/directions in three different research disci-plines, namely: (i) [database] a new query type conditioned by user-defined instance-level constraints (not only limited to data sequence instances, but also for any data structure) (ii) [machine learning] a new metric learning problem for arbitrary length multidimensional data sequences, and (iii) [climate science] supporting scientific research on weather events (e.g., tropical cyclones) via similarity search.
Our future work include (i) overcoming the technical chal-lenges in our proposed approach such as the need to select the dimensionality reduction algorithm and to select the pa-rameter for the voting scheme, and (ii) theoretical study and generalization of our framework.
 This research was carried out at the Jet Propulsion Labo-ratory, California Institute of Technology, under a contract with the National Aeronautics and Space Adminstration. [1] M. S. Baghshah and S. B. Shouaki. Semi-supervised [2] J.Behnkre,T.H.Watts,B.Kobler,D.Lowe,S.Fox, [3] D. Berndt and J. Clifford. Using dynamic time [4] M.Bernstein,V.d.Silva,J.Langford,and [5] D. P. Bertsekas. Nonlinear Programming .Athena [6] L. Chen and R. Ng. On the marriage of l p -norms and [7] L. Chen, M. T. Ozsu, and V. Oria. Robust and fast [8] T.F.CoxandM.A.Cox. Multidimensional Scaling . [9] H. Ding, G. Trajcevski, P. Scheuermann, X. Wang, [10] M. Esfandiari, H. Ramapriyan, J. Behnke, and [11] R. H. Guting and M. Schneider. Moving Objects [12] S.-S. Ho, W. Tang, T. W. Liu, and M. Schneider. A [13] J. Hobgood. A comparison of hurricanes katrina [14] I. T. Jolliffe. Principal Component Analysis . Springer, [15] B. Kulis, P. Jain, and K. Grauman. Fast similarity [16] Z. Lu, P. Jain, and I. S. Dhillon. Geometry-aware [17] P.-F. Marteau. Time warp edit distance with stiffness [18] S. Roweis and L. K. Saul. Nonlinear dimensionality [19] B. Schoelkopf, A. Smola, and K. R. Muller. Kernel [20] J. Tenenbaum, V. d. Silva, and J. C. Langford. A [21] M. Vlachos, G. Kollios, and D. Gunopulos.
 [22] K. Wagstaff and C. Cardie. Clustering with [23] S. Wang and R. Jin. An information geometry [24] E. P. Xing, A. Y. Ng, M. I. Jordan, and S. Russell. [25] W. Yu and M. Gertz. Constraint-based learning of
