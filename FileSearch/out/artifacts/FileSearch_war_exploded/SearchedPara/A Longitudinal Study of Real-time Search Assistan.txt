 We present findings from a log based study designed to track the adoption of features of a new real-time query refinement interface deployed on the Yahoo search engine. Several trends from the first four months are noted and discussed. [ Information Storage and Retrieval ]: Information Search and Retrieval  X  query formulation . General Terms : Measurement, Design, Human Factors Query refinement, user interfaces, search assistance, web search. Although many varieties of interac tive query refinement have been proposed and studied in the lab [2,3], we know relatively little about how users would interact with richer terminological search assistance in non-laboratory settings and on web search engines [1]. In part, this is because the potential benefits of deploying such technologies are counterbalanced by concerns over taking up web page real estate and disrupting users X  well-honed habits for performing web searches, many of which do not require any search assistance. Furthermore, there are several competing approaches for generating suggestion content (e.g ., popular query extensions vs. pseudo relevance feedback [5]) and how/when to present it (e.g., real-time vs. retrospective [4]). Yahoo X  X  recently deployed  X  X earch Assist X  interface attempts to deal with these issues by offeri ng two kinds of suggestions -query extensions and related concepts -in both real-time and retrospective modes through a single dynamic UI triggered when the user is believed most likely to be receptive. The risk of such an approach is that it introduces a more complicated interaction model for users to adapt to and learn. Given that many web users search relatively infrequently (every few days) and ha ve very short interactions (one or two queries), new features could take time to learn or simply be ignored. The launch of the Search Assist tool provided an opportunity to track the behavior of a population of users from their earliest exposure through the course of several months. By looking at a number of measures of engagement derivable from search logs, we hoped to shed some light on the discoverability and usage patterns for each of the query refinement features offered in the tool. Yahoo X  X  Search Assist interface (version 1.0) combines two refinement tools within a single display tray. Gossip offers suggest-as-you-type expansions for a user X  X  query string on a character by character basis (as displayed in the left column in figure 1). Its suggested query completions are derived from frequently occurring queries mined offline from search logs. Clicking on a gossip suggestion has the effect of replacing the query in the search box and executing the search. Once a search has been run, Viewpoint offers related concepts derived from an analysis of top search results. Clicking on a viewpoint suggestion effectively AND X  X  the However, in this case, the interface keeps the query and refinement terms separate. Rather than merge the refinement into the query box, the interface instead moves it to the left hand side of the tray (under the caption  X  X howing results containing X  in figure 2) and repopulates the right-hand-side w ith new related terms generated from the revised query. The motivation behind this model of topic through the selection of easily replaceable refinement terms. As an additional feature, clicking on the currently selected viewpoint refinement in the left hand side substitutes it for the current query, thereby broadening or redirecting th e search. We will refer to this as the  X  X eplacement X  feature below. Figure 1. Search Assist tray showing gossip suggestions on left and viewpoint concepts on right after running a query. Figure 2. Search Assist tray after clicking on viewpoint suggestion  X  X ata mining X  in ri ght hand side of figure 1. A novel aspect of the interface is the implementation of the suggestion display within a slidi ng tray that opens automatically based on heuristics about the user X  X  search process. Since many queries do not require refinement, the tray is left closed by default. It is triggered when the user pauses while entering or modifying a query for which gossip suggestions exist. In cases of extending a previously entered query for which results are available to generate re trospective suggestions, v iewpoint concepts are also included in the display. The tray remains open after performing a search only if the previous query was executed by clicking a suggestion (as in figure. 2). Eye tracking studies and retrosp ective interviews with test subjects prior to launch revealed both advantages and drawbacks of the interface design. With repeated exposures, most users eventually discovered and interacted with the assistance tray, reporting that seeing the gossip suggestions gave them more confidence in their search choices and that viewpoint suggestions inspired different ways of thi nking about expressing their needs even in those cases when none of the suggestions was on target. However, some users were so predisposed to their habitual manner of searching that they often failed to notice or respond to the tray when it appeared. Some who did notice expressed initial confusion over the two se ts of suggestions. Log data for roughly 100,000 visitors to the Yahoo search results page was captured for four Wedne sdays, D1-D4, where D1 was the second full day after launch of the tool, D2 was 3 weeks later, and D3 and D4 were 9 and 17 weeks after D1, respectively. These dates provide a set of snapshots of user behavior over a 4 month period. For each date, records were sorted by bcookie to create daily session logs. Logged data included the query, the manner in which the query was entered (e.g., by gossip or viewpoint clicks or typing into the search box), and flags indicating when the search assist tray was exposed. We broke daily user sessions up into  X  X efinement blocks X  ( rblocks ) consisting of query sequences all beginning with the same first term. Given that most query reformulations consist of adding or deleting terms from a previous query, this was a convenient heuristic for capturing se ts of query refinements that were highly likely to be related to the same search task. For each rblock, we tracked queries by position within the block (e.g., first/last), tray exposures, and inte ractions with suggested terms. Table 1 shows metrics derived from the log data for days D1-D4. Out of the 11% of daily visitors getting at least one tray exposure, roughly 30% engaged with gossip . The high engagement rate at D1 indicates that the dynamic display was effective in catching users X  attention. Although some users reported (via online feedback) that it was distracting, we see a steady rise in % users engaging with gossip over time up to 37% at D4. This growth could reflect both increasing attenti on paid to the tray contents as well as users learning to click on a suggestion rather than use it as a guide for entering the query manually. Since the Yahoo front page also displays suggest-as-you-type gossip suggestions, learning there would likely transfer to the search results page. The trend also suggests that a more aggressive tray exposure rate may be acceptable to users. Table 1. Search Assist metrics for days D1-D4. Bolded D4 values differ from D1 at p &lt; .01. Exposed/total users 11.16 11.01 11.01 11.25 Gossip eng./exposed users 29.95 32.49 35.48 37.28 VP eng. /exposed users 6.94 6.01 5.71 6.18 VP-replacement/VP users 15.40 19.37 19.81 21.90 Gossip+/gossip (in rblock) 14.50 14.24 15.57 12.48 VP+/VP (in rblock) 32.30 31.17 32.44 26.82 Avg. length of 1 st query 2.697 2.683 2.690 2.722 Viewpoint (VP) engagement for users exposed to the tray showed a slight spike on D1, perhaps reflecting an initial curiosity to experiment with the tool beyond users X  actual search needs, then continued around 6%. (Note that our logs do not tell us how often the suggestion tray included both gossip and viewpoint suggestions. A lower viewpoint engagement rate is to be expected since viewpoint suggestions are available only after completing a search; any tray invocations ma de during new searches would include only gossip suggestions.) The number of viewpoint users who employed the  X  X eplacement X  f eature grew steadily. This may reflect a growing comfort level with the viewpoint model, which made it easier for users to notice and incorporate a new feature into their cognitive model of the tray X  X  behavior. Iterative refinement within rblocks (Gossip+, VP+) was evident from the start. Of those rblocks containing at least one gossip click, roughly 14% contained mu ltiple gossip clicks; iteration with viewpoint averaged around 30%. The slight drop on D4 for both cases might be due to user s clicking on longer gossip terms initially, which could reduce further iteration. Average length of the first query in an rblock is slightly higher on D4. Because web search is such a habit-driven behavior, the incorporation of new features into a user X  X  repertoire is likely to take time. Using longitudinal log analysis, we have been able to observe trends in users X  engage ment with a novel real-time query refinement tool. Such observati ons will drive further hypothesis testing in the lab and suggest opportunities for tuning the design. [1] Anick, P. (2003) Using terminological feedback for web [2] Efthimiadis, E. N. 1996. Quer y expansion. Annual Review [3] Koenemann, J. and Belkin, N. J. (1996) A case for [4] White, R. W. and Marchionini, G. 2007. Examining the [5] White, R. W., Clarke, C. L., Cucerzan, S. 2007. Comparing 
