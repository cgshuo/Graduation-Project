 To use math expressions in search, current search engines require knowing expression names or using a structure editor or string encoding (e.g., LaTeX). For mathematical non-experts, this can lead to an  X  X ntention gap X  between the query they wish to express and what the interface will allow them to express. m in interface that supports drawing expressions on a canvas using mouse/touch, keyboard and images. We present a user study examining whether m in changes search behavior for mathematical non -experts, and to identify real-world usage scenarios for multimodal math search interfaces . Participants found query-by -expression using hand-drawn input useful, and identified scenarios in which they would like to use systems like m for locating, editing and sharing complex expressions (e.g., with many Greek letters), and working on complex math problems.
 H.3.3 . [Information Storage and Retrieval] : Information Search and Retrieval  X  Query formulation, Search process; H.5.2. [Information Interfaces and Presentation] : User Interfaces  X  User-centered design.
 User interface design; multimodal input; search interfaces; Mathematical Information Retrieval; MIR; query-by -expression. Our study was designed to gain insight into whether expressions would be desirable and/or useful to non-experts (in our case, college students) when conducting math-related searches. We looked at relevant research in the areas of visual math perception and math input to understand the mental model and input preferences of math searchers and then surveyed the current state of math search interfaces t o discov er whether there are usability issues that might specifically impact the non-expert user. What we found is that current math search interfaces limit users to expressing the math expression portion of their search need in the form of text, an encoding language, or via the use of some type of equation editor. If users are visualizing a formally notated math expression before they search, it seems unfortunate to break this visual flow by forcing users to first convert the diagrammatic math expression into a coded, sentential one or build it through the tedious use of selection menus in order to initiate the search process. Further, since many math expressions are learned, consumed and recalled visually, being able to query using expressions (i.e., query-by -expression ) seems a natural way for non -experts to search for mathematical information [ 12]. In a prior study of math professors and graduate students, participants could not identify scenarios where entering math expressions as search terms would be useful [14], and found it sufficient to lookup formulas, metrics and concepts textually, as they often knew them by name. However, the study did not consider non-experts, and participants were not provided with a prototype supporting non-textual math input for evaluation. 
Figure 1 : A query combining a handwritten expression and keywords in m in 1 . Different search engines may be selected In contrast, for our study, non-expert participants used the math search interface m in (see Figure 1 [6]). m in supports drawing expressions as opposed to entering them textually or using template editors (e.g., Microsoft Equation Editor). The goals of our user study were: 1) to observe whether m in changes user search behavior, and 2) document relevant use cases for math search interfaces by mathematical non-experts. Changes in user behavior included increased use of math expressions in search, and an increased capacity for some participants to represent expressions for search, and a number of realistic use cases were identified. We believe that our findings can inform the design of math search interfaces so that they better support mathematical non -experts. The appearance of math expressions affects our reasoning about them [6]. Landy &amp; Goldstone ran a series of experiments where http://saskatoon.cs.rit.edu/min_instructions participants were asked to judge whether given equations were valid. Equations were structured with either nonstandard spatial relationships, irrelevant or induced groupings, or manipulated spacing. This influenced participant responses even when given feedback, and when they recognized that they were likely being misled by their perceptions. In another set of experiments, participants were presented with equations expressed textually, and asked to either handwrite or type them into an interactive website using a keyboard [5]. Participants systematically spaced the expressions even when it was unnecessary. Landy &amp; Goldstone suggest that math notatio n may be grounded in visual structure, since people seem to be affected by small changes in symbol layout. Typed input has been found not to be ideal for authoring math notation by many users [2]; equation editors fall short as searching for symbols is tedious and making changes in symbol layout can be difficult [11]. In an initial study, users asked to use and rate various input modalities for math, found handwriting to be the most natural and satisfactory [2]. Later, these results were found to generalize to middle-and high-schoolers and to simpler, easily typed equations [1]. If users have a math expression in mind, it may be disruptive for them to convert it into code or text to initiate the search process. This gap between a user X  X  intentions and a system X  X  allowable actions is known as the Gulf of Execution [9]. The point at which a user is unable to precisely express their search intent as a keyword query has been termed the  X  X ntention gap X  [13 ]. We feel this intention gap is present in major text-ba sed search engines like Google and in math search interfaces such as Wolfram Alpha, NIST Digital Library of Mathematical Functions, as well as in more recently developed math search engines like EgoMath [7] and WikiMirs [3], both of which enable math search for Wikipedia. EgoMath, whose interface accepts math expressions in TeX format, text or both adapts keyword search for math. Keywords have sufficient semantics for search engines to provide users with a relevant and sensibly ranked results list but, on their own, math symbols do not as they usually derive meaning from how they are organized structurally in a math expression [4]. WikiMirs, whose interface accepts LaTeX input, is designed to look for textual and spatial similarities between the user X  X  search query and the indexed information. Both EgoMath and WikiMirs require the searcher to know an encoding language and demonstrate the sentential form of input where support for the diagrammatic aspects of complex math expressions is missing. The Math-Aware Search Engine (MASE) [8] is another recently developed math search engine. It is designed to support math question and answering (Q&amp;A) systems and its interface allows users to input text and math expression queries using the equation editor CODECOGS as a front-end. While equation editors do lend support for the two-dimensional, spatial aspect of complex math expressions, building and modifying the expression can be tedious, as discussed earlier. Given the strong visual-spatial aspect of math notation and its impact on reasoning, and given the benefits of and preference for handwriting as a means of inputting math on a computer, it appears the current search interfaces may not provide the best user experience, particularly for non-experts, when searching for math-related information. m [10] is a search interface that allows users to draw expressions on a canvas (see Figure 1). The system is multimodal, also accepting keyboard and image input. Recognition of user input is displayed on the canvas. Tools are provided for correction and manipulation including symbol selection, stroke selection, undo/redo, and optical character recognition (OCR) correction. Once the user is satisfied, they may submit the expression along with keywords to various search engines. m in converts the expression into LaTeX, and then combines it with the keywords into a query string that can then be sent to various math-aware search engines that support LaTeX input. Participants. The 16 participants were 18 or older, currently enrolled in a first-or second-year college math course, self-rated as Beginner or Intermediate level in math knowledge, and self-rated as Comfortable or Very Comfortable using the internet.  X  X eginner X  was defined as having knowledge consistent with Basic Math and Pre-Algebra concepts.  X  X ntermediate X  was defined as having knowledge consistent with Geometry, Algebra and Pre-Calculus concepts. Participants were recruited via email. Target recipients were current Rochester Institute of Technology (RIT) students in the College of Science, which contains the math department, and the College of Computing and Information Sciences. Environment. The study was conducted in RIT  X  X  Usability Lab. The room was equipped with a desktop PC with a webcam, and a speakerphone connected to the observation room. The observation room was equipped with a desktop PC. Background information and post-study ratings were collected from each participant via online surveys. A moderator in the test room took notes during each session. For 14 of the 16 sessions, an observer in the observation room marked session recordings with task times and noted interesting participant comments and actions; for the 2 moderator-only sessions, task times were marked later. Tasks. The math topics and expressions used in the tasks were selected based on the recommendations of the third author, a math professor who advised that they were consistent with information needs that students confront in freshman or sophomore college math courses. Each task intentionally included both keywords and math expressions to allow us to observe which one participants preferred to use in their searches. The tasks were written in peer-assist style, where participants imagine they are assisting a classmate, to reduce anxiety participants might experience by feeling their knowledge of math is being tested. Task 1 : Your classmate is having difficulty recognizi ng polynomials. Find one or more resources to help explain to your classmate why is a polynomial and why is not a polynomial. Task 2 : Your classmate has heard of Pascal X  X  triangle but doesn X  X  understand how it relates to math. Find one or more resources to help explain to your classmate how the equation Task 3 : Your classmate is struggling with binomial coefficients. Find one or more resources to help explain to your classmate ho w to find the value of . Task 4 : Your classmate is having trouble understanding the prime counting function. Find resources that help explain why .
 Search Tool Conditions. Participants were asked to bring textbooks, class materials or notes from their current math class so math search behaviors that are tool-independent could be identified. Participants were randomly assigned into four groups. The tasks were presented in a different order to each group allowing each task an equal opportunity to be first and to be presented uniformly across the search conditions. The four search conditions were presented to all participants in a fixed order: 1) using their choice of text books, notes, websites, and/or online search, 2) online search without the m in interface, 3) online search using only m in , and 4) online search with the option of using m Between the 2 nd and 3 rd conditions, participants were shown the m interface, asked brief questions to obtain their initial impressions, and then given a five-minute demonstration. The input modalities available and demonstrated were handwritten input on the canvas with a mouse, keyboard input on the canvas and keyboard input into the search box. Post-study interview. Participants rated their experience via an online survey, were interviewed about the session by the moderator, and then paid $20 for their time. In Search Condition 1, 14 participants used online search and 2 used their textbook. In Search Condition 4, 11 participants used m canvas and 5 participants chose instead to use online search with a web browser or m in  X  X  text search.
 None of the participants were observed using math encoding languages (e.g., LaTeX) or template editors for expressing their math search need although a few claimed to be familiar with them. Admittedly, the structure of the expressions in 3 of the 4 tasks did not require any special encoding in order to be entered into a standard search engine text box. But for the one task that did, the Binomial Coefficient task con taining the expression  X 4 choose 2 X , most participants not only did not attempt to use any special encoding languages, but many were not familiar with how to say the expression in words. They recognized it visually but beyond that, were unclear how to express it in sentential form  X  the only form afforded by the conventional search text box. The biggest behavior change noted in participants using the m interface was the large increase in the use of expressions in their search query. In Search Condition 1, 2 of the 14 participants who chose online search used an expression in their initial query and in Search Condition 2 none of the 16 participants did. However, when required to use m in for the first time in Search Condition 3, all 16 participants used an expression. In Search Condition 4, where m in was optional, 10 of the 11 participants that chose to interact with the m in canvas used an expression in their initial query. Participants were asked to rate themselves as Successful, Somewhat Successful, or Not Successful for each task. There was little difference between non-m in conditions (27 Successful) and m conditions (25 Successful). There was a noticeable increase in average task time when participants used m in (see Table 1). Across all tasks, task time for each non-m in condition (Conditions 1 and 2) averaged roughly 2 to 2  X  minutes. However, when required to only use m in in Search Condition 3, average task time across all tasks jumped to an average of over five minutes (note the high standard deviation of 239.8 seconds). In Condition 4 where m in was optional and participants were using it for the second time, task time averaged over 4 minutes  X  still about twice as long as the non-m conditions, with the standard deviation being almost double, as well. When we break task time down by task, we still find that the average task time was almost always higher using m observing the on-screen videos collected during the study, participants spent a significant amount of time correcting symbol and layout recognition errors. In some cases participants appeared to be confused about the state of the recognized expression, and would start entering the expression again, or require assistance from the moderator. Average task times for Tasks 2 and 3 are helpful for understanding where m in is useful and where it can be improved . The largest increase in average task time occurred for the Pascal X  X  Triangle task (Task 2), whose expression contained several terms and had the most superscripts in the study. It averaged 134.86 seconds ( X   X  74.25) across both non-m in conditions and jumped to an average of 461 seconds ( X   X 273.28) across both m in conditions. In contrast, the Binomial Coefficient task (Task 3) whose expression has a smaller number of terms and a relatively simple visual layout, averag ed 121.57 seconds ( X   X  71.28) across both non -m in conditions and increased to an average of 134.29 ( X   X  45.05) seconds across both m in conditions. Note the standard deviations which are lower relative to the same conditions in Task 3 and comparable to non-m in conditions. In post-study, Likert-scale surveys, 11 out of 16 of participants (69%) agreed or strongly agreed that m in made it easy to enter mathematical expressions, that m in is a valuable tool, and that they would use m in frequently when working on a math problem. 13 out of 16 (81%) agreed or strongly agreed that being able to search using mathematical expressions made it easier to find what they needed. For example, although the expression in the Binomial Coefficient task has a simple visual layout, several participants had difficulty expressing it verbally and textually. Participant quote:  X  X ike 4 choose 2  X  that X  X  really hard to  X  X rite X  but it knew what I meant and it accurately translated what I was trying to say to it. X  In post-study interviews, 12 out of 16 of participants (75%) identified scenarios where they would use m in or could have used m in the past. This included studying for math tests (in particular, working with Calculus, integrals, complex math problems and expressions with lots of Greek letters), taking notes, collaborating with remote students on assignments, and exporting expressions as image files or LaTeX for use in reports. Also, even though the  X  X pload image X  functionality of m in was not demonstrated, several participants expressed really liking that feature, as well as suggesting real-world usage scenarios where they could imagine using that function of m in for distance collaboration on math equations or sharing notes in class. We feel that that the increased usag es of expressions in queries for Search Conditions 3 and 4 can be attributed to three things: 1. Affordance of the interface. The m in interface is designed 2. Novelty of the interfac e. When provided with a demo of the 3. Bridging the  X  X ntention gap X . Although participants may The most surprising result was that participants found query-by -expression useful and identified real-world usage scenarios despite increased task time and little difference in task success when using m in . Again, this finding may be attributed to the possibility that m in helps to bridge the query  X  X ntention gap X  for non -experts, allowing them to search for expressions as they appeared in the task descriptions. We feel this should motivate developers working on query-by -expression technology to continue their work as it seems query-by -expression may be a missing piece that closes the intention gap in existing math search interfaces. We have presented a first study of math search behavior in math non -experts. This study was designed to target the non-expert math searcher as the feeling was that this is not a population familiar with LaTeX or other textual encoding languages, nor with template editors and expression names. Our observations support that view. In our study, search time, expression use, user confidence, user comfort, and user satisfaction were all impacted by introducing the ability to draw expressions in addition to using keywords for search. Participants also indicated that such technology would be useful to them. We believe that improving the recognition algorithms and results visualizations used in m in can substantially reduce the increased entry times seen in our experiment. Based on study videos and questionnaires, improvements to m in have already been made that may reduce the observed increases in search task completion time when using m in vs. text-based search. For example, we now allow operator shorthands (e.g.  X  X  X  for exponents) in text typed directly on the canvas, which are then rendered. Both text and handwritten symbols on the canvas are now rendered into a  X  X lean X  expression using MathJax to produce a simpler and more visually pleasing symbol layout. Handwritten strokes are hidden after recognition to address participant comments about visual clutter in the interface. Finally, as most participants found query-by -expression through drawing valuable, search interfaces supporting handwritten entry for other diagram types (e.g., chemical diagrams) are worth exploring in the future. This material is based upon work supported by the National Science Foundation under Grant No. IIS-1016815. Also, we give many thanks to Awelemdy Orakwue for assisting with this study. [1] Anthony, L., Yang, J. &amp; Koedinger, K. R. Adapting [2] Anthony, L., Yang, J., and Koedinger, K. R. Evaluation of [3] Hu, X., Gao, L., Lin, X., Tang, Z., Lin, X., &amp; Baker, J. Proc. [4] Kamali, S., &amp; Tompa, F. Retrieving documents with [5] Landy, D., &amp; Goldstone, R. Formal notations are diagrams: [6] Landy, D., &amp; Goldstone, R. How abstract is symbolic [7] Misutka, J., &amp; Galambos, L. System Description: EgoMath2 [8] Nguyen, T., Chang, K., &amp; Hui, S. C. A math-aware search [9] Norman, D. User Centered System Design: New [10] Sasarak, C., Hart, K., Pospesel, R., Stalnaker, D, Hu, L., [11] Smithies, S. Novins, K., &amp; Arvo, J. Equation Entry and [12] Zanibbi, R. &amp; Blostein, D. Recognition and Retrieval of [13] Zha, Z.J., Yang, L., Mei, T., Wang, M., Wang, Z., Chua, [14] Zhao, J., Kan, M., &amp; Theng, Y. Math Information Retrieval: 
