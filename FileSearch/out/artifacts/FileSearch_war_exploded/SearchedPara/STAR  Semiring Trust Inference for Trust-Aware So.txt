 Social recommendation takes advantage of the influence of social relationships in decision making and the ready avail-ability of social data through social networking systems. Trust relationships in particular can be exploited in such sys-tems for rating prediction and recommendation, which has been shown to have the potential for improving the quality of the recommender and alleviating the issue of data sparsity, cold start, and adversarial attacks. An appropriate trust in-ference mechanism is necessary in extending the knowledge base of trust opinions and tackling the issue of limited trust information due to connection sparsity of social networks.
In this work, we offer a new solution to trust inference in social networks to provide a better knowledge base for trust-aware recommender systems. We propose using a semiring framework as a nonlinear way to combine trust evidences for inferring trust, where trust relationship is model as 2-D vector containing both trust and certainty information. The trust propagation and aggregation rules, as the build-ing blocks of our trust inference scheme, are based upon the properties of trust relationships. In our approach, both trust and distrust (i.e., positive and negative trust) are considered, and opinion conflict resolution is supported. We evaluate the proposed approach on real-world datasets, and show that our trust inference framework has high accuracy, and is ca-pable of handling trust relationship in large networks. The inferred trust relationships can enlarge the knowledge base for trust information and improve the quality of trust-aware recommendation.
Recommender systems are continuously evolving to take advantage of new sources of information. Social sources in particular can be useful for building better recommenda-tions. The idea of integrating signals from social networks to improve the performance of recommendation algorithms has been well accepted and has attracted an increasing amount of research [2, 28].

One type of social recommender system is the trust-aware recommender, where the social connections are annotated with trust relationship information in the recommendation algorithm. A series of trust-aware recommenders have been proposed, such as user-based approaches [12,16,25], and ma-trix factorization based methods [17,22,24]. With the help of the additional trust information, trust-aware recommenders have been shown useful for improving recommendation qual-ity in terms of accuracy and user experience, as well as addressing challenges of classical recommender system ap-proaches such as cold start and adversarial attacks [12, 23].
However, trust-aware recommender systems face several challenges: a) sparse social connections; b) inconsistency and conflicts in trust opinions; c) trust data availability.
To address these challenges, there has been a line of study regarding trust inference in trust-aware recommender sys-tems, which can generally be categorized in two groups. One group conducts theoretical studies on trust metrics and their properties [3, 14, 18, 19, 30]. The other group proposes ef-fective data-driven approaches for inferring trust, such as graph-theoretic models [4, 10 X 12, 25, 27] and machine learn-ing approaches [20].

Graph-theoretic models generally have good performance in terms of efficiency and reasoning. However, as most work applies linear weighted averaging over trust opinions from neighbors, nonlinearity in human decision making and in-teraction between trust and distrust may not be fully cap-tured. The path-based design is also sensitive to the con-nection sparsity in the trust network, since the trust path will not exist if some edges in between are missing. These defects restrain the accuracy of the models. On the other hand, machine learning methods can solve the data sparsity, sometimes with better label prediction accuracy. However, due to the nature of the formulation, machine learning meth-ods are slower in speed and have weak interpretation on how trust is inferred.

It is ideal if there exist a method which addresses most challenges at the same time. In [9], we introduced a the-oretical semiring structure for nonlinear trust fusion with distrust considered. It requires that both trust and cer-tainty information are explicitly given. The model proposed in [9] is easy to interpret and runs fast. However,it cannot be applied in real world scenarios, due to lack of certainty mod-els and inference algorithms on the overall network dealing with data sparsities. In order to apply it to trust evaluation for trust-aware recommendation, the original design needs revision and redefinition.

In this work, we propose a trust inference method for trust-aware recommendation. Our technology extends the semiring model proposed in [9]. The basic idea is to build up a nonlinear trust aggregation rule that can handle both trust and distrust information, and offer conflict resolution in the opinion combination process. Apart from the flexi-bility in modeling, this approach has the advantages of effi-ciency inherited from graph theoretic models and better ac-curacy due to an iterative component and optimization over parameters. The evaluated trust can enlarge the knowledge base for recommendation algorithms, and alleviate the issue of the data sparsity and cold start in recommender systems.
The contributions of our work are four-fold: 1. a novel trust metric for trust-aware recommender sys-2. we introduce two certainty models for semiring-based 3. we introduce trust iteration, as well as partial reci-4. we evaluate our model using real-world dataset, and
Our paper is organized as follows. In Sec. 2, we discuss some preliminaries and related work. Accordingly, we intro-duce STAR , our semiring nonlinear model for trust inference in a social recommender scenario in Sec. 3, with some ex-tensions for better performance. We evaluate our proposed approach in Sec. 4, and summarize our work in Sec. 5.
The wide application of trust has made it an umbrella term with multiple interpretations in different contexts. In [18], two definitions of trust, reliability and decision trust, are discussed. In social network scenario, the notion of deci-sion trust can be applied, which links to the extent to which an agent (i.e. the truster) is willing to depend on another one (trustee) in a given situation for decision making, with a feeling of similarity, closeness or security [30].
In social network scenario, trust relationship is based on the social connection between truster and trustee. There are various ways to quantitatively represent trust [13, 18, 30, 31]. The trust value domain T is application dependent. For instance, it can be a set of discrete labels { 0 , 1 } or a con-tinuous range like [0 , 1]. It can have both positive values and negative values, and can even be a multi-dimensional vector space. When T contains negative trust values, it can be used to differentiate unknown users (i.e. of trust value 0) from ones that are not trusted (e.g. negative trust val-ues). The negative trust relationship is also called distrust. Although recent research [8, 13, 30] shows an emerging in-terest in modeling the notion of distrust, models that take into account both trust and distrust are still limited. Intro-ducing distrust makes the trust model complex as the non-negativity of trust values no long exists, and the linearity of trust aggregation is hard to argue. This can be especially challenging for many trust inference approaches such as ma-trix factorization [28]. Additionally, the subjective property of trust makes it even more complicate as conflicts between trust opinions may exist.
We refer to a Trust Network as the graph based on the trust relationships in a social network. The trust net-work can be defined as a directed graph with trust weight on edges, G ( V,E,t e ), where V is the set of users, E is the set of connections denoting the directed trust relationships, and t e : E 7 X  X  is a mapping from an edge to the trust value placed on the edge. We use  X  v i ,v j  X  trust to denote trust re-lationship when e ij  X  E and t ij &gt; 0. For a user v  X  V , we denote the 1-hop neighbors as Neighbor Set N v . The undirected situation can be seen as having two edges with equal weights on both directions for the pair of vertices.
In the defined trust network, a directed path of length k is a sequence of distinct nodes, { v 1 ,v 2  X  X  X  ,v m +1 } , such that ( v ,v i +1 )  X  E,  X  i  X  1 , 2 ,  X  X  X  ,m . Between two nodes in the network, there might be multiple distinct paths.
The transitivity of trust relationships is the foundation for most trust metrics, it allows the truster to acquire informa-tion about the trustee from friends and their friends ( X  X ord of mouth X ) [15]. For example, if node v 1 and v 3 are not di-rected connected, but if v 1 trusts v 2 , and v 2 trusts v v can use such trust evidence to infer its opinion about v 3 using transitivity.

Formally, transitivity in trust can be defined as:
Based on the assumption of transitivity (may be partial), trust can propagate along the paths between two nodes in the network and their trust relationship can be inferred. When multiple paths exist, a combination scheme is needed to derive the trust value. Due to the subjective nature, con-flicts may happen in such occasion and need to be resolved.
Transitivity becomes more complex when considering dis-trust relationships [7]. For example, the trust relation be-tween node v 1 and v 3 is not obvious if v 1 distrusts v 2 v 2 distrusts v 3 . The conflict resolution is also much more difficult with distrust.
Trust reciprocity describes the extent of symmetry in di-rected trust relationships between two users (i.e. nodes) in the social network. Similar to Eq. 1, we can write the fol-lowing expression for reciprocity.
As shown in [6, 10], trust relationships are asymmetric in terms of values (especially magnitude) in social network sce-narios, thus most trust evaluation approaches don X  X  consider reciprocity. However, by relaxing the condition in Eq. 2 to only sign agreement of positive trust relationships, partial reciprocity can be defined. As we will show in Sec. 4.1, the partial reciprocity exists in the Epinions trust network dataset. The partial reciprocity between nodes may be use-ful in inferring indirect trust under some circumstances when data is very sparse (e.g. social recommender).
A semiring is an algebraic structure, consisting of a set A and two binary operations, addition (  X  ) and multiplication (  X  ), with several conditions over the operations. Definition. A semiring is a tuple  X  A ,  X  ,  X  , 0 , 1  X  such that An example of a semiring is the set of nonnegative integers N , with the usual addition (+) and multiplication (  X  ).
The operations used in a semiring structure can be seen as a generalization of addition and multiplication which have used in trust inference for social recommendation. These semiring operations, with careful design, are able to capture the nonlinearity in trust evaluation [29].
The sets A in most semiring models only have nonnegative elements (e.g. the range of [0 , 1]) [5, 29]. Due to the com-plexity and asymmetry introduced by negativity, the semir-ing framework needs to be carefully modified. In [9], the possibility of applying semiring for nonlinear trust fusion in online decision making was discussed, and a semiring called a Distrust Semiring was introduced. The semiring struc-ture was defined on a 2-dimensional trust opinion model, with both trust and distrust relationships being considered.
The 2-dimensional trust opinion vector  X  ij  X  X  = [  X  1 , 1]  X  [0 , 1] from truster i to trustee j is defined as where t ij  X  [  X  1 , 1] is the trust level representing how much i trusts (likes)/distrusts (dislikes) the opinions (tastes) of j . By making trust levels take values in the range of [  X  1 , 1], distrust is considered along with trust. c ij  X  [0 , 1] is the certainty level which shows how much i believes in the in-tegrity of j . Note that certainty is orthogonal to trust value, it denotes the quality and accuracy of the trustee X  X  opinion. While a high trust value may be because of similarity in taste or preference, a high certainty value may be due to direct connection with the truster or large number of connections (i.e. high degree). Certainty determines if the opinion will be considered, and opinions with a high certainty value are more useful in making trust decisions.

As both trust level and certainty level about the trustee are considered in the opinion vector, more complicated sit-uations can be modeled and analyzed.

Based on Sec. 2.1.2 and the definition of trust opinion vector, the trust network can be derived.
 Definition. A trust network based on the set T of trust opinions is a directed and weighted graph G ( V,E,t e ) , t E 7 X  T , where V is the set of users. E is the set of trust relationships. For  X  e ij = ( v i ,v j )  X  E, v i ,v j t associates it with an opinion vector  X  ij = ( t ij ,c ij )  X  T , indicating the trust and certainty that node v i holds on v Trust links are directed. N i = { v j | e ij  X  E } is the neighbor set of node v i .
A distrust semiring [9] is a 2-dimensional semring defined on the trust opinion set T , such that
For the trust network shown in Fig. 1, there are three paths from node v 1 to v 5 . For the left path, when we multi-ply  X  12 and  X  25 using  X  , we have  X  1 =  X  12  X   X  25 = (0 . 36 , 0 . 56). Similarly, the middle path has  X  2 = (0 . 12 , 0 . 25) and the right one  X  3 = (  X  0 . 15 , 0 . 56). When combining  X  1 , X  2 , X  use  X  defined in distrust semiring and have combined opin-ion  X  =  X  1  X   X  2  X   X  3 = (0 . 36 , 0 . 56).

Based its definition in [9], distrust semiring is a promising algebra structure that can be used in designing trust metrics for social recommender systems. However, [9] only proposed the framework with some theoretical analysis, without ex-periments and evaluation with real datasets. Also, in the work, trust is represented by a 2-D vector with both trust and certainty information, with the assumption that infor-mation about both components are explicit and available. However, in social recommender setting, certainty informa-tion is generally missing. In order to use the 2-D represen-tation of trust, a model for certainty based on social context is required yet has not been discussed.
In this section, we draw connections between distrust semir-ing and trust inference in trust-aware social recommender systems: a) we first show the distrust semiring definition (Eq.4-7) is consistent with the properties for trust prop-agation and aggregation in Sec. 3.1; b) next in Sec. 3.2, we propose practical certainty models and parameter tun-ing framework in order to use distrust semiring in practice; c) we then propose the overall S emiring trust inference for T rust-A ware social R ecommenders ( STAR ) framework in Sec. 3.3; d) furthermore, to address the data sparsity and improve accuracy and coverage, we introduce iterative trust evaluation in semiring trust in Sec. 3.4.
Trust information diminishes and becomes noisy in the process of propagation, and increases when aggregating neigh-borhood values. These are basic properties [19] of trust. Distrust semiring essentially defines an algebraic way to cal-culate trust, thus we first need to show whether the basic operations, addition used in trust aggregation and multipli-cation used in trust propagation, satisfies the commonsense.
By defining a partial ordering, we show that the semiring framework is intuitive and consistent with requirements for trust propagation and aggregation.
 Definition. A partial order relation can be defined upon two 2-D opinion vectors  X  a = ( t a ,c a ) and  X  b = ( t b if and only if Theorem 3.1. The distrust semiring structure satisfies the following two conditions, 1. the multiplication operation is non-increasing: 2. the addition operation is non-decreasing Proof. Let  X  a  X   X  b = ( t,c ). As c a , c b  X  [0 , 1], and t [  X  1 , 1], based on the definition of the multiplication opera-tion, it is easy to see that c = c a c b  X  c a , c = c For the trust value, if both t a and t b are negative, then t = 0 &lt; | t a | , | t b | . Otherwise, | t | = | t a t | t | = | t a t b | X | t b | . Thus Eq. 9 holds, and the non-increasing property of the multiplication operation is proved.
The non-decreasing property of trust aggregation can be shown in a similar way. In aggregation,  X  = ( t,c ) =  X  a based on definition, c = max { c a ,c b } X  c a ,c b . Thus the first condition is satisfied, and the non-decreasing property of the additive operation is proved.

The non-increasing property of the multiplication opera-tion is in accordance with the requirement for trust propa-gation process, whereas the non-decreasing property of the addition operation connects to the trust aggregation pro-cess. Thus the two operations for a distrust semiring can be applied to modeling trust propagation and aggregation respectively.
In the context of trust-aware recommenders, though trust data is available, the certainty information is generally im-plicit and contained in user interactions. Without certainty data, it is infeasible to apply the 2-D semiring model for trust inference. In practice, certainty may be derived by sen-timent analysis or other natural language processing pipelines. However, NLP toolboxes are not light-weight and require rich text data in the SNS. In this paper, we consider the sit-uation when only SNS connections and trust data are avail-able. We propose two ways to model certainty. One is based on length of the trust path, the other one is degree-oriented.
Based on the fact that neighbors which are reachable via a longer trust path carry less valuable trust information [12], we come up with a path-based certainty model. We model the certainty value of user v s about v t as a function of hops (i.e. the length of the shortest path) between the two. where  X   X  (0 , 1] is a hyperparameter and can be seen as the decay factor, and dist s,t represents the shortest trust path length between v s and v t . When  X  = 1, the decay disappears and nodes of all distances are considered equally. Such definition is equivalent to introducing a 1-hop decay of magnitude  X  at each hop. Instead of calculating c st , we consider the decay at node v i in the middle: then along path st from v s to v t , c st = Q v simple model, partial order relation between two paths is stable for  X   X   X  (0 , 1).
Another way to model certainty in social recommender setting is based on node degree, with the hypothesis that nodes of higher degree are more reliable and their trust opin-ions have more certainty. The certainty function of a node v can be accordingly denoted as where d i is the degree of v i .

We consider two realizations for g ( d i ), a linear model and an exponential model. The linear model can be written as which is determined by a cut-off degree value  X , when d i  X , g ( d i ) = 1.

The exponential model can be described by
The coefficients  X  ,  X  , and  X  are tunable. Given the trust metric, an optimization problem over the parameters can be formulated accordingly to maximize its performance. The optimization formulation, due to the complexity of network structure and the semiring model we use, is non-convex and hard to solve. However, as there X  X  only very few optimiza-tion variables (i.e. model parameters), we can simplify the problem by conducting parameter search schemes, such as greedy search, random search or even annealing approach, and measure its effect on system performance.
With the certainty model defined above, the trust between two arbitrary users in the trust network can be inferred via the trust metric developed in this work. The trust metric consists of two components, i.e. trust propagation and ag-gregation, which can be defined using the distrust-semiring. In STAR , trust aggregation is conducted along different paths first before trust propagation, in order to reduce the noises caused by longer paths.
In the trust metric, the trust value between two nodes v s and v t , who have no direct connection, can be estimated via the multiplicative operation  X  of trust values on edges along the path between the two nodes. Along each path path st ,
Considering the decay of influence along the path, a max-imum hop value  X  can be introduced in order to stop early and accelerate the calculation. As shown in Sec. 4, 4-hop semiring calculation already reaches about 95% accuracy.
When multiple paths between two nodes exist, trust opin-ions reached along all paths should be aggregated together.
The trust aggregation component in the trust metric is to combine trust information from different sources (i.e. paths). It can be defined upon a semiring operation as follows: where P is the set of trust paths considered in aggregation, and each ( t a ,c a ) with path a  X  P is the trust vector along that trust path a .
A trust metric can be developed based on the trust prop-agation and aggregation rules defined above. Given a pair of users v s (truster) and v t (trustee), the proposed trust in-ference method is a function f : V  X  V 7 X  T , such that where N s is the neighbor set of v s . In order to save computa-tion resources, a threshold for trust value (  X  t ) and certainty value (  X  c ) can be introduced. When below the thresholds, the trust opinion will not be considered in aggregation, i.e.
The way that the trust metric is applied to trust inference is shown in Alg. 1. The algorithm is to evaluate the trust opinion ( t st ,c st ) of v s (truster) about v t (trustee), with  X  the maximum hop number,  X  t and  X  c the lower bounds for trust and certainty value respectively. One can interpret the algorithm as follows: v s asks her neighbors for their trust opinions about v t . Each neighbor v i  X  N s provides her opinion about v t (i.e. t it and c it ), either directly or estimated using the trust inference algorithm recursively. At each hop forward,  X  , the current hop reached, will decrease by 1 until reaching 0. Then v s aggregates all the evidence and reach ( t st ,c st ) about v t .

In such a trust inference framework, both trust and dis-trust (i.e. negative trust) are taken into consideration for Algorithm 1 STAR algorithm, f star ( v s ,v t , X , X  t , X  c trust inference. As paths above the thresholds are all inte-grated into the calculation, trust information are fully ex-ploited in this approach for better coverage. At each node, the trust information along different paths is first aggregated together and then propagation to the node as a unified trust opinion. Such scheme can reduce the noises caused by long paths. The possible conflicts among opinions are handled in a non-trivial way with the introduction of certainty value and nonlinear addition operation (  X  ).
Alg. 1 is built on the trust paths between two users. In real world data, the trust data often is sparse, thus the coverage of
STAR is limited by the amount of trust data present. In order to address the sparsity, we propose collective method from network analysis. Iterative method is a type of collec-tive approaches in classification problem [21]. Such method is used when the data contains interconnection and correla-tion between objects, such as webpages and SNS, and has been shown to be very effective over network data [26]. The basic idea is treating the independent inference as a joint inference problem, and use an iterative approach to predict labels; the new label predicted in the previous iterations is used in the following iterations.

In the trust inference problem, trust relationships among users are intercorrelated, we introduce iterative trust evalu-ation in Alg. 2 to improve the performance. The basic idea of the design is to iteratively evaluate the trust opinions as-sociated with the edges in the test dataset, conditioned on the both ground truth and current predictions. Initially, the knowledge base is the training dataset, and the result set is empty. While running, the  X  X iff X  in Alg. 2 is used to measure the difference of results between two iterations. Here the Eu-clidean norm is used in calculating the difference. The iter-ation ends when convergence on local predictions is reached or maximum number of iterations has finished.
As discussed in Sec. 2.1.4, partial reciprocity can be added into the trust inference algorithm to improve both cover-age and accuracy. We extend the trust inference algorithm Algorithm 2 Iterative trust evaluation (Alg. 1) by introducing partial reciprocity in a careful way. Apart from considering trust evidences from neighbors, the truster also treat the direct trust opinion about herself from the trustee as a source of information, as a reflection of par-tial reciprocity. In order to reduce the error due to asym-metry in trust relationships, we only consider positive reci-procity (i.e. the reciprocity in positive trust relationships), and the certainty value in a trust opinion reached using reci-procity has a smaller magnitude compared the one reached through transitivity-based propagation.
In Sec. 3.3, the trust metric takes an optimistic definition for trust aggregation, as the binary operation  X  takes the larger magnitude of the two and its sign as the combined trust value when the certainty levels are the same. We use this to define trust aggregation based on the hypothesis that extreme opinions weigh more than neutral ones [11, 12]. In a pessimistic model, when c a = c b , the addition operation for trust aggregation (Eq. 5) can be modified as
Such definition is  X  X essimistic X , as the aggregated trust value conservatively picks the smaller magnitude between the two incoming trust values. With such model, trust ag-gregation is not non-decreasing any more, which is against the basic properties of trust as mentioned in Sec. 3.1.
In order to verify the model and evaluate the performance of our semiring-based approach, we conduct experiments on a real world dataset.

We use the Epinions trust network dataset for evaluation [1]. The dataset contains both direct trust connections (with edge weight of +1) and distrust ones (with edge weight of  X  1), and form the trust network G ( V,E,t e ) where t e : E 7 X  T = { X  1 , 1 } . To the best of our knowledge, it is the largest dataset available online that contains both explicit trust and distrust information marked in a binary (+1 and  X  1) format. The dataset has 91.053 users with 841,372 edges, 717,667 trust relationships and 123,705 distrust relationships. Notice that the method works on continuous trust value domains as well. However, large-scale public datasets are not available.
In order to evaluate our trust metric, we first verify the transitivity and partial reciprocity of trust relationships us-ing the Epinions dataset.
Inspired by previous works, we investigate the transitiv-ity phenomenon. For transitivity, we count the number of triangles represented by triplets ( i,j,k ) such that
Based on this definition, among all 11033232 triangles that satisfy Eq. 21, 10229847 (92 . 7%) are transitive. We also look at the case when v i distrusts v j , v j distrusts v k (i.e. t and t jk &lt; 0), what the relationship between v i and v turns out that  X  50% situations have t ik &lt; 0 with another half having t ik &gt; 0, which endorses the setting  X  X he enemy of your enemy is actually unknown X  in our trust metric.
We also evaluate the partial reciprocity of trust relation-ships in Epinions dataset. We consider partial reciprocity of trust relationships as symmetry on signs, i.e. we consider pairs ( v i ,v j ) as having partial reciprocal trust relationships when both e ij and e ji exists and t ij t ji &gt; 0.
Based on the experimental results, we notice that partial reciprocity commonly exists between nodes in the network. Among all 259,751 pairs of nodes having bi-directional rela-tionships, 254,345 (  X  98%) are partially reciprocal relation-ships (both directions are of the same sign, either positive or negative), and 98% of reciprocal ones are of positive connec-tions, which corresponds to the concept of partial reciprocity that we discussed in Sec. 2.1.4.

However, as both trust and distrust relationships are single-valued, the symmetry on magnitude of trust relationships is unable to be evaluated.
In Epinions dataset, all trust values in the training dataset are in the set T = { X  1 , 1 } . Based on the definition of our trust metric model, though certainty value of each predicted edge varies in [0 , 1], the set for predicted trust values will be T p = T  X  X  0 } = { X  1 , 0 , 1 } , where the value of t represents the case when not enough information is avail-able for predicting the trust relationship associated with the edge e st . Unlike linear approach such as [14], no rounding is needed for predicting discrete trust values.

To evaluate the performance of our trust evaluation ap-proach, we measure and compare accuracy and coverage . Accuracy is the fraction of correctly predicted trust rela-tionships among all nonzero ones in the test data: where S test is the test edge set, t ij is the trust value reached using our trust inference algorithm, and t 0 ij is the ground truth trust value. The denominator in Eq. 23 only take edges that have nonzero predictions.

Coverage is defined as the number of edges predicted over the number of edges predictable in test data: where an edge is predictable if both of its vertices are present in the training set. We partition Epinions dataset into two parts to evaluate STAR. The first part contains all the known trust relation-ships, i.e. the trust network before inference, while the sec-ond part includes a set of edges serving as the ground truth of our evaluation. We evaluate STAR using the known trust information in the first part to predict the trust relationships in the second part. This is a practice used in previous trust inference work and link prediction literatures. On the par-tition strategy, we examine the time-ordered partition and the random partition. The evaluation results are consistent between the two strategies. All numbers reported here are under the time-ordered partition strategy.

We conduct experiments on datasets of two sizes, we re-fer the test dataset generated with percentage  X  = 0 . 5% as the small dataset, while the one using  X  = 5% as the large test dataset. The experimental results for the two datasets are shown in Fig. 2(a) and Fig. 2(b) respectively. From the results, we see that the performance of our approach works better on the smaller dataset, in terms of both accuracy and coverage. The major reason is that more trust information is known for the smaller test dataset, which means the trust network used for prediction is more connected and has more trust evidence for prediction. Thus, the performance is pos-itively correlated with the known/test data ratio.
Varying trust path length  X  : As discussed in previous lit-erature [10, 25], the longer the trust path in graphical trust evaluation models, the more noise may be introduced. While the introduction of distant friends improves the coverage of the social recommendation algorithm, it affects its accuracy. As the average shortest path length in Epinions dataset is about 4, in the experiment, we set the maximum hop length  X  as 2, 3 and 4 respectively, and evaluate the performance of our trust metric under different settings.

In Fig. 2(a) and Fig. 2(b) we can see that, the coverage of our approach is better with paths of more hops considered, as more nodes are reachable and used in trust evaluation. However, though the variation is subtler compared to cov-erage change, the accuracy result is just slightly decreasing with an increasing maximum hop length parameter.

Table 1: Alg.2 using random-ordered test data
Iterative trust evaluation : Apart from data size and max-imum hop length, we also compare the base STAR model (Alg. 1) with the model applying collective methods (Alg. 2). As shown in Fig. 2(c)(d), the iterative trust inference method improves the performance in both coverage and accuracy.
When applying iterative approaches in classification prob-lem [21], the ordering of value updates in the iterative trust evaluation may affect the predictive accuracy and conver-gence rate. Here, in order to investigate the stability in trust iteration over test data, we randomize the order of the node pairs for prediction, and compare the experimental results. We list the results for the 4-hop case in Table 1. According to the results, the application of iterative approach for the trust metric in social recommender system setting is fairly robust to randomized orderings of the test dataset.
Exploiting partial reciprocity : From Fig. 2(c) and Fig. 2(d), by getting trust information based on partial reciprocity for trust evaluation, the coverage and accuracy of the trust in-ference algorithm are even better. By applying collective methods and partial reciprocity, more trust evidence can be used in the trust metric.

Parameter tuning in certainty : As discussed in Sec. 3.2, we proposed two tunable models for certainty based on de-gree. Here we vary the values of the parameters and in-vestigate the influence of parameter tuning towards model performance. In the linear model (Eq. 14), there are two parameters,  X  and  X  .  X  is in the range of [0 , 1], and  X  is de-pendent on  X  and the cut-off degree. The exponential model described in Eq. 15 has one parameter  X   X  [0 , 1]. In the ex-periment, we fix maximum degree value used in linear model to be 5, 10 and 15, and let  X  and  X  both vary from 0 to 1 with step change to be 0 . 05. The results are shown in Fig. 3, where  X  represents maximum degree value. From the plots we can see that the linear model leads to lower accuracy and coverage, while the exponential model doesn X  X  change very much with varying parameter values. Using exponen-tial model for certainty with a relatively small  X  around 0 . 2 would be a good setting for trust inference.
Base on the experimental results discussed in Sec. 4.2, the performance of our method STAR can be as small as 5.8% error rate and as good as 98.3% coverage rate for reach-able pairs, As a fair comparison, the graph-theoretic linear approach based on matrix operations [14] has an optimal prediction error rate of 6 . 4%. The machine learning ap-proach introduced in [20] can reach an accuracy about 0 . 934 (i.e.  X  6 . 7% error rate). For [7] which used probabilistic confidence models for trust inference, it achieved an accu-racy of 89% (11% error rate) using Epinions dataset. From comparison, we can see an improvement on accuracy can be obtained using the STAR approach, not to mention its computation efficiency and interpretability.
Because the trust (and distrust) relationships in the dataset are binary (+1 and  X  1), a lot of nuance and variance in the trust relationships are lost. This prevents us from conduct-ing some evaluations. For example, since the trust values are not continuous in [  X  1 , 1], the deviation of evaluated trust value from ground-truth difficult to measure and analyzed.
The high accuracy of STAR on this dataset shows its flex-ibility and power in SNS trust-aware recommendation.
In this work, we propose STAR , a novel trust inference method for trust-aware social recommenders. It not only has high accuracy comparing with machine learning meth-ods, but also has the efficiency from graph-theortical models. Our method is based on a 2-D semiring framework reflecting trust propagation and aggregation properties over the trust network. The nonlinearity and inconsistency in human X  X  opinion formulation process are captured in the trust infer-ence algorithm. To address the data sparsity, we introduce collective semiring methods and propose partial reciprocity. In order to validate the model and evaluate the performance of our approach, we conduct a series of experiments using the Epinions dataset. The experimental results show that the approach proposed in this work has advantages in both accuracy and coverage. The trust relationships inferred via our approach can be used to improve the quality of trust-aware recommendations.
