 stock market analytics [1], DNA sequence mining [2], and sensor based activity recog-nition [3]. Time series are essentially high dimensional data [4], which impose a sig-nificant challenge on time series analysis due to the curse of dimensionality. Therefore, it is urgently important to develop representation techniques which can reduce the di-mensionality of time series while still reserv ing their fundamental features [5]. In the literature, a number of representation techniques have been developed for time series data, such as Symbolic Aggregate Approximation (SAX) [6], Discrete Fourier Trans-formation (DFT) [7], and Discrete Wavel et Transformation (DTW) [8]. Among them, SAX is one of the most popular representation techniques, which has proven its effec-tiveness in dimensionality reduction for time series data [9,10,11,12].

Specifically, SAX aims to transform the r eal valued time series into some predefined symbols with the lower bounds property, which guarantees the distances between rep-resentations to be less than or equal to their true Euclidean distances of the original data. The main idea of SAX is to first aggregate the original time series by Piecewise Aggregate Approximation (PAA) [13], and then map them to different symbols by com-paring their distances with breakpoints [6]. However, SAX always maps time series into symbols by definite breakpoints. As a result, the similar points close to the breakpoints cannot be well represented. For example, Fig. 1 (a) shows the symbolic representation of a time series by SAX with the alphabet size  X  =5 and the grey lines represent the corresponding four breakpoints. In this figure, we can observe that the 2 th  X  4 th points are mapped to different symbols although th ey are actually close to each other in terms of Euclidian distances. Similarly, points 5 th  X  8 th encounter the same mapping prob-lem. Indeed, the reason is that the breakpoints of SAX are determined by definite values drawn from the Gaussian distribution. Therefore, if the data points are located near the breakpoints, they may be mapped to different symbols while they are close to each other. In addition, the near points close to the breakpoints can also negatively impact on the Tightness of Lower Bound (TLB) in data representation. Intuitively, to achieve better mapping results and TLB, we may have to increase the alphabet size  X  .However, this will in turn enlarge the granularity, which may lead to the over-fitting problem and exponentially increase the candidate combinations of symbols in the subsequent time series analysis.

To address the above challenges, in this paper, we develop a time series representa-tion approach, named Random Sh ifting SAX (rSAX), which can significantly improve the TLB of representations without increasing the corresponding granularity of repre-sentations. The key idea of rSAX is to generate a group of breakpoints by random shift-ing rather than definite breakpoints. Specifically, we generate  X  X oft-borders X  instead of  X  X ard-borders X  through random shifting breakpoints with small distances for several times. As a result, the points close to each other will have higher probabilities to be mapped to the same symbols. In contrast, t he points far away from each other will have higher probabilities to be mapped to different symbols. For example, Fig. 1 (b) shows the symbolic representation of the same time series by rSAX, which shifts breakpoints a small distance from the original positions. We can observe that the 2 th  X  4 th points are all represented by the symbol e and the 5 th  X  8 th points are all represented by the symbol c . As a highlight, the contributions of this paper are summarized as follows.  X  First, we develop the rSAX method for the symbolic representation of time series.  X  Second, we theoretically prove that rSAX has the lower bounds property, and can  X  Finally, we provide extensive experiments on real-world data sets. Experimental Numerous techniques have been proposed in th e literature for time series representa-tion [6,7,13]. Indeed, symbolic representation is one of the most important categories of time series representations. It has the benefit of allowing the use of many well-defined data structures and indices (e.g., suffix trees, hashing, Markov models, etc), and po-analysis of time series. By transforming time series data to discrete symbolic words, symbolic representation can also adopt many classic statistical methods, such as the statistical tests to detect interesting subsequences of time series.

Many methods have been proposed in symbolic representations. For example, Huang et al. [14] proposed a method IMPACTS for time series query processing with vari-ous constraints, which is based on the suffix tree indexing. V. Megalooikonomou et al. [15] proposed a symbolic representation al gorithm Multiresolu tion Vector Quantized (MVQ) with a new distance function, which keeps both local and global information about the original time series in a hierarchical mechanism.

SAX [6] is one of the most popular methods for time series symbolic representa-tions, which has proven its effectiveness in dimensionality reduction. Thus, SAX is widely used in many applications [9,16], and many inherited methods have been fur-ther proposed in the literature. For exampl e, iSAX [17] was proposed to enable SAX to scale to the massive data sets. Also, iSAX 2.0 [12] was further proposed for indexing and mining large-scale time series.

However, SAX and other SAX based representation approaches always map the time series into symbols by definite breakpoints, which cannot work well for representing similar points close to the breakpoints and will result worse tightness of lower bounds. In order to improve this situation and reduce the deviation caused by definite break-points, in this paper, we propose a random shifting process along with SAX to generate  X  X oft-borders X  instead of  X  X ard-borders X  for breakpoints, thus achieve better mapping and tighter lower bounds without increasing the alphabet size. In this section, we introduce several relate d notions and definitions which are neces-sary for presenting our approach. To facilita te understanding, the related mathematical notations are illustrated in Table 1.

To be specific, we define a time series T = t 1 ,t 2 , ..., t n is an ordered set of n real-valued variables, where data points t 1 ,t 2 , ..., t n are temporally ordered and spaced at equal time intervals. Actually, each time series records the observations of an object over time. Then, we define a time series data set D as a set of m unordered time series. Moreover, a subsequence S of a time series T = t 1 ,t 2 , ..., t n is a sampling of length k  X  n of contiguous position from T ,i.e., S = t
To reduce the dimension of the original time series, the Piecewise Aggregate Approx-imation (PAA) [13] is applied in both SAX and our approach rSAX for creating an ag-gregated discrete version of time series, which can be denoted by a vector T = t 1 , ..., t w (The PAA for a subsequence S is correspondingly S = s 1 , ..., s w ). Specifically, the i th element of T is calculated by the following equation, Also, both SAX and our approach rSAX request a predefined alphabet size  X  ,which is leveraged for determining breakpoints of symbolic representation. To be specific, the breakpoint can be formally defined as follows [6], Definition 1 (Breakpoints). Breakpoints are a sorted list of numbers B =  X  1 , ...,  X   X   X  1 such that the area under a N (0 , 1) Gaussian curve from  X  i to  X  i +1 = 1  X  (  X  0 and  X   X  are defined as  X  X  X  and  X  , respectively).
 For example, Fig. 2 shows the breakpoints with  X  =3 . The breakpoints  X  1 and  X  2 divide the area under the N (0 , 1) Gaussian curve into three equal sub-areas, namely corresponding symbol.

Once the breakpoints are determined, a subsequence can be mapped to symbolic representation which is defined as a word. To be specific, the formal definition of word can be presented as follows [6], Definition 2 (Word). A subsequence S of length k can be represented as a word  X  S =  X  s , ...,  X  s w as follows. Let  X  i denote the i th element of the alphabet, e.g.,  X  1 = a and  X  2 = b . Then the mapping from a PAA approximation S toaword follows, Moreover, SAX define a MINDIST function that returns the minimum distance between can be calculated as follows, where n is the length of original time series and w is the number of PAA elements. The dist () function is defined in [6], that is, the dist () between two characters adjacent in alphabet is 0 (e.g., dist ( a,b )=0 ), and the dist () between two far-away charac-ters is equals to the biggest Euclidean distance of the breakpoints between them(e.g., dist ( a,c )=0 . 86 ,  X  =3 ). Based on the MINDIST, a metric can be defined to mea-sure the tightness of lower bonds by comparing the lower bound distance to the real Euclidian distance as follows,
TLB is a very meaningful criteria measure for time series representations, and is used to compare the performances of each representation method [5]. In this section, we first present the details of our rSAX method and then theoretically prove that rSAX can achieve better mapping performances and TLB than that of SAX. 4.1 The Main Idea When designing representation methods, two ideal conditions are preferred: 1) perfect mapping, which expects the similar data points are mapped to the same character; 2) tight bounding, which expects the approximate lower bounds distance is close to Eu-clidean distance. SAX [6] is a popular method for time series representation. However, if the pair-wise data points happen to locate in the two sides of a breakpoint, they will be represented by different symbols no matter how close they are.

To overcome above challenge, we propose a novel method rSAX that represents time series based on random shifting strategy. The main idea is to create  X  X oft-borders X  in-stead of  X  X ard-borders X  through random shifting breakpoints with a small distances, thus near points will have higher probabilities to be represented by same symbols, and make the bound tighter without increasing the alphabet size. To be specific, the Pseu-docode of the rSAX is shown in Algorithm 1.

For a data point (or a PAA approximation C j ) t j  X  T , 1  X  j  X | T | .Let  X  k denotes the k th element of the alphabet with the total size  X  , the SAX representation of t j is  X  k Algorithm 1. rSAX( D, X , X ,w ) iff.  X  k  X  1  X  t j &lt; X  k [6]. Let d denotes the minimum distance of all pairwise break-the breakpoints after a random shifting is changed to  X  k =  X  k + l i . Instead of using a list of consistent breakpoints to separate data points, we generate  X   X  1 stochastic series are then mapped to symbolic characters for  X  times, that is, there are  X  versions of rSAX representations for the time series data set.

Fig. 3 shows an example of the rSAX. The alphabet size  X  =4 , and the break-points are B = { X  0 . 67 , 0 , 0 . 67 } . Fig. 3 (a) is the result of standard SAX. The time cbbc . We observe that C 1 and C 2 are very close to each other, but happen to be dif-ferentiated by the breakpoint 0 ; C 3 and C 4 are far away from each other, however the MINDIST ( C 3 , C 4 )= MINDIST ( b,c )=0 [6]. Fig. 3 (b) shows one shifting re-sult. Let l i be a random variable generated from (  X  0 . 335 , 0 . 335) , the breakpoints are to the same character b ,and MINDIST ( C 3 , C 4 ) = MINDIST ( a,c ) = 0 . 67 .Fig.3 (c) shows another shifting result with the shifting length l i +1 . C 1 and C 2 are mapped to the same character c too, and MINDIST ( C 3 , C 4 ) = MINDIST ( b,d ) = 0 . 67 . 4.2 The Mapping Property A data point t j changes its representation if it satisfies either of the following condi-The data points within the yellow intervals change their representations from  X  k to  X   X  1 , while the data points in the grey intervals remain the same. Fig. 4 (b) shows the total possible changeable intervals (yellow) during  X  times of random shifting. Data points fell in the grey intervals never change their representations.
 p change denotes the probability that t j represented by  X  k +1 , p change = d is the minimum distance of all p airwise adjacent breakpoints. If  X  k  X   X  k  X  1 = d , t j = random shifting. In the same way, we can calculate the p robability that t j represented Theorem 1. Let t j and t j +1 = t j + denote two data points in the data set , 0 &lt;&lt;d . Fo r 0 &lt;  X  d 2 , the upper bound of th e probability that t j and t j +1 are repre-sented by the same character with the frequency no more than 1 2 in the  X  samples is are represented by the same character with the frequency no less than 1 2 in the  X  samples Proof. Let X 1 , ..., X  X  be independent Bernoulli trials. Pr [ X i =1]= p same = d  X  d , denotes that t j and t j +1 are represented by the same character in one shifting. Pr [ X i = 0] = p dif = d , denotes that the SAX representation of t j and t j +1 are different in one shifting (1  X  i  X   X  ) .Let X =  X  i =1 X i denote the number of samples that have the same SAX representations. X follows the binomial distribution. E [ X ]= Let f s same be the frequency that t j and t j +1 are represented by the same character in the sample, and C s = f s same  X   X  denote the count of the same mappings in the sample. Note that E [ C s ]= p same  X   X  ,it is easy to see that, Using the Chernoff bound in Equation 4, for all 0 &lt; X   X  1 we have, Similarly, for all 0 &lt; X &lt; 1 we have The upper bound of the probability will be smaller if we increase  X  . It is easy to expand the pair-wise mapping to all the objects. That is, with a bigger  X  , the probability that similar objects are mapped to same symbols will be greater.

Chernoff bound describes the tail distribution of the random variables, and bounds the probability that the random variable de viates far from its expectation. Let c denote this probability. Then 1  X   X  describes the accuracy of the samples, and 1  X  c describes the confidence of the samples. Then we find The confidence of the samples can be improved by increasing  X  , which means the ap-proximate similarity (represented by same symbols or not) of samples well represent that of the entire population. 4.3 The Lower Bounds Property Similar to the MINDIST [6] of SAX, rSAX also has a lower bounds distance mea-sure. The minimum distance of rSAX is defined as follows, Definition 3 (rMinDist). The minimum distance (rMinDist) of objects  X  Q,  X  C under rSAX representation is the sum of all the maximum distance of  X  version of SAX representations. The process of rSAX includes one time of SAX and  X   X  1 times of random shifting processes. For any data points q i and c i , rSAX selected the maximum value of all the  X  distances to be the tightest bounding of their minimum distance. It is easy to see Thus, the tightness of lower bounds (TLB) of rSAX is 4.4 Runtime Complexity Let m be the number of time series, n be the length of one time series,  X  be the alphabet size, and w be the number of timestamps for one time series after PAA. The runtime complexity for rSAX is O ( m  X  n )+ O ( m  X  w  X   X  ) ,where  X  is the shifting times. In this section, we present extensively expe riments to evaluate rSAX. Specifically, all experiments were implemented by JAVA with a 2GB RAM, 2.26GHz CPU PC. 5.1 Evaluation of the Tightness of Lower Bounds TLB is a very meaningful measure to compare the performances of representation meth-ods [5]. The value range of TLB is from 0 (i.e., worst) to 1 (i.e., best). Here, we use the Equation 3 and Equation 13 to calculate TLB of SAX and rSAX with several real-world data sets [19]. Specifically, we randomly sampled Q and C (with replacement) 100 times, and calculated the average value of TLB for each alphabet size  X  .Formul-tiple time series, we just use the original full length as the length of Q and C , while for single time series, we sample subsequences with the length = 128 .  X  =10 .Fig.5 shows the results in 4 data sets, namely, the ECG 200 train data, the Gun Point Test data, the Koski ECG data, and the Respiration data. From this figure, we can find the TLB of rSAX outperforms that of SAX in all 4 data sets, especially when  X  is small. For example, in Fig. 5 (c)  X  =3 , the TLB of SAX is 0 . 1348 , and the TLB of rSAX is 0 . 2834 , which outperforms SAX about 210% . 5.2 Case Study by Finding Co-occurrent Abnormal Events Here we carry out a case study of rSAX applications on a real-world data set from Meteorology. It is the historic data of daily temperatures series in Hunan Province, China [20]. The data set contains multiple temperature series from 97 different weather stations from 1998 to 2008. For each temperature series, there are 365  X  11 timestamps.
In meteorology, there are co-occurrent abnor mal events happened in different places, thus cause some similar abnormal behaviors co -exist in multiple time series. Finding co-occurrent abnormal events can help experts t o identify whether a co-occurrent unusual phenomenon is occurred by chance and thus implies whether this co-anomaly is of important for further analysis. The mining method including two steps: 1) using rSAX to represent multiple time series. After this step, similar points are more likely to be mapped to the same symbols; 2) applying statistical tests to find out all the subsequences that are significantly abnormal in history. The ground truth comes from The Climate Reports of Hunan Province [21], which records the magnitude of influences and other descriptions of some abnormal climate events with big influences.

Fig. 6 shows the mining results from the year 2001-2002. Fig. 6 (a) shows the average temperature data of the year 2001-2002. Fig. 6 (b) shows the durations of detected co-occurrent abnormal events, and (c) shows the recorded 9 abnormal events in Climate Reports. The x-axis is the time (one timestamp is the average of 3 days), and the y-successfully detected, along with a few additional detections that were not written in the climate report. As we are detecting co-anomaly events that may only associated with sub-dimensions of multiple temperature series. Thus, some of the co-occurrent abnormal events were not recorded in climate report because they had no wide influence in the province. The parameter settings for this result are,  X  =8 ;  X  =10 ; w = 122 ;  X  =0 . 01 (the significant level);  X  =10 .

The number of extracted co-occurrent abnormal patterns will be less if using SAX at the first step. Because some real co-occurrent behaviors near the breakpoints are easily represented by different characters, thus are not significant in counts. Fig. 7 shows the number of significant subsequences(words) when increasing the sampling times  X  .The SAX result is that when setting  X  =1 . Other parameter settings are  X  =8 , w = 122 . For rSAX that generates multiple versions of representations for subsequences, only one version with the lowest P-value is kept. From the Fig. 7 we can see that the number of detected significant subse quences increasing from 606 to 1048 when increasing  X  from 1 to 10 . It is because random shifting strategy can better differentiate dissimilar points while mapping similar points to the same symbols with high probabilities. When we further increasing  X  from 10 to 50 , the number of significant worlds increases slowly. Based on this experiment,  X  =10 is recommended. 5.3 Parameter Settings There are three parameters in rSAX, namely the alphabet size  X  , the PAA length w and the shifting times  X  . The first two parameters are the same with that of SAX, thus  X  and w with bigger value will result finer-grained representations. The third parameter is the shifting times  X  , in a special case when  X  =1 , there is no random shifting process in the mapping process, thus the rSAX method is equal to SAX. As shown in in Fig. 8, we randomly selected two data sets for evaluation. It is easy to find that increasing the  X  can improve the TLB.

Furthermore, we test the runtime of our algorithm with respect to different shifting times. Specifically, we run 30 times and take the average value for each parameter settings. Fig. 9 shows the runtime of rSAX when increasing  X  on the Respiration data set (results on other data sets are similar). The PAA size w = 128 , the alphabet size  X  =6 . From this figure we can find that the runtime of rSAX is not sensitive to the parameter  X  , especially when  X  is less than 500 .
 In this paper, we proposed the rSAX approach for the symbolic representation of time series data. Compared with the traditional SAX approach, rSAX can significantly im-prove the tightness of lower bounds without increasing the alphabet size. Also, rSAX can guarantee the similar points have high probabilities to be represented by the same symbols. Finally, we theoretically and empir ically validated the effectiveness and effi-ciency of the rSAX approach.

