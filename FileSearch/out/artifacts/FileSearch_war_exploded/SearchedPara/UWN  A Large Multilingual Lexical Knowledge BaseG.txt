 Semantic knowledge about words and named enti-ties is a fundamental building block both in vari-ous forms of language technology as well as in end-user applications. Examples of the latter include word processor thesauri, online dictionaries, ques-tion answering, and mobile services. Finding se-mantically related words is vital for query expan-sion in information retrieval (Gong et al., 2005), database schema matching (Madhavan et al., 2001), sentiment analysis (Godbole et al., 2007), and ontol-ogy mapping (Jean-Mary and Kabuka, 2008). Fur-ther uses of lexical knowledge include data cleaning (Kedad and M X tais, 2002), visual object recognition (Marsza X ek and Schmid, 2007), and biomedical data analysis (Rubin and others, 2006).

Many of these applications have used English-language resources like WordNet (Fellbaum, 1998). However, a more multilingual resource equipped with an easy-to-use API would not only enable us to perform all of the aforementioned tasks in additional languages, but also to explore cross-lingual applica-tions like cross-lingual IR (Etzioni et al., 2007) and machine translation (Chatterjee et al., 2005).
This paper describes a new API that makes lexical knowledge about millions of items in over 200 lan-guages available to applications, and a correspond-ing online user interface for users to explore the data. We first describe link prediction techniques used to create the multilingual core of the knowledge base with word sense information (Section 2). We then outline techniques used to incorporate named enti-ties and specialized concepts (Section 3) and other types of knowledge (Section 4). Finally, we describe how the information is made accessible via a user in-terface (Section 5) and a software API (Section 6). UWN (de Melo and Weikum, 2009) is based on WordNet (Fellbaum, 1998), the most popular lexi-cal knowledge base for the English language. Word-Net enumerates the senses of a word, providing a short description text (gloss) and synonyms for each meaning. Additionally, it describes relationships be-tween senses, e.g. via the hyponymy/hypernymy re-lation that holds when one term like  X  publication  X  is a generalization of another term like  X  journal  X .
This model can be generalized by allowing words in multiple languages to be associated with a mean-ing (without, of course, demanding every meaning be lexicalized in every language). In order to ac-complish this at a large scale, we automatically link terms in different languages to the meanings already defined in WordNet. This transforms WordNet into a multilingual lexical knowledge base that covers not only English terms but hundreds of thousands of terms from many different languages.

Unfortunately, a straightforward translation runs into major difficulties because of homonyms and synonyms. For example, a word like  X  bat  X  has 10 senses in the English WordNet, but a German trans-lation like  X  Fledermaus  X  (the animal) only applies to a small subset of those senses (cf. Figure 1). This challenge can be approached by disambiguating us-ing machine learning techniques.
 Knowledge Extraction An initial input knowl-edge base graph G 0 is constructed by ex-tracting information from existing wordnets, translation dictionaries including Wiktionary ( http://www.wiktionary.org ), multilingual thesauri and ontologies, and parallel corpora. Additional heuristics are applied to increase the density of the graph and merge near-duplicate statements.
 Link Prediction A sequence of knowledge graphs G i are iteratively derived by assessing paths from a new term x to an existing WordNet sense z via some English translation y covered by WordNet. For instance, the German  X  Fledermaus  X  has  X  bat  X  as a translation and hence initially is tentatively linked to all senses of  X  bat  X  with a confidence of 0 . In each iteration, the confidence values are then updated to reflect how likely it seems that those links are cor-rect. The confidences are predicted using RBF-kernel SVM models that are learnt from a training set of labelled links between non-English words and senses. The feature space is constructed using a se-ries of graph-based statistical scores that represent properties of the previous graph G i  X  1 and addition-ally make use of measures of semantic relatedness and corpus frequencies. The most salient features x ( x,z ) are of the form: The formulae consider the out-neighbourhood y  X   X ( x,G i  X  1 ) of x , i.e. its translations, and then ob-serve how strongly each y is tied to z . The function sim  X  computes the maximal similarity between any sense of y and the current sense z . The dissim func-tion computes the sum of dissimilarities between senses of y and z , essentially quantifying how many alternatives there are to z . Additional weighting functions  X  ,  X  are used to bias scores towards senses that have an acceptable part-of-speech and senses that are more frequent in the SemCor corpus.
Relying on multiple iterations allows us to draw on multilingual evidence for greater precision and recall. For instance, after linking the German  X  Fled-ermaus  X  to the animal sense of  X  bat  X , we may be able to infer the same for the Turkish translation  X  yarasa  X . Results We have successfully applied these tech-niques to automatically create UWN, a large-scale multilingual wordnet. Evaluating random samples of term-sense links, we find (with Wilson-score in-tervals at  X  = 0 . 05 ) that for French the preci-sion is 89 . 2%  X  3 . 4% (311 samples), for German 85 . 9%  X  3 . 8% (321 samples), and for Mandarin Chinese 90 . 5%  X  3 . 3% (300 samples). The over-all number of new term-sense links is 1,595,763, for 822,212 terms in over 200 languages. These figures can be grown further if the input is extended by tap-ping on additional sources of translations. The UWN Core is extended by incorporating large amounts of named entities and language-and domain-specific concepts from Wikipedia (de Melo and Weikum, 2010a). In the process, we also obtain human-readable glosses in many languages, links to images, and other valuable information. These ad-ditions are not simply added as a separate knowl-edge base, but fully connected and integrated with the core. In particular, we create a mapping between Wikipedia and WordNet in order to merge equiva-lent entries and we use taxonomy construction meth-ods in order to attach all new named entities to their most likely classes, e.g.  X  Haight-Ashbury  X  is linked to a WordNet sense of the word  X  neighborhood  X . Information Integration Supervised link predic-tion, similar to the method presented in Section 2, is used in order to attach Wikipedia articles to semanti-cally equivalent WordNet entries, while also exploit-ing gloss similarity as an additional feature. Addi-tionally, we connect articles from different multilin-gual Wikipedia editions via their cross-lingual inter-wiki links, as well as categories with equivalent ar-ticles and article redirects with redirect targets.
We then consider connected components of di-rectly or transitively linked items. In the ideal case, such a connected component consists of a number of items all describing the same concept or entity, in-cluding articles from different versions of Wikipedia and perhaps also categories or WordNet senses.
Unfortunately, in many cases one obtains con-nected components that are unlikely to be correct, because multiple articles from the same Wikipedia edition or multiple incompatible WordNet senses are included in the same component. This can be due to incorrect links produced by the supervised link prediction, but often even the original links from Wikipedia are not consistent.

In order to obtain more consistent connected com-ponents, we use combinatorial optimization meth-ods to delete certain links. In particular, for each connected component to be analysed, an Integer Linear Program formalizes the objective of mini-mizing the costs for deleted edges and the costs for ignoring soft constraints. The basic aim is that of deleting as few edges as possible while simultane-ously ensuring that the graph becomes as consistent as possible. In some cases, there is overwhelming evidence indicating that two slightly different arti-cles should be grouped together, while in other cases there might be little evidence for the correctness of an edge and so it can easily be deleted with low cost. While obtaining an exact solution is NP-hard and APX-hard, we can solve the corresponding Linear Program using a fast LP solver like CPLEX and sub-sequently apply region growing techniques to obtain a solution with a logarithmic approximation guaran-tee (de Melo and Weikum, 2010b).

The clean connected components resulting from this process can then be merged to form aggregate entities. For instance, given WordNet X  X  standard sense for  X  fog  X , water vapor, we can check which other items are in the connected component and transfer all information to the WordNet entry. By extracting snippets of text from the beginning of Wikipedia articles, we can add new gloss descrip-tions for fog in Arabic, Asturian, Bengali, and many other languages. We can also attach pictures show-ing fog to the WordNet word sense.
 Taxonomy Induction The above process con-nects articles to their counterparts in WordNet. In the next step, we ensure that articles without any di-rect counterpart are linked to WordNet as well, by means of taxonomic hypernymy/instance links (de Melo and Weikum, 2010a).

We generate individual hypotheses about likely parents of entities. For instance, articles are con-nected to their Wikipedia categories (if these are not assessed to be mere topic descriptors) and categories are linked to parent categories, etc. In order to link categories to possible parent hypernyms in Word-Net, we adapt the approach proposed for YAGO (Suchanek et al., 2007) of determining the headword of the category name and disambiguating it.

Since we are dealing with a multilingual scenario that draws on articles from different multilingual Wikipedia editions that all need to be connected to WordNet, we apply an algorithm that jointly looks at an entity and all of its parent candidates (not just from an individual article, but all articles in the same connected component) as well as superordinate par-ent candidates (parents of parents, etc.), as depicted in Figure 2. We then construct a Markov chain based on this graph of parents that also incorporates the possibility of random jumps from any parent back to the current entity under consideration. The sta-tionary probability of this Markov chain, which can be obtained using random walk methods, provides us a ranking of the most likely parents. Results Overall, we obtain a knowledge base with 5.4 million concepts or entities and 16.7 million words or names associated with them from over 200 languages. Over 2 million named entities come only from non-English Wikipedia editions, but their taxonomic links to WordNet still have an accuracy around 90%. An example excerpt is shown in Fig-ure 3, with named entities connected to higher-level classes in UWN, all with multilingual labels. Word Relationships Another plugin provides word relationships and properties mined from Wik-tionary. These include derivational and etymologi-cal word relationships (e.g. that  X  grotesque  X  comes from the Italian  X  grotta  X : grotto, artificial cave), al-ternative spellings (e.g.  X  encyclop X dia  X  for  X  en-cyclopedia  X ), common misspellings (e.g.  X  minis-cule  X  for  X  minuscule  X ), pronunciation information (e.g. how to pronounce  X  nuclear  X ), and so on. Frame-Semantic Knowledge Frame semantics is a cognitively motivated theory that describes words in terms of the cognitive frames or scenarios that they evoke and the corresponding participants in-volved in them. For a given frame, FrameNet provides definitions, involved participants, associ-ated words, and relationships. For instance, the Commerce_goods-transfer frame normally involves a seller and a buyer, among other things, and different words like  X  buy  X  and  X  sell  X  can be cho-sen to describe the same event.

Such detailed knowledge about scenarios is largely complementary in nature to the sense re-lationships that WordNet provides. For instance, WordNet emphasizes the opposite meaning of the words  X  happy  X  and  X  unhappy  X , while frame seman-tics instead emphasizes the cognitive relatedness of words like  X  happy  X ,  X  unhappy  X ,  X  astonished  X , and  X  amusement  X , and explains that typical participants include an experiencer who experiences the emo-tions and external stimuli that evoke them. There have been individual systems that made use of both forms of knowledge (Shi and Mihalcea, 2005; Cop-pola and others, 2009), but due to their very different nature, there is currently no simple way to accom-plish this feat. Our system addresses this by seam-lessly integrating frame semantic knowledge into the system. We draw on FrameNet (Baker et al., 1998), the most well-known computational instantiation of frame semantics. While the FrameNet project is generally well-known, its use in practical applica-tions has been limited due to the lack of easy-to-use APIs and because FrameNet alone does not cover as many words as WordNet. Our API simultaneously provides access to both sources.
 Language information For a given language, this extension provides information such as relevant writing systems, geographical regions, identifica-tion codes, and names in many different languages. These are all integrated into WordNet X  X  hypernym hierarchy, i.e. from language families like the Sinitic languages one may move down to macrolanguages like Chinese, and then to more specific forms like Mandarin Chinese, dialect groups like Ji-Lu Man-darin, or even dialects of particular cities.
The information is obtained from ISO standards, the Unicode CLDR as well as Wikipedia and then integrated with WordNet using the information in-tegration strategies described above (de Melo and Weikum, 2008). Additionally, information about writing systems is taken from the Unicode CLDR and information about individual characters is ob-tained from the Unicode, Unihan, and Hanzi Data databases. For instance, the Chinese character  X   X   X  is connected to its radical component  X   X   X  and to its pronunciation component  X   X   X . We have developed an online interface that provides access to our data to interested researchers ( yago-knowledge.org/uwn/ ), as shown in Figure 4.

Interactive online interfaces offer new ways of in-teracting with lexical knowledge that are not possi-ble with traditional print dictionaries. For example, a user wishing to find a Spanish word for the concept of persuading someone not to believe something might look up the word  X  persuasion  X  and then navi-gate to its antonym  X  dissuasion  X  to find the Spanish translation. A non-native speaker of English looking up the word  X  tercel  X  might find it helpful to see pic-tures available for the related terms  X  hawk  X  or  X  fal-con  X   X  a Google Image search for  X  tercel  X  merely de-livers images of Toyota Tercel cars.

While there have been other multilingual inter-faces to WordNet-style lexical knowledge in the past (Pianta et al., 2002; Atserias and others, 2004), these provide less than 10 languages as of 2012. The most similar resource is BabelNet (Navigli and Ponzetto, 2010), which contains multilingual synsets but does not connect named entities from Wikipedia to them in a multilingual taxonomy.
 Our goal is to make the knowledge that we have de-rived available for use in applications. To this end, we have developed a fully downloadable API that can easily be used in several different programming languages. While there are many existing APIs for WordNet and other lexical resources (e.g. (Judea et al., 2011; Gurevych and others, 2012)), these don X  X  provide a comparable degree of integrated multilin-gual and taxonomic information.
 Interface The API can be used by initializing an accessor object and possibly specifying the list of plugins to be loaded. Depending on the particular application, one may choose only Princeton Word-Net and the UWN Core, or one may want to in-clude named entities from Wikipedia and frame-semantic knowledge derived from FrameNet, for in-stance. The accessor provides a simple graph-based lookup API as well as some convenience methods for common types of queries.

An additional higher-level API module imple-ments several measures of semantic relatedness. It also provides a simple word sense disambiguation method that, given a tokenized text with part-of-speech and lemma annotations, selects likely word senses by choosing the senses (with matching part-of-speech) that are most similar to words in the con-text. Note that these modules go beyond existing APIs because they operate on words in many differ-ent languages and semantic similarity can even be assessed across languages.
 Data Structures Under the hood, each plugin re-lies on a disk-based associative array to store the knowledge base as a labelled multi-graph. The out-going labelled edges of an entity are saved on disk in a serialized form, including relation names and rela-tion weights. An index structure allows determining the position of such records on disk.

Internally, this index structure is implemented as a linearly-probed hash table that is also stored ex-ternally. Note that such a structure is very efficient in this scenario, because the index is used as a read-only data store by the API. Once an index has been created, write operations are no longer performed, so B+ trees and similar disk-based balanced tree in-dices commonly used in relational database manage-ment systems are not needed. The advantage is that this enables faster lookups, because retrieval opera-tions normally require only two disk reads per plu-gin, one to access a block in the index table, and another to access a block of actual data. UWN is an important new multilingual lexical re-source that is now freely available to the community. It has been constructed using sophisticated knowl-edge extraction, link prediction, information integra-tion, and taxonomy induction methods. Apart from an online querying and browsing interface, we have also implemented an API that facilitates the use of the knowledge base in applications.

