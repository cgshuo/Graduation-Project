 Man y datasets of interest today are best describ ed as a link ed collection of interrelated objects. These may repre-sen t homogeneous net works, in whic h there is a single-ob ject type and link type, or richer, heterogeneous net works, in whic h there may be multiple object and link types (and possibly other seman tic information). Examples of homo-geneous net works include single mo de social net works, suc h as people connected by friendship links, or the WWW, a collection of link ed web pages. Examples of heterogeneous net works include those in medical domains describing pa-tien ts, diseases, treatmen ts and con tacts, or in bibliographic domains describing publications, authors, and venues. Link mining refers to data mining techniques that explicitly con-sider these links when building predictiv e or descriptiv e mo d-els of the link ed data. Commonly addressed link mining tasks include object ranking, group detection, collectiv e clas-si cation, link prediction and subgraph disco very. While net work analysis has been studied in depth in particular ar-eas suc h as social net work analysis, hypertext mining, and web analysis, only recen tly has there been a cross-fertilization of ideas among these di eren t comm unities. This is an ex-citing, rapidly expanding area. In this article, we review some of the common emerging themes. \Links," or more generically relationships, among data in-stances are ubiquitous. These links often exhibit patterns that can indicate prop erties of the data instances suc h as the imp ortance, rank, or category of the object. In some cases, not all links will be observ ed; therefore, we may be inter-ested in predicting the existence of links between instances. In other domains, where the links are evolving over time, our goal may be to predict whether a link will exist in the future, given the previously observ ed links. By taking links into ac-coun t, more complex patterns arise as well. This leads to other challenges focused on disco vering substructures, suc h as comm unities, groups, or common subgraphs.
 Traditional data mining algorithms suc h as asso ciation rule mining, mark et bask et analysis, and cluster analysis com-monly attempt to nd patterns in a dataset characterized by a collection of indep enden t instances of a single rela-tion. This is consisten t with the classical statistical infer-ence problem of trying to iden tify a mo del given a indep en-den t, iden tically distributed (IID) sample. One can think of this pro cess as learning a mo del for the node attributes of a homogeneous graph while ignoring the links between the nodes.
 A key emerging challenge for data mining is tackling the problem of mining richly structured, heterogeneous datasets. These kinds of datasets are best describ ed as net works or graphs. The domains often consist of a variet y of object types; the objects can be link ed in a variet y of ways. Thus, the graph may have di eren t node and edge (or hyperedge) types. Naiv ely applying traditional statistical inference pro-cedures, whic h assume that instances are indep enden t, can lead to inappropriate conclusions about the data [57]. Care must be tak en that poten tial correlations due to links are handled appropriately . In fact, object link age is kno wledge that should be exploited. This information can be used to impro ve the predictiv e accuracy of the learned mo dels: at-tributes of link ed objects are often correlated, and links are more likely to exist between objects that have some com-monalit y. In addition, the graph structure itself may be an imp ortan t elemen t to include in the mo del. Structural prop erties suc h as degree and connectivit y can be imp ortan t indicators.
 Link mining is a newly emerging researc h area that is at the intersection of the work in link analysis [58; 40], hypertext and web mining [16], relational learning and inductiv e logic programming [38], and graph mining [23]. We use the term link mining to put a special emphasis on the links|mo ving them up to rst-class citizens in the data analysis endea vor. In recen t years, there have been sev eral workshop series de-voted to topics related to link mining. One of the earliest workshops was the 1998 AAAI Fall Symp osium on AI and Link Analysis [58]. Other workshop series include the work-shops on Statistical Relational Learning [48; 49; 28], Multi-Relational Data Mining [65; 39; 36; 37], LinkKDD [35; 1; 3], Link Analysis, Coun ter-terrorism and Securit y [104; 26; 103], and Mining Graphs, Trees and Sequences [94; 66; 85]. The objectiv e of this surv ey is to pro vide a persp ectiv e on re-searc h within the relev ant comm unities that are addressing curren t link mining challenges. Link mining encompasses a wide range of tasks; therefore, our review will cover the core challenges addressed by a ma jorit y of ongoing researc h in the eld. We begin by describing some of the challenges in data represen tation for link mining. Then we progress through eigh t link mining tasks that can be broadly categorized as tasks that focus on objects, links, or graphs (Table 1). Fi-nally , we close with a discussion of areas that we believ e have not yet receiv ed sucien t atten tion.
 1. Ob ject-Related Tasks 2. Link-Related Tasks 3. Graph-Related Tasks While data represen tation and feature selection are signi -can t issues for traditional mac hine learning algorithms, data represen tation for link ed data is even more complex. Con-sider a simple example from Singh et al. [101] of a social net work describing actors and their participation in events. Suc h social net works are commonly called aliation net-works [112], and are easily represen ted by three tables rep-resen ting the actors, the events, and the participation re-lationships. Even this simple structure can be represen ted as sev eral distinct graphs. The most natural represen ta-tion is a bipartite graph, with a set of actor nodes, a set of event nodes, and edges that represen t an actor's participa-tion in an event. Other represen tations may enable di eren t insigh ts and analysis. For example, we may construct a net-work in whic h the actors are nodes and edges corresp ond to actors who have participated in an event together. This rep-resen tation allo ws us to perform a more actor-cen tric anal-ysis. Alternativ ely, we may represen t these relations as a graph in whic h the events are nodes, and events are link ed if they have an actor in common. This represen tation may allo w us to more easily see connections between events. This exibilit y in the represen tation of a graph arises from a basic graph represen tation dualit y. This dualit y is illus-trated by the follo wing simple example: Consider a data set represen ted as a simple G = ( 0 ; L ), where 0 is the set of objects (i.e., the nodes or vertices) and L is the set of links (i.e., the edges or hyperedges). The graph G ( 0 ; L ) can be transformed into a new graph G 0 ( 0 0 ; L 0 ), in whic h the links l i , l j in G are objects in G 0 and there exists an link between o i ; o j 2 0 0 if and only if l i and l j share an ob-ject in G . This basic graph dualit y illustrates one kind of simple data represen tation transformation. For graphs with multiple node and edge types, the num ber of possible trans-formations becomes immense. Typically , these reform ula-tions are not considered as part of the link mining pro cess. However, the represen tation chosen can have a signi can t impact on the qualit y of the statistical inferences that can be made. Therefore, the choice of an appropriate represen-tation is actually an imp ortan t issue in e ectiv e link mining, and is often more complex than in the case where we have IID data instances. In the follo wing sections, we will assume that a data represen tation has been selected, that the desig-nation of the objects or nodes in the graph has been made, and that the links or edges in the graph have been de ned. However, when applying link mining to real world domains, one should not underestimate the e ort required in choosing an appropriate represen tation. Perhaps the most well kno wn link mining task is that of link-based object ranking (LBR), whic h is a primary focus of the link analysis comm unit y. The objectiv e of LBR is to exploit the link structure of a graph to order or prioritize the set of objects within the graph. Muc h of this researc h focuses on graphs with a single object type and a single link type.
 In the con text of web information retriev al, the PageRank [91] and HITS [64] algorithms are the most notable ap-proac hes to LBR. PageRank mo dels web sur ng as a ran-dom walk where the surfer randomly selects and follo ws links and occasionally jumps to a new web page to start another traversal of the link structure. The rank of a given web page in this con text is the fraction of time that the random web surfer would spend at the page if the random pro cess were iterated ad in nitum. This can be determined by computing the steady-state distribution of the random pro cess. HITS assumes a sligh tly more complex pro cess, mo deling the web as being comp osed of two types of web pages: hubs and authorities . Hubs are web pages that link to man y au-thoritativ e pages. Authorities are web pages that are link ed to by man y hubs. Eac h page in the web is assigned hub and authorit y scores. These scores are computed by an it-erativ e algorithm that updates the scores of a page based on the scores of pages in its immediate neigh borho od. This approac h bears a relation to PageRank with two separate random walks|one with hub transitions and one with au-thorit y transitions|on a corresp onding bipartite graph of hubs and authorities [73; 95; 84]. The hub and authorit y scores are the steady-state distributions of the resp ectiv e random pro cesses.
 Since the introduction of PageRank and HITS, a num ber of algorithms have been prop osed that are variations on these basic themes. Bharat and Henzinger [8] and Chakrabarti et al. [17] prop ose mo di cations to HITS that exploit web page con ten t to weigh t pages and links based on relev ance. Ng et al. [83; 84] analyze the stabilit y of PageRank and HITS to small perturbations in the link structure and presen t mo d-i cations to HITS that yield more stable rankings. Haveli-wala [51] and Jeh and Widom [56] prop ose topic-sensitiv e PageRank algorithms that iden tify topically authoritativ e web pages ecien tly at query time. Ding et al. [29] pro-poses a uni ed framew ork encompassing both PageRank and HITS and presen ts sev eral new ranking algorithms within this algorithm class with closed-form solutions. Cohn and Chang [20] introduce a probabilistic analogue to HITS based on probabilistic laten t seman tic indexing, where the mo del attempts to explain the link structure in terms of a small set of laten t factors. Cohn and Hofmann [21] and Ric hard-son and Domingos [98] presen t probabilistic mo dels inspired by HITS and PageRank, resp ectiv ely, that incorp orate both con ten t and link structure.
 In the domain of social net work analysis (SNA), LBR is a core analysis task. The objectiv e is to rank order individu-als in a given social net work in terms of a measure of their imp ortance, referred to as centr ality . Measures of cen tralit y have been the sub ject of researc h in the SNA comm unit y for decades [112]. These measures characterize some asp ect of the local or global net work structure as seen from a given in-dividual's position in the net work. They range in complexit y from local measures suc h as degree cen tralit y [43], whic h is simply the vertex degree, to global measures suc h as eigen-vector/p ower cen tralit y [12], whic h use spectral metho ds to characterize the imp ortance of individuals based on their connectedness to other imp ortan t individuals.
 In the above work, the common goal is a global ranking of objects in a static graph pro duced using a speci ed mea-sure. Notable variations from this theme include approac hes that rank objects relativ e to one or more relev ant objects in the graph [55; 114; 105] and metho ds that rank objects over time in dynamic graphs [89; 88]. Jeh and Widom [55] prop ose a metric for assessing the similarit y of two objects based on the degree to whic h they link to similar objects. The similarit y between two objects in a directed or bipartite graph is computed using a random walk form ulation. Sun et al. [105] in this issue prop ose a related object ranking approac h for relev ance searc h and anomaly detection that com bines random walks and graph partitioning to impro ve scalabilit y. White and Sm yth [114] de ne and evaluate a host of metrics to compute the similarit y between a given object and one or more reference objects in a graph. Ranking objects in dynamic graphs that capture event data suc h as email, telephone calls, or publications introduces new challenges. In con trast to ranking metho ds for static settings that pro duce a single rank, the goal is to trac k the changes in object rank over time as new events unfold. Static ranking metho ds can be applied to aggregated event data over various time interv als, but this aggregation remo ves the time ordering of events, and the sparse link structure over a given time interv al limits the utilit y of the resulting ranks. O'Madadhain and Sm yth [89] and O'Madadhain et al.[88] in this issue prop ose a series of desired algorithmic prop erties for dynamic object ranking, discuss the limita-tions of notable static ranking algorithms, and introduce a ranking algorithm based on poten tial ow that satis es the speci ed requiremen ts. Traditional mac hine learning has focused on the classi ca-tion of data consisting of iden tically structured objects that are typically assumed to be IID. Man y real-w orld datasets, however, lack this homogeneit y of structure. In the link-based object classi cation (LBC) problem, a data graph G = ( 0 ; L ) is comp osed of a set objects 0 connected to eac h other via a set of links L . The task is to lab el the mem bers of 0 from a nite set of categorical values. The discerning feature of LBC that mak es it di eren t from traditional clas-si cation is that in man y cases, the lab els of related objects tend to be correlated. The challenge is to design algorithms for collective classi c ation that exploit suc h correlations and join tly infer the categorical values asso ciated with the ob-jects in the graph.
 LBC has receiv ed considerable atten tion recen tly. Chakra-barti et al. [18] consider the problem of classifying related news items in the Reuters dataset. They were among the rst to notice that exploiting class lab els of related objects aids classi cation, whereas exploiting features of related ob-jects can actually harm classi cation accuracy . Oh et al. [87] rep ort similar results on a collection of encyclop edia arti-cles: simply incorp orating words from neigh boring docu-men ts was not helpful, while making use of the predicted class of neigh boring documen ts was helpful. La ert y et al. [71] introduce conditional random elds (CRF), whic h extend traditional maxim um entrop y mo dels for LBC in the restricted case where the data graphs are chains. Task ar et al. [107] extend La ert y et al.'s approac h [71] to the case where the data graphs are arbitrary graphs. Neville and Jensen [80] prop ose simple LBC algorithms to classify cor-porate datasets with rich schemas that pro duce graphs with heterogeneous objects, eac h with its own distinct set of fea-tures. Lu and Geto or [76] extend simple mac hine learn-ing classi ers to perform LBC by introducing new features that measure the distribution of class lab els in the Mark ov blank et of the object to be classi ed. In addition to the mac hine learning comm unit y, the computer vision and nat-ural language comm unities have also studied the LBC prob-lem. Rosenfeld et al. [99] prop osed relaxation lab eling, an inference algorithm later used by Chakrabarti et al. [18] to perform link-based classi cation. Hummel and Zuc ker [53] presen t one of man y approac hes for exploring relaxation la-beling theoretically . La ert y et al. [71] prop osed CRFs for use in part-of-sp eech tagging, a task in natural language pro cessing. A third object-cen tric task is group detection. The goal of group detection is to cluster the nodes in the graph into groups that share common characteristics. A range of tech-niques have been presen ted in various comm unities to ad-dress this general problem. In recen t years, a cen tral chal-lenge has been to dev elop scalable metho ds that can exploit increasingly complex graphs to aid the kno wledge disco very pro cess.
 Consider rst the case where the graph con tains objects and links of a single type, without attributes. Man y of the tech-niques for iden tifying groups in this scenario can be classi ed as either agglomerativ e or divisiv e clustering metho ds. The task of blockmo deling of social net work analysis (SNA) in-volves partitioning social net works into sets of individuals, called positions , that exhibit similar sets of links to others in the net work [112]. A similarit y measure is de ned between link sets and agglomerativ e clustering is used to iden tify the positions. Spectral graph partitioning metho ds address the group detection problem by iden tifying an appro ximately minimal set of links to remo ve from the graph to achiev e a given num ber of groups [82; 30]. In a related vein, Gib-son et al. [50] have sho wn that the dominan t eigen vectors of the HITS authorit y matrix pro vide a natural decomp osi-tion of web comm unit y structure. Other recen t approac hes for group detection use a measure of edge betwe enness , de-rived from Freeman's notion of betweenness cen tralit y [43], to iden tify links connecting groups [109]. Links with high edge betweenness are incremen tally remo ved to partition the graph.
 In con trast to the above metho ds, where group assignmen ts are deterministic, a num ber of approac hes for group detec-tion have been introduced that are based on the concept of stochastic blockmo deling from SNA. In stochastic blo ckmo d-eling, the observ ed social net work is assumed to be a realiza-tion from a pair-dep endent stochastic blockmo del [112; 86]. Positions for the individuals in the net work are treated as IID random variables, and relational links of a given type be-tween two individuals are random variables dep enden t solely on the positions of the individuals they link. Nowic ki and Snijders [86] prop ose a general stochastic blo ckmo delling ap-proac h admitting directed, valued relations and an arbitrary num ber of positions. Gibbs sampling is used to infer the pos-terior distribution for positions. Kemp et al. [61] remo ve the need to specify the num ber of positions a priori; instead, the num ber of positions is inferred directly from the data. Wolfe and Jensen [115] extend the general stochastic blo ckmo d-elling approac h by allo wing an individual to have multiple position types; this pro vides the exibilit y to mo del multiple roles that an individual may have in di eren t con texts. To address group detection challenges in the intelligence and law enforcemen t domains, metho ds are needed that can exploit volumes of multi-relational data to detect indica-tors of collab oration. Sev eral recen t e orts have prop osed metho ds to address suc h challenges. Adibi et al. [2] pro-pose a hybrid approac h that initially posits poten tial groups using kno wledge-based reasoning techniques and then aug-men ts these hypotheses with additional candidates based on observ ed interactions that indicate likely asso ciation. Ku-bica et al. [69] presen ts a generativ e mo del for multi-t ype link generation given group mem bership and individual at-tribute information. Maxim um likeliho od estimation is used to iden tify the most likely chart mapping individuals to their resp ectiv e group mem berships. In later work Kubica et al. [68] introduce a scalable version of this approac h that uses a metho d similar to k-means clustering to signi can tly accelerate group disco very, while retaining the underlying generativ e mo del. Most recen tly, Wang et al. [110] prop ose a generalization of the general stochastic blo ckmo delling ap-proac h that allo ws join t inference of groups and topics based on observ ed relationships and their textual attributes. Suc h a mo del pro vides a mec hanism to connect an observ ed rela-tionship with its underlying con text. The nal object-cen tric task is entity resolution, whic h in-volves identifying the set of objects in a domain. The goal of entity resolution is to determine whic h references in the data refer to the same real-w orld entity. Examples of this problem arise in databases (deduplication, data integration), natural language pro cessing (co-reference resolution, object consoli-dation), personal information managemen t, and other elds. The problem has been de ned with man y variations; in the most general form, neither the domain entities nor the num-ber of suc h entities is assumed to be kno wn. Traditionally , entity resolution has been view ed as a pair-wise resolution problem, where eac h pair of references is indep enden tly re-solv ed as being co-referen t or otherwise, dep ending on the similarit y of their attributes. Recen tly, there has been sig-ni can t interest in the use of links for impro ved entity res-olution. The cen tral idea is to consider, in addition to the attributes of the references to be resolv ed, the other refer-ences to whic h these are link ed. These links may be, for example, co-author links between author references in bibli-ographic data, hierarc hical links between spatial references in geo-spatial data, or co-o ccurrence links between name ref-erences in natural language documen ts.
 The use of links for resolution was rst explored in databases. Anan thakrishna et al. [6] introduce a metho d for deduplica-tion using links in data warehouse applications where there is a dimensional hierarc hy over the link relations. More re-cen tly, Kalashnik ov et al. [59] enhance feature-based sim-ilarit y between an ambiguous reference and the man y en-tity choices for it with link age analysis between the entities, suc h as aliation and co-authorship. However, while these approac hes consider links for entity resolution, only the at-tributes of link ed references are considered and di eren t res-olution decisions are still tak en indep enden tly. In con trast, collectiv e entity resolution approac hes have also been prop osed in databases [9; 34], where one resolution decision a ects another if they are link ed. Bhattac hary a and Geto or [9; 10] prop ose di eren t measures for link age similarit y in graphs and sho w how these can be com bined with attribute similarit y for collectiv e entity resolution in collab oration graphs. Dong et al. [34] collectiv ely resolv e entities of multiple types by propagating evidence over links in a dep endency graph.
 In mac hine learning, probabilistic mo dels that tak e into ac-coun t interaction between di eren t entity resolution deci-sions have been prop osed for named entity recognition in natural language pro cessing and for citation matc hing. Li et al. [74] address the problem of disam biguating \en tity men tions," poten tially of multiple types, in the con text of unstructured textual documen ts. Parag et al. [102] use the idea of merging evidence to allo w the ow of reasoning be-tween link ed pair-wise decisions over multiple entity types. In addition, mo dels have been prop osed that explicitly con-sider links among references for collectiv e resolution [92; 11; 25]. Pasula et al. [92] prop ose a generic probabilistic rela-tional mo del framew ork for the citation matc hing problem. Culotta and McCallum [25] construct a conditional random eld mo del of deduplication that captures link ed dep enden-cies between references of multiple types. Bhattac hary a et al. [11] adapt the Laten t Diric hlet mo del for documen ts and topics and extend it to prop ose a generativ e group mo del for unsup ervised collectiv e entity resolution. We next turn to edge-related tasks. Link prediction is the problem of predicting the existence of a link between two en-tities, based on attributes of the objects and other observ ed links. Examples include predicting links among actors in social net works, suc h as predicting friendships; predicting the participation of actors in events [88], suc h as email, tele-phone calls and co-authorship; and predicting seman tic rela-tionships suc h as \advisor-of " based on web page links and con ten t [24; 108]. Most often, some links are observ ed, and one is attempting to predict unobserv ed links, or there is a temp oral asp ect: a snapshot of the set of links at time t is given and the goal is to predict the links at time t + 1. This problem is often view ed as a simple binary classi ca-tion problem: for any two poten tially link ed objects o i o , predict whether l ij is 1 or 0. One approac h is to mak e this prediction entirely based on structural prop erties of the net work. Lib en-No well and Klein berg [75] presen t a surv ey of predictors based on di eren t graph pro ximit y measures. Other approac hes mak e use of attribute information for link prediction. Popescul et al. [93] introduce a structured logis-tic regression mo del that can mak e use of relational features to predict the existence of links. The relational features are de ned via database queries; the authors sho w how to searc h over the space of relational features. O'Madadhain et al. [88; 90] construct local conditional probabilit y mo dels, based on attribute and structural features.
 Link prediction is hard because most interesting link ed data sets are sparse. As pointed out by man y researc hers [46; 88; 97], one of the diculties in building statistical mo dels for edge prediction is that the prior probabilit y of a link is typically quite small. This causes dicult y both in mo del evaluation and, more imp ortan tly, in quan tifying the level of con dence in the predictions. Rattigan and Jensen [97] in this issue discuss some of these challenges.
 One way to impro ve the qualit y of the predictions is to mak e the predictions collectiv ely. A num ber of approac hes de ne a single probabilistic mo del over the entire link graph, la-bels, and edges. These join t mo dels of net work structure are often based on mo dels suc h as Mark ov random elds [19]. In the simplest case, where there is a set of objects O , with attributes X , and edges E among the objects, the MRF mo dels a join t distribution over the set of edges E , P ( E ), or a distribution conditioned on the attributes of the nodes, P ( E j X ). Ric her mo dels, based on relational rep-resen tations, are possible, suc h as Relational Mark ov Net-works [108] and, more recen tly, Mark ov Logic Net works [33]. Mo dels based on directed graphical mo dels are also possible. Geto or et al. [47] describ e sev eral approac hes for handling link uncertain ty in probabilistic relational mo dels. A discerning feature of these latter approac hes is that they perform probabilistic inference to mak e inferences about the links. This allo ws them to capture the correlations among the links. They can also be used for other tasks, suc h as link-based classi cation. Ideally this mak es for more accurate predictions. However, mo del-based probabilistic approac hes have a computational price: exact inference is generally in-tractable, so appro ximate inference techniques are necessary . An area of data mining that is related to link mining is the work on subgraph disco very. This work attempts to nd interesting or commonly occurring subgraphs in a set of graphs. Disco very of these patterns may be the sole purp ose of the systems, or the disco vered patterns may be used for graph classi cation (Section 9).
 One line of work attempts to nd frequen t subgraphs [54; 70; 116]. Man y of these approac hes exploit the Apriori prop-erty [4] from frequen t item set mining. Typically , there is a candidate generation phase follo wed by a matc hing phase. Naiv e matc hing requires a subgraph isomorphism test, so ecien t algorithms are needed here as well. Inokuc hi et al. [54] describ e AGM, an Apriori-based algorithm that nds all induced subgraphs in a graph database satisfying a min-imum supp ort. Kuromac hi et al. [70] impro ve on AGM by using an adjacency represen tation of the graph data and de-scribing new optimizations to candidate substructure gener-ation. Yan et al. [116] describ e gSpan, whic h avoids the cost of candidate generation by rst mapping eac h graph to a depth-rst searc h code and lexicographically ordering these codes, then performing DFS on the searc h tree de ned by this lexicographic ordering.
 Other approac hes come from the inductiv e logic program-ming (ILP) comm unit y [79; 72]. One early success was the work of Dehasp e et al. [27], who applied techniques from inductiv e logic programming to nding frequen t patterns in a toxicology domain.
 Another line of work focuses on ecien t subgraph genera-tion and compression-based heuristic searc h [22; 78]. Sub-due [22], the earliest work in this area, uses an MDL-based heuristic to guide the searc h for subgraphs. Sub due has been used for both subgraph disco very and graph classi -cation [23]. As another example, Graph-Based Induction (GBI) compresses the input graph by chunking the vertex pairs that app ear frequen tly [117]. Both of these approac hes use a greedy local approac h in their searc h for frequen t sub-structures. Ketk ar et al. [62] compare these approac hes to ILP approac hes. Unlik e link-based object classi cation, whic h attempts to lab el nodes in a graph, graph classi cation is a sup ervised learning problem in whic h the goal is to categorize an entire graph as a positiv e or negativ e instance of a concept. This is one of the earliest tasks addressed within the con text of applying mac hine learning and data mining techniques to graph data. Graph classi cation does not typically require collectiv e inference, as is needed for classifying objects and edges, because the graphs are generally assumed to be inde-penden tly generated.
 Three main approac hes to graph classi cation have been ex-plored. These are based on feature mining on graphs, induc-tive logic programming (ILP), and de ning graph kernels. Feature mining on graphs uses metho ds related to those de-scrib ed in the previous section on subgraph disco very, Sec-tion 8. Feature mining on graphs is usually performed by nding all frequen t or informativ e substructures in the graph instances. These substructures are used for transforming the graph data into data represen ted as a single table, and then traditional classi ers are used for classifying the instances. As an example of an ILP approac h, King et al. [63] rst map the graph data describing mutagenesis into a relational rep-resen tation. Their logical represen tation uses relations suc h as vertex(gr aphId,V ertexId,V ertexL abel, VertexA ttributes) and edge(gr aphId,vertexId1,vertexId2,BondL abel) , and then uses an ILP system to nd a hypothesis in this space.
 Finding all frequen t substructures is usually computation-ally prohibitiv e. An alternativ e approac h mak es use of ker-nel metho ds. Both G X artner and Kashima describ e graph kernels based on a measure of the walks on the graphs [44; 60]. G X artner [44] coun ts walks with equal initial and termi-nal lab els, whereas Kashima [60] looks at the probabilit y of random walks with equal lab el sequences. A G X artner [45] surv eys kernel metho ds for structured data. Generativ e mo dels for a range of graph and dep endency types have been studied extensiv ely in the social net work analysis comm unit y. For directed graphs with a single ob-ject and link type, there are sev eral ma jor classes of random graph distributions discussed in the literature: Bernoulli graph distributions, conditional uniform graph distributions, dyadic dep endence distributions, and p mo dels. Bernoulli graphs [41] (also kno wn as Erd X  os-R enyi mo dels or random graphs) are by far the simplest generativ e mo dels. They assume that the random variables f l ij g that indicate the existence of directed edges among the objects o i and o j IID. When the probabilit y of link existence equals 0.5, the distribution is often referred to as the uniform random graph distribution. Conditional uniform graph distributions [112] de ne uniform distributions over sets of graphs with spec-i ed structural characteristics, suc h as a xed num ber of links, out-degrees, or in-degrees. Dyadic dep endence distri-butions [111] assume that only the dyads ( l ij ; l ji ) are de-penden t and de ne multinomial distributions over the dyad states. P mo dels assume that links sharing at least one object in common are dep enden t. Generativ e mo dels ad-mitting dep endency structures that are more general than Mark ov graphs have been introduced as well, along with mo dels for multiple object and link types and dynamic net-works with a varying link structure and num ber of objects [14; 52].
 In recen t years, signi can t atten tion has focused on studying the structural prop erties of net works suc h as the World Wide Web, online social net works, comm unication net works, cita-tion net works, and biological net works. Across these various net works, general patterns suc h as power law degree distri-butions, small graph diameters, and comm unit y structure are observ ed. These observ ations have motiv ated the searc h for general principles governing suc h net works [15]. Airoldi et al. [5] in this issue review sampling algorithms for a num-ber of the common net work types suc h as scale free net works [7], small-w orld net works [113], core-p eriphery [13], and cel-lular net works [42] that exhibit suc h attributes. In con trast to the random pro cess mo dels from the social net work anal-ysis literature, man y of these generativ e mo dels are speci ed in pro cedural form, whic h is view ed as bene cial when the goal is to understand how power law degree distributions, for example, can naturally emerge in dynamic graphs over time. Chakrabarti [15] presen ts a taxonom y of recen tly prop osed graph generators.
 Finally , we note sev eral generativ e mo dels of link structure presen ted in the mac hine learning comm unit y that address a variet y of application con texts. Kubica et al. [69] intro-duces a generativ e mo del for observ ed links among individ-uals given their underlying group mem berships. Kubica et al. [67] presen t a link generation mo del for link analysis and collab oration queries that admits di eren t link types and temp oral information. Geto or et al. [47] introduce proba-bilistic relational mo dels, whic h that pro vide a uni ed gen-erativ e mo del for objects and link structure. Neville and Jensen [81] de ne a probabilistic relational mo del that rep-resen ts a join t distribution over objects, links and laten t groups. In this surv ey, we have often describ ed eac h link mining task in isolation. More generally , comp onen t link mining algo-rithms may be part of a larger kno wledge disco very pro cess. As we move from one domain to another, the pro cessing requiremen ts will change, but the need to comp ose the algo-rithms in a uni ed pro cess will remain. Ideally , as we move from data conditioning to more complex inference tasks, we would like to propagate uncertain ty throughout the pro cess. One approac h that solv es this problem, in theory , is to de-ne a full probabilistic mo del; this the approac h tak en by Geto or et al. [47] and Task ar et al. [108]. However, this approac h is not alw ays desirable or feasible. As argued by Senator [100] in this issue, in addition to addressing spe-ci c link mining tasks, it is equally imp ortan t to consider how to e ectiv ely comp ose link mining algorithms to ad-dress a spectrum of kno wledge disco very tasks. Ultimately , system performance is determined by the interpla y among the comp onen ts; therefore, it is critical to investigate how these comp onen t dep endencies will shap e the overall perfor-mance.
 When considering the overall kno wledge disco very pro cess, it is imp ortan t to keep in mind that man y asp ects of the pro-cess are dynamic. The dynamism, whic h can extend from the data to the user's needs, interests, and beliefs, implies that a num ber of link mining algorithms will be applied re-peatedly and incremen tally . We often envision applying link mining algorithms to the entire graph. While this is desir-able in some applications, it does not mak e sense when a user is interested in only a small subgraph. Therefore, it is imp ortan t to dev elop metho ds supp orting focused, incre-men tal application of link mining.
 One interesting researc h direction in this area is query-based classi cation using links. Most collectiv e classi cation ap-proac hes consider the dataset in its entiret y as one link ed instance of objects, performing prediction/classi cation for all of these objects join tly. When a user is interested in classifying only a small subset of these objects, it is worth-while to classify other objects only if they are helpful in correctly classifying the objects of interest via the link struc-ture. Giv en this goal, a query-based collectiv e inference technique needs to rst extract the links and objects that are most relev ant for answ ering the query appro ximately and then perform collectiv e classi cation only on the extracted subgraph. Iden ti cation of relev ant subgraphs can also be helpful for incremen tal classi cation when new objects and links are added to an existing graph with classi ed objects. Link mining often needs to be performed on data from mul-tiple sources; therefore, information integration and recon-ciliation are imp ortan t comp onen ts of the link mining pro-cess. Furthermore, it is imp ortan t to integrate the data (re)form ulation more directly into the link pro cess pro cess. While there has been some work that integrates the statisti-cal approac hes to link mining with the meta-data disco very and mapping [31], there is much more to be done.
 Another promising arena in whic h to apply link mining is the Seman tic Web. In this issue, Ramakrishnan et al. [96] de-scrib e metho ds for disco vering interesting subgraphs based on seman tic information asso ciated with the edges. There has been some other work in this area, for example Mad-che and Staab [77] and Doan et al. [32], but there is much more to be done. As information extraction techniques con-tinue to impro ve, one area for future researc h is com bining information extraction with techniques from link mining to help to construct the Seman tic Web, and another area for future researc h is how seman tic and ontological information can help in link mining endea vors.
 As the amoun t of data gro ws and the num ber of sources expands, techniques from link mining can help us disco ver patterns and build useful prediction systems. Link mining researc h holds promise for man y di eren t areas, including commercial and business enterprises, personal information managemen t, web searc h and retriev al, medicine and bio-informatics, and law and securit y enforcemen t. However, as cautioned by Sweeney [106], as we dev elop this technol-ogy , priv acy and information-access con trol issues and policy must be considered, not just as an afterthough t, but as an integral part of the solution. More and more domains of interest today are best describ ed as a link ed collection or net work of interrelated heteroge-neous objects. Data mining algorithms have typically ad-dressed the disco very of patterns in collections of IID in-stances. Link mining is an emerging area within data min-ing that is focused on nding patterns in data by exploiting and explicitly modeling the links among the data instances. We have surv eyed sev eral of the more well studied link min-ing tasks: link-based object ranking, link-based object clas-si cation, group detection, entity resolution, link predic-tion, subgraph disco very, graph classi cation, and genera-tive mo dels for graphs. These represen t some of the common threads emerging from a variet y of elds that are exploring this exciting and rapidly expanding eld.
 Thanks to the studen ts in the LINQs group at UMD, esp e-cially Indra jit Bhattac hary a, Mustafa Bilgic, and Prith vi-raj Sen for their input. This work has been supp orted by the National Science Foundation (gran ts #0530971 and #0438866), with additional supp ort from the National Geospa-tial Intelligence Agency . [1] J. Adibi, H. Chalupsky , M. Grob elnik, N. Milic-[2] J. Adibi, H. Chalupsky , E. Melz, and A. Valen te. The [3] J. Adibi, M. Grob elnik, D. Mladenic, and P. Pan-[4] R. Agra wal and R. Srik ant. Fast algorithms for mining [5] E. M. Airoldi and K. M. Carley . Sampling algorithms [6] R. Anan thakrishna, S. Chaudh uri, and V. Gan ti. [7] A. L. Barab asi and R. Alb ert. Emergence of scaling in [8] K. Bharat and M. R. Henzinger. Impro ved algorithms [9] I. Bhattac hary a and L. Geto or. Iterativ e record link age [10] I. Bhattac hary a and L. Geto or. Entity resolution in [11] I. Bhattac hary a and L. Geto or. A Laten t diric hlet [12] P. Bonacic h. Power and cen tralit y: A family of mea-[13] S. P. Borgatti and M. G. Everett. Mo dels of core / pe-[14] P. J. Carrington, J. Scott, and S. Wasserman. Models [15] D. Chakrabarti. Tools for Large Graph Mining . PhD [16] S. Chakrabarti. Mining the Web . Morgan Kaufman, [17] S. Chakrabarti, B. Dom, D. Gibson, J. Klein berg, [18] S. Chakrabarti, B. Dom, and P. Indyk. Enhanced hy-[19] R. Chellappa and A. Jain. Markov random elds: the-[20] D. Cohn and H. Chang. Learning to probabilistically [21] D. Cohn and T. Hofmann. The missing link -a proba-[22] D. J. Cook and L. B. Holder. Substructure disco v-[23] D. J. Cook and L. B. Holder. Graph-based data min-[24] M. Cra ven, D. DiP asquo, D. Freitag, A. McCallum, [25] A. Culotta and A. McCallum. Join t deduplication of [26] G. V. Cyb enk o and J. Sriv asta va. SIAM Workshop on [27] L. Dehasp e, H. Toivonen, and R. King. Finding fre-[28] T. Dietteric h, L. Geto or, and K. Murph y. ICML Work-[29] C. Ding, X. He, P. Husbands, H. Zha, and H. D. Si-[30] C. H. Q. Ding. Spectral clustering, 2004. [31] A. Doan, P. Domingos, and A. Y. Halevy . Learning to [32] A. Doan, J. Madha van, P. Domingos, and A. Halevy . [33] P. Domingos and M. Ric hardson. Mark ov logic: A uni-[34] X. Dong, A. Halevy , and J. Madha van. Reference rec-[35] S. Donoho, T. Dybala, M. Grob elnik, N. Milic-[36] S. Dzeroski and H. Blo ckeel. KDD Workshop on Multi-[37] S. Dzeroski and H. Blo ckeel. KDD Workshop on Multi-[38] S. Dzeroski and N. Lavrac, editors. Relational Data [39] S. Dzeroski, L. D. Raedt, and S. Wrob el. KDD Work-[40] R. Feldman. Link analysis: Curren t state of the art, [41] O. Frank and K. Nowic ki. Exploratory statistical anal-[42] T. Fran tz and K. M. Carley . A formal characterization [43] L. Freeman. Cen tralit y in social net works: Conceptual [44] T. G X artner. Exp onen tial and geometric kernels for [45] T. G X artner. A surv ey of kernels for structured data. [46] L. Geto or. Link mining: a new data mining challenge. [47] L. Geto or, N. Friedman, D. Koller, and B. Task ar. [48] L. Geto or and D. Jensen. AAAI Workshop on Learn-[49] L. Geto or and D. Jensen. IJCAI Workshop on Learn-[50] D. Gibson, J. Klein berg, and P. Ragha van. Inferring [51] T. H. Haveliw ala. Topic-sensitiv e PageRank. In In-[52] M. Huisman and T. A. B. Snijders. Statistical analysis [53] R. Hummel and S. Zuc ker. On the foundations of [54] A. Inokuc hi, T. Washio, and H. Moto da. An Apriori-[55] G. Jeh and J. Widom. SimRank: A measure of [56] G. Jeh and J. Widom. Scaling personalized web searc h. [57] D. Jensen. Statistical challenges to inductiv e inference [58] D. Jensen and H. Goldb erg. AAAI Fall Symp osium on [59] D. V. Kalashnik ov, S. Mehrotra, and Z. Chen. Exploit-[60] H. Kashima and A. Inokuc hi. Kernels for graph classi-[61] C. Kemp, T. L. Griths, and J. B. Tenen baum. Dis-[62] N. Ketk ar, L. Holder, and D. Cook. Comparison [63] R. D. King, S. H. Muggleton, A. Sriniv asan, and [64] J. Klein berg. Authoritativ e sources in a hyperlink ed [65] A. Knobb e and D. van der Wallen. ECML/PKDD [66] J. N. Kok and T. Washio. ECML/PKDD Workshop [67] J. Kubica, A. Mo ore, D. Cohn, and J. Schneider. [68] J. Kubica, A. Mo ore, and J. Schneider. Tractable [69] J. Kubica, A. Mo ore, J. Schneider, and Y. Yang. [70] M. Kuramo chi and G. Karypis. Frequen t subgraph [71] J. La ert y, A. McCallum, and F. Pereira. Conditional [72] N. Lavra c and S. Dzeroski. Inductive Logic Program-[73] R. Lemp el and S. Moran. The stochastic approac h for [74] X. Li, P. Morie, and D. Roth. Seman tic integration in [75] D. Lib en-No well and J. Klein berg. The link predic-[76] Q. Lu and L. Geto or. Link-based classi cation. In In-[77] A. Madc he and S. Staab. Ontology learning for the [78] T. Matsuda, T. Horiuc hi, H. Moto da, and T. Washio. [79] S. Muggleton, editor. Inductive Logic Programming . [80] J. Neville and D. Jensen. Iterativ e classi cation in rela-[81] J. Neville and D. Jensen. Lev eraging relational auto-[82] M. E. J. Newman. Detecting comm unit y structure in [83] A. Y. Ng, A. X. Zheng, and M. I. Jordan. Link anal-[84] A. Y. Ng, A. X. Zheng, and M. I. Jordan. Stable algo-[85] S. Nijssen, T. Meinl, and G. Karypis. ECML/PKDD [86] K. Nowic ki and T. A. B. Snijders. Estimation and pre-[87] H.-J. Oh, S. H. My aeng, and M.-H. Lee. A practi-[88] J. O'Madadhain, J. Hutc hins, and P. Sm yth. Predic-[89] J. O'Madadhain and P. Sm yth. EventRank: A frame-[90] J. O'Madadhain, P. Sm yth, and L. Adamic. Learn-[91] L. Page, S. Brin, R. Mot wani, and T. Winograd. The [92] H. Pasula, B. Marthi, B. Milc h, S. Russell, and I. Sh-[93] A. Popescul and L. H. Ungar. Statistical relational [94] L. D. Raedt and T. Washio. ECML/PKDD Workshop [95] D. Ra ei and A. O. Mendelzon. What is this page [96] C. Ramakrishnan, W. Milnor, M. Perry , and A. Sheth. [97] M. Rattigan and D. Jensen. The case for anomalous [98] M. Ric hardson and P. Domingos. The Intelligen t [99] A. Rosenfeld, R. Hummel, and S. Zuc ker. Scene lab el-[100] T. Senator. Link mining applications: Progress and [101] L. Singh, L. Geto or, and L. Licamele. Pruning social [102] P. Singla and P. Domingos. Multi-relational record [103] D. Skillicorn and K. Carley . SIAM Workshop on Link [104] A. Sriv asta va, D. Barbara, H. Kargupta, and V. Ku-[105] J. Sun, H. Qu, D. Chakrabarti, and C. Faloutsos. [106] L. Sweeney . Priv acy-enhanced linking. SIGKDD Ex-[107] B. Task ar, P. Abb eel, and D. Koller. Discriminativ e [108] B. Task ar, M.-F. Wong, P. Abb eel, and D. Koller. Link [109] J. R. Tyler, D. M. Wilkinson, and B. A. Hub erman. [110] X. Wang, N. Mohan ty, and A. McCallum. Group and [111] S. Wasserman. Conformit y of two sociometric rela-[112] S. Wasserman and K. Faust. Social Network Analy-[113] D. J. Watts and S. H. Strogatz. Collectiv e dynamics [114] S. White and P. Sm yth. Algorithms for estimating rel-[115] A. P. Wolfe and D. Jensen. Pla ying multiple roles: [116] X. Yan and J. Han. gSpan: Graph-based substructure [117] K. Yoshida, H. Moto da, and N. Indurkh ya. Graph-
