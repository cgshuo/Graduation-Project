 Relation extraction is a fundamental step in many natural language processing applications such as learning ontologies from texts (Buitelaar et al., 2005) and Question Answering (Pasca and Harabagiu, 2001).

The most common approach for acquiring con-cepts, instances and relations is to harvest semantic knowledge from texts. These techniques have been largely explored and today they achieve reasonable accuracy. Harvested lexical resources, such as con-cept lists (Pantel and Lin, 2002), facts (Etzioni et al., 2002) and semantic relations (Pantel and Pen-nacchiotti, 2006) could be then successfully used in different frameworks and applications.

The state of the art technology for relation extrac-tion primarily relies on pattern-based approaches (Snow et al., 2006). These techniques are based on the recognition of the typical patterns that express a particular relation in text (e.g.  X  X  such as Y X  usually expresses an is-a relation). Yet, text-based algorithms for relation extraction, in particular pattern-based algorithms, still suffer from a number of limitations due to complexities of natural lan-guage, some of which we describe below.

Irrelevant relations. These are valid relations that are not of interest in the domain at hand. For example, in a political domain,  X  X ondoleezza Rice is a football fan X  is not as relevant as  X  X ondoleezza Rice is the Secretary of State of the United States X  . Irrelevant relations are ubiquitous, and affect ontol-ogy reliability, if used to populate it, as the relation drives the wrong type of ontological knowledge. Erroneous or false relations. These are particu-larly harmful, since they directly affect algorithm precision. A pattern-based relation extraction algorithm is particularly likely to extract erroneous relations if it uses generic patterns , which are defined in (Pantel and Pennacchiotti, 2006) as broad coverage, noisy patterns with high recall and low precision (e.g.  X  X  of Y X  for part-of relation). Harvesting algorithms either ignore generic patterns (Hearst, 1992) (affecting system recall) or use man-ually supervised filtering approaches (Girju et al., 2006) or use completely unsupervised Web-filtering methods (Pantel and Pennacchiotti, 2006). Yet, these methods still do not sufficiently mitigate the problem of erroneous relations.
 Background knowledge . Another aspect that makes relation harvesting difficult is related to the nature of semantic relations: relations among enti-ties are mostly paradigmatic (de Saussure, 1922), and are usually established in absentia (i.e., they are not made explicit in text). According to Eco X  X  posi-tion (Eco, 1979), the background knowledge (e.g.  X  X ersons are humans X  ) is often assumed by the writer, and thus is not explicitly mentioned in text. In some cases, such widely-known relations can be captured by distributional similarity techniques but not by pattern-based approaches.
 Metaphorical language . Even when paradigmatic relations are explicitly expressed in texts, it can be very difficult to distinguish between facts and metaphoric usage (e.g. the expression  X  X y mind is a pearl X  occurs 17 times on the Web, but it is clear that mind is not a pearl , at least from an ontological perspective).

The considerations above outline some of the dif-ficulties of taking a purely lexico-syntactic approach to relation extraction. Pragmatic issues ( background knowledge and metaphorical language ) and onto-logical issues ( irrelevant relation ) can not be solved at the syntactic level. Also, erroneous relations can always arise. These considerations lead us to the intuition that extraction can benefit from imposing some additional constraints.

In this paper, we integrate Espresso with a lex-ical distribution technique modeling semantic co-herence through semantic domains (Magnini et al., 2002). These are defined as common discourse top-ics which demonstrate lexical coherence, such as E
CONOMICS or P OLITICS . We explore whether se-mantic domains can provide the needed additional constraints to mitigate the acceptance of erroneous relations. At the lexical level , semantic domains identify clusters of (domain) paradigmatically re-lated terms. We believe that the main advantage of adopting semantic domains in relation extraction is that relations are established mainly among terms in the same Domain, while concepts belonging to dif-ferent fields are mostly unrelated (Gliozzo, 2005), as described in Section 2. For example, in a chem-istry domain, an is-a will tend to relate only terms of that domain (e.g., nitrogen is-a element ), while out-of-domain relations are likely to be erroneous e.g., driver is-a element .
 By integrating pattern-based and distributional ap-proaches we aim to capture the two characteristic properties of semantic relations:  X  Syntagmatic properties : if two terms X and  X  Domain properties : if a semantic relation In Section 2, we develop the concept of semantic do-main and an automatic acquisition procedure based on Latent Semantic Analysis (LSA) and we provide empirical evidence of the connection between rela-tion extraction and domain modelling. Section 3 de-scribes the Espresso system. Section 4 concerns our integration of semantic domains and Espresso. In Section 5, we evaluate the impact of our LSA do-main restriction module on improving a state of the art relation extraction system. In Section 6 we draw some interesting research directions opened by our work. Semantic domains are common areas of human discussion, which demonstrate lexical coherence, (Magnini et al., 2002). At the lexical level , se-mantic domains identify clusters of (domain) related lexical-concepts, i.e. sets of highly paradigmatically related words also known as Semantic Fields.
In the literature, semantic domains have been inferred from corpora by adopting term clustering methodologies (Gliozzo, 2005), and have been used for several NLP tasks, such as Text Categorization and Ontology Learning (Gliozzo, 2006).
 Semantic domains can be described by Domain Models (DMs) (Gliozzo, 2005). A DM is a com-putational model for semantic domains, that repre-sents domain information at the term level, by defin-ing a set of term clusters. Each cluster represents a Semantic Domain, i.e. a set of terms that often co-occur in texts having similar topics. A DM is repre-sented by a k  X  k 0 rectangular matrix D , containing the domain relevance for each term with respect to each domain, as illustrated in Table 1.

DMs can be acquired from texts in a completely unsupervised way by exploiting a lexical coherence assumption. To this end, term clustering algorithms can be used with each cluster representing a Se-mantic Domain. The degree of association among terms and clusters, estimated by the learning algo-rithm, provides a domain relevance function. For our experiments we adopted a clustering strategy based on LSA (Deerwester et al., 1990), following the methodology described in (Gliozzo, 2005). The input of the LSA process is a term-by-document ma-trix T reporting the term frequencies in the whole corpus for each term. The matrix is decomposed by means of a Singular Value Decomposition (SVD), identifying the principal components of T . This op-eration is done off-line, and can be efficiently per-formed on large corpora. SVD decomposes T into three matrixes T ' V X  k 0 U T where  X  k 0 is the di-agonal k  X  k matrix containing the highest k 0  X  k eigenvalues of T on the diagonal, and all the re-maining elements are 0. The parameter k 0 is the dimensionality of the domain and can be fixed in advance 1 . Under this setting we define the domain matrix D LSA 2 as where I N is a diagonal matrix such that i N i , i = Once a DM has been defined by the matrix D , the Domain Space is a k 0 dimensional space, in which both texts and terms are associated to Domain Vec-tors (DVs), i.e. vectors representing their domain relevancies with respect to each domain. The DV ~ t for the term t i  X  V is the i th row of D , where V = { t 1 , t 2 , . . . , t k } is the vocabulary of the corpus. The domain similarity  X  d ( t i , t j ) among terms is then estimated by the cosine among their corresponding DVs in the Domain Space, defined as follows: Figure 1: Probability of finding paradigmatic rela-tions
The main advantage of adopting semantic do-mains for relation extraction is that they allow us to impose a domain restriction on the set of candidate pairs of related terms. In fact, semantic relations can be established mainly among terms in the same Se-mantic Domain, while concepts belonging to differ-ent fields are mostly unrelated.

To show the validity of the domain restriction we conducted a preliminary experiment, contrasting the probability for two words to be related in Word-Net (Magnini and Cavagli ` a, 2000) with their domain similarity, measured in the Domain Space induced from the British National Corpus. In particular, for each couple of words, we estimated the domain sim-ilarity, and we collected word pairs in sets charac-terized by different ranges of similarity (e.g. all the pairs between 0.8 and 0.9). Then we estimated the probability of each couple of words in different sets to be linked by a semantic relation in WordNet, such as synonymy, hyperonymy, co-hyponymy and do-main in WordNet Domains (Magnini et al., 2002). Results in Figure 1 show a monotonic crescent rela-tion between these two quantities. In particular the probability for two words to be related tends to 0 when their similarity is negative (i.e., they are not domain related), supporting the basic hypothesis of this work. In Section 4 we will show that this prop-erty can be used to improve the overall performances of the relation extraction algorithm. Espresso (Pantel and Pennacchiotti, 2006) is a corpus-based general purpose, broad, and accurate relation extraction algorithm requiring minimal su-pervision, whose core is based on the framework adopted in (Hearst, 1992). Espresso introduces two main innovations that guarantee high performance: (i) a principled measure for estimating the reliabil-ity of relational patterns and instances; (ii) an algo-rithm for exploiting generic patterns . Generic pat-terns are broad coverage noisy patterns (high recall and low precision), e.g.  X  X  of Y X  for the part-of re-lation. As underlined in the introduction, previous algorithms either required significant manual work to make use of generic patterns, or simply ignore them. Espresso exploits an unsupervised Web-based filtering method to detect generic patterns and to dis-tinguish their correct and incorrect instances.
Given a specific relation (e.g. is-a ) and a POS-tagged corpus, Espresso takes as input few seed instances (e.g. nitrogen is-a element ) or seed surface patterns (e.g. X/NN such/JJ as/IN Y/NN ). It then incrementally learns new patterns and instances by iterating on the following three phases, until a specific stop condition is met (i.e., new patterns are below a pre-defined threshold of reliability).
Pattern Induction . Given an input set of seed instances I , Espresso infers new patterns connecting as many instances as possible in the given corpus. To do so, Espresso uses a slight modification of the state of the art algorithm described in (Ravichandran and Hovy, 2002). For each instance in input, the sentences containing it are first retrieved and then generalized, by replacing term expressions with a terminological label using regular expressions on the POS-tags. This generalization allows to ease the problem of data sparseness in small corpora. Unfortunately, as patterns become more generic, they are more prone to low precision.

Pattern Ranking and Selection . Espresso ranks all extracted patterns using a reliability measure r  X  and discards all but the top-k P patterns, where k is set to the number of patterns from the previous iter-ation plus one. r  X  captures the intuition that a reli-able pattern is one that is both highly precise and one that extracts many instances. r  X  is formally defined as the average strength of association between a pat-tern p and each input instance i in I , weighted by the reliability r  X  of the instance i (described later): where pmi ( i, p ) is the pointwise mutual information (pmi) between i and p (estimated with Maximum Likelihood Estimation), and max pmi is the maxi-mum pmi between all patterns and all instances. Instance Extraction, Ranking, Selection . Espresso extracts from the corpus the set of in-stances I matching the patterns in P . In this phase generic patterns are detected, and their instances are filtered, using a technique described in detail in (Pantel and Pennacchiotti, 2006). Instances are then ranked using a reliability measure r  X  , similar to that adopted for patterns. A reliable instance should be highly associated with as many reliable patterns as possible: Finally, the best scoring instances are selected for the following iteration. If the number of extracted instances is too low (as often happens in small corpora) Espresso enters an expansion phase, in which instances are expanded by using web based and syntactic techniques.
The output Espresso is a list of instances i = ( X, Y )  X  I , ranked according to r  X  ( i ) . This score accounts for the syntagmatic similarity be-tween X and Y , i.e., how strong is the co-occurrence of X and Y in texts with a given pattern p .
A key role in the Espresso algorithm is played by the reliability measures. The accuracy of the whole extraction process is in fact highly sensitive to the ranking of patterns and instances because, at each iteration, only the best scoring entities are re-tained. For instance, if an erroneous instance is se-lected after the first iteration, it could in theory af-fect the following pattern extraction phase and cause drift in consequent iterations. This issue is criti-cal for generic patterns (where precision is still a problem, even with Web-based filtering), and could sometimes also affect non-generic patterns.

It would be then useful to integrate Espresso with a technique able to retain only very precise in-stances, without compromising recall. As syntag-matic strategies are already in place, another strategy is needed. In the next Section, we show how this can be achieved using instance domain information. The strategy of integrating syntagmatic and do-main information has demonstrated to be fruitful in many NLP tasks, such as Word Sense Disambigua-tion and open domain Ontology Learning (Gliozzo, 2006). According to the structural view (de Saus-sure, 1922), both aspects contribute to determine the linguistic value (i.e. the meaning) of words: the meaning of lexical constituents is determined by a complex network of semantic relations among words. This suggests that relation extraction can benefit from accounting for both syntagmatic and domain aspects at the same time.

To demonstrate the validity of this claim we can explore many different integration schemata. For ex-ample we can restrict the search space (i.e. the set of candidate instances) to the set of all those terms be-longing to the same domain. Another possibility is to exploit a similarity metric for domain relatedness to re-rank the output instances I of Espresso, hoping that the top ranked ones will mostly be those which are correct. One advantage of this latter method-ology is that it can be applied to the output of any relation extraction system without any modification to the system itself. In addition, this methodology can be evaluated by adopting standard Information Retrieval (IR) measures, such as mean average pre-cision (see Section 5). Because of these advantages, we decided to adopt the re-ranking procedure.
The procedure is defined as follows: each in-stance extracted by Espresso is assigned a Domain Similarity score  X  d ( X, Y ) estimated in the domain space according to Equation 2; a higher score is then assigned to the instances that tend to co-occur in the same documents in the corpus. For exam-ple, the candidate instances ethanol is-a nonaro-matic alcohol has a higher score than ethanol is-a something , as ethanol and alcohol are both from the chemistry domain, while something is a generic term and is thus not associated to any domain.

Instances are then re-ranked according to  X  ( X, Y ) , which is used as the new index of reliability instead of the original reliability scores of Espresso. In Subsection 5.2 we will show that the re-ranking technique improves the original reliability scores of Espresso. In this Section we evaluate the benefits of applying the domain information to relation extraction (ESP-LSA), by measuring the improvements of Espresso due to domain based re-ranking. 5.1 Experimental Settings As a baseline system, we used the ESP-implemen-tation of Espresso described in (Pantel and Pennac-chiotti, 2006). ESP-is a fully functioning Espresso system, without the generic pattern filtering module (ESP+). We decided to use ESP-for two main rea-sons. First, the manual evaluation process would have been too time consuming, as ESP+ extracts thousands of relations. Also, the small scale experi-ment for EXP-allows us to better analyse and com-pare the results.

To perform the re-ranking operation, we acquired a Domain Model from the input corpus itself. To this aim we performed a SVD of the term by document matrix T describing the input corpus, indexing all the candidate terms recognized by Espresso.
As an evaluation benchmark, we adopted the same instance sets extracted by ESP-in the ex-periment described in (Pantel and Pennacchiotti, 2006). We used an input corpus of 313,590 words, a college chemistry textbook (Brown et al. 2003), pre-processed using the Alembic Workbench POS-tagger (Day et al. 1997). We considered the fol-lowing relations: is-a , part-of , reaction (a relation of chemical reaction among chemical entities) and production (a process or chemical element/object producing a result). ESP-extracted 200 is-a , 111 part-of , 40 reaction and 196 production instances. 5.2 Quantitative Analysis The experimental evaluation compared the accuracy of the ranked set of instances extracted by ESP-with the re-ranking produced on these instances by ESP-LSA. By analogy to IR, we are interested in ex-tracting positive instances (i.e. semantically related words). Accordingly, we utilize the standard defi-nitions of precision and recall typically used in IR . Table 2 reports the Mean Average Precision obtained by both ESP-and ESP-LSA on the extracted rela-tions, showing the substantial improvements on all the relations due to domain based re-ranking. Table 2: Mean Average Precision reported by ESP-and ESP-LSA
Figures 2, 3, 4 and 5 report the precision/recall curves obtained for each relation, estimated by mea-suring the precision / recall at each point of the ranked list. Results show that precision is very high especially for the top ranked relations extracted by ESP-LSA. Precision reaches the upper bound for the top ranked part of the part-of relation, while it is close to 0.9 for the is-a relation. In all cases, the precision reported by the ESP-LSA system surpass those of the ESP-system at all recall points. 5.3 Qualitative Analysis Table 3 shows the best scoring instances for ESP-and ESP-LSA on the evaluated relations. Results Figure 2: Syntagmatic vs. Domain ranking for the is-a relation Figure 3: Syntagmatic vs. Domain ranking for the produce relation show that ESP-LSA tends to assign a much lower score to erroneous instances, as compared to the original Espresso reliability ranking. For exam-ple for the part-of relation, the ESP-ranks the er-roneous instance geometry part-of ion in 23th po-sition, while ESP-LSA re-ranks it in 92nd. In this case, a lower score is assigned because ge-ometry is not particularly tied to the domain of chemistry. Also, ESP-LSA tends to penalize in-stances derived from parsing/tokenization errors: Figure 4: Syntagmatic vs. Domain ranking for the part-of relation Figure 5: Syntagmatic vs. Domain ranking for the react relation ] binary hydrogen compounds hydrogen react ele-ments is 16th for ESP-, while in the last tenth of the ESP-LSA. In addition, out-of-domain relations are successfully interpreted by ESP-LSA. For ex-ample, the instance sentences part-of exceptions is a possibly correct relation, but unrelated to the do-main, as an exception in chemistry has nothing to do with sentences . This instance lies at the bottom of the ESP-LSA ranking, while is in the middle of ESP-list. Also, low ranked and correct relations ex-tracted by ESP-emerge with ESP-LSA. For exam-ple, magnesium metal react elemental oxygen lies at the end of ESP-rank, as there are not enough syntag-matic evidence (co-occurrences) that let the instance emerge. The domain analysis of ESP-LSA promotes this instance to the 2nd rank position. However, in few cases, the strategy adopted by ESP-LSA tends to promote erroneous instances (e.g. high voltage produce voltage ). Yet, results show that these are isolated cases. In this paper, we propose the domain restriction hy-pothesis , claiming that semantically related terms extracted from a corpus tend to be semantically co-herent. Applying this hypothesis, we presented a new method to improve the precision of pattern-based relation extraction algorithms, where the inte-gration of domain information allows the system to filter out many irrelevant relations, erroneous can-didate pairs and metaphorical language relational expressions, while capturing the assumed knowl-edge required to discover paradigmatic associations among terms. Experimental evidences supports this claim both qualitatively and quantitatively, opening a promising research direction, that we plan to ex-plore much more in depth. In the future, we plan to compare LSA to other term similarity measures, to train the LSA model on large open domain cor-pora and to apply our technique to both generic and specific corpora in different domains. We want also to increase the level of integration of the LSA tech-nique in the Espresso algorithm, by using LSA as an alternative reliability measure at each iteration. We will also explore the domain restriction property of semantic domains to develop open domain ontology learning systems, as proposed in (Gliozzo, 2006).
The domain restriction hypothesis has potential to greatly impact many applications where match-ing textual expressions is a primary component. It is our hope that by combining existing ranking strate-gies in applications such as information retrieval, question answering, information extraction and doc-ument classification, with knowledge of the coher-ence of the underlying text, one will see significant improvements in matching accuracy. Thanks to Roberto Basili for his precious comments, suggestions and support. Alfio Gliozzo was sup-ported by the OntoText project, funded by the Au-tonomous Province of Trento under the FUP-2004, and the FIRB founded project N.RBIN045PXH.

