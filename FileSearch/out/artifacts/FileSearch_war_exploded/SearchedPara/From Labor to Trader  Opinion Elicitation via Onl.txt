 We often care about people X  X  degrees of belief about certain events: e.g. causality between an action and the outcomes, odds distribu-tion among the outcome of a horse race and so on. It is well recog-nized that the best form to elicit opinion from human is probability distribution instead of simple voting, because the form of distri-bution retains the delicate information that an opinion expresses. In the past, opinion elicitation has relied on experts, who are ex-pensive and not always available. More recently, crowdsourcing has gained prominence as an inexpensive way to get a great deal of human input. However, traditiona l crowdsourcing has primarily focused on issuing very simple (e.g. binary decision) tasks to the crowd. In this paper, we study how to use crowds for Opinion Elic-itation . There are three major challenges to eliciting opinion infor-mation in the form of probability distributions: a ) how to measure the quality of distribution; b ) how to aggregate the distributions; and, c ) how to strategically implement such a system.

To address these challenges, we design and implement COPE (C rowd-powered OP inion E licitation market). COPE models crowd-sourced work as a trading market, where the  X  X orkers X  behave like  X  X raders X  to maximize their profit by presenting their opinion. Among the innovative features in this system, we design COPE updating to combine the multiple elicited distributions following a Bayesian scheme. Also to provide more flexibility while running COPE , we propose a series of efficient algorithms and a slope based strategy to manage the ending condition of COPE . We then demon-strate the implementation of COPE and report experimental results running on real commercial platform to demonstrate the practical value of this system.
 H.2.8 [ DATABASE MANAGEMENT ]: Database Applications X  Data mining ; H.1.2 [ MODELS AND PRINCIPLES ]: User/Machine Systems X  Human information processing Crowdsourcing; Human Computation; Social Media; Market Figure 1: Example of Opinion Elicitation of five participants over two
The application of crowdsourcing has ushered in a brand new age of human-computer collaboration. Online labor markets, such as Amazon MTurk 1 ,oDesk 2 , enable large scale crowdsourcing by providing access to human computation  X  X orkers X  as well as a pro-grammable infrastructure. The basic assumption in crowdsourcing is that the tasks must be broken down into simple units, such as multiple-choice questions. There is considerable skill in breaking down a complex task into simple units that can be crowd sourced.
Often, we may benefit from getting a richer input from work-ers. For a very simple example, consider the question  X  X ow many inches of snow will fall tomorrow in city X? X  We could discretize this, say into integers, and ask each worker to pick a snipe number as prediction. But such an approach will miss the nuance that the worker predicts 3-6 inches, and chose to predict 4 inches because a single discrete choice was required. For this worker, 6 inches is a likely outcome, while 7 inches is unlikely, but the prediction of 4 inches does not tell us this. In short, simple voting does not suffice because it coarsens the distribution and leads to an extrem-ized opinion expression. What we would like is a framework for eliciting a probability distribution from a worker, and aggregating this with similar distributions obtained from other workers. We call such distributions as opinions .

Opinion is a concept of wide extension, which refers to numer-ical statements expressing an individual X  X  degrees of belief about certain events [ 17]. Rooted from this definition are such things as prior, posterior, structural distribution, as well as additive probabil-ity and belief functions, which can all be expressed in a form of distribution. Such opinion information can then be used not just frivolous pursuits, such as predicting amount of snow, but also as a www.mturk.com www.odesk.com foundation for more advanced decision making procedures and to construct more sophisticated models for risk analysis [ 4].
In this paper, we focus on exploiting the intrinsic human abil-ity to estimate an opinion, and develop a crowdsourcing frame-work for this purpose. Specifically, given an event space  X  X orkers X  are expected to contribute their frank opinion r forms of probability distribution. When the process closes accord-ing to certain conditions, the aggregated probability distribution is the elicited consensus opinion.

E XAMPLE 1. In the standard Probabilistic Risk Analysis [ 4], during the construction of the Event Trees, one significant step is to provide an accura te probability distribu tion among many pos-sible outcomes. For certain ca ses, such probab ility could be ob-tained analytically(e.g. failure probability in Circuit Design), but for many sociological or business-related situations, the distribu-tions have to be gathered from a group of related individuals [ 12]. For example, the Council of Government plans to change the ar-rangement of public holidays, and before they make the decision, the council board expects a prior distribution among all possible outcomes, e.g. less tourism, more tourism or simply neutral to the alternation. Thus, a crowdsourced application could help to collect the distributed beliefs efficiently.

E XAMPLE 2. Another type of applications appears in the causal-ity structure determination, which is widely utilized in building Probabilistic Graphical Models [ 22]. Given an event, many indi-viduals are invited to describe a set of possible causes for the out-come, along with their probabilistic di stributions. Such distribution information can help to build more sophisticated quantitative mod-els such as Bayesian Networks and so on. Figure 1 illustrates an example where 5 expert participants elaborate their probabilistic estimation on two environmental variables B-3-600 and B-3-300 in terms of uniform distribution on selected range over a value space. Then a set of sophisticated inference can be conducted [ 4].
There is a crucial challenge for such Opinion Elicitation on cur-rent crowdsourcing platforms: opinion distribution does not have a  X  X round truth X  with ordinary meaning. Formally, suppose for indi-vidual i , the intrinsic opinion for her on an m outcomes event is a probability distribution d = { d 1 ,d 2 ,...,d m } , but during the elic-itation process, her reported estimation might be r = { r r } = d . The reason of insincerity might be carelessness or indif-ference: since the  X  X orkers X  from online labor markets are essen-tially money-driven, sloppiness naturally appears when their per-formance cannot be measured and eventually does not matter. In such cases, we cannot benefit from the correctness based payoff mechanism currently popular on crowdsourcing platforms.
The absence of ground truth knowledge has previously been ad-dressed, most famously in the ESP game [ 1], where the payoff de-pends on matching with a partner (or another worker). The basic idea is that if two (or more) individuals independently think of a label for an image, that label is likely to be a good choice. Inappro-priate labels are unlikely to qualify. As presented, this is a discrete scheme, there either is a match or there isn X  X . We would like to extend this idea to find a continuous function to score how well probability distributions match. Furthermore, rather than match-ing between arbitrarily paired individuals, we do so between each individual and the group  X  X onsensus X .

To address these needs, we propose a  X  X arket X  framework for crowdsourcing. Workers trade in this market to earn as high a profit as they can. The concept of variable pay for work is al-ready accepted and widely practiced  X  many Human Intelligence Tasks (HITs) are offered with a base pay and a (quality-dependent) bonus, with the bonus sometimes being substantially more than the base pay. The quality determin ation for the bonus is sometimes subjective. We propose instead to have the bonus be determine by the market in a manner that is clearly defined, completely transpar-ent, and reflective of opinion correctness (in a manner we will for-mally specify below). We implement these ideas in COPE (C rowd-powered OP inion E licitation market). The base pay is provided to workers in the form of seed capital that they invest in an opinion elicitation market with their opinion. We use Bayesian updating, beginning with our initial guess as the prior, to obtain a posterior distribution that reflects the weighted opinions of all the traders in the market. When the task ends, the payoff for each trader is proportional to her contributed modification from the prior to the posterior. Traders that have a zero, or negative contribution, re-ceive no payoff (or a small fixed payoff). In other words, traders have an economic incentive to align their opinion with what they believe will be the consensus direction. Sometimes, individuals may hold opinions that they know are different from the general view. In most opinion elicitation scenarios, we are less interested in such idiosyncratic opinions and more interested in the consensus opinion. The economic incentives of our scheme align well, even for such idiosyncratic individuals, motivating them to express what they truly believe to be popular opinion.

In this paper, we have made the following contributions:
The rest of the paper is organized as follows. In Section 2 we present a framework overview about the COPE system. In Sec-tion 3 we formally present the design of COPE with necessary pre-liminaries. In Section 3 we present the algorithmic details about the COPE system and a set of core algorithms. In Section 4 we introduce the mechanism of running the system of COPE . In Sec-tion 5 we elaborate on the non-trivial implementation of COPE on Amazon MTurk. In Section 6 we illustrate the experimental re-sults. Then in Section 7 we introduce the recent related work. We conclude the paper with discussion in Section 8. In this section, we present a system overview of COPE (Figure 2). Its three major components are introduced one by one as follows. Pre-market Building
A running market entails traders and trading capital. In order to turn a crowdsourcing  X  X orker X  into an informative  X  X rader X , the Pre-market Building module is designed. First, each  X  X orker X  is given a set of normal decision making tasks(termed as deposit tasks ), e.g. sentiment analysis of short textual messages, image tagging, simple ranking according to image content and so on. After the  X  X orker X  finishes these tasks, the promised rewards C i is retained and set as the seed capital . Note that the nature of these tasks will not affect the performance of the market, and these extra crowd-sourced tasks are a by-product from running COPE .

Meanwhile, among the normal crowdsourcing tasks, a set of test-ing tasks, of which we know the true answers, are planted. We then examine a workers responses to these testing tasks to find patterns indicating systematic bias, which helps to calibrate the distribution aggregation afterwards. More details can be found in Section 3.2.2. Market Running
When the traders are prepared, with their seed capital and cate-gorical labels, the COPE is initiated. The system presents to each trader a trading topic, i.e. a set of exclusive outcomes of one ac-tion or possible reasons for one phenomenon, and each trader may specify a distribution among these options. The trader is informed that their later payoff depends on how much their presented answer contributes to the final global distribution of the entire market. The final payoff will be given when the market is closed by the requester or when other conditions are met like Market Bankruptcy . Please refer to Section 3.1.2 for more details about the payment. COPE then receives a report r i from each trader t i ,andthe COPE method is incurred to merge the new reports into the global distribution p . Market Supervision
The market holder, a.k.a. decision maker monitors COPE from the market supervision module, where the overall cost of the mar-ket is calculated whenever a new updating is conducted. We assume that the decision maker is working under the constraint of a patron budget B . She may choose to end COPE when the overall cost ex-ceeds the preset budget. In addition, she is allowed to adopt a slope based running strategy to flexibly decide the terminating condition. More details can be found in Section 4.
In this section, we first present some basic concepts required to define the information market and probability aggregation. Then we formally describe the design of the COPE .
The atomic units that build up the COPE are the traders. A trader in COPE , invests an asset by presenting a report r and gets profit by receiving the payoff depending on the presented report M ( r ) .
Specifically, a trader T i is able to provide a report r as a prob-ability distribution over the event space S of a set of random vari-ables X = { X 1 ,X 2 ,...,X m } . The report r  X  X  belongs to the possible report space P , and a trader T i chooses to present r rather than any other possible report r  X  X  when the correspond-ing payoffs M ( r ) &gt;M ( r ) . That is, a trader will present a report to maximize his/her payoff according to a certain reward rule.
Without loss of generality, we a ssume in this work that all traders in COPE are Risk-neutral Traders , which is commonly utilized in Probabilistic Risk Analysis. This property refers to the traders who have no preference between choices with equal expected pay-offs(profit), neglecting the risk associated to each option. In other words, a Risk-neutral Trader behaves/invests only according to the expected payoffs(profit).
 optional reports r and r and their corresponding payoffs M ( r ) and M ( r ) as two real-valued random variables, a Risk-neutral Trader T i considers r r iff E [ M ( r )] &gt;E [ M ( r )] .Herethe operation indicates preference among actions.

For simplicity, in this paper we use simply the term trader to refer to a Risk-neutral Trader . Note that in the effort of approx-imating market opinion with the mean beliefs of the traders, risk aversion plays a positive role as well as inevitably introducing cer-tain bias [ 33]. We consider more detailed tuning on risk-aversion stimulation as the future work, which can be strategically leveraged by adjusting the payoff function in the section below.
While COPE is running, the market maintains a global probabil-ity distribution p , which combines all previous reports from traders. If the COPE stops at step n ,i.e. n traders have finished their in-vestment by providing reports R = { r 1 ,r 2 ,..., r n } conducts the payoff according to their contributed estimated dis-tribution. In the design of COPE , we first use KL-divergence to measure the distance between two discrete distributions: Let r and u be two probability ma ss functions in a discrete do-main S with a finite or countably infinite number of values. The Kullback-Leibler diverge(KL divergence) between r and u is KL divergence is defined where for any x in space S if r [ x ] &gt; 0 then u [ x ] &gt; 0 .

There is a wide spectrum of distance measurements that can serve to gauge the  X  X ontribution X  from prior distribution p to pos-terior distribution p  X  by a report r i . Considering the scenario of COPE , we prefer KL-divergence(also formally known as relative entropy ) to measure the information gain between two distribu-tions. There are two major reasons: a ) the process of eliciting causality from crowdsourcing traders is an information gaining pro-cess, and KL-divergence is one of the natural practices followed in Bayesian inference or updating [ 22]; b ) in accordance to the measurement of the intrinsic goodness of a report r i (introduced in Section 3.1.3), which is in essence a measure of information en-tropy, the preference of relative entropy seamlessly incorporates the COPE Updating and corresponding payoff .

The payoff to a trader T i considers the relative contribution to the final distribution p from her(measured as KL-divergence D ( r Meanwhile, it is designed to guarantee the honesty of each trader as well. Therefore, we propose the following payoff mechanism which incorporates a non-linear component that is related to the final outcome:
D EFINITION 3(P AYOFF ). Given the market estimation p ,a trader T i , whose proposed report is r i , will receive a payoff M when the market is closed.

C i is the invested capital of T i , and Odd is the preset parameter such that at most a trader could earn Odd  X  C i as payoff.
In Definition 3 we use D ( r i || p ) instead of D ( p || avoid the zero value in r i , which may affect the correctness of the KL-divergence. In addition, to enhance the practical usage, cur-rently we assume the invested capital C i for each trader T same seed capital: C 1 = C 2 = ... = C i = ... = C ,andthe payoff can be thus simplified as
The payoff mechanism in Definition 3 enables COPE to punish careless or wrong traders by confining the rewards in the range of (0 ,Odd  X  C i ] , where the condition for equality is that the report r = p the global posterior distribution. We summarize and provide the following lemma: L EMMA 1(P AYOFF R ANGE ). The range of payoff for trader T is as follow: The maximum equality is observed when r i = p .
 P ROOF . Based on Equation 1, we notice that The inequality in line 6 derives from Jensen X  X  Inequality and the convexity of log(  X  ) function. Thus, we could obtain that where Lemma 1 is proved. And without difficulty, we can observe that the turning point for a no-loss-no-gain investment is Odd D ( r i || p )=1 .

The introduction of KL-divergence as a leveraging parameter in computing the payoff helps the market holder to encourage infor-mative traders. Obviously, this mechanism converts the labor mar-ket into a trader market without introducing real-money gambling settings which constrains the development of information markets in a long list of countries [ 18]. Moreover, currently the design of COPE does not allow traders to forsake the opportunity to become a trader, i.e. that must confront the risk of losing the seed capital . The mechanism where abandonment of risking will be explored as future work.

To reward the traders who contribute reports with more care and honesty, the COPE incorporates the factor sc ( r i ) to evaluate the goodness of the contributed report r i .

D EFINITION 4(G OODNESS ). Given a proposed report r i from trader T i , we define the goodness of the report sc ( r i score according to scoring rule in logarithm form [ 30], i.e.
The definition of goodness sc ( r i ) describes the degree to which the trader tends to present a more extreme distribution(which is more informative) than an even one, which helps the COPE ad-just the incremental update from each new report r i . Specifically, we notice that the value of goodness E ( sc ) is mathematically the entropy of the given report r i , which reflects the amount of new information that brought in by trader T i .

Note that we avoid using a traditional strict scoring rule [ 18]as payoff mechanism mainly for two reasons: 1 ) Strict scoring rules-based mechanisms are mostly suitable for verifiable tasks; and 2 )It is too intricate to explain the sophisticated strict scoring rule to workers from Labor Markets, and even with a explicit explanation, the haste while specifying distribution weakens the rule-oriented calibration to a large extent.

We tentatively present the following conjecture for further ex-ploration:
C ONJECTURE 1. The risk-neutral trader invests honestly under the payoff mechanism in COPE, i.e. Since any linear transformation of existing strict scoring rules is also a strict scoring rule, thus, a light modification of the current payoff mechanism on COPE may validate the above conjecture.
The system of COPE is an integrated market that is built on a general crowdsourcing platform. It receives trades (bets) as elicited distribution from traders and combines them into a global distribu-tion. In this section, we present the design and mechanism of three major technique steps that enables the COPE .
Each trader T i will accomplish several normal crowdsourcing tasks before she/he is entitled to participate into a trading. By injecting probe tasks, whose answers are known beforehand, into normal ones, we could evaluate the bias type of the trader T
After finishing the given batch of normal crowdsourcing tasks, each worker is labeled into one of two categories, namely opti-mistic R o = { r o 1 , r o 2 ,..., r o | R o | } and pessimistic R Algorithm 1: Overall Procedure while Running COPE
Input : Outcome Space S , Market Holder X  X  Prior Distribution
Output : Posterior Distribution p  X  , payoff M i to each trader T 1 Initialization : Set the prior distribution p 0 = u as uniform distribution 2 Pre-market Building : For each trader T i , label it according to his category, calculate the marginal mean  X  o and  X  p according to Equation 12 and 13 3 Market Running : For each trader T i , the Market obtains an discrete distribution r i over the outcome space S 4for each trader T i do 5 adjust the global posterior p  X  according to COPE 6 Post-market :Calculate bounds OR exact Market Cost MC based on Section 4; 7if Bankruptcy conditions are met then 8 stop the market; 9 conduct payoff to each trader T i ; 10 return posterior distribution p  X  ; ..., r p | R p | } . For each category, an arithmetic mean is calculated and set as the estimation of the first moment of that category.
Specifically, for the category of optimistic workers, we have: And for the pessimistic workers, we have:
Note that to achieve higher accuracy from COPE , more cate-gories can be introduced. And the estimated moment values for each category serve as a clue for the following Bayesian scheme distribution updating.
One of the core technique challenges for building the COPE is how it should aggregate the elicited reports from individuals into a universal distribution, while following certain guidance or princi-ples that suits the semantic requirements from the market requester or decision maker. This is a controversial topic that incurs long debates among the community of subjective probability [ 4,11, 12], and two major types of updating schemes, namely Axiomatic and Bayesian both exhibit observable rationales under various updat-ing situations. Therefore, the design of updating scheme should be considered together with the specific application scenario. As mentioned in the introduction, the market holder establishes COPE mainly in order to elicit a distribution for further risk analysis tasks, which implies the existence of a latent decision maker who would conduct an exclusive decision among the possible outcomes. Ac-cording to C. Genest and J. Zidek X  X  conclusion in [ 17], the most ap-propriate method for updating the distribution under such circum-stances should follow the Bayesian scheme with a set of specific constraints. In this section, we present the mechanism of COPE to update the current global distribution p following such a scheme.
In the combining procedure, the current global distribution is treated as the prior distribution, and the aggregated distribution is then treated as the posterior distribution. Following the Bayesian updating scheme, we have following updating expression:
However, in the setting of COPE or other running information market, it is practically impossible for the decision maker to as-sess a full likelihood function Pr( p ) L ( r | p ) . Fortunately, powered by the normal deposit tasks finished by each trader, we could par-tially evaluate their tendency with the estimation of the first mo-ment value of each category. Then we are able to devise the COPE combining method following standard Bayesian scheme.

First we introduce two essential properties that describe a nor-mative combining method within Bayesian scheme, the Unanimity Principle and Compromise Principle .

P ROPERTY 1(U NANIMITY P RINCIPLE ). If the reports are the same, the prior distribution should be same to the posterior distri-bution.
 tribution should reside in the range of the two extreme reports.
It is necessary to follow these two principles in order to design a updating method that confirms with Bayesian Updating. The work in [ 16] studies the expert opinion combination in terms of fore-casting tasks, and the proposed  X  X S-I X  model only entails partial assessment of the forecasters to complete the Bayesian updating. Inspired by this, we design the COPE Updating as follows.
D EFINITION 5( COPE U PDATING ). For one step updating, the posterior distribution is defined as below: and the  X  is the confidence from the decision maker for the extreme values in trader X  X  distribution. where |S| is the size of the possible event space and UB =min Here  X  is called adjusting parameter which helps the decision maker to gauge the mis-calibration or bias of the reporting individuals. Note that since the goodness of a report sc ( r i ) is the entropy of the given report, we can obtain the fact that  X   X  [0 , min with the following lemma.

L EMMA 2. The range of the adjusting parameter  X  is within
P ROOF . Suppose U ( x )= 1 |S| is the probability mass function of a uniform distribution over outcome space S ,and r i is the report vector from trader T i .Then Then according to proof 1, we know that D ( r i || U )  X  0 . Thus we have the following inequality. which indicates that and Lemma 2 is proved. Algorithm 2: Procedure of Computing Market Cost of COPE
Input : current global posterior distribution p , reports from n
Output : total Market Cost MC 1 Initialization : zero-valued vector M with size n ,and
MC =0 2for each r i in R n do 3 compute M i according to Equation 2 ; 4 M [ i ]= M i ; 5 MC += M [ i ] ; 6return MC ;
Then the benefit of introducing COPE Updating method can be observed: the design of COPE naturally satisfies the aforemen-tioned two basic principles. We then claim the following lemma.
L EMMA 3(P ROPERTIES OF COPE ). The COPE updating confirms with the Unanimity Principle and Compromise Principle.
P ROOF . According to Theorem 2.1 in [ 16], an updating strat-egy satisfies the two properties when the value of  X  observes the following condition: the two properties are satisfied.
To establish a COPE , the market holder has to be willing to be a patron with a budget B : when the overall cost of the COPE exceeds this budget, the market has to be closed(termed as bankruptcy ). Of course, the patron could close the market before this, if a suffi-ciently good result has been obtained.

D EFINITION 6(M ARKET C OST ). Given a COPE, the current distribution p , the set of reports from n traders R n = { r } , the Market Cost is defined as the summation of the payoffs from every trader t i ,i.e.

The ending condition for one instance of COPE is that MC ex-ceeds the preset budget B . And when this condition is reached, the market stops accepting any new report and returns to the mar-ket holder with the current global distribution p  X  . This condition has to be checked after every trade report, and can be expensive to compute. In Sec. 4.3 we describe how to do this efficiently.
In this section, we introduce the essential techniques to keep the COPE running. First we introduce the algorithm conducting the COPE Updating Strategy in a batching style. Then we intro-duce the computation of the Market Cost given the set of reports R n = { r 1 ,r 2 ,..., r n } . Moreover, we further introduce an ad-vanced strategy to run the market with more flexibility. An overall procedure to run the COPE is presented in Algorithm 1.
In Section 3.2.2, we introduce the mechanism of updating the current global distribution p from one individual report r iteration of such individual update, the algorithm takes O complexity. If given an entire set of reports R n = { r 1 the total time complexity becomes O ( |S|  X  n ) . In this section, we introduce a close form of conducting COPE updating in batch.
T HEOREM 1(B ATCH COPE U PDATING ). Given n individual reports R n = { r 1 ,r 2 ,..., r n } , and the labeled category mean  X  and  X  p , the posterior global distribution over outcome set be computed following the equations below [ 16]: where for each 1  X  i  X  n, n i =[ p +  X  i ( r i  X   X  )] is between the upper and lower bounds in Equation 22 and  X  is to be replaced according to the label of each report.
 By conducting the batch-style COPE Updating, the time complex-ity could be reduced to O ( n + |S| ) .
The computation of Market Cost MC is another important issue to consider in order to efficiently manage the COPE . After obtain-ing the posterior global distribution p by conducting COPE Updat-ing, the market goes through all the reports and calculate the exact payoff for each trader. A sketchy procedure of computing the Mar-ket Cost MC is given in Algorithm 2. The time cost of exactly calculating a market cost is O ( n  X | S | ) .

Note that the payoff for each trader is positive, but there are traders who suffer from payoff less than the seed capital C due to large difference between their report r i and p .
When a market holder runs a COPE , he acts both as a patron to support the market and a decision maker to determine when to stop the market. The most simple strategy of running the market is to calculate the exact total market cost every time when a new report comes, and shut down the market immediately when MC  X  B , which we term as Bankruptcy .

Besides the trivial strategy described above, in this section, we propose a slope based running strategy which grants the market holder more flexibility, as well as improving the efficiency. The slope is formed by the upper and lower edges of the market cost: when the upper edge reaches the preset budget B , the system trig-gers a warning that the Budget is running out and starts to calculate the exact MC; if the lower edges exceeds the Budget, the market is terminated immediately. But while the Budget is running within the slope range, the system keeps the market running and returns to the market holder the current result and wait for the decision of the holder.

To facilitate such a slope based strategy, we develop a pair of lower and upper bounds of the KL-divergence based on a variant of Pinsker Inequality.
 Lower Slope Edge First we define the concept of Variational Distance , a.k.a. distance, which can be computed faster than the KL-divergence due to the avoidance of computing weighted logarithm value. two probability mass functions in a discrete domain S with a finite or countably infinite number of values. The Variational Distance Algorithm 3: Procedure of determining Market Bankruptcy of COPE
Input : current global posterior distribution p , reports from n
Output : Decision of Bankruptcy 1 Initialization : Bankruptcy bool flag F B K =0 , 2for each r i in R n do 3for each j in r i do 4 compute the V i ( r i ,p )+ = | r i [ j ]  X  p [ j ] | ; 5 compute the c i =max j ( r i [ j ] /p [ j ]) ; 6 M L i = Odd  X  C/ (log 2  X  V ( r i ,p )+log c i +1) ; 7 MC L += M E i ; 8if MC L  X  B&gt; 0 then 9return F B K =1 ( Bankruptcy ); 10 else 11 return F B K =0 (still running); between v and u is whose value is always non-negative.
 We now present the following Lower Bounding theorem.

T HEOREM 2(L OWER B OUNDING ). Given a report r i ,thecur-rent global distribution p , the lower bound of the payoff to trader T can be achieved as follow: where c =max j ( r i [ j ] /p [ j ]) .

Before we prove the given lower bound, we first define the con-cept of the Capacitory Discrimination as follows: u be two probability mass functions in a discrete domain S a finite or countably infinite number of values. The Capacitory Discrimination between v and u is where is the arithmetic mean of the two given vectors.
 And we introduce the Pinsker X  X  Inequality as follows:
T HEOREM 3(P INSKER  X  S I NEQUALITY ). Given two probabil-ity mass functions v and u with outcome space S , the following inequality is observed: The equality holds when u = v .
 P ROOF . Please refer to [ 13].
 Then we prove Theorem 2 based on Variational Distance and the Pinsker X  X  Inequality : Algorithm 4: Procedure of Warning Trigger of COPE
Input : current global posterior distribution p , reports from n
Output : Decision of Warning Trigger 1 Initialization : Warning bool flag F W N =0 , 2for each r i in R n do 3 //compute Variational Distance V i = V ( r i ,p ) according 4for each j in r i do 5 V i ( r i ,p )+ = | r i [ j ]  X  p [ j ] | ; 6 M U i = Odd  X  C/ ( 1 2 V 2 i +1) ; 7 MC U += M U i ; 8if MC U  X  B&gt; 0 then 9return F W N =1 ( Warning ); 10 else 11 return F W N =0 (still running);
P ROOF (T HEOREM 2). According to Theorem 4 in [ 29], we can obtain that where C ( P,Q ) is the capacitory discrimination with m = p ) based on the definition of Variational Distance in Equation 25 and Pinsker Equality in Equation 29, we could obtain an upper bound of KL-divergence: which leads to the inequality in the Theorem 2.

The lower bounds in Theorem 2 enables the COPE with a fast algorithm to determine the Bankruptcy situation. We elaborate the procedure in Algorithm 3.
 Upper Slope Edge
When the upper edge of the slope reaches the preset budget, the market holder receives an warning, and since then the system starts to calculate the exact market cost.

As a warning function, the upper slope edge is realized based on an upper bound of the KL-divergence:
T HEOREM 4(U PPER B OUNDING ). Given a report r i ,thecur-rent global distribution p , the upper bound of the payoff to trader T can be achieved as follow: The proof can be directly inferred from the Pinsker Inequality. Equipped with the upper bound of individual payoff, we are able to estimate the upper edge of the slope. We then present the Warn-ing Trigger technique as described in Algorithm 4. Note that while calculating the lower edge, the variational distance V ( p, r ) has al-ready been calculated, therefore, with a limited extra space cost, we could obtain the upper slope edge with an O (1) time cost.
In this section, we illu strate the non-trivial parts of the imple-mentation of COPE .
There are two factors to consider while designing the deposit tasks: the tasks should be with general purpose, and the estimation tendency should be measured for the later Bayesian Updating. Fol-lowing this requirement, we build up a prototype of COPE based on classic jelly-beans-in-a-jar experiment [20]. In this prototype im-plementation, when a  X  X orker X  accepts the task, she is presented with a sample image and informed that the given image contains exactly 200 blue dots. Then another figure is given as shown in the upper part of Figure 3 and the  X  X orker X  is required to estimate the number of dots without exhaustively counting them. A set of such tasks could be included in the pre-market stage, with a moderate amount of rewards, which makes the  X  X orker X  begrudged to for-sake. Besides the family of jelly-beans-in-a-jar experiments, many other suitable tasks could be incorporated into the pre-market stage. One of the major requirement is that the estimation tendency label of a worker r i should be able to be inferred. As in the prototype, the average over-estimation or under-estimation of the number of dots serves as a measure of the estimation tendency label.
After the input from the  X  X orker X , another page is presented as shown in the lower part of Figure 3, which is previously hidden. In this new page, the  X  X orker X  is required to specify the opinion dis-tribution among a set of options. Due to the  X  X r obability -phobia X , i.e. common workers feel unwilling or uncomfortable to exactly specify a value of a pr obability, we use dynamic chart to elicit the probabilistic estimation from a trader. The  X  X orker X  is given a set of options where the distribution information is unknown, and she is able to express opinion by swirling the spline of the pie chart. The  X  X orker X  is now informed that the final reward depends on how similar her estimation is compared to the aggregated opinion. Under such case, the  X  X orker X  is forced into a psychological situa-tion of a  X  X rader X , where she confronts a situation of losing certain stake if her answer is not carefully presented. The proposed mech-anism in COPE is thus activated.
The essential technique challenge to implement a COPE on gen-eral crowdsourcing platform is that the current infrastructure does not support a flexible payment mechanism, which hinters the appli-cation of the market. To tackle this challenge, besides the virtual  X  X take X  from the seed capital ,in COPE we also develop an innova-tive approach to conduct the payoff dispatching. When a  X  X orker X  finishes the opinion estimation, a specific task is generated after the closing of the COPE , and the task is visible and acceptable only to the  X  X orker X  by identifying her worker ID. The reward of the new task is set as the calculated payoff M i . In this section, we present the experimental study of the COPE . Specifically, we first study the effectiveness of introducing market mechanism in opinion elicitation. We compare the market mecha-nism with simple voting strategies. After that, we evaluate the rela-tionship between the latency and the number of aggregated traders X  information, then we study the characteristic between the distribu-tion properties and the total Market Cost . In all figures, we use ex to denote the performance of the exact algorithm and lw and up to denote that of lower and upper bounding algorithms respectively.
In this section, we compare between the market-based mecha-nism with simple voting to show the merit of introducing the new mechanism. Note that in a jelly-beans-in-a-jar experiment, the mu-tual communication among participants impairs the crowd X  X  accu-racy [ 32]. However in the setting of COPE , the  X  X nvestors X  only know the existence of other participants but are unaware of others X  opinion. Specifically, we set up three set of experiments on Ama-zon MTurk as follows: a) We propose to the online crowds a picture with a man X  X  por-trait on it, and crowds are asked to estimate the age of the man(ground truth is known to be 40). In the simple voting, we set up two pivots value, e.g. piv 1 =35 and piv 2 =45 , and ask the crowds to vote on the option that she think is closest to the real age. Then an answer is achieved by calculating the weighted aggregation. On the con-trary, for the value based experiments, crowds are asked to specify a value between piv 1 and piv 2 and their mean is aggregated as the answer. The results are shown in Figure 4(a) , where the error rates from simple voting (both vt 1 and vt 2 ) are higher than those of the value estimation ( vl 1 and vl 2 ). The experiments are conducted on two independent data sets. b) We then evaluate the error rates when the crowds are informed with different payoff mechanism, all under value estimation method. The results are shown in Figure 4(b) . A first group of crowds are informed that their payoffs are irrelevant to their answers( X  X ir1 X  and  X  X ir2 X ). The last group is encouraged to estimate according to the majority X  X  opinion, i.e. the market mechanism introduced in this paper( X  X kt1 X  and  X  X kt2 X ). The results show that the direct pay-off incurs highest error rate and the market based method performs best in most cases. c) Then we test the cost of introducing the market based mecha-nism. Varying the number of tasks, we record the total payoffs and show the results in Figure 4(c) . We set up the price for a single task as 0.02 and 0.05USD respectively. Then the simple direct payoffs are shown in dashed lines and the market based mechanism in solid lines, which saves more payoff for the requester.
In this and next sections, we mainly study the performance of the proposed algorithms in mainly two aspects: the efficiency ac-cording to the number of collected reports, and the value of Market Cost according to a varying characteristic of the collected reports. All experiments are conducted on a PC with 2 Intel(R) Core(TM) 2.13GHz CPU and 4GB memory, running on Microsoft 64-bit Win-(g) Latency -Normal(0.35,1) (k) Cost -Normal(v0.35) dows 8. We generate the data sets following both the family of normal distribution and uniform distribution.

We first present the performance of calculating the Market Cost with a varying report number from Figure 4(d) to Figure 4(h) . Specif-ically, we test the performance on Bimodal distribution, Normal distribution and Uniform distribution. As described in Section 4, the time complexity of calculating the Market Cost is O ( n thus the latency is roughly linear according to a fixed size of out-come space and an increasing number of reports. In this experiment, we test the relationship between the Market Cost and the variance within a reported distribution. Specifically, we simulate the statistical feature of the crowd with the following four distribution: normal distribution with mean value equal to 0.5 (1), normal distribution with mean value equal to 0.65 (2), normal distribution with mean value equal to 0.35 (3), and uniform distri-bution (4). For each distribution, the market cost is calculated at every variance value ranging from 0 to its set upper limit.
The results are shown from Figure 4(i) to Figure 4(l) .From the tested results, we can clearly observe that, for all the distri-bution, the Market Cost is maximized where the variance equals to 0. Then, the Market Cost goes down sharply with the variance in-creasing. In the final stage, the market cost becomes stable. Such a result is easy to interpret: when the variance of the crowd is small, that people hold similar attitudes toward the given event. Therefore, their reports are likely to resemble the market estimation, which makes the market cost large at first. When the variance gets larger, the crowds X  opinions become diversified. Then, we can infer that traders X  reports are likely to vary greatly from market estimation, which leads to a lower Market Cost . The result here also indicates that the variance of the crowd can serve as a good predictor of the market cost.
In this section, we summarize the literature of research related to the design of COPE . As described in Section 1, the design of COPE is a pioneering effort to realize a market-manner information aggregator onto a concrete commercial platform.
Probability distribution elicitation has paved its way in two main branches, Scoring Rules [ 6] and Information Market [ 19].
Scoring Rules are first adopted as an incentive mechanism to reward weather forecasters [ 6], where the reward depends on the designed rules and the final outcomes of the uncertain events. Many different scoring rules are then developed to suit various elicitation scenarios: quadratic strict rules [ 6], logarithm rules [ 28], and more recently scoring rule for more complex enviroments [ 8]. In the work [ 27] by L. Savage, a functional characterization is presented, and a comprehensive study of Scoring Rule to evaluate probability can be found in work [ 30] by R. Winkler.

Information Market is developed based on the observation that speculative markets like financial markets or commodity markets reflect the confidence of the investors faithfully. Then chances to reduce information uncertainty are wrapped as tradable products on Information Market, where the stable price reflects the information estimation among the investors. Early prototypes can be found in horse betting [ 19], political polls [ 5], science progress [ 25]andso on. A recent effort [ 18] by R. Hanson et al. proposes to combine the Information Market and Scoring Rule to facilitate a sequential market. Such a Scoring Market Rule is essentially a cost-function market maker [ 10] from the perspective of market design. This thread of approach also produces new practice of crowdsourced learning tasks [ 31], where an iterative and interactive learning pro-cedure is proposed to enhance the prediction performance based on given historical dataset(on the contrary, COPE addresses the task of elicit intrinsic opinion of workers without any historical training efforts). Moreover, a recent series of work [9 , 26] conducted by Y. Chen et al. provides more sophisticated market mechanism for information elicitation. In the work [ 9] the authors design a spe-cial type of information market that capture the signal structure as informative securities. However, the design of such advanced in-formation markets entails a specially designed speculative market, which is way too complicated and intractable on general labor mar-kets. And in the work [ 26] the authors implement an information polling tool based on Amazon MTurk by direct polling and payoff, without the support of a market structure.
Human computation is a long-existing concept and has been prac-ticed for centuries. Specifically, whenever a  X  X uman X  serves to  X  X ompute X , a human computation is observed. This leads to a his-tory of Human Computation even longer than that of electronic computer. However, with the emergence of Internet web service, especially the one that facilitates online labor recruiting and man-aging like Amazon MTurk and oDesk, human computation starts to experience a new age where the source of human is broadened to a vast pool of crowds, instead of designated experts or employ-ees. This type of outsourcing to crowds, i.e. crowdsourcing ,isnow receiving countless success in many areas such as fund raising, lo-gistics, monitoring and so on.

In data-driven applications, human cognitive abilities are mainly exploited in two types: voting among many options, and provid-ing contents according to certain requirements. The wide usage of  X  X oting X  as a human computing action grows from the observation that humans are better at comparisons rather than evaluation objects by specifying an exact numerical value. Most of basic queries in database [ 14] and data mining [ 2] can be decomposed into simple voting as human tasks [ 7, 14]. Meanwhile, in order to break the close world assumption in traditional database, human are enrolled to provide extraneous information to answer certain queries: item enumeration [ 14], content composing [ 3,21], counting [ 24]andso on. The work in this paper takes effort to explore new usage of human cognitive ability, specifying probability estimation among uncertain events.
In this paper, we design and propose the COPE to facilitate Opin-ion Elicitation functions on general crowdsourcing labor market. We also elaborate the rationale of the design in terms of distribu-tion combination and payoff mechanism. In the end, we theoreti-cally and practically testify the performance of such function.
More general Opinion Elicitation tasks observe multivariate ran-dom relationship, whose outcome space may increase exponen-tially, which render the Market unmanageable. However, human cognitive knowledge is able to help decide the necessity of such de-pendency, while providing quantitative causality information. We will proceed to extend COPE to capture such potential in the future. We thank the anonymous reviewers and area chairs for their in-depth review and constructive comments.
 This work is supported in part by the Hong Kong RGC Project N_HKUST637/13, National Grand Fundamental Research 973 Pro-gram of China under Grant 2012-CB316200, National Natural Sci-ence Foundation of China (NSFC) Grant No. 61232018, NSF grant IIS-1250880, Microsoft Research Asia Gift Grant and Google Fac-ulty Award 2013.
