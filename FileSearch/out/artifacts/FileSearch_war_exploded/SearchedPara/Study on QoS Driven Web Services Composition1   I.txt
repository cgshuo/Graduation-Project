 There are several problems in Web Service frame needed to be studied such as service these existing problems are aroused by the composition [2]. The task of composition researchers have paid their attentions to the service composition. SELF-SERV [3] is a platform that can provide composed service, but SELF-SERV emphasizes only on functional composition and ignores the QoS requirements of clients. A way to compose components based on QoS is proposed in [4], but it gives no details about how to describe the QoS of a service. In distributed environment, different service components may possess the same functions, and references [5-7] provide WSOL (Web Service Offering Language) that can change services at run time by dynamic switching in different service constrains. DAML-S [8] aims to define ontologies for service description that will allow software agents to reason about the properties of services. 
The above approaches solve some issues in composed Web Services from different views, but none of them can give a whole and realizable way to provide composed Web Services based on clients X  QoS. To describe QoS requirements of clients, we proposed a new Web Service description language-EWSDL (Enhanced Web Service Description Language), and optimized concurrent Web Service frame with an evolved role of provider to meet non-functional requirements of clients to realize compositions. The remainder of this paper is organized as follows. In section 2 we give an enhanced Web Service description language-EWSDL and the composition selection algorithm. The paper is concluded in section 3. 2.1 QoS Property of Web Services software [9]. Definitions of non-functional properties of software are various and have no unified definition [10]. However, there are still some broadly accepted views about software should include performance, reusability, maintainability, security, reliability, and availability. In Internet, we call the non-functional property as QoS property [13]. without considering non-functional requirements when providing the service, the services is a stringent problem for service providers. Now there are two different ways to solve this problem. One is syntax-based approach extending the current WSDL with more elements, and the other is to develop a new language based on semantic, such as XL, OWL-S. Both ways intend to add more information of the service when descript the service. But the language based on semantic is more complex. So, in this paper we extend WSDL to support more QoS descriptions. 
WSDL2.0 describes three functional properties of Web Service: what to do, where to do, non-functional properties of Web Service has no existing way. Many researchers have Language[5-7](WSOL) to extend WSDL by adding new mark, such as price, time, etc. In essence, WSOL only provides some disperse, predefined, and limited property plate, availability, channels, charging style, settlement, payment obligations, etc. The author also indicates that the non-functional properties of Web Service are actually the QoS properties actually. A model for Web Service discovery with QoS is given in [13], it gives some definitions of QoS properties, but these properties are not from the view of managing composed Web Services. In this paper we explore an enhanced Web Service description language according to the need of managing the QoS properties of composed Web Service. 2.2 Description Model of Web Service Definition 1. Description model of Web Service. Let S be the description model of functions of Web Service is described by the portTypes of WSDL, in order to describe the QoS properties, a tOperationInst element is added to tport element of WSDL. domain of services and they also should be quantifiable, we use a vector in seven dimens-ions to describe the QoS of a Web Service (both element service 1 and composed service) responseTime represents the response time of a element service; availability represents the probability of the service can be used correctly; concurrency represents the maximum ability to support concurrent transactions; expireTime represents the expire time of a service, and the reliability of a service can be ensured before the expireTime, price represents the money the client should pay for this service, fine represents service provider(client) should compensate client(provider) for breaking the contract between them. Commonly, the fine has a linear relation with the price , securityLevel represents the security level of a service. For a composed service CS it also possesses the same parameters, but in a CS, these QoS parameters cannot be calculated by a simple mathematical function such as sum. services when existing concurrent process in CS. Followings give a way to calculate the QoS parameters of CS. ResponseTime , considering that there exists concurrent service in composed Web Service, response time of composed service is not the sum of responseTime of all the an algorithm to find the critical route. 
Availability =  X  Concurrency = min (concurrency 1 ,concurrency 2 ,..., concurrency m ), ExpireTime = min (expireTime 1 , expireTime 2 ,..., expireTime m ), 
Price = U Fine = A*Price  X  the client and the provider negotiate to get A, SecurityLevel =min(securityLevel 1 ,securityLevel 2 ,...,securityLevel m ). 
These QoS properties are not independent, for example, a correlation between price and fine. This is why composition according to clients X  QoS requirements is a difficult problem. 2.3 Composition Selection Algorithm Definition 2. Service Class. Let A be a set of Web Services which have been registered into the Composer, and these services can be divided into several subsets according to the different functions, and each Web Service of A belongs to one subset at least, and properties. Noticed, all the Service Classes form an overlay of A not a partition. 
It is a hard work for the service composer to provide a composition Web Service to clients according to their QoS requirements based on the followin g two reasons: first, there are no standard measurement of all these QoS properties, second, QoS properties are not independent, and one QoS property may favor/feed back others. 
So, the multi-dimensional of the QoS properties cannot be merged into one dimension, we proposed a Composition Selection Algorithm, which relies on the following assumptions: we must define the relation between composed service and the required QoS (requirement) of clients; and pay more attention to QoS. 
There are many ways to solve the multi-object programming [16,17,18], and in our prototype, we used the following method. self-management of the element Web Service; the other is the management of composed services [5-7]. The QoS propertie s are independent on above two aspects due Services and propose a new service description language based on current WSDL, and then propose a composition selection algorithm. E-WsFrame. The monitor can collect and analyze service data and make judgment when client or provider violates the agreement between them. Finally, we will order the candidate services by some algorithms to reduce composition price. This research was sponsored by the National Science Foundation of China NSFC under the grant No. 90304006 and Research Fund for Doctoral Program of Higher Education of China (No.2002698018). 
