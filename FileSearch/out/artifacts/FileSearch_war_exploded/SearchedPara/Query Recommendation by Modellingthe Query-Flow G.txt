 Nowadays, query recommendation has been recognized as an important tool that helps users seek their information needs. Many approaches have been proposed to generate query recommendations by leveraging query logs. Di erent types of information in the query logs have been taken into account, including search results (11), clickthrough (12) and search sessions (5).

Recently, the query-flow graph (2) has been introduced as a novel representation of session information in query logs. It integrates queries from di erent search sessions into a directed and homogeneous graph. Nodes of the graph represent unique queries, and two queries are connected by a directed e dge if they occur consecutively in a search session. The Query-flow graph has shown its utility in query recommendation (2 X 4).
However, there are several problems in directly using the query-flow graph for rec-ommendation as in existing approaches. Firstly, due to the information sparsity, lots of dangling queries which have no out-links exist in the query-flow graph 1 . Therefore, recommendation approaches based on random walks (2, 3) over the directed graph may not well handle such dangling queries. Moreover, queries are often ambiguous in their search intent and thus the aggregated query-flow graph in fact is a mixture of multiple search intents. Most existing approaches (2 X 4) do not take into account the ambiguous intents in the query-flow graph when gener ating recommendations. Therefore, for am-biguous queries, one may either produce reco mmendations with multiple intents mixed together which are di  X  cult for users to consume, or provide recommendations domi-nated by certain intent which cannot satisfy di erent user needs.

In this paper, we propose to model the query-flow graph for better query recom-mendation. Specifically, we introduce a novel mixture model for the query-flow graph. The model employs a probabilistic approach to interpret the generation of the graph, i.e., how the queries and the transitions between queries are generated under the hidden search intents. We then apply an intent-biased random walk over the graph for query recommendation. In this way, we can well resolve the recommendation problems for dangling queries and ambiguous queries in using query-flow graph.

We conducted empirical experiments based on a collection of query logs from a commercial search engine. Both the qualitative and quantitative results demonstrate the e ectiveness of our approach as compared with existing baseline methods. 2.1 Query Recommendation Query recommendation is a widely accepted tool employed by search engines to help users express and explore their information needs. Beeferman et al. (1) applied agglom-erative clustering algorithm over the clic kthrough bipartite graph to identify related queries for recommendation. Ma et al. (7) developed a two-level query recommendation method based on both the user-query graph and the query-URL graph. Zhu et al. (13) generated diverse query recommendations based on the query manifold structure.
Recently, query-flow graph was introduced by Boldi et al. (2), and they applied per-sonalized random walk (2, 3) over the query-flow graph to recommend queries. Unlike previous work on query-flow graph, our approach explores the query-flow graph with a mixture model for query recommendation, so that we can well resolve the recommen-dation problems for dangling queries and ambiguous queries in using query-flow graph. 2.2 Mixture Models Recently, there have been di erent mixture models applied on graphs for community discovery. For example, Newman et al. (8) proposed a probabilistic mixture model to discover the overlapped communities in gra ph. Ramasco et al. (9) introduced a more general mixture model on graph for the same purpose. Ren et al. (10) described a mix-ture model for undirected graph, where each edge in the graph is assumed to be from the same community. Inspired by the above work, we propose a novel mixture model to interpret the generation of the query-fl ow graph under multiple hidden intents. In this section, we first briefly introduce the query-flow graph. We then describe the pro-posed mixture model in detail, which learns the hidden intents of queries by modelling the generation of the query-flow graph. Finally, we show how to leverage the learned intents for better query recommendation with an intent-biased random walk. 3.1 Query-Flow Graph The query-flow graph integrates queries from di erent search sessions into a directed and homogeneous graph. Formally, we denote a query-flow graph as G ( V E w ), where V Q s t is the set of unique queries Q in query logs plus two special nodes s and t , representing a starting state and a te rminal state of any user search session. E V V denotes the set of directed edges, where two queries q i and q j are connected by an edge if there is at least one session of the query log in which q j follows q i . w is a weighting function that assigns to every pair of queries ( q i q j ) E a weight w definition of the weight w may depend on the specific applications. In our work, we simply consider the weight to be the frequency of the transition in the query log. Fig. 1 shows a query-flow graph that is constructed from the a set of search sessions. 3.2 Mixture Model on Query-Flow graph We propose a novel mixture model to interpret the generation of the query-flow graph. In essentials, our model is based on the following assumption: Queries are generated from some hidden search intents, and two queries occurred consecutively in one ses-sion if they are from the same search intent. The above assumption is quite natural and straightforward. Typically, users subm it a query to search according to their poten-tial information needs (i.e., search intent). Users may consecutively reformulate their Therefore, without loss of generality, queri es occurred consecutively in a search session can be viewed as under the same search intent.

Specifically, given a query-flow graph G which consists of N nodes and M directed edges, we assume the graph G is generated under K potential search intents, where each intent is characterized by a distribution over queries. Let e from query q i to query q j . We then assume the following generative process for each edge e 1. Draw an intent indicator g 2. Draw query nodes q i , q j from the same multinomial intent distribution r , 3. Draw the directed edge e Here, the K -dimensional multinomial distribution reflects the proportion of di erent search intents over the whole query-flow graph, the multinomial distribution over queries describes the hidden search intents, and the binomial distribution captures the probability of the edge direction between tw o queries under a given search intent. The Fig. 2 shows the graphic model of generating query flow graph.

Based on the above process, the probability of an observed directed edge e ingtothe r -th search intent can be obtained by In this way, the likelihood of the whole query-flow graph G is where w query q i .

The parameters to be estimated in our model are , ,and . We maximize the likeli-hood shown in Equation (1) to estimate these parameters. The sum in the bracket makes the direct estimation di  X  cult, but with the help of Expectation Maximization (EM) al-gorithm the problem can be solved easily.

As we can see, the hidden variables in our mixture model are intent indicators g E-step, the posterior probabilities of hidden variables are calculated as
In M-step, we update the parameters by the following formulas:
The E-step and M-step are repeated alternatively until the log-likelihood does not increase significantly. Note that the EM algorithm will not necessarily find the global optimal. We resolve this by trying several di erent starting points to get an good solu-tion in practice. 3.3 Intent-Biased Random Walk As aforementioned, directly applying the traditional personalized random walk on query-flow graph into recommendation may not well handle the dangling queries and ambiguous queries. Here we further introduce our intent-biased random walk to rec-ommend queries based on the learned intents above. The basic idea of our model is to integrate the learned intents of queries into the prior preference of the personalized random walk, and apply the random walk under di erent search intent respectively.
Formally, let W denote the weight matrix of the query-flow graph G with row nor-malized. An intent-biased random walk over the query-flow graph G under the r -th search intent given the original query q i is then determined by the following transition probability matrix A i r , which is defined as following: where denotes the teleportation probability, and P i r denotes the preference vector of intent-bias random walk under the r -th intent defined as where e T i is the vector whose entries are all zeroes, except for the i -th whose value is 1, r is our learned r -th intent distribution over queries, and [0 1] is the weight balancing the original query and its intent.
 The intent-biased random walk has a unique stationary distribution R i r such that R i r A T i r R i r (called the personalized PageRank score relative to q i under the r -th in-tent). Such a personalized PageRank can be computed using the power iteration method. We can then employ the personalized PageRank score to rank queries with respect to q i for recommendation.

We apply our intent-biased ra ndom walk under each intent of query q i , and obtain the corresponding recommendations. Fina lly, the recommendations are grouped by in-tent and represented to users in a structured way, where the intent groups are ranked according to the intent proportion of the given query q i calculated by
As we can see, if we set the parameter to 1, our intent-biased random walk will degenerate into the traditional personalized random walk as applied in previous work (2, 4). Obviously, under such a personalized random walk, we may not obtain any rec-ommendations for dangling queries. T o avoid non-recommendation, one may add a small uniform vector to the preference vector (i.e., teleportation to every node). How-ever, in that case, the recommendations for the dangling query will be mostly popular queries which may not related to original query at all. While in our model, we set less than 1 so that we can smooth the preferen ce vector with the learned intents, which can provide rich background information of the original query in a back-o way. If the original query is a dangling query, the preference vector will be reduced to the corre-sponding intent distribution so that we can still obtain related recommendations for the original query.

Moreover, previous approaches usually applied the personalized random walk on the graph for recommendation without addressing the hidden intents. In this way, for ambiguous queries, they may either produc e recommendations with multiple intents mixed together which are di  X  cult for users to consume, or provide recommendations dominated by certain intent which cannot satisfy di erent user needs. In our model, we can naturally generated recommendations for the original query with respect to its di erent intents. The structured recommendation results would be easy to understand and diverse search intents can be covered. 4.1 Data Set The experiments are conducted on a 3-month query log from a commercial search en-gine. We split the query stream into query sessions using 30 minutes timeout, and con-struct the query-flow graph as section 3.1 described. To decrease the noise in search sessions, we get rid of those edges with frequencies lower than 3. We then draw the biggest connected component of the graph for experiment. After these steps, the ob-tained graph consists of 16 980 distinct queries and 51 214 distinct edges. 4.2 Evaluation of Intents Fig. 3 shows how the log likelihood varies over iterations under di erent number of hidden intents. According to Fig. 3, the increase of log likelihood turns slow when the intent number is larger than 600. It indicates that the mixture model with 600 hidden dimensions is basically su  X  cient to capture the potential s earch intents over this graph. Larger number of intents are very probably to be redundant and may cause the problem of over-fitting. Therefore, we set the intent number to 600 in our experiments.
We randomly sample 3 learned intents to demonstrate the e ectiveness of our mix-ture model, as shown in Table 1. For each intent, we list the top 10 ranked queries according to their probabilitie s under the corresponding intent. The first, second, and third columns are about lyrics, cars, and poe ms, respectively. The labels of each intent are created by human judge for illustration. 4.3 Evaluation of Query Recommendation In this part, we evaluate the recommendation performance of our approach by compar-ing with traditional personalized random walk (2). For our intent-biased random walk, the parameter is set to 0.8, and is set to 0.3.
 Qualitative Comparison. We take the randomly selected dangling queries  X  X amaha motor X  and  X  X adio disney X  as examples to demonstrate the e ectiveness of our ap-proach. The recommendation results from our approach and baseline method are demon-strated in the Table 2 . We can see the recommendations from our methods are much more related to the initial queries . On the contrary, the recommendations from baseline method are mostly queries that are popular in the whole date set but unrelated to the original queries. This is because for the da ngling queries, the traditional random walk based approaches can only find recommendations with the help of the uniform teleport. We also compared our approach with the baseline method on ambiguous queries. We randomly selected two queries with mu ltiple hidden search intents based on our learned model as shown in the Table 3. We can see that structured query recommen-dations can be provided by our approach for ambiguous queries. Take the query  X  X e X  as an example, the top three categories of recommendations provided by our approach correspond to  X  X inancial X ,  X  X eather X  and  X  X r estling X , respectively. The labels here are also human annotated for illustration. Howe ver, the baseline method only produces one recommendation list which is a mixture of several intents. Query  X  X ilton X  is another interesting example with multiple intents. In this case, the recommendations generated by the baseline method are dominated by queries related to the hotel. In contrast, our approach can obtain two categories of recommendations, one about the hotel and the other about the celebrity. Therefore, our approach may better satisfy users X  needs by covering diverse intents of the query.
 Quantitative Comparison. Furthermore, we conducted qua ntitative experiments for evaluating the performance of our recommendation approach. As aforementioned, our proposed approach naturally provides structured query recommendation to users . While the baseline method using personalized random walk provides the traditional list-based query recommendations to users. We thus follow the way proposed in (6) to compare the performances of di erent recommendation methods by users X  click behaviour.
We randomly sampled 100 queries as our test set. For each query, top 15 recommen-dations are used for performance compar ison. For each recommendation, human judges are required to label how likely he she would like to click it with a 6-point scale (0, 0 2, 0 4, 0 6, 0 8, 1) as the willingness measure. 3 human judges were asked to participate the labelling process .

We also adopted the Clicked Recommendation Number (CRN) , Clicked Recommen-dation Score(CRS) ,and Total Recommendation Score(TRS) as our evaluation measures. For each query q ,let R r 1 r k denote the k recommendations generated by a certain method, and L l 1 l k denote the corresponding label scores on these recommendations, where k is the size of recommendations. The three measures for query q are then defined as follows where denote the set size. As we can see, CRN reflects the adoption frequency of query recommendations, CRS shows the preference on adopted recommendations, and TRS indicates the e ectiveness of overall query recommendations.

Table 4 shows the quantitative evaluation results of the two approaches. The num-bers in the parentheses are the relative improvements of our approach over the baseline method. The results show that by providing structured query recommendations based on our intent-biased random walk, we can largely improve both the click number and click willingness on recommendations. In this paper, we propose to explore the query-flow graph for better query recommen-dation. Unlike previous methods, our novel mixture model identifies the hidden search intents from the query-flow graph. An intent-biased random walk is then introduced to integrate the learned intents for recommendation. Experimental results show the e ec-tiveness of our approach. For the future work, it would be interesting to try to combine the query words, search session and clickthrough information in a unified model to help generate better query recommendations.
 Acknowledgments. This research work was funded by the National High-tech R&amp;D Program of China under grant No. 2010 AA 012500, and the National Natural Science Foundation of China under Grant No. 61003166 and Grant No. 60933005.

