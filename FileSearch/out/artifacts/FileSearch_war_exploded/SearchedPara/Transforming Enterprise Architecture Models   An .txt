 An EA outlines how the different technological, human and organizational elements within the business are structured, describes how they can be coordinated, and makes plain possibilities for manipulation for business improvements. Accurate yet mutable representations are, therefore, important fo r the practice of EA. These representations must also include not only the furniture of the world (Bunge 1977) but also concep-tual constructs created for satisfying human goals (March and Allen 2007). Decision-can use these to communicate with stakeholders (Schekkerman 2008). A number of meta-models, frameworks and standards have been suggested for EA representations (e.g. Zachman 1987, DoD 2010, ISO Standards 42010, 15704). The manner in which practitioners use these meta-models and frameworks, however, remains unclear. Their use of these meta-models and frameworks cannot be the same as that for conventional software engineering where the designers X  aim is to move from models to executable software. In contrast, EA efforts often include an archaeological expedition with the intention of charting a new course of action for the enterprise and facilitating stakeholder buy-in. 
The research reported in this paper is presented against the above backdrop. We explore an alternative ontological basis for EA models and identify transformations that capture how EA models are designed and used. The question we address is, there-fore, the following: What are the operations on EA models following an artificial ontology view? The key contribution of our work is the development of these opera-tions building on the ontology of the artificial (March and Allen 2007). Received wisdom for conceptual modeling for information systems (Wand and Weber 1990) builds on Bunge X  X  (1977) ontology. It posits that conceptual models must show fidelity against the real-world they represent (Wand and Weber 2002). In contrast, EA practitioners use models for different purposes. Table 1 below summarizes the differ-ences and Figure 1 outlines how EA models are used. start by proposing an alternative to Bunge X  X  ontology. An ontology of the artificial begins with the premise that although business enter-prises  X  X se concrete objects such as people, machines, and buildings to accomplish their goals; they are concerned primarily with the meaning and purpose ascribed to concrete and conceptual objects and with invented rules ... X  (March and Allen 2007). As a result, it  X  X ccommodate[s] occurrences of conceptual events that form the basis of social phenomena X  (March and Allen 2007). 3.1 Fundamental Constructs The constructs underlying the ontology of the artificial extend those suggested by Wand and Weber (1990). Table 2 outlines these (March and Allen 2007). 
March and Allen X  X  (2007) proposal contains three new constructs. The conceptual models are refined. The conceptual events allow negotiation of new modes of changes to objects and attributes, including a change in the stakeholders. Together, they allow possibilities for EA models. We use these to conceptualize operations on EA models. We identify six operations on EA models: Projection, Instantiation, Specialization, Refinement, Derivation, and Linking. Table 3 summarizes the operations. 4.1 Projection of those properties that a stakeholder requires. It is analogous to the existential quanti-discarding some information as a surjective and unary operation while preserving  X  X ype X . Consider, for example, a shipping container manufacturer who uses a corrugat-ing machine to produce a range of cardboard stock that must be cut, printed, folded, and glued on many machines to meet particular customer specifications. A Projection may involve extracting information related to machine capacities to structure a con-veyance system that accumulates and forwards the stock to the appropriate printer and box machines. 4.2 Instantiation constructing an EA model from the framework or standard. A second level of instan-tiation may occur during the mapping and use of the EA model against specific instances of an Activity or Node. Instantiation of the first kind takes place during the design phase, whereas the second kind takes place during use of the EA models. 4.3 Refinement Refinement (R) is an information adding operation. The essential characteristic of Refinement is the preservation of boundary. During an EA life cycle, Refinement is object. It acknowledges that it is not feasible to fully specify the structure of an object upon its creation because of inputs needed from multiple stakeholders, and because of elaboration. For example, one can refine the understanding of an automobile engine in two ways: adding facts about engine features, e.g. the displacement or horsepower (refinement); or exposing sub-components, e.g. block, head, and pistons (decomposi-tion). Elaboration may require addition of Invented Attributes enhancing commitment from stakeholders; decomposition may result in addition of Conceptual Objects or Events providing a way to scale down commitment. 4.4 Specialization different from Elaboration in that Specialization involves spawning new objects that are still within the boundaries specified by the source object. Consider, for example, a global producer of manufactured products with customers in different countries. Each may have different trade rules regarding import tariffs. Here, Specialization may be applied to the object Country to distinguish between non-tariff countries and tariff countries by identifying and including different attributes that are part of each negotiate their spheres of responsibility. 4.5 Derivation Derivation (D) refers to the changing of the form of one or more elements without changing its content. It is a critical operation during the EA life cycle because it goes beyond Specialization or Refinement. Unlike these two, Derivation allows manipula-tion of specific attributes, including attributes from multiple objects without the need to generate a new Object or a permanent el aboration of an Object. It allows stake-information needs. As an example, consider the derivation of elements necessary for an ISO 19439 (ISO 2006) model description from a Zachman Framework description. Derivation may also involve computation of aggregates based on values of attributes from component objects or attributes from other related objects. 4.6 Linking Linking (L) is the idea that elements  X  Concrete and Conceptual Objects, Concrete and Conceptual Events  X  may be connected via arbitrary associations. The need for links arises because EA models can contain representations at different levels of ab-meta-levels or between components in a part hierarchy. The transformations resulting from links are often implicit or unstated. The link between a process and the role that is going to be responsible for completion of that process transforms the process into a managed activity. The linking may also be the result of a business rule applied during a refinement in the architecture model. 
The operations have been formalized. Further details of the formalization are avail-able elsewhere (Martin et al. 2011). This section demonstrates their application to a case (adapted from Sessions 2007). The case describes an organization, MedAMore, that owns a regional chain of drug-stores with a software package, MedAManage, consisting of three modules: M/Store, to run at the drug store; M/Warehouse, to run in a regional warehouse; and M/Home, to run at the home office. As the result of acquiring three regional chains, the software package has become an obstacle. M/Store now requires specializations such as re-gional insurance plans; M/Warehouse must reflect practices at regional warehouses; and the information-sharing approach cannot scale to the now 200 drugstores and regional offices. Upgrading is difficult because each module is large. The technical problems have created internal conflicts. The business side wants to acquire two more chains while IT was struggling to bring existing acquisitions online. EA is now being considered as a possible mech anism to build stronger partnerships across IT and busi-ness groups. Table 4 illustrates the operations on EA models that can help achieve these potentially stronger partnerships with the above case description. 
The example demonstrates how the operations can help understand design and use of EA models. We acknowledge that this does not constitute validation. We use the example as a demonstration, similar to the suggestion by Hevner et al (2004). enterprise. The operations described in the paper emphasize this dual nature by capturing the evolutionary aspects of EA models. They build on the ontology of the artificial as a foundation, and allow explicit acknowledgement of the progression of EA models in practice (see, e.g. Grossman 2003; Ross et al 2006). Table 5 reconnects the arguments so far to the unique aspects of EA models. 
We do not argue that the operations are complete. Arguing completeness will re-quire greater scrutiny, and understanding of how the operations are carried out in across the EA life cycle (see, e.g. Smolander et al. 2008). modeling. To the best of our knowledge, no prior work has unpacked the space of transformations that represent these changes in EA models. Our intent in describing these operations is not to provide a formal basis for their automation. Instead, we seek of stakeholders involved in the design and use of EA models. We hope that the opera-locality of impact, traversing abstractions or construction of macros (e.g. Martin and Robertson 2008) and identification of evolution patterns, backed by empirical studies. 
