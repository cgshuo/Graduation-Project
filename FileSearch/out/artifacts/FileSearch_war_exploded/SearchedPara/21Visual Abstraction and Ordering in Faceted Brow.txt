 Faceted browsing is a navigation technique for the exploration and discovery of a re-source collection [Hearst 2008]. Apart from being studied in many research works such as Yee et al. [2003] and Huynh et al. [2007], its usefulness is attested by the popular uptake in many commercial Web sites. At the core of faceted navigation is a set of flat or hierarchical facets, which are categories characterizing items in a large collection [Hearst 2008]. Each facet has one or more facet values and each item may be asso-ciated with a subset of these values [Clarkson et al. 2009b]. As such, this navigation paradigm usually requires rich metadata expressing relationships between facet val-ues and resources. In this multistep resou rce seeking process, users start with some initial constraint definition, inspect the initial result set, then continue with orien-teering and refinement steps, and finish the process by closely examining the result set [Hearst 2006]. Within this process, users X  selections of facet values result in either conjunctive or disjunctive queries executed on the resource collection, depending on the nature of the facets and/or the design of the applications. Query previews [Plaisant et al. 1997] are often used to indicate how many items are associated with each of the facet values, and as such they help users avoid filtering by facet values that would return an empty result set [Hearst 2009], which is also known as the Poka-Yoke prin-ciple [Stefaner et al. 2009]. The matching items, or focus items [Clarkson et al. 2009b], are then displayed as results of the filtering process.

We were interested in user experience with existing faceted user interfaces, there-fore we invited nine persons who were familiar with faceted browsing to participate in contextual interviews. They were asked to demonstrate their recent use of a faceted user interface to achieve a real task of their own. They explained their interactions while we were observing. Afterwards, eac h of them discussed their experience with using these Web sites. Their feedback can be summarized as follows.  X  The facets in these Web sites were highly appreciated as they were relevant and helpful to narrow down the search space. Some subjects were not happy with the default set of facets, as they did not reflect their most relevant criteria.  X  Comparison of items across different fa cets was very important in many cases for making decisions. To avoid missing the best matches, users had to look at different combinations of facet values inherent in the focus items. Sorting by one facet at a time was therefore not considered effective.  X  Facets were not equally important; some facets were more important than others.  X  Having to go through a long list of focus items was time-consuming. This is in line with results from a study on faceted user interfaces [Kules et al. 2009], which showed that while users spent equally much time on the query, the facets, and the results on the first result page, they focused entirely on the items on the second and third result pages. This suggested that after choosing the facet values to nar-row down their options, users still needed to spend a considerable amount of time looking for specific items.

It is worth noting that most of the Web sites used by the participants only allowed for the single-valued selection mode, that is, only one facet value could be selected at a time, for example, a brand or a price range (hence conjunctive queries used at each filtering step), only some Web sites, such as yelp.com and amazon.co.uk, also allowed for multivalued selection mode, for example, on the  X  X ategories X  facet in yelp.com (and hence disjunctive queries used). In the former case, users needed to narrow down the search space in a stepwise manner by choosing only one value in a facet at a time. As such, if none of the items in the result set meets their needs, they had to backtrack and explore different paths in order to compar e items using a combination of facets that were of import to them to find the best matching items. While comparisons were im-portant to users in making choices, not all sites using the faceted navigation paradigm offered this feature. In the latter case, the multivalued selection mode catered for vague criteria from users (e.g., multiple ne ighborhoods were considered acceptable for the location facet while a user was looking for a restaurant), and thus allowed for displaying a larger set of items matching one or more values of a facet. In this situa-tion, users needed to look into the details of each item to figure out which values of a facet an item matched. In both cases, the users X  feedback indicated that choosing an item matching their needs involved comparing items based on a combination of facets rather than just one. While none of the Web sites used by the participants dealed with documents, they shared a similar feature with most current faceted user interfaces for browsing a text collection, such as the one studied in Kules et al. [2009], in terms of displaying the result set. Filtering interactions resulted in document items returned in a list and users still had to traverse through many result pages to select a particular doc-ument for further analysis. This similarity exists because even though documents are content-bearing items, their contents are completely ignored and only the (usu-ally hand-crafted) metadata is utilized as with other kinds of resources. This has two setbacks.  X  It is not always the case that metadata is available for a text collection to be ex-plored, since the effort required to generate the clean metadata (e.g., to classify if a document belongs to one or more categories) is tremendous on large datasets. An example of this issue is highlighted in Plaisant et al. [2008].  X  Even when metadata is available, as in the case of carefully curated digital library collections, the existing paradigm, which is based only on metadata, however, falls short of being adequate to support users in the task of filtering for potentially rele-vant documents while exploring a text collection. Document contents are only taken into account in free text search to further narrow down the result set. This issue is also highlighted in Clarkson et al. [2009a] after the authors conducted an experi-mental study on a visualization to support search interfaces and realized that users of digital libraries are most often interested in the content of the documents rather than their metadata. The finding suggests that while metadata is certainly useful for filtering and aggregation to obtain basic analytical statistics and relationships, when documents are used, their contents are far richer in terms of useful informa-tion that can be explored and hence should not be ignored.

Therefore, we believe that it would be useful to further support users, who are inter-ested in a certain set of entities of interest, to explore a text collection whose metadata is not available. In this case, it is important to do the following.  X  Show how relevant a document is to these entities . This is due to the fact that un-like the binary relationships often seen between an item and a facet value (e.g., an electronic item and a brand), documents are content-bearing items and hence the relevance relationship is of importance to users in choosing which documents to focus on.  X  Use disjunctive queries instead of conjunctive queries . When focus items are doc-uments, users should be able to consider multiple facet values simultaneously since a document is usually relevant to a number of concepts at the same time. In addition, while exploring documents, the fact that some documents do not mention certain entities may be of interest to users (e.g., in the Enron email dataset, it may be interesting to identify the set of documents mentioning both  X  leak  X  X nd  X  investigation  X , and the set of documents only mentioning  X  leak  X  and nothing else in the legal actitivy category). This feature is lacking in most faceted user interfaces since only a single facet value can be used at a time and thus facet values can only be ANDed together. Disjunctive queries can return a set of items that do not contain certain facet values and this could be of interest to users. This may be suitable not only to documents but also to other digital resources when slice-and-dice operations are required [Stefaner et al. 2009], for example, filtering for photos that satisfy the condition  X  Australia and in 2004 and not portrait  X  from a photo collection.  X  Show basic repository statistics . This is to support comparisons between different groups of documents meeting certain criteria. In the preceding example, it may be useful to compare the sizes of those two sets of emails. The use of disjunctive queries enables comparisons directly on the user interface and also reduces the number of different steps that need to be carried out to achieve this goal. The aforesaid requirements, together with what we can learn from the user feedback on existing faceted user interfaces, beg the question if properties of documents can be visually displayed in such a way that users can make a better informed decision faster than having to traverse all pages of results and looking at one document after another. The key limitation of existing work is the lack of an aggregated view showing how each document relates to each of the entiti es. While certain issues were raised about faceted user interfaces in general [Hearst 2008], they tend to focus on the display of a large number of facets, for example, which facets to show (adaptively) when there are many. The issues identified here regarding the focus item representation for faceted browsing of a text collection have largely been left untouched. We argue that user experience can be improved if the fo llowing design desiderata are met.  X  Each focus item should have a compact representation expressing its correspon-dences to facet values.  X  Users should be able to perform cross-comp arisons of focus items over different values of one or more facets.  X  The display can be visually abstracted to deal with a large amount of focus items.  X  Users should be able to interactively reorder facets based on their preferences, resulting in different displays of focus items.
 As such, we propose using a multi-dimensional visualization, one dimension for each facet value, as an alternative to the linear result listing paradigm. In the rest of the article, we describe the proposed solution and the user study findings. Our proposed approach toward faceted brows ing of a text collection is developed within the context of a filtering mechanism to support exploration of a document collection in a personalized manner. The design of the initial prototype IVEA [Thai et al. 2008a] is, to a certain extent, based on Shneiderman X  X  visual information-seeking mantra  X  Overview first, zoom and filter, then details-on-demand  X  [Shneiderman 1996]. It employs multiple coordinated views to guide users through this workflow. Various statistics about the relationships between documents and entities in the ontology are visually presented to facilitate the exploration, as shown in the current version of IVEA 1 , using a collection of emails from the Enron dataset in Figure 1. The brush-ing and linking technique is used to highlight relevant information across views. The core element in IVEA is a simple user-defined ontology encapsulating their sphere of interest. Each entity can be linked to a user-defined set of associating terms. As such, abbreviations, linguistic variations (plural/singular forms, verb tenses, etc.), concep-tually related terms, and synonyms can be taken into account when necessary 2 .Itis worth noting that similarly to other applications that require seed inputs from users, IVEA could potentially face the  X  X old-start X  issue, whereby in some cases users start out by specifying only a few entities meaningful to them to explore a text collection, and hence are presented with rather limited visual results. To help users realize the full potential of IVEA, we extract frequent p hrases from the documents being explored and propose them as candidate classes or instances to be included in the ontology. If any of them matches users X  evolving interest, they can be used to enrich the ontol-ogy. Subsequent runs of the application will take the newly added entities into account and result in an updated visual interface. While this aspect is beyond the scope of the article, we show in Figure 2 this ontology enrichment feature in action. Figure 2 also serves to demonstrate the generalizability of this approach to other corpora, which in this case is the publicly available State of the Union speeches. Here, users can initially specify a set of entities within an ontology to tailor the exploration process toward their specific interest. When they focus on a document, the most frequent noun chunks of max length of 3 in that document are extracted, and users can opt to add, for example,  X  Congress  X  as an instance of the class  X  Organization  X . To extract those noun chunks, we create JAPE rules that run within GATE [Cunningham et al. 2002]. While we choose this extraction approach due to its simplicity (and hence speed), other phrase extrac-tion options can also be used, such as the Keyphrase Extraction plugin in GATE 3 .
In this work we focus on the faceted filtering aspect of IVEA. This article is an updated and extended version of Thai and Handschuh [2010b]. Here we have provided more analysis of faceted filtering of text collections (in Section 1). We also report on a user study (in Section 5) on a variety of different interfaces to see which ones improved user performance and were well-liked by users. To show the correspondence between documents and entities of interest to users as a result of the faceted filtering process, in the first prototype of IVEA [Thai et al. 2008a] we employed a scatterplot to enable users to compare relevances of documents with respect to at most two entities at a time. This visualization, while intuitive, suffers a lack of visual scalability due to the occlusions created by many documents on display. An early formative study in that work also gave us the user feedback that comparing documents across more than two entities at the same time would be more helpful. As such, we proposed in Thai et al. [2008b] a matrix-based multi-dimensional visualiza-tion, upon which the work presented here is built. To make this article self-contained, we hereby briefly describe this visualization, which was inspired by TableLens [Rao and Card 1994] and FOCUS [Spenke et al. 1996]. This representation, in effect, blends visualization with faceted browsing in that users can select entities from hierarchical facets and then documents relevant to one or more of the selected entities are displayed on the visualization. The main differences to other faceted browsing work are that: (1) our approach focuses on enabling users to explore a document collection which does not have associated metadata and (2) disjunctive queries are used given the charac-teristics of documents as content-bearing items. The relationships between documents and entities of interest to users are automatically obtained based on analysis of the documents X  contents instead of metadata. Since hierarchical relationships between entities are taken into account, selecting a class will result in the automatic inclusion of all of its direct instances and recursively, all of its subclasses. Thus, facet selection for filtering can be done at different levels of granularity and multiple facet values can be selected in a single operation. Within the matrix, rows represent selected entities, columns represent documents containing at least one of those entities, and each cell shows the relevance value (TF-IDF-based score) of a document with respect to an en-tity via its height. To decide a cell X  X  height, we use k-means clustering to identify three clusters of relevance values, and the maximal values of the three clusters are used as thresholds. The vertical part of the cross-hair highlighter helps to focus on which entities a document contains and its horizontal part helps to show the distribution of an entity in a collection. Entity deselection is made as easy as entity selection, that is, users can deselect facet values by right-clicking on an entity and the whole respective row is removed from the visualization. A number of new features have recently been included in IVEA as follows to improve user experience. Keyword search is available to further restrict the matrix to display a particular subset of the result set. If the times-tamps of documents can be extracted, they can also be used to aid filtering. Pivoting is supported when users click on a specific entity that is contained within the document in focus.

Although it meets two of the design desiderata mentioned in Section 1.2 to support faceted filtering interactions, the visualization proposed in Thai et al. [2008b] provides no visual abstraction to cater for a large number of documents and no interactive or-dering of facet values to enable users to ea sily compare items a cross different facet values (entities). In the following sections, we focus on the proposed solution for those two issues. Here, documents are information items and concepts/entities of interest to users are facet values. Given the typical screen resolution, too much data is confusing and limiting informa-tion manipulation. Therefore, it is important to collapse a visual display when desired so that users can focus more effectively. In this respect, the semantic zooming and doc-ument grouping features can be employed simultaneously to achieve a highly flexible visual abstraction when the number of documents makes it challenging for users to digest and explore. We can represent relationships between documents and a set of concepts in a bipartite graph G =( D , C , E ) whose vertices belong to two disjoint sets D representing documents and C representing concepts. If d i  X  D is relevant to c j  X  C , then there is an edge ( d i , c j )  X  E connecting them, whose weight is the relevance of d i with respect to c j . Hierarchy is an important organizational paradigm, which helps users abstract key concepts from groups of similar items and structure their reasoning [Clarkson et al. 2009a]. The semantic zooming feature is based on the hierarchical relationships among entities (facet values) and hence helps avoid cluttered interfaces b y providing different levels of abstraction. The hierarchy attached with the matrix allows users to dynam-ically drill down or roll up to achieve views at different conceptual levels of detail to focus on particular subgroups. This, in effect, is the aggregation of vertices in a set of concepts, hence replaces edges that connect documents to instances of a class with edges that connect documents to that class only. For instance, in Figure 3 assum-ing that c 1 , c 2 , c 3 are instances of a class, they can be grouped into a single concept c 123 representing that class. Documents containing any or all of these three concepts are considered as containing c 123 . Thus, the resulting bigraph on the right has fewer edges. In general, the levels of semantic zooming correspond to the number of hierar-chical relationships between entities defined in the ontology. An example is shown in Figure 4.
 While semantic zooming can abstract away a lot of details, the number of documents in a relatively large collection can still be too much to be effectively displayed on a limited screen space. Here the documents grouping feature provides further abstraction based on the notion of Structural Equivalence of individuals in social networks [Lorrain and White 1971], defined as follows.

Definition . Objects a , b of a category C are structurally equivalent if a relates to every object x of C inexactlythesamewayas b does [Lorrain and White 1971].

This notion is used to partition objects in a set into classes of structurally equivalent objects, which leads to the ability to derive a reduced set of categories in which belong-ing objects are considered equivalent. When these objects are individuals in a social network, the set of derived categories represents  X  X aximal relationally homogeneous groups X  [Lorrain and White 1971].

Here, we treat documents and concepts as objects and adapt the Structural Equiv-alence notion as follows.

Definition . Given a set of concepts C = { c 1 , .., c n } , the set of structurally equivalent documents with respect to C consists of documents containing all elements of C .
In other words, documents d i and d j in D are structurally equivalent with respect entities C , we can identify a set of structurally equivalent documents with respect to each set in the powerset of C (excluding the empty set). For example, in Figure 5 the documents d 1 , d 3 , d 5 contain c 2 , c 4 and not any other concepts. Therefore, they can be put together into a group d 135 as shown in the right bigraph.

It is worth noting that while collapsing and expanding facets with semantic zoom-ing are already widely employed in many facet browsing Web sites, the advantage of our approach is that documents grouping can be used simultaneously with seman-tic zooming to achieve visual abstraction on two different dimensions of concepts and documents at the same time, as can be seen in Figure 4. As such, this approach enables even more flexibility with regard to the levels of granularity at which information is viewed and manipulated. As shown in Figure 6, although the screen space is limited, the visualization can still cope with a large set of documents. Here, the faceted filtering process results in 1131 relevant documents. However, since 18 structurally equivalent groups are identified, only 26 columns need to be shown, as only one (randomly cho-sen) document of a group is initially displayed on the matrix, while other documents that do not belong to any groups are still displayed as a regular column each. In fact, if there are n selected facet values, only a maximum of 2 n  X  1 columns are needed for the initial display. The column of the representative document of a group has a  X + X  sign on top, which is a visual cue to indicate that there are more documents containing exactly the same set of entities. We also use k-means clustering on different group sizes to find three clusters of size and use the maximal values of the three clusters as thresh-olds. Thus, the size of a  X + X  sign can indicate the relative size of a group. Hovering the mouse over a  X + X  sign will pop-up the exact number of documents in that group. This visual cue overcomes the need to show numeric values, which require varying spaces and can distort the consistent layout of the matrix. Clicking on this representative column will make visible all documents in a group and its visual cue changes to  X - X  as shown in Figure 6. Clicking again on the representative column will hide other docu-ments in that group. This  X  X ocus+context X  interaction simplifies the comprehension of the visual display of a large number of documents without users having to examine a matrix containing a large number of columns, since the initial display does not depend on the actual number of focus items (documents). As previously mentioned, not all facets are equally important. For each user and/or for each task, there is an order of importance of facet values accordingly. Therefore, we consider facet values that are placed on top to be more important than those below them. Thus, documents and groups of documents are reordered based on their corre-spondences with facet values. As in Figure 4, in the facet  X  X egalActivity X , the value  X  X estimony X  has the highest position, therefore documents and groups of documents that are relevant to  X  X estimony X  are moved to the left and those that do not are moved to the right. Within these two groups, they are subsequently ordered by their rele-vances to the second value,  X  X ettlement X . This ordering is done similarly until the last facet value. This ordering can be efficiently achieved using a bitmap of a document or a group of documents, which is constructed by assigning a 1 bit if a document/group of documents is relevant to a facet value, a 0 bit otherwise, and the first facet value corresponds to the highest-order bit. For instance, the leftmost document in Figure 7 corresponds to the value  X 11111000 X , highest among the derived bitmap values.
Furthermore, users can interactively reorder facet values while exploring a text col-lection. As shown in Figure 7, in the facet  X  X egalActivity X , if the values  X  X nvestigation X  and  X  X llegation X  are considered more important, they can be moved (via drag-and-drop) on top. The documents X  order within the matrix is changed accordingly as a result. We believe that this visual ordering based on facet values enables users to easily compare focus items, in this case docu ments/groups of documents, across facet values in a meaningful, prioritized way. We conducted a user study to test the null hypothesis that there are no differences on users X  performance and preferences on interfaces using the matrix-based representa-tion and interfaces using the linear listing paradigm. 5.1.1. Participants. 18 people (9 females, 9 males) participated in the study, two of whom participated in pilot sessions. Six of them were in the age range of [18,25], nine in [26,40], and three in [41,60]. In terms of occupations, the subjects were accoun-tants, administrative assistants, project administrators, managers, programmers, un-dergraduate and graduate students in History, Business, Physics, Industrial Engineer-ing, and Information Technology/Computer Science. All were familiar with Web search and had needs to seek for information from documents (with frequencies ranging from a few times a week to hourly). They had all used commercial Web sites employing the faceted browsing paradigm. None had any prior experience with the IVEA prototype. 5.1.2. Materials. We used a set of 38180 emails from the Enron email dataset (avail-able at http://www.cs.cmu.edu/  X  enron/) as the test collection in the study. These emails varied in length, from relatively short to long ones. Many of them were internal dis-seminations of news articles together with further discussion. A set of predefined facets and facet values were used for the study. The study was conducted on a 15 " laptop with a 1440x900 screen resolution. 5.1.3. Design. The study used a within-subjects design. The independent variables were the interface type and the task type; the dependent variables were the partici-pants X  performance and their subjective ratings.

In this study, we implemented four different interfaces to display the result set returned from faceted filtering interactions.  X  Simple linear listing (UI1). In this baseline interface, as shown in Figure 8, items were displayed linearly, ordered by their relevance to the set of selected entities (facet values). Each result item had an email subject, a set of entities that it con-tained among those used for filtering, and a short text snippet. This interface re-sembled current faceted browsing Web site s in terms of showing which facet values an item is associated with for a multivalued facet.  X  Linear listing with grouping (UI2). As shown in Figure 9, this interface was similar to UI1 in that it also employed the linear listing paradigm that users were already familiar with. However, instead of showing the names of the entities contained in each result item, small squared icons were used as their visual representations.
Entities X  names could be known from the legend or the tooltip texts. Each square was filled with a color based on its corresponding entity and its relevance value, in the same fashion as cells in the matrix representation. In addition, items were also ordered and grouped in a similar fashion to our proposed approach in Sections 3 and 4 in that items containing exactly the same set of entities were displayed continuously and ordered by their binary signatures. This interface served as a strong baseline.  X  Matrix-based view (UI3). This interface employed the proposed approach in Sec-tions 3 and 4.  X  Matrix-based view with linear listing (UI4). As shown in Figure 10, this hybrid in-terface was a combination of UI3 and a slightly modified version of UI2. When users clicked on the representative column of a group of structurally equivalent items, they were not expanded as columns in the matrix. Instead, this group of documents were shown in a linear listing view in which items were ordered by relevance with respect to the set of entities shown in the representative column. The representative column was visually highlighted in the matrix to indicate which combination of en-tities were contained in that group of items. The visual indicator for each document was made more compact as nonrelevant entities were removed, which resulted in a more focused representation while the correspondence between a document and the whole set of selected entities was still visually available in a larger context in the matrix.

The previous four interfaces were considered to cover a range of variations from the one that resembled the current linear listing paradigm, to linear listing enhanced with icon representations, which was also grouped and ordered, to the proposed matrix-based representation and a hybrid version of matrix-based and linear listing view. During the study, each implemented interf ace was referred to by a neutral, color-based name, for example,  X  X acetExplorer-Green X  for UI4. 5.1.4. Procedure. The subjects were given a short briefing about the study. They were also introduced to and shown video screencasts of all four different interfaces and asked to carry out a number of sample tasks on each of them. They were not informed of which ones employed our proposed approach. Then they were asked to perform four different sets of tasks, one for each interface. To eliminate learning effects, the order of the interfaces was counterbalanced. The assignments of the four different sets of tasks to the four interfaces were also counterbalanced using Latin Square as suggested in K  X  aki and Aula [2008].

Each set of tasks consisted of the following three parts.  X  The first task was related to basic repository statistics, that is, asking for the num-ber of documents meeting some criteria in two subtasks.  X  The second task asked the subjects to filter for (i.e., identify) specific documents meeting some criteria including a time period.  X  The last task was an optional task involving the subjects freely filtering for docu-ments of interest.
 The first two tasks were preceded with short excerpts from news articles from the New York Times , which were related to the Enron event and hence the dataset, to set the contexts. The contexts were helpful to provide the subjects with some topically inter-esting background information and hence they could relate to the situation and be motivated to carry out the tasks [Kules and Capra 2008]. In addition, we designed the first two tasks such that they required the same amount of efforts (the same num-ber of steps) to find out the answers, that is, all subtasks involved the same number of different entities, however, their associated Boolean operators were varied to avoid learning effects. While the first two tasks e nabled us to compare users X  performances with respect to obtaining basic repository statistics and identifying the relevant set of documents meeting certain criteria, the third task was an opportunity for the sub-jects to freely experiment with various features of the interfaces being evaluated and hence we could solicit their comments. As such, we took into consideration the task completion time and accuracy in the first two tasks and sought qualitative results from the third one. One of the four sets of task is available in the Appendix. The partici-pants did not have to write down answers as doing so may introduce large variations in terms of time. They only pointed to them on the screen and verbally informed the facilitator, the accuracy and task completion time were extracted in post-hoc analysis based on the screen and voice capture.

In order to compare the subjects X  performance when the Latin Square design was used, it was important to take the tasks X  characteristics into consideration while com-paring them. While the number of entities involved were equal across tasks, the sizes of the result sets were not, and that was something we could not control. To answer the structured tasks, the subjects had to process result sets of different sizes and as larger result sets may require more time, we should not attribute that to the interfaces themselves. In addition, the accuracy of the answers should also be considered, since participants who made mistakes should be considered as having lower performance scores. Therefore, we employed a metric similar to the qualified search speed pro-posed in K  X  aki and Aula [2008], called Relevant Browse Speed (RBS), which reflected the number of focus items the subjects were able to process per minute, weighted by the accuracy of their answers.

Once the subjects finished the tasks on all interfaces, they were asked to give their subjective ratings on each of the interfaces, based upon the following adjectives:  X  Easy to use  X ,  X  Easy to browse  X ,  X  Stimulating  X ,  X  Satisfying  X ,  X  Overwhelming  X ,  X  Flexi-ble  X ,  X  Self-descriptive  X ,  X  Organized  X , X  Tedious  X . The ratings were on a Likert scale from 1 (Strongly disagree) to 9 (Strongly agree), with 5 being neutral. Similar to the study conducted in Yee et al. [2003], we used a wide range to have a more sensitive testing instrument. In addition, the reason the subjects were asked to give these ratings once they finished all tasks was to give them a chance to interact with all interfaces, and therefore they could calibrate their ratings in an informed manner. Previous work showed that the order of interfaces could have an effect on the subjective ratings (e.g., in Yee et al. [2003]) and hence we want to avoid this effect. Upon completion of tasks on all four interfaces, the subjects were asked to answer an overall questionnaire. The findings are presented next. Before we discuss the findings, it is worth noting a few challenges we faced in setting up the tasks for this experimental study. As faceted navigation is usually used to sup-port exploratory activities, constructing tasks for evaluation is known as a challenging issue [Kules and Capra 2008]. Among the desired characteristics proposed in Kules and Capra [2008], exploratory tasks should indicate ambiguity in information needs, but also suggest a knowledge acquisition, comparison, or discovery task. As such, a combination of structured and unstructured tasks are usually used in experimental studies on faceted browsing (e.g., Yee et al. [2003]), with  X  X nown item X  search tasks also used in some cases (e.g., Kules et al. [2009]). While it may be better to evalu-ate a tool supporting exploratory search in a longitudinal study, our evaluation effort here was not on the tool (IVEA) itself as a whole, but specifically on its way of pre-senting items from the filtering step. Therefore, we designed the filtering/comparison tasks in such a way that they could be carried out on all four interfaces. Although the prototype could provide more features than reflected in the structured tasks, these fea-tures were emphasized in the introduction and the unstructured tasks instead. In a controlled user study, the type of preformulated query tasks such as those used here was considered acceptable for comparing different ways of presenting the result set, since they helped to control the variations potentially caused by many elements of an experimental study and to focus on a particular interface component instead of the whole tool [Hearst 2009; K  X  aki and Aula 2008]. In this discussion, for clarity we refer to the interfaces using their abbreviations, for example, UI1 instead of the neutral names used in the study. 5.2.1. Quantitative Results. When the subjects carried out the tasks, six of them gave up with UI1 on all tasks as they found it too tedious to continue. The rest of the participants tried but also gave up on at least one task with UI1. Therefore, we did not have sufficient data on the subjects X  performance on UI1 to include it in further analysis.

The mean relevant browse speeds by UI and task are shown in Figure 11. We an-alyzed this dependent variable using a 3 x 2 (3 interfaces x 2 task types) repeated-measures ANOVA. The results showed the following.  X  The main effect of interface type was significant, F (2 , 30) = 4 . 55 , p &lt;. 05 , X  2 = . 23, hence the null hypothesis was rejected. Pairwise comparisons with Bonferroni ad-justment showed that the relevant browse speed on UI2 ( M = 909 , SD = 130) was significantly less than that on UI3 ( M = 1599 , SD = 191) and UI4 ( M = 1476 , SD = 170), both p s &lt;. 05. There was no significant difference between the relevant browse speeds on UI3 and UI4. The reason that the mean relevant browse speeds seemed to be high was because groupings (in all three interfaces) and ordering (in UI3 and UI4) allowed the subjects to skip many of the irrelevant groups of focus items. Thus, it was not the case that the participants looked into every single focus item to decide if it matched or not, but only at the visual encodings of representative items of the groups. As such, even when there were thousands of documents to be processed, only a small number of them needed to be considered instead. This reflected the advantage of using grouping and ordering.  X  The main effect of task type was also significant, F (1 , 15) = 17 . 99 , p &lt;. 05 , X  2 = . 55.
Pairwise comparisons with Bonferroni adjustment showed that the relevant browse speed on task 1 was significantly less than that on task 2, p &lt;. 05. This may be attributed to the fact that in each task set, task 1 was always before task 2 on all interfaces, so the subjects became more familiar with the interfaces as they carried out the tasks and faster on task 2 as a result. In addition, in task 2, there were always two subtasks that used the same set of entities but different Boolean operators attached (for the purpose of comparison), hence the participants did not have to form new queries (and hence needed not process a new result set), they just needed to find relevant answers from the same set of results.  X  The interaction effect was not significant, p &gt;. 05.
 Furthermore, the mean values of the participants X  ratings on the degree to which they agreed with the adjectives used to describe the four interfaces are shown in Figure 12. In general, UI3 and UI4 received more positive ratings than UI1 and UI2 in almost all measures. Next we discuss the ratings for each adjective based on ANOVA analysis and post-hoc tests.  X  X  Easy to browse  X : The effect of interface type was significant, F (3,60) = 18.29, p &lt; . 001. Tukey HSD post-hoc tests showed that it was significantly less easy to browse on UI1 than on the other three interfaces, p &lt;. 001. (No other pairwise differences were significant.)  X  X  Easy to use  X : The effect of interface type was significant, F (3,60) = 5.44, p &lt;. 05.
While the significance value for homogeneity of variances in this case had p &lt;. 05, the Welch and Brown-Forsythe tests were both significant with p &lt;. 05, therefore we could reject the null hypothesis that there was no difference in the mean ratings with respect to the  X  Easy to use  X  aspect. Games-Howell post-hoc tests showed that
UI1 was significantly less easy to use than UI3 and UI4, p &lt;. 05.  X  X  Flexible  X : The effect of interface type was significant, F (3,60) = 18.12, p &lt;. 001.
Tukey HSD post-hoc tests showed that UI1 was significantly less flexible than the other three interfaces, p &lt;. 001.  X  X  Organized  X : The effect of interface type was significant, F (3,60) = 6, p &lt;. 05. Games-Howell post-hoc tests showed that UI1 was significantly less organized than
UI3 and UI4, p &lt;. 05.  X  X  Overwhelming  X : The effect of interface type was significant, F (3,60) = 7.66, p &lt; . 001. Games-Howell post-hoc tests showed that UI1 was significantly more over-whelming than the other three interfaces, p &lt;. 05.
  X  X  Satisfying  X : The effect of interface type was significant, F (3,60) = 18.87, p &lt;. 001.
Tukey HSD post-hoc tests showed that UI1 was significantly less satisfying than the other three interfaces, p &lt;. 001.  X  X  Self-descriptive  X : The effect of interface type was not significant, p &gt;. 05.  X  X  Stimulating  X : The effect of interface type was significant, F (3,60) = 10.44, p &lt;. 001.
Tukey HSD post-hoc tests showed that UI1 was significantly less stimulating to use than the other three interfaces, p &lt;. 05.  X  X  Tedious  X : The effect of interface type was significant, F (3,60) = 14.45, p &lt;. 001.
Games-Howell post-hoc tests showed that UI1 was significantly more tedious than the other three interfaces, p &lt;. 05.

In summary, it was faster and more accurate for the subjects to filter/explore with the interfaces that employed the matrix-based representation (UI3 and UI4) than the linear listing paradigm enhanced with visual encodings and grouping (UI2). The sim-ple baseline, linear-listing-only interface (UI1) was perceived to be too tedious to be useful for this kind of activity (which was also well reflected in the subjective rat-ings). Both the interfaces that used the matrix-based representation were well-liked by the subjects, as they were considered to be easy to use, to browse, flexible, orga-nized, satisfying, and stimulating. While the strong baseline interface (UI2) received lower ratings on these aspects on average, the differences were not significant in com-parison with UI3 and UI4. The pure baseline (UI1) was also considered to be over-whelming. There was no significant difference in terms of self-descriptiveness for all interfaces. 5.2.2. Qualitative results. The subjects X  answers to the overall questionnaire (listed in the Appendix) on the four different interfaces are described next. The finer-grained, elaborated details from the participants were useful as more could be understood about their preferences.

The participants X  answers indicated that they thought the tasks were equally dif-ficult. When asked which interface was the easiest to use, nine subjects chose UI4, one chose UI3, four of them thought UI3 and UI4 were equally so, and only two chose UI2. Furthermore, six subjects chose UI4 as helped them learn the most about the col-lection, two chose UI3, five of them thought UI3 and UI4 equally did, one chose UI2, while one chose UI2/UI4 because of the listing, and one did not know. All participants thought the use of the matrix-based representation changed the way they used to ex-plore a collection, with positive and encouraging comments such as  X  X  think that the ability to look at the nodes [document-entity relations] is really really good. This is often the way I wanna look at things but it X  X  not easy to do [with existing interfaces]. X  The participants X  feedback for questions on interfaces X  features are summarized in Table I via an example for each type of responses, ordered by the nonexclusive Count figures indicating how many subjects mentioned similar comments.

The subjects also commented on their experience when browsing/filtering freely without any guided tasks in order to gather documents potentially containing rele-vant pieces of information. Most were really positive in the case they were enjoying exploring the collection, such as  X  X asy enough to get the information out to get an overview, especially with UI3 and UI4 X  or  X  X t was fine, but it X  X  hard to start. It allows for a lot of trials and errors, adding and rem oving concepts, when you try something and then you get rid of it, the overall result will be more satisfying. X  on UI4. Another subject was surprised about her findings when trying to find documents mentioning a combination of some entities in particular:  X  X here were certain categories where I thought there would be overlap but there wasn X  X . X  Some responses were more reserved when the commenters did not know much about the collection (the Enron event), for example,  X  X he documents were not interesting for me, if it was something that I would need, then I would probably very much enjoy it. X , and did not define the set of entities of interest themselves. As a result, not all participants performed the unstructured tasks on every interface. In addition, we observed the following.  X  Asking the subjects to carry out unstructured tasks in a controlled experimental study was troublesome, as the nature of the unstructured tasks were contradictory to that of the settings. The subjects were not in a state of mind that would normally encourage them to freely explore a text collection.  X  With our evaluation focusing only on the visual representation to support exploring the result set returned from the faceted filtering step, it was not easy for the subjects to resist using the prototype as a whole.
 Furthermore, the subjects X  overall rankings of the four interfaces are shown in Table II. It is clear that UI4 was most liked, followed by UI3. UI1 was disliked by all participants. The rankings were in fact surp rising to us, as prior to the user study, we believed that UI3 had the advantage of not requiring users to process more informa-tion. But as it turned out, the additional list view in UI4 was perceived as providing more useful information. Further feedback on their justification for the rankings is summarized in Table III.

In terms of other usability aspects, the subjects were also asked if they think it would make a difference if the matrix only used one color. The responses were unani-mous, for example,  X  X es, it would be less effective X ,  X  X t would be more difficult without colors X . Finally, certain usability issues were raised by the participants as described in Table IV. Since their frequency was low, we believe that with proper documenta-tion/training, the subjects would be able to overcome these issues once they get more familiar with a new visual representation.
 Since our work focuses on faceted browsing of text collections, it is related to both faceted browsing in general and faceted browsing of text collections. Reviews and thorough analysis of research work and commercial applications employing the faceted navigation paradigm can be found in Hearst [2009] and Stefaner et al. [2009]. In this section, we highlight some recent work that have not been covered in the preceding two publications and other visualizations that are related to ours.

A number of faceted navigation systems support exploratory tasks by visualizing the number of items matching the concepts (used as facet values) such as RAVE (using bar charts) [Zhang and Marchionini 2004], Elastic Lists (using list items X  sizes) [Stefaner et al. 2008], and VisGets (using tag cloud color intensities) [D  X  ork et al. 2008]. Mean-while, in IVEA, we use the query previews [Plaisant et al. 1997]. The main difference between the three aforesaid systems and our work is the result set presentation. All three systems mentioned before employ the linear listing paradigm on the result set once certain concepts have been selected. In this approach, there are no indicators of which concepts an item matches and how relevant it is to each of them.
 ContentLandscape [Stefaner et al. 2008], ResultMaps [Clarkson et al. 2009a], FacetLens [Lee et al. 2009], and DocuBrowse [Girgensohn et al. 2010] are recent appli-cations that visualize result set distributions using treemaps or treemap-inspired rep-resentations. The ContentLandscape application aims at supporting resource analysis by allowing users to see the coverage of the selected resource set (e.g., if all product groups are represented by the result set) as well as to split the result set to up to three dimensions and compare various measures [Stefaner et al. 2008]. This appli-cation does not target at documents as resources and hence uses conjunctive queries as often seen in other applications. ResultMaps, while not being a faceted browser, is relevant to our work because it uses a treemap to represent hierarchical metadata and employs the brushing technique to link the categories that a result list item matches [Clarkson et al. 2009a]. The experimental study on ResultMaps provided interesting and useful findings: (1) while the mean tas k time and accuracy were better in the in-terface with ResultMaps, there was no statistically significant effect by the interface type on both measures and (2) users of digital libraries, who are among those that have the need to explore a document collection, actually are most often interested in the content of the documents rather than their metadata, which could partially ex-plain (1). FacetLens [Lee et al. 2009] is also a faceted browser which employs a more text-oriented variation of the treemap paradigm to show the result set, augmented by a timeline showing basic statistics. FacetLens shares certain visual features with its predecessor FacetMap [Smith et al. 2006], for which certain concern about the usage of screen estate was raised in Hearst [2008]. Besides, FacetLens is also only based on metadata and hence has the same limitation that researchers working on ResultMaps had come to realize when documents were not treated as content-bearing resources even though documents X  contents matter to most users. DocuBrowse is a recent ad-dition to faceted browsing research, which targets at usage in an enterprise setting [Girgensohn et al. 2010]. It makes use of metadata and the document collection file structure (organizational hierarchy) to support search and browsing. In this enter-prise context, DocuBrowse also focuses on file types as genres (spreadsheet, presenta-tion slides, etc.) and these genres, among others, can be used as facet values. While DocuBrowse maintains the organization structure in the visualization of results, its approach is different from ours in that it relies on the documents X  metadata and or-ganization hierarchy information. The document contents are only made use of for recommendation purposes instead in DocuBrowse.

It is also worth noting Camelis [Ferr  X  e 2008] and Microsoft Pivot 4 . Camelis is a faceted browser that allows flexible query formulations via various navigation modes. This feature is advantageous when differe nt Boolean operators can be associated with facet values, for example, filtering for photos that satisfy the condition  X  Australia and not portrait  X  from a photo collection. Most faceted browsers do not provide this feature despite it being an important one. However, while Camelis targets at supporting agile browsing of a document collection, it does not treat documents as content-bearing re-sources and there is also no grouping or specific ordering available for the result set. Microsoft Pivot, on the other hand, is a rece nt faceted browsing application which al-lows for grouping and ordering of items. This application, however, only works with item collections that have a set of associated clean metadata.

The use of a matrix-based representation to show the correspondence between con-cepts and documents was proposed earlier in the TileBars paradigm to show distribu-tion of query terms within full text documents [Hearst 1995]. The TileBars approach, however, uses a separate visual representation for each document and its purpose is different from ours. DocBlocks [Assogba et al. 2010] is a recent work that is also based on TileBars to support explorations of U.S. congressional bills. This work is valuable in that it visualizes the thematic contents of documents based on their structures. How-ever, due to its focus on visualizing the internal structure of each document (which the IVEA prototype also focuses on in a different manner via a reordered variation of the TileBars paradigm [Thai and Handschuh 2010a]), DocBlocks does not provide the grouping and ordering of documents at collection level.

In addition, there are a number of other interesting approaches to visualize the correspondence between concepts and documents. DocuBurst uses a radial, space-filling layout approach to visualize the frequency of words in a document that match a hierarchical language structure such as WordNet [Collins et al. 2009]. While this representation is intuitive, visually appealing, and helpful for content analysis of a single (usually long) document, it could potentially pose a challenge to users if many documents are to be compared at the same time. Jigsaw [Stasko et al. 2008] is a visu-alization tool supporting investigative analysts in finding connections between docu-ments and entities. Unlike DocuBurst, Jigsaw focuses on relatively short documents and entities of specific types such as people, organizations, dates, and places. Connec-tions between documents and entities are shown using node-link diagrams similar to the bigraphs used to illustrate our visual abstraction approaches in Figure 3 and 5 but in a circular layout, which are visually simple and make it easy for analysts to traverse between documents and entities. However, there is no semantic zooming feature to in-vestigate at different levels of detail with respect to the set of entities a document con-tains. Furthermore, in Jigsaw, documents containing exactly the same set of entities are identifiable but not grouped together and hence may cause visual scalability issues when many documents and entities are displayed at once. AutoFocus is an ontology-based visualization tool which displays search results for documents on the desktop as clusters of populated concepts [Fluit 2005]. While allowing for the exploration of a document collection based on the extracted metadata and search keywords, AutoFocus does not focus on the contents within documents. DocCube [Mothe et al. 2003] is based on OLAP principles and employs 2D and 3D scatter plots to show the number of doc-uments belonging to several categories, which are grouped into dimensions. DocCube, however, does not allow for relative comparison between documents to see how they are relevant to a set of concepts or categories. It is also limited to displaying at most 3 dimensions at a time. Compus [Fekete and Dufournaud 2000] is an application to visualize structured document corpora encoded in XML. In Compus, each document is represented by a vertical bar, which comprises of color-coded elements. While compar-isons between documents can be made to a certain extent, Compus lacks a mechanism to deal with the visual scalability issue. SPIRE/Themescapes [Wise et al. 1995] is a tool for document clustering via a document landscape on which the strength and in-terrelations of different themes are represented. In an analogous manner, VIBE [Olsen et al. 1993] supports users in getting an overview of a document collection relatively to their interests. In VIBE, the positioning of documents on a 2D display is based on the degrees of overlapping between keywords that users define for their Points Of Interest (POI) and documents X  contents. However, no intradocument details are available in either SPIRE/Themescapes or VIBE. The visual scalability issue is also left untouched in VIBE as there is no information on how it can cater for a relatively large document collection and set of POI. In this article, we have proposed a novel approach to support users in exploring a text collection by blending a multidimensional visualization with the faceted navigation paradigm. Our analysis of the application area has resulted in further understanding of users X  needs, for example, the ability to treat documents as content-bearing infor-mation resources and the ability to carry out prioritized comparisons between them across facet values. Our proposed approach is based on a matrix representation which is analogous to the already familiar spreadsheet paradigm. Its visual simplicity makes it usable as it can convey the correspondence between a document and a set of concepts. The semantic zooming, document grouping, and facet reordering features, which can be used simultaneously, enable the tool to deal with a large amount of documents as well as to provide users with a substantial amount of flexibility in terms of choosing the levels of abstraction and priorities of the chosen facet values. We conducted a user study on a variety of interface types and the results showed that those that used the matrix representation were more capable of s upporting users in exploratory tasks and were also well-liked by the participants of the study, with the hybrid interface receiv-ing the most favorable ratings.
 The following is one of the four sets of tasks used in the user study 5 . 1.  X ...Even as the celebrations unfolded, a ccountants and trading experts at the com-pany X  X  Houston headquarters were desperately working to contain a financial disaster, one that threatened  X  and ultimately would destroy  X  everything Enron had become. A handful of executives were struggling to sound the alarm, but with Enron X  X  confidence in its destiny, the warnings went unheeded... X  In this context, you may want to focus on emails that mentioned accounting and Kenneth L. Lay. Among them, (a) How many emails mentioned loss? (b) Among those that did not mention loss, how many emails in 1999 X 2002 mentioned 2.  X ...On Aug. 14, stunning the market, Jeff Skilling announced he was resigning after just six months as chief executive, citing undisclosed personal reasons. He left assuring investors that the finances of Enron had never been better... X  (a) You may want to find out more about internal communications surrounding this (b) Identify emails that mentioned investigation. (c) Identify emails that did not mention investigation. 3. Filter for emails of interest based on either of the two contexts mentioned before.  X  Do you think the tasks are equally difficu lt? (apart from the different result set sizes).  X  Which interface is the easiest to use?  X  Which interface helps you learn the most about the document collection while exploring?  X  Did the matrix-based presentation of result items change the way you used to explore a collection of text documents?  X  Can you describe an example where the matrix-based presentation of result items helped/hindered, frustrated your exploration process?  X  Do you think the grouping of documents containing exactly the same set of entities helped or hindered exploring a large number of relevant documents? (both group-ings in list views and in matrix views)  X  Do you think the ability to abstract the view on the matrix simultaneously on two dimensions (concepts and documents) helped or hindered the document exploring process?  X  Do you think that the interactive ordering in a matrix-based presentation of result items helped or hindered while you are trying to have a clearer idea of the result set? Can you describe an example?  X  Would it make a difference if the matrix only used one color?  X  What was your experience when browsing/filtering freely without any guided tasks in order to gather documents potentially containing relevant pieces of information?  X  Overall, how would you rank the interfaces? Please provide comments on your ranking.

