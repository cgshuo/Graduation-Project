 Jue Wang 2 , Chenyu Wu 3 , Ying-Qing Xu 1 , Heung-Yeung Shum 1 Abstract. This paper proposes a novel learning-based approach to synthesizing cursive handwriting of a user X  X  personal handwriting style by combining shape and physical models. In the training process, some sample paragraphs written by a user are collected and these cur-sive handwriting samples are segmented into individual characters by using a two-level writer-independent seg-mentation algorithm. Samples for each letter are then aligned and trained using shape models. In the synthe-sis process, a delta log-normal model based conditional sampling algorithm is proposed to produce smooth and natural cursive handwriting of the user X  X  style from mod-els.
 Keywords: Handwriting synthesis  X  Cursive script  X  Handwriting segmentation  X  Delta log-normal model  X  Conditional sampling 1 Introduction Pen-based interfaces are now a hotspot in human-computer interface (HCI) research because in many situ-ations, a pen together with a notepad is more convenient than a keyboard or a mouse. The flourish of pen-based devices brings a great demand for various handwriting computing techniques. Hierarchically speaking, these de-mands can be categorized into two levels. The first level is handwriting recognition; techniques in this level make it possible for computers to understand the information involved in handwriting. The second level is handwrit-ing modulation, for instance, handwriting editing, error correction, script searching, etc. These applications have gained much attention recently due to their increasing importance on newly developed pen-based devices such as PDAs and Tablet PCs. Suppose that when writing a of learning personal handwriting style is transformed to statistically analyze the distribution of landmark points. However, this approach cannot scale up to larger num-bers of allographs since splines are not optimal for mod-eling the abundant straight lines and points of high cur-vature in mixed-style handwriting. Another issue of this approach is that it tries to learn a separate model for the connection of each pair of letters, and this is impractical since the size of the training set is always limited. sults, we first propose two constraints that a successful handwriting synthesis algorithm should meet: 1. The shapes of letters in the synthesized cursive hand-2. The connection between synthesized letters should be vantages of the shape-simulation and the movement-simulation methods to propose a novel cursive hand-writing synthesis technique. Handwriting samples are collected and segmented into individual characters us-ing a two-level writer-independent segmentation algo-rithm. Like widely used statistical shape models [9, 10], handwriting strokes of the same character are automat-ically matched and aligned first, and the shape varia-tion of the training set is then learned by PCA mod-els. To produce fluent handwriting, we exploit the delta log-normal model and propose a conditional sampling method, which has the ability to selectively generate novel letters from models and connect them smoothly. Section 2 presents our methods for training data prepa-ration and segmentation. Section 3 describes the hand-writing stroke alignment and training algorithms. Sec-tion 4 presents the conditional sampling technique in the synthesis strategies. Some experimental results are shown in Sect. 5, and discussions and conclusions are presented in Sect. 6. 2 Sample collection and segmentation 2.1 Sample collection For an initial user, he/she is required to write some sam-ple paragraphs for the training purpose, on a newly de-veloped Tablet PC which incorporates an integral dis-play. There are about 200 words in these paragraphs and each letter has appeared more than five times. In the preprocessing step, these handwriting samples firstly pass through a low pass filter and then be re-sampled to produce equi-distant points. Since we will train a sepa-rate model for each character, handwritten letters will be extracted from these cursive scripts, using the proposed cursive handwriting segmentation technique. tation system, a large handwriting database has been built, which includes about 100,000 words written by more than 100 people. In the experiments, the low-level feature-based segmentation algorithm works well for a small number of writers. However, as more and more writing styles are added, it degrades rapidly in captur-ing the variance of distinctly different writing styles. For effective handling of the dramatic variance between dif-ferent writing styles, a script code is calculated from handwriting data as the middle-level feature for subclass clustering. Five kinds of key points on the handwriting sequence are extracted: points of maximum/minimum x -coordinate, points of maximum/minimum y -coordinate and crossing points, denoted as X + ,X  X  ,Y + ,Y  X  and quence between two adjacent key points is calculated and quantized to eight directions, denoted as  X  X  X  X  X  X  . Any character can be uniquely coded by means of this notation, as shown in Fig. 1. Based on the distance be-tween script codes, samples of each character are divided into several clusters, and those in the same cluster have a similar structural topology.
 in all cases, it is implausible to directly compute the distance. In this study the script code is modeled as a homogeneous Markov chain. Given two script codes T 1 and T 2 , we may compute the stationary distributions  X  1 ,  X  2 and transition matrix A 1 , A 2 . The similarity between two script codes is measured as d ( T 1 ,T 2 ) = exp  X  Leibler (KL) divergence between two distributions. The positions of  X  1 ,  X  2 , A 1 , and A 2 are enforced symmetri-cally in Eq. 2.  X  1 ,  X  2 , and  X  3 balance the variance of the KL divergence and the difference in code length. If both the stationary distribution and the transition matrix of two script codes are matched well, and their code lengths are almost the same, the similarity measure d ( T 1 ,T 2 )is close to 1.
 lected alphabetically. Samples for each character are first aligned, and then the variation of their trajectories is an-alyzed by applying PCA. 3.1 Data alignment 3.1.1 Trajectory matching. For training purposes, hand-writing trajectory must be represented by a vector of points with a fixed dimension, and these points can be consistently located from one sample to another. In gen-eral, extracting these points is a curve-matching prob-lem, and many approaches have been proposed for solv-ing it [13]. For handwriting data, the matching problem can be simplified by exploiting the extensive studies on handwriting trajectory models.
 trajectory can be decomposed into a sequence of static pieces, and each static piece has a time-invariant curva-ture. Motivated by this study, a hierarchial handwriting alignment algorithm is proposed in which handwriting trajectory is segmented into static pieces by landmark points, and these pieces are matched with each other first. Since each piece is a simple arc, points can be equidistantly sampled from it to represent the stroke. as the one proposed in [5]. Three kinds of points are ex-tracted: pen-down and pen-up points, local extrema of curvature, and inflection points of curvature. The curva-ture of each point is approximated by the change in the angle of the tangent. In our experiments, the trajectory of a handwriting sample can be divided into as many as six pieces including late strokes such as t crossings and i dots, depending on its topological structure. For a writer with a consistent writing style, samples of the same character are mostly composed of the same num-ber of pieces and they match each other naturally. In this case, a small number of abnormal samples will be discarded. Otherwise, handwriting samples will be di-vided into subclasses according to their decomposition modes, and for each subclass a separate model will be trained. 3.1.2 Training set alignment. Using the methods de-scribed above, a handwriting sample can be represented by a point vector ues  X  i of S are computed and sorted so that  X  i  X   X  i +1 . The training set is approximated by where  X  =(  X  1 |  X  2 | ... |  X  t ) represents the t eigenvectors corresponding to the largest eigenvalues and b is a v t -dimensional vector given by jectory can be generated from this model. Furthermore, by applying limits of  X  3 ensure that the generated trajectory will be similar to those in the training set.
 of training their models separately, we assume that they are virtually connected with the previous strokes of the same letters and train the models for the pairs of strokes together by combining their aligned vectors in sequence. 4 Synthesis strategies To synthesize a word with learned models, we first gen-erate each individual letter in the word. Then the base-lines of these letters are aligned and juxtaposed in a se-quence. The following step is to concatenate letters with their neighbors to form a cursive handwriting. However, this objective cannot be easily achieved. As shown in Fig. 3a, directly connecting adjacent letters will produce some discontinuities in the handwriting trajectory. By deforming the head part and tail part of the trajectory of each character, we can obtain a smoother connection, as shown in Fig. 3b. However, we cannot ensure that the deformed letters will still be similar to those in the train-ing set. To solve this problem, a delta log-normal model based conditional sampling algorithm is proposed that can not only produce smooth connections between char-acters but also ensure that the deformed characters will be consistent with the models, which will be shown in Fig. 5 and Fig. 7. The term conditional sampling comes from the fact that in the algorithm, each letter is gener-ated from models under the effects and constraints of its neighbors. 4.1 Delta log-normal model The delta log-normal model is a powerful tool in an-alyzing rapid human movements. It describes a neuro-muscular synergy in terms of the agonist and antagonist systems involved in the production of these movements [5]. (See [4, 16] for details of this model.) With respect to handwriting generation, the movement of a simple stroke is controlled by velocity [17]. The magnitude of the velocity is described as where  X  ( t ; t 0 , X , X  2 )= is a log-normal function, where t 0 represents the activa-tion time, D i the amplitude of impulse commands,  X  i the mean time delay, and  X  i the response time of the agonist and antagonist systems, respectively, on a loga-rithmic scale axis.
 where  X  0 is the initial direction and c 0 is a constant. The angular velocity is calculated as the derivative of  X  ( t ): Given v  X  ( t ), the curvature along a stroke piece is calcu-lated as This means that the curvature along a stroke piece is time invariant. Thus, the static shape of the piece is an arc, characterized by: where  X  =  X  0 is the initial angular direction, c = c 0 is the constant curvature, and D = D 1  X  D 2 is the arc length. posed and is formally described as follows: 1. Randomly generate a vector b ( i ) for each letter ini-2. Generate trajectories S i of letters according to their 3. For each pair of adjacent letters { S i ,S i +1 } , deform 4. Project the deformed shape into the model coordi-5. Update the model parameters to match X i : b ( i )= 6. Apply constraints on b ( i ) by making | b j ( i ) | &lt; = 7. If not converged, return to step 2.
 In step 3, the concatenation energy is to be minimized. Formally, a vector of parameter P ( i, i + 1) is to be cal-culated as P  X  ( i, i +1)= &lt; X   X  problem, and there exist many methods to solve it. In this study, we use the Direction Set ( Powell X  X ) method [18] to minimize the energy. After the iterative process is finished, we make a check on the concatenation en-ergy between each pair of adjacent letters. A predefined threshold E T c is used to determine whether to connect these letters. If E c ( i, i +1) &lt;E T c , the two letters are connected and a local smooth operation is applied at the connecting point. Otherwise, the two letters are left unconnected. 5 Experimental results The whole system is built on a PC, and handwriting trajectory is collected from a graphical tablet (Wacom Sapphire) connected to it. The system is evaluated on samples written by 15 persons, and models are trained to capture the characteristics of each user X  X  personal writing style.
 training data and some randomly generated letters from trained models. It shows that the synthesized letters have shapes similar to those in the training data.
 ditional sampling algorithm in synthesizing the word  X  X endant. X  In the experiments, we set  X  1 = 25,  X  2 = 50, and  X  3 = 1 in Eq. 18. The concatenation energy of each pair of adjacent letters is plotted in Fig. 6. It shows that the concatenation energy drops rapidly in the iterative process and will typically be stable after five or six iter-ations. Figure 7 shows intermediate results of the condi-tional sampling in synthesizing the word  X  X xe, X  and the 6 Discussion and conclusion Handwriting synthesis has many important applications to facilitate users work and personalize communication on pen-based devices. This study addresses the prob-lem of learning personal writing styles from limited sam-ples and producing novel scripts of the same styles. Cur-sive handwriting samples are first segmented into indi-vidual characters by a two-level writer-independent seg-mentation algorithm. Samples of the same character are aligned into a common coordinate frame and learned by shape models that have the ability to generate shapes similar to those in the training set. To synthesize cur-sive script, individual letters are generated from models and concatenated by a conditional sampling algorithm. Some experimental results are shown to demonstrate the effectiveness of the proposed algorithms.
 rect sampling method [7], its performance is still lim-ited by samples used for training since the shape models can only generate novel shapes within the variation of training samples. To produce more variant and natural handwriting, users are required to give more handwrit-ing samples, and sometimes this is not practical. A better way to solve this problem might be to build models of different writing styles on a large data set and match each user X  X  writing style to an existing model and make some modification on the model, according to the small number of input samples.
 although some experimental results are shown, it is still not known how to make an objective evaluation on the synthesized scripts and compare different synthesis ap-proaches. Extensive studies exist on the individuality of handwriting [19], and some rules proposed in those stud-ies may be helpful in achieving such a goal.

