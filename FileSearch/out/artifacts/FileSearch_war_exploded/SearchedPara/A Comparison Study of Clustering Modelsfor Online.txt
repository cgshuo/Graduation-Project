 In recent year, online reviews have beco me an important resource for people to provide product information and recommendations from the customer per-spective [1]. The customer reviews are so useful that almost all the e-commerce related organizations, such as Amazon and Google, have accumulated a huge amount of reviews data, and the analysis of these data to extract latent public opinion and sentiment is a challenging task. To automate the sentiment anal-ysis, different approaches [2 X 4] in literature have been applied to predict the sentiments of words, expressions or documents.

Clustering, which tries to find the natural clusters in the data by calculating the distance from the centers of the clusters, is especially useful for organizing documents to improve information retrieval [5]. However, the analysis results generated by clustering method would be affect heavily by some intermediate steps, such as preprocessing strategy, term weighting model and clustering al-gorithm. It is valuable for online review sentiment analysis to make clear that: which kind of clustering algorithm is mo re effective for sentiment analysis? and which types of term weighting models are more suitable for review representa-tion? In this work, we conduct comparison study of the online review sentiment clustering problem from a combined perspective of data preprocessing, VSM (Vector Space Model) modeling [6] and clustering algorithm. The task of sentiment analysis is to judge whether a review expresses a positive, neutral or negative opinion and a lot of efforts have been devoted into this area in literature [7]. The typical work is method that presented by Pang and Lee of sentiment classification on the document level [3].

Also, few efforts have been devoted to the study of sentiment analysis with clustering. Agarwal et al. Li &amp; Liu [8] proposed a method to choose solid po-larity reviews to generate a positive seed set and a negative seed set to solve this problem. Zhai et al. [9] studied the problem of product feature clustering for opinion mining applications, in which they casted the problem as a semi-supervised learning task. An approach of semi-automatic public sentiment anal-ysis for opinion and district is proposed in [10], which includes automatic data acquiring, sentiment modeling, opinion clustering, and district clustering, and manual threshold setting and result analysis. [11] investigated the effect of fea-ture weighting on document clustering, including a novel investigation of Okapi BM25 feature weighting. Especially, [12] presented the results of some common document clustering techniques. However, there are not impressive research on comparing the different clustering performance under various environments. The research framework consists of four parts: data preprocessing, VSM model-ing, clustering and results evaluation. 3.1 Data Preprocessing First, a part-of-speech tagger developed by Stanford University is used to tag the reviews [13]. Under the impact of the work of the first step, the words which are not tagged as being either an adjective or adverb would be eliminated. Then, the words stemming is done by applying Porter X  X  algorithm [14]. Finally, we utilize the stop-word list to remove stop words which were built by Gerard Salton and Chris Buckley for the experimental SMART information retrieval system. 3.2 Term Weighting Models weight of term t j to document d i . Table 1 illustrates six term weighting models selected to be utilized in this study. 3.3 Clustering Algorithms and Sentiment Recognition We have selected a collection of 18 clustering algorithms to conduct a relative complete comparison. Table 2 lists all these algorithms in detail. 3.4 Evaluation To evaluate the clustering effectiveness, a confusion matrix could be constructed as shown in Table 3. Cluster 1 is the positive cluster if ( a + d )  X  ( b + c ). if ( a + d )  X  ( b + c ); else Accuracy = b + c a + b + c + d .
 In this work, we introduce eight datasets in the following experiments (Table 4). 4.1 Results on Term Weighting Models We compared the clustering results on six weighting models (the results are shown in Table 5). We see that, on average, BM25, DPH DFR and H LM weight-ing models are somewhat better than TF IDF, and notably better than Binary as well as TF. However, TF IDF is actually sometimes better than H LM and DPH DFR (D7), and performs similar results to BM25 on D2 and D7.
 4.2 Results on Clustering Algorithms In this section, we try to find out which kinds of clustering algorithms are more effective for clustering-based sentiment analysis. The results are illustrated in Fig. 1, in which the lines of Kmeans and RB-Kmeans are almost coinciding with each other, so as are those of RBR-H1 and Direct-H1.
To see more clearly the differences betw een clustering performances, we make a comparison of the 18 clustering algorithms by dataset and average over all clus-tering algorithms for that dataset. Fig. 1 and Table 6 indicate that, on average, four algorithms of Kmeans, RB-Kmeans, RBR-H1 and Direct-H1 show clear ad-vantage over the other 14 methods on clu stering accuracy. However, CLARANS algorithm is actually somewhat better than the above four best methods and substantially better than other 13 algorithms for D2 and D3.
 In this work, we find averagely the following experimental conclusions for online review sentiment clustering:  X  BM25, DPH DFR and H LM weighting models are somewhat better than  X  Kmeans, RB-Kmeans, RBR-H1 and Direct-H1 show clear advantage over the The experiment methods and conclusions would be valuable for both the study and usage of clustering methods in online review sentiment analysis. Acknowledgments. The work was partly supported by the National Natural Science Foundation of China (71271044/U1233118/71072015/71110107027), and the Tsinghua University Initiative Scientific Research Program (20101081741).
