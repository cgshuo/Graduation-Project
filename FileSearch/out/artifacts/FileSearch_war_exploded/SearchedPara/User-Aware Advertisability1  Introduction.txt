 Currently, the majority of major web search engines X  revenue stems from spon-sored search, which achieves a win-win-win situation for users, advertisers and search engine companies. For example, users can efficiently obtain their desired information or be navigated to specific webs ites. Advertisers get increased traf-fic and potential users. By satisfying user s X  needs and advertisers X  desires, web search engines commonly get paid under a specific mechanism (e.g., cost-per-click [12]). Considering the huge profit margins, designing successful sponsored search technologies has attracted significant attention from search engine com-panies, as well as research communities. Increasing evidence points to the fact that showing ads should be avoided when users are not interested in ads and/or no ads match users X  interests, otherwise, it may degrade user experience or drive them away [5, 20]. Therefore, deciding whether to display ads for a given query is a very important problem to tackle. To this end, Pandey et al. [18] have pro-posed the concept of advertisability for a given query, defined as the probability of ad-click on any of the displayed ads. A number of studies [1, 18, 21] have shown that each term that comprises a search query has its own inherent prob-ability of receiving ad-clicks, and have attempted to quantify the advertisability of a query based on its query terms. The advantage of the query term based approach is that it can handle tail or even unseen queries. However, existing approaches do not consider whether a given query is likely to receive ad-clicks by a particular user. In this paper, we introduce the concept of user-aware ad-vertisability, which incorporates user preference. Given a query with respect to a specific user (essentially a query-user pair), user-aware advertisability is defined as the probability that this user clicks on any ads displayed on the SERP (search engine result page). We define user preference as the user X  X  tendency to click on a particular topical category, and represent it as a probability distribution over a set of pre-defined categories (detailed i n Section 5.1). Comp ared with existing studies, our user-aware advertisability differs in the following aspects: (i) User-aware advertisability is computed per query-user pair rather than per query; (ii) We use the category information underlying each query-user pair to filter out the topically irrelevant queries when estimating a query term X  X  probability of receiving ad-clicks. Table 1 illustrates the benefit of user-aware advertisability using toy examples. Suppose that the category information (Column 2) for each query (Column 1) can be automatically determined, and the two queries in Table 1 are the only ones that contain term apple in the set of past queries.
Existing methods don X  X  consider the category information when computing the contribution of a query term to the query X  X  advertisability. For example, the method proposed by Pandey et al. [18] computes a query term X  X  probability of re-set, { q  X  Q | w  X  q } are queries that contain w , C + ( q ) is the count that query q received ad-clicks, C  X  ( q ) is the count that q received no ad-clicks. Suppose that two different users u 1 and u 2 enter the same new query, say, apple .Then  X  ( w ) is computed as 6 14  X  0 . 4286, and the value is the same for both u 1 and u 2 .In contrast, our approach first identifies th e query X  X  topical category with respect to a particular user, which may turn out to be Computers for u 1 just like apple computer , Shopping/Food for u 2 just like apple crisp recipe in Table 1. Then the advertisability for apple submitted by u 1 is computed as 5 10 , while that for apple submitted by u 2 is computed as 1 4 . Thus the statistics for the past queries that don X  X  match the category underlying a query-user pair are filtered out.
In this study, we propose a method for computing user-aware advertisability and evaluate it using a commercial sponsored search data. Experimental results show that our approach can generate user-specific advertisability and outper-forms the baseline methods that compute advertisability per query. The rest of the paper is organized as follows: Sectio n 2 discusses related work. Section 3 formalizes user-aware advertisability, and Section 4 describes how the required probabilities were estimated. Section 5 presents experimental results and discus-sions. We conclude our work in section 6. To display highly relevant ads instead of driving users away, considerable work has been conducted from various aspects. Tyler et al. [22] formulated the problem of showing relevant ads as a context multi-armed bandit problem, where a user X  X  query is used as the context. Wang et al. [23] proposed a mixture language model to find good match ads. To efficiently match ads against rare queries, Broder et al. [6] proposed a method for online rewriting of tail queries. A number of researchers [2, 11, 14, 15] studied how to use the sponsored search log to learn highly relevant ads using machine learning. For example, Hillard et al. [15] investigated the translation model to learn user click propensity. Ashkan et al. [2] proposed to model user X  X  browsing and click behavio r using contextual factors, such as the user X  X  initial motivation and persistence of browsing the ad list.

Rather than finding relevant ads, Broder et al. [5] studied when to advertise in a supervised manner. They utilized ad relevance and result set cohesiveness as features. Pandey et al. [18] proposed the concept of advertisability to quantify the probability of seeing a click on any sponsored ads. They focused on tail queries and proposed a model that computes the advertisability of a query based on the individual query terms. Ashkan et al. [1] investigated the impact of query terms on the commercial intent of queries. They proposed a probabilistic model based on the assumption that the likelihood of r eceiving ad-clicks for a query is derived from the contributions of its composing terms. Cheng et al. [9] studied the user-specific features and demographic-based f eatures to perform click prediction and showed that the accuracy can be improved t hrough the personalized click model. Based on the user X  X  motivation of entering a query, Dai et al. [13] classified queries into commercial and non-commercial. They used a supervised method to identify commercial queries. Cheng et al. [10] suggested to predict the user X  X  search intent based on search behaviors. They argue that many information needs are actually triggered by what users have browsed.

None of the above mentioned studies considered the advertisability of a query for a particular user. We believe that our user-aware advertisability will be useful for effective presentation of ads on a SER P, e.g., deciding whether to display ads when a user submits a query. We define user-aware advertisability as the ad-click probability with respect to a query-user pair. More specifically, we formulate it as a conditional probability p ( x =1 | q,u ), where x is a binary variable, x = 1 denotes the case that the user clicks on sponsored ads and x = 0 denotes the case of non-click. By assuming that each user X  X  preference can be repre sented as his/her preference over a pre-defined set of topical categories, we decompose user-aware advertisability as: where p ( c i | q,u ) represents the user preference of a topical category c i given q , p ( x =1 | q,c i ) represents the probability of receiving an ad-click for query q given c i . In the sponsored search log, some terms, such as apple and camera , have a high ad-click count. Others, such as markov and equation , rarely receive ad-clicks. Moreover, for the same term within different contexts of queries, the probability of receiving ad-clicks is different, e.g., apple in the context of queries apple computer and apple crisp recipe shown in Table 1 (Section 1). This ob-servation leads us to hypothesize that: A specific term has its own probability of receiving ad-clicks, and this probability also depends on the underlying topic expressed by the query. Going further, we assume that the probability of receiv-ing ad-clicks for a query with respect to a topical category can be derived from the contributions of its individual terms, which is expressed as: where w  X  q represents an individual term, p ( x =1 | w,c i ) indicates the proba-bility of receiving ad-clicks for a query term with respect to a topical category,  X  is a latent function that derives the query X  X  probability of receiving ad-clicks with respect to a category from the contributions of its individual terms. In this study, we assume that the individual terms contribute towards a query X  X  proba-bility of receiving ad-clicks in a mutually-independent manner. Hence Equation 2 can be simplified as: Since the latter part of w  X  q (1  X  p ( x =1 | w,c i )) in Equation 3 is the product of probabilities that a term receives no ad-clicks, long queries tend to receive low values, and hence high advertisability values. To counter the bias towards long queries, we introduce the factor  X  as follows: where | q | denotes query length (the number of terms), avql denotes the average query length for a training dataset. Given avql ,  X  controls the extent that the individual terms can contribute towards a query X  X  probability of receiving ad-clicks. This kind of length penalty is also discussed in previous studies [17, 19]. The small constant  X  avoids division by zero when | q | = 1. Based on a pilot experiment with our training data (described in Section 5.1), we set  X  =0 . 3. By combining Equations 1 and 4, the user-aware advertisability is given as: To quantify user-aware advertisability with Equation 5, the category preference p ( c i | q,u ) and the term X  probability of receiving ad-licks with respect to a topical category p ( x =1 | w,c i ) are required. In the next section, we detail how these probabilities are estimated based on a sponsored search log. Here we first introduce some definitions and background that will be used through-out this study. When a user starts a search by submitting a query, the search engine returns a SERP. A SERP includes organic results (web pages), sponsored ads, re-lated searches, etc. But this study focuses on the clicks on the organic results and sponsored ads. From the sponsored search log, we can obtain tuples of the follow-ing form: t : timestamp of viewing the SERP, u : user identifier that represents a user, q :query, d : a clicked web page, ad : an ad. From the data, we can construct an undirected 3-uniform hypergraph (or tripartite hypergraph) as G =( V,E ), where V is the set of nodes and E is the set of hyperedges. V consists of three subsets of nodes: V x = d , V y = &lt;q,u&gt; and V z = ad ,where V x , V y and V z denote the clicked web pages, query-user pairs and displayed ads respectively. A hyperedge ( d, &lt; q, u &gt;, ad )in E represents the resultant events when u submits q .Figure1 illustrates an example, where circles, diamonds and rectangles represent clicked web pages, query-user pairs and ads respectively.
 Equation 5 (Section 3) requires the estimation of p ( c i | q,u )and p ( x =1 | w,c i ). The former, the category preference for a given query-user pair, is estimated as: where D ( q,u ) denotes the set of clicked web pages when u submits q ,  X  denotes a classifier that can effectively deter mine the categories of a web page, { d r  X  D ( q,u ) | c j  X   X  ( d r ) } denotes the set of categories obtained by classifying the web pages in D ( q,u ), | c i | denotes the count of c i . As shown in Figure 2, for the query-user pair &lt;q 4 ,u 3 &gt; , the clicked web pages are d 3 and d 4 . We deduce | c | =1, | c and c 3 are computed as 0 . 25, 0 . 5and0 . 25 respectively. Then, the user preference For the web page classifier  X  , we utilize the method described by Bennett et al. [3, 4], using a pre-defined category hierarchy extracted from ODP (Open Directory Project) 1 . This method effectively ove rcomes the problems of error propagation and non-linear decision surfaces when classifying web pages into a pre-defined taxonomy. We refer the reader to the original papers [3, 4] for further details. We use this method as a black box for obtaining the topical categories of a web page. In Equation 5, the parameter k essentially denotes that the top-k categories are used to represent user preference (e.g, k = 1 means that only c 2 is used in the the above example). Based on a pilot experiment with the training data, we set k =3.

Whereas, the click probability for a given term-category pair, which Equation 5alsorequires,isestimatedas: where { q  X  Q | w  X  q } is the set of queries that contain term w , C + ( q,c i )is the count that query q with a topical category c i received ad-clicks. C  X  ( q,c i )is the count that query q with c i received no ad-clicks. The numerator is the total number of resultant ad-clicks when using term w to express information needs with respect to c i . The denominator is the total number of times of using term w to express information needs with respect to c i . Leveraging on the training data, we estimate C + ( q,c i )and C  X  ( q,c i ) as follows: Suppose the categories of the clicked web pages corresponding to a past query-user pair are c m and c n ,ifthis query-user pair resulted in ad-clicks, we generate two training triples as ( q,c m , 1) and ( q,c n , 1). If not, the training triples are ( q,c m , 0) and ( q,c n , 0) instead. At generated, which are used to estimate the probability of receiving ad-clicks for an unseen query term w  X  . where C + ( c i ) denotes the count of category c i that received ad-clicks, C  X  ( c i ) denotes the count of category c i that received no ad-clicks.

When scaling up to the web-scale application, the training data for estimating the click probability for a given term-category pair can be learned in an off-line manner. For estimating the user preferen ce, some collaborative filtering methods (e.g., Cao et al. [8]) can be used to deduce user preference instead of classifying each clicked web page as we have done in this paper. 5.1 Data We collected a 10-day click data from a major web search engine (April 1-10, 2013). The data from the first seven days were used for training and that from the remaining three days were used as the test data. Queries including characters outside a-zA-Z0-9 and the white space were removed. Our data set contains 10 , 590 , 386 unique queries, 12 , 517 , 706 unique users, 19 , 320 , 427 query-user pairs, 10 , 905 , 297 unique clicked web pages and a total of 1 , 718 , 906 ad-clicks. The average query length ( avql ) for the training data is 3 . 1053. In this study, we manually extracted a part of the ODP categories that are suitable for commercial intents. There are totally 219 nodes with a maximum depth as 2. At the first category level, there are 1 5 nodes. At the second category level, there are 204 nodes. For example, the subcategories Computers/Hardware and Computers/Software are subsumed within the h igher level category Computers . To perform a fine-grained differentiation of category preference by users, we use the two-level category hierarchy.

Query frequency is known to obey the power law. To investigate the feasibil-ity of computing user-aware advertisability for both head and tail queries, we randomly extracted 200 quer ies with frequency counts at least 20 to form the HQS (head query subcollection), and anot her 200 queries with frequency counts lower than 20 to form the TQS (tail query subcollection). The corresponding users, clicked pages, ad-clicks were extracted accordingly. The basic statistics are summarized in Tables 2 and 3.

To demonstrate that queries and query terms cover diverse topical categories, we computed the category span of each query and query term. Here, category span means the number of categories that a given query or query term covers according to the categories of the clicke d web pages as estimated by the method by Bennett et al. [3, 4]. Figures 3 and 4 plot the query count and query term count against category span.

Not surprisingly, it can be observed that the query terms exhibit higher cate-gory spans than the entire queries. For example, the category span for the query windows phone is 11, while that for the term windows is 171. As the same term may be used in the context of diverse topical categories, this result suggests that it is important to take the category information into account when computing advertisability based on query terms. When estimating the ad-click probability of term windows in the Computers context, we don X  X  want to use the statistics of term windows obtained in the Housing context. 5.2 Evaluation Metric To evaluate the effectiveness of user-aware advertisability, we utilize the three-day test data portion of our data. Each test instance h in our test data H is a quadruple ( q,u,imp,cCnt ), where q and u are the query-user pair, imp and cCnt are the impression and ad-click count respectively. We rank all query-user pairs in the test data by user-aware advertisability and evaluate it using a measure similar to the nDCG (normalized Discounted Cumulative Gain) [7, 16]. nDCG measures how the system X  X  ranked list deviates from the ideal ranked list L  X  , i.e., the ranked list that we want to achieve. In our case, we require the ideal list to possess the following properties: (1) Query-user pairs with high clickthrough rates ( cCnt/imp ) should be ranked higher; (2) Within the query-user pairs with the same clickthrough rate, those with larger cCnt values should be ranked higher; (3) Within the query-user pairs with cCnt of zero, those with larger imp values should be ranked lower. Thus, we want query-user pairs with high clickthrough rates and click counts, and we want to avoid queries that were shown many times but were never clicked. In accordance with the above three sort keys, we use the following function to define the gain for each h in H . where max H ( cCnt ) denotes the maximum count of a d-click in test collection H . To ensure a monotonically decreasing function, Round ( v,n ) is introduced to return a number rounded to a specified number of digits, where v is the number to round, n is the number of digits to round the number to. By Round ( v,n ), the ratio between ad-click and impression is divided into 100 intervals in our study, the different ratios within the same interval are viewed as the same. f ( h, H ) is an ad hoc function that ensures that the three sort keys are applied exactly in that order. Table 4 illustrates some test instances sorted with f ( h, H ), the user identifiers are partially omitted for privacy. Due to diverse users, galaxy s4 appears in different test instances.

The ideal list L  X  ranks all instances in H by f ( h, H ). On the other hand, we rank the same instances using our user-aware advertisability scores, computed using the ad-click statistics and category information from the training data. This list is denoted by L . For an instance h at the r-th position in L , its gain value is defined as g ( r )= f ( h, H ). Then, the discounted cumulative gain is computed as dcg ( r )= r i =1 g ( i ) /log ( i +1),andthe nDCG is computed as the ratio of the system X  X  dcg and the ideal dcg . We compute nDCG for various cutoff values. 5.3 Baseline Methods We compare user-aware advertisability against two user-unaware baseline meth-ods. Given a query, there are two hypotheses: p ( x =1 | q ) that an ad-click occurs and p ( x =0 | q ) that no ad-click occurs. The method of Log-likelihood-ratio pro-posed by Ashkan et al. [1] considers the ratio of the posterior probability of a query and is used for making a decision between these two hypotheses as:
Pandey et al. [18] X  s advertisability for a given query is defined as: where  X  ( w ) denotes the probability of receiving ad-clicks for a query term, and for a parameter m , S is a subset of the set of all query terms from q , s.t. | S | X  m . 5.4 Results and Discussions The performances of our user-aware approach and the baseline methods are plot-ted in Figures 5 and 6, the x-axes represent the cutoff r , while y-axes represent nDCG @ r . The circle indicates some example cutoff values that our user-aware approach outperforms the two baseline methods at the same time and exhibits a statistical significant difference (paired t-test, p&lt; 0 . 05).
 As shown in Figure 5, our user-aware advertisability slightly underperforms Log-likelihood-ratio for tail queries with r  X  [7 , 12]. Also, our approach slightly underperforms Pandey et al. X  X  advertisability with r  X  [37 , 54]. However, our approach significantly outperforms the baselines for many other cutoff values. In particular, for head queries (Figure 6), user-aware advertisability significantly outperforms the baseline methods for r&lt; 1055 or r&gt; 5042.

Due to diverse users, the frequent queries like galaxy s4 in Table 4 (Section 5.2) constitute different sets of ties (i.e., query-user pairs with the same query). Because the baseline methods are user-unaware and compute advertisability per query, they assign the same advertisability score to a set of ties. Figures 5 and 6 show the results where the tied pairs were broken at random. Thus, we also considered the best-possible and worst-possible cases for the baseline methods: (1) For each set of ties, rank the tied pairs in the same order as the ideal list (UB: upperbound); (2) For each set of ties, rank the tied pairs in the reverse order of the ideal list (LB: lowerbound). Figures 7 and 8 show the performance of user-aware advertisability against the upper bound and lowerbound of the baseline methods, where the circle indicates some example cutoff values that user-aware advertisability outperforms the upperbound of two baseline methods at the same time and exhibits a statistical significant difference (paired t-test, p&lt; 0 . 05).
As shown in Figures 7 and 8, while the upperbound and the lowerbound for the two baselines are indistinguishable for tail queries, there is a considerable gap between the bounds for the head queries. This reflects the fact that while most tail queries have a unique user, head queries have many users and therefore large groups of ties. From Figure 7, it can be observed that our user-aware advertisability steadily outperforms the baselines even the upperbounds for tail queries. From Figure 8, it can be observed that our approach is comparable to the two upperbounds for cutoffs r&lt; 1055 or r&gt; 5042.

So far, we have used the two-level categories from ODP. To explore the effect of the granularity of the categories on advertisability, we conducted an addi-tional experiment using the top-level category only. For example, the category Computers/Hardware was reduced to Computers . Figures 9 and 10 show the results, where the circle indicates some example cutoff values that the top-level user-aware advertisability exhibits a statistical significant difference with the two-level user-aware advertisability (paired t-test, p&lt; 0 . 05). As shown in Fig-ures 9 and 10, the performance of the top-level user-aware advertisability and the two-level user-aware advertisability are significantly different. Intuitively, two-level categories seem more effective t han top-level ones, as they have more expressive power to reflect the user preference. However, the figures show that while it is true for head queries, the top-level user-aware advertisability actually do better for tail queries. This is probably because the category click statistics are sparse for tail queries and th erefore relatively unreliable. We proposed the concept of user-aware advertisability, which computes the ad-click probability per query-user pair rather than per query. We believe that this will be useful for determining when and w hat to advertise for different users. Our experimental results showed that user-aware advertisability significantly outperforms two user-unaware baseline methods, especially for tail queries.
A limitation of our current study is that we have not taken into account factors besides ad-clicks, such as the user X  X  entire ad-click history, query-ad relevance, the number and position of displayed ads, etc. Incorporating these features would be an interesting future research direction. We would also like to utilize user-aware advertisability in a real web search scenario.
 Acknowledgements. We thank many researchers for their valuable helps, e.g., Dr. Bin Gao and his internships, Dr. Zhicheng Dou, Dr. Ke Zhou, etc.

