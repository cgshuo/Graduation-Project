 Collaborative tagging used in online social content systems is naturally characterized by many synonyms, causing low precision retrieval. We propose a mechanism based on user preference profiles to identify synonyms that can be used to retrieve more relevant documents by expanding the user X  X  query. Using a popular online book catalog we discuss the effectiveness of our method over usual similarity based ex-pansion methods.
 Categories and Subject Descriptors: H.3.3 [Informa-tion Storage and Retrieval]: Information Search and Re-trieval General Terms: Algorithms, Languages.
 Keywords: Content Retrieval, Social Media, Synonymy, Tagging.
Social networks have become popular platforms to share and retrieve multimedia content. To enable the retrieval of the unstructured data in these social content systems , collaborative tagging has shown to be an effective annotation mechanism. Many systems allow people to attach the terms they consider relevant for the content and tag-clouds are used to retrieve items introduced by others.

One of the problems in tagging systems is the fact that people use different terms to describe the content, resulting in low retrieval performance. Begelman et al. proposed to cluster the tags, in order to expand the users X  queries with semantically related tags [1]. Other work has investigated the possibility to suggest tags to people when they have to annotate content, in order to increase the coherence of the folksonomy [3]. Tag suggestions induce the problem that new users can issue wrong queries, as they are not aware of the tagging policy in the network. Furnas et al. already ad-vocated in 1987 that the optimal system would aggregate as many different descriptions as possible [2]. In this work, we show that similarity based clustering methods might be too rigorous in grouping terms and we propose a new method to identify true synonyms in social content systems. Our method does not enforce a certain tagging policy on users, but uses the naturally emerging structure to identify syn-onyms that can be used to expand the initial query.
To explain our synonym detection method we follow the example shown in Figure 1. A frequently used tag in many social content systems is the term humour . This term is however written differently in US-English ( humor , also Ger-man and Spanish) and UK-English ( humour , also French).
We postulate that synonyms are terms that are applied frequently on the same content, but are used by different user groups. Because people often prefer one of the syn-onyms (especially in language differences), different groups will emerge. We integrate these two characteristics in our model to identify synonymous terms.

The ternary relations in collaborative tagging systems can be visualized in a 3D matrix, see Figure 2. To derive binary tag relations, we compute the sum over the user and item dimensions of D and obtain: Based on these two binary relations, we can derive the u se r s o f t e n p r e f e r o n e o f t h e t w o t e r m s. Figure 2: Synonyms are characterised by a large item similarity and a negative user similarity. similarity between two tags based on user or item overlap. The item similarity between two tags ( S I ( t q , t s )) is derived by computing the Pearson correlation between the two pro-files as follows: S ( t q , t s ) =  X  ( IT q , IT s ) = where t q is the query tag, t s is the potential synonym, IT is the abbreviation of IT ( i l , t q ). The user similarity between two tags ( S U ( t q , t s )) is computed analogously.
Our method first finds all terms that have an item sim-ilarity larger than 0.5 ( S I ( t q , t s )  X  0 . 5). On these similar terms, we compute the user similarity and retain all terms with a negative correlation as synonyms ( S U ( t q , t s create a tagged catalog of the books they own or have read. The popularity of the system has resulted in a database that contains almost 3 million unique works, collaboratively added by more than 300,000 users.

We have collected a trace from the LibraryThing network, data set we retain 7279 users that have all supplied tags to at least 20 books. We remove books and tags that occur in less than 5 user profiles, resulting in 37,232 unique works and 10,559 unique tags. This pruned data set contains 2,056,487 UIT relations, resulting in a density of 7 . 2  X  10  X  7 (fraction of non empty cells in D ). The derived UT and IT matrices have a density of respectively: 5 . 2  X  10  X  3 and 2 . 0  X  10  X  3 .
We use two examples to demonstrate the effect or our model. First we look at the query tag Humour , used on 2527 items in our data set. Table 1 shows the tags that have amount of items it was used on and  X  X ew X  is the number of items not annotated by the query tag.

We see that the American form humor has a strong item correlation and a clearly negative user correlation (even the smallest user correlation in the entire data set). Only one of the terms is a truly incorrect result, the tag discworld series . If we use all proposed synonyms to enrich the initial query, we retrieve 3162 true positives and only 1 false positive.
If we would have ranked similar tags only on item similar-ity, the top-5 would contain the terms pratchett , terry pratch-ett and discworld , all related to the same book series. The Discworld series are generally regarded as humorous books, however we do not want to enforce them on people searching for the much more general term humour .
 The second example we discuss is the general tag classic . Table 2 shows the tags that qualify our synonym criterion. Most tags in the table are true synonyms. The term 19th century literature is not synonymous, however most 19th century books that are still popular are considered classics. Only the tag assigned truly introduces wrong results, this term is only used on 70 books which makes the negative effect of this tag very limited
The item similarity between classic and literature is very high ( S I ( t q , t s ) = 0 . 85), therefore a clustering scheme based on content similarity alone could easily group these terms together. However, these terms have a positive user simi-larity ( S U ( t q , t s ) = 0 . 06), so our method correctly identifies that they are no synonyms. The exploitation of information about user groups allows our model to distinguish between frequently co-occurring terms and true synonyms.
