 Hierarchical models are commonl y used to organize a Website X  X  content. A Website X  X  content struc ture can be represented by a topic hierarchy , a directed tr ee rooted at a Website X  X  homepage in which the vertices and e dges correspond to Web pages and hy perlinks. In this work, we propose an algorithm for extracting a Website X  X  topic hierarchy from its link structure. The proposed algorithm consists of a constructi on stage and a refining stage, in which we analy ze the sem antic relationships between web pages based on link structure, we b page content and directory structure. We X  X e done extensive experiments using different Websites and obtained very promising results.
 H.3.3 [ Information Sy stems ]: Information Search and Retrieval  X  search process, retrieval models Algorithms, Experimentation Content Structure, Website Mining, Topic Hierarchy Users looking for information on the web frequently need to explore particular websites care fully to locate individual pages with interesting information. Ma ny websites provide sitemaps to website. By taking a look at the site map, one may quickly settle on one or more topics that are of interest. Despite the usefulness of sitemaps, websites with s itemaps only account for a small portion of the entire web. In addition, sitemaps are usually manually constructed and could therefore only cover a limited number of pages. Individual websites are more organized compared with the entire web. The development of most websites involves content planning and organization. Hierarchical model is a frequent choice for the organization of complex bodies of information on webs ites becaus e of its simplicity and clarity . Under this model, a large website is first divide d into a number of broad topics, which are recurs ively divided into m ore s ubtopics . S ince each topic has a corresponding web page, the hierarchical content structure is realized as a directed tree where the web pages are nodes and the hy perlinks point from each topic to its sub topics. The Stanford Database Group webs ite illustrated in Figure 1 contains several m ajor topics such as Member and Pr oject which have individual members and res earch projects as sub topics. We define s uch hierarchical content s tructure of a webs ite as its top ic h ierarch y . More formally , a topic hi erarchy is a directed tree that is required to be root ed at the hom epage of the webs ite and provides a path formed by hy perlinks from the root to every page in the website. In this paper, we study the autom atic construction a website X  X  topic hier archy , in particular, how to extract it from the link structure of the website, which is in the form of a com plicated graph. The sem antic relationships betw een web pages can generally be clas sified either as aggregation or as sociation. Aggregation is a kind of directed relationship, in which one page represents a broader concept and subsumes th e other. Association is non-hierarchical and sy mmetric, in which two pages represent parallel concepts. Clearly , the topic/subtopic relationship to be captured by the topic hierarchy corres ponds to aggregation. Our algorithm for building the topic hi erarchy cons ists of two s tages : a construction stage which produces a prim itive tree structure, and a refining stage in which this structure is adjusted for enhancem ent. A key feature used in our algorithm is the sem antic dissim ilarity between two pages, which is infe rred based on the contents of the web pages as well as thei r locations in the website X  X  directory . We model web page X  X  content by the set of distinct term s within its text and m easure two page X  X  content Directories are commonly used for organizing large number of documents. Most web designers use folders and subfolders to group related pages and establis h boundaries between distinct content units [1, 3] . Given two web pages u and v with paths u between them is com puted based on the number of common folders they are both under: The overall sem antic dissim ilarity d ( u,v ) is defined as  X  d cont ( u,v ) +( 1- X  )d dir ( u,v ). A basic model for representing a We bsite X  X  link structure is the unweighted directed graph model G ( V,E ). Breadth firs t s earch (BFS) can efficiently build a directed tree from this graph. However, BFS treats all the links uniformly without regard to the underly ing sem antics and finds a path to each page by minimizing the number of links. To incorporate more semantics, we adopt the weighted graph model G ( V,E,  X  ), where the cos t of a link u  X  v is equal to the sem antic dissim ilarity d ( u , v ). We then perform shortest path search (SPS) using Dijkstra X  X  algorithm. The output of SPS is a directed tree rooted at the homepage where the tree paths represent the shortest paths between the homepage and all the other pages. In a topic hierarchy , the correct paths to very specific topics usually consist of a number of li nks. A page could not only be linked from its parent in the hierarchy but also from some of its ancestors. This creates short cuts, which are paths from the homepage to another page that by pass one or more of its ancestors. Short cuts are very common as many web pages contain highlights or promotions that link directly to some of its sub subtopics. Figure 2 illustrates two particular short cuts of www.palmsource.com. PalmOne and DevCon2005 are sub topics of Devices and Events respectively . However, the homepage is highlighting these tw o items and thus creates short cuts. In cases like this, m erely measuring path cost may be misleading and even jus tify the incorrect paths . In the refining stage, we supplemen t the path cost measure with an additional feature, which is based on a page X  X  semantic sim ilarities with its siblings in the initial tree. Given an initial topic hierarchy TH , we adjust the location of a page c as follows. Let subtre e(TH, c) denote the sub tree of TH that is rooted at c and let TH/subtre e ( TH, c ) be the portion of TH excluding subtre e ( TH, c ). We want to choose a page from possible parent page p of c , we com pute the cos t of choos ing p as the parent of c , denoted by cos t c ( p ), which depends on both the path c ost cos t c,path ( p ) and the sibling c ost cos t choose the parent with minimum cos t c ( p ). The path cos t through p , which is measured the same as during construction stage. The newly introduced sibling cos t, cos t com puted as average s emantic dis similarity between c and the other offspring of p . The idea behind this m eas ure is that if correctly located, a page is expected to be grouped with some siblings that are highly sem antically sim ilar to it as they all represent sub topics of the sam e topic. The total cost cos t com puted as ) ( ) ( ) ( p  X  )cost' (1 p cost' p cost sibling c, path c, c At refining iteration, pages are exam ined and adjus ted in the breadth-first order. In the experime nts, only very few iterations are needed for the tree to stabilize. We tested the algorithm using 5 different web sites. A human judge was as ked to m anually cons truct a topic hierarchy for each test website for use as benc hm ark. Given the benchm ark, we evaluate the accuracy of a generated topic hierarchy bas ed on the proportion of web pages which are connected to the same parent as in the benchmark. The breadth firs t search (BF S) algorithm is us ed as the bas eline for com paris on. We com pare BF S with s hortes t path s earch (SPS) a nd shorte st pa th se arch plus re fine me nt (SPS+ RE F). For SPS and SPS+REF, we report their performance with the setting  X  =0.5 and  X  =0.5, which was found to be optim al. The accuracies of topic hierarchies generated by thes e m ethods are s hown in Table 1. Clearly , SPS outperforms BFS significantly , and the proposed refining procedure can make further improvement on SPS a s shown by the column of SPS+ OPT . We have developed a novel technique to build a Website topic hierarchy by analy zing the link s tructure, directory structure and content s imilarity . W e have com pared with previous techniques and s howed that our propos ed technique outperform s. [1] W.S. Li, O Kolak, Q. Vu and H. Takano. Defining Logical [2] Z. Chen, S. Liu, W. Liu, G. P u and W .Y. Ma. Building a [3] N. Liu and C. C. Yang. Mining Web Site X  X  Topic 
Figure 2: The correct paths in solid link s and the short 
