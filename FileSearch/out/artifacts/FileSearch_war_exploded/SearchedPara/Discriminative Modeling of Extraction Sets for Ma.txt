 In the last decade, the field of statistical machine translation has shifted from generating sentences word by word to systems that recycle whole frag-ments of training examples, expressed as transla-tion rules . This general paradigm was first pur-sued using contiguous phrases (Och et al., 1999; Koehn et al., 2003), and has since been general-ized to a wide variety of hierarchical and syntactic formalisms. The training stage of statistical sys-tems focuses primarily on discovering translation rules in parallel corpora.

Most systems discover translation rules via a two-stage pipeline: a parallel corpus is aligned at the word level, and then a second procedure ex-tracts fragment-level rules from word-aligned sen-tence pairs. This paper offers a model-based alter-native to phrasal rule extraction, which merges this two-stage pipeline into a single step. We present a discriminative model that directly predicts which set of phrasal translation rules should be extracted from a sentence pair. Our model predicts extrac-tion sets : combinatorial objects that include the set of all overlapping phrasal translation rules con-sistent with an underlying word-level alignment. This approach provides additional discriminative power relative to word aligners because extraction sets are scored based on the phrasal rules they con-tain in addition to word-to-word alignment links. Moreover, the structure of our model directly re-flects the purpose of alignment models in general, which is to discover translation rules.

We address several challenges to training and applying an extraction set model. First, we would like to leverage existing word-level alignment re-sources. To do so, we define a deterministic map-ping from word alignments to extraction sets, in-spired by existing extraction procedures. In our mapping, possible alignment links have a precise interpretation that dictates what phrasal translation rules can be extracted from a sentence pair. This mapping allows us to train with existing annotated data sets and use the predictions from word-level aligners as features in our extraction set model.
Second, our model solves a structured predic-tion problem, and the choice of loss function dur-ing training affects model performance. We opti-mize for a phrase-level F-measure in order to fo-cus learning on the task of predicting phrasal rules rather than word alignment links.

Third, our discriminative approach requires that we perform inference in the space of extraction sets. Our model does not factor over disjoint word-to-word links or minimal phrase pairs, and so ex-isting inference procedures do not directly apply. However, we show that the dynamic program for a block ITG aligner can be augmented to score ex-traction sets that are indexed by underlying ITG word alignments (Wu, 1997). We also describe a Figure 1: A word alignment A (shaded grid cells) defines projections  X  ( e i ) and  X  ( f j ) , shown as dot-ted lines for each word in each sentence. The ex-traction set R 3 ( A ) includes all bispans licensed by these projections, shown as rounded rectangles. coarse-to-fine inference approach that allows us to scale our method to long sentences.

Our extraction set model outperforms both un-supervised and supervised word aligners at pre-dicting word alignments and extraction sets. We also demonstrate that extraction sets are useful for end-to-end machine translation. Our model im-proves translation quality relative to state-of-the-art Chinese-to-English baselines across two pub-licly available systems, providing total BLEU im-provements of 1.2 in Moses, a phrase-based sys-tem, and 1.4 in a Joshua, a hierarchical system (Koehn et al., 2007; Li et al., 2009) The input to our model is an unaligned sentence pair, and the output is an extraction set of phrasal translation rules. Word-level alignments are gen-erated as a byproduct of inference. We first spec-ify the relationship between word alignments and extraction sets, then define our model. 2.1 Extraction Sets from Word Alignments Rule extraction is a standard concept in machine translation: word alignment constellations license particular sets of overlapping rules, from which subsets are selected according to limits on phrase length (Koehn et al., 2003), number of gaps (Chi-ang, 2007), count of internal tree nodes (Galley et al., 2006), etc. In this paper, we focus on phrasal rule extraction (i.e., phrase pair extraction), upon which most other extraction procedures are based.
Given a sentence pair ( e , f ) , phrasal rule extrac-tion defines a mapping from a set of word-to-word Figure 2: Examples of two types of possible align-ment links (striped). These types account for 96% of the possible alignment links in our data set. alignment links A = { ( i, j ) } to an extraction set of bispans R n ( A ) = { [ g, h )  X  [ k, ` ) } , where each bispan links target span [ g, h ) to source span [ k, ` ) . 1 The maximum phrase length n ensures that max( h  X  g, `  X  k )  X  n .

We can describe this mapping via word-to-phrase projections, as illustrated in Figure 1. Let word e i project to the phrasal span  X  ( e i ) , where and likewise each word f j projects to a span of e . Then, R n ( A ) includes a bispan [ g, h )  X  [ k, ` ) iff That is, every word in one of the phrasal spans must project within the other. This mapping is de-terministic, and so we can interpret a word-level alignment A as also specifying the phrasal rules that should be extracted from a sentence pair. 2.2 Possible and Null Alignment Links We have not yet accounted for two special cases in annotated corpora: possible alignments and null alignments. To analyze these annotations, we con-sider a particular data set: a hand-aligned portion of the NIST MT02 Chinese-to-English test set, which has been used in previous alignment experi-ments (Ayan et al., 2005; DeNero and Klein, 2007; Haghighi et al., 2009).

Possible links account for 22% of all alignment links in these data, and we found that most of these links fall into two categories. First, possible links are used to align function words that have no equivalent in the other language, but colocate with aligned content words, such as English determin-ers. Second, they are used to mark pairs of words or short phrases that are not lexical equivalents, but which play equivalent roles in each sentence. Figure 2 shows examples of these two use cases, along with their corpus frequencies. 2
On the other hand, null alignments are used sparingly in our annotated data. More than 90% of words participate in some alignment link. The unaligned words typically express content in one sentence that is absent in its translation.
Figure 3 illustrates how we interpret possible and null links in our projection. Possible links are typically not included in extraction procedures be-cause most aligners predict only sure links. How-ever, we see a natural interpretation for possible links in rule extraction: they license phrasal rules that both include and exclude them. We exclude null alignments from extracted phrases because they often indicate a mismatch in content.

We achieve these effects by redefining the pro-jection operator  X  . Let A ( s ) be the subset of A that are sure links, then let the index set J i used for projection  X  in Equation 1 be
J Here, J i is a set of integers, and  X  ( e i ) for null aligned e i will be [  X  1 , | f | + 1) by Equation 1.
Of course, the characteristics of our aligned cor-pus may not hold for other annotated corpora or other language pairs. However, we hope that the overall effectiveness of our modeling approach will influence future annotation efforts to build corpora that are consistent with this interpretation. 2.3 A Linear Model of Extraction Sets We now define a linear model that scores extrac-tion sets. We restrict our model to score only co-Figure 3: Possible links constrain the word-to-phrase projection of otherwise unaligned words, which in turn license overlapping phrases. In this example,  X  ( f 2 ) = [1 , 2) does not include the possible link at (1 , 0) because of the sure link at (1 , 1) , but  X  ( e 1 ) = [1 , 2) does use the possible link because it would otherwise be unaligned. The word  X  X DT X  is null aligned, and so its projection  X  ( e 4 ) = [  X  1 , 4) extends beyond the bounds of the sentence, excluding  X  X DT X  from all phrase pairs. herent extraction sets R n ( A ) , those that are li-censed by an underlying word alignment A with sure alignments A ( s )  X  A . Conditioned on a sentence pair ( e , f ) and maximum phrase length n , we score extraction sets via a feature vec-tor  X  ( A ( s ) , R n ( A )) that includes features on sure links ( i, j )  X  A ( s ) and features on the bispans in R n ( A ) that link [ g, h ) in e to [ k, ` ) in f :  X  ( A ( s ) , R n ( A )) = Because the projection operator R n (  X  ) is a deterministic function, we can abbreviate  X  ( A ( s ) , R n ( A )) as  X  ( A ) without loss of infor-mation, although we emphasize that A is a set of sure and possible alignments, and  X  ( A ) does not decompose as a sum of vectors on individual word-level alignment links. Our model is param-eterized by a weight vector  X  , which scores an extraction set R n ( A ) as  X   X   X  ( A ) .

To further limit the space of extraction sets we are willing to consider, we restrict A to block inverse transduction grammar (ITG) alignments, a space that allows many-to-many alignments through phrasal terminal productions, but other-wise enforces at-most-one-to-one phrase match-ings with ITG reordering patterns (Cherry and Lin, 2007; Zhang et al., 2008). The ITG constraint e ) f ) [past] [two] [year] [in]  X  Figure 4: Above, we show a representative sub-set of the block alignment patterns that serve as terminal productions of the ITG that restricts the output space of our model. These terminal pro-ductions cover up to n = 3 words in each sentence and include a mixture of sure (filled) and possible (striped) word-level alignment links. is more computationally convenient than arbitrar-ily ordered phrase matchings (Wu, 1997; DeNero and Klein, 2008). However, the space of block ITG alignments is expressive enough to include the vast majority of patterns observed in hand-annotated parallel corpora (Haghighi et al., 2009). In summary, our model scores all R n ( A ) for A  X  ITG ( e , f ) where A can include block termi-nals of size up to n . In our experiments, n = 3 . Unlike previous work, we allow possible align-ment links to appear in the block terminals, as de-picted in Figure 4. We estimate the weights  X  of our extraction set model discriminatively using the margin-infused relaxed algorithm (MIRA) of Crammer and Singer (2003) X  X  large-margin, perceptron-style, online learning algorithm. MIRA has been used suc-cessfully in MT to estimate both alignment mod-els (Haghighi et al., 2009) and translation models (Chiang et al., 2008).

For each training example, MIRA requires that we find the alignment A m corresponding to the highest scoring extraction set R n ( A m ) under the current model, Section 4 describes our approach to solving this search problem for model inference.

MIRA updates away from R n ( A m ) and to-ward a gold extraction set R n ( A g ) . Some hand-annotated alignments are outside of the block ITG model class. Hence, we update toward the ex-traction set for a pseudo-gold alignment A g  X  ITG ( e , f ) with minimal distance from the true ref-erence alignment A t .
 A g = arg min A X  Inference details appear in Section 4.3.

Given A g and A m , we update the model param-eters away from A m and toward A g . where  X  is the minimal step size that will ensure we prefer A g to A m by a margin greater than the loss L ( A m ; A g ) , capped at some maximum update size C to provide regularization. We use C = 0 . 01 in experiments. The step size is a closed form function of the loss and feature vectors:  X  = min C,
We train the model for 30 iterations over the training set, shuffling the order each time, and we average the weight vectors observed after each it-eration to estimate our final model. 3.1 Extraction Set Loss Function In order to focus learning on predicting the right bispans, we use an extraction-level loss L ( A m ; A g ) : an F-measure of the overlap between bispans in R n ( A m ) and R n ( A g ) . This measure has been proposed previously to evaluate align-ment systems (Ayan and Dorr, 2006). Based on preliminary translation results during develop-ment, we chose bispan F 5 as our loss:
F 5 ( A m ; A g ) = L ( A m ; A g ) = 1  X  F 5 ( A m ; A g ) F 5 favors recall over precision. Previous align-ment work has shown improvements from adjust-ing the F-measure parameter (Fraser and Marcu, 2006). In particular, Lacoste-Julien et al. (2006) also chose a recall-biased objective.

Optimizing for a bispan F-measure penalizes alignment mistakes in proportion to their rule ex-traction consequences. That is, adding a word link that prevents the extraction of many correct phrasal rules, or which licenses many incorrect rules, is strongly discouraged by this loss. 3.2 Features on Extraction Sets The discriminative power of our model is driven by the features on sure word alignment links  X  ( i, j ) and bispans  X  b ( g, h, k, ` ) . In both cases, the most important features come from the pre-dictions of unsupervised models trained on large parallel corpora, which provide frequency and co-occurrence information.

To score word-to-word links, we use the poste-rior predictions of a jointly trained HMM align-ment model (Liang et al., 2006). The remaining features include a dictionary feature, an identical word feature, an absolute position distortion fea-ture, and features for numbers and punctuation.
To score phrasal translation rules in an extrac-tion set, we use a mixture of feature types. Ex-traction set models allow us to incorporate the same phrasal relative frequency statistics that drive phrase-based translation performance (Koehn et al., 2003). To implement these frequency features, we extract a phrase table from the alignment pre-dictions of a jointly trained unsupervised HMM model using Moses (Koehn et al., 2007), and score bispans using the resulting features. We also in-clude indicator features on lexical templates for the 50 most common words in each language, as in Haghighi et al. (2009). We include indicators for the number of words and Chinese characters in rules. One useful indicator feature exploits the fact that capitalized terms in English tend to align to Chinese words with three or more characters. On 1-by-n or n -by-1 phrasal rules, we include in-dicator features of fertility for common words. 3
We also include monolingual phrase features that expose useful information to the model. For instance, English bigrams beginning with  X  X he X  are often extractable phrases. English trigrams with a hyphen as the second word are typically ex-tractable, meaning that the first and third words align to consecutive Chinese words. When any conjugation of the word  X  X o be X  is followed by a verb, indicating passive voice or progressive tense, the two words tend to align together.

Our feature set also includes bias features on phrasal rules and links, which control the num-ber of null-aligned words and number of rules li-censed. In total, our final model includes 4,249 individual features, dominated by various instanti-ations of lexical templates. Figure 5: Both possible ITG decompositions of this example alignment will split one of the two highlighted bispans across constituents. Equation 2 asks for the highest scoring extraction set under our model, R n ( A m ) , which we also re-quire at test time. Although we have restricted A m  X  ITG ( e , f ) , our extraction set model does not factor over ITG productions, and so the dynamic program for a vanilla block ITG will not suffice to find R n ( A m ) . To see this, consider the extraction set in Figure 5. An ITG decomposition of the un-derlying alignment imposes a hierarchical brack-eting on each sentence, and some bispan in the ex-traction set for this alignment will cross any such bracketing. Hence, the score of some licensed bis-pan will be non-local to the ITG decomposition. 4.1 A Dynamic Program for Extraction Sets If we treat the maximum phrase length n as a fixed constant, then we can define a dynamic program to search the space of extraction sets. An ITG deriva-tion for some alignment A decomposes into two sub-derivations for A L and A R . 4 The model score of A , which scores extraction set R n ( A ) , decom-poses over A L and A R , along with any phrasal bispans licensed by adjoining A L and A R .  X   X   X  ( A ) =  X   X   X  ( A L ) +  X   X   X  ( A R ) + I ( A L , A where I ( A L , A R ) is  X   X  P  X  ( g, h, k, l ) summed over licensed bispans [ g, h )  X  [ k, ` ) that overlap the boundary between A L and A R . 5 Figure 6: Augmenting the ITG grammar states with the alignment configuration in an n  X  1 deep perimeter of the bispan allows us to score all over-lapping phrasal rules introduced by adjoining two bispans. The state must encode whether a sure link appears in each edge column or row, but the spe-cific location of edge links is not required.
In order to compute I ( A L , A R ) , we need cer-tain information about the alignment configura-tions of A L and A R where they adjoin at a corner. The state must represent (a) the specific alignment links in the n  X  1 deep corner of each A , and (b) whether any sure alignments appear in the rows or columns extending from those corners. 6 With this information, we can infer the bispans licensed by adjoining A L and A R , as in Figure 6.

Applying our score recurrence yields a polynomial-time dynamic program. This dynamic program is an instance of ITG bitext parsing, where the grammar uses symbols to encode the alignment contexts described above. This context-as-symbol augmentation of the grammar is similar in character to augmenting symbols with lexical items to score language models during hierarchical decoding (Chiang, 2007). 4.2 Coarse-to-Fine Inference and Pruning Exhaustive inference under an ITG requires O ( k 6 ) time in sentence length k , and is prohibitively slow when there is no sparsity in the grammar. Main-taining the context necessary to score non-local bispans further increases running time. That is, ITG inference is organized around search states associated with a grammar symbol and a bispan; augmenting grammar symbols also augments this state space.

To parse quickly, we prune away search states using predictions from the more efficient HMM alignment model (Ney and Vogel, 1996). We dis-card all states corresponding to bispans that are incompatible with 3 or more alignment links un-der an intersected HMM X  X  proven approach to pruning the space of ITG alignments (Zhang and Gildea, 2006; Haghighi et al., 2009). Pruning in this way reduces the search space dramatically, but only rarely prohibits correct alignments. The ora-cle alignment error rate for the block ITG model class is 1.4%; the oracle alignment error rate for this pruned subset of ITG is 2.0%.

To take advantage of the sparsity that results from pruning, we use an agenda-based parser that orders search states from small to large, where we define the size of a bispan as the total number of words contained within it. For each size, we main-tain a separate agenda. Only when the agenda for size k is exhausted does the parser proceed to pro-cess the agenda for size k + 1 .

We also employ coarse-to-fine search to speed up inference (Charniak and Caraballo, 1998). In the coarse pass, we search over the space of ITG alignments, but score only features on alignment links and bispans that are local to terminal blocks. This simplification eliminates the need to augment grammar symbols, and so we can exhaustively ex-plore the (pruned) space. We then compute out-side scores for bispans under a max-sum semir-ing (Goodman, 1996). In the fine pass with the full extraction set model, we impose a maximum size of 10,000 for each agenda. We order states on agendas by the sum of their inside score under the full model and the outside score computed in the coarse pass, pruning all states not within the fixed agenda beam size.

Search states that are popped off agendas are indexed by their corner locations for fast look-up when constructing new states. For each cor-ner and size combination, built states are main-tained in sorted order according to their inside score. This ordering allows us to stop combin-ing states early when the results are falling off the agenda beams. Similar search and beaming strate-gies appear in many decoders for machine trans-lation (Huang and Chiang, 2007; Koehn and Had-dow, 2009; Moore and Quirk, 2007). 4.3 Finding Pseudo-Gold ITG Alignments Equation 3 asks for the block ITG alignment A g that is closest to a reference alignment A t , which may not lie in ITG ( e , f ). We search for Figure 7: A* search for pseudo-gold ITG align-ments uses an admissible heuristic for bispans that counts the number of gold links outside of [ k, ` ) but within [ g, h ) . Above, the heuristic is 1, which is also the minimal number of alignment errors that an ITG alignment will incur using this bispan. A g using A* bitext parsing (Klein and Manning, 2003). Search states, which correspond to bispans [ g, h )  X  [ k, ` ) , are scored by the number of errors within the bispan plus the number of ( i, j )  X  A t such that j  X  [ k, ` ) but i /  X  [ g, h ) (recall errors). As an admissible heuristic for the future cost of a bispan [ g, h )  X  [ k, ` ) , we count the number of ( i, j )  X  A t such that i  X  [ g, h ) but j /  X  [ k, ` ) , as depicted in Figure 7. These links will become re-call errors eventually. A* search with this heuristic makes no errors, and the time required to compute pseudo-gold alignments is negligible. Our model is certainly not the first alignment ap-proach to include structures larger than words. Model-based phrase-to-phrase alignment was pro-posed early in the history of phrase-based trans-lation as a method for training translation models (Marcu and Wong, 2002). A variety of unsuper-vised models refined this initial work with priors (DeNero et al., 2008; Blunsom et al., 2009) and inference constraints (DeNero et al., 2006; Birch et al., 2006; Cherry and Lin, 2007; Zhang et al., 2008). These models fundamentally differ from ours in that they stipulate a segmentation of the sentence pair into phrases, and only align the min-imal phrases in that segmentation. Our model scores the larger overlapping phrases that result from composing these minimal phrases.

Discriminative alignment is also a well-explored area. Most work has focused on pre-dicting word alignments via partial matching in-ference algorithms (Melamed, 2000; Taskar et al., 2005; Moore, 2005; Lacoste-Julien et al., 2006). Work in semi-supervised estimation has also con-tributed evidence that hand-annotations are useful for training alignment models (Fraser and Marcu, 2006; Fraser and Marcu, 2007). The ITG gram-mar formalism, the corresponding word alignment class, and inference procedures for the class have also been explored extensively (Wu, 1997; Zhang and Gildea, 2005; Cherry and Lin, 2007; Zhang et al., 2008). At the intersection of these lines of work, discriminative ITG models have also been proposed, including one-to-one alignment mod-els (Cherry and Lin, 2006) and block models (Haghighi et al., 2009). Our model directly ex-tends this research agenda with first-class possi-ble links, overlapping phrasal rule features, and an extraction-level loss function.

K  X  a  X  ari  X  ainen (2009) trains a translation model discriminatively using features on overlapping phrase pairs. That work differs from ours in that it uses fixed word alignments and focuses on translation model estimation, while we focus on alignment and translate using standard relative fre-quency estimators.

Deng and Zhou (2009) present an alignment combination technique that uses phrasal features. Our approach differs in two ways. First, their ap-proach is tightly coupled to the input alignments, while we perform a full search over the space of ITG alignments. Also, their approach uses greedy search, while our search is optimal aside from pruning and beaming. Despite these differences, their strong results reinforce our claim that phrase-level information is useful for alignment. We evaluate our extraction set model by the bis-pans it predicts, the word alignments it generates, and the translations generated by two end-to-end systems. Table 1 compares the five systems de-scribed below, including three baselines. All su-pervised aligners were optimized for bispan F 5 . Unsupervised Baseline: GIZA++ . We trained GIZA++ (Och and Ney, 2003) using the default parameters included with the Moses training script (Koehn et al., 2007). The designated regimen con-cludes by Viterbi aligning under Model 4 in both directions. We combined these alignments with the grow-diag heuristic (Koehn et al., 2003). Unsupervised Baseline: Joint HMM . We trained and combined two HMM alignment mod-els (Ney and Vogel, 1996) using the Berkeley Aligner. 7 We initialized the HMM model pa-rameters with jointly trained Model 1 param-eters (Liang et al., 2006), combined word-to-word posteriors by averaging (soft union), and de-coded with the competitive thresholding heuristic of DeNero and Klein (2007), yielding a state-of-the-art unsupervised baseline.
 Supervised Baseline: Block ITG . We discrimi-natively trained a block ITG aligner with only sure links, using block terminal productions up to 3 words by 3 words in size. This supervised base-line is a reimplementation of the MIRA-trained model of Haghighi et al. (2009). We use the same features and parser implementation for this model as we do for our extraction set model to ensure a clean comparison. To remain within the alignment class, MIRA updates this model toward a pseudo-gold alignment with only sure links. This model does not score any overlapping bispans.
 Extraction Set Coarse Pass . We add possible links to the output of the block ITG model by adding the mixed terminal block productions de-scribed in Section 2.3. This model scores over-lapping phrasal rules contained within terminal blocks that result from including or excluding pos-sible links. However, this model does not score bispans that cross bracketing of ITG derivations. Full Extraction Set Model . Our full model in-cludes possible links and features on extraction sets for phrasal bispans with a maximum size of 3. Model inference is performed using the coarse-to-fine scheme described in Section 4.2. 6.1 Data In this paper, we focus exclusively on Chinese-to-English translation. We performed our discrimi-native training and alignment evaluations using a hand-aligned portion of the NIST MT02 test set, which consists of 150 training and 191 test sen-tences (Ayan and Dorr, 2006). We trained the baseline HMM on 11.3 million words of FBIS newswire data, a comparable dataset to those used in previous alignment evaluations on our test set (DeNero and Klein, 2007; Haghighi et al., 2009).
Our end-to-end translation experiments were tuned and evaluated on sentences up to length 40 from the NIST MT04 and MT05 test sets. For these experiments, we trained on a 22.1 million word parallel corpus consisting of sentences up to length 40 of newswire data from the GALE pro-gram, subsampled from a larger data set to pro-mote overlap with the tune and test sets. This cor-pus also includes a bilingual dictionary. To im-prove performance, we retrained our aligner on a retokenized version of the hand-annotated data to match the tokenization of our corpus. 8 We trained a language model with Kneser-Ney smoothing on 262 million words of newswire using SRILM (Stolcke, 2002). 6.2 Word and Phrase Alignment The first panel of Table 1 gives a word-level eval-uation of all five aligners. We use the alignment error rate (AER) measure: precision is the frac-tion of sure links in the system output that are sure or possible in the reference, and recall is the frac-tion of sure links in the reference that the system outputs as sure. For this evaluation, possible links produced by our extraction set models are ignored. The full extraction set model performs the best by a small margin, although it was not tuned for word alignment.

The second panel gives a phrasal rule-level evaluation, which measures the degree to which these aligners matched the extraction sets of hand-annotated alignments, R 3 ( A t ) . 9 To compete fairly, all models were evaluated on the full ex-traction sets induced by the word alignments they predicted. Again, the extraction set model outper-formed the baselines, particularly on the F 5 mea-sure for which these systems were trained.

Our coarse pass extraction set model performed nearly as well as the full model. We believe these models perform similarly for two reasons. First, most of the information needed to predict an extraction set can be inferred from word links and phrasal rules contained within ITG terminal productions. Second, the coarse-to-fine inference may be constraining the full phrasal model to pre-dict similar output to the coarse model. This simi-larity persists in translation experiments. for parse failures. 6.3 Translation Experiments We evaluate the alignments predicted by our model using two publicly available, open-source, state-of-the-art translation systems. Moses is a phrase-based system with lexicalized reordering (Koehn et al., 2007). Joshua (Li et al., 2009) is an implementation of Hiero (Chiang, 2007) using a suffix-array-based grammar extraction approach (Lopez, 2007).

Both of these systems take word alignments as input, and neither of these systems accepts possi-ble links in the alignments they consume. To inter-face with our extraction set models, we produced three sets of sure-only alignments from our model predictions: one that omitted possible links, one that converted all possible links to sure links, and one that includes each possible link with 0.5 prob-ability. These three sets were aggregated and rules were extracted from all three.

The training set we used for MT experiments is quite heterogenous and noisy compared to our alignment test sets, and the supervised aligners did not handle certain sentence pairs in our par-allel corpus well. In some cases, pruning based on consistency with the HMM caused parse fail-ures, which in turn caused training sentences to be skipped. To account for these issues, we added counts of phrasal rules extracted from the baseline HMM to the counts produced by supervised align-ers.

In Moses, our extraction set model predicts the set of phrases extracted by the system, and so the estimation techniques for the alignment model and translation model both share a common underly-ing representation: extraction sets. Empirically, we observe a BLEU score improvement of 1.2 over the best unsupervised baseline and 0.8 over the block ITG supervised baseline (Papineni et al., 2002).

In Joshua, hierarchical rule extraction is based upon phrasal rule extraction, but abstracts away sub-phrases to create a grammar. Hence, the ex-traction sets we predict are closely linked to the representation that this system uses to translate. The extraction model again outperformed both un-supervised and supervised baselines, by 1.4 BLEU and 1.2 BLEU respectively. Our extraction set model serves to coordinate the alignment and translation model components of a statistical translation system by unifying their rep-resentations. Moreover, our model provides an ef-fective alternative to phrase alignment models that choose a particular phrase segmentation; instead, we predict many overlapping phrases, both large and small, that are mutually consistent. In future work, we look forward to developing extraction set models for richer formalisms, including hier-archical grammars.
 This project is funded in part by BBN under DARPA contract HR0011-06-C-0022 and by the NSF under grant 0643742. We thank the anony-mous reviewers for their helpful comments.

