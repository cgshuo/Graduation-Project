 Group activities are essential ingredients of people X  X  social life. The rapid growth of online social networking services has greatly boosted group activities by providing convenient platform for users to organize and participate in such activ-ities. Therefore, recommender systems, as a critical compo-nent in social networking services, now face new challenges in supporting group activities. In this paper, we study the group recommendation problem, i.e., making recommenda-tions to a group of people in social networking services. We analyze the decision making process in a group to pro-pose a personal impact topic (PIT) model for group recom-mendations. The PIT model effectively identifies the group preference profile for a given group by considering the per-sonal preferences and personal impacts of group members. Moreover, we further enhance the discovery of personal im-pact with social network information to obtain an extended personal impact topic (E-PIT) model. We have conducted comprehensive data analysis and evaluations on three real datasets. The results show that our proposed group recom-mendation techniques outperform baseline approaches. H.3.3 [ Information Search and Retrieval ]: Information Filtering; J.4 [ Computer Applications ]: Social and Be-havior Sciences Algorithms, Experimentation.
 Recommender Systems, Probabilistic Generative Model, Group Recommendation.
Group activities are essential ingredients of people X  X  social life. With recent development of social networking services, such as Facebook 1 and Meetup 2 , organizing and participat-ing in group activities (e.g., dining out, movie watching, vacations and parties) become very easy. As more and more people are willing to share their social relationships and ac-tivities online, new web services today need to target not only on individual users but also user groups. As a key tech-nology in modern web services, recommender systems are now facing vigorous new demands and challenges in making recommendations for a group of people.

While making significant advances in the recommender system technology, most of the prior research studies in this topic area have focused on providing recommendations for individuals, which unfortunately can not be effectively ap-plied for group recommendations , i.e., making recommenda-tions for a group of people. Notice that a common idea behind recommender systems that make personalized rec-ommendations for individuals is to discover users X  preference profiles (either from user ratings or item text descriptions) in order to identify items that best match the profiles of tar-geted users. However, for group recommendations, we argue that a good recommender system not only needs to model users X  individual preferences but also understands how a de-cision among group members is reached.

The pioneering researches on group recommendation have been dated back to MusicFX [14], a music recommender sys-tem built for gym users in 1998. Over these years, important findings and solutions have been reported in various studies on web/news pages [18], tourism [15], music [8], TV pro-grams [25] and movies [17]. In this paper, we aim to study the problem of group recommendation, under the context of group activities in social events. Our research is unique from previous research in both of the problem and solution aspects. www.facebook.com www.meetup.com
In this paper, we propose a probabilistic model, namely, the personal impact topic (PIT) model, for group recom-mendations. This model naturally captures the process in which an item is selected collectively by an ad hoc group. In this model, user preferences over items are abstracted into a number of latent topics. As such, each user X  X  personal preference is modeled as a distinct distribution over all these topics, while each topic is expressed as a distinct distribution over all the items. Now a key issue is how an item is selected by a group of users, each of whom has her own preferences. While each group member may contribute to the group de-cision, we model the decision making process for an ad-hoc group with two key points. First, group decision on item selection follows the personal preferences of group members. Second, for a given item selection event (i.e., a decision on a group activity), a group member is probabilistically cho-sen to be a group decision representative (or representative for short) 3 . In this model, we introduce the personal im-pact parameter to control this process such that users with higher personal impact values shall have higher probabilities to serve as a group representative.

Our contributions can be summarized as follows:
Please note that this representative is not designated as the decision maker but to denote the  X  X robable source X  of group decision made.

The rest of the paper is organized as follows. In Section 2, we review related works for both recommender systems designed for individual users as well as those for a group of users. In Section 3, we define the tackled group recom-mendation problem and provide some background for the proposed probabilistic models. The personal impact param-eters are introduced in Section 4. Accordingly, we propose the personal impact topic (PIT) model to address the pro-posed recommender problem and extend the PIT model by exploring additional social features. In Section 5, we evalu-ate our proposed models using three datasets and conclude the paper in Section 6.
Here, we review some related works, including general rec-ommender systems, recommender systems for groups, and latent semantic models applied to recommender system. Item recommender system: Item recommendation is an essential service for e-commerce and web services (e.g. net-flix.com and amazon.com). The goal is to recommend a list of items that a targeted user may be interested in. Collabo-rative filtering and content-based techniques are two widely adopted approaches for recommender systems [1, 22]. Both of them discover users X  personal profiles and utilize these profiles to find relevant items. Collaborative filtering tech-niques [7, 9, 21] automatically predict relevant items for a given user by referencing item rating information from other similar users. Content-based techniques [16] make recom-mendations by matching a user X  X  personal profile to descrip-tive information of items. Although both techniques are complimentary to each other, collaborative filtering gains huge popularity among modern web services because it is easier to obtain item ratings explicitly (e.g. from movie rat-ing by netflix.com) or implicitly (e.g. click information from amazon.com) from users than to collect interest descriptive information from users. Therefore, many techniques adopt the ideas of collaborative filtering. The classic memory-based collaborative filtering technique [19, 21] identifies a group of k users that have the most closed rating results with the tar-geted user, and merge ratings from these k users to find the top-N recommendations. However, there are several limi-tations for the memory-based CF techniques, such as when data are sparse and the common items are few, it is prob-lematic to find similar users. To achieve better prediction performance and overcome shortcomings of memory-based CF algorithms, model-based CF approaches, including ma-trix factorization [6], clustering CF models [23], and latent semantic models [10], have been investigated.
 Group recommender system: Group recommender sys-tems make item recommendations for a user group. Existing group recommender systems have been applied in web/news pages [18], tourism [15], music [14, 8], and TV programs and movies [17, 25]. Generally speaking, two main approaches have been proposed for group recommendation [11]. The first one creates an aggregated profile for a group based on individual profiles of its group members and makes recom-mendations based on the aggregated group profile [14, 25]. The second approach aggregates the recommendation results for individual members into a single group recommendation list. In other words, recommendations (i.e., ranked item lists) for individual members are created independently and then aggregated into a joint group recommendation list [4], where the aggregation functions could be based on aver-age or least misery strategies [13, 17]. However, the group recommendation system can go beyond simple strategies such as averaging or least misery. In fact, the group mem-ber X  X  personality and social status may determine how much weight his preference would determine group selections. In-trigue [3] take roles of tourist group members into account to recommend places to visit, (such that children would follow their parents X  plans). The group members X  disagreement to candidate items are considered in the recommendation score function in [2]. In this paper, we introduce the notion of personal impact which differentiates the contribution of group members to a decision in a different way. Personal impacts are useful for constructing group profiles to make good recommendations for groups.
 Probabilistic Latent Topic Models . Latent topic mod-els analyze relationships between a set of documents and the words, and identify latent topics that are represented as distributions over words in a corpus. In [10], a proba-bility topic model is proposed to recommend item for in-dividual users. In [24], a latent topic model incorporating social influence has been proposed to make better item rec-ommendations. Latent Dirichlet Allocation (LDA) [5], a well known latent semantic model for text summarization, adopts Dirichlet priors for document topic distributions and word distributions. The principle of LDA is applicable un-der the context of item recommendation by mapping docu-ment/word entities to user/item entities. As an extension to LDA, author topic (AT) model [20] analyze co-authored document text, and therefore discover each author X  X  exper-tise and contributions to each co-authored documents. Our approach focus on group recommendation problem, and is related to LDA [5] and author topic model [20].
In this section, we first formally define the group recom-mendation problem studied in this paper. Then we adopt a probabilistic modeling approach for document analysis, called author topic model, to serve as the basis for address-ing the group recommendation problem.
Let U = { u 1 ,u 2 ,  X  X  X  ,u V } be a set of V users, and W = { w 1 ,w 2 ,  X  X  X  ,w M } denote a set of M items. A history log of group-item selection can be written in the form of { X  G 1  X  G 2 ,s 2  X  ,  X  X  X   X  G N ,s N  X  X  where G n = { u i } and s n = w note an ad hoc group and the item selected by the group, respectively 4 . Let ~ G collectively denote the N ad hoc groups and ~s be the collection of N selections made by them. H =  X  ~ G,~s  X  represents the history of all the N group-item pairs. Given H , the group recommendation problem is defined as to construct a ranked recommended list of items for a tar-geted group G x , in accordance with the likelihood of the group to select those items.

We aim to adopt the collaborative filtering paradigm to address the group recommendation problem without requir-ing additional context information for users, groups or items. Also, we assume an input dataset of implicit ratings among groups and items in forms of clicks, tags, likes, checkins, Note that it is possible that a group is duplicated (e.g. G x = G y , ( x 6 = y ) ). However, this situation is rare since there is quite a few item selection history for a distinct group. etc, which are generally available in various web services, especially social networking systems.

The group recommendation problem defined above brings us several challenges. First, the groups are formed in ad hoc manner and usually ephemeral. For example, three friends may have dinner together and checkin the restaurant in a social network service. The user groups for such one-off so-cial activities are usually not persistent, as different groups may be formed on another day. Thus, we do not treat these groups as pseudo users to apply single user recommenda-tion techniques. There are very few item selections logged for each group, and some targeted group even has no pre-vious history at all, leading to severe cold-start problem. Second, many services are group-centric which do not keep track of individual users X  item selections/ratings. Thus, it requires a technique that would construct user preference profiles purely from group activities. Finally, how groups reach a decision to select an item is not well answered in previous studies. In [3, 2, 17, 25], group recommendations are made based on various strategies. In this study, we aim to model the impacts from different group members on group item selections, and then exploit such information in making recommendation for groups.
To solve the group recommendation problem defined above, we need to address two issues: 1) how to profile preferences of individual users, and 2) how to model the group selec-tion decision making process, given the preferences of its members. To address these issues, we propose to use the la-tent topic modeling approach which is known for achieving good recommendations even when dataset is sparse [10, 24]. Moreover, the model provides an interpretation of the item selection process.

Without loss of generality, we assume there are K latent topics T = { t 1 ,t 2 ,  X  X  X  ,t K } , each of them represents a differ-ent multinomial distributions over items. Every topic can be considered as a soft-cluster of items, where items with higher probabilities in the same topic tend to be picked by similar groups. A user X  X  preference is modeled as a mix-ture of topics, which is also a multinomial distribution. To model the group preference profile, we assume the prefer-ence profile is a mixture of the group members X  preferences. Thus, we use an election process to describe this mixture. More specifically, for each item selection observation (logged as a historical transaction) , we assume a representative is probabilistically selected from the group. Then, the item is probabilistically picked based on this representative X  X  per-sonal preferences. Because every member has a chance to be elected as the representative, the overall probability of an item selected by the group can reflect the mixture of the group members X  personal preferences.

While there is no prior latent topic model proposed for the group recommendation problem, we observe that the Author Topic (AT) model [20] proposed for document-authorship analysis may provide some hints as the authors of a paper naturally form a group. In the AT model, the creation of a document is modeled as follows. For each word in the docu-ment, an author is drawn from the document X  X  author group. Next, a topic is selected following the author X  X  topic distri-butions, and from the topic X  X  word distributions, the word is selected. Each author X  X  topic distribution and each topic X  X  Figure 1: Author topic model under the group item selection context. G n and s n (in double circled nodes) represent the observed group and the se-lected item, respectively. r n is the corresponding representative, and z n is the generated topic. word distribution are modeled as multinomial distribution with Dirichlet prior.

Through a careful analysis, we find that the above-described document generation process shares some similar properties with our group item selection that we envisage. More specif-ically, if we consider the authors of a document a group and items selected by this group collected as words of the docu-ment, we may potentially apply the AT model to the group item selection process (as depicted in the plate representa-tion of an author topic model in Fig. 1). As shown, the n th group G n generates the n th representative r n  X  G n follow-ing the uniform multinomial distribution. The latent topic z n is then generated following the r n  X  X  topic distribution, which is a multinomial distribution ~  X  i following the Dirich-let prior D ( ~ X  ). Finally, the item s n is selected following the topic z n  X  X  word distribution, which is also a multinomial distribution ~ X  k following the Dirichlet prior D ( ~  X  ).
Furthermore, in AT model, the latent variables ~r and ~z are learned from the observations of both ~ G and ~s . In group recommendation, we need to not only learn the latent vari-ables, but also make prediction of s when a targeted group G is given. Here, we extend the AT model with a prediction function. Specifically, after the latent parameters ~  X  and ~ X  are learned, the probability that a user u i selects an item w can be derived as:
Pr AT ( w j | u i ) =
Following the generative process in Fig. 1, each group rep-resentative is generated with equal probabilities. Thus an item s n is accessed by a given group G n with the following probability: Pr Eqn. (2) directly uses the AT model parameters to estimate the future group item selections. We call this recommenda-tion method as Extended-AT (E-AT) model and use it as a baseline in this study.
The E-AT model assumes that each group member has an equal probability to be a representative (see Eqn. (2)). In this section, we argue that group members have differ-ent impacts in group item selection decisions. Hence, we introduce the notion of personal impact parameter to model this difference. Accordingly, we propose a personal impact topic (PIT) model by incorporating the personal impacts to control the generation of group representatives. We also pro-vide the model learning algorithm to infer personal impacts, topic distribution of users and item distributions of topics. Finally, to over-come the over-fitting problem when input dataset is sparse, we extend the PIT model by exploring additional social features.
From our daily life experience, we may observe that many group activities are usually proposed and organized by some active people, while other participants mostly follow the agenda. Similarly, in decisions such as item selections, some group members may out-speak others in expressing their preferences (due to expertise, authority, or other personal-ity factors) and thus have more influence on the decision. Therefore, the group selection decisions may reflect their opinions more than other indiscriminate group members. To quantify such influence, we introduce a latent variable of personal impact in our model to better capture how likely a user would influence a decision made within a group.
In our model, the personal impact of each individual user u can be abstracted as a positive numerical value  X  i , where a higher value indicates greater impact on a group X  X  decisions. For | U | users, we use ~ X  to represent all the personal impacts. More specifically,  X  i reflects the relative probability to influ-ence a group decision. In other words, the probability that a user is the representative of the group is: In Eqn.(3), the probability for a group member u i  X  G n to be selected as a representative is proportional to his personal impact. Otherwise, a user has zero probability to be a repre-sentative if he does not belong to the group. Following this definition, Eqn. (2) in E-AT model assumes that group mem-bers have the same personal impact, i.e., Pr ( r n = u i | G 1 / | G n | , which is a strong assumption. Next, we introduce the personal impact topic (PIT) model and develop tech-niques to learn personal impacts from group item selection dataset.
Fig. 2 illustrates the personal impact topic (PIT) model in plate graph. In the figure, personal impact parameters are introduced in the user plate, one for each user. Thus, the group item selection process is composed as three steps: 1) representative r n = u i is drawn from G n according to group members X  personal impacts in Eqn. (3), 2) representative u probabilistically selects a topic z n = t k following his topic distribution ~  X  i , and then 3) the item s n is probabilistically selected following t k  X  X  item distribution ~ X  k . Since users may have different personal impacts, the group representative se-lection is biased towards those with higher personal impacts. That is, people with higher personal impacts have higher probabilities to influence the group to select items following their preferences. For simplicity, we do not assume a Bayes prior for personal impacts in the PIT model.
We adopt the Gibbs sampling method to infer model pa-rameters as it provides fast and effective solutions to our model. Gibbs sampling is a MCMC method that samples latent variables based on the model X  X  posterior distribution. We use ~s to represent all the items previously selected by groups ~ G , and the latent representatives and topics for those group-item pairs can be denoted as ~r and ~z , respectively. Following the PIT model in Fig. 2, the posterior is:
Pr( ~r,~z | ~ G,~s,~ X , X , X  )  X  Pr( ~r | ~ G,~ X  )  X  Pr( ~z | ~r, X  )  X  Pr( ~s | ~z, X  ) = In Eqn. (4), ~ C UT represents a counting matrix where ~ C the number of times that the k th topic is sampled for the i th user. Hence, ~ C UT i,  X  denotes a vector of the i th user X  X  sample topic counts. Similarly, ~ C TW k,  X  is a vector of the k th topic X  X  item counts. In Eqn. (4) the first term is the product of all the representative selection probabilities under the per-sonal impacts. The second term is the joint probability of the respective users X  selected topics. Because the Dirichlet prior is conjugate to the multinomial distribution of each users X  topic selection, the joint probability can be simpli-tion. Similarly, the last term is the joint probability for each topic X  X  item selections.

In order to sample the posterior probability, a Gibbs sam-pling method computes the full conditional probability for one single representative user and topic assignment  X  r n conditioned on all the other assignments ~r  X  n ,~z  X  n as:
Pr( r n = u i ,z n = t k | ~ G,~s,~r  X  n ,~z  X  n ,~ X , X , X  )  X   X  i P The subscript  X  n indicates that the counting matrix or the sample vector excludes the n th sample of  X  r n ,z n  X  . The derivation of Eqn. (5) is similar to the AT model X  X  pos-terior in [20], except that the first personal impact term. Eqn. (5) provides a method to sample  X  r n ,z n  X  in a batch. Note that user profiles ~  X  and topic profiles ~ X  are not pre-sented in Eqn. (5). These two parameter spaces are inte-grated out to produce a simplified probability computation. The actual ~  X  and ~ X  parameters are inferred from sampled ~r and ~z after the Gibbs sampling converges. Hence, this is called a collapsed Gibbs sampling method.

Although by repeatedly sampling ~r and ~z , we can produce fairly good posterior samples, Eqn. (5) assumes the personal impacts ~ X  are known and fixed. However, in our study, we also need to estimate personal impact values as well. To do this, we follow the maximum likelihood paradigm. The rationale is that after each round of Gibbs sampling, ~r is up-dated to reflect the new representative distributions. Thus personal impact parameters ~ X  are also updated so that the likelihood of generating samples ~r is maximized. In partic-ular, the likelihood of observing ~r given the groups ~ G and personal impacts ~ X  is: L ( ~r | ~ X , ~ G ) = log To find the maximum likelihood estimation of ~ X  from Eqn.(6), we adopt the gradient descent method. Specifi-cally, by taking a derivative regarding to each  X  i , we have:
First we initialize all the personal impacts ~ X  to a default value 1, which indicates that all users are assumed to have equal impacts when there are no observations . By iteratively take steps proportional to the personal impact gradients (see Eqn. (7)), we are able to find a set of local optimal personal impact parameters  X  ~ X  that fits the observations ~r . Note that, by definition, the personal impacts ~ X  should be non-negative. Thus, we introduce a positive number  X  as the lower bound of personal impacts. That is, whenever a personal impact is made lower than  X  , its value is set to  X  (fixed to 0 . 1 in our experiments). As such, we avoid some overfitting effects by ensuring that every user has a positive probability to be selected as a representative.

To put everything together, the Gibbs sampling algorithm for PIT model inference can be presented in Algorithm 1. This algorithm does two things: 1) output a Gibbs sam-pling ~r and ~z that converge to the posterior distribution of Eqn. (4) and 2) output a maximum likelihood estimation of personal impacts  X  ~ X  so that the representative sampling of ~r can be explained. The first part of Algorithm 1 from line 1 to 5 initializes the latent variable samples ~r and ~z by randomly drawing the users from the corresponding groups G n and topics 1  X  | T | . During the initialization, the al-gorithm maintains two counting matrices ~ C UT and ~ C These two counting matrices are used to efficiently compute the sampling posterior as in Eqn. (5). From line 6, The transitions between successive states of the Markov chain result from repeatedly drawing  X  r n ,z n  X  from their distribu-tions conditioned on all other variables as in Eqn. (5). Also, after each iteration of ~r , ~z sampling, we use the gradient descend method to fit ~ X  in line 11.

After Algorithm 1 finishes, we obtain the samples of ~r , ~z and the maximum likelihood estimation of personal impact Algorithm 1: PIT model Gibbs sampling algorithm.
 ~ X  . To infer the user and item profiles ~  X  and ~ X  , we have them following the Dirichlet distributions: Usually, we only need to use the maximized probability es-timation of these parameters, which can be written as
Therefore, the probability for a targeted group G x to se-lect an item w j is :
Pr PIT ( w j | G x ,  X  ~  X ,  X  ~ X ,  X  ~ X  )  X  X Eqn. (10) is then used to make item recommendations.
In the previous section, we discussed the PIT model to exploit the differences of personal impacts in group item selections. Yet, since the PIT model introduces an addi-tional parameter  X  for each user, if the group-item dataset is sparse, learning personal impact parameters suffers from overfitting problems. More specifically, if a user u i has only participated in very few group activities, then estimating personal impact  X  i using PIT model may not be practical. In this section, we explore the relationship between the per-sonal impacts and other features (especially social network features). By including these related features to PIT model, we expect these additional data shall further alleviate the over-fitting problem and thus achieve more reliable group recommendations.

As shown in Fig. 3, we introduce another feature e i as the evidence of the personal impact parameter. Consider e i as a
Figure 3: Extended Personal Impact Topic Model Figure 4: Personal Impacts vs. Degree distributions numerical observation feature for the user u i , and personal impact  X  i is correlated with e i . Candidates for this feature can be network degree, clustering coefficient, betweenness, page rank of the social network etc. Here, we studied the correlation between personal impact and social network de-gree as an example. In Fig. 4, we plot the personal impact parameters learned from PIT model against corresponding user social network degrees on the Whrrl dataset (dataset details can be found in Section 5.1). From this figure, al-though the personal impacts learned form PIT model may have overfitted values, users with higher personal impacts still are more likely to have larger social network degrees. Actually, the computed correlation between ~ X  and ~e in this dataset is 0 . 596, and the slope of the red fitted line is 6 . 13.
To model the correlation between e i and  X  i , we assume a linear model between them with Gaussian error, leaving other possible non-linear models to future works. Under our linear model assumption, the personal impact log likelihood can be expressed as: L ( ~r,~e | ~ G,~ X  ) = Under this log-likelihood, we not only need to estimate ~ X  but also need to find the linear relation X  X  parameter a and b . Because the correlation is modeled as linear, parameter a and b can be found the same as linear regression, but the gradient for each  X  i should be updated as:  X  L ( ~r,~e | ~ G,~ X  )
By replacing Eqn. (7) with Eqn. (12), we incorperate the personal impact related evidence into the PIT model. Intu-itively, the evidence value for each user gives a hint to his personal impact estimation. The inclusion of the personal impact evidence penalizes those personal impacts that devi-ate e i more than  X  away. Therefore, a smaller  X  penalizes more the error in Eqn. (12), and therefore forces the learned personal impacts to be closer to the observed evidence. In this paper, we use empirical methods to determine a good selection of  X  .
In this section, we evaluate the proposed models with three real datasets, one collected from a location-based so-cial network service whrrl.com and the other two from an event-based social network service meetup.com. We evalu-ate our proposed group recommendation models with three recommendation problems: 1) Whrrl group POI checkin rec-ommendation, 2) Meetup group tag recommendation, and 3) Meetup event venue recommendation. These three recom-mendation problems have different data space and group-item selection behaviors, which reflect comprehensive per-formances of proposed approaches. For each dataset, we evaluate the proposed PIT model against the baseline meth-ods. Since the Meetup datasets do not contain additional social network information, E-PIT model is only tested in Whrrl dataset.
Whrrl.com is an online location-based social network that helps people to explore points-of-interests (POIs) (e.g. restau-rants, movie theaters, parks etc). A group of people can checkin POIs and share the experiences via mobile devices. Given the group-POI checkin history, a recommendation task is to identify POIs that a target group has potential to visit. On the other hand, meetup.com is an online event-based social network that provides a platform for users to organize face-to-face social events. From the website, we col-lected two datasets that support two types of group recom-mendation problems. First, each meetup online group can specify some tags to represent common interests of group members, so we may recommend additional tags for groups based on existing ones. Second, to help people to organize social events at venues that fit participants X  preferences on meetup.com, we may recommend event venues to users de-pending on event participations and past venue selections.
The datasets collected for these three group recommenda-tion problems are summarized as in Table 1 5 . The first three rows show the total number of distinct users and groups, as well as the recommendation items (POIs, tags and venues). The fourth and fifth rows summarize average sizes of groups and how many groups each user participated in. Generally, smaller group sizes and more user-group participations lead to easier group recommendations. Finally, the sixth and sev-enth rows show how many items each unique group has se-lected, and how many selections each item received, respec-tively. The fewer items a group selects or the fewer group selections an item receives, the more sparse the dataset is, which results in more difficult recommendations. With dif-ferent statistics on the three datasets, we are able to com-
Meetup dataset [12] can be downloaded from http://largenetwork.org/ebsn prehensively test the proposed approaches in various appli-cation scenarios. Table 2: Evaluated Recommendation Methods
In Table 2, we summarize the recommendation methods evaluated in this paper. In addition to the E-AT, PIT, E-PIT models, we also introduce two memory-based collabo-rative filtering methods as the baselines, namely, the classic memory-based CF method [19] (CF) and the least miserable CF [17] (LM-CF). Since our datasets provide group-item pairs instead of user-item pairs, we first project a group-item pair  X  G n ,s n  X  into user-item selection pairs { X  u i G n } . After applying memory-based CF to the projected dataset, we make recommendations for a target group by averaging group members X  individual preference scores. LM-CF was studied in [17] as an important strategy to make group recommendations. LM-CF is similar to CF method, but when making recommendation to a target group, each item X  X  lowest score from group members is used to make recommendations.

For each method, we randomly sample 20% group-item pairs from the entire dataset as validation dataset. The other 80% data are used as training data. We use recall as the evaluation metric. Therefore, for each top-n recom-mended items, we calculate Therefore, the recall of each recommendation method is the percentage of targeted group X  X  selected items that are in-cluded within recommendations.
The first set of results on recall vs. number of recom-mendations are reported in Fig. 5. We fix the total number of topics K at 250, and vary the number of recommenda-tions. As shown in Fig. 5, while the recall grows as the num-ber of recommendations increases, PIT models achieve the best performance, followed by E-AT, and the CF approaches perform the worst. The results validate our proposed meth-ods, in which the personal impacts of group members effec-tively improved recommendation results. CF and LM-CF fall behind others because these two methods not only ig-nore the difference among users, but also treat each group activity as a trivial union of individual behaviors per group member. By breaking up the group selection transactions into personal activities, the CF methods overlook the social indication in group activities. The extended author topic (E-AT) model considers each group as a whole, which ef-fectively preserves the group X  X  social information. It also utilizes Dirichlet prior to prevent over-fitting, thus obtains better results. However, since the E-AT model is not aware of the differences of personal impacts, every group member is treated the same while making prediction for a target group, which degrades the recommendation performance. By min-ing the personal impacts from group-item pair histories, our proposed PIT model improves the recommendation perfor-mance significantly. To further alleviate the over-fitting of personal impact parameters, our E-PIT model exploits so-cial network degrees as an additional feature ~e to guide the personal impact estimation, and achieves the best result on the Whrrl dataset.

Fig. 6 illustrates the recall results when the number of recommendations is fixed at 80, and the number of topics varies. As CF and LM-CF do not involve topics, they have constant recalls. In Fig. 6 ( a ) and Fig. 6(c), when the num-ber of topics increases, the recalls first increase and then flat out. This is because items in these two datasets have large data space (see row 3 of Table 1), a large number of topics can help to precisely differentiate the items. In Fig. 6 ( b ), because the number of tags (item space) is much smaller, the Figure shows that 100 topics are enough to model tags. In all three recommendation test cases, we can see that the proposed PIT and E-PIT models improve over the E-AT model by about 10%, and outperform the CF approaches by 15%-25%. These significant improvements demonstrated the effectiveness of our proposals.
By learning the PIT and E-PIT models, we obtain a set of estimated personal impacts. One fundamental question that we need to answer is whether people do exhibit dif-ferent personal impacts. Because only if most of people X  X  personal impacts are significantly different from 1, the pro-posed PIT and E-PIT model can improve over E-AT model which assumes equal personal impacts.

In Fig. 7, the histograms of the learned personal impacts are plotted. Fig. 7(a) and Fig. 7(b) demonstrate learned personal impacts from PIT model and E-PIT model for the Whrrl POI checkin dataset, while Fig. 7(c) and Fig. 7(d) show personal impact distributions for the Meetup group tag and event venue dataset obtained from PIT model, re-spectively. In all four results, we can see that there are also a great portion of users with personal impacts close to 1. These users are either because 1) they have limited historical data to derive personal impacts, or 2) as their group repre-sentative probabilities are balanced, their personal impacts are indeed 1. Through careful examination of the data, we found that most of these users have extremely sparse histor-ical information in the dataset (e.g., they have only partici-pated in one group and involved in only one item selection, and the other group members are inactive as well). Hence, we are not able to differentiate the personal impact of such users from other group members. This result reflects the case that these users have equal impact on group decisions. By comparing Fig. 7(a) and Fig. 7(b), we can find that by introducing additional social network degree features, E-PIT model improves over the PIT model by reducing the number of users with personal impacts closed to 1 from 28% to 17%. Thus, we believe about 10% of ambiguous personal impacts can be refined after introducing the social network degree.
On the other hand, Fig. 7 demonstrate the rest of users X  personal impacts distributed relatively evenly above and be-low the value of 1, meaning that some of them influence their group X  X  decision more, while others influence much less. In-terestingly, Fig. 7(c) shows a drop of the distribution on [0 . 5 , 1) and (1 , 2]. The reason for this is that each of Meetup group selects an average of 4 . 92 tags. Based on our analy-sis, tags selected by one group are usually related. Thus, one user with the interest matching the group X  X  tags may have multiple chances to be sampled as representatives. The per-sonal impacts of these users are therefore boosted multiple times, leading to higher impact values. Meanwhile, users (a) Whrrl POI dataset (PIT Model) (c) Meetup group tag dataset (PIT Model) who do not match the group preference profile tend to gain even lower personal impact values. The learned personal impacts thus deviate more from 1. Fig. 7(d) has similar trends as in Fig.7(a), which does not have extreme personal impacts as Fig. 7(c) does, because each social event group usually only selects one venue.

To statistically confirm that most users have their per-sonal impact significantly deviate from 1, we applied a statis-tic test on a non-hypothesis that the personal impact val-ues equal to 1 for all the users. Accordingly, for an arbi-trary user u i , the expected number of times that u i is se-lected as representatives under this non-hypothesis is E i P as representatives is O i = P  X  r user, the p -value for his personal impact is the probability that a more extreme statistic value to O i is observed. By taking this statistic test for each individual user X  X  personal impact, we are able to find the percentage of users whose per-sonal impacts are significantly not equal to 1 under the Type I error  X  = 0 . 05. For these four results, the percentages are 56 . 4%, 68 . 0%, 50 . 7% and 61 . 0%, respectively. Thus, due to the limitation of our dataset size and user activities, we can-not show that all the users X  personal impacts are significant other than 1. However, these results demonstrate that lots of users X  personal impacts are indeed statistically significant, which proves our theory on utilizing personal impacts.
In this subsection, we conduct semantic investigations on the topics established by the proposed PIT model. In gen-eral, if the topics generated by the PIT model are seman-tically meaningful, we believe that the model is effective. Here, we show the analysis results with both location-centric data and text tag data. Figure 8: Geographic distribution of sampled topics
Fig 8 depicts item geographic location distributions of 7 selected topics on the Whrrl dataset and the Meetup event venue dataset. Each topic is represented by locations of 5 items with the highest generating probabilities. In both datasets, we can observe that the items of the same topic lo-cate close to each other. The reason is that location-related group activities such as checkins and offline events are usu-ally constrained by spatial distance, and people tend to move within small geographic areas most of the time. Thus, the items selected in these group activities fall into such small geographic areas. These results demonstrate that the PIT model has good ability to extract topics from pure group-item selections.

In Table 3, we present a list of topics composed of text tags. Given a set of topics T = t k identified by the PIT model, we associate each user u i with a topic that he/she is most interested in (i.e., t k with the largest Pr ( t k | u we sort the topics by number of users they are associated with. Intuitively, the more users associated with the topic, the more popular the topic is. As shown in Table 3, each row represents a topic and we list the top three tags for each topic ( w j with highest Pr ( w j | t k )). The most popular topic Table 3: Meetup group tag dataset PIT model topics is about hiking and outdoor activities, which matches our daily life experience that such activities are usually held on a group basis. It also indicates that people love to use online social network services to organize such outdoor events. Fur-ther, we find that more elaborated and specific tags attract more users, such as business networking, photography and dogs, and this indicates that people are willing to participate in group activities with focused topics. On the opposite, generic and vague tags like  X  X eeting new people X  degrades the model X  X  ability of separating topics, and they are not as attractive to users. Therefore, we can conclude that our PIT model works well on identifying interesting topics.
As social group oriented services are growing rapidly in recent years, recommender systems need to adapt to this new trend to offer better service. This paper studies the group recommendation problem that aims at recommend-ing items to ad hocly formed target groups. We proposed a probablistic personal impact topic (PIT) model to effectively address this problem. In the PIT model, we introduced the personal impact parameter to describe different influence of users on the group decision making process, and identify the recommended items by collectively consider users per-sonal preferences and their personal influences. Therefore, we naturally capture the fact that influencial users have higher chances to affect group selection decisions. Under the general assumption that individual user preference pro-files are not available, we designed a learning algorithm to inference the personal impacts and user preferences purely from group selection history. Furthermore, we exploit other social network features such as degree distributions to help refine the parameter inference in an extended PIT (E-PIT) model. Via comprehensive evaluations, we demonstrate that our proposed models bring great recommendation improve-ments over baseline approaches.
