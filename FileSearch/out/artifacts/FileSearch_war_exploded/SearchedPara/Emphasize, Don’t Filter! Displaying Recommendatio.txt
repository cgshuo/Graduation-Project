 This paper describes and evaluates a method for presenting recommendations that will increase the efficiency of the social activity stream while preserving the users X  accurate awareness of the activity within their own social networks. With the help of a content-based recommender system, the application displays the user X  X  home timeline in Twitter as th ree visually distinct tiers by emphasizing more strongly those Tweets predicted to be more interesting. Pilot study participants reported that they were able to read the interesting Tweets while ignoring the others with relative ease and that the recommender accurately categorized their Tweets into three tiers. H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval X  Information filtering; H.5.2 [ Information Interfaces and Presentation ]: User Interfaces X  user-centered design . Recommender Systems; Social Media; Twitter; Visualization People have many different reasons for using Social networking sites (SNSs) like Tw itter, Facebook, and G oogle+. Corporations use them to advertise, marketing companies use them to mine trends and opinions among dem ographic groups, and public figures use them to cultivate a greater following. Most people, however, use them at least in part for enjoyment and to stay connected to other people they al ready know in real life. Part of this experience is in sharing cont ent with others, and part is in reading content shared by others. As the rates of usage of these applications grow, information ov erload, determining how best to recommend updates, and deciding how best to present those recommendations in social activity streams are becoming increasingly important problems. The issue of recommendation in Twitter 1 timelines in particular has been tackled by Wang et al. [10] and Sriram [9], who used recommendations in an attempt to overcome information overload. In these cases, researchers used several machine-learning algorithms to classify Tweets into different categories based on topic or level of user inte rest. Abel et al. [1] also looked at recommendations in Twitter, us ing semantic enrichment to construct user models for personalized news recommendation. Much research has focused on improving the performance of different algorithms for recomme ndation, but unfortunately not recommendations [4]. Most SNSs now use some form of recommender system to reduce the information overload, typically by filtering out posts that are predicted to be uninteresting. However, there are a number of problems with stream filtering:  X  Recommenders are imperfect, so some interesting content will be missed.  X  Recommenders tend to filter away anything that cannot be predicted as interesting based on the users X  past behavior, and this can cause the user to miss potentially very important information (the  X  X ilter bubble X  problem [7]).  X  Often no indication is given that any content was hidden, and there is no way to view hidde n content, such as in Facebook  X  If the hidden content is retrievable, it is often either not indicated or difficult to perceive where the content belongs in the stream chronologically. This can lead to an inaccurate perception of stream activity and relative quality of content. TweetDeck 3 and Filttr 4 are Twitter applications that allow users to filter their streams by certain keywords, phrases, or authors, and Social Fixer 5 is a similar service crea ted for Facebook. However, criteria, and while Filttr can show where posts have been filtered in the stream, each one must be expanded individually in order to be read. In addition, showing a filtered, uniform stream offers no flexibility for different reading situations: the user may want to spend more or less time reading than it would take to consume all unread items in his stream. As a result, it is unlikely that the n content items the user consumes are the n most interesting ones, even if the filtering recommender is perfect. So while stream filtering can help with information overload, stream efficiency still has much room for improvement. Even more importantly, stream filtering can ultimately result in decreased trust [6], which can make it less likely for users to return to the system for continued use [8]. The method for presenting recommendations in social activity streams described in this paper will increase efficiency of stream consumption while avoiding many of the drawbacks of stream filtering. Using this method, the user whose unaltered stream is https://twitter.com https://www.facebook.com https://tweetdeck.twitter.com/ https://oauth.filttr.com http://socialfixer.com/ depicted in the Figure 1 example will easily be able to read only the interesting updates, while still knowing that there are seven updates (four interesting, three unint eresting) in total, being fully aware of where each update fits chronologically, and having an easy way to read the less interesting updates in context if desired. This paper presents an alternative to stream filtering that incorporates many of its strengths while avoiding its drawbacks. We chose Twitter because of the large amount of public updates available and the ease with wh ich one can follow many other users to build a rich content stream. With the help of a content-based recommender system (RS), the social stream is displayed by emphasizing Tweets predicted to be most interesting and de-emphasizing Tweets predicted to be least interesting. In total, three distinct visual tiers are used, as shown in Figure 2. Three tiers were chosen to keep the system very simple but to allow for more than a simple di chotomous differentiation. Having more tiers is advantageous because the user can move on from the top tier without needing to consume the most uninteresting content. Assuming equal distri bution among tiers, offering a greater number of tiers provides the user with a greater degree of control over the quality of content he consumes. However, having too many tiers would prevent each tier from standing out in relation to the others, making it more difficult for the user to restrict his reading to a single tier. Figure 2. Recommendations in a social stream using emphasis Depicting the three distinct tiers can be thought of as a problem in visualizing ordinal data. Mack inlay [5] provides a ranking of visual properties that are effective for such a task, and two of the top three have been chosen to enhance presentation of the three tiers: position and color saturation. The most highly-rated Tweets are shown furthest to the left and with a greater saturation of yellow than the others, while the lowest-rated Tweets are offset toward the right and have no colour at all. To add to the difference in emphasis, the size of both the text and the containing elements are increased for more highly-rated Tweets as well. This removes any ambiguity about which tier should draw the user X  X  focus. Besides offering a clear separation between tiers, the horizontal offsets make it easier for users to read through a particular tier while ignoring the less interesting ones. Additionally, the chronological consumption of a part icular tier. The user X  X  eye can return to a single reference point and scan up or down to find other Tweets within that tier. All recommender systems need some way to make inferences about user preferences. In Twitter, a user X  X  appreciation for a particular Tweet is explicitly indicated by  X  X etweeting X , or sharing with one X  X  followers, or  X  X avoriting X , which is a public expression of interest. The potential downside to these actions is that they are completely public, which might be an incentive or deterrent to performing those actions in certain situations. For the purposes of training a recommender, it would be preferable to have private action so the user feels free to be completely honest. Twitter also does not provide a way to indicate disinterest in a Tweet. To address these shortcomings, we propose private  X  X ike X  and  X  X islike X  features, used exclusively to train the recommender and to provide visual feedback by assigning  X  X iked X  updates automatically to the  X  X nteresting X  tier and  X  X isliked X  updates automatically to the  X  X ninteresting X  tier. These two actions are denoted by familiar  X  X humbs-up X  and  X  X humbs-down X  icons. To demonstrate and experiment with this idea, we developed a web application that uses the Twitter API along with custom server and client software to present a custom social stream layout in the web browser. The software implementation of this application consists of three basic components: a client, server, and database. The server connects directly to the Twitter API and to the database and just sends the necessary updates to the client. A full-JavaScript technology stack was used, consisting of Node.js 6 , Express 7 , MongoDB 8 , Socket.IO 9 , and AngularJS Users are given the ability to rate individual Tweets as  X  X nteresting X  by clicking the  X  X etweet X ,  X  X avorite X , or  X  X ike X  icon, or to rate as  X  X ninteresting X  by clicking the  X  X islike X  icon. After the user supplies 30 ratings, the recommender becomes active. Previous research on RSs for movies using both collaborative and content-based methods suggests that 10 ratings are enough [3], while Movielens.org requires at least 15 11 . However, in social activity streams, such a small number items from a single point in time may not be representative enough to attain an acceptable level of accuracy, so a slightly higher target was used for this application just to be sure. http://nodejs.org/ http://expressjs.com/ https://www.mongodb.org/ http://socket.io/ http://angularjs.org/ http://movielens.org/join (accessed May 6, 2014) The recommender uses a na X ve Bayes classifier to predict whether unrated Tweets would be interesting to the logged-in user. Every ten minutes, the classifi er is retrained using features from the rated Tweets stored in the database. Then all unrated Tweets are classified as interesting or uninteresting. The recommendation score is given by the following formula, where  X  and  X  is the set of uninteresting Tweets: Tweets are assigned to one of three categories based on this score: Tweets with scores less than 1/3 are classified as  X  X ninteresting X , Tweets with scores greater than 2/3 are classified as  X  X nteresting X , and the rest are classified as  X  X eutral X . The following features are included in the classification procedure:  X  Content author and retweeter (if applicable)  X  All hashtags and user mentions  X  Tweet type(s): photo, link, re tweet, reply, quote, manual retweet, comment  X  Number of retweets and favorites  X  Length of text  X  Number of numeric digits These features are all used to try to classify different types of Tweets. For example, a user may be partial to long Tweets with many numbers and no links that ha ve been retweeted many times. The application X  X  view consists of a linear vertical display of Tweets in chronological order, to remain consistent with the official Twitter client and thus familiar to users. Each Tweet is shown in its own rectangle (Fig ure 3). Embedded images can be expanded by clicking but are displa yed as thumbnails by default, as showing the full imag es would add too much to the size of the Tweet, artificially increasing its visual prominence in the stream. Each Tweet appears differently depending on its recommendation score. In addition to the content-based RS, users can increase or decrease the relative influence of any of the users they follow by means of a  X  X ser Volume X  feature. This feature can be accessed by hovering the cursor over a user X  X  avatar and moving a slider to the left or to the right. Since there are three recommendation levels, which can be thought of as  X  1, 0, and +1, influence can be changed from a minimum value of  X  2 to a maximum of +2. For example, if a level of  X  1 is chosen then all Tweets from this user, unless explicitly rated, will appear as one level lower than the rating they were given by th e RS, to a minimum level of  X  1. Figure 3. User interface with all three recommendation tiers Tweets that have been retweeted, favorited, or liked are displayed in the  X  X nteresting X  tier regardless of their actual recommendation score. However, to distinguish these Tweets from ones that were merely recommended as interesting, a small vertical bar is displayed at the left-hand side of the Tweet element. The primary goal of this evaluation was to determine the suitability of the design for presenting recommendations in a social stream. Most importantly, we want to know whether it is easy to ignore de-emphasized c ontent, because this design otherwise may not be a reasonable alternative to stream filtering. Of secondary interest was the a ccuracy of the RS. The current implementation was not expected to perform exceptionally well, but it should perform well enough to gain the user X  X  trust. If users do not trust the recommender at all, they will not gain anything by reading only the recommended Tweets. 12 participants were recruited for this pilot study using word of mouth through extended Facebook and Twitter friend networks. Participants ranged from expert to casual Twitter users. Five of them only read their Twitter timelines a few times a month, while seven do so several times per day, and the other about once a day. Follow network sizes were distributed evenly between 10 and 500 friends. Initial instruction informed users of the purpose of the study and that they would be testing a prototype of a system that presents recommendations in a Tw itter timeline. Estimated time to complete the study, including the final questionnaire, was 20 X 30 minutes. Upon logging in, users receiv ed further instruction. After reading about the purpose of the application and a brief explanation of the recommender a nd the different rating tiers, users were asked to complete the following tasks: 1. Rate 30 Tweets : Required to train the recommender. 2. Tiered Reading : Once the recommender is active, read through the timeline one tier at a time. 3. Normal Reading : Read through everything chronologically. of the application after the recommender is activated. The survey consisted of a questionnaire. The questions were broken down into the following categories: Twitter usage, recommendation presentation, recommender performance, and design feedback. The results for categories 2 and 3, which were on a six-point Likert scale, are outlined in the following sections. Users were asked how easy it was to accomplish three objectives in the tiered and normal reading tasks. More than half of the participan ts said that it was  X  X ery easy X  to read only the most emphasized Tweets, and all but one said it was more than  X  X omewhat X  easy. Ignoring only the most de-emphasized Tweets was more di fficult, while consuming the entire stream chronologically was rated as the most difficult task, though all tasks had generally positive responses. Read Emphasized ---1 4 7 Ignore De-emphasized --2 3 3 4 The difficulty of the  X  X ead All X  obj ective is least relevant because users were able to disable the visualization styles altogether in the application settings. These results suggest that this method of recommendation presentation could be a viable alternative to stream filtering, given an accurate recommender. It may even be applicable to other unrelated tasks where users are required to consume large amounts of information of varying priority levels. Users were asked to rate the recommender X  X  performance in placing unrated Tweets into the highest and lowest tiers. This very simple subj ective evaluation showed slightly better results than expected. It is very possible that an unbiased test of RS accuracy using pre-determined ratings in training and testing sets and cross-validation would tell a different story and that users are more forgiving of recommendations that are slightly off or just better than the alternative. At the same time, user perception of recommendation accuracy reveals more about trust than objective measures of precision and recall. User preferences would be quite easily inferred by the na X ve Bayes classifier if the user follows others who tweet about only a narrow range of topics. To get a more reliable indication of RS performance using this subjective method of testing, a larger sample size is needed. Users were finally asked to rate the helpfulness of the  X  X ser Volume X  feature and to give open-ended feedback about the user interface and application features. User Volume -1 -3 7 1 Tweet interest can sometimes fluctu ate greatly even within the set of Tweets from a given user. Because of this fact, it was unclear how helpful the user volume feature would be. However, the responses indicate that the feature was indeed useful and that users would like to see the feature expanded to be more flexible. The main theme of the open-ended feedback responses was that participants wanted more manual customization options. While it is desirable to automate the re commendation process as much as possible, allowing users to choos e from different colour, size, and position options one time would add much to the user experience without taking away from the application X  X  benefits. The greatest drawback to this pilot study was the limited sample size. As well, most of the ques tions asked in the questionnaire were subjective and may have been positively biased. Future experiments will be designed to try to minimize this effect. Some of the drawbacks of social activity stream filtering have been addressed in Madmica [6]. The filter bubble visualization in this SNS allows users to view which updates have been hidden, and it also gives control to show or hide posts on certain topics from certain users. However, it remains difficult to get a sense of where posts belong in the context of the social stream without restoring them to a visible status. The Comtella discussion forum [11] was the original inspiration for the strategy of presenting re commendations without filtering. In this system, recommendations are made collaboratively by and for other members of the community. The most recommended to be visually attractive and more noticeable. However, the horizontal offset was not employed in this system, and the method of collaborative recommendations used within this closed community is not replicable in the vast open world of Twitter. This short paper proposes to solv e the problems related to user awareness and control of information filtering in social network activity streams by visually emphasizing the recommendations within the full stream. In this wa y nothing is hidden, and the user gains awareness and control of the recommendations. Results from the pilot study suggest that th e idea does have merit and that further study would be worthwhile. The next step is to address the user feedback received and perform a larger-scale experiment to compare user trust, satisfact ion, and subjectively reported recommender accuracy in two systems: one using stream filtering to hide the least interesting updates and the other using the recommendation emphasis design described in this paper. [1] Abel, F., Gao, Q., Houben, G. , Tao, K. (2011).  X  X nalyzing [2] Adomavicius, G. &amp; Tuzhilin, A. (2005).  X  X oward the Next [3] Cremonesi, P., Garzotto, F., &amp; Turrin, R. (2012).  X  X ser [4] Konstan, J. &amp; Riedl, J. (2010).  X  X ecommender Systems: [5] Mackinlay, J. (1986).  X  X utomating the design of graphical [6] Nagulendra, S. &amp; Vassileva, J. (2013).  X  X roviding Awareness, [7] Pariser, E. (2011). The Filter Bubble: What the Internet Is [8] Pu, P. &amp; Chen, L. 2006.  X  X rust Building with Explanation [9] Sriram, B. (2010).  X  X hort Text Classification in Twitter to [10] Wang, Y., Zhang, J., &amp; Vassileva, J. (2010).  X  X owards [11] Webster, A. &amp; Vassileva, J. (2006).  X  X isualizing Personal 
