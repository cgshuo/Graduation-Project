 Yichuan Tang tang@cs.toronto.edu Ruslan Salakhutdinov rsalakhu@cs.toronto.edu Geoffrey Hinton hinton@cs.toronto.edu Multilayer generative models have recently achieved excellent recognition results on many challenging datasets (Ranzato &amp; Hinton, 2010; Quoc et al., 2010; Mohamed et al., 2011). These models share the same underlying principle of first learning generatively from data before using the learned latent variables (fea-tures) for discriminative tasks. The advantage of us-ing this indirect approach for discrimination is that it is possible to learn meaningful latent variables that achieve strong generalization. In vision, illumination is a major cause of variation. When the light source direction and intensity changes in a scene, dramatic changes in image intensity occur. This is detrimen-tal to recognition performance as most algorithms use image intensities as inputs. A natural way of attack-ing this problem is to learn a model where the albedo, surface normals, and the lighting are explicitly repre-sented as the latent variables. Since the albedo and surface normals are physical properties of an object, they are features which are invariant w.r.t. illumina-tion.
 Separating the surface normals and the albedo of objects using multiple images obtained under dif-ferent lighting conditions is known as photometric stereo (Woodham, 1980). Hayakawa (1994) described a method for photometric stereo using SVD, which estimated the shape and albedo up to a linear trans-formation. Using integrability constraints, Yuille et al. (1999) proposed a similar method to reduce the ambi-guities to a generalized bas relief ambiguity. A related problem is the estimation of intrinsic images (Barrow &amp; Tenenbaum, 1978; Gehler et al., 2011). However, in those works, the shading (inner product of the light-ing vector and the surface normal vector) instead of the surface normals is estimated. In addition, the use of three color channels simplifies that task.
 In the domain of face recognition, Belhumeur &amp; Krieg-man (1996) showed that the set of images of an object under varying lighting conditions lie on a polyhedral cone (illumination cone), assuming a Lambertian re-flectance and a fixed object pose. Recognition algo-rithms were developed based on the estimation of the illumination cone (Georghiades et al., 2001; Lee et al., 2005). The main drawback of these models is that they require multiple images of an object under vary-ing lighting conditions for estimation. While Zhang &amp; Samaras (2006); Wang et al. (2009) present algo-rithms that only use a single training image, their al-gorithms require bootstrapping with a 3D morphable face model. For every generic object class, building a 3D morphable model would be labor intensive.
 In this paper, we introduce a generative model which (a) incorporates albedo, surface normals, and the lighting as latent variables; (b) uses multiplicative in-teraction to approximate the Lambertian reflectance model; (c) learns from sets of 2D images the distribu-tions over the 3D object shapes; and (d) is capable of one-shot recognition from a single training example. The Deep Lambertian Network (DLN) is a hybrid undirected-directed model with Gaussian Restricted Boltzmann Machines (and potentially Deep Belief Net-works) modeling the prior over the albedo and surface normals. Good priors over the albedo and normals are necessary since for inference with a single image, the number of latent variables is 4 times the number of observed pixels. Estimation is an ill-posed prob-lem and requires priors to find a unique solution. A density model of the albedo and the normals also al-lows for parameter sharing across individual objects that belong to the same class. The conditional dis-tribution for image generation follows from the Lam-bertian reflectance model. Estimating the albedo and surface normals amounts to performing posterior in-ference in the DLN model with no requirements on the number of observed images. Inference is efficient as we can use alternating Gibbs sampling to approx-imately sample latent variables in the higher layers. The DLN is a permutation invariant model which can learn from any object class and strikes a balance be-tween laborious approaches in vision (which require 3D scanning (Blanz &amp; Vetter, 1999)) and the generic unsupervised deep learning approaches. We briefly describe the Gaussian Restricted Boltz-mann Machines (GRBMs), which are used to model the albedo and surface normals. As the extension of bi-nary RBMs to real-valued visible units, GRBMs (Hin-ton &amp; Salakhutdinov, 2006) have been successfully ap-plied to tasks including image classification, video ac-tion recognition, and speech recognition (Lee et al., 2009; Krizhevsky, 2009; Taylor et al., 2010; Mohamed et al., 2011). GRBMs can be viewed as a mixture of diagonal Gaussians with shared parameters, where the number of mixture components is exponential in the number of hidden nodes. With visible nodes v  X  R N v configuration is given by: E
GRBM ( v , h ) = The conditional distributions needed for inference and generation are given by: where  X  i = b i +  X  2 i P j W ij h j . Additional layers of binary RBMs are often stacked on top of a GRBM to form a Deep Belief Net (DBN) (Hinton et al., 2006). Inference in a DBN is approximate but efficient, where the probability of the higher layer states is a function of the lower layer states (see Eq. 1). GRBMs and DBNs use Eq. 2 to generate the intensity of a particular pixel v i . This generative model is inef-ficient when dealing with illumination variations in v . Specifically, the hidden activations needed to gener-ate a bright image of an object are very different from the activations needed to generate a dark image of the same object.
 The Lambertian reflectance model is widely used for modeling illumination variations and is a good approx-imation for diffuse object surfaces (those without any specular highlights). Under the Lambertian model, il-lustrated in Fig. 1, the i -th pixel intensity is modelled as v i = a i  X  max ( ~ n T i ~ ` , 0). The albedo a i , also known as the reflection coefficient, is the diffuse reflectivity of a surface at pixel i , which is material dependent but illumination invariant. In contrast to the generative process of the GRBM, the image of an object under different lighting conditions can be generated without changing the albedo and the surface normals. Multi-plications within hidden variables in the Lambertian model give rise to this nice property. 3.1. The Model The DLN is a hybrid undirected-directed generative model that combines DBNs with the Lambertian re-flectance model. In the DLN, the visible layer consists of image pixel intensities v  X  R N v , where N v is the number of pixels in the image. The first layer hidden variables are the albedo, surface normals, and a light source vector. Specifically, for every pixel i , there are two corresponding latent random variables: the albedo a  X  R 1 and surface normal n i  X  R 3 . Over an image, matrix of dimension N v  X  3, where n i denotes the i -th row of N . The light source variable `  X  R 3 points in the direction of the light source in the scene. We use GRBMs to model the albedo and surface normals, and a Gaussian prior to model ` . It is important to use GRBMs since we expect the distribution over albedo and surface normals to be multi-modal (see Fig. 4). Fig. 2 shows the architecture of the DLN model: Panel (a) displays a standard network where filled triangles denote multiplicative gating between pixels and the first hidden layer. Panel (b) demonstrates the desired latent representations inferred by our model given in-put v . While we use GRBMs as the prior models on albedo and surface normals, Deep Belief Network priors can be obtained by stacking additional binary RBM layers on top of the g and h layers. For clarity of presentation, in this section we use GRBM priors 1 . The DLN combines the elegant properties of the Lam-bertian model with the GRBMs, resulting in a deep model capable of learning albedo and surface normal statistics from images in a weakly-supervised fashion. The DLN has the following generative process: where vec ( N ) denotes the vectorization of matrix N . The GRBM prior in Eq. 4 is only approximate since we enforce the soft constraint that the norm of n i is equal to 1.0. We achieve this via an extra energy term in Eq. 6. Eq. 5 represents the probabilistic version of the Lambertian reflectance model. We have dropped  X  max  X  for convenience.  X  max  X  is not critical in our model as maximum likelihood learning regulates the generation process. In addition, a prior on lighting di-rection fits well with the psychophysical observations that human perception of shape relies on the assump-tion that light originates from above (Kleffner &amp; Ra-machandran, 1992).
 DLNs can also handle multiple images of the same object under varying lighting conditions. Let P be the number of images of the same object. We use L  X  R 3  X  P to represent the lighting matrix with columns { ` p : p = 1 , 2 ,...,P } , and V  X  R N v  X  P to represent the matrix of corresponding images. The DLN energy function is defined as: E
DLN ( V , a , N , L , g , h ) = + + E GRBM ( a , h ) + E GRBM ( vec ( N ) , g ) (6) The first line in the energy function is proportional to log p ( v | a , N , ` ), the multiplicative interaction term from the Lambertian model. The second line corre-sponds to the quadratic energy of log p ( ` ) and the soft norm constraint on n i . This constraint is critical for the correct estimation of the albedo, since we can in-terpret the albedo at each pixel as the L 2 norm of the pixel surface normal. The third line contains the hidden variables of the albedo GRBM and g  X  R N g represents the hiddens of the surface normal GRBM:
E GRBM ( a , h ) = E
GRBM ( vec ( N ) , g ) = 3.2. Inference Given images of the same object under one or more lighting conditions, we want to infer the posterior dis-tribution over the latent variables (including albedo, surface normals and light source): p ( a , N , L , g , h | V ). With GRBMs modeling the albedo a and surface nor-mals N , the posterior is complicated with no closed form solution. However, we can resort to Gibbs sam-pling using 4 sets of conditional distributions:  X  Conditional 1 : p ( g , h | a , N , L , V )  X  Conditional 2 : p ( a | N , L , h , V )  X  Conditional 3 : p ( L | N , a , V )  X  Conditional 4 : p ( N | a , L , g , V ) Conditional 1 is easy to compute as it factorizes over g , sian RBMs model the albedo a and the surface nor-mals N , the two factorized conditional distributions have the same form as Eq. 1.
 Conditional 2 factorizes into a product of Gaussian distributions over N v pixel-specific albedo variables: p ( a | N , L , h , V ) =
Y where s ip = n T i ` p is the illumination shading at pixel i and  X  h i = b i +  X  2 a of the albedo GRBM.
 This conditional distribution has a very intuitive in-terpretation. When a light source has zero strength, ( ` p = 0  X  s ip = 0), then p ( a i | n i , ` p , h ,v i ) has mean at  X  h i , which is purely the top-down activation. Conditional 3 factorizes into a product distribution over P separate light variables: p ( L | N , a , V ) = Q p =1 p ( ` p | N , a , v p ), where p ( ` p | N , a , v p a quadratic energy function: Hence the conditional distribution over ` p is a multi-variate Gaussian of the form: p ( ` p | N , a , v )  X  X  ( ` p |  X   X   X  1  X  T l  X  + X Conditional 4 can be decomposed into a product of distributions over the surface normals of each pixel: Since in our model we have the soft norm constraint form for p ( n i | L , g ,a i , v i ). We use the Hamiltonian Monte Carlo (HMC) algorithm for sampling.
 HMC (Duane et al., 1987; Neal, 2010) is an auxiliary variable MCMC method which combines Hamiltonian dynamics with the Metropolis algorithm to sample continuous random variables. In order to use HMC, we must have a differentiable energy function over the variables. In this case, the energy of conditional 4 takes form: E ( n i ) = where  X  g i is the top-down mean of n i from the g-layer, and D i = diag (  X   X  2 n matrix.
 We note that there is a linear ambiguity when we es-timate the normals and lighting direction. In Eq. 5, n ` p = n T i RR  X  1 ` p . This means that we can only estimate n i and ` p up to a linear transformation. For-tunately, while R is unknown, it is constant across { v i } P i =1 due to the learned priors over N , a and ` . Therefore, recognition and image relighting tasks (Sec. 4) are not affected. 3.3. Learning Learning is accomplished using a variant of the EM algorithm. In the E-step, MCMC samples are drawn from the approximate posterior distribution (Neal &amp; Hinton, 1998). We first sample from the conditional distributions in Sec. 3.2 to approximate the posterior log-likelihood function w.r.t. the model parameters. Specifically, where  X  is the learning rate. We approximate the in-tegral using: proximately drawn from the posterior distribution p ( a , N , L , h , g | V ;  X  old ) in the E-step. Maximum likelihood learning of GRBMs (and DBNs) is in-tractable. We therefore turn to Contrastive Diver-gence (CD) (Hinton, 2002) to compute an approximate gradient during learning. The complete training algo-rithm for the DLN in presented in Alg. 1.
 Rather than starting with randomly initialized weights, we can achieve better convergence by first training the albedo GRBM on a separate face database. We can then transfer the learned weights before learning the complete DLN. We experiment with the Yale B and the Extended Yale B face databases. Combined, the two databases con-tain 64 frontal images of 38 different subjects. 45 images for each subject are further divided into 4 subsets of increasing illumination variations. Fig. 3 shows samples from the Yale B and Extended Yale B database.
 For each subject, we used approximately 45 frontal images for our experiments 2 . We separated 28 sub-jects from the Extended Yale B database for training and held-out all 10 subjects from the original Yale B database for testing 3 . The preprocessing step involved Algorithm 1 Learning Deep Lambertian Networks downsizing the face images to the resolution of 24  X  24. Using equations of Sec. 3.2, we can infer one albedo im-age and one set of surface normals from each of the 28 subjects. These 28 training albedo and surface normal samples are insufficient for multilayer generative mod-els with millions of parameters. Therefore, we leverage a large set of the face images from the Toronto Face Database (TFD) (Susskind et al., 2011). The TFD is a collection of 100,000 face images from a variety of other datasets. To create more training data for the surface normals, we randomly translated all 28 sets of them by  X  2 pixels.
 The DLN used 2 layer DBNs (instead of single layer GRBMs) to model the priors over a and N . The albedo DBN had 800 h 1 nodes and 200 h 2 nodes. The normals DBN had 1000 g 1 nodes and 100 g 2 nodes. To see what the DLN X  X  prior on the albedo looks like, we show samples generated by the albedo DBN in Fig. 4. Learning the multi-modal albedo prior is made possi-ble by the use of unsupervised TFD data. 4.1. Inference After learning, we investigated the inference process in the DLN. Although the DLN can use multiple images of the same object during inference, it is important to investigate how well it performs with a single test im-age. We are also interested in the number of iterations that sampling would take to find the posterior modes. In our first experiment, we presented the model with a single Yale B face image from a held-out test subject, as shown in Fig. 5. The light source illuminates the subject from the bottom right, causing a significant shadow across the top left of the subject X  X  face. Since the albedo captures a lighting invariant representation of the face, correct posterior distribution should auto-matically perform illumination normalization. Using the algorithm described in Sec. 3.2, we clamp the visi-ble nodes to the test face image and sample from the 4 conditionals in an alternating fashion. HMC was used to sample from N . In total, we perform 50 iterations of alternating Gibbs sampling. During each iteration, the N variables are sampled using HMC with 20 leap-frog iterations and 10 HMC epochs. The step size was set to 0.01 with a momentum of 2.0. The acceptance rate was around 0.7.
 We plot the intermediate samples from iterations 1 to 50 in Fig. 5. The top row displays the inferred albedo a . At every pixel, there is a surface normal vector n i  X  R 3 . For visual presentation, we treat each n as a RGB pixel and plot them as color images in the bottom row. Note that the Gibbs chain quickly jumps (at iteration 5) into the correct mode. Good results are obtained due to the knowledge transfer of the albedo and surface normals learned from other subjects. We next randomly selected single test images from the 10 Yale B test subjects. Using exactly the same sam-pling algorithm, Fig. 6(a) shows their inferred albedo and surface normals. The first column displays the test image, the middle and right columns contain the estimated albedo and surface normals. We also found that using two test images per subject improves per-formance. Specifically, we sampled from p ( a , N | V  X  R displayed in Fig. 6(b). 4.2. Relighting The task of face relighting is useful to demonstrate strong generalization capabilities of the model. The goal is to generate face images of a particular person under never-before seen lighting conditions. Realistic images can only be generated if the albedo and sur-face normals of that particular person were correctly inferred. We first sample the lighting variable ` from its Gaussian prior defined by {  X  ,  X  } . Conditioned on the inferred a and N (see Fig. 6(b)), we use Eq. 5 to draw samples of v . Fig. 6(c) shows relighted face images of held-out test subjects. 4.3. Recognition We next test the performance of DLN at the task of face recognition. For the 10 test subjects of Yale B, only image(s) from subset 1 (with 7 images) are used for training. Images from subsets 2-4 are used for test-ing. In order to use DLN for recognition, we first in-fer the albedo ( a i ) and surface normals ( n i ) condi-tioned on the provided training image(s) of test sub-jects. For every subject, a 3 dimensional linear sub-space is spanned by the inferred albedo and surface normals. In particular, we consider the matrix M of dimensions N v  X  3, with the i -th row set to m i = a i n The columns of M spans the 3 dimensional linear sub-space. Test images of the test subjects are compared to all 10 subspaces and are labeled according to the label of its nearest subspace.
 Fig. 7 plots the recognition errors as a function of num-ber of training images used. DBN results are obtained by training a 2 layer DBN directly on the training im-ages, and a linear SVM was trained on the top-most hidden activations of the DBN. That standard DBN can not handle lighting variations very accurately. An-other approach, called Normalized Correlation, first normalizes images to unit norm. For each test image, its cosine similarity to all training images is computed. The test image takes on the label of the closest training image. Normalized Correlation performs significantly better than Nearest Neighbor due to its normalization, which removes some of the lighting variations. Finally, the SVD method finds a 3 dimensional linear subspace (with the largest singular values) spanned by the train-ing images of each of the test subjects. A test image is assigned to the closest subspace.
 We note that for the important task of one-shot recog-nition, DLN significantly outperforms many other methods. In the computer vision literature, Zhang &amp; Samaras (2006); Wang et al. (2009) report lower er-ror rates on the Yale B dataset. However, their algo-rithms make use of pre-existing 3D morphable models, whereas the DLN learns the 3D information automat-ically from 2D images. 4.4. Generic Objects The DLN is applicable not only on face images but also images of generic objects. We used 50 ob-jects from the Amsterdam Library of Images (ALOI) database (Geusebroek et al., 2005). For every object, 15 images of varying lighting were divided into 10 for training and 5 for testing. Using the provided masks for each object, images are cropped and rescaled to the resolution of 48  X  48. We used a DLN with N h = 1000 and N g = 1500. A 500 h 2 layer and 500 g 2 layer were also added. After training, we performed posterior in-ference using one of the held-out image. Fig. 8 shows results. The top row contains test images, the middle row displays the inferred albedo images after 50 alter-nating Gibbs iterations, and the bottom row shows the inferred surface normals. We have introduced a generative model with meaning-ful latent variables and multiplicative interactions sim-ulating the Lambertian Reflectance model. We have shown that by learning priors on these illumination-invariant variables directly from data, we can improve on one-shot recognition tasks as well as generate im-ages under novel illuminations.

