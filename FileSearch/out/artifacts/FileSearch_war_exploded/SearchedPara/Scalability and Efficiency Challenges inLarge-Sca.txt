 Large-scale web search engines rely on massive compute in-frastructures to be able to cope with the continuous growth of the Web and their user bases. In such search engines, achieving scalability and efficiency requires making careful architectural design choices while devising algorithmic per-formance optimizations. Unfortunately, most details about the internal functioning of commercial web search engines remain undisclosed due to their financial value and the high level of competition in the search market. The main ob-jective of this tutorial is to provide an overview of the fun-damental scalability and efficiency challenges in commercial web search engines, bridging the existing gap between the industry and academia.
 H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval Web search engines; crawling; indexing; query processing; efficiency; scalability
Commercial web search engines need to process thou-sands of queries every second and provide responses to user queries within a few hundred milliseconds. As a consequence of these tight performance constraints, search engines con-struct and maintain very large compute infrastructures for crawling the Web, indexing discovered pages, and processing user queries. Achieving scalability and efficiency requires making careful performance optimizations in every major component of the search engine.

This tutorial aims to provide a fairly comprehensive overview of the scalability and efficiency challenges in large-scale web search engines. In particular, the tutorial provides an in-depth architectural overview of a web search engine,
 Commercial web search engines need to process thousands of queries every second and provide responses to user queries within a few hundred milliseconds. As a consequence of these tight performance constraints, search engines con-struct and maintain very large computing infrastructures for crawling the Web, indexing discovered pages, and pro-cessing user queries. The scalability and efficiency of these infrastructures require careful performance optimizations in every major component of the search engine.

This tutorial aims to provide a fairly comprehensive overview of the scalability and efficiency challenges in large-scale web search engines. In particular, the tutorial provides an in-depth architectural overview of a web search engine, mainly focusing on the web crawling, indexing, and query processing components. The scalability and efficiency issues encountered in these components are presented at four differ-ent granularities: at the level of a single computer, a cluster of computers, a single data center, and a multi-center search engine. The tutorial also points out some open research problems and provides recommendations to researchers who are new to the field.
 Web search engines; crawling; indexing; query processing; efficiency; scalability
The tutorial has four sections. The first section provides the main concepts. Each of the remaining sections covers a particular architectural component of a web search engine.
In this section, we provide the necessary background for the following sections. First, we explain the main challenges posed by the Web and its characteristics. Second, we present the main components of a search engine and possible soft-ware/hardware architectures. Finally, we summarize the in-teractions among the three main components: crawler, in-dexer, and query processor.
The web crawler is responsible for discovering new web pages and downloading their content while refreshing the content of previously downloaded pages [42]. The main per-formance objective for a web crawler is to achieve high page download rates. The efficiency of a sequential crawler is mainly determined by the selection and implementation of proper data structures [36]. Scalability is achieved through multi-threading [30] and parallelization [23]. In addition to such techniques, our tutorial covers the URL reordering [46] and web repository refreshing [43] problems.
The indexing process involves various parsing, extraction, and classification tasks, through which certain features are extracted and the textual content of downloaded pages are converted into an inverted index [51]. The main perfor-mance metrics for an indexer are the length of deployment cycles, compactness, and the speed of index updates. So far, most algorithmic improvements are concentrated on in-dex compression [44], duplicate detection [29], and docu-ment reordering [12, 47]. At the architectural level, the ef-ficiency and scalability are improved via online index con-struction [38], index partitioning [20], and static index prun-ing [2, 41]. Our tutorial also covers the indexing strategies for geographically distributed web search engines [33].
Query processing involves generating the set of best-matching results for a given user query [9]. The success of a query processor is mainly assessed by its throughput and average response latency. A large body of research work on relevance ranking assume relatively standard processing techniques using an inverted index while large-scale search engines rely on more sophisticated techniques. In addition to the state-of-the-art ranking techniques employed in web search engines, our tutorial covers a variety of problems in-cluding query processing on multi-core architectures [48], pipelined query processing [31], response latency predic-tion [40], selective search [35], query forwarding [21, 49], query scheduling [26], power/energy cost efficiency [27, 34], multi-site web search [7, 25], and green search engines [13]. We also briefly present learning-to-rank optimizations in web search [22, 39, 50] and discuss the impact of efficiency im-provements on user engagement [3, 4, 11].
This section also covers caching in web search engines [6, 24]. The idea behind caching is to speed up query response times by storing precomputed query results, also reduc-ing the computational workload of backend search systems. Caching happens at different architectural layers in a web search engine [45]. The tutorial covers common challenges in caching, such as admission [8], eviction [28], and prefetch-ing [37]. It also focuses on the freshness problem, which attracted much research attention [1, 10, 12, 19, 32].
The following are the main objectives of the tutorial.
The initial structure of this tutorial series is based on a book chapter published by the presenters [14]. Earlier versions of the tutorial were presented in SIGIR X 13 [15], WWW X 14 [5], SIGIR X 14 [16], WSDM X 15 [17], and CIKM X 15. The tutorial was also given in three different summer schools: the 2nd COST 804 Training School on Energy Effi-ciency in Large Scale Distributed Systems, the 3rd MUMIA Training School on Information Retrieval and Interactive In-formation Access, and more recently, the 10th European Summer School in Information Retrieval. The presenters have also published a short book whose structure and con-tent is based on these tutorials [18].
Efficiency has been one of the main research topics in the previous editions of the SIGIR conference. The topics cov-ered in this tutorial have a fairly high overlap with those encountered in the efficiency-related paper sessions in SI-GIR. As a supporting fact, the presenters of the tutorial co-authored a large number of papers in recent years X  effi-ciency sessions. A subset of the topics covered in the tutorial are taken from the papers presented in the efficiency sessions of related conferences, such as WSDM and WWW.

Since the tutorial was already presented in SIGIR before, this edition of the tutorial aims to come with a major con-tent update. Unlike the previous editions, which all targeted intermediate audiences, this edition targets an advanced au-dience. Therefore, the introductory sections of the tutorial are compressed, making space for relatively new and more technical material. We aim to go into more depth in se-lected topics in the context of web search efficiency, such as machine-learned ranking systems, user impact of efficiency optimizations, and energy-efficient and green web search engines. Although the attendees are expected to have a solid understanding of fundamental concepts related to web search, parts of the presented material should be easy to follow by beginner and intermediate audiences as well. Berkant Barla Cambazoglu received his B.S., M.S., and Ph.D. degrees, all in computer engineering, from the Computer Engineering Department of Bilkent University in 1997, 2000, and 2006, respectively. After getting his Ph.D. degree, he worked as a postdoctoral researcher in Bilkent University for a short period of time. In 2006, he joined the Biomedical Informatics Department of the Ohio State University as a postdoctoral researcher. In 2008, he joined Yahoo Labs as a postdoctoral researcher. He received research scientist and senior research scientist positions at the same institution, in 2010 and 2012, respectively. Between 2013 and 2015, he was a senior manager, heading the web retrieval group in Yahoo Labs Barcelona. His main research interests are distributed information retrieval and web search efficiency. In 2010, 2011, 2014, and 2015, he co-organized the LSDS-IR workshop. He was the proceedings chair for WSDM X 09 and the poster and proceedings chairs for ECIR X 12. He served as an area chair in SIGIR X 13 and SIGIR X 14. He regularly serves on the program committees of SIGIR, WWW, and KDD conferences. He is a member of the editorial board of IP&amp;M. He has many papers published in prestigious journals including IEEE TPDS, JPDC, JASIST, Inf. Syst., ACM TWEB, and IP&amp;M, as well as papers and tutorials presented at top-tier con-ferences, such as SIGIR, CIKM, WSDM, WWW, and KDD. Ricardo Baeza-Yates  X  areas of expertise are infor-mation retrieval, web search and data mining, data science and algorithms. He was VP of Research at Yahoo Labs, based in Sunnyvale, California, from August 2014 to Febru-ary 2016. Before he founded and led from 2006 to 2015 the Yahoo labs in Barcelona and Santiago de Chile. Between 2008 and 2012 he also oversaw the Haifa lab, and started the London lab in 2012. He is part time Professor at the Dept. of Information and Communication Technologies (DTIC) of the Universitat Pompeu Fabra (UPF), in Barcelona, Spain, as well as in the Dept. of Computing Science (DCC) of Universidad de Chile at Santiago. During 2005 he was an ICREA research professor at UPF. Until 2004 he was Professor and founding director of the Center for Web Research at Universidad de Chile. He obtained a Ph.D. in CS from the University of Waterloo, Canada, in 1989. Before he obtained two masters (M.Sc. CS &amp; M.Eng. EE) and the electronics engineer degree from the University of Chile in Santiago. He is co-author of the best-seller Modern Information Retrieval textbook, published in 1999 by Addison-Wesley with a second enlarged edition in 2011, which won the ASIST 2012 Book of the Year award. He is also co-author of the 2nd edition of the Handbook of Algorithms and Data Structures, Addison-Wesley, 1991; and co-editor of Information Retrieval: Algorithms and Data Structures, Prentice-Hall, 1992, among more than 500 other publications. From 2002 to 2004 he was elected to the board of governors of the IEEE Computer Society and in 2012 he was elected for the ACM Council. He has received the Organization of American States award for young researchers in exact sciences (1993), the Graham Medal for innovation in computing given by the University of Waterloo to distinguished ex-alumni (2007), the CLEI Latin American distinction for contributions to CS in the region (2009), and the National Award of the Chilean Association of Engineers (2010), among other distinctions. In 2003 he was the first computer scientist to be elected to the Chilean Academy of Sciences and since 2010 is a founding member of the Chilean Academy of Engineering. In 2009 he was named ACM Fellow and in 2011 IEEE Fellow. [1] S. Alici, I. S. Altingovde, R. Ozcan, B. B.
 [2] I. S. Altingovde, R. Ozcan, and O. Ulusoy. Static [3] I. Arapakis, X. Bai, and B. B. Cambazoglu. Impact of [4] L. Azzopardi, D. Kelly, and K. Brennan. How query [5] R. Baeza-Yates and B. B. Cambazoglu. Scalability and [6] R. Baeza-Yates, A. Gionis, F. Junqueira, V. Murdock, [7] R. Baeza-Yates, A. Gionis, F. Junqueira, [8] R. Baeza-Yates, F. Junqueira, V. Plachouras, and [9] R. Baeza-Yates and B. Ribeiro-Neto. Modern [10] X. Bai and F. P. Junqueira. Online result cache [11] M. Barreda- X  Angeles, I. Arapakis, X. Bai, B. B. [12] R. Blanco, E. Bortnikov, F. Junqueira, R. Lempel, L. Telloli, and H. Zaragoza. Caching search engine results over incremental indices. In Proceedings of the 33rd International ACM SIGIR Conference on Research and Development in Information Retrieval , pages 82 X 89, 2010. [13] R. Blanco, M. Catena, and N. Tonellotto. Exploiting green energy to reduce the operational costs of multi-center web search engines. In Proceedings of the 25th International Conference on World Wide Web , pages 1237 X 1247, 2016. [14] B. B. Cambazoglu and R. Baeza-Yates. Scalability challenges in web search engines. In Advanced Topics in Information Retrieval , volume 33 of The Information Retrieval Series , pages 27 X 50. Springer Berlin Heidelberg, 2011. [15] B. B. Cambazoglu and R. Baeza-Yates. Scalability and efficiency challenges in commercial web search engines. In Proceedings of the 36th International ACM SIGIR Conference on Research and Development in Information Retrieval , page 1124, 2013. [16] B. B. Cambazoglu and R. Baeza-Yates. Scalability and efficiency challenges in large-scale web search engines. In Proceedings of the 37th International ACM SIGIR Conference on Research and Development in Information Retrieval , page 1285, 2014. [17] B. B. Cambazoglu and R. Baeza-Yates. Scalability and efficiency challenges in large-scale web search engines. In Proceedings of the 8th ACM International Conference on Web Search and Data Mining , pages 411 X 412, 2015. [18] B. B. Cambazoglu and R. A. Baeza-Yates. Scalability Challenges in Web Search Engines . Synthesis Lectures on Information Concepts, Retrieval, and Services.
 Morgan &amp; Claypool Publishers, 2015. [19] B. B. Cambazoglu, F. P. Junqueira, V. Plachouras, S. Banachowski, B. Cui, S. Lim, and B. Bridge. A refreshing perspective of search engine caching. In Proceedings of the 19th International Conference on World Wide Web , pages 181 X 190, 2010. [20] B. B. Cambazoglu, E. Kayaaslan, S. Jonassen, and C. Aykanat. A term-based inverted index partitioning model for efficient distributed query processing. ACM Transactions on the Web , 7(3):15:1 X 15:23, 2013. [21] B. B. Cambazoglu, E. Varol, E. Kayaaslan, C. Aykanat, and R. Baeza-Yates. Query forwarding in geographically distributed search engines. In Proceeding of the 33rd International ACM SIGIR Conference on Research and Development in Information Retrieval , pages 90 X 97, 2010. [22] B. B. Cambazoglu, H. Zaragoza, O. Chapelle, J. Chen, C. Liao, Z. Zheng, and J. Degenhardt. Early exit optimizations for additive machine learned ranking systems. In Proceedings of the 3rd ACM International Conference on Web Search and Data Mining , pages 411 X 420, 2010. [23] J. Cho and H. Garcia-Molina. Parallel crawlers. In Proceedings of the 11th International Conference on World Wide Web , pages 124 X 135, 2002. [24] T. Fagni, R. Perego, F. Silvestri, and S. Orlando. Boosting the performance of web search engines: Caching and prefetching query results by exploiting [25] G. Franc`es, X. Bai, B. B. Cambazoglu, and [26] A. Freire, C. Macdonald, N. Tonellotto, I. Ounis, and [27] A. Freire, C. Macdonald, N. Tonellotto, I. Ounis, and [28] Q. Gan and T. Suel. Improved techniques for result [29] M. Henzinger. Finding near-duplicate web pages: a [30] A. Heydon and M. Najork. Mercator: a scalable, [31] S. Jonassen and S. Bratsberg. A combined [32] S. Jonassen, B. B. Cambazoglu, and F. Silvestri. [33] E. Kayaaslan, B. B. Cambazoglu, and C. Aykanat. [34] E. Kayaaslan, B. B. Cambazoglu, R. Blanco, F. P. [35] A. Kulkarni and J. Callan. Selective search: Efficient [36] H.-T. Lee, D. Leonard, X. Wang, and D. Loguinov. [37] R. Lempel and S. Moran. Predictive caching and [38] N. Lester, A. Moffat, and J. Zobel. Efficient online index construction for text databases. ACM Transactions on Database Systems , 33(3):1 X 33, 2008. [39] C. Lucchese, F. M. Nardini, S. Orlando, R. Perego, N. Tonellotto, and R. Venturini. Quickscorer: A fast algorithm to rank documents with additive ensembles of regression trees. In Proceedings of the 38th International ACM SIGIR Conference on Research and Development in Information Retrieval , pages 73 X 82, 2015. [40] C. Macdonald, N. Tonellotto, and I. Ounis. Learning to predict response times for online query scheduling. In Proceedings of the 35th International ACM SIGIR Conference on Research and Development in Information Retrieval , pages 621 X 630, 2012. [41] A. Ntoulas and J. Cho. Pruning policies for two-tiered inverted index with correctness guarantee. In Proceedings of the 30th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval , pages 191 X 198, 2007. [42] C. Olston and M. Najork. Web crawling. Foundations and Trends in Information Retrieval , 4(3):175 X 246, 2010. [43] C. Olston and S. Pandey. Recrawl scheduling based on information longevity. In Proceedings of the 17th International Conference on World Wide Web , pages 437 X 446, 2008. [44] G. Ottaviano and R. Venturini. Partitioned elias-fano indexes. In Proceedings of the 37th International ACM SIGIR Conference on Research and Development in Information Retrieval , pages 273 X 282, 2014. [45] R. Ozcan, I. S. Altingovde, B. B. Cambazoglu, F. P. Junqueira, and  X  Ozg  X  ur Ulusoy. A five-level static cache architecture for web search engines. Information Processing &amp; Management , 48(5):828 X 840, 2012. [46] S. Pandey and C. Olston. Crawl ordering by search impact. In Proceedings of the International Conference on Web Search and Data Mining , pages 3 X 14, 2008. [47] F. Silvestri, S. Orlando, and R. Perego. Assigning identifiers to documents to enhance the clustering property of fulltext indexes. In Proceedings of the 27th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval , pages 305 X 312, 2004. [48] S. Tatikonda, B. B. Cambazoglu, and F. P. Junqueira. Posting list intersection on multicore architectures. In Proceedings of the 34th International ACM SIGIR Conference on Research and Development in Information Retrieval , pages 963 X 972, 2011. [49] A. Teymorian, O. Frieder, and M. A. Maloof.
 Rank-energy selective query forwarding for distributed search systems. In Proceedings of the 22nd ACM International Conference on Information and Knowledge Management , pages 389 X 398, 2013. [50] L. Wang, J. Lin, and D. Metzler. Learning to efficiently rank. In Proceeding of the 33rd International ACM SIGIR Conference on Research and Development in Information Retrieval , pages 138 X 145, 2010. [51] J. Zobel and A. Moffat. Inverted files for text search engines. ACM Computing Surveys , 38(2), 2006.
