 Spatial clustering technologies are widely used in geography-related analysis to identify significant areas for business d ecision making, especially in advanced analysis based on Geographic Information Systems (GIS). Beyond those tradi-tional spatial clustering problems of only considering object positions [1, 2, 5, 7], many extended algorithms [4,9] have been proposed to deal with the non-spatial attributes. Meanwhile, several algorithms [3, 6, 10] were improved in order to handle the clustering problem in the presence of obstacles, which can be a kind of geographic constraint.

In many applications, clustering methods are utilized to discover the geo-graphic areas containing spatial points. We often have to face one kind of geo-graphic constraint: the discovered geographic areas should not be overlapped and each area should be connected. If an are a is not connected, it must be truncated by other areas. This case also can be treated as that this joint area is overlapped with other areas. (In the following paragraphs, we will not mention that an area should be connected.) For example, Given the household distribution with their income in a district, the task is to partition the area into two sub areas: one mainly contains low income people and the other contains high income people, so that each sub area can take different policies. In this case, it requires that the two sub areas should not be overlapped. If else, the mutual area will not be clear to make decision.

Many approaches have been proposed for the spatial clustering problem with non-spatial attributes, but they may not keep the geographic non-overlapping constraint. In [4], the approach applies CLARANS to spatial attributes and DBLEARN to non-spatial attributes separately. In [9], DBRS is designed to handle non-spatial attributes. Beyond using  X  X ensity X  for spatial attributes, it introduces  X  X urity X  and  X  X urity-density-reachable X  for non-spatial attributes. The mechanism that DBRS handles non-spatial attributes can be interpreted as a two-step process. At the first step, it splits the whole data set into several groups by their non-spatial attributes, and each group corresponds one value of non-spatial attribute. At the second step, it processes each group by normal DBRS approaches without non-spatial attribute and obtains final clusters. The difference in this step is that the new density (the density of data points with same non-spatial attributes) threshold is dynamically decided by local density (the density of all data points). Both above methods can be treated as two-step approaches, which process the non-spatial attributes in non-spatial attributes domain and spatial attributes in spatial attributes domain. The processing in non-spatial attributes domain can not consider the geographic constraints which should be reflected in spatial domain. Thus, the above approaches may obtain overlapped cluster areas. Another direct clustering method is to consider non-spatial attributes as extra dimensions of data points, and leverage a general multi-dimension clustering algorithm (using Euclid or other common distance measures). It treats the spatial attributes and non-spatial attributes homoge-nously, and brings the similar problem that the data points may be dominant in non-spatial attribute domain and loses geographic constraint in spatial domain.
In this paper, a new spatial distance measure is proposed to work with com-mon spatial clustering algorithms (e.g. CLARANS) to solve the above geo-spatial clustering problem with non-spatial attributes and geographic non-overlapping constraint. It properly adjusts (or penalizes) the distance of two spatial points by the differences of their non-spatial a ttributes, and it can be proved that this distance working with CLARANS can satisfy the non-overlapping constraint.
This paper is organized as follows. Section 2 illustrates the motivation and core idea of our approach. Section 3 describes the detailed implementation of our dis-tance measure. In section 4, the distance measure is embedded with CLARANS to deal with both testing data sets and real banking data. The final section 5 concludes our work. Pure spatial clustering approaches (without non-spatial attributes) seldom ob-tain such overlapped clusters, where Euclid distance (ED) is usually used to measure the distances of spatial points, and ED obviously has the following character:  X  For every triple of points { a, b, c } on one line in spatial domain, if b is in If the above condition can be satisfied, the resultant clusters will not be over-lapped. As shown in Figure 1, a is the medoid of a cluster A .Since D ( a, b ) &lt; D ( a, c ), if c belongs to cluster A ,then b will be assigned to cluster A .Thus,the points in the middle of a and c will be in the same cluster of A ,so ac will not be truncated by other clusters. That is, cluster A will not be overlapped with other cluster in the direction ac . Because the condition is for every triple of points on one line, so A will not be overlapped in any direction.
 Considering the non-spatial attribute as the third dimension and using 3D Euclid distance, the above condition will not be kept if non-spatial attribute is dominant. As in Figure 2, a  X  ,b  X  ,c  X  are three spatial points on one line, and a, b, c are their non-spatial attribute values respectively. b  X  is in the middle of a c  X  , but the 3D-Euclid distances are D ( a, b ) &gt;D ( a, c ). Thus, b  X  may be in a different cluster from a  X  and c  X  . In geo-spatial plane, the cluster of a  X  and c  X  may be overlapped with the cluster of b  X  .

The feasible distance measure should both satisfy the above condition and reflect the effect of non-spatial attribut es. We present a new distance measure termed penalized spatial distance (PSD), which well adjusts the spatial distance between two points by the change of the non-spatial attribute values between them. If the non-spatial attribute values between two points change larger, the PSD will be penalized (increased) larger. If else, the distance will be penalized less. Our distance measure has the character: if a , b ,and c are on one line in spatial domain, and b is in the middle of ac ,then D PSD ( ac )= D PSD ( ab )+ D PSD ( bc ). Because D PSD ( bc ) &gt; 0, D PSD ( ac ) &gt;D PSD ( ab ) can be always kept. So that this distance measure can satisfy the above condition.
 Following the above idea, it is important to find the non-spatial attribute value series between two points. Since there is probably no point exactly on the line, a possible way is to construct the  X  X urface X  of non-spatial attribute values and extract the surface values on the line as the value series between the two points. Figure 3(b) is the constructed surface of 3(a), and curve ab is the series of non-spatial attribute values between spatial point a and b . The next task is to adjust the distance according to the non-spatial attribute value series. As the non-spatial attribute values in neighbor geographic area should not change too large because of the geographic continuity character, e.g. the income of people in a same area will not vary a lot, it is reasonable to construct this non-spatial value surface. The whole proces s consists of two steps below. 3.1 Construct Non-spatial Attribute Surface and Find Value Series Many elaborate surface approximation approaches can be leveraged to recon-struct surface from points. Since it does not mean to compute an exact surface, but only adjust the distance between two points by the changing of non-spatial attribute values, we here choose the commonly used kernel based interpolation approach.

The grid length L decides how well the surface matches the discrete points. It should be selected to make a majority of grids have points in them. L could be number of points that can be assigned in separate grids, and can be empirically selected around 0 . 2  X  0 . 3. d i indicates the minimum distance from one point P i to its k neighbor points. To be more resilient, it can be set as the mean distance from this point to its k nearest points.

The values of a part of mesh grids can be assigned directly as the mean values of the point values in th em. For each unassigned grid ( a, b ), its value is set according to its nearest assigned grids: S ( a, b )= K ( x,y ) ( a  X  x, a  X  y ), where K ( x,y ) is usually a RBF kernel, e.g. gaussian function. After the interpolation processing, a smoothing operation can be performed to reduce the noises.
Suppose the mesh surface is S (  X  ,  X  ). Two points a and b are in grid G a ( x a ,y a ) and G b ( x b ,y b ) separately. We should find the grids P ab on the direct path connecting G a and G b in 2D spatial plane. The value series of P ab is: V ab = {
S ( g i ) | g i  X  P ab } . In Figure 3(b), the series of black triangle points are V ab . 3.2 Adjust Spatial Distance by Value Series { point. Considering the i -th value and the ( i + 1)-th value, if the difference be-be penalized more. If else, the distance will be penalized less. By starting from the first value in V ab and processing each value one by one, the total PSD can be formulated in Equation 1.
 where, k d is a control factor, which describes how much the non-spatial attribute values influence the distance. Larger k d will make larger effect of penalty. As g i +1 and g i are neighbors, D geo ( g i +1 ,g i )maybe1  X  L or p ( s i +1 ,s i ) depends on s i +1 and s i by Equation 2. = where, T is the maximum difference between the values of arbitrary two neighbor grids. The function  X  (  X  ) is define as Fig. 4. As T is the maximum difference value, so the input range of  X  is [  X  1 , 1]. It is noted that  X  (  X  1) is less than  X  (1), which ensures that the PSD value of changing backward is less than that of changing forward. It is obvious that PSD is symmetrical according to Equation 1 and 2.
The above description can be directly extended to multiple non-spatial at-tributes. A surface should be constructed for each attribute. The spatial distance is adjusted by the total change of every non-spatial attribute. Suppose there are Q non-attributes and k q is the weight for p -th non-attribute, Equation 1 can be extended as Equation 3.
 In our experiments, the penalized spatial distance is embedded in CLARANS [2] to deal with the clustering of points with non-spatial attributes. We first compare the the penalized spatial distance with Euclid distance by an artificial data set, then we show the result of PSD based clustering in a real banking analysis case. 4.1 Penalized Spatial Distance vs. Euclid Distance Three distance measures are compared in this test: 1. PSD : CLARANS with PSD. 2. Euclid 2: Only spatial attributes (x and y) are considered regardless of non-3. Euclid 3: Spatial attributes and non-spatial attribute are treated homoge-50 data sets are automatically generated, and each of them contains 500 points. The spatial positions of them are selected in a 1  X  1 square following uniform distribu-tion. The non-spatial values are generated from three gaussian functions with their random center points c i ,i =1 , 2 , 3. Each point v j can be assigned with three val-ues from the three kernel functions by s ( v where  X  i is randomly generated in [0 . 1 , 0 . 3]. The non-spatial value of this point v j is the maximum one in { s ( v the cluster number k , the maximum number of neighbors examined and the num-ber of local minima obtained are set as 3, 300, 150 respectively. According to the generation of non-spatial values, points can be assigned into three clusters (corre-sponding to the three kernels), which are considered as the reference clusters. The number of the mis-clustered points (denoted as E ) is used to evaluate the clustering results. Smaller mis-clusterd point number means better clustering result. We can see PSD performs better than Eulid 2and Euclid 3inFigure5. Euclid 3 almost can not obtain well clustering results as the dominant non-spatial attributes. In theory, 2-dimension Euclid distance results can not reflect non-spatial attribute distribu-tion. In some test cases, e.g. the 7th, 15th, and 47th test samples, Euclid 2 works as well as PSD. The reason is that the non-spatial attribute distribution luckily meets the spatial distribution of points. 4.2 A Real Banking Analysis Case In banking market study, it is often required to identify the areas with similar attributes to help further business analysis. Fig.6(a) shows the residential points in Baton Rouge, Louisiana, USA . It contains about 2000 residential points with their population numbers, which are represented by gradual colors, where red color means high population. The task is to discover the areas which have similar population number. Assuming there are 10 clusters, we use CLARANS to cluster the points. Fig.6(b) and 6(c) show the clustering results by PSD and Euclid 2.
The significant advantage is that PSD clustering can reflect a certain nat-ural or geographic features. We select five significant differences between two clustering results, labeled by A to E. In Fig.6(b), Cluster A, B, C are properly separated by highway 110 . A and D are divided by a long straight driveway named Foster . While in the result by Euclid distance (Fig.6(c)), those features can not be exhibited. The cluster C in PSD result has a salient in its right part. In the map Figure 6(a), it is found that this salient area is extended from its left aggregated part (the major part of C) by several horizontal roads and streets, such as Claycut ,and Goodwood . While the cluster C in Euclid result has not such characters. The upper boundary of Cluster E by PSD is actually formed by highway 190 , while Euclid distance can not character this. 4.3 Complexity The complexity mainly depends on the clustering algorithm incorporated with PSD and the size of non-spatial attribute surface. As surface construction runs only one time, its time cost is not so consuming if we select the given interpolation algorithm or other efficient ones. If there are m grids from point a to b , PSD ab can be finished in m iterations. Suppose the surface size is S , which mainly depends on the spatial distribution of points, and there are totally N points. The average  X  X rid distance X  of each pair of points is approximately 2 S/N . If we use the same clustering algorithm with both PSD and Euclid, the complexity of PSD is approximately C = 2 S/N times of that of Euclid. In our experiments, S =80  X  80 = 6400, N = 500, so PSD X  X  theoretically costs C = 2 S/N =5 . 06 times of Euclid. Actually, the PSD CLARANS averagely cost 5 . 3 times of Euclid CLARANS in the experiments. In this paper, we present the geographic non-overlapping constraint which may commonly exist in real geography-related analysis works. Many existing cluster-ing approaches with non-spatial attributes may not guarantee this requirement. It is also discussed that why this constraint can not be kept when non-spatial attributes exist, and we present the condition which can assure a distance mea-sure to obtain the non-overlapping cluster areas. Then, a new spatial distance measure (PSD) is proposed and proofed to satisfy the condition. PSD adjusts the spatial distance by all non-spatial attribute values between the two points, and it can reflect the changing process of non-spatial attribute values from one point to another. PSD can be incorporated with CLARANS or other spatial clustering algorithm to solve knowledge discovery tasks. In the experiments, it performs better on artificial data sets and discovers the knowledge which meets the actual geographical characters in the real banking analysis case.

