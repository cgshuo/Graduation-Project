 Quer y re w r i t in gus in g vi e w s [1][ 8 ] am o u n ts t o rep l ac in gtab l es in aquer y us in g
In quer yo pt i m i zat ion us in gmater i a li zed vi e w s [1][11], the re w r i t in gsh o u l d be equ iv a l e n t , but no trequ i red t o be c o mp l ete ,i. e ., i tca n use e i ther base tab l es o r vi e w s .W h il e in data in tegrat ion [ 8 ][10] a n d o ther app li cat ion s such as quer y m i grat ion [ 7 ][9], the re w r i t in gmustbec o mp l ete ,i. e ., i tca n refer t ovi e w s only s in ce i tca nno t access database tab l es d i rect ly. In th i scase , equ iv a l e n tre w r i t in g d o es no ta lw a y se xi st w he n there i sa nin suffic i e n t n umber o f vi e w s .Ino rder t oo bta in the best re w r i t in gresu l tu n der th i sc on stra in t , ma xi ma lly-c on ta in ed re w r i t in g i s n eeded .

In ma xi ma lly c on ta in ed quer y re w r i t in ga l g o r i thms [ 8 ], the o utput i sau nion o fa ll o fc on ta in ed re w r i t in gs that ca n be f o u n d ,i. e ., the ma xi ma lly c on ta in ed re w r i t in g Q M i s Q 1  X  Q 2  X  ...  X  Q n ,w here Q i , 1  X  i  X  n, i sac onj u n ct iv ec on-equ iv a l e n tt o quer y Q . Ob vio us ly, a n s w er in g Q us in g Q i will be much m o re ef -fic i e n ttha n us in g Q M .Sin ce Q i i sa l read y equ iv a l e n tt o Q , there i s no n eed t o e v a l uate a ll o ther c on ta in ed re w r i t in gs in Q 1 ,...,Q n .

How e v er , e xi st in ga l g o r i thms will in c l ude a ll o fthec on ta in ed c onj u n ct iv e quer i es in t o the resu l t , thereb y re n der in gthee v a l uat ion o fthere w r i t in g in-effic i e n t .T he pr o b l em i se x acerbated i fthequer yo rthe vi e w set i s l arge ,w h i ch will resu l t in a l arge n umber o fc on ta in ed re w r i t in gs .

An a iv e appr o ach t o e li m in at in g the dup li cate c onj u n ct iv ere w r i t in gs i st o re w r i t in gs ma y be ge n erated b y the same vi e w.

W epr o p o se a T a il C on ta in me n t M app in g ( hereafter T C M) re w r i t in ga l g o-r i thm w h i ch e x pa n ds the i dea in bucket a l g o r i thm [ 8 ]. I tpr o duces c o mp l ete a n d T C M bucket a l g o r i thm rem ov es in appr o pr i ate vi e w s w h il ef o rm in g the buckets , s o that each pr o duced re w r i t in g in the e n d i saut o mat i ca lly aCEre w r i t in g wi th o ut e x tra c on ta in me n tcheck in g . Our e x per i me n tsh ow sthat o ur a l g o r i thm i s much faster tha n the n a iv e appr o ach that rem ov es redu n da n tre w r i t in gs af -ter w ards .T he data in the e x per i me n tc on ta in shu n dreds o fre l at ion s ,vi e w s , a n d quer i es that are c oll ected fr o ma n e -c o mme n ce app li cat ion [ 7 ]. A re w r i t in g o faquer y us in g vi e w s i saquer y that refers s o me vi e w sa n d /o r database tab l es . G iv e n aquer y Q a n daset o f vi e w s Vs ov er the same database schema .A quer y Q i sare w r i t in g o f Q us in g Vs ,i f Q refers t oon e o rm o re vi e w s in Vs .Mo re spec i fica lly, Q i sac on ta in ed re w r i t in g o fQ ,i f Q  X  Q ; Q i sa n equ iv a l e n tre w r i t in g o fQ ,i f Q  X  Q a n d Q  X  Q ; Q i sama xi ma lly-c on ta in ed re w r i t in g o f Q i f Q  X  Q , a n df o ra ny c on ta in ed re w r i t in g Q  X  X  f Q , Q  X   X  Q ; Q i sac o mp l ete re w r i t in g i f Q refers t ovi e w s only. 2.1 Expanding Maximally Contained Rewriting Algorithms Bucket algorithm. C o mp l ete re w r i t in ga l g o r i thms such as bucket a l g o r i thm [ 8 ] ca n fi n dma xi ma lly c on ta in ed re w r i t in gs ,w h i ch i mp li es that i fthereareequ iv-a l e n tre w r i t in gs , these a l g o r i thms ca n fi n dthem .T he only pr o b l em i s that these a l g o r i thms d ono tge n erate a s in g l ec onj u n ct iv equer y as the resu l t ;in stead ,i t pr o duces a u nion o fa ll c on ta in ed c onj u n ct iv equer i es .

T he bucket a l g o r i thm pr o ceeds in t wo stages .Fi rst ,i tc on structs a bucket f o r each subg o a lo fthequer y. T he subg o a li sca ll ed the own er o fthec o rresp on d in g bucket .Avi e w V i s added t o the bucket i f on e o f the subg o a l s o f V matches the own er subg o a l. I ftherearemu l t i p l e subg o a lo f V match in gthe own er subg o a l o f a bucket ,vi e w V i s added t o the bucket mu l t i p l et i mes .
 Example 1. Given a query and four views as below : The buckets of subgoals A ( x, y ) , A ( y, z ) ,and B ( z, r ) are: W he n a vi e wi s put in t o the bucket , the d i st in gu i shed v ar i ab l es o fthe vi e w are re n amed .All the d i st in gu i shed v ar i ab l es se l ected fr o mthe vi e w subg o a l that matches the own er subg o a lo f the bucket are re n amed t o the c o rresp on d in gquer y v ar i ab l es ) s o that the y are no tthesameas o ther v ar i ab l es .

In the sec on d stage , the a l g o r i thm perf o rms Cartes i a n pr o ducts bet w ee nvi e w s in a ll the buckets .Fo reachc o mb in at ion o f vi e w s , create a ca n d i date re w r i t in gb y joinin gthemt o gether .T he n c on ta in me n tcheck in g i sapp li ed on each ca n d i date re w r i t in g aga in st the quer y, t o make sure i t i s in deed c on ta in ed in the o r i g in a l quer y. B ased on the buckets in E x amp l e 1, there are 27 c on ta in ed re w r i t in gs ge n erated in the c o mb in at ion stage .To sa v espace ,w e only li st s o me o fthem be low: A naive approach to expanding the bucket algorithm. An a iv e appr o ach o fe x pa n d in g the bucket a l g o r i thm f o rCEre w r i t in gs i st o rem ov epr o per ly c on-ta in ed c onj u n ct iv equer i es fr o mthere w r i t in gs o f bucket a l g o r i thm .Fo reach c on ta in ed re w r i t in g w eca n c on duct the c on ta in me n tcheck in g wi th Q .I fthec on-t o Q , a n d will be e li m in ated .A m on gthe27c on ta in ed re w r i t in gs in E x amp l e 1, 2 5 re w r i t in gs n eed t o be rem ov ed , a n dtheCEre w r i t in gs are : In ge n era l, there ma y be a l arge n umber o fc on ta in ed re w r i t in gs that n eed t o be rem ov ed w he n the s i zes o fthequer y a n d vi e w set are l arge .So me o fthe pr o duced re w r i t in gs are e li m in ated due t o thesamereas on. In E x amp l e 1, a ll c on ta in ed re w r i t in gs that refer V 3 o r V 4 are e li m in ated in the e n d .H e n ce ,i f w e ca n rem ov e V 3 a n d V 4 bef o re ge n erat in gthere w r i t in gs , the a l g o r i thm will be much m o re effic i e n t .

A c lo ser in spect ion on the e x amp l ere v ea l s that there are at l east three cases w he n a vi e w sh o u l d no tbeused in CE re w r i t in g . O n e i s w he n the vi e w c on ta in s a n e x tra tab l e .Fo re x amp l e , V 4 in tr o duces a subg o a l C ( r, w ) that ca nno tbe mapped t o a ny subg o a lin Q .H e n ce V 4 ca nno tbe in c l uded in the bucket .Ano ther case i s w he n a vi e win tr o duces e x tra c on stra in ts on v ar i ab l es .Fo re x amp l e ,in V 3 there i sa no ther join c on d i t ion on the first attr i bute o f A a n dthesec on d attr i bute o f B .In th i scase ,in the e x pa n s ion o fthere w r i t in gs that refer V 3 , such as Q 5  X , the t wo subg o a l s A a n d B fr o m V 3 will no tbeab l et o be mapped t o a ny subg o a lin Q .A th i rd case i sthat V 1 ca nno tbeused in the bucket A ( x, y ), e v e n th o ugh i tca n be used in a no ther bucket A ( y, z )in thesamequer y. T h i s will be e x p l a in ed further in S ect ion 3. 2 .

B ased on the o bser v at ion sab ov e ,w eca n see that vi e w s V 3 a n d V 4 sh o u l d no t be used t o ge n erate CE re w r i t in g o f Q .T heref o re ,w esh o u l de li m in ate them fr o m the buckets bef o re re w r i t in gs are c on structed .In add i t ion, V 1 sh o u l d no t be added t o the first bucket . W e in tr o duce the T C M a l g o r i thm that ge n erates CE re w r i t in gs b y scree nin gthe vi e w st o be used in the buckets , s o that the re w r i t in gs pr o duced in the c o mb in at ion stage are aut o mat i ca lly CE re w r i t in g wi th o ut e x tra c on ta in me n tcheck in g . Definition 1. (TCM mapping) Given queries V and Q , and a mapping from the variables in V to the variables in Q is called a TCM mapping if each subgoal of V can be mapped to one of the subgoals in Q .
 Si m il ar t o c on ta in me n tmapp in g [ 2 ], T C M mapp in grequ i res that a ll re l at ion s referred b y V a l s oo ccurs in Q , a n da ll join c on d i t ion s in V are reta in ed in Q . T hese t wo c on d i t ion sguara n tee that quer y Q has the same o rstr i cter c on d i t ion s tha n the quer y V .W hat d iff ers fr o mthec on ta in me n tmapp in g i sthat T C M mapp in gd o se no trequ i re the mapp in gbet w ee n the head v ar i ab l es o f V a n d Q . Example 2. V 4 does not have a TCM mapping to Q ,sincethesubgoal C ( r, w ) can not be mapped to any subgoal in Q . V 3 does not have a TCM mapping to Q either because the variable r in A ( r, z ) and B ( z, r ) can not be mapped to two different variables in Q .
 Theorem 1. If Q is a CE rewriting of Q , each view referred by Q must have a TCM mapping to Q .
 In tu i t iv e ly speak in g ,T he o rem 1 sh ow sthat vi e w sthatd ono tha v e T C M map -p in gt o aquer y Q ca nn e v er be used t o ge n erate equ iv a l e n tre w r i t in gs o f Q ,no matter h ow the y are c o mb in ed wi th o ther vi e w s .B ased on th i s ,w ede v e lo pthe first ru l e o f o ur a l g o r i thm : Rule 1. If a view dose not have a TCM mapping to the given query, remove it before running the bucket algorithm.
 Example 3. By applying Rule 1, the resulting intermediate result of the Bucket algorithmisasfollows: U s in gRu l e 1onlyi s no te no ugh t o guara n tee the resu l t in gre w r i t in gs are a ll CE fr o m the bucket in E x amp l e 3, the f ollowin gre w r i t in gca n be ge n erated : pa n s ion i s : Q 1 i sapr o per ly c on ta in ed re w r i t in g ,i. e . Q 1 Q 1 , subg o a l B ( y, r ) ca nno tbemappedt o a ny subg o a lo f Q .Al th o ugh V 1 has a T C M mapp in gt o Q ,i t i smappedt o the subg o a l A ( y, z ), no t A ( x, y ). H e n ce w e n eed t o refi n ethe T C M mapp in gt oB ucket -T C M mapp in gasbe low.
 Definition 2. (Bucket-TCM mapping) Given a bucket (or subgoal) A ( x 1 ,...,x n ) in query Q ,andasubgoal A ( y 1 ,...,y n ) in a view V. A mapping  X  is a Bucket-TCM mapping from V to Q wrt A ( x 1 ,...,x n ) if  X  A ( y 1 ,...,y n ) is mapped to the subgoal A ( x 1 ,...,x n ) ;and  X  All other subgoals in V are mapped to some subgoals in Q.
 Diff ere n tfr o mthe T C M mapp in g ,B ucket -T C Mi sre l e v a n tt oon epart i cu l ar subg o a l. Wi th th i sdefi ni t ion w eca n see that V 1 d o es no tha v ea B ucket -T C M mapp in gt o Q w rt the bucket A ( x, y ), he n ce V 1 ca n X  t be added t o th i s bucket . Ge n era li z in gfr o mth i s o bser v at ion, w ede v e lo ped the f ollowin gthe o rem : Theorem 2. Given a rewriting Q :  X  V 1 ,...,V n of query Q :  X  A 1 ,...,A n , which is generated using a bucket-based algorithm. Each view V i , 1  X  i  X  n , is selected from a the A i .Q X  X saCErewritingiffeach V i has a Bucket-TCM mapping to Q wrt A i .
 B ased on T he o rem 2 ,w ede v e lo pthesec on dru l ef o r o ur a l g o r i thm : Rule 2. When adding a view V to a bucket A of query Q , V must have a Bucket-TCM mapping to Q wrt A .
 Example 4. For the buckets in Example 3, V 1 ( x, y, r ) in the bucket of A ( x, y ) does not have a Bucket-TCM mapping to Q .Hence V 1 should not be added to the bucket of A ( x, y ) . The resulting buckets are changed as below: In the c o mb in at ion stage o f the bucket a l g o r i thm , t wo re w r i t in gs are ge n erated as be low, w h i ch are b o th CE re w r i t in gs .
 p o se a n effic i e n ta l g o r i thm t o ge n erate the CE re w r i t in gs .T he a l g o r i thm ca n fi n da ll the CE re w r i t in gs .Mo re ov er , the re w r i t in g i sguara n teed t o be equ iv a -l e n t wi th o ut add i t ion a l c on ta in me n tcheck in g .W ea l s o c on duct a n e x per i me n t that sh ow sperf o rma n ce ga in o f o ur a l g o r i thm .
 d i scuss ion s on the equ iv a l e n tre w r i t in gpr o b l em .

