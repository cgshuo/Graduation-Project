 1. Introduction
In the past three decades, the use of flexible structure systems has been growing quickly in many engineering applications. The elements for flexible structure such frames, shells, beams and plates are extensively used in a wide range of manufacturing applications and particularly in mechanical, civil, marine, aero-nautical, aerospace and other areas of practical attention, for example, flexible manipulators of satellites, solar panels, etc.
Plates with different shapes, boundary conditions at the edges and various complicated effects have often found applications in different structures such as aerospace, machine design, telephone industry, nuclear reactor technology, naval structures and earth-quake-resistant structures. Particularly, the dynamic behaviour of flexible, flat, thin, rectangular plates has received huge attention in recent years because of its technical importance ( Chakraverty, 2009 ).
The flexible thin rectangular plates structures are the most commonly used in the industrialised world and in abroad range of engineering applications, for examples, electronic circuit board design, solar panels and bridge decks. The stability of the plate,
In the present decade, system identification techniques have become potential candidates to many control application. Para-metric and non-parametric system identification methods used to find approximate or accurate models of dynamic systems depend on observed inputs and outputs ( Mat Darus, 2004 ). The major aim of system identification is to locate approximate or accurate models of dynamics systems depend on observed inputs and outputs. A number of researchers have applied techniques to solve the problems related to system identification. Several methods have been devised to find out models that describe input output behaviour of a system well ( Ismail et al., 2006a ).
Ismail et al. (2006a) have reported identification algorithms of flexible structure using Neural Networks. The research reported a study into the development of system identification methods for dynamic modelling and characterisation of flexible plate struc-tures. The research uses Least Squares and Recursive Least
Squares to find linear parametric model of the system. In addition, non-parametric models of the system are developed using Elman
Neural Networks (ENN) and Multi-layer Perceptron Neural Net-works (MLPNN; Ismail et al., 2006a ).

Mohd Hashim et al. (2004) have reported non-linear dynamic modelling of flexible beam structures using Neural Networks. The research investigated the utilisation of neural network (NNs) backpropagation for modelling flexible beam with fixed-free mode. Comparative analysis of the performance of the Recursive
Least Squares scheme and intelligent Neural Networks model in characterizing the system was carried out in the frequency and time domains. Simulated results have shown that by Neural
Networks the system is modelled better than with the conven-tional linear modelling method ( Mohd Hashim et al., 2004 ).
Mat Darus et al. (2008) have reported Adaptive Neuro-model-ling of a twin rotor system. The research investigated the utilisa-tion of Adaptive Neural Networks (NNs) for dynamic modelling and identification of a highly non-linear TRMS system. An adaptive Elman neuro-model is designed to characterise a twin rotor multi-input multi-output system (TRMS) in vertical motion based on one step-ahead (OSA) prediction. The results obtained, in both frequency and time domains, are compared to the identification using the conventional adaptive technique of Recur-sive Least Squares (RLS). Simulations indicate the superiority of an adaptive neuro-modelling technique over RLS algorithm in mod-elling and identification of the TRMS ( Mat Darus et al., 2008 ).
Ismail et al. (2006b) have reported dynamic characterisation of flexible vibrating structures using adaptive neuro-fuzzy inference system (ANFIS). In this research ANFIS was used to develop a model characterizing the vibration of the plate. The input/output data used in this research was obtained from a simulation of a square, flat, flexible plate with all edges clamped using finite difference (FD) algorithm ( Ismail et al., 2006b ).

Toha et al. (2008) have reported ANFIS modelling of a twin rotor system. An Adaptive Neuro-Fuzzy Inference System (ANFIS) network design is deployed and used for modelling a twin rotor multi-input multi-output system (TRMS). It is demonstrated experimentally that ANFIS can be effectively used for modelling the system with highly accurate results. The accuracy of the modelling results is demonstrated through validation tests including training and test validation and correlation tests ( Mat Darus and Tokhi, 2006 ).

System identification is a broad idiom used to describe algo-rithms and mathematical tools that build dynamical models from measured data. Over the last two decades system identification has received a lot of attention. System identification methods are widely used as a fundamental requirement in scientific applica-tions and engineering. The practical application domains include the Boolean function generation, symbolic regression and pattern recognition and time-series prediction. The problem of finding an boundaries. The opposing faces and the inside edges of each bar were milled flat and straight. The plate with the clamped boundaries was then fixed firmly to a main frame. To tie up the frame pieces jointly, bolts of type M9 were used, with shoulder bolts being used to ensure precise alignment of the opposing frame sections upon final assembly. The test structure was excited by a sinusoidal force generated by a magnetic shaker and applied at the excitation point as shown in Fig. 3 . To sense the plate response at the desired detection and observation points, a piezo-beam type accelerometer (Kistler-8636C5) with sensitivity of 1004 mV/g was used as shown in Fig. 4 . For direct connection of the piezo-type accelerometers, the acceleration signal was acquired through a National Instruments (NI) compact-data acquisition unit as shown in Fig. 5 , which is equipped with NI-9234 module (with 24-bit resolution) as shown in Fig. 6 . The necessary signal conditioning circuits such as anti-aliasing filter have been built-in into the data acquisition system. The acquired signal was then analysed using Intel Core TM Duo Processor and LabVIEW software.
 3. Model structure
A range of model structures are available to assist in modelling a system. The choice of model structure depends on an insight into and understanding of the system undergoing identification and understanding of the system identification method. Non-linear autoregressive moving average model with exogenous inputs (NARMAX) is the most renowned for non-linear models ( Mat Darus, 2004 ; Lennart, 1999 ). It is obvious from the literature that if the plant X  X  input and output data are obtainable, the
NARMAX model is an appropriate option with standard back-propagation learning algorithms for modelling non-linear sys-tems. Mathematically the model is given by Eq. (1) ^ y  X  f  X  u  X  t 1  X  , ... , u  X  t n u  X  , y  X  t 1  X  , ... , y  X  t n where ^ y represents the output vector determined by the past values of the system input vector, output vector and noise. n and n e represent model orders. f ( ) represent the system mapping, which can be constructed through non-parametric methods with a suitable learning algorithm. If the model is acceptable to identify the system without noise term incorporated or the noise is considered as additive term at the output, the model can be represented in the NARX form ( Mat Darus, 2004 ; Lennart, 1999 ). This research used the NARX model. Mathematically the model in
Eq. (1) can be written in discrete form as in Eq. (2): y  X  f  X  u  X  k 1  X  , ... , u  X  k n u  X  , y  X  k 1  X  , ... : , y  X  k n 4. Non-parametric identification
For non-parametric estimatio n, most popular members of non-parametric models such as fuzzy logic (FL) and neural networks (NNs) are normally utilised. Neural networks have a variety of attractive characteristics such as generalisation ability, distributed representation and computation, adaptability massive parallelism and inherent contextual information processing. NNs used widely in a range of identification and control applications owing to the proficient nature of their working principles and other attractive features. Amongst the diverse types of NNs, the Radial-Basis Function (RBF), Multi-Layered Perceptron Neural Network (MLPNN), and
Elman recurrent Neural Network (ENN) are usually used in identifi-cation and control of dynamic systems. The most attractive applica-tions propose a suitable grouping of two methods, NN and FL resulting in a hybrid system, ANFIS, which both operate on linguistic descriptions of the variables and the numeric values through a parallel and fault tolerant architecture ( Mat Darus, 2004 ). the first hidden layer as weighted inputs, and subsequently the outputs from the first layer are fed, as weighted inputs, to the second hidden layer. This process continues until the output layer is reached. In these networks it is assumed that the network can be made up of any number of layers with reasonable number of neurons in each layer, based on the nature of the particular application.A generalised structure of MLP with its basic function is shown in Fig. 7 .

The input layer is formed from one layer of nodes and then the second layer of nodes forms the output layer, with a number of intermediate or hidden layers existing between them. In detail, the input layer is the layer to which the input data is supplied and the output layer is the layer from which the output is taken. All other intermediate layers are called hidden layers. Usually, one, two or even no hidden layers are employed. Fig. 8 depicts m inputs and m outputs, it is not necessary for these values to be equal. The layers are completely interconnected, that means each neuron is connected to every neuron in the previous and succeed-ing layers. However, the neurons in the same layer are not connected to each other. A neuron performs two functions; combining and activation. Several type of activation function such as sigmoid, piecewise linear, threshold, Gaussian and tan-sigmoid are used for activation.

The backpropagation (BP) algorithm, which is the most com-monly adopted MLP learning algorithm, is a gradient descent algorithm. The design of the BP learning algorithm for the MLPNN is a landmark in the development history of neural networks.
Actually, the powerful properties of neural networks have been well recognised after the introduction of BP learning algorithm. The backpropagation algorithm was created by generalising the
Widrow and Hoff learning rule to multiple layer networks and non-linear differentiable transfer functions. The network is trained, using input vectors and the corresponding target or output vectors, until it can associate input vectors with specific output vectors, approximate a function or classify input vectors in an appropriate way as defined by the user. Standard backpropa-gation is a gradient descent algorithm, as is the Widrow and Hoff learning rule, in which minimising the sum squared error between the actual output and desired output. Through the BP learning algorithm the mean squared error of the network is minimised by continually adjusting the weights and biases in the direction of the steepest descent with respect to the error. This is known as gradient descent procedure. Any function with a finite number of discontinuities can be approximated using Networks with biases, with at least one sigmoid neuron layer, and a linear output neuron layer. The best number of neurons and hidden layers to be selected in NN can be obtained by a simple trial and error or by optimisation technique. Correctly trained BP networks tend to give reasonable answers when presented with inputs that they have never seen. Typically, a new input leads to an output similar to the correct output for input vectors used in training that are similar to the new input being presented. This general-isation property makes it possible to train a network on a representative set of input target pairs and get good results
Symbol z 1 represents unit delay. It can be seen from Fig. 10 that in Elman Neural Networks Model, besides the input layer, hidden layer, and output layer, also exists a context layer. Each two adjacent layers are adjusted by connection weights. The input and output layers interact with the outside environment, while the hidden and context layers do not. The input layer is only buffer layer that passes the signals without changing them. The output layer is linear and it sums the signal fed to it. The hidden layer can have linear or non-linear activation functions. The context layer is used only to memorise the previous activations of the hidden layer and can be considered to function as one-step delay. Generally, it can be considered as a special type of feedfoward neural network with additional memory neurons and local feedback. The distinct self-connections of the context nodes in Elman network make it sensitive to the history of input data, which is essentially useful in modelling dynamic system ( Pham and Liu, 1995 ).

The research reported in ( Ismail et al., 2006a ) investigated the utilisation of backpropagation Elman Neural Networks for mod-elling a SISO flexible, flat, plate system. The diagrammatic representation of an Elman neural network for system identifica-tion is similar to MLPNN algorithms as shown in Fig. 9 . 4.3. Adaptive Neuro-Fuzzy Inference System (ANFIS)
Neural networks and fuzzy inference systems are the most popular members of the non-parametric methods. Fuzzy logic based mechanisms employ the verbal power whereas neural networks provide the mathematical power of the brain. The largely attractive applications offer a suitable combination of these two methods resulting in a hybrid system. The hybrid system operates on both linguistic descriptions of the variables and the numeric values through a parallel and fault tolerant architecture ( Mat Darus, 2004 ).
 The term ANFIS, created by Jang, 1993 represents Adaptive-
Network-Based Fuzzy Inference System. It is classified as a hybrid neuro-fuzzy model, constructed by combination of a fuzzy system and a neural network into a uniform architecture ( Nauck, 1999 ).
ANFIS can integrate human expertise in addition to adapt itself through repeated learning. This architecture has verified a high performance in many applications ( Toha et al., 2008 ).
The network-type structure of ANFIS is similar to that of a neural network; it can be used to interpret the input/output map.
ANFIS maps inputs through input membership functions and associated parameters, and then through output membership functions and associated parameters to outputs. 4.3.1. ANFIS architecture ANFIS architecture uses Sugeno-type fuzzy system or Takagi and
Sugeno X  X  IF-THEN rules with appropriate membership functions the training set, the premise parameters are assumed fixed for the current cycle. The set is propagated again, and in this epoch, backpropagation is used to adjust the premise parameters while the consequent parameters remain fixed ( Mandic and Chambers, 2001 ).

Through the learning process, the parameters associated with the membership functions will be changed. The parameters X  adjustment is facilitated by a gradient vector, which provides a measure of how well the fuzzy inference system is modelling the input/output data for a given set of parameters. After obtaining the gradient vector, any of several optimisation routines could be applied to adjust parameters that will reduce some error measure (usually defined by the sum of the squared differences between actual and desired response; Sutton and Craven, 1998 ; Minghui et al., 2009 ).

In this research the utilisation of Neuro-fuzzy model is investigated using ANFIS structure to model the flexible, flat, plate system. The diagrammatic representation of an ANFIS net-work for system identification is similar to MLPNN algorithms as shown in Fig. 9 . 5. Model validation
After obtaining the model of the system, it is necessary to validate whether the model is sufficient to represent the system or no. The procedures that considered for sensing the sufficiency of a fitted model are called Model validity tests. The principle of model validation is:
Compare model simulation or prediction with real data in time domain.

Compare estimated model X  X  frequency response and spectral analysis result in frequency domain.
 Perform statistical test on prediction errors.

Numerous validation tests are existing in the literature, some of which are mean squared error, correlation error, model predicted output and one step-ahead prediction ( Mat Darus, 2004 ). In this research one step-ahead prediction, mean squared error and correlation test are used to validate the model. 5.1. One step-ahead prediction
The One Step-Ahead (OSA) prediction of the system output is a familiar measure of predictive accuracy used in system identifica-tion and control. This is expressed as ^ y  X  f  X  u  X  t  X  , u  X  t 1  X  , ... , u  X  t n u  X  , y  X  t 1  X  , ... , y  X  t n where u and y are the inputs and outputs respectively. f ( )isa non-linear function. The error or prediction is given as shown in
Eq. (4). e  X  t  X  X  y  X  t  X  ^ y  X  t  X  X  4  X 
If the model is biased, ^ y will be a quite good prediction of y ( t ) over the estimation set because the model was estimated by minimising the prediction errors ( Tokhi and Veres, 2002 ). 5.2. Mean Squared Error (MSE) MSE is one of the most common methods of validations. The
MSE is different between the real output y ( n ) of the system and the predicted output ^ y  X  n  X  produced from the input to the system if the model of the system is described accurately. Therefore, an experimental studies were carried out to obtained the input/ output data (between detection and observation points) and these data will later used for system identification to obtain the best model describing the model of the plate. A sinusoidal input force ( F ) with an amplitude of [19 Hz, 5 V] at time instance of 4 s was applied to the excitation point ( X ) located at x  X  0.25 a , and y  X  0.25 b . The experimental lateral deflection of the plate at detection point ( Y ) located at x  X  0.75 a , and y  X  0.75 b , in time domain response is plotted in Fig. 14 . The experimental lateral deflection of the plate at observation point (Z) located at x  X  0.75 a , and y  X  0.25 b , in time domain response is plotted in Fig. 15 . validated with the whole 4000 points including the 1000 points that had not been used in the training process. Both output and estimated outputs are plotted in the Fig. 16 . The error between actual and predicted MLPNN output are plotted in the Fig. 17 and the mean-squared error vs. number of training passes in Fig. 18 .The best result was achieved with an order 20, which means, n for 4000 data length was trained t o characterize the plate. The models reached a sum-squared er ror level of 0.00017103 with 150 training passes for MLPNN modelling.

The correlation tests were carried out to determine the effec-tiveness of the (MLP) BP-based model. Fig. 19 shows the results of the correlation tests. The results were also found to be within 95% confidence level thus confirmed the accuracy of the results. 6.2. Elman Neural Network (ENN) modelling
A coding has been produce based on the Elman Neural Networks within MATLAB environment. An Elman Neural Network with 2 hidden layers, with 6 tansigmoid neurons in first hidden layer, 6 tansigmoid neurons in second hidden layer, and one output layer with linear neuron. Since there was no prior knowledge about a suitable order of the model for the flexible plate system, the structure realisation was performed by a heuristic method. The deflection model was tested with different orders. The data set, comprising 4000 data points, was divided into two sets of 3000 and 1000 data points. The model was trained using the first set and the model was validated with the whole 4000 data, including the first 1000 data, which had not been used in the training process. Fig. 20 shows the result of the actual and Elman predicted output. Fig. 21 shows the error between actual and predicted Elman output and the mean-squared error vs. number of training passes in Fig. 22 .The best result was achieved with an order 20, which means, n for 4000 data length was trained to characterise the plate. The models reached a sum-squared error level of 0.002 with 150 training passes for Elman Neural Network modelling.

The correlation tests were carried out to determine the effectiveness of the ENN-based model. Fig. 23 shows the results of the correlation tests. The results were also found to be within 95% confidence level thus confirmed the accuracy of the results. 6.3. Adaptive Neuro-Fuzzy Inference System (ANFIS) modelling
A coding has been produce base on the ANFIS Networks A coding has been produce base on the ANFIS Networks using 7. Comparative assessment
Comparative performance of non-parametric modelling meth-ods in terms of the mean-squared of error is summarised in
Table 2 . It follows from detection and observation mapping as presented earlier in this study, non-parametric models have performed very well. Validations through test procedures and correlation tests have also been performed with the MLPNN, ENN and ANFIS based models. It is observed from the validation tests that different modelling methods considered in this study have performed sufficiently well. Comparing the mean-squared errors in Table 2 , it is noted that for non-parametric identification technique, MLPNN have performed better than ENN and ANFIS in characterising the flexible plate structure. error and correlation tests. It is observed that all the modelling methods have performed very well in approximating the system response.

A comparative assessment of the performance of non-para-metric approaches in modelling a flexible plate structure has been carried out. It is demonstrated that MLPNNs and ANFIS perform better than ENN in modelling and identification of a flexible plate structure. Thus, the system data can closely be predicted with a very small prediction error with suitable choice of the input data structure.

The non-parametric models of the flexible plate structure thus developed and validated will be used as the transfer function of the system in subsequent investigations for the development of active vibration control strategies for vibration suppression in flexible structures.
 Acknowledgement The authors would like to express their gratitude to the
Universiti Teknologi Malaysia (UTM) for their continuous support in the research work. This research was fully supported by the UTM Research University Grants (GUP) using vote no. 00H11. References
