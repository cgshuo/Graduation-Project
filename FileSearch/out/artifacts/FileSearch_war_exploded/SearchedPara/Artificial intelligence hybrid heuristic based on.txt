 1. Introduction According to the data provided by the Eno Transportation
Foundation , more than 60% of the products that travel over the sea are stored in containers. This percentage rise up to almost 100% over some routes connecting economically strong stable countries. The total amount of cargo reaches several millions of
TEUs (measure unit equivalent to the dimensions of a standard container). Ports compete to become interchange points (hubs) or origin X  X estination points of the transportation routes. Regional and national governments consider a strategic objective to have ports where to locate container terminals since they are sources of economic growth. The competitiveness in this area is huge. The main criteria used by the operators to choose a port as operations base are the geographic location, politic and social stability, as well as operational costs.

Broadly speaking, the loading and unloading processes in a container terminal consist of several phases as indicated in Stahlbock and Vo X  (2008) , Steenken et al. (2004) , Vis and de
Koster (2003) . Once a vessel reaches the port, it is allocated to a berth. Then, its containers are unloaded and driven to the yard, where they are temporally stored. Finally, they are moved to trucks, trains or ships to proceed with the delivery phase.
Complex planning and management problems, which are very important for the transport operators and port authorities, arise in each of the previous phases. Their effective resolution drives to important savings, being the berthing one of the tasks with the highest impact in the final costs.

Given a set of vessels, the goal of a berth allocation problem is to determine how to allocate them to the berths in order to optimize some cost function. The features of the vessels and the port or its resources determine the constraints that have to be satisfied to obtain feasible solutions. One of the most used cost functions to measure the efficiency of a port terminal is the sum of the waiting and working times of each vessel. Other cost functions are the workload of terminal resources ( Lim, 1998 ) and the number of vessels which cannot be attended in it ( Imai et al., 2008 ).

Bierwirth and Meisel (2010) describe different integration schemes. In a functional integration by a feedback loop, the output solution of one problem is given as input to the other problem in a loop that is executed until a solution satisfying the decision maker expectations is reached. Therefore, it is quite relevant to design and develop procedures that provide high quality solutions (no necessarily optimal) with a low computa-tional cost. An example of these designs can be seen in
Giallombardo et al. (2010) , where a two levels heuristic is proposed to solve the joint problem of allocating vessels and assigning quay cranes to them. In the first level, a quay crane profile is assigned to each vessel and in the second level, the corresponding berth allocation problem is solved. These steps are then repeated until a stopping condition is met.
 In this work, we propose a hybrid heuristic that combines the
Tabu Search metaheuristic with Path Relinking ( T 2 S n  X  PR ficial intelligence methods) to solve the Dynamic Berth Allocation
Problem. This procedure incorporates to a Tabu Search algorithm based on T 2 S , proposed by Cordeau et al. (2005) , a set of elite solutions which consists of a subset of all the local optima found along the tabu search process. This set is then used to build new starting solutions for the tabu search by executing a path relink-ing algorithm. Moreover, we include an additional neighborhood structure that allows swaps of vessels both among berths and in the same berth. Therefore, we obtain a tabu search procedure that uses two neighborhood structures to guide the search, T 2 results obtained by the proposed hybrid algorithm are then compared with the results given by the exact resolution of the mathematical model GSPP (Generalized Set Partitioning Problem) presented by Buhrkal et al. (2011) and with the results reached by the T 2 S proposed by Cordeau et al. (2005) . The computational experience corroborates that T 2 S n  X  PR outperforms T 2 obtains optimal or near-optimal solutions in most cases in a smaller amount of time than GSPP . Moreover, for medium and large size instances, for which GSPP cannot be solved to optim-ality, T 2 S n  X  PR significantly outperforms T 2 S .

Note that the tabu search algorithm used in this paper is based on the tabu search T 2 S , proposed by Cordeau et al. (2005) to solve the Discrete Dynamic Berth Allocation Problem (DBAP), but that it is not exactly the one proposed by these authors. The main difference between both tabu search algorithms is the fact that our algorithm uses two different neighborhood structures, instead of the single one used by Cordeau et al. Since several neighbor-hood structures are considered, it is also required to define the pattern that has to be followed to perform the different moves.
This constitutes one of the contributions of our paper and is explained in Section 4 . Moreover, our method combines tabu search with path relinking. It is also important to notice the fact that it is not guaranteed that a hybrid method combining several heuristics will reach better solutions than its single parts. In this work we obtain a hybrid algorithm that outperforms T 2 S con-sidering both the solution quality and the computational times.
Inthefollowing,wepresenttheoutlineofthepaperand highlight its contributions. The literature review of the dynamic berth allocation problem as well as its description are provided in
Section 2 . The paper contribution relies upon the solution algorithm introduced in Section 2 that combines a tabu search algorithm, which makes use of two different neighborhood structures, with path relinking, so providing a hybrid algorithm. The computational experience carried out in this paper is summarized in Section 4 .This experience confirms that the proposed method is effective since it reaches the optimal solution for most of the solved instances.
Furthermore, the algorithm is significantly more efficient than the resolution of the mathematical model GSPP studied in Buhrkal et al. (2011) . Therefore, it can be used as an efficient method for solving the berth allocation problem in integrated designs as the one proposed by Giallombardo et al. (2010) .Finally,wedrawour conclusions in Section 5 . 2. Berth allocation problem
In many multi-users container terminals, the quay is divided into a finite set of berths to which the vessels can be assigned for loading and unloading purposes. The problem associated to this assignment scheme is referred to as Discrete Berth Allocation Problem. The goal of this problem is to minimize the total time that vessels stay at the port.

In the static version of the problem, all vessels arrive at the terminal before the starting planning time, while the dynamic version takes into account the vessels that arrive at any time of the planning horizon. The static problem has been studied in Imai et al. (1997 , 2001 , 2008) and Lee and Chen (2009) . The dynamic problem has been studied in Imai et al. (2001 , 2003 , 2007 , 2008) , Cordeau et al. (2005) , Monaco and Sammarra (2007) , Hansen et al. (2008) , Silva et al. (2008) , Liang et al. (2009) and Giallombardo et al. (2010) .
Imai et al. (2001) propose a heuristic based on the Lagrangian relaxation of the proposed model and develop an extensive computational experience that corroborates the effectiveness of the proposed heuristic in real applications. Imai et al. (2003) consider a variant of the problem that includes service priority associated to the vessels. These priorities let distinguishing the vessels according to their size, work volume, etc. The resulting model is then solved using a Genetic Algorithm. Cordeau et al. (2005) propose a new formulation that includes the weighted sum of the service times and time windows of the berths. They also develop a Tabu Search to solve the problem. Imai et al. (2007) tackle the berth allocation problem in which the vessels can be loaded and unloaded from both sides of the berth. The problem is solved by using a Genetic Algorithm. Monaco and Sammarra (2007) propose a more compact mathematical formulation of the problem, which is then solved using a Lagrangian heuristic. The joint problem of berth allocation and quay cranes assignment is introduced by Imai et al. (2008) , who solve it by means of a Genetic Algorithm. Liang et al. (2009) also consider the previous joint problem. In their model, the position and time for berthing and the number of quay cranes must be determined in order to minimize the amount of working time, waiting time and delay of each vessel. Hansen et al. (2008) propose a Variable Neighbor-hood Search for a variant of this problem in which each vessel has both a reward and a penalty for finishing earlier or later the preestablished time, respectively. Silva et al. (2008) propose a heuristic algorithm based on Genetic Algorithm to solve a particular real case in a Brazilian port. Giallombardo et al. (2010) propose a heuristic that combines Tabu Search and Mathematical Programming to solve a new model of berth allocation and quay cranes assignment.

The Discrete Dynamic Berth Allocation Problem was first formulated as a mixed integer programme by Imai et al. (2001) as an extension of the formulation proposed by Imai et al. (1997) for the discrete static berth allocation problem. Alternative for-mulations for the dynamic problem have been proposed and studied by Monaco and Sammarra (2007) , Cordeau et al. (2005) and Buhrkal et al. (2011) . These models are described and compared in Buhrkal et al. (2011) . The main conclusion is that the model by Christensen and Holst is superior to the other models, since it is able to reach the optimal solutions for the set of instances used by all these authors.

We report an example of the berth allocation problem. Fig. 1 shows feasible solutions for the static and dynamic berth alloca-tion problems, for which the working times ( C ij ), berths avail-ability ( S i ) and arrival times ( A j ) of the vessels are summarized in Table 1 . Note that in the dynamic version of the problem, which is the version considered in this paper, idle times may appear in the berths planning. Note that in both cases, static and dynamic, berths 1 and 2 are opened in times 4 and 3, respectively. In the static case, all the vessels arrive at the port before the opening time of the berths, while in the dynamic case, the vessels can arrive at any time along the planning horizon.

Let us focus on the dynamic part of this example, since the problem tackled in this paper is the dynamic one. In this case, vessels v 4 , v 1 and v 2 are assigned to berth 1, while vessels v v are assigned to berth 2. Vessel v 4 , which arrives at time 4, is assigned to berth 1 at this time and it stays for 4 time units as indicated in Table 1 . The next vessel assigned to berth 1 is v arrives at time 10 and stays 1 time unit. Vessel v 2 is then assigned to berth 1 after vessel v 1 has finished. Note that, since vessel v arrives at time 6 and is assigned to berth 1 at time 11, it has to wait for 5 time units. Then, it requires six more time units to perform the loading and unloading operations. Therefore, the total time vessel v 2 stays at the port is equal to 11 time units, which are counted in the objective function value. The same analysis can be considered to determine the stays of vessels v and v 5 at the port. Therefore, in this example, vessels v 1 to v at the port for 1, 11, 4, 4 and 5 time units, respectively and the objective function value is equal to 25 time units.

Finally, in order to make this paper self-contained, we describe the mathematical formulation presented in Buhrkal et al. (2011) .
According to these authors, the dynamic berth allocation problem can be modeled as a Generalized Set Partitioning Problem GSPP .In theconstraintmatrix,acolumnrep resents a feasible assignment of a ship to a berth at a time. The set of columns is denoted by Two matrices A and B, both containing 9 O 9 columns are defined.
Matrix A  X  X  A i o  X  contains a row for each ship, and A i o only if column o represents an assignment of ship i A N . Each column of A contains exactly one non-zero element. Matrix
B  X  X  B p o  X  contains a row per (berth,time) position. The rows of B are indexed by the set P ,with 9 P 9  X  P k A M  X  e k s k  X  .Theentry B equal to 1, if and only if, position p A P is contained in the assign-ment that column o represents. The cost c o of any column o the service time of the respective position assignment and can be multiplied by the priority factor v i if necessary. A binary variable x is equal to 1, if column o is used in the solution, and 0 otherwise. With these definitions the GSPP formulation of the BAP presented in
Buhrkal et al. (2011) is stated as follows: min
X subject to
X
A iw x w  X  1 , 8 i A N  X  2  X 
X
B pw x w r 1 , 8 p A P  X  3  X  x f 0 ; 1 g , 8 w A O  X  4  X 
The objective function (1) minimizes the service time of the vessels. The set of constraints (2) ensures that all vessels are served. Finally, the constraints (3) guarantee that at a time interval, in a berth, only one vessel can be served. 3. Tabu search with path relinking
Tabu Search (TS) ( Glover and Laguna, 1993 ) is a metaheuristic procedure whose philosophy is to derive and exploit a collection of intelligent problem solving strategies, based on implicit and explicit learning procedures to exploit an adaptive memory framework, which is an important feature of the artificial intelli-gence. From the standpoint of tabu search, adaptive memory embodies the dual functions of creating and exploiting memory structures, H , for taking advantage of the history of the problem-solving process. The memory structures of tabu search operate by reference to four principal dimensions, consisting of recency, frequency, quality, and influence.

TS may be conveniently characterized by reference to neigh-borhood search, though neighborhood search has a broader meaning in TS than in some other parts of the metaheuristic literature. Tabu search employs a different philosophy for going beyond the criterion of terminating at a local optimum. Rando-mization is deemphasized, and generally is employed only in a highly constrained way, on the assumption that intelligent search should be based on more systematic forms of guidance. The notion of exploiting certain forms of adaptive memory to control the search process is the central theme underlying tabu search. The effect of such memory may be envisioned by stipulating that
TS maintains a selective history H of the states encountered during the search, and replaces the neighborhood of solution s , N ( s ), by a modified neighborhood which may be denoted by
N  X  H , s  X  . History therefore determines which solutions may be reached by a move from the current solution, selecting s 0 from N  X  H , s  X  .

In TS strategies based on short-term considerations, N  X  H , s  X  characteristically is a subset of N ( s ), and the tabu classification serves to identify elements of N ( s ) that will be excluded. In the intermediate and longer term strategies, N  X  H , s  X  may contain solutions not in N ( s ), generally consisting of selected elite solutions reached during the search process. Such elite solutions typically are identified as elements of a regional cluster in intermediate term intensification strategies, and as elements of different clusters in longer term diversification strategies. In addition, elite solution components, in contrast to the solutions themselves, are included among the elements that can be retained and integrated to provide inputs to the search process.
Path Relinking (PR) ( Glover et al., 2000 ) provides a funda-mental means for pursuing the goals of intensification and diversification when its steps are implemented to exploit strate-gic choice rule variations. It is initiated by selecting two solutions s and s 0 from a collection of elite solutions produced during previous search phases. A path is then generated from s to s 0 , s  X  i  X  1  X  is created from s ( i ) at each step by choosing a move that leaves the fewest number of moves remaining to reach s 0 . Finally, once the path is completed, one or more of the solutions s ( i )is selected as a solution to start a new search phase, which can be based on tabu search as proposed in this paper. A number of alternative moves can be used to produce a next solution from s ( i ) by the  X  X  X ewest remaining moves X  X  criterion, consequently obtain-ing a set of possible paths from s to s 0 . Selecting unattractive moves relative to the objective function value at each step will tend to produce a final series of strongly improving moves, while selecting attractive moves will tend to produce lower quality moves at the end. 3.1. Tabu search proposed by Cordeau et al. (2005) Cordeau et al. (2005) propose a tabu search approach ( T 2 solving the discrete dynamic berth allocation problem, in which a solution s is described by means of a set of attributes, Attributes , as indicated below: Attributes  X  s  X  X f X  i , j  X  : ship j is assigned to berth i g :
The neighborhood N ( s ) of a solution s consists of all the solutions s which are obtained from s by substituting an attribute  X  i , j  X  A Attributes  X  s  X  by another one  X  i 0 , j  X  , with i corresponds to the reallocation of vessel j from its current berth i to a new berth i 0 . When vessel j is removed from berth i , the sequence of vessels in that berth is reconnected by linking the predecessor and successor of j . Moreover, vessel j is allocated to berth i 0 in the position that minimizes the objective function value. This move is then forbidden for y iterations, assigning a tabu-active status to attribute ( i , j ).

T 2 S employs an aspiration criterium by global objective. This criterium revokes the tabu-active status of an attribute if includ-ing it into the solution let us obtain a solution that improves the best solution found along the search process.

With the purpose of diversifying the search and drive it to less explored regions, Cordeau et al. propose the use of frequencies.
Let s A N  X  s  X  be the neighbor solution of s obtained by eliminating the attribute ( i , j ) from s . Let r ij be the number of times that attribute ( i , j ) has been part of the solutions visited during the process, x the current iteration, and l a parameter to control the intensity of the diversification. Let us consider the following modified objective function c  X  H , s  X  , which is defined as f  X  s  X  ,if f  X  s  X  o f  X  s  X  , and as stated below, otherwise: c  X  H , s  X  X  f  X  s  X  X  l f  X  s  X  r ij = x where f ( s ) is the objective function value of solution s .
The set of neighbors of solution s , N  X  H , s  X  , consists of all the solutions in N ( s ) that are non-tabu or that satisfy the aspiration criterium.

In order to generate the initial solution in T 2 S , Cordeau et al. propose two procedures: R -G ( Random Greeedy )and FCFS -Come, First Served -Greedy ). In R -G , given a random vessels permuta-tion, they are assigned one at a time to the best possible berth following the given order. In FCFS -G , the vessels are ordered accord-ing to their arriving times and assigned as in R -G .
T 2 S consists of the consecutive application of the tabu search starting from both solutions. In both cases, the search stops after 10,000 iterations. The remaining parameters used by T 2 S to the following values: y  X b 7 ; 5 log n c and l  X  0 ; 015. A more detailed explanation of this procedure can be found in Cordeau et al. (2005) . 3.2. Tabu search with path relinking for the DBAP
In order to improve the effectiveness and efficiency of the tabu search described above, several alternatives can be considered. One of them consists of incorporating advanced memory structures that keep high quality solutions to be then used to intensify the search over promising regions of the search space. Another alternative is to use several neighborhood struct ures during the search process.
In this work, we propose to create an elite set of solutions, ES , which consists of a subset of the local optima encountered during the process. Moreover, in combination with the local search proposed by Cordeau et al. that uses the reallocation move, we implement a swap move, according to which vessels allocated to either the same or different berths can be exchanged. The new proposed tabu search, which makes use of two different neigh-borhood structures to guide the search, will be referred to as The method proposed in this paper, that combines T 2 S n with path relinking, will be called T 2 S n  X  PR .

In a swap move, given a solution s represented by the set attributes ( s ), the attributes  X  i 1 , j 1  X  and  X  i 2 , j and  X  i 1 , j 2  X  . This move corresponds to the reallocation of vessels j j from their berths, i 1 and i 2 , to the berths i 2 and i 1
Let N 1  X  s  X  and N 2  X  s  X  be the neighborhoods of the solution s obtained by applying the reallocation and swap moves, respec-tively. Moreover, let N 1  X  H , s  X  and N 2  X  H , s  X  be the modified neigh-borhoods of s obtained from N 1  X  s  X  and N 2  X  s  X  . A solution s belongs the aspiration criterium. The modified neighborhood N 2  X  H , s  X  is defined in the same way.

In the algorithm proposed in this paper, T 2 S n , the move from a solution s to a solution s next is carried out as follows. Let s 0 be the best non-tabu neighbor solution of s that can be reached by using the reallocation move, as indicated below: s 0  X  arg min of s 0 is performed using the swap movement, as indicated below: s 00  X  arg min If f  X  s 00  X  r f  X  s 0  X  , then s next  X  s 00 ; s next  X  s
The set of elite solutions is then used by the path relinking algorithm to create new starting points for the tabu search. The combination of tabu search with path relinking has been used in other papers from the literature Nguyen et al. (2012) . Taking an elite solution s elite as guiding solution, and as initial one, s solution generated by R -G , a procedure based on path relinking, that iteratively brings s initial closer to s elite , is applied. From the midpoint of this path, a new tabu search T 2 S n is then run. The new reached local optima are used to update the elite set. These steps are repeated until the stopping condition is met.
Let s ( i ) be the current solution in the path and B  X  s  X  i  X  X  the set of vessels with different allocation in s ( i ) and s elite , which is the guiding solution. In order to get the next solution in the path same berth and position as it is in the guiding solution, s steps are iteratively repeated until reaching s elite . Fig. 3 shows an example of this process for the dynamic berth allocation problem with five vessels and two berths, in which the arriving times of the vessels, the availability of the berths and the processing times are reported in Table 1 .

In the example shown in Fig. 3 , in order to move from solution guiding solution is detected. In this case, vessel 5 is allocated to the third position of berth 1 in the guiding solution, while in s 0  X  1  X  it is allocated to berth 2. Therefore, in order to get closer to the guiding solution, vessel 5 is allocated accordingly, reaching the solution s 0  X  2  X  shown in Fig. 3 . This process is iterated until reaching the guiding solution, s elite .
 Let s R G and s FCFS G be the solutions obtained from the methods
G and FCFS -G described above, respectively. Let T 2 S n min
T min  X  s FCFS G  X  be the sets of local optima obtained after executing the tabu search from s R G and s FCFS G , respectively. Fig. 2 shows the with the sets of local optima T 2 S n min  X  s R G  X  and T random solution, s initial , is generated by running the Random Greedy approach, R -G ,andsolution s elite A ES is randomly selected. A path relinking connecting s initial with s elite is performed. Finally, the mid-point solution of this path, s ,isselectedasstartingpointtorunthe tabu search T 2 S n . The local optima reached along this search are also used to update the elite set of sol utions. These steps are repeated until the stopping condition is met. In the initialization phase of the elite set, T 2 S n is run until reaching either a maximum number of iterations n 1 or a maximum number of iterations without improve-ments n 2 . Similarly, in the improvement phase, T 2 S n is executed until either a maximum number of iterations n 3 is met or a maximum number of iterations without improvements is met. T 2 S n  X  PR when a maximum number of path relinkings n 5 is performed. 4. Computational experiments
The computational experience has been carried out following two phases. In the first one, the values for the parameters used by the proposed algorithm T 2 S n  X  PR are set. In the second one, the method T 2 S n  X  PR is compared with T 2 S , T 2 S n and the exact resolution of the mathematical model GSPP described in Section 2 . In order to carry out this experience, we have considered problems of different sizes that range from 25 up to 60 vessels and from 5 up to 13 berths. We have used the 50 problems of the set I 2 and the 30 problems of the set I 3of Cordeau et al. (2005) .
Moreover, in order to reach performance conclusions regarding the instances, we have generated a new set of realistic test instances 1 . Table 2 describes the characteristics of these new instances, which were generated according to Cordeau et al. (2005) with longer time horizon, higher traffic, and less number of available berths. Under the headings Vessels and Berths , the number of vessels and available berths are respectively repre-sented. Last column shows the time horizon corresponding to the berths availability. All programs have been coded in Ansi C and the experiments have been performed in a PC with a T4300 processor at 2.10 GHz. The computational times reported in this section are given in seconds. 4.1. Parameters setting
The behavior of T 2 S n  X  PR depends on several parameters: the elite set size ( 9 ES 9 ), maximum number of iterations executed by
T to construct the elite set at the initialization phase ( n number of iterations without improvements of T 2 S n in the initialization phase ( n 2 ), number of iterations run by it is used as an improvement method after relinking two solutions ( n ), number of iterations without improvements of T 2 S n in the relinking phase ( n 4 ) and maximum number of relinkings ( n
The size of the elite set is set to 10 solutions. In order to measure the influence of the remaining parameters over the effectiveness and efficiency of T 2 S n  X  PR , different combinations of values are fixed. Table 3 summarizes these combinations.
With the purpose of carrying out the parameters setting phase, one third of the problems in classes I 2 and I 3 are randomly chosen (1/6 of each class; 7 problems of class I 2 and 5 problems of class
I 3). Each problem is solved 10 times. The mean objective value and mean CPU time are considered as response variables. The analysis has been performed following two steps, in which the effect of the parameters setting over both the mean objective value and the mean CPU time are taken into account, respectively.
Table 4 summarizes the obtained results. For each parameters combination C i , we report the mean objective value and mean CPU time.

In order to determine the differences among the combinations of parameters, we use the Friedman nonparametric statistical test (see, for instance, Daniel, 1990 ). In the cases in which the null hypothesis of equality of treatments is rejected, we use the multiple comparisons test of Friedman to determine the differ-ences among the combinations.
 Table 5 summarizes the results obtained when applying the
Friedman test for the comparison of equality in the objective function values and CPU times. The results corroborate that there are not significant differences in the mean objective function values when the parameters change. However, significant differ-ences are detected in the mean CPU times. Table 6 shows the results obtained when applying the multiple comparisons test of
Friedman at a  X  0 : 05 significance level for the CPU times. The first row reports the ranks of the different parameters combinations.
Then, for each combination C i , the combinations that have the same behavior of the given row are shown; i.e. those combina-tions C j whose ranks are not higher than the critical difference CD ( 9
R R j 9  X  CD ).

From the obtained results, we conclude that there are not statistically significant differences between the combinations of parameters C 1 , C 3 and C 5 , regarding the computational time. For the computational experience that follows in this section, we have chosen the combination of parameters C 1 . The rationale behind this election is the fact that its rank is the lowest, although there are not significant differences between C 1 , C 3 and C
In contrast with other path relinking procedures, the algorithm proposed in this paper does not consider as initial and guiding solutions elements from the elite set. The rationale behind this fact is that we have experimentally seen that this strategy does not provide good solutions for the considered problem. This may be due to the fact that the solutions in the elite set belong to the same subregion of the search space.
 Table 7 shows the results obtained when solving with T
S n  X  PR three instances randomly selected from the classes I2 and I3 of Cordeau et al. (2005) using both path relinking strategies (Strategy 1: selects the initial and guiding solutions from the elite set at random; Strategy 2: uses a solution generated with the method as initial solution and one solution from the elite set as guiding one). For each path relinking strategy, several combina-tions of parameters are used. The first eight columns of Table 7 indicate the number of vessels ( 9 V 9 ), number of berths ( problem ( inst : ), and the values to which the parameters n n and n 5 are set. The four next columns summarize the mean objective function values and the CPU times required for each strategy. Last column reports the percentage differences between strategies 1 and 2. These results corroborate that in all cases the second strategy provides better objective values than the first one. 4.2. Comparative analysis
The goal of the computational experiments reported in this section is to determine the performance of the proposed heuristic procedure T 2 S n  X  PR when compared to the tabu search proce-dures T 2 S and T 2 S n , and to the resolution of the exact model GSPP . For this purpose, the problem instances of the classes I 2 and I 3of Cordeau et al. (2005) as well as the new instances generated in this paper are solved with all the procedures. The heuristic procedures are executed 30 times for each problem instance.

Tables 8 X 10 illustrate the results obtained for small, medium and large instances, respectively. In these tables, under the by the mathematical model, the tabu search from the literature, the tabu search proposed in this paper as well as the combination of our tabu search with path relinking are reported, respectively.
Moreover, Opt Val indicates the optimal value for a given instance, while Obj Val gives the objective function value obtained by the corresponding method.

In Table 8 , the gaps corresponding to T 2 S and T 2 S n are calculated with respect to the optimum values provided by the mathematical model GSPP . On the other hand, the gaps corre-sponding to T 2 S n  X  PR , Gap 1 and Gap 2 are calculated with respect to the optimum values and to the T 2 S n objective values, respec-tively. In Tables 9 and 10 , the gaps corresponding to T 2 calculated with respect to T 2 S objective values obtained with the procedure by Cordeau et al. (2005) , while the gaps corresponding to T
S n  X  PR , Gap 1 and Gap 2 are calculated with respect to the T run until optimality was proven or it run out of memory.
For small size instances, CPLEX was able to solve the instances to optimality in all cases. However, for medium and large size instances CPLEX terminated with a memory fault and no solution was found. The disability of the mathematical model GSPP to solve more realistic instances had already been noticed in Buhrkal et al. (2011) .

Table 8 shows that T 2 S obtains 4 out of 30 optimal solutions, whereas T 2 S n and T 2 S n  X  PR reach 20 and 27, respectively. In addition, T 2 S n  X  PR improves the results given by T 2 S n in the remaining three instances. Furthermore, T 2 S n and T 2 S n  X  PR are significantly more efficient than both GSPP and T 2 S . Note that the time reductions of T 2 S n with respect to GSPP and T 2 S are 98.67% and 87.60%, respectively. Finally, the time reductions of T with respect to GSPP and T 2 S are 98.30% and 84.15%, respectively.
Note that T 2 S n  X  PR improves in 10 out of 30 instances the results reached by T 2 S n with a light increment in the computational time.
Table 9 shows that for medium size instances, T 2 S n  X  PR obtains the best objective function value in all cases, while T and T 2 S obtain 15 and 0 out of 40, respectively. The time reductions of T 2 S n and T 2 S n  X  PR with respect to T 2 and 78.37%, respectively. For large size instances, whose results are summarized in Table 10 , T 2 S n  X  PR also obtains the best objective function value in all cases, while T 2 S n and T 10 and 0 out of 30, respectively. The time reductions of T
T S n  X  PR with respect to T 2 S are 79.48% and 77.37%, respectively.
The Wilcoxon signed-rank non-parametric statistical test is then used to statistically corroborate the above-mentioned con-clusions. The performance of the different heuristics implemented in this paper for solving the DBAP has been compared. The results are reported in Table 11 . The first column corresponds to the experiment, the second column to the p -value and the third column corresponds to the error-value a . The comparison between T 2 S n and T 2 S n  X  PR with T 2 S resulted in a extremely small p -value, so that we can reject the null hypothesis of performance equality and conclude that both T 2 S n and T perform significantly better than T 2 S , that is the tabu search from the literature. Furthermore, the test also revealed that T presents significant differences with respect to T 2 S n at a confidence level of a  X  0 : 05. Therefore, we conclude that T outperforms both T 2 S and T 2 S n .

To sum up this section, we indicate that the computational experience carried out in this paper corroborates the effectiveness and efficiency of the proposed procedure, T 2 S n  X  PR , since it reaches the optimal solution for most of the instances that Cplex is able to solve being more efficient than the resolution of the mathematical model GSPP . Moreover, it outperforms the tabu search proposed in the literature. This fact let us state that the algorithm can be used as an efficient method for solving the berth allocation problem in integrated designs as the one proposed by
Giallombardo et al. (2010) . 5. Conclusions In this paper we propose a hybrid metaheuristic that combines Tabu Search with Path Relinking to solve the Dynamic Berth
Allocation Problem. An elite set of solutions, which consists of local optima found along the tabu search process, is used to build, by path relinking, new initial solutions for the Tabu Search.
Moreover, the proposed tabu search makes use of two different neighborhood structures to guide the search. This fact implies that defining the pattern that has to be followed to perform the different moves is then required. The computational experience carried out in this paper corroborates the effectiveness and efficiency of the proposed strategy since they are both increased when compared with other methods from the literature. This fact justifies the use of T 2 S n  X  PR as a procedure to solve the dynamic berth allocation problem; particularly in those integrated designs in which this problem appears as a subproblem. In these cases it is preferable to use an efficient procedure that provides near-optimal solutions.

As future work we propose the use of other adaptive memory structures that let improve the performance of the proposed method, which already outperforms other heuristic algorithm proposed in the literature. Moreover, we intend to explore other alternatives for the construction of the elite set of solutions (eg., using a mechanism for diversification as it is than in the Scatter
Search metaheuristic). Finally, we plan to apply the proposed algorithm over integrated models in which the berth allocation problem is combined with the quay crane assignment problem. Acknowledgement This work has been partially funded by the European Regional
Development Fund, the Spanish Ministry of Science and Technol-ogy (projects TIN2009-13363 and TIN2008-06872-C04-01), and the Canary Government (project PI2007/019). Eduardo Lalla thanks the Canary Government the financial support he receives through his doctoral grant.
 References
