 SURESH SUNDARAM and A. G. RAMAKRISHNAN , Indian Institute of Science Processing of handwritten documents, in general, considers words as basic units rather than isolated characters. In English texts, there is a well-defined separation between words, but the letters within a word are not separated. This is especially evident in the case of cursive handwriting, the recognition of which has been addressed in Senior and Robinson [1998], Jager et al. [2001], Oliveira et al. [2002], Koerich et al. [2005], and Camastra [2007]. In Indic scripts, the constituting words are rarely cursive in nature with the possible exception of Bangla [Bhattacharya et al. 2008]. Characters in a word are written separately from each other with possible overlaps. There is currently limited work addressing the research challenges pertaining to recognizing Indic script words [Bharath and Madhvanath 2007; Bhattacharya et al. 2008; Fink et al. 2010]. Most of the reported techniques deal with the problem of recognizing isolated characters [Babu et al. 2007; Bhattacharya et al. 2007; Joshi et al. 2004; Swethalakshmi et al. 2007].

Word recognition can be categorized into segmentation-free and segmentation-based methods. Segmentation-free approaches [Madhvanath and Govindaraju 2001] treat the word as a single entity and attempt to recognize it as a whole, after appropriate feature extraction. The recognition output necessarily corresponds to a word contained in a lexicon. On the other hand, segmentation-based techniques [Gao et al. 2005; Liu et al. 2004b; Nagakawa et al. 2005] regard a word as a collection of subunits. These techniques have the advantage of not being limited by a lexicon seen in training. These methods segment the word into its constituent units, recognize them and then build a word level interpretation. In general, a suitable set of candidate patterns are generated and concatenated to constitute the word. A classifier trained on the subunits is used to classify each of these patterns. The candidates generated can be represented by a hypothesized network, called the segmentation candidate lattice [Cheriet et al. 2008; Liu et al. 2004b; Murase 1988; Zhou et al. 2007] and the optimal candidate sequence representing the word is traced using dynamic programming techniques [Gao et al. 2005].
 Two-stage segmentation schemes have been used to segment Chinese characters in Zhao et al. [2003] and Gao et al. [2005]. Apart from recognizing candidate patterns with a classifier, contextual information forms cues in deciding the optimal character sequence in segmentation-based techniques. Geometric features extracted from seg-ments have been used for Japanese online handwriting recognition in Nagakawa et al. [2005]. The linguistic knowledge obtained from a large corpus of data has been incorpo-rated during recognition in Marti and Bunke [2002]. Features derived from off-strokes have also been used to segment Japanese characters [Furukawa et al. 2006]. Hypothet-ical segmentation points are generated in Zhu and Nakagawa [2008] and Zhu et al. [2010] using geometric features (trained with SVM classifier), which are then incor-porated into the integrated-segmentation recognition (ISR) framework. Very recently, conditional random fields have been employed for path evaluation in the candidate lattice for word recognition in Zhou et al. [2009]. Modified path evaluation criteria are proposed in Zhu et al. [2009] and Tonouchi [2010] for Japanese text recognition. The extraction of words from an online handwritten text in Varga and Bunke [2005], Liwicki et al. [2006] and Quiniou et al. [2009] is another avenue of research that has been explored in the literature.

The challenges posed with segmenting online handwritten Indic scripts have hardly been investigated [Sundaram and Ramakrishnan 2010]. Among the reported tech-niques, we came across only one work for the recognition of online Tamil words [Bharath and Madhvanath 2007]. Here, the authors use a HMM framework for model-ing the symbols and their relative positions in online Tamil words. However, their work adopts a segmentation-free approach. Apart from a preliminary attempt in Bangla [Bhattacharya et al. 2008], we have not come across any work on segmentation-based methods for recognizing words in online Indic scripts. In Bhattacharya et al. [2008], based on the positional information of the headline, the online trace is segmented to a set of sub-strokes, which are in turn recognized and concatenated using a look-up table into valid characters. However, for offline handwritten Indic words, segmentation us-ing the reservoir concept has been reported in Tripathy and Pal [2004]. Recursive con-tour following algorithm and fuzzy-based features have been proposed in Bishnu and Chaudhuri [1999] and Basu et al. [2007] respectively for segmenting offline Bangla text.

In this work, we propose a lexicon free scheme, based on feedbacks from recognition likelihoods and inter-stroke based features, to segment online handwritten isolated Tamil words. Our strategy comprises two modules: (1) Dominant Overlap Criterion Segmentation (DOCS) and (2) Attention Feedback Segmentation (AFS). The details of the functionality of the modules, as well as their performance evaluation on hand-written Tamil words are presented in this article. The work is an extended version of our recently published ICDAR 2011 conference article [Sundaram and Ramakrishnan 2011].

The remainder of the article is organized as follows. Section 2 highlights the databases adopted in this work, together with the experimental condition. The first half of Section 3 proposes an initial segmentation step of a Tamil word in the DOCS module into a set of  X  X troke groups X . This is followed by a high-level outline of the AFS module, proposed to detect and correct the stroke groups wrongly segmented by the DOCS module. Section 4 distinguishes our methodology from the integrated segmentation recognition technique followed in Oriental scripts. The details of the script specific features, used for selecting the stroke groups, possibly over-segmented or under-segmented by the DOCS module, are described in Sections 5 and 6 respec-tively. Sections 7 and 8 discuss the AFS strategies for correcting the suspected over-segmented and under-segmented stroke groups. The performance evaluation of the proposed segmentation scheme is presented in Section 9. Section 10 presents an anal-ogy of our approach to concepts in neuroscience. Finally, we summarize the contribu-tions of the present work in Section 11. In this section, we outline the databases employed for our study. The modern-day Tamil alphabet comprises 313 characters. A minimal set of 155 distinct symbols were derived in Nethravathi et al. [2010] to recognize these characters. The 155 distinct Tamil symbols (comprising 11 vowels, 23 pure consonants, 23 base consonants, 92 CV combinations, and six additional symbols) are presented in the Appendix of this ar-ticle. A corpus of isolated Tamil symbols (IWFHR database) is publicly available for research 1 and is used for learning various statistics about Tamil symbols. In addition, as will be discussed in Section 9, the choice of using the SVM classifier over other state-of-the-art classifiers in the present study has been made by measuring its performance on the samples of the test set in the IWFHR database.
 Isolated Tamil words are collected using a custom application running on a tablet PC. We have ensured that all the writers who participated in the data collection ac-tivity are native Tamil speakers, who currently write in that language, at least irreg-ularly. Accordingly, we came across different popular writing styles for Tamil symbols. Moreover, the participants were provided with a graphics interface with rectangular boxes and were prompted to write Tamil words, one in each box. With this setup, the experimental data is found to be free from skew or rotation.

One hundred and twenty five high school students from across six educational insti-tutions in the Indian state of Tamil Nadu contributed in building the word data-base of 10,000 words, referred to as the MILE word Database in this work. A subset of 250 words (denoted as DB1) has been employed for validating the segmentation strategy. The collected word samples were annotated semi-automatically with a GUI tool. Trained Tamil natives contributed to the annotation of each word sample at the sym-bol level by labeling one or more strokes that together form a particular symbol. The annotation of the 10,000 words in the MILE Word database resulted in 53,246 labeled Tamil symbols. We use these symbol labels as the ground truth for computing the seg-mentation and recognition accuracies.

The statistics of the features, to be used in this work, have been derived from the pre-processed symbols [Joshi et al. 2004] of the IWFHR Tamil symbol database. Af-ter carrying out similar preprocessing steps on the Tamil symbols in the MILE word database, the derived statistics can be reliably applied to them.

Figures 1(i) X (j) present a few sample Tamil words from our database. Given an online Tamil word, our emphasis in this work is to correctly segment it into its constituent symbols by employing a feedback-based strategy. The structural characteristics of the Tamil script have been exploited in designing the segmentation methodology.

During the collection of online words, the pen-tip movement is detected with pen-up/pen-down states. The set of points captured between successive pen-down to pen-up states is called a stroke. The script being non-cursive in nature, an online word can be represented as a sequence of n strokes W ={ s 1 , s 2 ....., s n } .Itmaybenoted here that a Tamil symbol alone, at times, may correspond to a word. Typically, the strokes of a Tamil symbol vary from 1 to 5. In the case of multi-stroke Tamil symbols, strokes of the same symbol may significantly overlap in the horizontal direction. This prior knowledge of the script is utilized in proposing an initial segmentation of W as described below.

The word W is segmented based on a bounding box overlap criterion, in the Dom-inant Overlap Criterion Segmentation (DOCS) module to a set of distinct patterns. We refer to the generated patterns as stroke groups in this work. A stroke group is defined as a set of consecutive strokes, which is possibly a valid Tamil symbol. In order to mathematically formulate the operation in the DOCS module, one needs to quantify the degree of horizontal overlap. For the k th stroke group S k under consid-eration, its successive stroke is taken and checked for overlap, if any. Whenever the degree of overlap exceeds a threshold, the successive stroke is merged with the stroke group S k . Otherwise, the successive stroke is considered to begin a new stroke group S + 1 . The algorithm proceeds until all the strokes of the word are exhausted. The first stroke, s 1 of W , by default, belongs to the first stroke group S 1 .

Let the minimum and maximum x -coordinates of the bounding box ( BB )ofthe i th of its horizontal overlap O c k with the previous stroke group S k as the following. Here x S k min and x S k max denote the minimum and maximum x -coordinates of the BB of the k th stroke group. A threshold T 0 (set to 0.2) applied on O c (This choice of T 0 is discussed in Section 9.4). Figure 2 depicts the different parameters employed for computing O c k . The DOCS module outputs a set of  X  p stroke groups, where  X  p &lt; = n .

Figures 3, 4, and 5 present illustrations wherein the DOCS module combines one or more input raw strokes to generate stroke groups. The resulting stroke groups are valid Tamil symbols /mu/, /U/ and /I/, respectively.

However, at times, a stroke group generated may correspond to a part of a valid symbol or a merge of valid symbols. These two issues are addressed below with suitable illustrations.
  X  Splitting of a valid symbol (over-segmentation). The symbol /I/ in the word  X  Merging of two distinct symbols (under-segmentation). In Figure 6(b), the symbols We propose a strategy to further improve the segmentation performance beyond that given by the DOCS module. Two novel attributes, namely maximum inter-stroke dis-placement and number of dominant points, have been separately derived to detect under-segmented and over-segmented stroke groups respectively. Attention on these features selects only a subset of the generated stroke groups for subsequent analy-sis. Upon detection, a stroke group suspected to be incorrectly segmented is fed to a unit, that operates on additional attributes (derived from the statistics of the IWFHR database), to provide feedback on whether or not to proceed in correcting it. When-ever the feedback favors a correction, rearrangement of the strokes within or even outside the stroke group under consideration is initiated. It is to be noted that only stroke groups suspected to be broken or under-segmented are fed to the feedback unit. In other words, we focus on the rectification of possible segmentation errors on selected stroke groups. First, we operate on stroke groups likely to contribute to under-segmentation errors, and split them, if necessary. Thereafter, stroke groups suspected to be a part of valid symbol (contributing to over-segmentation errors) are merged with their appropriate neighbors to generate valid symbols. We refer to this proposed segmentation step/module by Attention-Feedback Segmentation (abbrevi-ated as AFS).

Summarizing, the stroke groups resulting from the DOCS module are regarded as tentative candidates for valid Tamil symbols. Based on feedback from various at-tributes proposed in this work, the AFS module may modify the number of stroke groups output by the DOCS module. In doing so, the AFS module improves the perfor-mance of the handwriting system. For the illustrations and in Figure 6, the refined segmentation (performed by the AFS module), when successful, should out-put 3 and 6 stroke groups respectively.

Figure 7(a) presents a high-level pictorial summary of our segmentation strategy, for a given input word. We assume that the word W comprises p stroke groups after the AFS step. Each of the p stroke groups obtained after the AFS step are recognized by a classifier (shown with a dotted box) to obtain the symbol labels, that in turn are combined to generate the output word. The details of the AFS module operating on a stroke group generated from the DOCS module is depicted in Figure 7(b). In this section, we highlight two differences between the proposed segmentation strat-egy and the integrated-segmentation and recognition (ISR) approach typically followed in recent literature for online Oriental (namely, Chinese and Japanese) scripts. The ISR scheme (refer to Figure 8) is comprised of two steps, namely, (1) pre-segmentation and (2) path evaluation [Liu et al. 2004a; Zhu et al. 2010].
  X  The stroke groups generated by the DOCS module may be regarded to be analogous  X  In the path-evaluation step of the ISR approach, the optimal path is evaluated
In the subsequent sections of the article, we outline the proposed attention feedback strategies for detecting and correcting the stroke groups wrongly segmented by the DOCS module. In this context, the following aspects need to be borne in mind. (1) Out of the stroke groups resulting from the DOCS module, the AFS module oper-(2) Owing to its better generalization performance to unseen data (in comparison to (3) Prior to sending a suspected split or under-segmented stroke group to the SVM (4) Moreover, since the emphasis here is on improving the segmentation rather than The training samples of the IWFHR dataset are segmented based on the overlap cri-terion in the DOCS module. Since this dataset consists of isolated Tamil symbols, the segmentation of any sample into more than one stroke group indicates an over-segmentation. Figures 9(a) and (b) respectively illustrate a sample of /A/ and /nni/ that get over-segmented into more than one stroke group by the DOCS step. We now explore the utility of a new feature, number of dominant points, to detect possible over-segmentations in the stroke groups. The number of dominant points of a stroke group provides a rich structural description. The use of dominant points in the area of online handwriting recognition has been documented in the works of Li and Yeung [1997], Yang and Dai [2002], Joshi et al. [2004], and Ma et al. [2009].

Our algorithm for generating the dominant points begins by marking the first pen position as a dominant point. Starting from the current dominant point, we compute the absolute value of the angle between pen directions at successive points and accu-mulate it along the online trace as long as the cumulative sum is less than a threshold T . The pen position, at which the accumulated angle exceeds T  X  , is marked as the next dominant point and the process continues till the end of the trace. The resulting number of dominant points extracted is used as a feature for attention. Most of the symbols in Tamil comprise curved strokes. We empirically choose threshold T  X  in or-der to ensure that the shape of the stroke group is approximated with a reduced set of points, without losing any points of high curvature. Very high values of T  X  do not sufficiently capture the shape of the character. On the other hand, for low values of T , the number of dominant points increases with the approximated shape resembling more closer to the original stroke group. By experimentation, we noted that a value of T  X  in the range [35 o ,55 o ] works well for shape representation. In the present work, we choose T  X  = 45 o . Figure 10 highlights the 20 dominant points for the stroke group et al. 2004].

We now present a statistical justification towards using the number of dominant points of a stroke group as a cue to detect possible over-segmentation errors. Let us assume that a training sample X from the IWFHR data-set gets split by the DOCS module into  X  p stroke groups. The number of dominant points corresponding to each of we consider the number of dominant points (min i N S i ) corresponding to the shortest stroke group in the split. The distribution of the number of dominant points of the shortest stroke group for all the training samples of symbols (in the IWFHR dataset) split by DOCS module is presented in Figure 11. The maximum number of dominant points, as read from the histogram, is 15. From this observation, we can infer that a stroke group for which the number of dominant points is less than 16 may correspond to a part of a Tamil symbol. In conclusion, shorter stroke groups are more indicative of a broken symbol than longer ones.
 For preprocessed stroke groups comprising m strokes ( m &gt; 1), the horizontal displace-ment b i from the bounding box x -maximum of the i th stroke to the first point of the ( i + 1 ) th stroke is computed. The maximum of the computed displacements b max ,among all successive stroke pairs, is a feature for attention. The inter-stroke displacement b max (interpreted as the maximum  X  X ounding box to next-stroke displacement X  in a stroke group) may be either positive or negative, de-pending on the relative positions of the strokes under consideration. For the stroke group /ti/ shown in Figure 12(c), written in three strokes, we have b max &lt; 0.
We now demonstrate the efficacy of this feature in detecting under-segmented stroke groups. An analysis is performed on stroke groups (comprising multiple strokes) ob-tained from DOCS module on the 250 handwritten words in the data-set DB1. Stroke groups for which b max &gt; 0 may correspond to Tamil symbols that have been merged. On the other hand, stroke groups satisfying b max &lt; 0 rarely produce an under seg-mentation error. In other words, when two valid Tamil symbols are merged in a stroke group, the inter-stroke displacement between the bounding box of the last stroke of the previous symbol to the first sample point of the next symbol is positive, when com-pared to the inter-stroke displacement in a correctly segmented stroke group. Hence, this feature serves as a cue to detect under-segmented stroke-groups. For the database DB1, as high as 95% of stroke groups contributing to under-segmentation errors sat-isfy b max &gt; 0. Figure 13 depicts the case wherein two Tamil symbols and are merged to a stroke group . It is quite likely for the SVM classifier to regard this stroke group as an outlier pattern by providing a low likelihood to its most probable candidate. On the other hand, Figure 12(c) presents a correctly segmented sample of As explained in Section 5, a stroke group with less than 16 dominant points may cor-respond to a part of a Tamil symbol. Figure 14 presents the block diagram of the AFS strategy proposed for correcting over-segmented stroke groups. Let S k correspond to a stroke group that is suspected to be a broken symbol. Consider S adj ( k ) to be the neighboring stroke group whose BB is closest to that of S k . The feature vector (con-by merging S k with S adj ( k ) . For a possible merge, we require the average likelihood of However, for avoiding any unintentional merges, we additionally ensure that the max-imum horizontal inter-stroke gap (denoted by d max )in S M is less than the maximum possible horizontal inter-stroke gap T dmax  X  M top determined from the IWFHR dataset for the recognized symbol  X  M top . In other words,
The maximum horizontal inter-stroke gap d max is computed as follows: for a pre-processed stroke group comprising m strokes, the signed horizontal inter stroke gap d i between the last point of the i th stroke and the first point of the measured. The maximum of the inter-stroke gaps represents d max .
In contrast to b max (defined in Section 6), d max can be interpreted as the maximum stroke to stroke displacement in a stroke group. We reiterate here that, for a given stroke group, b max is used for detecting possible under segmentation errors (as ex-plained in Section 6). The maximum horizontal inter-stroke gap d max , on the other hand, is used for correcting stroke groups from the DOCS module, suspected to be wrongly segmented.
 Figure 15 presents a suitable illustration, wherein the second stroke group in Figure 15(a), suspected to be broken by the DOCS module, gets properly merged to a valid symbol /ng/ by the AFS strategy. The correctly segmented word after the merge is shown in Figure 15(e).

As an illustration to how the inter-stroke gap d max aids in preventing spurious merges, we consider the last stroke group that has five dominant points. The num-ber of dominant points being less than 16, we tentatively merge it to the neighboring stroke group and recognize the resulting pattern S M [Figure 16(a)]. The SVM favors the symbol /tU/, the printed sample of which is shown in Figure 16(b). However, we observe that the maximum possible inter-stroke gap for is less than the d max computed for S M . Accordingly, we do not consider the merge. Instead, the individual stroke groups and are favored. As explained in Section 6, a stroke group satisfying b max &gt; 0 may correspond to a merger of valid Tamil symbols. In this section, we outline the proposed AFS strategy for resolving such suspected under-segmented stroke groups. From the block diagram of Figure 17, we observe that feedbacks of SVM likelihoods, statistics of number of dominant points and inter-stroke gap d max , defined in Equation (4), influence our de-cision to split a stroke group.

Assume that a stroke group S k , comprising m strokes, satisfies b max &gt; 0. If b max corresponds to the inter stroke displacement, occurring between the q th and ( q + 1 ) th strokes, then we suspect stroke group S k to be the merger of two valid symbols S k S k 2 , defined by S k 1 denotes the i th stroke for stroke group S k . S k subsequently recognized to generate likelihoods such as the following.
 We favor splitting the stroke group S k into S k Here  X  k top represents the most probable symbol of the SVM for the stroke group S k . For the scenario, where the inequality is not satisfied, additional cues (derived from statistics) are employed for resolving the possible under-segmentation error in S k . (1) If the number of dominant points N S k in S k is greater than the maximum number (2) If d max obtained for the stroke group S k denoted by d S k max is greater than maxi-Figure 18 illustrates the case, wherein the wrongly segmented stroke group at the start of the word is segmented correctly to two valid symbols and , respectively.
 The SVM is chosen as the classifier in the AFS module, based on a comprehensive evaluation of different state of art classifiers on the test data used in the IWFHR 2006 Tamil symbol competition data-set. All the classifiers (listed in Table I) are trained with the concatenated x and y coordinates of the preprocessed Tamil symbols from the IWFHR training set. From the recognition rates, we note that the SVM provides a performance superior to the classifiers k -NN, DTW+NN and HMMs.

The SVM classifier has been trained using a RBF kernel with the parameters C = 5and  X  = 0.2. The kernel and their corresponding parameters were optimally set after performing five-fold cross validation on the IWFHR training data. The LIB-SVM toolbox [Chang and Lin 2011] was used for the experiments.

In addition, for each symbol  X  i , the following statistics are generated. (1) The maximum number of dominant points T max dp (  X  i ) across all samples of  X  i . (2) T dmax ( X  i ) -The maximum horizontal inter stroke gap, as defined in Equation (4),
The segmentation accuracy (reported as a percentage) is used as a measure of per-formance evaluation for our experiments. It is computed as follows: for a set of t words (being tested), we define the following with respect to the i th word.  X  N i C -Actual number of valid symbols/stroke groups obtained with manual segmen- X  N i D -Number of stroke groups corresponding to valid symbols, obtained from the  X  N i A -Number of stroke groups corresponding to valid symbols, obtained from the
Accordingly, the segmentation accuracy (at symbol level) from the DOCS module alone can be written as t i = 1 N i D / t i = 1 N i C  X  100.

In a similar way, the accuracy (at symbol level) after the AFS module can be com-
For our experiments, t = 10, 000 and t i = 1 N i C = 53246 (as discussed in Section 2, we test our segmentation methodology on the 10,000 words of the MILE word data-set comprising 53,246 symbols). Though the primary focus is on segmenting Tamil words, as a first experiment, we evaluate the performance of the proposed approach on the symbols in the IWFHR training dataset. For the isolated symbols in this dataset, the errors can arise only due to over-segmentation. For ease of analysis, we manually divide the Tamil symbols into eight groups.  X  G 1 Vowels  X  G 2 Pure consonants  X  G 3 Base consonants  X  G 4 CV combinations of vowels  X  G 5 CV combinations of vowels  X  G 6 CV combinations of vowels  X  G 7 CV combinations of vowels  X  G 8 Additional symbols
Table II outlines the results of the proposed segmentation strategies on each of these groups. It can be noted that the DOCS module alone gives a reasonable accuracy of 95.9%. Incorporation of the AFS module increases the segmentation accuracy to 99.5%. We also observe that the over-segmentation errors by the DOCS module are drastically reduced by the AFS module (by approximately 88.0%) across the entire database. The proposed techniques are tested on the entire word database. However, to start, we evaluate the performance on the validation set DB1. Table III outlines the seg-mentation statistics. The proposed DOCS module correctly segments 1,107 out of the 1,210 symbols, accounting for 91.5% segmentation accuracy. Of the 103 errors, 86.4% (89 errors) corresponds to the merging of valid symbols. The AFS module described in Section 8 aids in properly detecting and correcting 89.9% of these errors. In addi-tion, the method proposed in Section 7 effectively merges 78.6% of the over-segmented stroke groups to valid symbols. The improvement in symbol segmentation rate with the incorporation of the AFS module in turn reduces the number of wrongly segmented words. It can be observed from the last row of the table that 60 additional words have been properly segmented.

Table IV presents the the performance of the segmentation methodology across the entire MILE word database (comprising 10,000 words). The results show that the DOCS module achieves a segmentation accuracy of 98.1% at the symbol level, which improves to as high as 99.7% after the AFS strategy. This correspond to a 86.2% re-duction in symbol segmentation errors. Tables V and VI respectively present the recognition results for sample Tamil words from the DOCS and AFS modules. Application of the DOCS module on each word in Table V leads to a merge of a few valid symbols. On the other hand, at least one valid symbol in each word in Table VI appears as more than one stroke group due to over-segmentation. The incorrect segmentation in turn increases the symbol recognition errors, as shown in the second column of the two tables. From the third columns, we observe that all the constituent symbols of these words are recognized correctly after the segmentation is refined by the incorporation of the AFS module.
 Table VII gives the recognition accuracy for the set DB1, obtained with DOCS and AFS modules. Since a significant percentage of segmentation errors from the DOCS module are corrected by the AFS strategy, a drastic improvement of 16.6% (from 70.5% to 87.1%) in symbol recognition is observed. In computing the symbol recognition rate, apart from the substitution errors, we take into account the insertion and deletion er-rors, caused by over-segmentation and under-segmentation, respectively. The edit dis-tance [Duda et al. 1995] is used for matching the recognized symbols with the ground truth data. Moreover, 11.6% of the words, (29 additional words) wrongly recognized after DOCS step, have been corrected by the AFS technique. Across the 10,000 words in the MILE word database, an improvement of 4.5% (from 83.9% to 88.4%) in symbol recognition rate was obtained (refer to Table IV).

Table VIII presents the word recognition rates obtained on the MILE word database with our method. We observe word recognition rates of 50.9% and 64.9% for the DOCS and AFS module respectively. In summary, the incorporation of the AFS module lowers the word error rate by 28.5%. In all of the preceding experiments and discussions, sets of consecutive strokes of the word are merged into stroke groups in the DOCS module by comparing their degree of overlap O c k , defined in Equation (1), to a threshold T 0 = 0.2. The number of prop-erly segmented stroke groups generated by DOCS module depends on the value of T . Figure 19(a) quantifies the frequency of errors due to symbol merges and splits as a function of the threshold. We vary T 0 from 0 to 0.9 in steps of 0.1 and demon-strate the effectiveness of the proposed attention feedback segmentation method on DB1, irrespective of the threshold selected. T 0 = 0 leads to the maximum num-ber of unintentional merges, especially when symbols are written close enough to each other that their bounding boxes are adjacent. For higher values of T 0 ,asignif-icant number of valid stroke groups get over segmented [refer to Figure 19(a)]. Irre-spective of the threshold set, the AFS scheme is able to correct at least 75% of the segmentation errors encountered [Figure 19(b)]. The corresponding improvement in symbol recognition accuracy of the handwriting system for the different threshold val-ues is presented in Figure 19(c). We observe from Figure 19(b) that T 0 = 0.2 gives the minimum segmentation error rate after the AFS step. Hence, we chose this threshold for our experiments and illustrations in this work.

Further, Figure 19(b) shows that while the performance of the DOCS module is sen-sitive to the choice of T 0 , the overall segmentation performance, after the AFS strategy, is fairly insensitive to the choice of the threshold value between 0.2 and 0.9. Despite a segmentation accuracy of 99.7% with the proposed approach, we analyzed the wrongly segmented words to determine the causes for segmentation errors after the AFS step. These have been enumerated below with the following comments. (1) It was observed that segmentation errors arise in cases where symbols are written (2) Cursive writing in Tamil is rare. Therefore, Tamil words, in which two or more (3) Errors were noted in incorrectly written symbols, comprising large horizontal From Table IV, we observe that SVM recognition on the segmented stroke groups after the AFS step across the 10,000 words yields an accuracy of 88.4%. The relatively low recognition rate (compared to the segmentation accuracy) is attributed to the fact that there are many symbols in Tamil that appear visually similar. With post-processing techniques, (that aim at describing discriminative features between similar looking symbols), one can possible achieve a higher symbol recognition accuracy on the seg-mented stroke groups. For justifying the proposed term attention-feedback, we present an analogy to con-cepts in the area of neuroscience. Studies on visual perception in primates demonstrate the effect of attention on the response of the visual neurons. Feature-based attention [Boynton 2005] biases the neuronal responses as though the attended stimulus was presented alone. Also, shifting spatial attention from outside to the inside of the recep-tive field increases the neuronal responses. Further, studies on visual pathways [Sillito and Jones 2002] show extensive feedback from the cortex to the lateral geniculate nucleus (LGN), which have both inhibitory and facilitatory effects on the responses of LGN relay cells. As evident from the previous sections, in the proposed work, we in-corporate local feature based attention in the AFS module to correct and improve the segmentation of the DOCS module. In addition, feedback based on stroke-based fea-tures as well as the classifier likelihoods are employed to rectify any incorrect segmen-tations by regrouping the strokes. This article presents a novel, script-dependent, lexicon-free, segmentation approach for online handwritten isolated Tamil words. Initial segmentation of the given word is performed by the DOCS module into a set of stroke groups. Attention on certain spatial and temporal features, derived from the characteristics of the script, detect likely split and under-segmented stroke groups, if any. The likelihoods fed back by the SVM as well as known statistics of stroke-group based features corrects the wrongly segmented stroke groups in the AFS module. The results of our proposed methodology have been presented on a challenging data-set of 10,000 words.
 It is to be noted that the statistics of features and likelihood were derived from the IWFHR database of isolated Tamil symbols. That they work reliably for segmentation of word level data written by a completely different set of people shows the promise of the general applicability of our approach to any database of handwritten isolated Tamil words.

Given that there is no prior work done in segmenting online Tamil words, it is dif-ficult to compare our method to a benchmark. The segmentation scheme proposed for cursive Bangla words in Bhattacharya et al. [2008] and Fink et al. [2010] cannot be ex-tended to Tamil, owing to major structural differences in the scripts. To the best of our knowledge, this is the first work directed at addressing the practical issues in Tamil online handwriting segmentation.
 The list of 155 Tamil symbols used in this work  X  Vowels 2  X  Pure Consonants  X  Base Consonants  X  CV combinations of vowel  X  CV combinations of vowel  X  CV combinations of vowel  X  CV combinations of vowel  X  Additional symbols
