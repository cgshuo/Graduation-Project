 Computing increasingly faces the challenges of building systems of components that are heterogeneous in their construction and autonomous in their operation. Cross-organizational business processes and sociotechnical systems are two prominent classes of such systems. We understand the components as agents, and the systems as MultiAgent Systems (MAS). Broadly, autonomy means that each agent may act independently of another, though such independence may be imperfect. Heterogene-ity refers to the diversity of agent constructions, not just in terms of programming languages and platforms, but in terms of goals and business policies. We understand MAS as being inherently open : in general, MAS are designed in terms of roles and the communications among them without reference to any specific agents.

MAS are distributed systems. As such, we must characterize the communications among the member agents in a clear, standardized manner so that they can interoper-ate despite being independent in design and operation. In specific application domains, researchers have developed protocols that regulate the functioning of a MAS, for in-stance, for negotiation [Rosenschein and Zlotkin 1994], argumentation [McBurney and Parsons 2003], digital media rights management [Bing 1998], virtual marketplaces [Sierra 2004], virtual enterprises [Hardwick and Bolton 1997], and virtual organiza-tions [Foster 2001; Hormaz  X  abal et al. 2009].

The preceding specialized examples have led to more general formulations that help us understand how MAS differ from traditional distributed systems and how Agent Communication (AC) differs from communications in traditional systems. Traditional software engineering can accommodate distributed systems whose components are not autonomous. For example, a bank X  X  information system may involve transactions over multiple databases in different geographic locations. Concurrency control methods can ensure that the various databases remain mutually consistent if they behave exactly as specified, which is viable only if they are homogeneous and not autonomous.
However, the autonomy of the agents makes a MAS more than just a traditional distributed system. For example, when a bank initiates a settlement transaction with another bank, two autonomous parties are involved with diverse internal processes, and possibly with conflicting goals. Neither can force the other to behave in a specific manner. Therefore, our only recourse is to specify communication protocols among the banks and offer guarantees of correctness modulo the protocols being followed properly by each bank.

Further, whereas in a traditional distributed system the meanings of any commu-nications can be hidden in the operations and internal states of the components, in a MAS, the meanings of the communications must be explicitly defined. Moreover, the meanings must be public in order to enable compliance checking. That is, the meanings must not depend exclusively on the internal states of the agents, because we have no access to such. For example, following a traditional distributed systems approach, a settlement protocol would only depict some flow of messages among the banks. Such a specification would say nothing about what it means to settle a trade, that the com-mitments of the banks arising from the trade are discharged. The interpretation of the messages would be left to the banks. Instead, when we conceptualize the same system as a MAS, we would explicitly encode that some of the messages in the settlement protocol carry the meaning of the discharge of one bank X  X  commitment to another.
Clearly the modeling of the communications among agents is central to building effective MAS. The AC research community has yielded many conceptual advances in this area, especially in terms of high-level abstractions and reasoning. However, the impact of these advances has been somewhat muted, and the community itself has failed to grow sizeably.

This article represents an attempt to rectify this situation. It contains a collection of six manifestos written, each of which identifies important concerns and directions in agent communication. We read each other X  X  manifestos, revised our own manifestos, and added rejoinders in order to highlight differences with others and to clarify our own positions. Over the length of this exercise, which began in May 2009, some critical areas of broad consensus emerged. It is our hope that this exercise and its conclusions will point AC research in fruitful directions. We now introduce some important terms used in this article.  X  Messages are the discrete tokens via which communication is realized in MAS.  X  Mentalist semantics ascribe meanings to messages based on the mental or cognitive states of agents. Mental states are often expressed in terms of concepts such as beliefs, desires, intentions (often collectively referred to as BDI ), goals, and so on. In general, the mental state of an agent cannot be observed [Singh 1998, 2000].  X  Social semantics ascribe meanings to messages based on social concepts such as commitments or conventions. As against a mentalist semantics, a social semantics naturally lends itself to observation and verification [Singh 1998, 2000; Pitt and
Mamdani 1999; Fornara and Colombetti 2002].  X  X n Agent Communication Language (ACL) is a lingua franca for MAS. Early ACL efforts such as KQML [Finin et al. 1997] and the FIPA ACL [for Intelligent Physi-cal Agents 2002] were given a mentalist semantics. Later approaches [Fornara and Colombetti 2002, 2003; Jones and Parent 2004, 2007] gave a social semantics to
ACL. A good background on ACL is available in the proceedings of the AC work-shops [Dignum and Greaves 2000; Dignum 2004] and in a critical review by Singh [1998].  X  Protocols define the rules of encounter among agents, although abstractly in terms of roles. Agents adopt roles in a protocol in order to enact it. Traditionally, protocols specify a flow of messages; recent approaches also ascribe meanings to the messages [Yolum and Singh 2002]. As opposed to an ACL, there are typically different protocols for different application domains, and often many protocols within a single domain.  X  X  (social) commitment represents an elementary social relation between two agents.
A debtor commits to a creditor to bring about a specified consequent if a specified antecedent obtains. For example, in the common purchase setting, one can specify the meaning of the offer message as creating a commitment from the merchant to the customer for the delivery of goods in return for payment. Commitments are distinct from arbitrary obligations: commitments may be created, discharged, delegated, or otherwise manipulated only by explicit communication among agents [Singh 1999].  X  FIPA (the Foundation of Intelligent Physical Agents) is a standards body that has for-mulated agent communication standards. This body, now part of the IEEE Computer
Society, has produced the FIPA ACL standard mentioned earlier. Next we give a brief overview of each manifesto.  X  X hopra favors a commitment-based approach to AC. He discusses his recent work on interoperability and agent reasoning, and based on that motivates some direc-tions for AC research. The suggested directions include middleware implementa-tions, business contract modeling, compliance with regulations, and adaptation in open systems.  X  X entahar emphasizes that AC covers not only the question of the right abstractions for expressing communications, but also the question of how and when agents must send particular communications. He suggests that agent designers look into game-theoretic, probabilistic, and Bayesian approaches for answers.  X  X ignum suggests that the flexibility that derives from the meaning-based approaches to AC comes at the cost of increased computational complexity. He advises protocol designers to carefully consider whether application requirements warrant the extra computational cost.  X  X ornara and Colombetti dwell upon issues relevant to institution designers in addi-tion to protocol and agent designers. They emphasize two things: the institutional framework where the communication among agents takes place and the connection between content languages and ACL. They also recommend adopting and extending the languages developed in the semantic Web community for writing specifications.  X  X ones and Artikis, in criticism of the FIPA approach, stress that an adequate account of communication must accommodate the fact that communication is used not only to facilitate cooperation between agents, but also in situations in which competition and deceit play a key role. They state that although the social approach to ACL semantics is necessary, there remain open questions regarding the abstractions necessary to formulate the semantics. In particular, Jones and Artikis suggest that the notion of social commitment alone is not sufficient. They also point to the practical necessity of being able to implement the abstractions employed.  X  X ingh suggests that AC researchers should give up trying to formulate a general-purpose ACL. He claims that the context sensitivity of communications X  X hat the meaning of a communication depends on the context in which it is used X  X ecessarily means that different usage communities will have their own interaction standards.
For purposes of promoting interoperability between communities, Singh suggests researchers formulate a rigorous standard approach to community-driven standard-ization itself.  X  X olum identifies the touchstones of good protocol specifications: flexibility for agents during enactment without compromising the ability to determine their compliance, and context sensitivity. She also suggests taking inspiration from distributed systems approaches for verifying protocol properties.
 Overall, the research directions presented by the authors are relevant for MAS stake-holders and designers, including those involved in standardization, communication middleware designers, individual agent designers, and regulators (via the notion of compliance).

As evident from the manifestos and rejoinders given shortly, the authors represent a diversity of positions. Nonetheless, there are some broad and important areas of consensus among the authors.

Consensus 1. Any semantics for communication in open systems must be under-pinned in social, not mentalist abstractions.

Consensus 2. The FIPA ACL semantics is not suitable for specifying communication protocols in open settings.
 Consensus 3. The notion of commitment is an important abstraction for formalizing AC.

The article first presents all the manifestos, followed by all the rejoinders, followed by some concluding remarks. Commitment-based approaches are the way forward in agent communication research. The benefits are compelling: commitments enable compliance checking without unduly undermining an agent X  X  autonomy [Singh 1998].

My recent work on commitments has tended toward two principal directions: one, formalizing the computation of commitments in asynchronous settings; and, two, ap-plying commitments in agent reasoning.

Build middleware. Many AC approaches, even those based on commitments, as-sume synchronous communications. Synchrony essentially orders the communications among agents so that the state of the conversation may be easily computed. However, in any real MAS, communication would necessarily be asynchronous. Messages from different agents may cross in transit and agents would in general observe different messages. Further, each agent would maintain a local state of the conversation based on its own observations; there would be no global state. Needless to say, interoperabil-ity among agents becomes especially challenging in such settings. For example, even in a simple purchase interaction between a customer and a merchant, the customer X  X  observations may lead it to infer that the merchant is committed to it for the delivery of goods; however, the merchant X  X  observations may lead it to infer that it is not com-mitted. I have recently formalized the set of commitment operations in a manner that avoids the aforesaid kinds of interoperability problems [Chopra and Singh 2009].
Based on Chopra and Singh [2009], I outlined a commitment-based middleware and an Application Programmer X  X  Interface (API) for agent development [Chopra and Singh 2010]. Instead of low-level communication primitives such as send and receive ,theAPI would expose commitment-based operations such as create , delegate , update ,andso on, and support listeners for commitment-related events.

Addressing challenges of interoperability in asynchronous settings is crucial to building practical applications. Further, interoperability must be tackled at the level of the communication abstraction employed: interoperability based on commitments [Chopra and Singh 2009] is just the beginning. Further, if AC research is to have an impact on application development, the computational rules that guarantee interoper-ability must be implemented in a middleware that exposes a correspondingly high-level API.

Pursue adaptation as a social phenomenon. Most of the literature on commitments is about specifying protocols; agent reasoning that takes commitments into account has not received much attention. By agent reasoning, I refer to questions of when an agent should make or request a commitment, whether it can feel reasonably confident about satisfying its commitments, and so on. In some recent joint work, I have begun to address these questions [Chopra et al. 2010]. An agent would reason about its goals and try to set up commitment with others so that it would be reasonably assured of satisfying its goals. I built upon this idea to support adaptation via commitments [Dalpiaz et al. 2010]. This work formulates the notion of a strategy for a goal in terms of the commitments required; adaptation amounts to switching strategies when some specified conditions on goals are met.

Model-based adaptation is an emerging research area [Zhang and Cheng 2006]. Ex-isting approaches to adaptation are conceptually centralized. This includes autonomic computing and self-* approaches, for example, Garlan et al. [2004]. Such approaches are promising for traditional component-based systems. However, centralized approaches are not applicable in many interesting classes of applications such as service-oriented and sociotechnical systems, wherein the components are business and social partic-ipants. Instead, these applications necessitate consideration of the social aspects of adaptation, such as the commitments among the participants. This is an area where AC advances could have a significant impact.

The strength of the AC community lies in its focus on the semantics of communica-tion, especially the use of high-level abstractions such as commitments. As the broader software engineering community turns to open systems, the AC community can have a broad impact by simply playing to its strength.

Reason about compliance with regulations. Software engineering is increasingly con-cerned with the question of compliance with regulatory frameworks such as HIPAA and Sarbanes-Oxley [Daniel et al. 2009; Siena et al. 2010]. The challenge is twofold: one, how to determine the compliance of an organization with regulations; and, two, how to design an organization X  X  information systems such that it is likely to be com-pliant with the regulations. Conceptually, regulations are largely commitments from organizations to governing bodies; compliance then becomes a matter of detecting com-mitment violations. Current approaches, however, disregard commitments and instead rely upon low-level abstractions such as workflows.

Model Service-Level Agreements (SLAs) and business contracts. SLAs [Skene et al. 2009] and regulatory frameworks are both kinds of business contracts. In general, business contracts may be viewed as highly stylized protocols: besides the clauses that explicitly deal with the commodities or services that are exchanged, a contract typically contains clauses for quality of service, auditing, contingencies, compensation, dispute resolution, modification and termination, and so on. Clearly, every commitment is a contract; however, it is worth exploring whether we can express complex business contracts in terms of commitments.

To summarize, I believe applying high-level concepts developed by the AC community to high-profile challenges such as adaptation, compliance, and business contracts X  X y way of modeling, tool support, and implementations X  X ould help the AC community gain broader visibility and traction. As highlighted in the Introduction, many proposals have been put forward to formal-ize AC. Some are based on mental abstractions [Cohen and Levesque 1990]; some are based on social abstractions [Singh 1998; Colombetti 2000; Chopra and Singh 2004]; yet others feature a combination of mental and social abstractions and argumentation [McBurney et al. 2002; Bentahar et al. 2004; Prakken 2005; Mbarki et al. 2007]. How-ever, the main issues of AC X  how and what to communicate X  X ave yet to be adequately addressed. These issues may seem obvious; however, they hide many challenges and complex details.

The first issue implies the need for an artificial language that artificial agents can use. However, since agents are intended to support and work closely with human users, the language needs to be understandable by these users. For example, in e-business settings, agents can assist humans in negotiations; they can also negotiate with or on behalf of them. It would be especially beneficial to applications if the language had a formal and verifiable semantics [Bentahar et al. 2009b], and if it would be struc-tural, expressive, and extensible. Having these properties in ACL is beneficial for both users X  X o they may understand the interactions agents engage in X  X nd agent and MAS developers X  X o they may develop agents and agent systems that can communicate. De-velopers would also be able to verify whether the language satisfies some properties using formal methods. Developing such a language is far from easy, and whether a unique and universal language would be possible, and whether it would even be de-sirable are the pressing questions. Many issues would be trivially resolved if all agent developers could agree on such a unique standard language. However, many factors preclude concretizing this ideal thinking. For instance, many approaches with different foundations and purposes have been specified for AC (mental, social, institutional, or a combination of all) and there is no consensus on which one to adopt. Which formalism should be used for defining the language semantics is another unsolved problem pre-venting the definition of a universal language. Besides comparing the situation with human languages to understand why one unique language is not realistic, we can sim-ply consider the multitude of computational programming languages, even inside the multiagent community. Many languages are then likely to be developed, and this makes evaluating them interesting for the benefit of agent and MAS designers, developers, and controllers. Providing the evaluation criteria for these languages and specifying rules to translate messages from one language to another would help designers and developers select the appropriate language and would also make the interoperability of heterogeneous systems easier.

The first issue also implies the use of protocols. Agent communication protocols should be specified to be flexible because of the autonomy of agents. This means that, unlike protocols for distributed systems, the issue here is not on the possible sequences of allowed messages. In fact, what the protocols should specify is still an active re-search area. Supporters of the social approach argue that protocols should be specified in terms of social commitments, because  X  X y specifying the states that need to be reached in terms of commitments, they (i.e., commitment protocols) can allow multi-ple paths to achieve a state, and consequently create a flexible protocol specification X  [Mallya and Singh 2007]. This approach seems to be promising, but specifying all the possible reachable states turns out to be intractable, which makes the protocol hard to manipulate. It would be more reasonable to specify not what is allowable for an agent to do, but what is forbidden. Generally, the forbidden space is much more restricted than the allowable one. The idea is to have protocols specify the minimum rules the agents should respect. Agents need to be free to do whatever they want as long as the main rules are respected. Such an approach would be beneficial for agents themselves and for protocol designers and developers. However, as mentioned by Dignum in his manifesto (Section 4), being flexible probably means being computationally expensive. To develop tractable and efficient protocols, a balance between flexibility and compu-tational complexity should be assessed depending on the application context; however, being able to quantify flexibility is an issue yet to be addressed.

The second question is about agents X  decision making: where, which move to play, and what information to reveal are the key elements. In fact, many proposals for agent com-munication focus on protocol specifications, but only a few focus on how protocols should be used. Agents can share protocols, but they execute them in different ways depending on their private strategies [Bentahar et al. 2009a]. Investigating strategic issues in AC will open this field to other disciplines or techniques such as game theory, mechanism design, and learning. Game theory has been largely used in negotiations, but in other dialog and conversation types, it has not been deeply investigated. Also, when communi-cating, agents are not always telling the truth, and what they reveal depends on whom they are communicating with. Further, they could violate their commitments. Defin-ing game-theoretical and mechanism design incentives within protocols to motivate agents to behave trustfully is another important direction for future research [Khos-ravifar et al. 2010]. Considering AC as a decision-making problem means facing the uncertainty problem, which can be managed using learning. Probabilistic and Bayesian approaches can provide interesting techniques to advance the state-of-the-art. The two aforementioned questions raise also the issue of theoretical foundations. Many approaches in AC are based on speech act theory [Searle 1969], in which commu-nication is considered as a sequence of actions called communicative acts. This theory has provided a classification of communicative acts that has been used to define per-formatives for AC. However, speech act theory is a theory for discourse, which captures mostly mental perspectives, and AC is about (social) dialogs and conversations. A rigor-ous theory of dialogs and conversations is more appropriate for practical AC. In philos-ophy, developing such a theory is still an open and very challenging research problem [Vanderveken 2005]. An interesting classification of dialog types is proposed in Walton and Krabbe [1995], and many developments in argumentation have been made based on this classification. In the context of AC, this represents many challenging issues, for instance: (1) developing communication protocols for these dialogs [Amgoud et al. 2000, 2006; Dignum et al. 2001; McBurney and Parsons 2001; McBurney et al. 2002; Rahwan et al. 2003; Atkinson et al. 2005; Tang and Parsons 2005; Black and Atkinson 2009; Tang et al. 2009]; (2) defining rules for runtime merging of two or more protocols and switching from one protocol to another [Reed 1998; McBurney and Parsons 2002; McGinnis et al. 2006; Miller and McBurney 2007]; and (3) analyzing how two protocols for the same dialog type (e.g., persuasion) are similar, so that agents using different protocols can successfully communicate [Johnson et al. 2003; Gerard and Singh 2012]. Although some aspects of these issues have been addressed, still practical develop-ments and deployments within industrial applications are missing and integration of different protocols within a unified theory of dialogs still needs to be investigated.
Another challenging issue in AC is proposing evaluation criteria and metrics. Be-cause AC is very different from communication in traditional distributed systems, evaluation criteria should consider not only the communication mechanism (the pro-tocols), but also the agents participating in these protocols. For example, in the AC context, it is not enough to consider protocol correctness (for example, in terms of deadlock freedom and liveness), but also the correctness of agents X  behaviors (that is, how they use the protocol). For example, in negotiation settings, we could evaluate the goodness or efficiency degree of agents (as in game theory), which means how good and efficient agents are in their negotiation in terms of achieving the best possible deal and how many turns they need to achieve an agreement. This evaluation will allow agent and MAS designers and developers to evaluate and improve their systems; from users and stakeholders X  perspective, the benefit is having a means of selecting the best available systems. Other related questions and challenges are discussed in McBurney and Parsons [2009] in the context of argumentation-based dialog games. In any MAS, agents have to communicate with each other in some way in order to coordinate their actions. Thus it seems obvious that AC is a crucial aspect of MAS research. However, this is not really the case. Some people would say that AC issues have been solved by the use of the FIPA ACL standard, which allows all agents to use the same type of messages. The question is whether the syntax provided by FIPA ACL is necessary (do we need a separate agent communication language?) and if so, whether it is enough. In order to discuss these questions we should examine the purpose of having an agent communication language first. Of course, there are already communication languages that allow for the transmission of information between programs. They range from low-level TCP/IP protocol definitions to message definitions in SOAP for service-oriented applications. So, we have to make an argument that just transmitting information is not enough in this context. One would want to give more structure to the messages in order to distinguish between different types and also make sure that all messages are of one of those types. Let me clarify this with a very simple example. One can send a request to perform a certain action a from one to another agent in the following two ways. (1) send(request, a ) (2) request( a ) (I left out the sender and receiver part of the message to make the focus as clear as possible.)
The main difference is that in the first message the  X  X equest X  is part of the infor-mation that is sent. In general it is therefore not part of the syntax definition of the communication language ontology. So, it is easy to use any type of performative here. This makes this format very flexible, but also nonstandard.

The second message uses the performative as part of the ontology of the communica-tion language and thus restricts the performatives to those that have been predefined.
Why does it make sense to use this limitation? It does make sense if you can do everything you want to do with a limited number of performatives and it also becomes possible to describe some semantics for them. In this case I use semantics in a very broad sense. It means that one can describe the situation in which the use of a message with such a performative is appropriate and what the (expected) results will be of its use. The advantage of doing this is that, if this semantics is accepted then it becomes possible to formulate general rules about the use of message types. Those rules are not dependent on the particular protocol in which the message is used. Thus an agent can evaluate the current situation and on the basis of that situation decide which message types it could use (appropriately). This allows for a far greater flexibility in cases where the agents might not know the exact protocol the other agent is using.

In general what happens is that by the preceding move, semantics implicit in the code of the protocol that the agents were following to communicate is put in the general communication language (in this case in the semantics of the performatives that are defined for the language). In some sense this semantics becomes part of the general context of the agents. Whereas first they had to agree upon the exact protocol they used to communicate, they now have to agree upon the semantics of the performatives. Because the agents do not have to agree upon the exact protocol they can be much more flexible in their communication. However, this only holds as long as they agree on the semantics of the communication language they use!
The idea of agent communication languages has been that the message types are based on performatives as used in speech act theory. Although the performatives have been described in speech act theory, this was only done informally in terms of things like intentions, purpose, and so on. Although these terms could be related to agent concepts such as BDI, it remains difficult to give a precise semantics of performatives in this way. First the BDI concepts are not uniquely operationally defined. That is, different BDI frameworks use different operational definitions of these terms and thus agents might act differently in these different platforms despite having the same contents in their BDI structures.

Second, it is hard to check the BDI components of the agents, because they are internal to the agent and not (always) available for inspection. So, it is hard to define an objective semantics for each performative.

There have been developments in recent years to replace the BDI type of semantics of performatives by commitment-based semantics. However, this is just shifting the problem to another place. Using commitment-based semantics, one can actually pub-licly determine the effects and preconditions of performatives. However, the effects in terms of commitments do not say anything yet about the consequences of the commu-nication for the behavior of the agents, because the relation between commitments of agents and their behavior is not well defined! One way out of this quandary might be to assume an institutional context that regulates the behavior of the agents according to their commitments. However, this means that agents should be aware of this and agree upon it (either explicitly or implicitly).

The preceding illustrates the general point I want to make. There is a balance between using fixed protocols where very little semantics is needed in the context using a very structured communication language, which can be used very flexibly, but which necessitates a lot of semantics for the language constructs and the context in which the language is used. What we have to make clear is that the advantages of the extra flexibility of the communication warrant the extra complexity that is needed in the semantics. This is certainly not the case in all applications, but is true for open systems where the environment is dynamic. In such systems flexible communication is crucial to keep the system on course to fulfill its main purpose. As remarked in the Introduction, a crucial requirement for an ACL that can be used by agents developed by different designers to interact in open, distributed, and competitive scenarios, is having a semantics strongly independent of the internal structure of the interacting agents.

A proposal that satisfies this requirement takes into account the objective social consequences and new obligations arising from the performance of a communicative act. A reasonable approach is to formalize the effect of making a communicative act under specified conditions with the creation of a new object: the social commitment between the speaker and the hearer having a certain content. Formal proposals that treat communicative acts in terms of commitments can be found in Colombetti [2000], Singh [2000], Fornara and Colombetti [2002, 2009], Yolum and Singh [2004], and Fornara et al. [2007].

The crucial challenge for commitment-based ACL is improving the definition of their semantics at three correlated levels: content, language, and institutional. Another challenge is specifying an ACL so that agents may reason about the effects of their communicative acts and monitor interaction in order to enforce commitments and norms. Another challenge consists in finding the best way for ACL research to have an impact on other lines of research such as service-oriented computing, grid computing, and business-oriented computing.

The meaning of communicative acts is a combination of the meaning of a sentence in a suitable content language and the illocutionary force indicator. The content language is not completely independent with respect to the illocutionary force. For example, the content of an inform communicative act can be about something that happened in the past or something that will happen in the future, whereas the content of a declaration is an institutional action [Fornara and Colombetti 2009]. In a formalization of vari-ous types of communicative acts, defining the boundaries and the interactions between these two components is not a simple task. Existing approaches have tried to model the illocutionary force; however, there is little work addressing the problem of formalizing the content. In previous work [Fornara et al. 2007; Fornara and Colombetti 2009], we modeled the content and the condition of communicative acts (and therefore of commit-ments) by means of temporal propositions that become true or false over a predefined time interval with two different modes. Indeed, there are still interesting open prob-lems such as the complete and efficient treatment of temporal aspects; the detection of repetitive schemes in the content of messages; the semantic distinction between certain communicative acts (such as promises concerning future actions of the sender versus assertions concerning states of affairs); the definition of new communicative acts (such as orders); the treatment of multiparty communication and collective communicative acts; and the formalization of group agreements.

Another aspect of the semantics of communicative acts is that it is crucially con-nected with the institutional framework where the communication takes place. The institutional framework can be used to define: (1) the conventions (e.g., binding the performance of a certain declarative communicative act such as  X  X he auction is open X  to the attempt to perform a precise institutional action:  X  X pening the auction X ); (2) the institutional power that agents need to successfully perform institutional actions; (3) the roles used to abstract from concrete agents that will take part in an interaction (for example, the agent playing the role of auctioneer may have the power to declare open an auction); and (4) the norms used to express prohibitions and obligations that combined with communicative acts may be used to flexibly specify interaction protocols or business processes.

We tackled some of the aforesaid challenges by introducing the OCeAN metamodel [Fornara and Colombetti 2009] for the specification of artificial institutions. Indeed from the institutional perspective there are still open problems such as the problem of extending the model with procedures to enter and exit from an institutional context and in particular assign or dismiss roles or institutional powers, and the problem in the definition of an interaction framework involving more than one institution. What happens if a given institutional action is regulated by two or more different institutions? What type of actions and roles can an institution regulate? Is it possible to create a shared repository of artificial institutional specifications? Does it contain very abstract institutions (for example, the institution of property or the institution of auctions), or more specific artificial institutions (such as the institution of English auctions or Dutch auctions)? What is the relation between an abstract artificial institution and a more specific one?
Another aspect that needs to be investigated in order to tackle these challenges is the choice of the formal languages used to specify the content language, the ACL, and the institutional framework. The adopted formal languages have to be internationally known and standard and they have to be (at least partially) logic-based languages to enable building agents than can reason about and monitor their interactions [Fornara and Colombetti 2010]. We think that the languages proposed by the semantic Web com-munity, in particular OWL2 1 and SWRL 2 , may prove useful in tackling this challenge. Even though OWL is expressive, reasoning is still decidable. Efficient OWL reasoners (such as HermiT and Pellet) are freely available and widely used, and those languages are supported by tools for ontology editing (such as Protege) and libraries for automatic ontology management (such as OWL-API) 3 . Moreover, semantic Web technologies are increasingly becoming a standard for Internet applications and thus allow for a high degree of interoperability of data and applications, which is a crucial precondition for the development of open systems. Some challenges may arise when trying to perform temporal (OWL has no temporal operators) and constraint reasoning (semantic Web technologies have not been devised for monitoring norms or commitments).

From the point of view of developing industrial applications, we think that the most important challenge, as remarked also by Chopra (Section 2) and by Jones and Artikis (Section 6), is to develop a middleware and a set of APIs that make the adoption of a given ACL immediate or at least easier for practitioners. Finally we hope that the progressive adoption of ACL in sociotechnical systems for mixed human and software interactions (e.g., virtual enterprise applications, workgroup systems, and business process management systems) will allow us to demonstrate the advantages, in terms of flexibility, openness, and robustness, of the systems developed using ACL and insti-tutional frameworks. In about 2001 X 2002, FIPA issued a call for papers describing approaches to ACL that provided a distinct alternative to the FIPA specification. In particular, FIPA sought approaches that did not focus on the mental states of individual agents, but rather on external, publicly accessible factors. It looked as if FIPA, in a moment of clear-sightedness, was considering breaking away from the BDI framework.
Among those who responded to that FIPA call were Jones and Colombetti; Jones presented an early version of a convention-based approach to ACL (more detailed versions appeared in Jones and Parent [2004, 2007]), indicating its relative advantages over the then still unratified (as a standard) FIPA protocols. Disappointingly, despite some enthusiastic responses from some key FIPA players, and despite suggestions that the convention-based approach represented far more faithfully than FIPA X  X  the way engineers designed communicating agents in multiagent systems, FIPA decided not to follow up; a few years later the intention-based model of interaction [Grice 1957; Cohen and Levesque 1990; Breiter and Sadek 1996] was duly enshrined as the FIPA standard.
The time is ripe to revive some unfinished business. Importantly, we need to draw up a set of benchmark criteria-of-adequacy for an acceptable formal model of ACL, and then critically assess FIPA alongside alternative approaches in relation to these criteria.
 First, we suggest that the criteria should include consideration of whether a given ACL exhibits sufficient generality to cope not only with cooperative communication scenarios (for which, apparently, intention-based models were primarily designed), but also with scenarios in which communication may be strategic and deceitful, as, for instance, it may be in commercial and other domains in which competition, rather than cooperation, dominates.

Second, we must identify the concepts needed for the specification of each interaction type. In open systems X  X ystems in which there is no access to the agents X  code, and where agents do not necessarily share a notion of global utility X  X CL should surely exhibit a  X  X ocial semantics X , that is, make no assumptions about the internal archi-tectures of the agents. There is no consensus, however, on the concepts that need to be explicitly formalized in each protocol class of open systems. For example, we need to determine whether a negotiation, an argumentation, or a voting protocol for open systems, such as those presented in Pitt et al. [2006], Artikis et al. [2007] and Artikis and Sergot [2010], can be adequately specified in terms of social commitments, or if it is necessary to represent additional normative notions, such as institutionalized power and entitlement.

Third, ACL specifications need to have direct routes to implementation in order to support the design-time and runtime activities of multiagent systems. It should be possible to execute an ACL specification in order to prove properties of the specification, possibly at design time, and, at runtime, compute the interaction protocol state, and explain the effects of a communicative action. Consequently, it should be possible to devise reasoning algorithms, supporting a formalism expressing an ACL specification, allowing efficient and scalable execution of the specification.

The pursuit of a model of ACL, largely free from the anthropomorphic mentalese of the BDI framework, should also consult recent work on the evolution of animal communication, as a potential source of ideas on how to characterize the communicative behavior of software agents, to whom the ascription of mental states is methodologically and philosophically problematic. Consider, for instance, the following statement [Searcy and Nowicki 2005, page 5].
 It is obvious that communication is inherently a matter of convention. Each application scenario or domain identifies a community of practice of interacting parties who must define the structures and meanings of their mutual communications so as to inter-operate successfully. Specifying the structures formally is conceptually trivial. But a consequence of the autonomy and heterogeneity of the communicating parties is that, to support interoperation, we must precisely specify the meanings of communications as a basis for judging their compliance.

There are three main families of approaches for addressing meaning. An informal approach supports flexibility through ad hoc meanings but offers no support for com-pliance. Further, it risks proliferating dialects, thereby exacerbating the problems of developing and maintaining interoperating systems. A mentalist approach presup-poses a specific cognitive implementation architecture to specify meanings in terms of cognitive concepts. In effect, it supports each party interpreting communications id-iosyncratically according to its mental state, thus precluding judging compliance based solely on observed interactions. A social approach specifies meanings in terms of social state (formalized via commitments or conventions). The meanings yield criteria for judging compliance despite being high level.

Successful interoperation in an open system presupposes not only that we be able to judge compliance, but also that the communications among its members be stan-dardized. Importantly, not only is the essence of communication social, the essence of a standard X  X ny standard X  X s social as well. Standards for AC thus exhibit a dou-ble relationship with social concepts. The informal and mentalist approaches ignore both aspects. The social approaches handle the first. Existing approaches largely dis-regard the second: how a community develops, adopts, or maintains a communications standard.

Communication is inherently sensitive to its social or organizational context. But con-text sensitivity is at odds with standardization: how may we reconcile the two? I claim there cannot be a globally valid  X  X tandard X  definition of AC primitives. Researchers should give up looking for such definitions. Instead, I advocate a methodology by which a community of practice would create and maintain its own dialect . Moreover, I draw attention to key conceptual matters that otherwise are lost in the technical details. Existing approaches share the thesis that there is a small set of AC primitives, each with a unique meaning that we can formalize. Typically, each approach considers about half a dozen primitives based on the major types of communicative acts, such as informatives and directives. The idea is that agents would use such primitives as message types. For example, an agent may send a FIPA inform and the recipient would know what it means based on its official definition.

However, communications in practical applications demonstrate great variety, and do not readily map to predetermined AC primitives. For example, a price quote may map to an informative (of the last traded price, as in a stock market), a commissive (as a firm offer, as in a typical store), an informative and a commissive together (as the last bid price, exceeding which would give you precedence, as in an auction), a commissive along with an additional commissive about the quality of the quoted deal, and so on. Each domain is unique. For example, a resource-sharing organization may involve communications such as contribute a resource and withdraw a resource , each with a meaning specialized to the organization.

In contrast with existing approaches, I claim that there is no definitive X  X nd adequate X  X et of communicative act types with globally valid meanings. The tradi-tional half-dozen AC primitives are merely idealized patterns of communication: use-ful as test cases but incomplete for practical purposes. Meaning is primarily pragmatic and arises from usage within communities of practice [Singh 2002], which associate the communications with suitable institutional actions [Searle 1995].
 The foregoing suggests that a crucial practical challenge is assigning a meaning to each domain-specific AC construct viewed as an institutional action. In particular, the meanings of institutional actions are naturally expressed in terms of their effects on the social state, for instance, using commitment operations such as delegate [Singh 1999] as alternatives to the AC primitives. Each community of practice must determine these meanings, in essence, defining its dialect as a local or, more precisely, a communal stan-dard. For example, a resource-sharing community may define its communal standard including communications such as contribute a resource and withdraw a resource .What are the requirements that such a standard imposes?
First, the notion of a standard is intimately tied to compliance : it must be clear when an agent complies. This means each community must define the meanings of its stan-dardized communications in terms of social state. Second, extensibility is crucial, espe-cially when we consider standards from the perspective of a community. Extensions, of course, go against the very notion of a standard. Specifically, a standard is subverted by the spurious proliferation of extensions to it. Conversely, the elements or vocabulary of a standard may be overloaded, thereby delegitimizing their conventional meaning. Cur-rent approaches invite such overloading: often, a single AC primitive such as the FIPA inform or the KQML tell may be used for every communication. Third, context sensitivity is essential for flexibly accommodating a community of practice that may emerge from existing communities. Context sensitivity requires support for introducing meanings crucial for specific purposes, ideally while maintaining the greatest backward compati-bility. The preceding challenges pull us in different directions: preventing proliferation restricts extensions, and preventing misuse limits context sensitivity.

Accordingly, I propose a metastandard by which a community can maintain its (po-tentially, narrow) communal communication standard. Specifically, I propose standard standards operations to refine a set of AC constructs. These include the following.  X  Add a new AC construct, ensuring its uniqueness in formal semantic terms, by declar-ing its meaning in terms of operations over social states. For example, a resource-sharing community may introduce sublease a resource with its meaning specified using assign [Singh 1999].  X  Specialize an AC construct: identify a subcontext, and associate the construct with a new set of operations that refine the original meaning. For example, sublease a durable resource may augment sublease a resource with the creation of a com-mitment to return the resource upon conclusion of the usage session.  X  Generalize an AC construct across multiple contexts: identify a supercontext, and associate the construct with a new set of operations that expands the original. Each community identifies a context within which it adopts the appropriate standard. I envision that designers would specify AC constructs and contexts collaboratively, potentially facilitated by tools that help them capture and reason about both formal specifications and informal or semiformal arguments. A community would maintain its standard as long as it lasts. The prototype Colaba tool [Chopra and Singh 2011] hints at how a tool for AC standards might function.

In passing, I note that the conventional as opposed to the intentional view of com-munication has support in Austin X  X  [1962] initial writings on the subject. Marina Sbis  X  a [2007] discusses how some of Austin X  X  key intuitions were misinterpreted by later authors, including Searle [1969]. Open multiagent systems consist of autonomous agents that communicate. By defi-nition, communication should help agents exercise their autonomy. Techniques used for traditional distributed systems X  X n which nodes are not autonomous X  X re mainly targeted for enumerating possible message sequences, without considering message meanings. Hence, they are not well-suited for realizing AC.

Flexibility . Contrary to traditional distributed systems, multiagent systems consist of autonomous agents as nodes. Autonomy implies that each agent can decide what is best for itself. The protocol cannot and should not dictate to an agent when to send a message, what the content should be, and so on. Each agent knows its own context, own internal constructs, and own goals. Only the agent itself can decide on the message that it will construct in a particular setting. Therefore, contrary to the protocols in distributed systems, multiagent protocols should be specified flexibly so that agents can exercise their autonomy by making choices or by dealing with exceptions.
Compliance . At the same time, agents should be accountable for their actions. A mul-tiagent system should be able to decide if an agent has followed a protocol correctly. That is, there should be mechanisms to verify that agents comply. Compliance should be at the root of AC, since any formalism that does not provide a mechanism for com-pliance is practically useless. However, achieving flexibility and compliance together is challenging. If agent communication is specified with great freedom, verifying whether agents comply with the protocol is difficult: the specification itself does not list every-thing that is acceptable. Hence, we need to come up with specifications that enable flexibility yet make checking compliance possible. In our approach to protocol speci-fication using commitments [Yolum and Singh 2002], we handle compliance through correct manipulation of commitments. That is, agents are said to be compliant if they do not have any open commitments. This can also be understood to mean that agents can act flexibly as long as they honor their commitments.

Context . Context contributes to what messages mean or how they can be used, that is, pragmatics. Multiagent protocols should be able to benefit from the context in which they are being used [Singh 2000]. Generally, works for AC focused on specifying syntax and semantics. These are obviously important, but so is pragmatics. Pragmatics should move to a central role.

Protocol properties . Although multiagent protocols are different from traditional dis-tributed system protocols in nature, the AC research can borrow ideas from distributed systems [Yolum 2007]. Distributed systems have worked on ideas of protocol correct-ness, effectiveness, and robustness. Even though we specify multiagent protocols dif-ferently, we should still have metrics to measure qualitative aspects of the protocol. For example, a system designer or an agent in the system should be able to compare two protocols and conclude that one is more robust than the other. Or, given a protocol, one should be able to detect that the protocol does not provide a safe execution no matter how the agents behave. The metrics or approaches for comparisons will not be identical to those of distributed systems but the intuitions may be similar.

Understanding and formalizing the aforesaid concepts in effective agent communi-cation methods will take us close to achieving coherent, open multiagent systems. Following are the authors X  rejoinders.
 The value of commitments in formalizing AC is not tied to addressing issues of agent behavior; Bentahar and Dignum seem to suggest otherwise. A commitment does not implicitly determine agent behavior; it simply captures a social expectation upon whose failure an agent is said to be noncompliant, that is, first and foremost, the value proposi-tion behind commitments. How an agent behaves X  X hether it fulfills its commitments or not X  X s strictly a matter of its internal design (its policies), not of communication design. Further, what follows noncompliance X  X hether the agent is sanctioned by an institution or let go with a warning or nothing at all X  X s no doubt an important practi-cal concern. However, because commitments give the basis for determining compliance, any such notion of institutional regulation necessarily presumes commitments. One must be careful not to overload commitments with arbitrary modeling and reasoning concerns.
 Using a social (public) approach versus a mental (private) approach to define AC se-mantics is widely accepted, where the social approach captures, as pointed out by Dignum, Fornara and Colombetti, Jones and Artikis, and Singh, not only social com-mitments, but also conventions and institutional and contextual concepts. However, as Yolum points out, AC is not only about semantics but also about pragmatics [Singh 2002; McBurney and Parsons 2009]. When it comes to pragmatic aspects, agent com-munication is nothing but a problem of decision making, which is a core component of any agent X  X  behavior. Having this relationship, I have some misgiving about Chopra X  X  suggestion of separating behavior from communication (Chopra X  X  rejoinder). Consid-ering AC from a pragmatic perspective means other concepts should be integrated, such as argumentation and strategic thinking (for example, using game theory). In this context, BDI notions still have an important role to play.

I agree with Singh, Yolum, and Chopra that compliance is fundamental. However, capturing compliance by resolving all open commitments seems to look at the problem only partially. This is for sure an important aspect of compliance, but agents can also resolve their commitments by using unauthorized actions or by violating some rules to which they have never committed.
 Although we do not agree on all aspects, it seems there is a general consensus that the context of the communication plays a crucial role in how communication between agents should be handled. The shift from using BDI-based semantics to commitment (or more general: social)-based semantics emphasizes the importance of the social context for communication. If a communicative act leads to a commitment then this commitment signifies certain expectations about future behavior. Internally an agent should at least be aware of the commitment and have some kind of preference to comply to the commitment. Externally, if an agent does not comply to a commitment this should trigger some reaction from the other agents or the environment. How this works is part of the definition of the social context. I propose to draw from the work on the specification of institutions, organizations, and norms as social contexts [Dignum and Dignum 2001; V  X  azquez-Salceda et al. 2005a, 2005b, 2008; Aldewereld et al. 2006; Aldewereld 2007]. In this work, a lot of the same issues are discussed and provide a good basis for further work on the specification of communication contexts. Taking into account that the coauthors of this manifesto have different research his-tories and backgrounds, and that only a few of them have had the occasion of working together, it seems to us that the overall convergence is remarkable. We happen to disagree with some of the comments on speech act theory (which certainly cannot be reduced to Searle X  X  work, however important), and also with Jones and Artikis X  position on conventions and commitments. Indeed, we agree that MAS communication is going to be completely conventional (which is not true, on the contrary, for communication among humans, who are able to exploit conventions in creative ways instead of plainly following them). However, in our approach, as well as in Singh X  X , conventions dictate what types of commitments agents create by exchanging messages.

We are fairly reluctant to include a pragmatic level into MAS communication, unless pragmatics is understood as the community-based development of local semantics (as suggested by Singh), which seems to be plausible and, in fact, inevitable. We think that a more general consideration of pragmatic aspects in MAS communication would be inappropriate; the reason is that pragmatics is inherently bound to the understanding of communicative intentions beyond semantic convention, and this is likely to bring us back to the difficult times of BDI-based semantics.

We are pleased to see that several coauthors acknowledge the importance of modeling the institutional context of the interactions. In our approach [Fornara and Colombetti 2009], the institutional context is used to explicitly represent some of the shared con-ventions and rules of interaction concerning commitments, powers, and norms. More-over, even if in open systems it is impossible (and undesirable) to force autonomous agents to fulfill their commitments, the institutional context may be used to specify sanctions or to propagate the reputation value of an agent with the aim of inducing agents to behave in a compliant way.
 We register some doubts about the centrality of commitment in the characterization of communication. First, we believe that convention plays a key role in understanding what makes communication possible, and we fail to see how commitment could itself be the key to analyzing convention. Secondly, we make an observation concerning the communicative act of asserting or stating: while we accept that when an agent makes an assertion there is a sense of ought in which what he says ought to be true, ought is there employed in a way comparable to its usage in, for example,  X  X he meat ought to be ready X  X t has been in the oven for 90 minutes X . Ideally, relative to the function that an act of asserting should fulfill, an assertion is a reliable indicator of what is the case. But that notion of ideality is very different from the notion of undertaking a personal obligation or commitment. (See Jones and Parent [2004, 2007] for further discussion.) Put in more general terms, the distinction we have in mind is that articulated in Kanger [1972], and further developed in P  X  orn [1977], between two types of normative modality: the evaluative modality, used to express ideality or optimality, and the di-rective modality, used to express, in particular, personal obligation. (Kanger had an interesting conjecture concerning the way in which these two types of modality are linked X  X  bridging principle X  X nd P  X  orn developed the basis of a theory of practical reasoning employing, essentially, these modalities and a logic of action.)
As characterized in Jones and Parent [2004, 2007], the conventions that constitute communicative action are expressed in terms of an evaluative normative modal-ity, which indicates what ought to be the case when an instance of a particular communicative act type is performed. By contrast, personal obligations, or commit-ments, enter into the analysis of communicative acts just for the reason that some types of communication X  X uch as promising and ordering X  X nvolve the creation of commitments.
 First, my colleagues in this exercise all agree on the necessity of a broadly public as opposed to a mentalist formulation of agent communication. It is a sign of progress that what once used to be heresy is now unremarkable: there is hope for our field yet. Second, I see increasing recognition of the importance of context, especially in-stitutional context. Context featured prominently in my initial formulation of (social) commitments [Singh 1991] but was largely omitted in subsequent work for simplic-ity. It is now high time to revive and broaden the theme of context. In this light, I agree with Dignum and with Jones and Artikis on the need to expand the study of the institutional aspects of communication. Third, I agree with Yolum that when you incorporate context, there is no evading the fact that you are heading into the realm of pragmatics [Singh 2002], where meaning depends on more than just syntax. Stan-dardizing such meanings is impossible in a context-independent manner, but doing so systematically for each context is the way to go. Fourth, I disagree with Bentahar that we must incorporate reasoning about how or what to communicate into the com-munication languages. The language semantics would support (potentially arbitrary) reasoning but must be understood separately from reasoning. Indeed, what Bentahar seems to advocate is exactly the confusion between public and private and between standard and strategy that led to the problems with KQML and FIPA. Fifth, Jones and Artikis seem to consider practical, but not dialectical commitments: I have sought to formalize both types of commitments in a uniform framework recently [Singh 2008], though the distinction is older. To characterize the normative force that conventions have, we may model them as (possibly dialectical) commitments arising in institutional contexts. To participate in a language community, an agent adopts its conventions by committing to them. Indeed, community standards as I advocate here are nothing but conventions.
 I agree with Fornara and Colombetti on the importance of an ontology for conceptual-izing a domain. The practical aspects of communication will greatly improve with an ontology that clearly defines concepts and their relations. However, it is still important to consider a domain and its conceptualization in relation to a context [Winograd and Flores 1986].

As noted by some of my colleagues, the existence of a middleware that eases the use and extension of available communication constructs is crucial. With such tools, one can also build on top of and even contextualize existing constructs. This can pave the way for realizing multiagent communication incrementally.

I understand Dignum X  X  concern about linking commitments with agents X  behavior. In practice, agents X  behavior will influence and be influenced by commitments and their consequences [Chopra et al. 2010]. I expect this to be an important line of research for building multiagent systems. The foregoing positions identify key themes for AC in the coming decade. The positions indicate some important agreements among the authors. The main point of consensus concerns the need for a social semantics to underlie communication in MAS. In par-ticular, a semantics based on the mental states of the agents would not be viable. The FIPA ACL, based as it is on a mentalist semantics, is therefore not appropriate for specifying MAS.

There is also consensus on the importance of commitments as an important element of AC semantics. The authors recognize though that other normative notions, such as power, entitlement, and so on, may also be applied towards MAS specification. It is important to find out in which situations additional normative notions besides commitments will be necessary.

The manifestos point to many directions for AC research. A few of those, however, stand out for being highlighted in more than one manifesto. These include building a high-level middleware and communication API; focusing on the institutional context and pragmatics of communication; and understanding agent reasoning in view of an agent X  X  commitments and other public conventions.
 In addition to what is reflected in the previous text, discussions at the 2010 AAMAS Workshop on Agent Communication suggest that the authors recognize the need for ef-ficient automated reasoning tools geared toward AC. A research challenge is to balance the computational complexity of the algorithms required against the expressiveness of the formal languages used to assert correctness requirements. Another challenge is to verify the progress of a communication protocol from the perspective of a participating agent.

A common thread in all the manifestos is that they emphasize high-level abstractions for communication. These abstractions are increasingly being applied and evaluated against industrial applications. Commitments especially have been applied to the for-malization of a car insurance process [Desai et al. 2009], foreign exchange transactions [Desai et al. 2007], and RosettaNet [Telang and Singh 2010]. However, runtime and tool support for the abstractions X  X ommunication middleware, APIs, and so on X  X re conspicuously absent. JADE [Bellifemine et al. 1999], a Java-based agent programming framework, partially supports the FIPA ACL by providing message types based on the FIPA ACL performatives. However, JADE does not implement the FIPA ACL seman-tics. This presumably reflects the practical difficulties that arise in  X  X mplementing X  a mentalist semantics more than anything else.

In the absence of runtime and tool support, practitioners find it difficult to apply AC concepts and end up having to model and implement systems involving autonomous parties using traditional low-level abstractions. Thus, they miss out on the opportunity for modeling and implementing software systems as MAS. For example, practitioners specify cross-organizational business processes either as workflows or as choreogra-phies of messages, not in terms of business meanings. The best way to remedy this situation, as some manifestos point out, is for AC researchers to pave the way from theory to implementation, even if only as proofs of concept.

