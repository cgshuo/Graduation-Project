 T he explosion of information makes people more difficult to be able to find out those more relevant to what they need among massive amounts of data and sources. As a consequence, Recommen da tion systems are designed to meet the needs of users X  high -quality personalized services , leveraging various techniques to automatically suggest information items (e.g. books, movies, news, music, locations, etc.) that users are likely to be interested in. Typically, recommendation systems learn users X  preference from their historical record of activities and provide personalized recommendations automat-ically. It has been widely studied and used in both academia and industry. 2
With the booming of location sh ar ing services such as Foursquare , location recom-mendation is becoming emerging research topic. In location sharing services, users are allowed to check in at a venue and leave tips to comment on a venue, which make it possible to learn users X  preference . It is crucial to recommend POIs (Points -Of -Interest) to users. On the one hand, it helps users know new POIs they may like, guiding them advertisements to targeted users and improve business profits. Apparently, users X  his-torical behavior can reflect their preference. Nevertheless, merely using check -in data has its shortcomings especially when the negative feedback was made. Unlike check -in data, customers X  tips about a venu e are more specific, expressing their feeling about a venue. For example, a user may leave a tip like  X  X he meat pie is a pretty good deal! X  to express his/ her positive attitude about a restaurant. On the contrary, we can infer that this person does not lik e the pizza place f or a tip like  X  X his place SUCKS .  X . The state -of -the -art location recommendation approaches consider more about inter -user rela-tionships, getting recommendation results depends on social influence [ 10 -11 , 16 -17 ]. But in fact, location recommendation needs to consider more factors such as geograph-ical constraint, temporal influence, venue category and reviews, etc.

In this paper, we propose a tag -based integrate d diffusion (TBID) recommendation algorithm, providi ng personalized location recommendations with the help of user X  X  check in data, venue information and tips on venues. An extra information besides check in data is used to initialize users X  personalized preference, and a diffusion -based recommendation algo rithm on user -venue -tag tr ipartite graph is applied to capture both social and inter -venue influence. Firstly, we consider both check -ins and comments of venues in user preference model. The text -based sentiment analysis techniques are used to analyze one X  s sentiment in tips and a unified preference model from both check -ins and tips is obtained. Furthermore, venues can construct a similarity according to their features. The tags as features is used, which may describe what an item is, what it is about, or what its characteristics are. Some venue information can be included as tags, namely, categories and tags. On top of that, tips of a venue can also be seen as venue X  X  description, which can be a supplement for venue information. We use text feature ex-tract ion techniques to expand tags for venues. We believe that venue similarity can also influence recommendation performance, therefore, a graph based diffusion model for location recommendation is proposed to capture the influence from both inter -users and in ter -venues.

The rest of this article is organized as follows. In section 2, we briefly survey the related works in recommender systems, especially in location recommendations. Sec-tion 3 detail the proposed TBID recommender system. In section 4, we conduct a series of experiments using data collected from Foursquare for evaluation. Conclusion and f uture work is presented in section 5. The work in this paper is closed related to general recommender system and location recommendation, and some nat ural language processing work is done as well, including sentiment analysis and feature extraction from short text. In the following, we briefly review the related work.

Recommender systems provide suggestions for items to be of use to a user. A wide range of research work has been done in building recommender systems using data mining technologies. The essence purpose of recommendation technologies is estab-lishing the relationship between user and item. Therefore, an intermediary entity is needed since the direct relationship between user and item is always unknown. The type of intermediary entity can fall into three categories: user, item, and feature [ 3 ]. Features -based approaches use features or characteristics of the recommended item as interme-diary entities, moreover, tags can be used as a form of item features to make connection between users and items. In information systems, a tag is a non -hierarchica l keyword item. Tags are generally chosen informally and personally by the items X  creator or by its viewer. Many systems, such as Delicious, music website Last.fm, video we bsite Hulu use social tagging to categorize their information items and help users to share them. There are variety of approaches to build a recommender system with this extra information. First and foremost, tag information can be used in traditional reco mmend algorithm as an extension, such as CF [ 4 ], content -based recommendation. Moreover, these historical users X  activities are usually represented by the connectio ns in a user -item bipartite graph [ 5 ], likewise, tag relevance describes the relationship between a tag and an item in a n item -tag bipartite graph. Therefore, some graph -based model can be used to make a recommendation, such as FolkRank algorithm [ 6 ], diffusion based rec-ommendation algorithm on graphs [ 7 ]. Besides, some other algorithms are well used, such as probabilistic latent semantic analysis (PLSA) approach [ 8 ], tensor factorization [ 9 ]. Experimental results indicate that diversification and novelty of recommendations are significantly enhanced by exp loiting the tag information. Since all these work s have proved that extra accessorial information can be very useful in recommender system, we believe that considering influence between items through tags can improve recom-mendation performance. With the e merging location based services, there has been great research passion in POIs or generally location recommendations. Personalized location recommendation aims to providing users with the most pertinent venues by considering individual X  X  pref-erence. Variou s recommendation algorithm s are used for personalized location recom-mendation such as collaborative filtering [ 10 -12 ], matrix factorization [ 13 -15 ] and rec-ommendation with random walk [ 16 -17 ]and so on. CF models are widely used to make personalized recommendations, LARS [ 18 ] is a location -aware recommender system utilizing the user location information and location -based ratings to produce recom-me ndations. Besides, Ye et al. [ 19 ] proposed Geo -Measured friend -based collaborative filtering (GM -FCF) approach for location recommendation based on collaborative rat-ings of commonly visited places made by social friends and ge ospatial characteristics. considered, exploiting their influences to reco mmend personalized POIs for users. To consider users X  preferences, geographical influence and person alized ranking, Cheng et al. [ 21 ] proposed a unified POI recomme ndation framework, which unifies all of them 4 spatial -temporal context -aware pe rsonalized location recommendation system, offering a particular user a set of location items by considering personal interest, local prefer-ence, and spatial -temporal context influence.

To recommend locations that user maybe interested in, users X  historica l activit ies (e.g. check -in) is important to rev eal their preference. However, merely based on user check -ins may introduce bias on measuring users X  preference as mentioned in the in-troduction. In Foursquare, users are allowed leave tips on venues, such in formation can be well used. Hence, we conduct sentiment analysis of users X  tips to extract their posi-tive and negative feedback about venues, which can enhance user X  X  sentiment and make a more accurate preference. Additionally, keyword extraction method is applied to ex-tract feature from venue tips , along with the information of venues, i.e., categories, tags, description, are used as venue tags. In this paper, we extend a diffusion -based recom-mendation algorithm on user -item -tag tripartite graphs for locat ion recommendation, considering both user social influence and venue feature information, and initialize user X  X  preference by fusing check -in preference and sentiment preference. In this section, we present the proposed tag -based integrate d diffusion model. Firstly, a hybrid preference approach is proposed to initialize user X  X  preference by unifying pref-erence in both check -ins and tips. Secondly, some kind of natural language processing method is done to generate venue tags from venue information and descriptions. Fi-nally, we explain an extended diffusion algorithm on tripartite g raph for personalized location recommendation. 3.1 Hybrid User Preference There is no denying that users X  preference about a place can be reflected in their inter-action with this venue. An efficient way to extract user preference is to learn from a user X  X  historical behavior. For Foursquare users, they interact with the venues through check -ins and tips. In this paper, we propose a fusion approach to combines user X  X  pref-erence, considering both check -ins preference and tip sentiment.

I n Foursquare, users can post tips at specific venues, commenting on their previous experiences as a feedback. Besides, users can also leave tips at some interested venue s, expressing their feeling after knowing basic information from others who actually been there. Instead of some more sophisticated machine learning techniques, e.g. supervised classification, dictionary based sentiment analysis method are used in our work to pro-cess tips. Firstly, the tips are split into sentences and add POS (part of speech) tags to the words in each sentence. Then we obtain a sentiment score for each word by looking it up in SentiWordNet with the corresponding part of speech tag. The ove rall sentiment score is the sum of all the sentiment score of each word in a tip and is normalized into [ -1, 1], where -1 represent the most negative sentiment, while 1 represent the most pos-itive sentiment. The Implementation is based on SentiWordNet3.0 a nd NLTK toolkit. I n this paper, we leverage the overall sentiment score of a tip to evaluate users X  prefer-ence about a specific venue. The distribution of sentiment scores of tips in the US is s hown in the left part of Fig. 1, which is highly centralized a round 0, implying that the sentiment of most of the tips is around neutral. Furthermore , a slight bias towards pos-itive sentiment is also observed, which means people tend to leave more positive tips.
We believe that the number of check -ins reflect user X  X  preference about a venue di-rectly, the more times someone checked in a venue, the more possibility the user will specific information about a user X  X  preference about a venu e, it should be considered together with the check -ins to characterize a user X  X  preference. Therefore, the final pref-erence score can be calculated based on the number of check -ins and sentiment scores equals to the number of check -ins plus 1 point, which means the minimum of the score is 2 point. (2) Sentiment score is used to amend the original score. Original score will be increased or decreased by sentiment score expect that one time check -in circum-stance, in this case, sentiment influence is more important as feedback, since one time activity cannot reveal precise information about user X  X  real feeling about the venue. 
Based on the above fusion criteria, a user -venue preference matrix combining pref-erence extracted from both check -ins and tips is constructed.
 3.2 Venue Tags Generation In foursquare, venues ha ve their detailed information, e.g. description (provided by venue owner), categories, tags. Categories and tags are some key words about the 6 venue tags from these two kind of information after words splitting and invalid words (e.g. stop words) filtering. Besides, the venue description that is regarded as a simple introduction reveals important features of the venue. Moreover, the venue tips can also be seen as description p rovided by users. Feature extraction technologies are used to extract tags from these descriptions. 
The procedure of t ag extraction is shown in as follows . Firstly, the descriptions are venue more than 3, considering words collocation in sentences, bigram words are found toast X . Then we use a numerical statistic term frequency (TF) to extr act important fea-tures of the venue, which means the more times the words occur, the more important words, in this case, we only keep noun as tag in the sentences. Last but not the least, some noise and invalid tags (e.g., stop words, punctuations, letters) are filtered. After extending the original venue tags, some synonyms are merged by stemming the words. extracted from descriptions. 3.3 Diffusion o n Tripartite Graph The tripartite graph representation can be described by two adjacent matrices, A and B, tag  X  E , and  X  AE = 0 otherwise.

Considering a user -venue bipartite graph G U , V , E first, where U and V are user set and venue set, and E is the set of edges connecting users and venues. Suppose that a user X  X  preference on various venues. Since the bipartite network itself is without weight, each venue will averagely distri bute its resource to all neighboring users, and then each diffusion process consists of two steps: first from venue to user, then back to venue. tained as follows after diffusion: Where  X  ^  X  : =  X  3: 4 3 S T is the number of neighboring users for venue  X  : , a n d  X  resource located on  X  : , m is the number of all venues, and n is the number of all users . Given a target user U ` , the initial resource vector f is the ith row of preference matrix. Since the different initial resource vectors for different users have captured the person-alized preferences, the final resource located on venues can reflect the preference of the user as well, connections between venu es are built through users, and those venues with highest scores are more possibly checked in one day. 
Furthermore, the information of venues is also considered besides social influence, which means we should concern about user X  X  personalized interests an d make connec-tions based on venues X  features. Tags enrich the venue information and two venues sharing some common tags are probably have similar features, and users tend to visit places in which some features they like present. Likewise, on the venue -tag bipartite graph, each venue will equally distribute its resource to all related tags, and then each tag will redistribute the resource received to all its neighboring venues. Thus, given the initial resource, the final resource vector,  X  A MM , is: Where  X  b  X  : =  X  :6 c 6 S T is the number of neighboring tags for venue  X  : , and  X  _  X  6 = A S T is the number of neighboring venues for tag  X  6 . r is the number of all tags.
A simplest way is adopted to integrate the diffusion results on user -venue and venue -tag bipartite graphs. The final resource score is defined as a linear superposition f M of and f MM . Where  X   X  0 , 1 is a tunable parameter .  X  M ,  X  MM is the vector derived from Eq. (3) and degenerates to the pure diffusions on user -venue and venue -tag bipartite graphs, con-sider ing merely inter -users or inter -venue influence.

As s hown in the right part of Fig. 1 , a simple example is given to concretely describe the above diffusion process. For a target user, the resource score after user -venue diffu-sion can be obtained as:
Note that this 5  X  5 matrix is column normalized, and t he element in the i th row and j column represents the fraction of resource the j th venue transferred to the i th venue calculated as:
Suppose the initial vector for U T is f = 1 , 1 , 0 , 0 , 1 . The final resource vectors, cor-responding to Eq. (6) and Eq. (7), are: Given  X  , the final score on venues for recommendation can be obtained b y Eq. (5). The venues with top -N highest scores are recommended to  X  T . 8 4.1 Data Description In this work, we use a collection of Foursquare check -ins lasting for 8 months (from 1 October 2012 to 31 May 2013). Since personal check -in information is not available publicly, in other words, they can only be accessed from one X  X  own account. Hence, we collected users X  ID from public dataset published by others, and then captured check -ins by crawling Foursquare user API (But for now, the user check -ins A PI is only sup-ported for the developer self). The whole dataset includes 50,813 users and 3,564,144 check -ins globally, among which there are 21,890 users and 3,176,507 check -ins in the United States. Consequently, we select two big cities in the US, namel y New York and California, and then extract tips of the venues in these two cities, as well as venue in-formation, e.g. category, description and so on. The procedure of data processing is as follows in detail.

Firstly, noise and invalid check -in data was f iltered, at the same time, some check -ins at the same venue happened in an hour were merged. Then we select users as test users who have performed at least one check -in per week (these users are regarded as active users), statistically, check -ins of active users account for 2/3 of the total. In ad-dition, the private venues information was filtered, check -ins which were performed over these venues were also excluded, since private places are not to be recommended. Note that tips maybe observed even user didn  X  X  check in at that venue, since user maybe interested in venue like that and leave a tip depend on others or check -in date is out of our period. The data statistics is shown in Table 1.
 4.2 Metrics Four different metrics are used for recommendation evaluation: Precision, Recall, F1 Score and Novelty. The precision is the proportion of recommendations that are good recommendations. The recall is the number of good recommendations divided by the number of positive results that should have been returned (testing set). The F1 score (also balanced F score) can be interpreted as a weighted av erage of the precision and recall, where an F1 score reaches its best value at 1 and worst at 0. It considers both the precision and the recall of the test to compute the final score. Novelty quantifies the recommend less popular venues. These three metrics are used to characterize the accu-racy of recommendations. To test the algorithm performance, data set for each city is divided into two parts: The training set contains 80% of check -ins of every user and the remaining 20% of check -ins constitutes the testing set. The training set is treated as known information used for learn users X  preference and generating recommendations, while the testing set is used for testing reco mmendation results, metrics are employed here to evaluate if the algorithm performance is good.
Where U is the test users set, R(u) and T(u) represent recommendation venue set and testing venue set for user u, respectively. 
Where k I  X  is the degree of the item I  X  , m is the number of users, L is the length of the recommended list. For a specific user, the smaller the average degree of venues in the recommended list is , the higher the novelty is. 4.3 Evaluation The performance results are calculated with different leng t h of recommendation list. Fig. 2 shows the top -N ( N = 20 ) recommendation performance results (i.e., precision, recall, F1 score) of two datasets for  X   X  0 , 1 . Obviously, when the inter -user influence parameter is set  X  = 0 . 8 , resulting in best performance, othe r cases with different N as well. The F1 score between precision and recall is the harmonic mean of precision and recall, sh aring the same tendencies of them.

In order to evaluate the proposed algorithm for location recommendation, we com-pare the performan ce with classic item -based collaborative filtering and pure bipartite diffusions. The results of New York dataset and California dataset are shown in Table 2, from which we can see (1) diffusion algorithm performs better than item -based CF for location rec ommendation, (2) pure diffusion on user -venue graph (  X  = 1 ) performs better than venue -tag bipartite graph (  X  = 0 ) and (3) integrate d diffusion on tripartite graph (  X  = 0 . 8 ) provide more accurate recommendations than the pure cases. (4) As the length of recommend ation list decreases, the precision increases while the call de-creases, but the F1 score reaches maximum when it X  X  set 20. Note that CF algorithm will meet a situation lacking of recommendation results when the length of recommen-dation list increases, resu lting in a negative impact on the performance.

As is illustrated in the right part of Fi g . 2 , all curves are monotone, which means the algorithm depending more on tags (the smaller  X  is) can provide higher novel recom-mendations. Consequently, usage of tag information can enhance the chance of discov-ering individuals X  interest. It X  X  easy to increase novelty by giving up on accuracy, the 10 goal is making the balance in this trade -off that enhance these aspects while still achiev-ing a fair match of the user X  X  interests.
 In this paper, we propose a sentiment enhanced integrate d diffusion algorithm with the help of tag information for personalized location recommendation. Both check -in dat a and user tips are considered to model user X  X  preference, simultaneously, both user sim-ilarity and inter venue similarity through tags are combined to make recommendations. Experimental results demonstrate that diffusion based algorithm has better perform ance than classic CF in location recommendation domain. Moreover, the usage of tag infor-mation can improve accuracy of recommendations, as well as diversification and nov-elty, indicating the advantage of integration. The parameter  X  is adjustable depends o n the quality of users X  historical activity data and venue tags.

We have considered the social influence and inter -venue influence, while there are some other characteristics that affect the visiting behaviors of users not being taken into consideration, such as geographical influence, temporal influence and so on. The geo-graphical information (i.e., latitude and longitude coordinates) of POIs significantly affects users X  check -in behaviors in that physical interactions are required for users to visit some place, and no one can deny that time is also a very important factor influenc-ing human activities at different times on weekends and weekdays. These factors re-main research for future study.
 References 12
