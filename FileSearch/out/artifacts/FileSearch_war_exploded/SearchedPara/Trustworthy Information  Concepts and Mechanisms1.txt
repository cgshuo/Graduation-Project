
Shouhuai Xu 1 , Haifeng Qian 2 , Fengying Wang 3 , Zhenxin Zhan 1 , Elisa Bertino 4 , Suppose Alice receives a piece of information. To what extent should she trust it? Like most users, she will likely treat it as trustworthy, especially when the information is digitally signed by a peer whose public key is known to her. However, the presence of attacks such as malware and malicious insiders makes such trusting behavior ques-tionable. This example scenario suggests the need for  X  X rustworthy information X  or  X  X n-formation trustworthiness management X , which has been a missing piece of traditional approaches to data and information sharing. This paper is a significant first step towards addressing the problem.
 Our Contributions. First, we propose the concept of  X  X nformation trustworthiness man-agement X  in the context of information netwo rks. Information networks are an abstrac-tion we use to capture the  X  X low X  or  X  X ovement X  of information that is often in the format of messages with respect to some appropriate network protocols. Second, we formulate the abstraction of  X  X rustworthiness graph X  with respect to a piece of information. In a trustworthiness graph, a node represents a principal (e.g., a user or organization), and an arc represents the transmission of messages (containing information) between the nodes. Many mechanisms are needed fo r managing trustworthiness graphs. We investigate two useful mechanisms: (1) We identify a new kind of cryptographic primitive we call  X  X rove-nance digital signatures X  which goes beyond the standard concept of digital signatures by preserving the history of a message (i.e., a subgraph or subnetwork associated with the message). (2) We identify the need of optimal security hardening. We show that the algorithmic problem in question is NP-hard, but has a good approximation algorithm. Discussion. From a conceptual perspective, the con cept of information networks as well as the resulting notion of trustworthiness graphs are reminiscent of the well-studied no-tion of  X  X nformation flow X  in computer security [7,19], which aims to ensure informa-tion secrecy and integrity. However, there ar e important differences. In particular, we focus on the notion of information trustwort hiness, which is a broader requirement than secrecy and integrity and is, as mentioned above, about embedding security into infor-mation management at the very beginning of information lifecycle (rather than treating any given information as trustworthy). The differences are essential because, for exam-ple, an authorized user can insert a bad data item into a database, which is not trustwor-thy but disseminated to many other participants without violating the information-flow policy in question. While the present paper is in parallel to the recent active research that aims to inject provenance at the Operating System level and at the DataBase level (see, for example, [8,20,16,18,1] and the references therein), it is orthogonal to these studies because we take the perspective of the network that poses a new challenge that nodes in the network (e.g., OS/DB) can be compromised.

From a mechanism perspective, our notion of provenance digital signatures moves a step beyond the recent proposals for securing provenance information. Specifically, [9] investigated provenance integrity in the setting of file systems with an emphasis on the total-order operation-chain provenance of atomic objects (e.g., files). This study was extended to deal with the partial-order operation provenance of compound objects such as records and tables in database systems [22]. Compared with the integrity protection mechanisms presented in [9,22], provenance signatures offer stronger security defini-tion and better efficiency. To see this, we note that the scheme presented in [22], when used in our setting (i.e., network), has the drawbacks of linear increasing of signature size and vulnerable to the  X  X eeling off X  attack. Intuitively, our scheme achieves strictly stronger security because signatures are always aggregated together (i.e., attacker does not  X  X ee X  the individual signatures). Moreover, the  X  X eeling off X  attack has another se-curity consequence on those schemes, which our scheme does not suffer. Specifically, a malicious user by itself can arbitrarily duplicate any prefi x of a received signature so as to fake multiple incoming paths, which could manipulate (e.g., amplify or deflate) the trustworthiness of message it sends to downstream nodes.

From a cryptographic perspective, provenance signatures bear some similarity to (se-quential) aggregate signatures [14,3]. However, we consider partial-order aggregation (i.e., with respect to information networks) whereas the later consid ers total-order ag-gregation. As such, our secur ity definition is strictly stronger.
 Other Related Work. This paper is inspired in part by a recently proposed framework for  X  X rustworthiness-centric information sharing X  [21]. The notion of trustworthiness graph was somewhat inspired by the c oncept of social networks [10,11]. We start with a simple example (Figure 1), which captures what is needed for evaluating information trustworthiness: from which principals an information item is originated; which principals have manipulated and forwarded an information item; which algo-rithms have been used to process an information item. Specifically, P 1 , ... ,P 6 in the graph represent principals, and the arcs indicate how information has moved in the in-formation network. Specifically, suppose P 1 enters message M 1 into the system at time T 1 and P 2 enters message M 2 into the system at time T 2 . At time T 3 , P 3 receives M 1 from P 1 and processes M 1 to produce M 3 . At time T 4 , P 4 receives M 1 and M 2 from P 1 and P 2 , respectively, and processes them to produce a new message M 4 . At time T 5 , P 5 receives M 3 and M 4 from P 3 and P 4 , respectively, and processes them to produce M 5 . Finally, P 6 receives M 5 at time T 6 .

The goal is to help the nodes evaluate the trustworthi-ness of the messages. For this purpose, we first define the notion of information networks in the context of informa-tion sharing and their associated trustworthiness graphs, and then show how the goal can be achieved while requir-ing what support. In what follows, we assume a simple no-tion of time domain, that is, we assume that the domain is represented as the pair ( Z ;  X  ) , where each element of Z is referred to as a time instant and  X  is a total order on Z .
 Also given T,T  X  Z , [ T,T ] denotes a time interval start-ing at time instant T and ending at time instant T .Such model is very simple but it is adequate for the purpose of the present paper. More advanced notions of time in dis-tributed systems have been investigated [12,15] which we will consider as part of our future work.
 Definition 1. (information network) Let [ T 1 ,T 2 ] be a time interval and V ([ T 1 ,T 2 ]) be a set of principals (users, organizations) which exchanged information during [ T 1 ,T 2 ] . Definition 2. (trustworthiness graph of an information network) Let [ T 1 ,T 2 ] be time interval and T be a time instant, where T 1  X  T  X  T 2 . A trustworthiness graph G ( T )= following annotations. If ( u, v )  X  E ( T ) we say that u is an  X  X pstream X  node of v and v is a  X  X ownstream X  node of u . Moreover, each ( u, v )  X  E ( T ) is annotated with a pair ( w
T ( u, v ) , X  T ( u, v )) ,where w T ( u, v ) time T (e.g., based on the trustworthiness of information it has so-far received from u ), and  X  T ( u, v )  X  [0 , 1] is a threshold specified by v .
 Definition 3. (most/least trustworthy path) Given a trustworthiness graph G ( T )= ( V ( T ) ,E ( T )) with annotations and a path p =( v 1 , ... ,v ) , we can define the trust-worthiness of path p as (for example) W T ( p )= number in the interval [0 , 1] . For a given pair of nodes ( u, v )  X  V ( T )  X  V ( T ) ,let P (one of) the most trustworthy if W T (  X  p )= ma x { W T ( p ): p  X  P T } and path p  X  P is (one of) the least trustworthy if W T ( p )= m in { W T ( p ): p  X  P T } . Let us recall the motivating example illustrated in Figure 1. At first glance, one may think that this can be achieved by letting each P i sign the respective subgraph using a standard digital signature mechanism (as in a standard PKI) such that a new signature is attached to last signature. However, thi s approach has two major drawbacks. (1) The size of the resulting signatures linearly increases with the number of signers. (2) A dishonest principal could manipulate the provenance by, for example, dropping some signers who signed in the past. For example, assume that P 1 , P 2 , P 3 and P 4 are honest and that M 1 and M 2 are sent through private channels such that no other principals have access to them. A dishonest P 5 could convince P 6 that M 5 is derived from M 3 received P , M 1 received from P 1 ,and M 2 received from P 2 (e.g., by simply setting M 5 = M which may serve as incentive for information sharing. The problem cannot be solved by requiring that each signer signs the identity of next principal in the graph because, for example, P 1 may broadcast M 1 to a large population of principals, and may not know in advance that P 4 will receive or accept it.

As mentioned above, the scheme presented in [22] suffers from these problems. As we will see, our provenance signatures overcome the above two drawbacks simultane-ously. The basic idea is to utilize some cryptographic aggregation technique to ensure that (1) the size of the resulting provenance signatures (not including the messages as they are needed anyway) is constant and independent of the number of signers, and (2) attacks like the above  X  X eeling off X  one are prevented. While our use of cryptographic aggregation technique can be viewed as a gen eralization of the recently investigated notions of multi-signature, (sequential) aggregate signatures, ordered multi-signatures [5,13,2,3], the generalization is non-trivia l. This is because we have to ensure (extra) un-forgeability with respect to the graph structure, which makes the security proof compli-cated. In contrast, existing schemes cannot assure unforgeability with respect to graph structure and are actually subject to simple attacks (e.g., two corrupt signers can arbi-trarily manipulate their  X  X ositions X ). Moreover, we must allow multiple aggregations of a single signature on the same message (e.g., P 1 sends the same M 1 to both P 3 and P 4 ). Now we describe our provenance signature scheme.
 Setup (1 k ) : Generate a bilinear group G with order 2 k +1  X  p  X  2 k and an associated bilinear pair e (  X  ,  X  ): G  X  G :  X  X  X  G T .Return pp =( e, G , G T ,H ) ,where H : { 0 , 1 }  X   X  G a random oracle.
 Keygen ( pp ) : Randomly choose x R  X  Z p and output a pair of private and public keys ( sk = x, pk = X = g x ) .
 GraphCom ( pp, loc , { G  X  }  X   X  X  ) : On input of public parameters pp , local information string loc =( id i ,m i ,t i ) for a local message m i of trustworthiness t i ,andincom-ing |R| provenance subgraphs { G  X  }  X   X  X  where R X  X  , P i generates a new message m i = alg i ( m i , ification of algorithms alg i and tru i is application-dependent and beyond the scope of the paper. Finally, P i outputs a provenance subgraph G i =(( { G  X  }  X   X  X  ) ,a i ) for its node in G i . Note that if { G  X  } =  X  ,then (( G  X  ) ,a i )=( a i ) . loc =( id i ,m i ,t i ) of message m i of trustworthiness t i ,aprivatekey sk i of P i ,and provenance signatures {  X   X  }  X   X  X  on respective provenance subgraphs { G  X  }  X   X  X  re-ceived from P i  X  X  upstream nodes belonging to R X  X  , P i executes PVrf ( pp,  X   X  ) to ver-ify the individual provenance signatures  X   X  . If any verification fails, abort; otherwise, where  X  i =  X  PVrf ( pp,  X  ) : given parameters pp , provenance signature  X  =( G,  X  ) , the algorithm returns 1 if the following equation holds and 0 otherwise: e ( g,  X  ) ? = Theorem 1. If the BLS signature is ( T ,q s , X  ) -secure under a chosen-message attack, our provenance signature scheme is ( T ,q p , X  ) -secure where where q s , q p are the numbers of the queries to the BLS signing oracle and the PSigning oracle, respectively, and T e is the time cost of exponentiation computation. Given a trustworthiness graph, we want to identify the most  X  X nfluential X  K nodes so as to harden their security. This optimization problem turns out to be related to the independent cascade model in the context of social networks [10]. However, there is an important difference. In the model by Kem pe at al. [10], the influence passes each arc with a probability that is independent of any other arc. In our model, a piece of information passes each node with a probability that is independent of other nodes. We now show that the optimal security hardening problem is NP-hard. The reduction is based on the NP-complete Set Cover problem.
 Theorem 2. The optimal hardening problem for trustworthiness graphs is NP-hard. We now show that the optimal security hardening problem also has a certain submodular structure. A function f (  X  ) mapping sets to R + is said to be submodular if it has the so-called diminishing returns property: for all v  X  V and all A  X  B it holds that This can be exploited to prove that the greedy algorithm produces a solution within an approximation factor of (1  X  1 /e ) ,where e is the base of the natural logarithm [17]. Theorem 3. The function  X  (  X  ) incurred by optimal hardening is submodular. We presented the concept of  X  X nformation tru stworthiness management X  in the context of information networks and the abstraction of  X  X rustworthiness graph X . We investigated a new cryptographic primitive we call  X  X rovenance digital signatures X  and investigate the issue of optimal security hardening in information networks.
 Acknowledgement. This work was partially supported by AFOSR MURI and State of Texas Emerging Technology Fund.

