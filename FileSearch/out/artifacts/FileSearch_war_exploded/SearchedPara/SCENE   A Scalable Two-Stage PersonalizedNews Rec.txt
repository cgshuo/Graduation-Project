 Recommending news articles has become a promising re-search direction as the Internet provides fast access to real-time information from multiple sources around the world. Traditional news recommendation systems strive to adapt their services to individual users by virtue of both user and news content information. However, the latent relationships among different news items, and the special properties of new articles, such as short shelf lives and value of immedi-acy, render the previous approaches inefficient.

In this paper, we propose a scalable two-stage personalized news recommendation approach with a two-level represen-tation, which considers the exclusive characteristics (e.g., news content, access patterns, named entities, popularity and recency) of news items when performing recommenda-tion. Also, a principled framework for news selection based on the intrinsic property of user interest is presented, with a good balance between the novelty and diversity of the rec-ommended result. Extensive empirical experiments on a col-lection of news articles obtained from various news websites demonstrate the efficacy and efficiency of our approach. Categories and Subject Descriptors: H.3.3[Information Search and Retrieval]: Information filtering General Terms: Algorithms, Design, Experimentation Keywords: Multi-level News Recommendation, News En-tity, Personalization, Submodularity, User Profile Web-based news reading services, like Google News and Yahoo! News, have become increasingly prevalent as the Internet provides fast access to news articles from various information sources around the world. With the gigantic amount of news articles, a key issue of online news services is how to help users find interesting articles that match the users X  preference as much as possible, by making use of both news content and user information. This is the problem of personalized news recommendation.

Despite a few recent advances, personalized news recom-mendation remains challenging for at least three reasons. First, the scalability of most news recommendation services needs more research for fast and real-time processing; Sec-ond, news articles are not independent in most scenarios, i.e., browsing one news item may affect the subsequent news reading; Third, the popularity and recency of news arti-cles change dramatically over time, which differentiates news items from other web objects, such as products and movies, rendering traditional recommendation methods ineffective. As a result, many critical issues of news recommendation have not been explored in previous studies. These issues in-clude news selection (i.e., how to effectively select news arti-cles for recommendation considering their unique character-istics?), news representation (i.e., how to effectively present the recommended new articles to facilitate user navigation and exploration?), news processing (i.e., how to efficiently handle large scale news collection?), and user profiling (i.e., how to construct high-quality user profiles?).

In our work, to address the issues mentioned above, we propose SCENE ,a SC alable two-stage p E rsonalized N ews r E commendation system with a two-level representation, where the first level contains various topics relevant to users X  prefer-ence, and the second level includes specific news articles. In our system, we explore the intrinsic relation between users and news articles, along with the special properties (e.g., popularity and recency) of news items when recommending to individual users. Also, the system is capable of efficiently dealing with large scale news corpus.

Specifically, SCENE consists of three major components  X  Newly-Published News Articles Clustering , User Profile Construction and Personalized News Items Recommenda-tion . For news articles clustering, we initially partition newly-published news articles into small groups by making use of Locality Sensitive Hashing [10], and then hierarchically sepa-rate these groups into intermediate clusters, each of which is summarized using probabilistic language models (e.g., Prob-abilistic Latent Semantic Indexing (PLSI) [12] and Latent Dirichlet Allocation (LDA) [3]). For personalization, the user X  X  profile is constructed in three different yet related di-mensions  X  news topic distribution, similar access patterns and news entity preference. Based on the generated topic distribution, we sequentially select news clusters similar to the profile of a given user as the first level of the result rep-resentation. In each news cluster, the submodularity hidden in different dimensions of news articles motivates us to in-corporate this property into our solution to the second level of the representation. Extensive empirical experiments on a collection of news articles obtained from various news web-sites demonstrate the efficacy of our approach, in terms of the accuracy of selected top ranking news items and the diversity of the recommended news list.

In summary, the contribution of this paper is three-fold: In addition, we integrate locality sensitive hashing and hi-erarchical clustering to address the scalability issue in news processing (See Section 4). The rest of this paper is or-ganized as follows. Section 2 presents a brief summary of prior work relevant to personalized news recommendation. In Section 3, the system framework will be introduced, and the detailed algorithmic descriptions for major components in our framework are presented in Section 4, Section 5,and Section 6, respectively. Extensive experimental results are reported in Section 7. Finally Section 8 concludes the paper.
Recently, recommending news articles or other document-format web objects has attracted more research attention. Several adaptive news recommending systems, such as Google News and Yahoo! News provide personalized news recom-mendation services for a substantial amount of online users. Existing news recommender systems can be roughly catego-rized into two different groups: content-based and collabo-rative filtering.

Content-based : The systems try to sequentially find newly-published articles similar to the user X  X  reading his-tory in terms of content. Generally speaking, news con-tent is often represented using vector space model (e.g., TF-IDF) [15], or topic distributions obtained by language models (e.g., PLSI and LDA), and specific similarity mea-surements are adopted to evaluate the relatedness between news articles. For example, News Dude [2], is a personal news recommender agent that utilizes TF-IDF combined with the K-Nearest Neighbor algorithm to recommend news items to individual users. Another content-based method is Newsjunkie [8], which filters news stories by formal mea-sures of information novelty, and shows how the techniques can be used to custom-tailor newsfeeds based on a user X  X  reading history. Content-based recommender systems are easy to implement; however, in some scenario, simply rep-resenting the user X  X  profile information by a bag of words is insufficient to capture the exact reading interest of the user.
Collaborative filtering : The systems make use of news ratings by users to provide recommendation services, and in general, they are content-free. Note that news ratings are typically binary; a click on a piece of news corresponds to a 1 rating, whereas a non-click is represented as a 0 rating [7]. In practice, most collaborative filtering systems are constructed based on users X  past rating behaviors, either using a group of users  X  X imilar X  to the given user to predict news ratings [22, 23], or modeling users X  behaviors in a probabilistic way [13, 21]. Collaborative filtering systems can efficiently capture users X  behaviors in case where overlap in historical consump-tion across users is relatively high and the content universe is almost static [24]; however, in many web-based scenarios, the content universe undergoes frequent changes, with con-tent popularity changing over time as well [18]. Moreover, many online users do not have enough historical consump-tion record, which is known as a cold-start problem [25]. These issues render collaborative filtering ineffective.
As discussed above, content-based and collaborative fil-tering systems can provide meaningful recommendation and in case also have some disadvantages. To get more reason-able results, many researchers investigate the feasibility of combining these two types of methods, and propose hybrid solutions to news recommendation. Representative exam-ples include [4, 5], in which the inability of collaborative filtering to recommend news items is commonly alleviated by combining it with content-based filtering.
 Our work is essentially a hybrid recommendation approach. What differentiates our work from prior methods is that we model personalized news recommendation as a budgeted maximum coverage problem, i.e., the selection of one news item will influence the selection of the following news items. From this perspective, our work is similar to [18], in which personalized recommendation of news articles is modeled as a contextual bandit problem, where a learning algorithm se-quentially selects articles to serve users based on contextual information about users and articles, while simultaneously adapting its article-selection strategy based on user-click feedback to maximize total user clicks. Our work is orthog-onal to theirs in terms of news articles selection, since they focus on the long-term effect of recommendation, whereas our concern is located on single-session recommendation. Our SCENE system is also closely related to EMM News Explorer [1] and Newsjunike [8] in the use of news content and named entities for news recommendation. However, EMM Newsexplorer does not provide personalized services and Newsjunike does not address the news selection, news presentation and scalability issues as we do. Figure 1 depicts a brief framework of our proposed system, SCENE . The recommendation is performed by following a two-stage procedure, where the first stage serves to divide news collection into groups, and the second stage aims to recommend news items. The three major components in our framework are described as follows.

I. News articles clustering : Newly-published news col-lection is initially divided into small groups using LSH purely based on news content. In order to quickly navigate to spe-cific groups, we employ hierarchical clustering with average-link on these small groups. Then, probabilistic language models are applied to summarizing news articles in each in-termediate cluster and small news groups within the cluster. By doing this, a two-layer news hierarchy can be obtained, where leaf nodes denote small groups accompanied by their topic distributions, and internal nodes contain a couple of news groups, representing more general news topics.
II. User profile construction : A user X  X  profile is repre-sented as an integrated information capsule, in which three different yet related aspects  X  accessed news content, similar access patterns and preferred name entities  X  are combined. All these three factors are extracted from the user X  X  read-ing history. Specifically, news content is denoted as a topic distribution of the reading history; similar access patterns are generated by analyzing click behaviors of different users; and preferred named entities are extracted from the history using open source NLP tools, e.g., GATE [6].

III. Personalized News recommendation :Wecom-pare the topic distributions of each intermediate cluster and news content in the user X  X  profile, and then sequentially se-lect the intermediate clusters based on the similarity score, as the first level of the recommendation result. Within each cluster, we continue to compare the similarities between each small news group and the user X  X  accessed news content, and select the most similar group as the base of the second rec-ommendation level. In the selected group, we model person-alized news recommendation as a budgeted maximum cov-erage problem [16], and solve it by selecting news items in a greedy way. Note that when recommending specific news items within each group, the entire user profile is utilized. Moreover, the exclusive properties of news articles, such as popularity and recency, are synthesized into the final news ranking as adjustment factors.
Formally, given a set of news articles N = { n 1 ,n 2 ,  X  X  X  where |N | = M , our goal is to generate a hard clustering result C = {C 1 , C 2 ,  X  X  X  , C K } on N ,where K is a predefined cluster number. Each cluster C i is composed of a list of news groups G i = { G 1 ,G 2 ,  X  X  X } , and each news group G ( |
G j | = t j )contains t j news articles. Each cluster and its news groups are associated with a topic distribution T re-spectively, to describe the latent topics hidden in news ar-ticles. The intuition of this representation is simple: news recommendation requires fast response to immediately show the result to users; representing news articles in such way can help quickly navigate to news articles that the user prefers. In SCENE , the clustering component lies in the first stage.
In reality, large volume of newly-published news corpus requires substantial computational power. For instance, a news corpus with 100,000 news items requires ten billion pairwise comparisons. To tackle this issue, we propose to employ LSH to eliminate unnecessary similarity computa-tions between unrelated articles, and get a rough separa-tion on the original news corpus. In our system, we use a standard Jaccard-based hashing method to find similar news articles. The procedure can be divided into three modules.
I. Decompose news articles to shingles :Toovercome the disadvantages of the traditional bag-of-words model, we use  X  X hingles X  to represent news articles. A k -shingle for an article is a sequence of k continuous words that appear in the article. Before decomposing news articles into shin-gles, a sequence of preprocessing steps, such as removing stop words, tokenizing and stemming, are executed on the original articles. Since typical news articles are in moderate length, we empirically choose k =10toguaranteethatthe probability of any given shingle appearing in any article is low. By shingling, original news corpus can be quantified as a shingle-article matrix M , where rows represent shingles and columns represent news articles.

II. Minhashing : In general, M maystillnotfitinto memory, since the number of news articles tends to be sub-stantial. To handle this issue, we use Minhashing technique to generate a succinct signature for each column in M ,such that the probability that two articles have the same signa-ture is equal to the Jaccard similarity between these two. In our system, we construct a length-100 Minhash signature us-ing the technique detailed in [14]. Note that the randomized nature of the Minhash generation method requires further checks to increase the probability of uncovering all pairs of related articles in terms of the signature. Thus, we utilize LSH to increase such probability.

III. Locality Sensitive Hashing : LSH [10] is employed to reduce the comparisons, where the generated Minhash signatures are initially decomposed into multiple bands, and for each band, we adopt a standard hash function to hash it into a big hash table. In our experiment, we choose em-pirically the band length as 5. We treat columns (or news articles) that are hashed into the same bucket 1 at least once as the similar ones. Finally, the original news corpus can be separated into multiple small news groups.
When dealing with large news corpus, the number of gen-erated news groups by LSH are still substantial, ranging from hundreds to even thousands. To further speed up the selection of news articles, we propose to hierarchically clus-ter news groups based on the average-link cross-cluster mea-surement to provide an elegant global representation of the latent structure of news corpus. Formally, given a number of news groups G = { G 1 ,G 2 ,  X  X  X } , hierarchical clustering produces a dendrogram H of G . With a predefined cluster number K , our system automatically cut H to get K clus-ters. The generated clusters serve to be the base of the first level of news recommendation result.

Discussion : As introduced above, we use  X  X SH + hierar-chical X  clustering to to separate the original news set into multiple clusters. One may argue that such strategy might result in poor performance in terms of accuracy. Alternative ways of grouping news articles involve the standard K-means and hierarchical clustering directly on the original news cor-pus. However, these two clustering techniques are not effi-cient when dealing with large text corpus, and their perfor-mance on accuracy cannot be guaranteed when the dataset becomes larger. Also, when recommending news items, we cannot quickly navigate to a small news group that the user might be interested in by using these two clustering tech-niques. In the experiment, we will verify our claim.
A natural way to explore the correlations between inter-mediate clusters (or news groups) and the given user X  X  profile is to compare the similarity of latent topics underlying their news articles. In general, detecting latent topics of a text corpus is typically done using probabilistic language models, such as PLSI and LDA, by extracting a list of representative words from the original corpus along with the correspond-ing weights. In our system, we employ LDA as the language model to detect latent topics, and represent the topic distri-bution of each news collection located at intermediate clus-ters (or news groups) as a topic vector, each entry of which denotes the weight of the corresponding word.

Discussion : The PLSI model and the LDA model are sim-ilar, except that in LDA the topic distribution is assumed to have a Dirichlet prior . Note that the PLSI model is equiva-lent to the LDA model under a uniform Dirichlet prior infor-mation, whereas the LDA model is essentially the Bayesian version of the PLSI model [11]. Bayesian formulation tends to perform better on small datasets because Bayesian meth-ods can avoid overfitting. In a very large dataset, the results are probably the same. One difference is that PLSI uses
In the experiment, we set the size of the hash table to be 1000, which is large enough to distinguish news articles. avariable d to represent a document in the training set. As discussed in [3], when a model representing a document has not seen before, PLSI fixes Pr ( w | z )  X  the probability of words under topics  X  to be that learned from the training set and infers Pr ( z | d )  X  the topic distribution under d .Blei argues that this step is cheating because the model is es-sentially refitted to the new data [3]. To get a more robust representation of topic distribution, we choose LDA as our language model. A comparison on recommendation results of using LDA and PLSI is provided in Section 7.
In order to capture a user X  X  reading interests on news arti-cles, news recommendation systems start with constructing the user X  X  profile. Traditionally, a user X  X  profile can be de-fined by keeping track of what articles the user has read so far (or called consumption history), mainly based on news content. A comprehensive survey of various user profile con-struction techniques is provided in [9]. However, simply rep-resenting a user X  X  profile as a weighted topic distribution cannot effectively capture the user X  X  exact reading prefer-ence, as the user X  X  interest might be affected by other users. Another reason of the insufficiency of topic representation is that many news readers tend to glance at news articles, interested in some named entities, such as what happened, who involved, when it happened and so on.

Based on the above analysis, we propose to build users X  profiles by the exploration on three different yet related di-mensions  X  news content, similar access patterns and pre-ferred news entities. Each user X  X  profile can be parameter-ized with a three-attribute tuple U = &lt; T , P , E &gt; ,where
Clearly, these three dimensions have mutual interaction with each other. The topic distribution learned from the reading history is likely to be related to the list of entities in the profile, whereas these two dimensions might contribute to the similar access patterns that the two users have. In the following, we will introduce the detailed techniques adopted to construct different aspects of users X  profiles.
In our recommendation system, news articles in users X  consumption history are summarized as a topic distribu-tion, by making use of the same strategy employed in Sec-tion 4.3. The way that we represent users X  reading history as the same as the representations for intermediate clusters (or news groups), guarantees that news content matching is applicable to the first level recommendation.
In reality, many online news readers may exhibit similar reading preference. A user X  X  profile information can be en-riched in a way of analyzing other users X  reading preference similar to the given user, which is essentially collaborative filtering. Under such intuition, we propose to integrate sim-ilar access patterns from other users into the given user X  X  profile. Specifically, each user X  X  reading history is main-tained. Suppose the news collection read by user A and B are N A and N B , their pairwise similarity of access pat-terns is defined as the Jaccard similarity of N A and N B By calculating pairwise user similarities, a similarity matrix can be obtained, each entry of which is the Jaccard simi-larity between two users X  access patterns. The calculation is done offline. Given a specific user u ,anyotherusercan be said to be similar with u if their pairwise similarity score is above a predefined threshold  X  u 2 . By doing this, all the users similar to u are stored in u  X  X  profile.
Typically, in news articles, named entities include when, where, what happened, who are involved, and so on. News readers might have special preference on some particular named entities contained in news articles. Therefore, named entities are important when recommending news items to individual users. To extract named entities, we employ an open source NLP tool  X  GATE[6], which is capable to au-tomatically identify named entities in texts by predefining a couple of entity rules. By default, we use the rules pro-videdinGATE.Afterentitydetection,eachnewsarticle is associated with a list of named entities along with their corresponding entity types.
Personalized news recommendation is oriented from ex-ploring the relations between newly-published news articles and the user X  X  profile. In this paper, what we proposed is essentially a hybrid recommendation method; however, dif-ferent from prior approaches, we provide a two-level rec-ommendation hierarchy, where the first level shows a brief summary for each topic category the user might prefer, and the second level gives a specific list of news articles similar to the user X  X  reading interest. In our system, this component lies in the second recommendation stage.
Once we generate the news hierarchy and the user X  X  pro-file, the first representation level can be obtained by sequen-tially matching the user X  X  profile onto the news hierarchy, and selecting appropriate intermediate clusters. Note that each cluster corresponds to a topic category. For simplicity, we only consider the similarity between topic distributions of each intermediate cluster and the user X  X  reading history.
Formally, the topic distribution is represented as a topic vector T = { &lt;t 1 ,w 1 &gt; , &lt;t 2 ,w 2 &gt; ,  X  X  X } the topic vectors are within the same dimensionality, we create a topic vocabulary V based on the existing topics, where |V| is the total number of representative words. When comparing the similarity between the topic distribution of each cluster, T C , and the one of the user X  X  profile, T U adopt the cosine similarity: where |T C | = |T U | = |V| ,and ||T C || , ||T U || are the l In the experiment,  X  u is tuned to be an optimal value.
The ranking of intermediate clusters is based on the simi-larity score calculated by Eq.(1). In general, people tend to have their preference on topic categories, i.e., not interested in all the topics. Therefore, we choose the clusters with the similarity greater than a dynamic threshold 3 .Afterselect-ing the appropriate clusters, we dig into each cluster and choose the news group most similar to the user X  X  interest us-ing the same strategy for selecting clusters. By doing this, a list of news groups will be selected, as the recommendation base of the second level.
After obtaining news groups that the user might be inter-ested in, the subsequent step is to select specific news articles to present to the user. We initially maintain a news profile for each news article, and then model personalized recom-mendation as a budgeted maximum coverage problem, and solve it by a greedy algorithm.
A news profile includes static descriptors (e.g., topic dis-tribution, named entities) and dynamic characteristics (e.g., accessed users, popularity, recency). Continuous refinement on the news profile will help to optimize the use of the news corpus. For the popularity, it is computed as the ratio of the number of users accessing to the article and the size of the users X  pool. For the recency, the score is represented as ( CurrentTime  X  PublishedT ime ) / (24  X  60).

In SCENE , news profiles are helpful to compare two news articles, and to evaluate how the news item can satisfy the user X  X  reading preference. These two types of comparisons are calculated under the same setup. Given a news profile F n = &lt; T n , P n , E n &gt; and a user X  X  profile F u = &lt; the similarity between F n and F u is computed as where  X  ,  X  and  X  are parameters to control how we trust the corresponding components. Sim ( T n , T u ) is computed by Eq.(1), whereas Sim ( P n , P u )and Sim ( E n , E u )arecalcu-lated by the Jaccard similarity.

Discussion : As noted, three components in Eq.(2) eval-uate the similarities of news content, access patterns and preferred named entities, respectively. In prior approaches, either news content, or access pattern, or their combination is considered. Comparatively, we assign equal importance to these three factors in our recommender system, since they represent different yet related aspects of news articles or users X  profiles. In Section 7, we present our evaluation on the effects of different combinations of these three factors.
Let E be a finite set and f be a real valued nondecreasing function defined on the subsets of E that satisfies where S  X  T , S and T are two subsets of E ,and  X   X  E \ T . Such a function f is called a submodular function [20]. Intuitively, by adding one element to a larger set T ,the value increment of f can never be larger than that by adding
The dynamic threshold is set to be the median of all simi-larity scores with respect to a specific user X  X  profile. one element to a smaller set S . This intuitive diminishing property exists in different areas, e.g., in social network, adding one new friend cannot increase more social influence for a more social group than for a less social group.
The budgeted maximum coverage problem is then de-scribed as: given a set of elements E where each element is associated with an influence and a cost defined over a do-main of these elements and a budget B , the goal is to find out a subset of E which has the largest possible influence while the total cost does not exceed B . This problem is NP-hard [16]. However, [16] proposed a greedy algorithm which sequentially picks up the element that increases the largest possible influence within the cost limit and it guarantees the influence of the result subset is (1  X  1 /e )-approximation. Submodularity resides in each  X  X ick up X  step. A key obser-vation is that submodular functions are closed under non-negative linear combinations [17].
In a particular news group, most of news articles concen-trate on similar or even the same topic, with minor difference on major aspects of the corresponding topic. For example, given a news group talking about a popular movie  X  Incep-tion  X , one piece of news may focus on the actor cast of this movie, while another may describe the high-end techniques used in this movie. Typically, a news reader is interested in some specific aspects of the given topic, but not all of them. Based on this intuition, our news selection strategy can be described as follows (note that N denotes the original news group, S represents the selected news set, and  X  is the news item being selected). After selecting  X  ,
Per the above strategy, we define a quality function f to evaluate the current selected news set S overtheentirenews group N as where n 1 and n 2 denote news items, u represents the given user, and sim (  X  ,  X  ) represents the similarity between two pro-files, either the user profile or the news profile.
In Eq.(4), three components are involved, corresponding to the news selection strategy we list above. The first one aims to evaluate the quality of how representative that the selected news set S is over the original news set; the sec-ond one provides a perspective on how diverse that the top-ics underlying the selected news articles are; and the last component gives us the evidence that how much the user X  X  preference is satisfied by the selected news set S . f ( S ances the contributions of different components. Note that all these three components are naturally submodular func-tions. Based on the non-negative linear invariability of the submodular function, f ( S ) is also a submodular function. Suppose  X  is the candidate news article, the quality increase is therefore represented as follows: The goal is to select a list of news articles which provide the largest possible quality increase within the budget 4 .Hence, personalized news recommendation is transformed to the budgeted maximum coverage problem.

In each news group, a greedy algorithm is employed to solve the budgeted maximum coverage problem, by sequen-tially selecting the news article providing the largest quality increase based on the selected news set until the budget is reached. To integrate recommended news items from differ-ent news groups into the final recommendation list, we select top ranking items within each group, where the number of items selected in one group is proportional to the interest weight of the user on the corresponding topic category.
Discussion : The submodularity-based news selection strat-egy provides us a diverse news recommendation list within each topic category. In addition, multiple topic categories are recommended to individual users, by which the diversity of the final recommendation result is explicitly enriched to a great extent. In Section 7, we will present detailed evalu-ation to verify our claim.
By adopting the greedy algorithm introduced above, we can obtain a list of news articles for each topic category. Taking into account the exclusive characteristics of news ar-ticles, e.g., the popularity and the recency, the ranking of the selected news articles needs to be adjusted in order to make the recommendation result more reasonable.

In our system, the popularity and the recency of news articles are maintained in news profiles, as described in Sec-tion 6.2.1. When doing adjustment on the selected news list, we combine the normalized values of these two types of properties. Formally, given a news article n , the popularity n
P and the recency n I can be combined as Note that the recency is restricted by time; the smaller it is, the higher ranking the article is. Given a ranking list of news articles, we sequentially select two adjacent news items n i and n j from top to bottom, and compare their dynamic score n  X  .If n  X  j  X  n  X  i is larger than 0, we swap the order of n i and n j ; otherwise, we skip them and continue to compare the next article pair. By such minor adjustment, the generated ranking can emphasize more popular and fresh news items, as well as concentrating on news articles that satisfy the user X  X  reading preference.
In this section, we provide a comprehensive experimental evaluation to show the efficacy and efficiency of our proposed news recommendation system, SCENE . We start with an introduction to a real-world news collection obtained from multiple news service websites, and then describe the ex-perimental design based on the recommendation framework introduced in Section 3.
Here the budget can be regarded as the maximum number of recommended items in each news group.
For experiments, we gather news articles along with users X  access history from popular news websites which contain multiple news topic categories, such as sports, movies and politics. We gather the news data for 9 categories on pur-pose, where the data collection ranges from Aug 15th, 2010 to Nov 16th, 2010. In order to embody the role of similar access patterns in users X  profiles, we preprocess the data by removing news articles that are rarely accessed (i.e., the ac-cessed frequency is less than 10 times per day) and by storing users with frequent online reading behaviors (i.e., users who read news articles every day and read more than 10 pieces of news each day). After preprocessing, 112,380 news items are stored, with 4,630 users, each day in average with 1,221 news articles.
SCENE contains three major components: (a) An offline component responsible for periodically clustering news arti-cles published within a time range; (b) An online component of dynamically constructing and updating user profiles; and (c) An online component capable to recommend news arti-cles to individual users based on the generated cluster hier-archy and user profiles. From the experimental perspective, we verify our system components separately, where Compo-nent a is tested in an offline manner, and Component b and c are tested under a unified online environment. In the fol-lowing we will describe the detailed experiments, along with a user study to evaluate the real-world users X  satisfaction.
To evaluate the performance of the clustering component, we provide three different comparisons: (i)  X  X SH + Hierar-chical X  clustering against direct clustering on news articles; (ii) hierarchical clustering against K-means on news groups; and (iii) LDA against PLSI on topic detection.
 I:  X  X SH + Hierarchical X  Clustering V.S. Direct Clustering
We select multiple time ranges with different intervals and run the clustering procedure on news articles from these time ranges. We also impleme nt the general K-means and hierarchical clustering with average-link, to compare the F-measure and the time cost. All the clustering algorithms are implemented using Java and tested under the same experi-mental environment. For K-means and hierarchical cluster-ing, we represent each news article using vector space model, each entry of which is denoted by TF-IDF value of the cor-responding term. For each time range, we execute different algorithms 10 times respectively, except hierarchical cluster-ing, and compare micro-averaging F 1 and macro-averaging F 1 to evaluate the average performance across multiple clus-ters with different cardinality. The number of clusters is set to be the number of categories introduced in Section 7.1.
Table 1 lists the clustering evaluation results. Statistical significance test is performed on F 1scoresandshowsthe significance of the combined clustering technique; however, due to the space limit, the test is not reported. Based on the comparison, we observe that: (i) Our proposed  X  X SH + Hierarchical X  clustering on news collection significantly out-performs the general K-means and hierarchical clustering techniques in terms of accuracy and efficiency. A straight-forward explanation for the accuracy increase is that SCENE uses shingles to represent news articles. Shingling aims to separate articles into shingles where the probability of any given shingle appearing in any article is low. In this way, similar articles will have more shingles in common, whereas dissimilar articles share rarely few shingles. (ii) The accu-racy of K-means and hierarchical clustering on news corpus decreases when the volume of the dataset increases. II : Hierarchical Clustering V.S. K-means Clustering
An alternative approach to divide the news corpus into news groups is K-means clustering. In this section, we pro-vide comparison between K-means and hierarchical cluster-ing on news groups. We select 10 time ranges with 3-days in-terval, and run LSH on news articles located in these ranges. Then we apply K-means and hierarchical clustering with average-link on small news groups, respectively. For evalua-tion purpose, we randomly select 100 users and recommend news articles to them. The recommendation result consists of top 30 news articles. We evaluate the averaged precision , recal l and F-score based on the 100 users X  actual reading history in these time ranges. Table 2 represents the com-parison results. We can observe that hierarchical clustering based system outperforms its rival to a great extent, which verifies our claim in Section 4.2. Statistical significance test is performed on F -scores and demonstrates the qualification of hierarchical clustering on news groups.
 Table 2: Comparison between K-means based and hierarchical clustering based systems.
 Figure 2: Recommendation F-score of different time periods for PLSI-based and LDA-based systems.
 III : LDA V.S. PLSI
In reality, news article clustering happens per day, or even per hour. The number of news events happened in a small time range may be at a scale of hundreds or thousands, but not more in regular. Based on our analysis in Section 4.3, LDA tends to perform better than PLSI in terms of topic detection when the dataset is relatively small. In order to verify this claim, we design the experiment as follows: (1) use 1 hour, 12 hours, 1 day, 2 days, and 3 days as the time periods; (2) for each time period, randomly select 10 time ranges, and extract news articles in these time ranges; (3) perform PLSI and LDA on these news sets respectively; (4) perform top 30 news recommendation to 100 users randomly selected from the users X  pool; and (5) compute the average F-score for PLSI-based and LDA-based systems. The result isshownasinFigure2.
 From the result, we have the following observations: (i) LDA-based recommender system has stable recommenda-tion performance in terms of F-score, regardless of different size of news corpus; and (ii) PLSI-based recommender sys-tem has comparable results when the news corpus becomes larger. However, when the dataset is relatively small, the performance of PLSI-based system is comparatively lower than LDA-based system. Essentially, it results from overfit-ting when the dataset is small, and verifies our claim in Sec-tion 4.3. Therefore, the probabilistic language model LDA is more applicable to our news recommendation system.
In our system, we propose to utilize three different yet relevant types of information to construct users X  profiles  X  news content , similar access pattern and named entities pref-erence . Prior approaches often use one or both of  X  X ews content X  and  X  X imilar access pattern X  to fulfill the recom-mendation requirement. However, based on our analysis in Section 5, news readers might have more interest on named entities appeared in news articles. In order to evaluate the performance of our hybrid approach, we test the effect of each possible combination of the three factors to the recom-mendation results 5 . Specifically, we select 100 users from the users X  pool, randomly pick up 10 time ranges with 3-day interval from our news dataset, and recommend news items (top @10, @20 and @30) to these users based on different aspect combinations. For comparison, we compute the aver-aged F-score of recommendation results for the 100 selected users over 10 time ranges. Figure 3 depicts the result.
From the comparison, we observe that: (i) our hybrid ap-proach that considers all the three aspects always performs the best. (ii) recommendation purely based on one single aspect cannot outperform the system based on the combi-nations. The reason is straightforward: more intrinsic prop-erties of news articles and users X  profiles can be revealed as we take more aspects into account. (iii) recommender sys-tems with preferred named entities involved perform better than the ones without considering named entities. This ob-servation verifies our claim that news readers tend to show more interest on simple but representative named entities contained in news articles.

In order to find similar access patterns for a given user, we use a threshold  X  u to eliminate irrelevant users. To find an optimal value for  X  u , we adopt the same experimental setup with the above procedure, except that when selecting For simplicity, we set  X  =  X  =  X  = 1 in Eq.(2).
 Figure 3: Recommendation F-score of different com-binations of profile factors. Remark: C  X  News Content; P  X  Similar Access Pattern; E  X  Preferred Named Entities. news articles, we only consider the effect of similar access pattern. As we change the value of  X  u , averaged F-scores of the recommendation results are observed. The tuning result is shown in Figure 4. As is depicted, for top @10, @20, @30 recommended news articles, the performance achieves the best when  X  u =0 . 25. Therefore, we set  X  u as 0.25 for SCENE .
In order to verify the effectiveness of our proposed news selection strategy, we provide detailed comparison between ours and the general greedy selection strategy simply based on pairwise similarities. Also, we implement a recommender system that models the recommendation as a contextual bandit problem [18], as the comparison base. For each ap-proach, we randomly select 100 users to provide recommen-dations for them. We plot the precision and recall pair for each user on top @10, @20, and @30 news items recom-mended to these users. Figure 5 shows the comparison re-sults. From Figure 5, we observe that besides the higher pre-cision and recall, the performance distribution of SCENE is more compact than the other methods, which demonstrates the stability of our proposed news selection strategy. Figure 5: Precision-recall plot for different news se-lection strategies. Remark:  X   X  represents users using the general greedy-based recommender sys-tem;  X   X  denotes users using the bandit-based rec-ommender system; and  X  +  X  represents users using SCENE .

In the above experiments, all the users are equally treated as the experimental subject. In reality, users with different news access patterns, such as different reading frequency every day, may have distinct patterns of news topic pref-erence, and therefore the dynamic interest on news articles may vary a lot. In addition, many news recommendation systems cannot address the so-called  X  X old-start X  problem. In order to verify the performance of our proposed algorithm on different user groups, we separate the selected users into three groups based on their reading habits. Suppose a user reads N news articles per day, then the three groups are: (i) N  X  10; (ii) 10 &lt;N  X  50; (iii) N&gt; 50. We apply dif-ferent algorithms on these three users groups with top @10, top @20 and top @30 recommended news, and record the F1-score respectively. Here, the comparison base includes two existing approaches: [7] (Goo) and [19] (ClickB). The former is a collaborative filtering based method, whereas the latter is a content-based method. Figure 6 shows the comparison results. From the comparison, we observe that our system SCENE can achieve a reasonable recommenda-tion result when it is subject to the  X  X old-start X  problem. The reason is that besides considering similar access pat-terns when recommending news articles to individual users, we also measure the importance of news content and named entities preferred by news readers.
The recommendation news list provided by SCENE shows a great diversity on both topic categories and topic aspects. Such diversity is oriented from two sparkles of our two-stage recommender system: the  X  X SH + Hierarchical X  clustering component and the news selection strategy based on  X  X ub-modularity X .  X  X SH + Hierarchical X  clustering provides a di-verse list of topic categories as the first level of recommen-dation, whereas the  X  X ubmodularity X  model increases the di-versity of the result in terms of news content. To evaluate how diverse our recommendation result is, we compare the set diversity described in [26] between the results of SCENE and other recommender systems. The news set diversity is Figure 6: Comparison on F-score of different algo-rithms for three distinct user groups. defined as the average dissimilarity of all pairs of news items in the recommendation list. Specifically, given a news set the average dissimilarity of N , f d ( N ), is defined as f d ( N )= 2 where |N | = p , and the dissimilarity of a news pair is repre-sented as 1  X  Sim ( n i ,n j ), in which Sim ( n i ,n j ) denotes the news profile similarity between the news item n i and n j
For diversity evaluation, we choose [7] (Goo), [19] (ClickB), [5] (Bilinear) and [18] (Bandit) as the comparison baselines. We employ the same experiment setup described in Sec-tion 7.2.2, to compare the diversities of recommendation lists with different cardinalities. Table 3 shows the averaged di-versity result for 10 time ranges.
 Table 3: Diversity evaluation on the result list.
From the result, we observe that: (i) The diversity de-creases as the recommendation news list enlarges. It is straightforward that when more news articles are selected, the topic distribution of the news list becomes closer to the user X  X  reading interest, and therefore the selected news items are more similar. (ii) The diversity of the recommendation list provided by the baseline methods drops dramatically as the list size increases, since they did not take the diver-sity into account. (iii) SCENE outperforms the others very significantly, and since we intentionally consider the require-ment of news readers, the diversity decreases very smoothly when we recommend more news items to individual users.
In order to verify the efficacy of our proposed recom-mender system, we implement a prototype system of SCENE and conduct a user study on it. Specifically, SCENE gath-ers newly-published news articles from popular news web-sites per day, as the news articles pool for recommendation. Then 50 volunteers are hired to experience SCENE in 15 days. Most of them have online news reading hobbies. For the first 5 days, we collect the users X  accessing news arti-cles as the reading history; for the successive 10 days, we recommend news items to the volunteers. For evaluation purpose, we define several indexes to measure the satisfac-tion of user experience. Each experience index is rated by the volunteers in a range of 1 to 5, where 1  X   X  X xecrable X , 2  X   X  X elow Average X , 3  X   X  X verage X , 4  X   X  X bove Average X , and 5  X   X  X xceptional X . The experience indexes include: (i) The response time once a user logs onto the system; (ii) The preference on the recommended news articles; (iii) The di-versity of the recommended news list; and (iv) The ordering of the recommended news articles.

We collect all the volunteers X  ratings on these four experi-ence indexes at the end of the testing period. To analyze the investigation result, we plot the number of users with differ-ent ratings on the four indexes, and get a histogram as shown in Figure 7. From the result, we observe that all the four aspects of SCENE can satisfy the requirements of the major-ity users. Particularly for the diversity of the recommended news list, most volunteers thumb up towards our prototype system. This also verifies our claim in Section 6.2.3.
Figure 7: User experience on different indexes.
In this paper, we propose SCENE to tackle personalized news recommendation. We explore the intra relations among news articles, along with different characteristics of news items, including news content, similar access patterns and named entities preferred by users. Our system supports effi-cient clustering on newly-published news articles, as well as high quality of recommendation results. Extensive evalua-tion has demonstrated the efficacy and efficiency of SCENE .
For future work, to handle high volume press releases, we plan to deploy the offline clustering component onto the Map-Reduce framework. It requires careful investigation on the seamless integration of LSH on news articles and hierar-chical clustering on news groups. Another remarkable point is the interest evolution of users, which is able to provide insights on the exploration of users X  reading behaviors. The work is partially supported by US National Science Foundation under grants I IS-0546280 and CCF-0830659.
