 Recent research has shown that the performance of search engines can be improved by enriching a user X  X  personal pro-file with information about other users with shared inter-ests. In the existing approaches, groups of similar users are often statically determined, e.g., based on the common doc-uments that users clicked. However, these static grouping methods are query-independent and neglect the fact that users in a group may have different interests with respect to different topics. In this paper, we argue that common inter-est groups should be dynamically constructed in response to the user X  X  input query. We propose a personalisation frame-work in which a user profile is enriched using information from other users dynamically grouped with respect to an in-put query. The experimental results on query logs from a major commercial web search engine demonstrate that our framework improves the performance of the web search en-gine and also achieves better performance than the static grouping method.

Recently, search personalisation has attracted increasing attention [1, 3, 5, 8, 9]. Unlike classical search methods, personalised search systems use personal data about a user to tailor search results to the specific user. This information can be considered as a user profile . A widely used type of user profiles represents the topical interests of the user [5, 7]. A typical approach is to build user profiles using the main topics discussed in the relevant documents [1, 9]. The top-ics of a document can be obtained from a human-generated online ontology, such as the Open Directory Project (ODP) [1, 9]. However, this approach suffers from a limitation that many documents may not appear in the online categorisa-tion scheme. Moreover, it requires expensive manual effort to determine the correct categories for each document [5].
The effectiveness of a personalised search system relies on collecting user profiles that are rich enough [8]. Recent stud-ies [3, 8, 9] show that a user profile can be enriched by using data from a group of users who share common interests, de-termined statically, e.g., based on the common documents that users clicked [3]. Despite being successful in improv-ing search results, the static grouping methods neglect the fact that users in a group may have different interests with respect to different topics. In order to capture this char-acteristic, we argue that the grouping method needs to be dynamic and dependent on the input query (i.e., different in-put queries should return different groups of similar users).
In this paper, we propose a model for query-dependent user grouping and leveraging the dynamic group information to enrich user profiles for search personalisation. In Section 2.1, we construct user profiles based on relevant documents extracted from query logs over a topic space. We utilise a latent topic model to automatically derive topics instead of using a human-generated ontology [1, 9]. However, instead of assuming that all clicked document are relevant as in [3, 7], we use the Satisfied (SAT) Clicks criterion [4] to iden-tify SAT clicked documents. In Section 2.2, we introduce a novel method to dynamically group users given the input query of the current user. In Section 2.3, we leverage the group data to personalise the search results of the current user. Sections 3 and 4 present the experimental setup and evaluation results.
We employ the Latent Dirichlet Allocation (LDA) [2] to learn latent topics from the SAT clicked documents extracted from query logs. Let T , W and D be variables representing a latent topic, a word and a document respectively. The user variable is denoted as U . Let t , w , d and u denote in-stances of T , W , D and U respectively. After training the LDA model, we get two distributions P ( W | T ) and P ( T | D ). P ( W | T ) defines a distribution of words for each topic show-ing how relevant they are to the topic. For example, a topic about football would give high probabilities to words like  X  X core X  and X  X oal X , and low probabilities to  X  X indows X  and  X  X inux X . P ( T | D ) defines a distribution of these latent top-ics for each document showing how relevant they are to the document. For example, a document about a football match would give a high probability to the topic about  X  X ootball X  and a low probability to the  X  X S X  topic.

We define the interest of a user u on a latent topic t as a conditional probability:
Here, SAT ( u ) is a set of SAT clicked documents from user u , N SAT ( u ) is size of that set, and p ( t | d ) is the probability of topic t given the document d . P ( T | U ) shows how each user is interested in the latent topics contained in her/his SAT clicked documents.
We propose a query-dependent grouping method to group users who share common interests with the current user, with respect to the current query. In particular, given a user, different input queries could result in different user groups. Formally, for a user u and an input query q , we define the similarity function between u and another user v as the conditional probability p ( u,v | q ). The top K-nearest users to u can be extracted by ranking all other users in a descending order of their similarity scores to u :
Here, rank ( p ( u,v | q )) is the rank of the similarity score p ( u,v | q ) between u and v given a query q .
 Now the key is to estimate p ( u,v | q ). Applying the Bayes X  Rule, we have: where p ( u,v ) is calculated as: Here, IN u,v is the intersection between SAT clicks of u and SAT clicks of v . N IN u,v is the size of IN u,v .

Next, to calculate p ( q | u,v ), we apply the marginal prob-ability over the latent topics T to receive:
The probability p ( t | u,v ) represents how likely that both users u and v are interested in the topic t . We define:
Likewise, the probability p ( q | u,v,t ) represents how likely that both users u and v are interested in issuing the query q given the topic t . Here, the query q is represented as a set of words W q = { w | w  X  q } . To calculate p ( q | u,v,t ), we assume query words are mutually independent and also independent of u and v given the topic t . We have:
Applying Eq. (7) and Eq. (6) to Eq. (5), we have:
Finally, applying Eq. (4) and Eq. (8) to Eq. (3) we have:
Eq. (9) shows that the query-dependent similarity between two users depends on the common documents that they both have visited and how likely the current query relates to these documents through latent topics.
After obtaining the K-nearest users who share common interests with the user u given input query q ( G u,q short G u ), we can leverage these users X  profiles to enrich the current user X  X . We define p  X  ( t | u ) as group-enriched condi-tional distribution indicating the topic interests of u :
We then utilise the enriched user profile to re-rank the orig-inal list of documents returned by the search engine. The detailed steps are as follows: (1) Download the top n ranked search results (as recorded in query logs) from the search engine for a query. We denote a downloaded web page as d and its rank in the search result list as r ( d ). (2) Compute a personalised score for each web page d given the current user u as the probability p ( d | u ):
Given a topic t , we assume u and d are mutually indepen-dent; the prior P ( D ) is a uniform distribution. Applying the Bayes X  Rule, Eq. (11) becomes:
Here, p ( t | d ) has been available as an output of the LDA inference process in Section 2.1. Next, to leverage the group information, in Eq. (12), we use p  X  ( t | u ) instead of p ( t | u ): (3) Combine the personalised score p ( d | u ) and the original rank r ( d ), to get a final score  X  as:
As we do not have access to the the original relevance score between an input query and a returned document given by the baseline search engine, we use 1 /r ( d ) as an estimate. We combine p ( d | u ) and r ( d ), as they reflect different aspects in ranking documents.
We use two measurement metrics to evaluate a person-alised search approach, which are: inverse average rank and personalisation gain. (1) Inverse Average Rank (IAR) The average rank (AR) over a set of test queries S [3] is defined as follows: where P s is a set of relevance (SAT clicked) web pages for a test query s ; R ( p ) is the rank of a page p . A smaller AR indicates a better overall quality of the ranked results [3]. For ease of use, in this paper, we define an inverse AR (IAR) metric as:
The higher IAR score indicates the better ranking quality. (2) Personalisation Gain (P-Gain) shows how stably the personalisation improves the ranking performance over a baseline across all test queries [5]. The metric compares the number of relevant web pages promoted to a higher rank against the number of relevant pages obtaining worse rank-ing after using the personalisation algorithm:
A higher positive P-Gain value indicates a better overall ro-bustness of a personalisation algorithm in term of improving performance over the baseline.
The dataset used in our experiments is a sample of query logs from a major commercial web search engine for 15 days from 1 st to 15 th July 2012. The query logs contain searching data from 106 anonymous users. A log entity consists of an anonymous user identifier, a query, top-10 returned URLs, and clicked results along with the user X  X  dwell time.
For evaluation, we use the SAT criterion to identify the satisfied clicks from the query logs as either a click with a dwell time of at least 30 seconds or the last result click in a session. Then, we split the dataset into training and test sets. The training set contains the log data in the first 10 days and the test set contains the log data in the remaining 5 days. Table 1 shows the statistics. We also consider the SAT clicks as the ground truth of the test data. In our experi-ments, we evaluate our proposed method by comparing the original rank list given by the commercial search engine and the re-ranked list given by our methods with the evaluation metrics defined in Section 3.1.

In addition to reporting the overall performance, we also analyse the results with respect to the concept of click en-tropy [3]. A smaller click entropy value indicates that more agreement between users on clicking a small number of web pages [3]. Dou et al. [3] also pointed out that if the click entropy is small, the personalisation process can even dete-riorate the search performance. In the experimental data, about 80% queries have a low click entropy between 0 and 1; 15% queries have a click entropy between 1 and 2; and about 5% queries have a high click entropy (  X  2).
In the experiment, we compare the performances of the baseline and three personalisation strategies, namely S Profile, S Group and D Group. The baseline is the original ranked results from the web search engine; the S Profile is a per-sonalisation approach using the current user profile; the S Group uses the profile enriched with information from static grouping p ( u,v ); and the D Group is enriched with information from dynamic grouping p ( u,v | q ).

For training LDA model, we employ the Mallet implemen-tation [6] of the LDA model. We also observe that the choice of hyper-parameter has little impact on overall performance. Therefore, in this work we set the number of topics as 100 and the hyper-parameters as in [2]. Since the number of the anonymous users is relatively small (106), we set the number of nearest neighbours K = 5 for both S Group and D Group.
In this section, we analyse the experimental results of the personalised strategies in terms of IAR and P-Gain. Table 2 shows that all personalisation strategies can improve over the baseline (i.e., all reported changes are positive in IAR and P-Gain values). Interestingly, the D Group method has the highest ( p 0 . 01 with the paired t-test ) improvement of 8.12% over the baseline (using IAR metric). S Group and S Profile methods also have significant improvements of 7.64% and 5.94% respectively ( p 0 . 01) over the baseline. This shows that latent topic-based personalisation methods generally yield better web search performance.

Table 2 also shows that the Group-based methods (S Group and D Group) improve the IAR and P-Gain values by at least 1.60% and 80.37% respectively over the S Profile( p 0 . 01). Consistent with [8], our result confirms that the in-formation from the group of users who share some common interests is helpful in building better user profiles. Table 3: Numbers of better and worse ranks in com-parison with the baseline and P-Gain
In addition, the dynamic grouping method (D Group) leads to improvements of 0.45% and 14.22% in IAR and P-Gain respectively over the static grouping method (S Group) ( p 0 . 01). Furthermore, in Table 3, even though D Group method leads to only few (2) more improved ranks than S Group, the former has much (41) less worse ranks. This suggests that dynamic group information with respect to an input query could gain performance over static group in-formation, especially for reducing the number of incorrect re-rankings.

Remark on efficiency issue: Both LDA model training and static group formation are done offline, and the dynamic group formation is done partially offline 1 . Thus the online processing of S Profile, D Group and S Group methods is reasonably efficient. The average processing time per query is about 0.70 millisecond for S Profile and S Group, and 1.09 millisecond for D Group. We aim to further improve the efficiency of the D Group method by applying parallel programming in our future work.
The expression P d  X  IN on the input query and so can be calculated offline. Figure 1: Search performance improvements over the baseline with different click entropies.
In this section, we evaluate the search performance with respect to different click entropies (in Figure 1). Similar to [3], we find that when users have more agreements over clicked documents on these queries with small click entropy, and the personalisation methods even deteriorate the search performance. Specifically, with click entropies between 0 and 1, the IAR of S Profile method is 1.31% lower than the baseline X  X . However, improvements are achieved by using the group-based methods (S Group and D Group). As seen in Figure 1, the improvement of personalised search perfor-mance increases significantly when the click entropy becomes larger, especially with click entropies  X  1. Furthermore, the personalisation methods achieve highest improvements when click entropies are no less than 2. In this case, all three per-sonalisation methods have improvements of about 22% in IAR score over the baseline. These results indicate that the higher click entropy is, the better performance the search personalisation is likely to achieve. Moreover, in general D Group performs better than S Group, and both D Group and S Group methods outperform S Profle X  X  ( p 0 . 01).
We also investigate the impact of the group size on the per-formance of the D Group method. Table 4 shows the search performance using dynamic grouping method against differ-ent numbers of nearest neighbours. Due to the small size of dataset (106 users), forty-five (42.5%) users in the dataset only have common clicks (as used to calculate p ( u,v | q ) in Eq. (9)) with no more than five other users. Therefore, we test the number of similar users from 1 to 5 in this exper-iment 2 . The results show that in general, the more users share common interests with the current user, the higher performance the D Group tends to achieve.
 Table 4: The performances of D Group method over the different group sizes.

We will test larger group sizes in our future work when carrying out further evaluation with larger-scale data sets.
This indicates that the information from user groups is useful. Even with only one other user in the group, the performance of the D Group method achieves improvements of 1.28% (IAR) and 65.48% (P-Gain) over S Profile where user profiles are not enriched by group information. With five nearest users, the D Group method achieved the highest performance: improvements of 2.07% ( p 0 . 01) in IAR and 106% in P-Gain over S Profile.
We have presented a framework for search personalisation using dynamic grouping method to enrich a user profile. For a user, the profile is dynamically constructed and enriched with information from other users whose interests are simi-lar to the user given a query. Applying it to web search, we use the enriched profile to re-rank search results. Our exper-imental results demonstrate that the proposed method can stably and significantly improve the ranking quality. In the future, we plan to extend the model to capture user X  X  inter-ests that change over time. We will also carry out evaluation on larger-scale data sets.
We thank anonymous reviewers for their valuable com-ments. We would also like to thank Prof. Ji-Rong Wen and Dr. Zhicheng Dou for providing the experimental data. This work is funded in part by the Chinese National Pro-gram on Key Basic Research Project (973 Program, grant no. 2014CB744604) and the Natural Science Foundation of China (grant no. 61272265).
