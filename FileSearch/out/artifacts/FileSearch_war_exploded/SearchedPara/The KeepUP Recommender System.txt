 In this short paper, we desc ribe our RSS recommender system, KeepUP. Too often recommender sy stems are seen as black box systems, resulting in general pe rplexity and dissatisfaction from users who are treated as passive, isolated consumers. Recent literature observes that recommendations rarely occur within such isolation and that there may be potential within more socially-orientated approaches. With KeepUP, we outline the design of a recommendation process that is based on an implicit social network where the relevancy and meaning of information can be negotiated not only with the r ecommender system but also with other users. Our overall goal is to support the formation and development of online communities of interest. H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval  X  information filtering. Design, Human Factors, Theory. Online communities, social networks, social visualization, RSS, collaborative tagging. Our main claim throughout this paper is that users should play a more active role in the recommendation process rather than being limited to a passive, isolated role. While conversational recommender systems (e.g. [3]) do engage users in an active role by means of a dialog , users are still left separately conversing with the system and not with their peers. It has been asserted that  X  X ecommendations are not delivered within a vacuum, but rather cast within an informal community of users and social context X  [6, p.131]. This assertion has emerged from the observation that many recommender systems create implicit social networks as a side-effect of the recommendation process and that these networks have important, exploitable propert ies including self-organization. An implicit social network is inferred from system data and does not necessarily reflect any  X  X eal X  relationship between users, such as friendship. While there have been a number of existing graph-based techniques used in r ecommender systems, such as spreading activation [5] and horting [2], these techniques target specific issues (e.g. sparsity). The theoretical work presented here is a broad approach that attemp ts to support the informal user communities that may form around specific interests by modeling the distribution of information in social networks. We are not necessarily interested in improving the system X  X  recall and precision measures, etc. We developed a graph-based appro ach that was evaluated against the well-known 100K MovieLens data set [10]. Briefly, an implicit social network is created between two or more users whenever a shared interest is determined. A directed edge between users, u and v , represents the strength at which u influences v within the respective network regarding th e recommendation of information items. Influence simply represents the probability that whatever u likes, v will like as well. Recommendation of items is accomplished through two interrelated processes: push and poll. Push seeds an item into the network(s) of users that the item is initially deemed most relevant to. The item then spreads according to diffusion of innovation [7] models. Poll queries adjacent users whether the item should be re commended for the active user, given a certain activation threshold . Feedback from users (explicit and implicit) reshapes the network, affecting the spread and activation of subsequent items. Since items are  X  X ushed X  through these networks, the presence and strength of edges between users are crucial factors in determining recommendations. Thus, for each network, the active user can view her neighbours (i.e. adjacent users) through an interactiv e visualization. In addition to displaying the degree of influen ce each neighbour exerts on the active user X  X  recommendations (and vice-versa), the active user can manually adjust neighbours X  influence, triggering KeepUP to instantly  X  X e-recommend X  a small set of items which appear along with the visualization. This is si milar to work done in [1] where e-commerce users are allowed to restrict the collaborative filtering process to a set of manually selected contacts each of whom have recommendation of items. It was shown that these  X  X ocal X  recommendations were better than those made by unrestricted k-nearest neighbour collaborative filtering. In our earlier work [10], we demonstrate that the push-poll approach outperforms a straightfo rward collaborative filtering algorithm on predicting user ratings on movies. However, predicting item ratings on a numerical scale is not the objective of push-poll. It is meant to direct new information to interested users who can then collaborate on further classifying the information. Also, a valid critique of such an evaluation is whether users actually notice a difference within an (albeit small) improvement. We propose a multi-stage evaluation that begins with investigating the effectivene ss of push-poll at building and maintaining implicit social networks, distributing RSS items through these networks, and ma king recommendations. Next, we intend to evaluate what impact the visualization has on user behaviour, whether users find it be neficial, and if prediction accuracy tends to increase due to manual influence adjustments. The rest of the paper is as follows: KeepUP X  X  key features and UI are highlighted in Section 2.1 before outlining our design for supporting communities of interest in Section 2.2. The neighbour visualization is shown and brie fly discussed in Section 2.3. Section 3 concludes with an outline of our proposed evaluations. KeepUP is a Rich Site Summary (RSS) recommender system, developed at the University of Saskatchewan and available online at http://keepup.usask.ca. It is considered a hybrid recommender system as it mixes collaborative filtering with content-based analysis. RSS is a popular standard to publish content to the Web and is often used by web logs ( blogs ) and news services to alert subscribers to new content. RSS entries or items follow well-known XML formats and usually include a headline, a short description, and a URL to the full item of interest. A RSS feed is simply a Web accessible XML docum ent that contains 1 or more items and is updated regularly. The name  X  X eepUP X  implies that users are able to  X  X eep up-to-date X  with personally relevant ne ws and events. The breadth of topics and overwhelming number of RSS feeds presents an exciting challenge for a recommender system that must manage many new and diverse items per da y. After a 90-day period, over 220,000 items have been indexed by KeepUP, yet there are only approximately 110 registered RSS feeds. Recommendation lists, or what we call channels , are the building blocks of KeepUP. It is helpful to imagine a RSS feed as an unending stream of items where channels are filters that select items from feeds based on certain criteria. There are three types of channels: Each type of channel suits a different information-gathering purpose. For example, imagine a user who has a number of favourite Web sites and would like to stay current with their updates. This user may want to ha ve the respective RSS feed of each Web site grouped into a single feed channel that will show the new items appearing at any of the Web sites. Or, a user may be more interested in a specific topic and less concerned where the information comes from. In this case, a tag channel would be more appropriate. The tag channel will select all items that contain the matching tag or tags regardless of the RSS feed they come from. Finally, a person channel allows users to see what items are liked by their friends and colleagues. Channels display recommended ite ms as a list of headlines (Figure 1), and multiple channels can be displayed on a single page. Note that all items app earing in a channel have been recommended (Section 2.3) to the user. Users can then quickly scan each channel for items of the most interest. The highlighted areas in Figure 1 are described as follows: 
Figure 2 . An expanded item in the channel shown in Figure 1. The highlighted areas in Figure 2 are described as follows: Whenever a user creates a new channel, it is available for all other users to subscribe to (Figure 3) . For example, multiple users may  X  X oin X  the Climate Change channe l of Figure 1, adding it to their list of channels. When this occurs , the newly subscribed user is  X  X eaved X  into the existing network of currently subscribed users. This process involves computi ng an initial correlation value between the new user and each existing user to use as the edge weight (i.e. influence) between the pair. If there are not enough previously rated items in common to perform a Pearson correlation, then we compare user profiles for similarity. Finally, if no edges can be established, then the new user is randomly connected to a subset of the existing users. It is important that the new user have a least one incoming edge from the network to begin receiving items within the respective channel. In the deployed system, there will be privacy controls which will allow users to anonymously create or join channels. For now, we ignore privacy issues. 
Figure 3 . A list of channels that users can potentially join X  X ach channel is displayed with its ty pe, who started it, an optional We believe recommender sy stems have a large, supportive role to play in the exchange of information between users. For instance, a challenge was put forth in [9] to apply a recommender system to the task of forming and supporting communities of interest. One potential opportunity is to consid er a large online community such as MySpace where a single user will only ever see a tiny fraction of all available content. Collaborative filtering is difficult to perform at the level of millions of users and items. However, push-poll offers a strategy to use implicit (or explicit) social networks to target subgroups (i.e . informal communities) of users and then track how particular items are received and categorized by each subgroup. The goal is to make users confident that while they are not actively searching for information items, personally relevant items are continually searching for them , especially items from  X  X nknown X  parts of the netw ork. KeepUP is partly a response to this challenge and takes initial steps in this direction. We believe that the design and st ructure of channels lets users self-organize and play a key role in the spread of information. Tagging allows for a shared vocabulary to emerge in the self-organized communities that spring out of users creating and joining channels of their choice [8]. When deciding which channels to add, users are presented with a choice. One consideration of this choice is that a single tag, feed or person can exist across multiple channels. For example, in a system with hundreds of users, the possibility of a popular feed, e.g. Slashdot, appearing in more th an one channel is high. It is likely that Slashdot is mixed in with a number of other science and technology-related feeds. The user can choose the mix that contains her most preferred feeds (thereby joining a channel where the preferences of the existing users are more aligned with hers). Alternatively, the user can create an entirely new feed channel that uses Slashdot mixed w ith other feeds, for example, a feed of a little-known blogger who often discusses Slashdot articles (thereby creating a new association between Slashdot and the unknown blog), thus expanding the diversity of channels and the choice-options for other users. Another consideration that a user makes in choosing a channel is the number of users who are  X  X ubscribed X  to the channel. A user may choose to join a channel that has some undesirable tags, feeds, and people, but has more subscribers than other similar channels, assuming she believes a channel with more users results in better recommendations (in most cases this should hold true). Therefore, the user is exposed to some content that she normally would not consider interesting, but which may turn out to be interesting and useful. Tagging and tag channels are anothe r form of self-organization as users evolve a shared vocabulary [8]. For instance, the Interesting Channel in Figure 3 is based on the tag interesting . KeepUP is tasked with initially tagging new RSS items; however, it only considers significant terms present within the item X  X  text as potential tags. It is unlikely the term  X  X nteresting X  would be considered significant, and it ems would not appear in the Interesting Channel automatically. Therefore, users must  X  X ower X  the channel themselves by tagging items that appear in other channels as interesting . KeepUP then automatically pushes the newly tagged item into the Intere sting Channel. And, as users provide feedback on what they pe rsonally find interesting and not interesting by rating the items, we hypothesize the channel network will adapt acco rdingly, forming clusters which represent persistent,  X  X iche X  communities of in terest. In turn, these clusters of users could be given extra support (e.g. their own discussion space, incentives to contribute additional information, etc) or targeted with specific items for their feedback. Unfortunately, KeepUP presently does not offer means for users to communicate with each other (e.g. forum or commenting system). A discussion system base d on the principles of push-poll would be an interesting avenue for future work. For example, discussion regarding a certain ite m could be confined to one subgroup of the network and as the discussion builds and evolves, more and more potentially intere sted users could be made aware of the discussion by the system. The presence and strength of edges between users (neighbours) in channel networks are crucial factors in determining recommendations. Therefore, we believe it is important for users to be aware of their network  X  position X  and allow them to make manual adjustments to the strength of incoming edges (i.e. their neighbour X  X  influence). Figure 4 shows an instance of our interactive neighbour visualization for the channel Popular Digg (all items appearing in this channel come from Digg, a popular URL-sharing Web site). The visualization is separated into two areas: the top area depicts the amount of influence the activ e user X  X  neighbours are exerting on her (the closer to the center figure, the more influence); the bottom area depicts the amount of influence the active user is exerting on her neighbours. Neighbours appearing in the top area (person icon with a little dot) can be dragged within the top area to the desired level of influenc e (neighbours in the lower section cannot be moved, i.e. a user cannot adjust the amount of influence she exerts on others). As the active user drags a neighbor her set of recommendations along the left -hand side are automatically  X  X e-recommended X  based on the new influence value. This allows the user to see what impact in dividual neighbours are having on her recommendations and whether this impact is desi rable or not. Finally, if the active user hol ds the cursor over a neighbour X  X  pseudonym, a tag cloud is shown for that neighbour. The tag cloud shows the set of recent tags that are liked and disliked by the neighbour and the relative degr ee of preference to each tag (i.e. tags in larger font are like d/disliked relative to tags in a smaller font). The tag cloud gi ves the active user additional information about the neighbour and whether the influence value of that neighbour should be adjusted. For instance, in Figure 4, the example tag cloud shows the neighbour, smurffy , has recently liked a number of articles concerning an American political scandal. If the active user is also interested in this particular story, then smurffy could be granted greater influence within this channel, increasing the probability that future items concerning the scandal will be recommended to the active user. Our first evaluation study will involve 20-30 self-selected participants who will each be asked to rate 200 RSS items that fall under 4 broad topics: arts and ente rtainment, worl d news, science and technology, and sports. Our ma in goal with this initial user study is to collect feedback data that will be used to test and optimize KeepUP X  X  ability at forming and maintaining implicit social networks. That is, given a number of users concentrated in a single channel, do groups of users who strongly influence each other tend to form? And what prope rties of these clusters and the network in general can be e xploited to provide better recommendations? An interesting as pect of KeepUP is that we can also perform social network analysis on the resulting networks and investigate th e impact of metrics like closeness on recommendation accuracy. Finally, participants will use the neighbour visualization in order to qualitatively assess whether participants believe that thei r recommendations improve as a result of taking direct control. Later evaluations would focus on how real users (i.e. people who sign-up with KeepUP) use channe ls and tagging to organize content, whether informal communities develop and what strategies can be adopted to support their development. This work has been supported by the Natural Sciences and Engineering Research Council of Canada through the LORNET Network and the discovery grant of the second co-author. [1] A X meur, E. and Mani-Onana , F.S. Better control on [2] Aggarwal, C.C., Wolf, J.L., Wu, K-L., and Yu, P.S. Horting [3] Burke, R., Hammond, K., a nd Young, B.C. The FindMe [4] Golder, S.A. and Huberman, B.A. Usage Patterns of [5] Huang, Z., Chen, H., and Zeng, D. Applying associative [6] Perugini, S., Gon X alves, M. , and Fox, E. Recommender [7] Rogers, E. Diffusion of Innovations , 5 th Edition. Free Press, [8] Sen, S., Lam, S.K., Rashid, A.M., Cosley, D., Frankowski, [9] Terveen, L. and Hill, W. Beyond Recommender Systems: [10] Webster, A. and Vassileva, J. Push-Poll Recommender 
