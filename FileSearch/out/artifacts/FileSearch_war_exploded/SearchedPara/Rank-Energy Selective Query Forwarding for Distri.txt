 Scaling high-quality, cost-efficient query evaluation is criti-cal to search system performance. Although partial indexes reduce query processing times, result quality may be jeop-ardized due to exclusion of relevant non-local documents. Selectively forwarding queries between geographically dis-tributed search sites may help. The basic idea of query forwarding is that after a local site receives a query, it de-termines non-local sites to forward the query to and returns an aggregation of the local and non-local results. Neverthe-less, electricity costs remain substantial sources of operating expenses. We present a hybrid rank-energy query forward-ing model termed  X  X ESQ. X  The novel contribution is to si-multaneously consider both ranking quality and spatially-temporally varying energy prices when making forwarding decisions. Experiments with a large-scale query log, publicly-available electricity price data, and real search site locations demonstrate that query forwarding under RESQ achieves the result scalability of partial indexes with the cost savings of energy-aware approaches (e.g., an 87% ranking guarantee with a 46% savings in energy costs).
 H.3.3 [ Information Storage Systems ]: Information Re-trieval System Distributed IR, rank, energy, query forwarding, linear pro-gramming
Modern search systems operate under an unprecedented amount of content, traffic volume, and user distribution. For example, Google indexes  X  20 billion pages per day [17] and processes over 4 billion queries per day [12], while YouTube has  X  72 hours of video uploaded each minute, and 70% of its traffic originating from outside the USA [38]. Therefore, Figure 1: Energy price temporal and spatial varia-tion: (top) NYISO energy prices [29], 15 minute in-tervals; (bottom) EIA energy prices by country [37]. scaling high-quality, cost-effective query evaluation is a crit-ical challenge to search system performance. Our solution is RESQ (pronounced  X  X escue X ). Introduced in our poster at ACM CIKM  X 12 [36], we generalize RESQ to query vol-umes across realistic search site locations under an explicit latency model. The novel idea of RESQ is to selectively forward queries between sites in a distributed search system such that result quality and spatial-and temporal-variations in energy costs (e.g., the prices illustrated in Fig. 1 and elab-orated on below) are optimized jointly.

In a distributed search system [2], selectively forward-ing queries between the geographically-distant search sites has been shown to improve scalability [8]. For example, query evaluation can be faster over smaller subsets or  X  X ar-titions X  of full indexes. The underlying intuition is that well-localized distributed smaller indexes can yield faster query evaluation times and overall cost savings in spite of addi-tional network latency incurred from forwarding queries that target non-local documents [9]. The idea of  X  X ifferent re-sults from different sites X  is essential to query forwarding (e.g., [2], [9], and [23]). However, in practice, there is no restriction on the  X  X ocal X  and  X  X on-local X  partitioning strat-egy employed (e.g., full index replication [24]). As discussed in Sec. 2 and Sec. 3, RESQ forwarding supports such par-titionings while returning high-quality results and reducing operating costs.
Scalability may also be considered in contexts other than query evaluation times (e.g., energy costs [33] and [24]). For example, the monetary cost of evaluating a volume of queries may be considered. While such costs can be attributed to a number of sources (e.g., labor), an important considera-tion for search system cost-effectiveness is data center elec-tricity costs (e.g., [30]). Interestingly, although well-known search systems spend an estimated $10s of millions each year on electricity, the costs may be substantially decreased by exploiting spatial and temporal variations in energy prices (e.g., variations due to daytime demand) [33]. In the context of distributed search systems, the basic idea is that among multiple data center locations, the query workload is shifted to the sites with cheaper electricity prices [24]. As elabo-rated on below, the RESQ forwarding model not only ex-plicitly considers energy prices, but also simultaneously op-timizes for result quality independent of the underlying par-titioning strategy (cf. assuming full index replication [24]).
Our contribution, RESQ, is a hybrid rank-energy selec-tive query forwarding model that obtains the scalability of index-partitioned systems and the cost savings of energy-aware approaches. Our idea is to selectively forward queries such that the result ranking guarantee (see Sec. 3) in a non-replicated, geographically-distributed search system is max-imized given a budget for spatially-and temporally-varying energy prices, such as those illustrated in Fig. 1. Besides a novel simultaneous consideration of result quality and en-ergy costs, RESQ X  X  design complements existing work well (e.g., we support dynamic energy prices, cf. free of explicit energy consideration; and we also support partitioned or  X  X on-replicated X  indexes, cf. fully-replicated indexes). Ex-periments with query and electricity data demonstrate the merit of RESQ X  X  balanced approach (e.g., an 87% ranking guarantee with 46% energy savings). The unique main con-tribution of our study is two-fold:
In the sections that follow, we describe related research efforts (Sec. 2), introduce RESQ forwarding (Sec. 3), evalu-ate its performance (Sec. 4), and summarize the study and discuss future research questions (Sec. 5).
Distributed information retrieval (IR) is of substantial in-terest to the IR research community (e.g., [2 X 4, 6], [8], [9], [23], [24], and [26 X 28]). Although traditionally focused on efficiency within a search site, such as by partitioning a doc-ument collection into smaller collections or  X  X hards X  (e.g., [26 X 28]), recent research has demonstrated the feasibility of distributed IR at the system level (e.g., [2], [4], [8], [9], [23], and [24]).

Critical to achieving distributed search system performance is selective query forwarding as not all documents will be lo-cally indexed. Selecting the sites that a query should be Table 1: A summary of recent approaches to selec-tive query forwarding, including indicators for de-sign properties of the underlying search system (i.e., index partitioning and energy cost awareness).
 Baeza-Yates et al. [2] X Cambazoglu et al. [9] X Kayaaslan et al. [24] X
Junqueira et al. [23] X forwarded to in a distributed fashion is a non-trivial prob-lem. Indeed, there has been a number of recent research ef-forts along the query forwarding front (e.g., [2], [8], [9], [23], and [24]).

Cambazoglu et al. [9] increase forwarding efficiency when partial (or  X  X on-replicated X ) indexes are employed by locally computing an upper bound on the maximum possible result ranking of a non-local result for a locally-received query. Based on offline results from non-local indexes, a local site only forwards a query to sites that might have a result that would rank within its top-k results. The thresholding strat-egy generalizes an earlier thresholding approach by Baeza-Yates et al. [2].

Besides contributing a sophisticated reactive index repli-cation algorithm  X  X IP X , Junqueira et al. [23] recently in-troduce a threshold-based query forwarding heuristic. The basic idea is to upper bound non-local documents with the average of exact partial scores or the lowest available score in the posting lists corresponding to the query terms. The scores are compared to those of documents that are indexed locally after initial assignment or replicated under a specified replication budget.

On the other hand, Kayaaslan et al. [24] selectively for-ward queries in a replicated search system (i.e., evaluations over full indexes) to reduce operating costs based on dif-ferences in site energy prices and available query process-ing capacity. Local sites forward queries to non-local sites with cheaper energy prices with probabilities proportional to the fraction of the local workload that the non-local site could process after evenly distributing its available capacity to sites with higher energy prices.

For our study, the properties of the aforementioned query forwarding algorithms that most motivate RESQ are sum-marized in the taxonomy illustrated in Table 1. Our goal is a selective query forwarding algorithm that avoids unnec-essary forwards (e.g., [9]) and simultaneously saves energy costs (e.g., [24]). Specifically, we ask the following two ques-tions: We present our answer to the first question, called RESQ forwarding, next in Sec. 3. To answer the second question, we conduct the empirical evaluation described in Sec. 4.
We consider a distributed search system consisting of a set S = { S 1 ,...,S m } of m sites distant geographically. An index I is partitioned disjointly among the sites; partial in-dex I j is assigned to site S j , I j  X  I k =  X  for j 6 = k , and  X  j =1 I j = I . Recall that other partitioning strategies may be employed as well. At a time t on continuous timeline T , a  X  X ocal X  site  X  S  X  S must evaluate a volume of n queries Q = { q 1 ,...,q n } . Note that a site is local (or  X  X on-local X ) with respect to the site a query q i is issued to originally. The objective for a local site  X  S implementing RESQ forwarding is to select (not necessarily identical) subsets of non-local sites from S \{  X  S } to forward the queries q i  X  Q to such that the sum of the non-local result ranking upperbounds r j for evaluating q i over I j (or the  X  X anking guarantee X ) is as large as possible within a per-query energy price budget at the local site. For reference and readability the notation used is summarized in Table 2.
Formulated as a linear programming (LP) problem, we maximize the sum of the non-local result-ranking upper-bounds (denoted  X  X  X  ): subject to a per-query, site-specific energy cost budget C where c j ( q i ) =  X  j  X | q i | X  p j ( t ) (and is explained below), and the feasibility constraints: The function c j (  X  ) is the cost to evaluate a query q | q | terms over index I j at site S j where the spatially-and temporally-varying energy price at time instance t energy is p ( t ). A site-specific constant  X  j relates units of energy to query complexity. The indicator variable A vector of x ij values over all search sites S j , 1  X  j  X  m , represents a solution for in RESQ forwarding. If x ij is 1 (0) the results from S j will (not) be included in the final result aggregation for query q i originating at the local site  X 
In general, for  X  S to obtain actual r j values from non-local site S j , the query is required to be forwarded and evalu-ated (i.e., all sites must evaluate the query, and the savings from selective query forwarding are obviated). Therefore, selective query forwarding models (such as [9]) employ a locally-computed upper bound on the non-local result rank-ings, denoted  X  r j . 1 We use r j to refer to  X  r fied exposition. Also, local site  X  S necessarily has x because all non-local ranking estimates are relative to the results from evaluating q i at  X  S .
The intuition for  X  r j is to avoid forwarding queries to sites with results guaranteed to rank outside the to-be-returned top-k set of documents (after aggregation at local site S
Note that the price function p j ( t ) may consider non mon-etary costs as well (e.g., latency or load capacity). Indeed, the LP formulation is general enough to support additional constraints unrelated to ranking and energy. However, as defaulting to local evaluation is possible (e.g., [24], due to overflow), we limit c j to electricity-related costs, and defer latency analysis to Sec. 4. The bound C i is an independent per-query site-tunable parameter that RESQ only assumes to be in R + . Consistent with [24], we assume a stable en-ergy price during forwarding and evaluation of an individual query. Lastly, the LP problem is amenable to existing tech-niques for combinatorial optimization. The total number of search sites also makes each problem instance quick to solve, and LP-based formalizations have appeared in other large scale systems research (e.g., [13], [39], and [9]).
Upon receiving a query volume Q , the (local) search site implements RESQ forwarding in an online distributed man-ner. Intuitively, selecting the (non-local) search sites to for-ward the queries to can be viewed as an iterative three-step process: for each query, compute the non-local query processing energy costs, locally bound the non-local result rankings, then optimally select the to-be-forwarded-to (non-local) sites based on a tradeoff between possible ranking quality and spatial-temporal energy costs.

Following our discussion in [36], the RESQ forwarding process is detailed in Algorithm 1, and an example is il-lustrated in Fig. 2. The algorithm begins when a local site (e.g., S L in Fig. 2, left side) receives a query q i (or set of queries Q ) at time t . First, the local site receives the cost parameters p j and  X  j from all of the non-local sites (e.g., Line 2 in Algorithm 1); in Fig. 2, the sites are S The underlying assumption is that each site receives up-to-Algorithm 1 RESQ Forwarding Require: ( Q,t ), the query set Q at time instance t . 1: for j  X  X  1 ,..., | S |} do 2: {  X  j ,p j } X  GetNonLocalParams( t ) 3: end for 4: for q i  X  Q do 5: { c j ( q i ) } | S | j =1  X  UpdateCosts( q i ) 6: { r j ( q i ) } | S | j =1  X  BoundRankings( q i ) 8: R =  X  9: for S j  X  S do 10: if x ij = 1 then 11:  X  R  X  Forward( q i ,S j ) 12: R  X  Merge(  X  R,R ) 13: end if 14: end for 15: ReturnTopKDocs( R ) 16: end for date electricity cost information (e.g., site-to-site broadcast or approximation from historical data [24]).

Next, the per-query site costs (i.e., the c j s), are updated using the costs parameters for time t (Line 5). After obtain-ing the costs, upper bounds on the quality of results that could be returned by non-local sites are locally computed (Line 6). Bounding helps eliminate  X  X alse-positive sites, X  i.e., non-local sites that cannot contribute results that rank
The evaluation of RESQ focuses on the tradeoff between ranking quality and energy cost. The reason is that RESQ is a hybrid selective query forwarding algorithm. We simulate a non-replicated distributed search system that supports the RESQ forwarding model using Java. Using a combination of publicly-available data and principled experimental design, we make direct comparisons between RESQ and realistic rank-and energy-only baselines. In the subsections that fol-low, we describe our experimental setup, methodology, and results in the subsections that follow. For reproducibility, the code, data, and raw figure values from our study are available online at https://github.com/resqforwarding/ cikm13 .
Underlying our evaluation is a combination of the AOL query log [31], New York Independent System Operator (NY-ISO) electricity prices [29], and Google data center location-related information [18]. We describe each data source and its scope in our study in the subsections that follows.
The AOL query log [31] contains approximately 36 , 000 , 000 query events (queries or subsequent result click-through an-notations) from over 650 , 000 users. Each query event in-cludes the fields id , query terms , and time . Although con-troversial, the query log is publicly-available and used widely (e.g., [20], [22], [10], [15], [19], and [1]), which simplifies com-parisons to past and future results. Existing research has also investigated how to effectively anonymize such query logs (e.g., [21], [11], and [14]). For privacy, we do not con-sider the linguistic meaning of the terms, and we do not attempt to deanonymize users.
The New York Independent System Operator (NYISO) day-ahead zonal market electricity pricing data [29] contains publicly-available electricity price reports from various New York regions in 15-minute intervals. We select a 1-week report duration starting on November 7, 2011. The date is arbitrary. The report from a particular zone forms an energy price time series consisting of 672 (= 1 week  X  7 days/week  X  24 hours/day  X  4 observations/hour) time-price observations of the form  X  t,p j ( t )  X  where  X  t  X  is a 15-minute interval from a 24-hour clock period and p j (  X  ) is the price function in Sec. 3.1. Previous studies incorporating energy prices have used similar data (e.g., [24]).
The physical locations of six real Google data centers [18] are selected for estimating site-to-site latencies and sub-sequent query response times. The locations are approxi-mately uniformly representative of world regions. One site location is  X  X ocal X  and the remaining five sites locations are  X  X on-local X  relative to the local site. The quantity of site lo-cations is consistent with previous studies (e.g., [9] and [24]). Table 3 summarizes the locations, including a possible local and non-local assignment, and site-to-site distances based on the assignment. For example, consider a query submitted to a (local) search site in Berkeley County, South Carolina, USA. The great circle distance for forwarding the query to a (non-local) data center in Hamina, Finland is approximately Table 3: The data center locations employed in the evaluation of RESQ. Geographic distributions of dis-tances between the sites are provided for a sample local and non-local assignment.
 Non-Local 7716 km. As elaborated on in the next section, the N (  X  ,  X  ) notation indicates that the example distance is a mean for a distribution of distances employed in the latency construc-tion.
Although we employ widely-used publicly-available data, our evaluation still relies on simulation. Therefore, we give careful consideration to the overall simulation complexity and the intuition behind the underlying probabilistic struc-tures [35]. In the subsections that follow, we describe the energy prices, latency values, ranking bounds, evaluation configurations, and training and testing processes.
Each of the local and non-local sites are uniformly ran-domly assigned an energy price time series consisting of ob-ergy price report (see Sec. 4.1.2) also selected uniformly at random. Intuitively, the shifts capture the site-to-site spa-tial variation in energy prices. The corresponding 24-hour time stamp of a query is used to assign an electricity price. Specifically, a 24-hour duration in the site X  X  week-long price is uniformly randomly selected, i.e., p = 1 7 , and the query time stamp time is used to selected the 15-minute block  X  t  X  of the duration that the time is contained in. The price dur-ing the corresponding block represents the current energy price at site S j at time t and is denoted p j ( t ).
The latency  X  L j between between a local site  X  S and non-local site S j is modeled as a normally distributed random variable. The basic idea is to use a combination of site-to-site geographic distance, the speed of light, and a couple of intuitive network adjustments to estimate latency values. Formally, where d  X   X  D j , a normally distributed random variable with mean  X  j , the great circle (or  X  X ird flight X ) distance between  X  S and S j , and standard deviation  X  j , the length of the diago-nal formed by treating (the area of) the geographic unit (e.g., a state) containing the location as a square. The intuition is that network connections, even high-speed site-to-site ones, do not maintain static, straight-line source to destination paths, including modest susceptibility to physical or virtual path changes (e.g., non-AS router changes). Note that the bird-flight distance between the sites is measured using ge-ographic locations assigned uniformly randomly to each site from Table 3. Given a distance d  X   X  D j , we obtain a latency value by dividing by a constant c = 200000 km/s, which is converted to milliseconds (ms), and defined to approximate the speed of light through fiber [32]. However, as pointed out in [9], despite geographic distance-based latency compu-tation being reasonable, other delays (e.g., due to queuing) are not captured. Therefore, we apply the regression-based latency mapping y = 8 . 239 + 1 . 983 x derived and validated experimentally by Cambazoglu et al. [9] to obtain the final latency value for forwarding at time t . Note that a linear function of a normally distributed random variable is also normal.
When a local site processes a query, the result ranking upper bounds are computed as standardized term-length-weighted average frequency counts. Formally, when query terms contains k terms t 1 ,t 2 ,...,t k , we compute the rank upper bound r j for results at site S j as where w i is the average length of term t i (denoted | t i respect to the lengths of the other terms in the query, and f j (  X  ) is a function that returns the frequency count of a term at S j . Lastly, the bound is standardized as Although other term-based approaches are possible [34] [25], the method is simple, has similar intuition, and relates well with site index information. It also adequately maintains the site variability mentioned in Sec. 4.2.4.
Each experiment consists of multiple configurations. A configuration consists of a diversity level and an energy bud-get. The diversity level (denoted L ) represents variability in the upper bounds on the result rankings among sites. The intuition behind index diversity is grounded in the localized nature of queries and subsequent retrieved documents. We apply diversity probabilistically over each  X  f j ( t )  X  in the ac-cumulated  X  t,f j ( t )  X  pairs at each site (obtained via a process elaborated on in Sec. 4.2.5). Specifically, for a given diver-sity level L , we let X i j  X  Bernoulli(1 / 2) be a  X  X oin toss X  for the i th  X  t,f j ( t )  X  pair at S j . We derive a new frequency f for the pair as follows: produce result rankings that generate 10 average standard deviations over the approximately 1 , 000 , 000 queries in each testing set with a Pearson correlation coefficient of almost 1 (i.e., the diversity effectively captures variability in result ranking upper bounds). For an energy budget (denoted  X  ), the corresponding model term is C in Eq. 2. The budget val-ues are the first five multiples of the average weekly energy price, referred to as 1  X ,..., 5  X  in Sec. 4.3.
As mentioned in Sec. 4.1.3, our experiments employ a total of six sites (or data centers): one local site and five non-local sites. The five non-local sites are trained using  X  t,f j ( t )  X  pairs accumulated from approximately 18 , 000 , 000 query events, i.e., about half of the query log, distributed evenly among the sites. The query events are preprocessed using a standard approach of lowercase conversion, stem-ming, and stopword removal. Experiments are conducted using testing data obtained by randomly sampling batches of 1 , 000 , 000 queries from the remaining queries, i.e., the queries that are not used for training. The queries are of the form &lt;query terms, time&gt; . We preprocess the query terms in the queries using the same standard approach that we applied to the training data. We evaluate the L and  X  configurations using 10 testing sets for each combination. The results are averaged, and 95% confidence intervals are computed. 2 Results over all configurations are reported.
Using the data setup outlined in Sec. 4.1 and the ex-periment methodology described in Sec. 4.2, we evaluate a distributed search system that implements the RESQ for-warding model. In the subsections that follow, we briefly describe the baseline approaches, performance metrics of interest, and then illustrate and interpret results of direct comparisons between RESQ and the baselines in terms of ranking quality, energy costs incurred, query response times, and the extent of non-local result resilience.
Recall that RESQ is a hybrid selective query forwarding model that considers both ranking quality and energy cost. Therefore, we consider the relative performance of RESQ to ranking-and energy-only baseline selective query forwarding algorithms. The first, denoted: Note that although we are partially motivated by [24] (see Sec. 2), the approach is not an appropriate baseline in our study because the indexes are replicated fully, resulting in any data center providing equally good scoring documents.
An analysis of selective query forwarding algorithms such as RESQ must investigate any relative difference in the rank-ing quality obtained in the context of baseline approaches.
The error bars did not provide substantial insight and their removal increased illustration clarity. Therefore, we will not discuss their presence in the remaining sections. On the other hand, as energy costs are a constraint within our problem scope, we X  X e also interested in the relative costs of the different forwarding models. Intuitively, a good se-lective query forwarding algorithm will balance high quality results with low energy expenses. We formalize the dual goals of result quality and energy cost savings as  X   X  , which represents the difference between the ratio of ranking qual-ity upper bounds (or  X  X uarantee factor X ) and the ratio of cu-mulative energy cost. The ranking quality and energy cost ratios are denoted  X  r and  X  e , respectively. In the context of the ranking-only approach B rank , we let with the functions r and c as notational conveniences that refer to the cumulative result rankings and energy costs in Eq. 1 and Eq. 2, respectively, for RESQ or the baseline B rank . The definitions are similar for B energy . Intuitively, large positive values of  X   X  indicate preservation of ranking quality while reducing energy costs. Indeed, a value of  X  1 indicates that result rankings from RESQ are equivalent to B rank . On the other hand, small values of  X  e indicate low energy costs relative to B rank .

Also of interest to RESQ is the time from when a query is issued until results are returned or the  X  X uery response time. X  Indeed, while latency from user to local site for-warding is consistent with centralized and non-forwarding approaches, selective query forwarding algorithms such as RESQ also potentially forward queries between sites dis-tributed globally. Therefore, we examine the site-to-site la-tency of a local site forwarding a query and obtaining results from non-local sites. Based on the formulation in Sec. 3.1, the query response time for a query q i , denoted T ( q i function of the set of forwarding decisions { x ij } m j =1 in Line 7 of Algorithm 1 in Sec.3.2 and the site-to-site la-tency between a local site  X  S and non-local site S j , denoted  X  l , i.e., a value taken by  X  L j via the process discussed in Sec. 4.2.2. Formally, where t j ( q i ) is the processing time for q i over index I non-local site S j . The response time is a sum of the longest roundtrip site-latency (among forwarded-to sites) and the time to evaluate the query at the site. Intuitively, the longest-latency forwarded-site is a bottleneck compared to the times of the other sites which already completed the forwarding.
The performance of RESQ relative to ranking-only for-warding baseline B rank is illustrated in Fig. 3. The hori-zontal axis indicates the diversity in partial indexes, as de-scribed in Sec. 4.2.4. The vertical axis reports  X   X  , our com-bined metric for measuring the difference between the ratio of ranking quality upper bounds and the ratio of cumulative energy costs.

The results demonstrate that RESQ maintains favorable percentages of the baseline ranking guarantee while reducing energy costs substantially over a range of index diversity levels and energy cost budgets. For example, with a budget of 2  X  , i.e., twice the average weekly energy price, RESQ Figure 3: Average performance curves for RESQ and baseline B rank over all testing sets (e.g., 10 trials) and configuration settings (e.g., L and  X  ). achieves 76% of the original ranking guarantee at 54% of the energy cost. As shown in the upper right corner of Fig. 3, one of the better tradeoffs occurs when the diversity level is L = 9 and the budget is 3  X  , i.e., about 84% of the original ranking guarantee with a 47% savings in energy costs.
We examine RESQ X  X  underlying result ranking and energy cost ratios in Fig. 4(a) and Fig. 4(b), respectively. The  X  r values using the baseline B rank are presented across all diversity levels L and energy budgets  X  , i.e, the values under which all of the ranking quality and energy cost tradeoff curves were obtained. For example, the  X  r curve for B rank in Fig. 4(a) and the  X  c curves for B rank in Fig. 4(b), both when  X  = 4, correspond to the mid-performing curve 4  X  in Fig. 3. The steady increase in proportion of the baseline ranking result thresholds is evident across all settings of L and  X  , even with relatively constant intra-budget  X  c values, which we discuss in Sec. 4.3.4.
When compared to B energy , the energy consumption for a forwarding algorithm such as RESQ should be as close to the greedy baseline as possible. The intuition is that en-ergy cost constraint may be considered to be tuned to a desired cost. Under such a scenario, the best case ratio oc-curs when  X  c = 1. On the other hand, an increase in ranking quality over the baseline is still desirable. Therefore, we let  X  i.e., we invert Eq. (10) and Eq. (11) in Sec. 4.3.2. As demonstrated by the performance curves in Fig. 5, RESQ leverages relatively small differences in energy costs for sub-stantially increased improvement in ranking quality. For example, with a medium level of index variability of L = 6 and an energy budget of 3  X  , RESQ gets 7% closer to the desired cost while increasing the result quality by 14%. The improvement is consistent across the parameter settings.
We also examine RESQ X  X  underlying result ranking and energy cost ratios in Fig. 4(c) and Fig. 4(d), respectively. Recall that  X  r is inverted for B energy , which makes the de-creasing values in the budget curves indicated improving performance. Although important to the overall perfor-mance illustrated in Fig. 3 and Fig. 5, the  X  c values in Fig. Figure 4: Relative performance of RESQ to: 4(a), B rank with respect to result rankings; 4(b), B rank with respect to energy cost; 4(c), B energy with re-spect to result rankings; and 4(d), B energy with re-spect to energy costs. Results are averages over all testing sets (e.g., 10 trials) and configuration settings (e.g., L and  X  ). Figure 5: Average performance curves for RESQ and baseline B energy over all testing sets (e.g., 10 tri-als) and configuration settings (e.g., L and  X  ). Figure 6: Query response times CDFs for B rank , B energy , and RESQ. The energy budget is 4  X  and the diversity level is L = 5 , which represents a con-figuration that produces an average result. 4(b) and Fig. 4(d) did not show substantial intra-budget variation. The reason is that the coarse granularity of en-ergy budgets relative to site energy prices made sites simi-larly expensive under a particular budget. In this respect, the results obtained are pessimistic, as the hybrid nature of RESQ allows for maximal savings under nuanced variance in energy prices or budgets.
Sequential query forwarding algorithms must deliver high quality results and cost savings in spite of communication latency across potentially large geographic distances (e.g., between the locations in Table 3). Therefore, we investi-gate the query response times obtained by RESQ and the baselines B rank and B energy . That is, we measure the time between when a local site initially forwards a query to when the non-local documents are returned to the forwarding site. The response time results for each forwarding algorithm are illustrated with a cumulative distribution function (CDF) in Fig. 6.

For the CDFs shown, the fraction of queries that are an-swered under a particular response time in milliseconds for B rank , B energy , and the proposed algorithm RESQ is com-puted using Eq. (12) in Sec. 4.3.2. Averages are computed over a run of experiments and reported in 100 ms intervals. The configuration settings of L =5 and 4  X  were selected be-cause of the medium level of results the configuration pro-duced in Fig. 3. RESQ forwards queries in shorter times than each of the baselines, with B rank taking the longest amount of the time. The close response time distributions of B energy and RESQ are due to neither algorithm explic-itly making forwarding decisions based on latency. We note that the RESQ forwarding model in Sec. 3.1 does not pre-clude the addition of latency based constraints. However, we do not explore such extensions in the current study. The percentage of queries that take less time correspond to situ-ations where a longer-latency site was not contacted accord-ing to a portion of the LP solution contained in Eq. (4). The intuition is that B rank , for example, forwards queries to all sites that may contribute top-ranked results, including sites Figure 7: Average fraction of non-local sites selected from the underlying thresholding scheme that re-ceive queries using B rank , B energy , and RESQ. The energy budget is 4  X  and the diversity level is L = 5 , which represents a configuration that produces an average result. that may incur a long latency. RESQ, on the other hand, answers about 21% of its queries in less time while maintain-ing substantial ranking guarantees and saving energy costs (e.g., the  X   X  values in Fig. 3).
A characterization of the number of non-local sites em-ployed by selective query forwarding algorithm also provides insight. Indeed, with more sites contacted, there is more of a chance for efficiency gains from query forwarding to be diminished (e.g., consider a degenerate case where all non-local sites are considered to possibly have relevant doc-uments). Although some of the related efforts report the fraction of non-local sites their approaches contact (e.g., [9] and [24]), the fraction of result sites selected by the under-lying thresholding technique (or  X  X esult site distribution X ) is more relevant. The reason is that RESQ forwards to a sub-set of the sites that the base thresholding technique selects (i.e., the algorithm never forwards to a site that does not have the possibility of returning a top-k result). The aver-age percentage of the non-local sites that might have results scoring well enough to warrant the locally-received query being forwarded to them using B rank , B energy , and RESQ is illustrated in Fig. 7. Recall that as B rank selects all of the thresholded sites, its fraction is always 1. Compared to B energy , RESQ is subject to identical budgets and coarse granularity in prices. Hence, over a small number of sites, there is not a substantial difference in the fraction of the non-local sites contacted. On the other hand, compared to B rank , RESQ selects a (possibly proper) subset of the sites to forward queries to. On average, RESQ makes about 23% fewer forwards, while maintaining a substantially higher per-centage of the result ranking upperbounds, and less relative energy costs, as illustrated in Fig. 3.
We note that ranking quality thresholding techniques can-not guarantee zero false-positive sites without all non-local sites evaluating a query (which obviates the need for selec-tive query forwarding). Indeed, it is possible that the locally-aggregated results contain only local-results for the global top-k . For example, as mentioned in Sec. 3.2, the non-local sites selected for forwarding might return results that all score lower than documents at the local site. Therefore, the ratio of the result rankings is more relevant to RESQ than the false-positives associated with the underlying threshold-ing technique (e.g., [9]). We also point out that a decrease in ranking guarantee is not necessarily equivalent to a down-grade in ranking quality. Indeed, the results of such systems are a function of retrieved document scores, with properties of the underlying bounds determining the possible quality of results aggregated at a local site.
We introduced RESQ, a novel hybrid rank-energy selec-tive forwarding model that considers ranking quality and energy costs simultaneously in non-replicated distributed search systems. Experiments with the AOL query log, NY-ISO energy price series, and real Google data center loca-tions demonstrate that RESQ forwarding achieves favorable tradeoffs between the possibility of returning high quality query results and the costs due to temporal and spatial vari-ations in energy prices.

An interesting future direction for our study is to investi-gate rank-energy approaches to search engine caching. For example, consideration of the spatial and temporal vari-ance in energy prices that RESQ exploits may lead to in-creased cost savings for cache eviction algorithms (e.g., [16] and [7]). Similarly, adaptive selection of underlying site retrieval strategies (e.g., based on query efficiency predic-tion [5]) may also help RESQ process the queued query vol-ume at a local site within particularly low-or high-price time durations. While the design of RESQ does not necessarily preclude the adoption of such existing approaches, a fresh look at the problems in the context of rank-and energy-awareness for distributed search systems may yield useful insights.
The authors thank Xiao Qin of Worcester Polytechnic In-stitute for early design discussions, and the three anonymous reviewers for detailed comments and helpful suggestions. [1] I. S. Alting  X  ovde, R. Blanco, B. B. Cambazoglu, [2] R. Baeza-Yates, A. Gionis, F. Junqueira, [3] C. Baumgarten. A probabilistic solution to the [4] R. Blanco, B. B. Cambazoglu, F. P. Junqueira, [5] D. Broccolo, C. Macdonald, S. Orlando, I. Ounis, [6] B. Cahoon and K. S. McKinley. Performance [7] B. B. Cambazoglu, F. P. Junqueira, V. Plachouras, [8] B. B. Cambazoglu, V. Plachouras, and [9] B. B. Cambazoglu, E. Varol, E. Kayaaslan, [10] M. J. Carman, F. Crestani, M. Harvey, and M. Baillie. [11] G. Chen, H. Bai, L. Shou, K. Chen, and Y. Gao. UPS: [12] comScore. comscore releases march 2012 u.s. search [13] G. Das, D. Gunopulos, N. Koudas, and [14] H. Feild, J. Allan, and J. Glatt. Crowdlogging: [15] M. Fontoura, M. Gurevich, V. Josifovski, and [16] Q. Gan and T. Suel. Improved techniques for result [17] D. Goodwin. Spotlight Keynote with Matt Cutts. [18] Google. Data center locations. http://www.google. [19] S. Gurajada and S. K. P. Index tuning for query-log [20] S. Gurajada and S. K. P. On-line index maintenance [21] Y. Hong, X. He, J. Vaidya, N. Adam, and V. Atluri. [22] J. Huang and E. N. Efthimiadis. Analyzing and [23] F. P. Junqueira, V. Leroy, and M. Morel. Reactive [24] E. Kayaaslan, B. B. Cambazoglu, R. Blanco, F. P. [25] Y. Ko. A study of term weighting schemes using class [26] A. Kulkarni and J. Callan. Document allocation [27] A. Kulkarni, A. S. Tigelaar, D. Hiemstra, and [28] A. Moffat, W. Webber, and J. Zobel. Load balancing [29] New York Independent System Operator (NYISO).
 [30] J. Niccolai. Swedish data [31] G. Pass, A. Chowdhury, and C. Torgeson. A picture of [32] B. Quigley. Speed of light in fiber X  X he first building [33] A. Qureshi, R. Weber, H. Balakrishnan, J. Guttag, [34] G. Salton and C. Buckley. Term-weighting approaches [35] J. Tague, M. Nelson, and H. Wu. Problems in the [36] A. Teymorian, X. Qin, and O. Frieder. Resq: [37] U.S. Energy Information Administration (EIA).
 [38] YouTube. Press room statistics. [39] Q. Zhang, Y. Wu, Z. Ding, and X. Huang. Learning
