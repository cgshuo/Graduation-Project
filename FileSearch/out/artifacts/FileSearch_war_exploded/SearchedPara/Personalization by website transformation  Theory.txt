 Saverio Perugini * 1. Introduction
Personalization refers to automatically customizing interactive information systems based on user preferences. Person-alization technologies are now widely utilized on the web. While most approaches to personalization are either gence-oriented, the central theme of our approach is to personalize a user X  X  interaction with a website by progressively transforming its structure in response to every user interaction in a session with the site to help the user experience paths through the site not traversable through browsing. For instance, consider a user shopping for a book by Aldous Huxley at a website which only presents books by genre. Such a user unsure in which genres Huxley published is forced to browse not required until the user is nested deeper into the catalog.

Our approach to this problem is a technique called out-of-turn interaction . The idea is to permit a user navigating a hierarchical website to postpone clicking on any of the hyperlinks presented on the current page (e.g., when unable or unwilling to respond to the current prompt for input) and, instead, communicate the label of a hyperlink nested deeper in the hierarchy. When the user supplies such out-of-turn input we transform the hierarchy to reflect the user X  X  informational need. In the example above, when unsure in which genres Huxley published, the user may communicate  X  X ldous Huxley X  to the site out-of-turn. In response, we would transform the hierarchical organization of the catalog so that all hyperlinks leading to books not written by Huxley are purged and re-present the hierarchy to the user. As a result of the transformation, the user would see a page of hyperlinks representing genres. However, each hyperlink remaining would eventually lead to a book by Huxley. Thus, out-of-turn interaction permits the user to circumvent any intended flows of nav-igation hardwired into the hyperlink structure by the designer and, in this manner, helps reconcile any mismatch between the site X  X  one-size-fits-all organization and the user X  X  model of information seeking.

We built a transformation engine as a web service based on this idea which prunes a hierarchical site when given out-of-turn input. We also built two interfaces to communicate the input to the engine: a voice interface, implemented with Voice-
XML and X+V, which permits the user to supply out-of-turn inputs through speech and enables multimodal interaction when used in conjunction with hyperlinks, and Extempore , implemented with XUL, which is a cross-platform toolbar plugin embedded into the Mozilla Firefox web browser. The transformation engine, interfaces, and a coordinating interaction man-ager constitute a customizable software framework for creating web personalization systems with support for out-of-turn interaction ( Narayan, Williams, Perugini, &amp; Ramakrishnan, 2004 ). We have applied this technique to various websites, including the Open Directory Project, a large web directory.

We have studied out-of-turn interaction from software implementation (Narayan et al., 2004 ) and human-com-puter interaction (HCI) (Perugini, Anderson, &amp; Moroney, 2007 ) perspectives. The goal of this paper is to study the transformation which supports this technique from a graph transformation perspective and analyze the traversals of the site it enables. This is an intermediate approach between the implementation and HCI complementary ap-proaches. Specifically, we (i) formalize the transformation in graph-theoretic terms, (ii) describe a toolkit we built which computes and simulates all of the traversals enabled by all possible complete series of out-of-turn transforma-tions in any site to qualify the relationship between how terms are distributed through the site X  X  structure and the effect of support for the transformation in a site, and (iii) report the results of employing this toolkit in two websites.

The central mantra of this paper is that a series of website transformations on a site supports a set of traversals through the site we called an interaction paradigm:
Only a small subset of all possible traversals made possible by a series of out-of-turn transformations on a site can be expe-rienced through browsing. 2. Related research
Traditionally, there are two main approaches to web personalization: template-and AI-oriented approaches. The tem-plate-based approach ( Perugini &amp; Ramakrishnan, 2003 ) (also called checkbox personalization) is predominately employed in the my sites (e.g., My Yahoo! (Manber et al., 2000 )or My eBay ). Most all e-commerce sites now provide such a facility.
The onus is on the user to explicitly specify her preferences and, as a result, the content, structure, or presentation of the website is tailored accordingly. Such an approach involves explicit user modeling (Konstan et al., 1997 ). While template-based approaches to personalization do not suffer from privacy concerns, the level of personalization delivered is bounded by the investment of the user in communicating his interests, and often higher-order connections or serendipitous recom-mendations are not possible. On the other hand, AI-based approaches to web personalization involve covertly monitoring to implicitly glean user preference and, ultimately, build a user model which is used as a basis from which to personalize the site. One popular example of such an approach is adaptive websites (Perkowitz &amp; Etzioni, 2000 ). Unlike template-based personalization, the success of AI-oriented approaches is not predicated on the cooperation of the user. However, these methods are perceived as invasive and raise privacy concerns (Riedl, 2001 ). The primary enabling technology for ing (Srivastava, Cooley, Deshpande, &amp; Tan, 2000 ). This user-model through access monitoring approach is seen in the adaptive hypermedia ( Brusilovsky, 2001 ) and interactive information retrieval (White, Jose, &amp; Ruthven, 2006 ) communities.
 The out-of-turn website transformation approach to personalized interaction does not fit into either of these categories. creased level of attention from the interactive information retrieval community recently as an approach between template-and AI-based techniques.

Faceted browsing and search permits a user to explore a multi-dimensional dataset in a manner which matches the user X  X  mental model of information-seeking, thereby personalizing the user X  X  interaction with site (e.g.,  X  X ou prefer to browse rec-ipes using a by main ingredient, dish type, preparation method motif while I prefer to browse by dish type, preparation method, and main ingredient X ). The multi-faceted index of recipes at http://epicurious.com is perhaps the most illustrative example of a faceted classification on the web (Hearst, 2000 ).
 3. Theory: out-of-turn transformation formalism 1
Fundamentally, the out-of-turn transformation is a closed transformation over a graph modeling the hyperlink structure of a website. In this section we discuss how websites can be represented as graphs, how interacting out-of-turn transforms a graph, and the implications a series of those transformations have on web interaction. 3.1. Websites as graphs org. Edges help model paths through a website a user follows to access leaf vertices, which model leaf webpages containing content. We refer to a leaf content page as terminal information and the terms therein as units of terminal information. Edge-after) which a user may bring to bear upon information seeking. Structural information thus helps make distinctions among terminal information.
 A set of terms is complete when it determines a particular terminal webpage; otherwise it is partial .An interaction set of a
DAG D is the complete set of the terms along a path from the root of D to a leaf vertex of D . An interaction set constitutes does not capture any order of the terms therein. On the other hand, a sequence is a total order of an interaction set wrt the parenthood relation of the site. In other words, a sequence represents a path from the root to a leaf in a site. The sequence shopping, apparel, winter is in the DAG shown in Fig. 1 (left). A term is in-turn information if it appears as a hyperlink label on the user X  X  current webpage and is, thus, currently solicited by the system. On the other hand, a term is out-of-turn system, but relevant to information-seeking. In any DAG, in-turn and out-of-turn information is mutually-exclusive. 3.2. Transformations
We now present some website transformations. Term extraction is a total function TE : D ! P  X  T  X  which given D returns the set of all unique terms in D , where D represents the universal set of DAGs, T represents the universal set of terms, and every occurrence. A term-level set of D then is a term-co-occurrence set comprising all unique terms in D with the same level. turns the set of all unique terms in D with level l (i.e., a term-level set), where M represents the maximum depth of D .If D represents the DAG in Fig. 1 (left), TLE  X  D ; 2  X  X f international ; advertising ; coupons ; electronics ; apparel g . the sub-DAG rooted at vertex 3, which represents the result of a user clicking on the hyperlink labeled  X  X hopping X . The symbol
Out-of-turn transformation is a partial function OOT 1 :  X  D T  X ! D where
FP ( forward propagate ):  X  D T  X ! P  X  L  X  is a total function which given D and a term t 2 T  X  TE  X  D  X  returns a set of leaf vertices L of D , where L contains each leaf vertex reachable from all paths of D containing an edge labeled t , and L denotes the universal set of leaf webpages,
BP ( back propagate ):  X  D P  X  L  X  X ! D ? is a partial function which given D and L returns a DAG D paths from the root of D to the leaves of D which classify the leaf vertices in L , and
CE ( consolidate edges ):  X  D T  X ! D ? is a partial function which given D and a term t 2 TE  X  D  X  returns D e in D labeled with t is removed in D 0 , the source v s of e is replaced with its target any edge e 0 with target v s in D 0 . 8
Fig. 1 illustrates the out-of-turn transformation (i.e., forward-propagation (left) followed by back-propagation (center) followed by consolidation (right)).

Intuitively, this transformation retains all sequences of D which contain the out-of-turn input ( FP followed by BP ), and then removes the out-of-turn input from those remaining sequences  X  CE  X  . The result of FP is the set of all leaf vertices classified by the out-of-turn input. We back-propagate from this set of leaves up to the root of the DAG with
BP . Note that when no term in the DAG represented by the first argument to OOT the second argument to OOT 1 is in-turn information, the transformation is functionally equivalent to B . Thus, OOT subsumes B .

To marry the out-of-turn transformation with standard techniques from information retrieval we can replace FP with any total function SL ( select leaves ):  X  D T  X ! L which given D and a term t 2 TE  X  D  X  returns a set of leaf vertices of D modeled in the leaf pages and not explicitly used in the classification), in replacement of or in addition to structural information, to bear upon the transformation and resulting interaction. For instance, we might perform a query (e.g.,  X  X aptop X ) in a vector-space model over the set of leaf webpages (i.e., documents) using cosine similarity to arrive at a target set of leaves from which to back-propagate. Notice that D also can be represented as a j TE  X  D  X jj CR  X  D  X j term-doc-ument matrix, where rows correspond to terms (i.e., structural information, or edge-labels) and the columns correspond to webpages (i.e., terminal information, or leaf vertices). Collect results is a total function CR : D ! P  X  L  X  which given D
Fig. 1 (center). 3.3. Commutativity We now examine the commutativity of the out-of-turn transformation.
 Lemma. The out-of-turn transformation is commutative, assuming both sides are defined: where x and y represent terms. A sketch of the proof of this lemma is given in (Perugini, 2004, Chap. 4)
Armed with this lemma, we can consider the possibility of communicating multiple terms per utterance, where an utter-ance is a set of terms with the same arrival time  X  the time at which the user communicates a term or terms to the system. To accommodate multiple terms per utterance, we re-define the out-of-turn transformation: where u denotes an utterance consisting of only the f t 1 (and v is terminal information). Otherwise, u is partial information. 3.4. Web interaction
We now present concepts which relate to a user X  X  interaction with a website to help describe the cumulative effect of the out-of-turn transformation on a site. Several partial orders can be defined over an interaction set wrt arrival time. When a user clicks on a hyperlink, she implicitly communicates the hyperlink X  X  label to the underlying system. For instance, when a user clicks on a hyperlink labeled  X  X ews X  followed by that labeled  X  X nternational X , she communicates the news, interna-tional terms to the system, in that order. Similarly, when the user supplies out-of-turn input, he is communicating terms to the system. These partial orders can be summarized as partially ordered sets or posets. Each linear extension of such a poset is a total order called an interaction episode .A browsing interaction episode of D is a total order on any interaction set of D wrt the parenthood relation of D . Notice that a browsing episode is the same as a sequence as defined above. An implied by out-of-turn interaction. The arrival time relation implied by out-of-turn interaction is a partial order containing the term set partitions from each interaction set are required to be ordered. The linear extensions of the posets associated with these partial orders are out-of-turn interaction episodes.
 words, an interaction paradigm is a complete set of realizable interaction episodes from D wrt a transformation (e.g., Browse or OOT ). The browsing paradigm P B of D in Fig. 1 (left) is:
The out-of-turn paradigm P O of D is: where terms in parentheses (e.g.,  X (europe news) X ) represent a single utterance with multiple terms (i.e., more than one term with the same arrival time). Since OOT subsumes Browse , the browsing paradigm of a site D is always a proper subset of the site X  X  out-of-turn interaction paradigm (Perugini, 2004, Chap. 4), There are 143 (= j P turn interaction paradigm of D in Fig. 1 (left).
 To capture the number of episodes in an out-of-turn paradigm we use notation from discrete mathematics ( Kreher &amp; number of a set of size m is S  X  m ; n  X  X j s  X  m ; n  X j . It follows that B  X  m  X  X 
Intuitively, support for the out-of-turn transformation in a website enriches user interaction with that site so that users can experience traversals through the site which represent permutations of all set partitions of the interaction set from each browsing episode in the site. Therefore, we use this notation to count permutations of set partitions. Specifically, we define adigm (i.e., the total number of interaction episodes in the paradigm): where SQ ( sequencize ): D ! P  X  E  X  is a total function which given D returns the browsing paradigm P the universal set of interaction episodes, and
GIS ( get interaction set ) E ! S is a total function which given an interaction episode E returns the interaction set over which it is defined, where S denotes the universal set of sets.

This formula considers valid utterances containing one or more terms and makes no assumption on the consistency of the length (i.e., number of terms) across all browsing episodes.

The columns of Table 1 labeled n  X  1 ; ... ; 10 contain the number of episodes (permutations) of n partitions of an inter-other words, the size of the out-of-turn paradigm corresponding to a browsing paradigm consisting of only one episode. The ratio of the number of episodes in a DAG X  X  out-of-turn paradigm to those in its browsing paradigm is shown in the column labeled % in Table 1 and defined by the following expression: 4. Practice
We now study the effect that the out-of-turn transformation has on two websites and, specifically, the implications of the structure and characteristics of a site on the results of the transformation. 4.1. Analysis toolkit
Given the formalism above, users can make out-of-turn utterances at any point while interacting with a website, and in any order, and, thus, there is a combinatorial explosion in the number of possible interaction episodes this single transfor-turn transformation enables, we built a toolkit, available from http://oot.cps.udayton.edu/oot-toolkit.tgz , which consists of
Perl scripts to: (i) compute the size of an out-of-turn paradigm of a site given the number and length of each sequence there-in, (ii) generate the out-of-turn interaction paradigm for a site (i.e., given the browsing paradigm, enumerate all possible interaction episodes realizable through the out-of-turn transformation), (iii) simulate interaction episodes in batch while collecting a variety of transformation statistics, and (iv) compute the number of sequences in which each term in a site is contained. The scripts to both compute the size of an out-of-turn paradigm and generate all interaction episodes in an out-of-turn paradigm make use of modules which are optimized to use dynamic programming strategies and, as a result, the toolkit produces results on large sites fast.

The episode simulator produces a complete summary of what is capable with support to interact out-of-turn with a web-number of sequences through the site remaining after each utterance in that episode:
Notice that the numbers trailing some of the above episodes have repeating ones (1 X  X ). Once an utterance initiates a trans-formation which renders a site with only one remaining sequence, the result is effectively fixed. It is up to the designer to force the user to click through a series of links leading to the only terminal page remaining or to consolidate that series. 4.2. Case studies
The out-of-turn transformation is a pruning operator and is appropriate on the web when several term associations underlie the hierarchical model of the site on which it is applied. The sequences pruned from a site are those which do not contain the term supplied out-of-turn. Therefore, invoking the out-of-turn transformation with a term which appears in a frequent number of sequences results in the retention of more sequences (and, thus, terminal pages) and removal of less. On the other hand, suppling a term out-of-turn which appears only in a few sequences selects less sequences and prunes more. For instance, the term  X  X dvertising X  classifies six of the 11 sequences through the DAG D in Fig. 1 (left) and, therefore, supplying  X  X dvertising X  out-of-turn causes the site to be thinned while retaining the semblance of a hierarchy depend on how the terms labeling hyperlinks are distributed throughout the site X  X  sequences.

For insight into the results of the out-of-turn transformation in practice, we conducted a variety of experiments in two websites: Project Vote Smart (PVS) and the News category of the Open Directory Project (hereafter referred to as News). Terms are distributed differently throughout the sequences of these sites. Specifically, unlike the sample site given in selection, followed by branch of Congress (House or Senate), then a choice for political party (Democrat, Republican, or Inde-corresponds to a facet of information seeking. We call faceted sites with a consistent depth (i.e., sequence length across all sequences or number of facets across all sequences) structured (Perugini, 2009 ). On the other hand, the sample site given in they present is schemaless and self-describing and, thus, often called semistructured data (Abiteboul, Buneman, &amp; Suciu, 2000). Furthermore, News, and ODP in general, unlike the sample site in Fig. 1 (left), does not have a consistent depth across all sequences.

Project Vote Smart is a comprehensive and authoritative website for political officials at all levels of government. PVS has a webpage for each state and federal official containing biographical information as well as information about the official X  X  party affiliation, committees, and voting record. The Open Directory Project (ODP) is the largest, most comprehensive, and most widely distributed human-compiled taxonomy of links to websites (Perugini, 2008; The Open Directory Project, 2002 ). We analyzed the News topic of ODP available from http://rdf.dmoz.org in RDF format.

Table 2 captures values for a variety of structural characteristics of PVS and News. Results in Tables 2 and 3 reflect the US congressional landscape on December 4, 2007 and the News category of ODP data based on the dump file, downloaded on January 18, 2008, which contains the category hierarchy information. We also include the values owing to the presence of symbolic links, News is not a DAG due to the presence of symbolic links which induce cycles. While in News reside outside of the News section of ODP, we purged the symbolic links from News and analyzed a tree model of it.
Values in the column labeled Depth indicate the minimum and maximum length of any sequence. In Fig. 1 (left) and PVS, the minimum and maximum depth equal each other. The column labeled #Tv provides the sum of the values from the cor-responding entries of the columns labeled #Nlv and #Lv . In the absence of symbolic links, the number of hyperlinks in a site (given in the column labeled #Lk ) is equal to the number of child vertices in the site (or one minus the number of total ver-&lt; one word (i.e., any string of characters except space), this definition permits a term to consist of more than one word (e.g.,  X  X usiness and Economy X  is one term in News) and this viewpoint is reflected in the terms counts in Table 2 , which omit dupli-cates. The number of duplicate terms is given in the column labeled #Lk since the total number of terms equals the total number of hyperlinks based on the definition of term above. We compute the average ( l ) number of children per vertex as the total number of children (i.e., the total number of vertices minus one, divided by the total number of parents or non-leaf vertices, in a site). Table 2 reveals that there are more leaves than non-leaves in the two sites studied (1.69 times more in PVS and six times more in News). The terms in this paragraph are also defined in (Perugini, 2008 ). 4.3. Results
Table 3 reveals that even though News has 100 less sequences than PVS, the out-of-turn transformation enables more interaction episodes in it. The minor increase in depth in News (none of its sequences extend more than two levels deeper than any in PVS) versus PVS translate to more than four times the number of episodes. However, in both sites, support for
While there is a stark difference in the number of episodes supported by the out-of-turn transformation in each site, the sode types and the 177,594 total episodes in News fall into 1,142 unique types. An episode type indicates how the episode (Analysis and Opinion Columnists), (Directories) and (Analysis and Opinion Columnists), (By Publication) both leave the same type. Fig. 2 (top left) examines the number of sequences remaining after each utterance across all episodes in News.
Each line from the maximum y value (i.e., the starting number of sequences in a site) to the minimum y value (which is al-ways one) represents an episode. The dense areas of this graph depict the dominate episodes types.
 same depth, the values in the column labeled % in Table 3 are the same as those in the column labeled the same in Table 1 .
Therefore, while the values for j P O j and % in Table 1 are wrt one browsing episode, they are relevant to the computation of the number of episodes in sites with a consistent length across all sequences.

To reiterate, the result of the out-of-turn transformation depend on the frequency of sequences in which the term sup-plied out-of-turn is contained. For instance, the term  X  X emocrat X  occurs in 286 of the 538 sequences through PVS and, there-fore, supplying it out-of-turn causes the hierarchy to be thinned. In contrast, the term  X  X ashington, DC X  occurs in only one sequence in PVS and, thus, saying it out-of-turn results in a shortcut directly to the terminal webpage of the democrat congressperson representing DC in the House. Similarly, in News, the term  X  X nited States X  appears in a high percentage of all one sequence and, thus, saying it out-of-turn results in a shortcut. Therefore, out-of-turn interaction supports episodes call, any out-of-turn paradigm subsumes the corresponding browsing paradigm). In other words, the technique may require up to as many utterances (or steps) as the depth of each sequence to find the desired information. Therefore, to explore this continuum we classify the episodes based on how many utterances each requires of the user to arrive at the desired infor-somewhat normally distributed throughout this continuum.
 We also plot the distribution of the episode types over the number of episodes per type in Fig. 2 (bottom left) for News.
This graph illustrates that many types have a small number of episodes and only a few types have a large number of epi-sodes. Lastly, in Fig. 2 (bottom right) we plot the distribution of terms across sequences for News. This graph reveals that only a small number of terms are contained in a high percentage of all sequences and most terms are contained in a small number of sequences (less than 10). Intuitively this means that only a few utterances are necessary to reduce the site to a small number of sequences. In other words, the transformation helps users arrive at the desired information after only a few do not exist in many sequences. In summary, the frequency of sequences containing each term in a website indicates how many sequences the out-of-turn transformation prunes. The purpose of the analysis toolkit is to help designers explore the effect of the transformation in a site. 5. Discussion
Interacting out-of-turn is a helpful when a user is not sure which terminal information they desire. The technique can be used for focused or exploratory tasks. A search for  X  X emocratic senators X  in PVS is focused while navigating the congresspeo-
In either case, the transformation supporting the technique vastly increases the scope of ways to interact with a hierarchical website and, thereby, accommodates multiple models of information-seeking. Overall, the cumulative effect of a series of out-of-turn transformations on a site converts the site X  X  one-size-fits-all browsing paradigm (e.g., by-genre, by-author), insufficient to satisfy all users, into one from which all users are accommodated (e.g., by-genre, by-author and by-author, by-genre), albeit without explicitly enumerating all possible traversals in the hardwired hyperlink structure or building a user model for each individual user. The transformation is appropriate in: large, semistructured web directories, such as ODP, where it can both thin the directory when used with a term appearing in a high percentage of sequences (and preserve hierarchical structure and, thus, context) or help users identify a partic-ular sequence in a directory given a term which appears in only a few sequences or only one sequence resulting in a short-cut. In both cases, it helps the user identify where the desired information is situated within a voluminous directory, faceted sites where there are too many facets of information seeking to render using a relational table interface, such as
Apple X  X  iTunes or the Relational Browser++ (Zhang &amp; Marchionini, 2004 ), for purposes of limited screen real estate, espe-cially in systems designed for mobile devices (e.g., PDAs, smart phones), and automated, interactive voice-response systems such as those used by banks and airlines to reduce agent costs in call rout-ing ( Perugini et al., 2007 ).

We contribute an alternate perspective on website transformation and its cumulative effect on personalized user inter-mation on site structure, and two case studies, which involve experiments that demonstrate the capabilities of the transformation and toolkit. Our approach lies between template-and AI-based (i.e., mining user logs to build user models of preference) approaches to web personalization.
 Acknowledgments
My view of personalization and website transformation has benefited from interactions with Naren Ramakrishnan at Vir-ginia Tech. I also thank Ed Fox at Virginia Tech for helpful discussions and insights. This work was supported in part by seed grants from the University of Dayton Research Council, the Ohio Board of Regents, and the University of Dayton College of Arts and Sciences.
 References
