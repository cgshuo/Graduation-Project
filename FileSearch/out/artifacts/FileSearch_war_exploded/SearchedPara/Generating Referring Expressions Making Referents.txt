 EACH, University of S  X  ao Paulo Computing Science Department, University of Aberdeen Computing Science Department, University of Aberdeen to identify. This article focuses on referring expressions in hierarchically structured domains, redundant information in them if this leads to a significant reduction in the amount of search that is needed to identify the referent. Generation algorithms are presented that implement this idea by including logically redundant information into the generated expression, in certain well-two controlled experiments with human subjects were conducted. The first experiment confirms that human judges have a preference for logically redundant expressions in the cases where our model predicts this to be the case. The second experiment suggests that readers benefit from the kind of logical redundancy that our algorithms produce, as measured in terms of the effort needed to identify the referent of the expression. 1. Introduction
Common sense suggests that speakers and writers who want to get their message across should make their utterances easy to understand. Broadly speaking, this view is con-firmed by empirical research (Deutsch 1976; Mangold 1986; Levelt 1989; Sonnenschein 1982, 1984; Clark 1992; Cremers 1996; Arts 2004). The present article will examine its consequences for the generation of referring expressions ( tinguish between two aspects of the  X  X nderstanding X  of a referring expression, which we shall denote by the terms interpretation and resolution. We take interpretation to be the process whereby a hearer/reader determines the meaning or logical form of the referring expression; we take resolution to be the identification of the referent of the expression once its meaning has been determined. It is resolution that will take center stage in our investigation.
 sentences (1a) X (1c), uttered somewhere in Brighton but not on Lewes Road. The de-scription in (1a) is longer (and might take more time to read and interpret) than (1b), but the additional material in (1a) makes resolution easier once interpretation is successfully completed.
The first two of these descriptions refer uniquely. As for the third: Lewes Road is a long street. Supposing that other streets in Brighton do not have numbers above 900, then even (1c) is a unique description X  X ut a pretty useless one, because it does not help you to find the house unless your knowledge of Brighton is exceptional. We will explore how a natural-language-generation (NLG) program should make use of logically redundant properties so as to simplify resolution (i.e., the identification of the referent). When we write about identifying or  X  X inding X  the referent of a referring expression, we mean this in the sense of determining which object is the intended referent. This conceptual goal may or may not require the hearer to make a physical effort, for example by turning the pages of a book, or more dramatically by walking and waiting for traffic lights. has been observed in many empirical studies. Levelt (1989), for example, mentions the need for redundancy in situations of  X  X egraded communication X  (e.g., background noise); and even in normal situations, redundant nondiscriminating information can help the addressee identify the referent (Deutsch 1976; Mangold 1986; Sonnenschein 1982, 1984; Arts 2004). In Levelt X  X  words, psycholinguistic experiments show that
Although early GRE algorithms have often followed the Gricean maxim,  X  X e brief X  (Grice 1975), by minimizing the number of properties in a generated description, Dale and Reiter (1995) proposed an algorithm that allows certain redundancies, for example, by guaranteeing that each generated description expresses the ontological  X  X ype X  of the referent, in the form of a noun, a move that addresses Levelt X  X  claim to some extent.
In corpus-based studies, it has been shown that logically redundant properties tend to be included when their inclusion fulfils one of a number of pragmatic functions, constitutes one of her reasons for being interested in the referent) or to highlight the 230 speaker X  X  awareness that the referent has the property in question (Jordan 2000, 2002). Implementations of such findings in NLG are not difficult to envisage.
 dundant information to reduce the search space within which a reader has to  X  X ind X  a referent; this will be specifically useful when referents need to be found in situations where the extensions of some of the properties are not known to the reader/hearer in advance (cf., Edmonds [1994] for a related set of problems) and where some effort may be needed to identify the referent. By focusing on the information needs of the hearer/reader, our work, a further development of Paraboni and van Deemter (2002a) that also takes the results of Paraboni, Masthoff, and van Deemter (2006) into account, addresses an issue that lies close to the heart of NLG as a practical enterprise, whose purpose is, after all, to make information accessible to people. These issues originally came to the fore while studying references to parts of documents (Paraboni 2000, 2003;
Paraboni and van Deemter 2002a, 2002b) but their relevance extends to many other situations. Our findings will also shed light on the egocentricity debate among psy-cholinguists about the extent to which speakers take hearer X  X  knowledge into account when they speak (Keysar, Lin, and Barr 2003). Throughout the article, we shall focus on issues of Content Determination (as opposed to, for example Lexical Choice), and on the situations in which individuals are first mentioned (as opposed to ones in which linguistic context allows them to be shortened [e.g., Krahmer and Theune 2002;
Siddharthan and Copestake 2004]). 2. Ease of Resolution in the Incremental Algorithm Generation of referring expressions ( GRE ) is a key task of
Dale 2000, Section 5.4). An important aspect of GRE is to find combinations of properties that allow the generator to refer uniquely to an entity, called the target. Crucially, algorithms only use properties whose denotations are part of the common knowledge of writer and reader. 2 These algorithms are typically designed in such a way that gener-ation is performed quickly (e.g., their worst-case running time tends to be linear [Dale and Reiter 1995; van Deemter 2002]) but the processing effort of the reader is not taken into account. Some algorithms do make a point of generating descriptions that are as brief as possible (Dale 1989), and this can be argued to make interpretation easier. As we have seen, however, in relation to Examples (1a X  X ), brevity can make resolution difficult.
Incremental Algorithm (Dale and Reiter 1995) starts by arranging attributes in a list, af-ter which they are considered one by one, to see if any of their values contributes some-thing to the description, by removing  X  X istractors X  (i.e., objects other than the referent); if an attribute (e.g., COLOR ) can contribute something, then a suitable value (e.g., for this attribute is selected as part of the description. This is repeated incrementally un-til the logical conjunction of all selected attribute X  X alue combinations results in a unique identification of the referent. There is no backtracking, and this is what keeps the com-plexity of the algorithm linear; it is also what causes the algorithm to sometimes express a property P even when properties that are added later make P logically redundant. properties used in the description (i.e., the fact that it may be difficult to ascertain which objects have the property in question [Horacek 2005]), or the size and structure of the search space. To exemplify the first factor, suppose you are queuing up for a concert and want to explain to a friend that a girl further ahead in the queue has his ticket. Color is an attribute that speakers like to use, even if it leads to logical redundancy (Pechmann 1989). This might be done by describing the referent as the girl in a yellow dress, or as the girl with green eyes, for example. But arguably, the first property contributes more towards your friend X  X  search, because the color of a person X  X  eyes may not leap out at him from afar. In the Incremental Algorithm, the fact that useful than EYE COLOR could be tackled by letting it precede of attributes. As a consequence, EYE COLOR would only be considered if the referent cannot be identified uniquely without using a combination of more preferred attributes, including DRESS COLOR . Arguably, this is exactly as it should be, and it shows much of what is good about the Incremental Algorithm. It is not so obvious, however, how the algorithm should deal with the second of the two possible obstacles to resolution: the size and structure of the domain. 3. Problems for Resolution
In this section we shall introduce a class of domains (Section 3.1) and a class of problems for resolution that can arise when objects in these domains are identified using a distin-guishing description (Section 3.2). Section 4 will relate these problems to a simple model of the resolution process and propose a remedy, which consists of generating logically redundant descriptions (in two different ways). Sections 5 and 6 provide examples of putting our ideas to the test: first, by investigating what kind of description is preferred by subjects who are given the choice (Section 5); then, more elaborately, by investigating the effect of redundant descriptions on readers (Section 6). 3.1 Hierarchical Domains
Existing work on GRE tends to focus on fairly simple domains, dominated by one-place properties. When relations (i.e., two-place properties) are taken into account at all (e.g.,
Dale and Haddock 1991; Krahmer and Theune 2002), the motivating examples are kept so small that it is reasonable to assume that speaker and hearer know all the relevant facts in advance. Consequently, search is not much of an issue (i.e., resolution is easy):
The hearer can identify the referent by simply intersecting the denotations of the proper-ties in the description, for example, intersecting the set of girls with the set of individuals who wear a yellow dress (both in the domain). Although such simplifications permit the study of many aspects of reference, other aspects come to the fore when larger, and subtly structured, domains are considered.
 ordered . For the purpose of this article, we consider a domain to be hierarchically ordered if its inhabitants can be structured like a tree in which everything that belongs to a given node n belongs to at most one of n  X  X  children, and everything that belongs to one of n  X  X  children belongs to n . Examples include countries divided into provinces, which, in turn, may be divided into regions, and so on; years into months, then into weeks, and then into days; documents into chapters, then sections, then subsections; 232 buildings into floors, then rooms. Clearly, hierarchies are among our favorite ways of structuring the world. 3 and hearer at utterance time. Later on (most explicitly in Section 6), we shall focus on more realistic situations but, to get the idea, it will be useful to think about the extreme case where, before the start of resolution (i.e., before consulting the  X  X nowledge in the world, X  as opposed to the hearer X  X   X  X nowledge in the head X  [Norman 1988]), the hearer knows nothing about the domain. When the utterance is made, the hearer X  X  blindfold is removed, so to speak, and resolution can start. No similar assumption about the speaker is made: We assume that the speaker knows everything about the domain, and that he knows that the hearer can achieve the same knowledge. Many of our examples will be drawn from a simple model of a University campus, structured into buildings and rooms; the intended referent will often be a library located in one of the rooms. The location of the library is not known to the hearer, but it is known to the speaker. some additional attributes such as its ROOM NUMBER or NAME using one or more of these properties. (For example, ROOM NUMBER a room uniquely within a given building; BUILDINGNAME = Watts identifies a building within the university.) This is a useful assumption, because without it, the existence of a distinguishing description cannot be guaranteed.
 tion) take the form of a list where x 1 = r is the referent of the referring expression and, for every j &gt; 1, x ancestor (not necessarily the parent) of x j  X  1 in the domain D . For every j , P properties that jointly identify x j within x j + 1 or, if j = n , within the whole domain. The reference the library in room 120 of Cockcroft building, for example, is modeled as 3.2 Obstacles for Resolution
We have argued that generating a uniquely referring expression is not always enough, because such an expression can leave the hearer with an unnecessarily large search space. But the issue is an even starker one, especially X  X s we shall soon see X  X hen it is taken into account that references in hierarchically structured domains can make use of the position of the speaker and hearer in the domain. (For simplicity, we assume that these two locations coincide.) pose a hierarchically ordered domain D contains only one entity whose
Consider the following noun phrases, uttered in the position marked by d in Figure 1. (The first three have the same intended referent.)
Utterances like Examples (2a) and (2b) make use of the hierarchical structure of the domain. 4 We focus on the search for x n (i.e., the highest hierarchical level referred to in the description) because, under the assumptions that were just made (in particular the fact that x j be identified uniquely in x j + 1 by the properties P where problems can be expected (because no parent node is available).
 referent uniquely, some of these descriptions can be problematic for the hearer. One type of problem occurs in Example (2d). The expression is logically sufficient (i.e., there is only one room labeled 140 in the entire university). But, intuitively speaking, the ex-pression creates an expectation that the referent may be found nearby, within the
Watts building, whereas, in fact, a match can only be found in another building. In a case like this, we will speak of Lack of Orientation ( LO ). Even more confusion might occur if another library was added to our example, for instance in Watts 110, whereas the intended referent was the other library (i.e., in room 120 Cockcroft). In this case,
Example (2c) would misfire, of course. The expression (2b), however, would succeed, by mutually using two parts of the description ( the library and room 120 ) to identify another:
There are two libraries, and two rooms numbered 120, but there is only one pair ( a , b ) such that a is a library and b is a room numbered 120, with a located in b . Such cases of 234 mutual identification 5 are unproblematic in small, transparent, domains where search is not an issue, but in large hierarchical domains, they are awkward (see the Conclusion).
For, like Example (2d), (2b) would force a reader to search through an unnecessarily large part of the domain; worse even, the search  X  X ath X  that the reader is likely to follow leads via an obstacle (namely, room 120 Watts) that matches a part of the description, al-though not being the intended referent of the relevant part of the description (i.e., room 120 Cockcroft). Confusion could easily result. For even if the reader eventually finds the library, she has no simple way of knowing whether it is the right one. (Perhaps a library in Watts 120 has been overlooked.) In cases like this, we speak of a Dead End ( DE ). associated with them, one of which is the TYPE attribute. As before, we shall assume Before defining LO and DE more precisely, we describe the related notions of S S
COPE G ROUP ,andthenotionofa search path . We write x  X  D to say that x is a node in the tree D ;if A is an attribute applicable to x then A ( x ) denotes the value of A for x . S COPE ( x , { A 1 , ... A n } ) is the largest subtree of D in which the values for the attributes
A , ... A n jointly succeed in pinning down the referent. In practice, we shall usually focus on situations where n = 1, in which case we shall write S brackets. In our University domain, let x be room 140 of Cockcroft, then S
NUMBER ) is the subtree rooted in Cockcroft, because within Cockcroft, all room numbers are unique, whereas at the level of the entire university (the next level up), this is not the case (even though the room number 140 itself happens to be unique at that level). way. Assuming, once again, that x  X  D , and letting U stand for a set of attributes associated with x , we define: Thus, S COPE G ROUP ( x , { A 1 , ... A n } ) is the set of those elements of S
A } ) that are of the same TYPE as x . Again, we shall focus on cases where n = 1, and omit brackets. Thus, in the example domain, S COPE G ROUP is any room in Cockcroft, is the set of all the rooms in Cockcroft.
 the definition of S COPE G ROUP because it tends to be the only non-structural attribute that is used to identify domain objects (i.e., the only attribute that is not intended for designating a node of the domain tree). 6 Non-structural attributes will be assumed to be unproblematic, operating like a filter on the set of possible referents. For example, (although they might be looking for them in the wrong building). path. A search path is a series of steps in the search for a referent, representing visits to nodes in the domain tree D . The path will be modeled by an ordered list of visited nodes: O = n 1 , n 2 , ... n m . The node n until either the referent is found (success) or the reader gives up (failure). As before,
A to occur if some y occurs prior to x n in O , for which S
COPE G ROUP ( x n , A 1 , ... A j ). Calling such y an obstacle, there are two types of obstacle: the obstacles for which all the properties in P n are true (these are perhaps the worst kind, because they can be mistaken for the intended referent), and the ones for which
Lack of Orientation ( LO ). If there is at least one obstacle of the former, more serious kind, we will speak of Dead End ( DE ). For example, in the case of the DE Exam-ple (2b) ( the library in room 120 ), the description itself can be modeled as the list L = ( r , { type = library } ), ( x R
OOM N UMBER = 120 and x n is the room where the library is. Suppose that the search path for x n corresponds to the following sequence (because referents are always found in leaf nodes, other nodes appear in brackets): Part of this sequence is the obstacle y = Watts 120, which is of the same both are rooms), and which does not belong to S COPE G ROUP it does not belong to the Cockcroft building).
 of DE . If the room Watts 120 is removed from the domain, there no longer exists an obstacle of the most serious kind (because there is only one room whose room number is 120), but rooms 100 and 110 in the Watts building are obstacles of the less serious kind, making this an example of LO .
 domain structures. In principle, DE and LO could result even in the most unlikely regions of the domain. Suppose the cup on the table is uttered in a room d , which contains the intended referent. Now suppose (rather perversely perhaps) the hearer started searching in another room, say the kitchen, before looking at the nearest table (in d ). If the kitchen happens to contain a table as well, and this table does not support any cups, DE would result. Search, however, seems unlikely to proceed in this way.
To make testable predictions, we will make some assumptions concerning the way in which referring expressions are resolved by hearers. To explain what these assumptions are, let us return to the examples in Section 3, repeated here for convenience. 236
We assume that these sentences are uttered in the University, say at the location d ,and that d determines the starting point of the search for a referent. Henceforth the starting point s will be assumed to be the parent node of d . The intuition behind this assumption is simple: When searching, start looking nearby .
 call Ancestral Search . In formulating this principle, we will use d as a name for the referring expression (which, as we know, takes place at location d ); we will use Ref( d ) as short for the intended referent of d .

Ancestral Search ( AS ) says that the hearer of a referring expression searches exhaus-tively through the current search space (e.g., the building in which the expression is uttered, or the current document section containing the expression) before inspecting a larger subtree. AS does not say how the search within each subtree (i.e., the one dominated by s or s ) is carried out. We do not claim that readers always adhere exactly to AS , especially not when they are confronted with unusual situations (as we shall see in our second experiment). Rather, AS can be seen as an  X  X deal model, X  much like a straight line could be seen as an ideal model of how a pedestrian walks from one point to another.
We shall see later that AS makes surprisingly accurate predictions in terms of what references are found difficult by readers. 4. Generation Algorithms
What kinds of expression would existing GRE algorithms produce in the situations of interest? Because hierarchies involve relations, the first algorithm that comes to mind is the one proposed by Dale and Haddock (1991). Essentially, this algorithm combines one-and two-place predicates, until a combination is found that pins down the target referent. A standard example involves a domain containing two tables and two bowls, although only one of the two tables has a bowl on it. In this situation, the combination { verify the three predicates, and this justifies the description the bowl on the table .Now consider Figure 2, with one additional library in room 110 of the Watts building. Here the combination { library ( x ), in ( x , y ), room ( y ), roomnumber ( y ) = 120 too), because no other library is located in a room with room number 120 (and no other room numbered 120 contains a library). Thus, the standard approach to relational descriptions allows precisely the kinds of situation that we have described as DE .
Henceforth, we shall describe this as the Minimal Description ( MD ) approach to refer-ence because, in the situations of interest, it uses the minimum number of properties by which the referent can be distinguished.
 property of the library, and to use the Incremental Algorithm (Dale and Reiter 1995) to generate the descriptions in question. This, however, would not produce results that are interestingly different from MD . Suppose, for example, that the preferred (i.e., considered first by the algorithm), with values such as  X  X ibrary X ,  X  X oom X , and so on. Suppose, furthermore, that the attribute ROOM NUMBER the attribute BUILDING NAME and, crucially, that a property such as x is interpreted as true of all those objects in the university (regardless in which building) that are located in something whose room number is x . Then the Incremental Algorithm starts selecting TYPE = library, followed by ROOM NUMBER a distinguishing description is reached. In other words, the same description would be generated by this algorithm as by Dale and Haddock (1991) and, once, again, the infamous LO and DE would occur. Choosing a preference order in which building names are preferred over room numbers would produce the library in Cockcroft. Al-though this description seems defensible in this case, it is easy to see that this preference order would produce excessively lengthy descriptions in other situations. No single preference order produces acceptable results in all cases.

DE and LO if AS holds. (These algorithms will be investigated empirically in Sections 5 and 6.) They operate by reducing the reader X  X  search space, including logically redun-dant information into the descriptions that they generate. These algorithms, called Full
Inclusion ( FI )and Scope-Limited ( SL ), are not the only ways in which resolution may be aided, but we will see that they represent two natural options. Both take as input a hierarchical domain D , a location d where the referring expression will materialize, and an intended referent r . The output is a list of properties L to be turned into an English description by a language realization program.
 identify the referent uniquely within its parent node, then moves up to identify this parent node within its parent node, and so on until reaching a subtree that includes the starting point d . 7 FI may be likened to existing treatments of salience. In Krahmer and Theune X  X  (2002) approach to GRE , for example, distractors that have lower salience than the intended referent do not have to be removed. We apply this idea to hierarchical domains using the assumption that from the point d where the utterance was made all nodes within d  X  X  parent node are as salient as d itself, while more  X  X istant X  nodes are gradually less salient. As in Krahmer and Theune, salience sometimes allows for shorter 238 descriptions, as when room 110 replaces room 110 in Watts when said in Watts building (but outside room 110).

The function FI.Identify is defined recursively: (For simplicity, L does not contain the individual referents x 1 ,..., x j , but only their properties.)
Applied to our earlier example of a reference to room 120, FI first builds up the list L = ( type = room , roomnumber = 120) , then expands it to L = ( type = room , roomnumber = 120), ( buildingname = Cockcroft ) . Now that Parent ( X )includes d , r has been identified uniquely within D and we reach STOP . L might be realized as room 120 in Cockcroft, for example.
 is brevity: By conveying logically redundant information, descriptions are lengthened, and this can have drawbacks, most evidently when there are limitations of space or time. The second algorithm, called SL , constitutes a compromise between brevity and ease of resolution. SL prevents DE and LO but opts for brevity when DE and LO do not occur. Put differently, SL favors ease of resolution when there is a risk of DE or
LO , but ease of interpretation when there is no such risk. This is done by making use of the notion of S COPE , which was used in the definition of DE and LO . It may be recalled that a description ( x , P ) in which P conveys attributes A
LO when its hearer comes across a node of the same type as x that is not a member S lead to DE or LO . Consequently, ( x , P ) can be uttered in any position d within the subtree words, if S COPE ( x , { A 1 , ... A n } ) contains d ,andif A in a description ( x , P ), then this description does not lead to DE or LO . This allows SL to use logically redundant properties more sparingly:
Whereas FI only terminates the generation of the description when a node that includes d is reached, SL concludes potentially much earlier, when an attribute (or a combination uniquely throughout a tree that includes d . By taking scope into account, SL avoids the inclusion of any hierarchical levels not strictly required for preventing DE and LO . room 140 (in Cockcroft) as the intended referent. Existing and Reiter (1995) would tend to produce a minimally distinguishing description such as room 140, causing LO . SL , by contrast, would produce the description room 140 in
Cockcroft, 8 which in this case is the same description produced by FI .The difference between FI and SL becomes evident when we consider a case in which the minimally distinguishing description does not lead to DE / LO  X  X hat is, when AS predicts that the reader will meet no DE or LO obstacles. For example, let X  X  return to the situation university. A reference to r = library would be realized by FI as the library in room 120 in
Cockcroft. By using SL , however, the same description would be realized simply as the library, because the S COPE of the attribute TYPE is the whole domain tree [more precisely, S COPE ( LIBRARY , ROOM NUMBER ) = D ] because there is only one entity of in the domain and hence no other properties are added. Note that the addition of a second library in the Watts building would reduce S COPE ( r , in the  X  X uilding X  node (i.e., each library would be defined by the building to which it belongs). The behavior of the SL algorithm would change accordingly, producing the library in Cockcroft. Similarly, had we instead included the second library under another room of Cockcroft, the S COPE would have been reduced even further, causing SL to describe r as the library in room 120 of Cockcroft, just like the FI algorithm. 5. First Experiment: Measuring Reader X  X  Preferences
In this section we start putting the intuition that LO and DE are better avoided to the test. We report on a small experiment with human subjects, which involved a document structured in sections and subsections as an example of a hierarchically ordered domain.
We chose this domain because, unlike most other domains, it allows us to show subjects the domain itself (i.e., a real document), rather than, for example, a pictorial represen-tation of it. More specifically, we investigated the choice of so-called document-deictic they avoid potential DE and LO situations by adding logically redundant properties (favoring ease of resolution) and, conversely, whether they choose shorter descriptions when there is no such risk (favoring ease of interpretation). 240 5.1 Experiment Design
Subjects. 15 academics with considerable practice in the authoring of papers on compu-tational linguistics.

Procedure. A within-subjects design was used. All subjects were shown a printed doc-ument containing 18 incomplete statements. Subjects were asked to put themselves in the shoes of the author and to choose the description that they found more suitable for each situation:
Subjects completed the statements by choosing one of two alternatives provided: one  X  X inimally distinguishing X  description and the other conveying logical redundancy (corresponding to the output of the FI or SL algorithms). Both alternatives are un-ambiguous references to the same object. Figure 3 shows a number of descriptions of this kind (whose intended referents are elsewhere in the document) and objects (referred to by descriptions elsewhere). Statement 11 gives a choice between a logically redundant description as generated by FI or SL ( Part C of Section 2 ) and its minimally distinguishing alternative Part C . Both alternatives are unambiguous because there is only one part labeled as  X  X  X  in the document, but the shorter one may potentially lead to LO because the current document section does not contain a part labeled as  X  X  X .
Similarly, Statement 12 gives a choice between a minimally distinguishing description as generated by MD or SL , and a logically redundant alternative as generated by
FI , but in this case none of the alternatives can lead to DE or LO because there is only one  X  X able 2 X  in the entire document. The presentational order of alternatives (i.e., short versus redundant descriptions) was evenly distributed, to control for order effects.

Research questions. We were interested in seeing whether readers prefer longer (i.e., logically redundant) descriptions when there is a risk of DE or LO and, conversely, whether they prefer minimally distinguishing descriptions when there is no such risk.
Table 1 shows the type of situation (potential DE , LO , and non-problematic), the reader and referent location, and the descriptions used. To break the monotony of the task and to disguise the purpose of the experiment, another six situations were used that were not relevant to the experiment. Half of the situations, in each of the types, involved backward references, the other half involved forward references. Pictures were enumerated per part so that we could compare short and long versions of potentially problematic descriptions (e.g., Picture 5 in which the intended referent is not in the current document part, which may or may not contain other pictures). Within the LO situations, two of the four statements involved references to pictures, whereas the other two involved references to sections. This was done in order to test whether the type of referent had any influence on the choices made by the subjects. All the questions related to potential DE situations involved references to pictures, because using DE references to sections would have led to highly artificial structures.

We will use the DE situations in Table 1 to test this hypothesis, investigating how often subjects prefer FI / SL descriptions to MD ones.

We will use the LO situations in Table 1 to test this hypothesis, investigating how often subjects prefer FI / SL descriptions to MD ones. Note that in problematic situations, SL generates the same descriptions as FI . 242 erated by FI or SL in non-problematic situations (i.e., those not involving potential
DE or LO ). We did not use pictures as we did in the problematic cases because in these cases both FI and SL would produce the same descriptions (e.g., Picture 5 ).
In order to compare these algorithms in non-problematic situations we used tables enumerated throughout the document, in which case descriptions produced by SL are short (e.g., Ta b l e 5 ) and descriptions produced by FI are longer (e.g., Table 5 in Part C of Section 2 ).

We will use the non-problematic situations in Table 1 to test this hypothesis, investigat-ing how often subjects prefer FI descriptions to MD / SL ones. Note that in these non-problematic situations, SL generates the same descriptions as MD .
 dundant descriptions generated by FI or SL ) is favored over ease of interpretation (as in minimally distinguishing descriptions) when the description may lead to DE or LO .
Hypothesis 1 . 3 investigates whether ease of interpretation (as in MD or SL descriptions) is favored over ease of resolution (as in descriptions generated by FI ) when the former does not lead to DE or LO situations.

Materials. DE sand LO can only occur in fairly complex domains. Instead of trying to find a large number of such documents, we made use of a specially designed schematic document. The document was presented in a printed version (3 pages long), divided into sections (1 X 3) and subsections ( X  X  X  and  X  X  X ); Section 2 contained also a subsection labelled  X  X  X . 10 referent can be called Picture or Figure or just Fig.; the reference can be constructed from the bottom up ( Picture 3 in Section 4 ) or from the top downwards ( Section 4, Picture 3 ); made one fairly arbitrary choice from among all these possibilities, motivated by the types of reference that we observed most frequently in an informal study of a collection of patient information leaflets from the PILs corpus (ABPI 1997): We always used the word Picture, we constructed the references bottom up (going up one level at a time), and never used commas or semicolons. Thus, for example, we asked subjects to compare
Picture 3 in Part B of Section 3 with Picture 3 in Part B. different realization choice would produce different experimental outcomes, this does not seem likely.
 occurred on the same page then physical proximity might have obscured navigational issues, causing a bias towards the shortest alternative. Reference d and referent r were always in document parts whose layout properties differed from each other (e.g., not both in subsections labeled as  X  X  X  in different sections of the document). Had d and r occurred in document parts with similar layout properties, there might have been a bias towards the most complete (i.e., the longest) description. 5.2 Results
Hypotheses 1 . 1and1 . 2 were confirmed; hypothesis 1 . 3 was not. In fact, DE was avoided in 100% of all subjects X  decisions. In situations involving LO ,the FI version was chosen on average in 93% of cases (stdev = 15%), which is highly significant (Wilcoxon signed ranks test, Z =  X  3.56, p &lt; .0001). In the cases not involving DE or
LO , there was no significant preference for or against logical redundancy (Wilcoxon signed ranks test Z =  X  0.51, p = .61). The trend is in the predicted direction (mean of 57% for MD descriptions), but the variation between subjects was very large (stdev = 41%). 5.3 Discussion of First Experiment
This first experiment supported the hypothesis that subjects prefer references that include logically redundant information where there is a risk of DE / LO . Arguably, it is precisely this kind of information that is needed for the construction of algorithms. Where logically redundant information does not make the referent easier to identify, the results of the experiment are less clear, with the subjects being divided between logically minimal and logically redundant descriptions. In other words, while supporting the informal observations reported in Sections 2 and 3, the experiment does not point to a generic preference of one of the two GRE Section 4.
 the  X  X istance X  between objects. For example, if tables are enumerated throughout the document, is the brief, SL -type description Ta b l e 5 easy enough to resolve? It depends: numbers support browsing not unlike page numbers; if tables are sparse, however, then searching through the entire document may take unacceptably long, and a more redundant, FI -type description such as Table 5 in Section 4.3 is likely to be preferred. The nature of the domain is bound to matter as well. For example, in a large spatial domain in which navigation requires physical effort, short, SL -style descriptions are probably less acceptable than in a situation where the domain can be surveyed at a glance. To exemplify the first type of situation, let us return briefly to Examples (1a) X (1c), assuming that a city is divided into areas, and an area into streets:
If these are uttered somewhere in Brighton but not on Lewes Road then AS predicts that utterance (1c) leads to LO , because the hearer will start looking for a number 968 in the street where the description is uttered. Consequently, utterance (1c) is infelicitous 244 anywhere except on Lewes Road. But how about Examples (1a) and (1b)? Both descrip-tions avoid LO and DE , because Brighton has only one Lewes Road. Yet if the hearer does not know that Lewes Road is in Moulsecoomb, then the resolution of Example (1b) may involve more work than Example (1a).
 human judges when their opinion about these references is asked. Although this has the advantage that subjects were in a position to make trade-offs between the advantages and disadvantages of the different expressions (perhaps balancing ease of interpreta-arises from the fact that meta-linguistic judgments are sometimes thought to be an unreliable predictor of people X  X  linguistic behavior (e.g., van Deemter 2004). Perhaps more seriously, the experiment fails to tell us how difficult a given type of reference (for example, one of the DE type) would actually be for a reader, and whether the difficulty another experiment. 6. Second Experiment: Measuring Search Effort
In the previous experiment, we found that human authors often prefer logically redun-dant references, particularly when DE and LO can arise. In a follow-up experiment, we investigate the effect of logical redundancy on the performance of readers. We are primarily interested in understanding the search process, so resolution rather than interpretation. It will become clear that the new experiment necessitates a more careful design and a more complex analysis than the previous one. 6.1 Experiment Design
Subjects. Forty-two students on a first-year Computing Science course participated in the experiment as part of a scheduled practical.

Procedure. A within-subjects design was used. All subjects were shown 20 on-line documents. The order of the documents was randomized per subject, to control for order effects. The document structure was always visible, and so was the content of the current document part. A screenshot of an example document providing this level of information is shown in Figure 4. Each document was initially opened in Part B of either Section 2 or 3, where a task was given of the form  X  X et X  X  talk about [topic].
Please click on [referring expression]; X  for instance: Let X  X  talk about elephants. Please click on picture 5 in part A. Subjects could navigate through the document by clicking on the names of the parts (e.g. Part A as visible under Section 3). As soon as the subject had correctly clicked on the picture indicated, the next document was presented. Subjects were reminded throughout the document about the task to be accomplished, and the location at which the task was given. All navigation actions were recorded. At the start of the experiment, subjects were instructed to try to accomplish the task with a minimal number of navigation actions.

Reader X  X  Knowledge. We assume that readers do not have complete knowledge of the domain. So, they do not know which pictures are present in each part of each section.
If readers had complete knowledge, then a minimal description would suffice: For example, if readers knew that there is only one picture 5 in the document, located in part B of section 3, then the description picture 5 would probably be completely clear.
We do not, however, assume readers to be completely ignorant, either. We assume that they have some knowledge of the domain, particularly of its hierarchical structure. This brings us to the question of how much knowledge we should assume our readers to have. In practice (unlike Section 3.1, where the hearer was pictured as blindfolded until the description is uttered) readers will always have some knowledge: If in Part B of
Section 2, then they would know (by convention) that there will also be a Section 1, and a Part A in Section 2, and so on. It is also likely that being in Part B of Section 2 and contain pictures, and that pictures are numbered (though not necessarily per part).
Because of these kinds of consideration, it seems appropriate to give our readers knowledge about the entire document structure (the 5 sections and their parts) and the content (i.e., the existing pictures) in the current document part (but crucially, no knowledge about pictures elsewhere in the document, which require navigation to be discovered). A navigation structure like the one in Figure 4 provides this knowledge to the readers.

Research Questions. We want to test whether longer descriptions indeed help resolution, particularly in so-called problematic situations. Table 2 shows the types of situation (potential DE , LO , and non-problematic), 12 reader and referent location, and descrip-tions used.
 246
This hypothesis is similar to hypotheses 1.1 and 1.2 of the previous experiment. We will use the DE and LO situations in Table 2 to test this hypothesis, comparing for each situation the number of navigation actions of the short, that is, minimally distinguishing ( MD ) and long ( FI / SL ) expressions.
 problematic situations, stating that MD descriptions would be preferred to long de-scriptions in non-problematic situations. This is not a natural hypothesis in the new experiment, because it might not happen very often that a shorter description will lead to fewer navigation actions ( pace Cremers 1996). (Note that in the previous experiment we looked at the combination of interpretation and resolution, whereas we are now focusing on resolution only). Instead, we will look at gain : the number of navigation actions required for a short description minus the number of navigation actions required for a long description.

We will use the DE and non-problematic situations in Table 2 to test this hypothesis, comparing the gain of situation 1 with that of situation 7, and the gain of situation 2 with that of situation 8.
 outperform shorter descriptions in any situation. So, from a resolution point of view, an algorithm that would always give a complete description may produce better results than the algorithms we proposed (e.g., situations 3 and 4 in Table 2). The aim of our algorithms is to make the descriptions complete enough to prevent DE and LO in to show that the decisions taken by FI and SL are sensible, that is, that they produce descriptions that are neither too short nor too long. Therefore:
Introducing separate hypotheses for cases S 1and S 2 poses the problem of defining when a gain is  X  X egligible X  and when a gain is  X  X arge. X  Instead, we will compare the gain achieved in S 1 with the gain achieved in S 2, expecting that the gain in S 2 (which we believe to be large) will be larger than the gain in S 1 (which we believe to be negligible).
Materials. Twenty on-line documents were produced, 13 with the same document struc-ture (sections 1 to 5 with parts A to C) and containing 10 pictures. Documents had a unique background color, title, and pictures appropriate for the title. The number of pictures in a section or part varied per document. All of this was done to prevent subjects relying on memory. For instance, if we had used the same document for all tasks, subjects might have remembered where a particular picture was located. If we had used documents that looked similar, subjects might have assumed that they were the same. If we had kept the distribution of images the same, subjects might have learned that a particular part always contained many pictures.
 ficial, hand-crafted materials, we could have used real-world documents, like patient would have been extremely difficult to find real-world documents that contain the right phenomena in a well-balanced way. Firstly, real documents might not have the right descriptions in them, so we would probably have needed to change sentences in the documents by hand. Secondly, we need a set of documents that are sufficiently 248 similar in structure that one can make a fair comparison between longer and shorter descriptions. Moreover, the structure should not allow subjects to learn where in the document pictures are most likely to be located. Thirdly, semantic information or their background knowledge of the domain should be irrelevant. (For example, if we were using a real document on animals, and subjects read a section on lions, then they might expect a picture of a tiger to be in a nearby section, and a picture of an elephant to be closer than a picture of a pigeon.) 6.2 Results
Forty subjects completed the experiment. Table 3 shows descriptive statistics for the number of clicks subjects made to complete each task. To analyze the results with respect to Hypothesis 2.1, we used a General Linear Model ( GLM ) with repeated measures. We used two repeated factors: Situation (situations 1 to 6) and Description Length (short and long( FI / SL ) ). We found a highly significant effect of Description Length on the number of clicks used to complete the task ( F 1,39 potentially problematic situations, the number of clicks is smaller for the long than for the short description. This confirms Hypothesis 2.1. We also found significant effects and Description Length ( F 5,35 = 18 . 02, p &lt;. 001,  X  used a GLM with repeated measures, using two repeated factors: Description Content (that of situations 1 and 7, and that of situations 2 and 8) and Situation Type (potential
DE and non-problematic). 14 We found a highly significant effect of Situation Type on smaller than in the potential DE situations. This confirms Hypothesis 2.2.
 used a GLM with repeated measures, using two repeated factors: Description Content (that of situations 3 and 5, and that of situations 4 and 6) and FI Decision (with 2 levels: complete and not complete). We found a highly significant effect of FI Decision on algorithm decided to use an incomplete description than in situations where it chose a complete one. This confirms Hypothesis 2.3. 6.3 Discussion of Second Experiment
What does the second experiment teach us, over and above what we learned from the problematic situations, subjects (in the first experiment) preferred redundant descrip-potentially problematic situations, the addition of structural information reduces the effort involved in resolution. This is, of course, exactly in line with the way in which
DE and LO were introduced in Section 3, and with the assumptions about ease of resolution that were formulated in Paraboni and Van Deemter (2002a) and in the present Section 2.
 given situation? In answering this question, let us first realize that pragmatic factors relating to the utterance situation are likely to affect how much redundancy is needed.
At one end of the spectrum, there may be highly fault-critical settings, where flawless understanding is essential; at the other end, there may be discourse settings where accurate understanding is not important, and where the speaker/writer is under time pressure. Surely, redundant information must be more common in the former than in the latter. No one algorithm can cater to all types of settings.
 which our subjects found themselves, a law of diminishing returns is in operation. To see this, let us first focus on the two non-problematic situations (Table 2): Averaging numbers 250 of clicks of all subjects over all relevant situations, short descriptions required a mere 1 . 53 clicks; by adding redundant information (unlike SL / FI ), this number gets reduced to an average of 1 . 34 clicks (long(other), in situations 7 and 8). This very slight gain (0.19 clicks) is not statistically significant ( F 1,39 = . 60, p = . 44,  X  the price of a description that is one and a half times longer, which makes it likely to take more time during interpretation . As for the more interesting problematic situations, perhaps the best comparison is between situations 3 and 4 (where long(other) exists and then this figure is lowered drastically to what looks like a pretty acceptable 1 . 77 clicks, which constitutes a gain of 2 . 28. By adding even more information (as in long(other)), the figure is lowered further, to 1 . 31 clicks. Although this does represent a gain, it is not statistically significant ( F 1,39 = 2 . 94, p = . 095,  X  interpretation that are implied by the increased length of the description. Needless to say, these effects can only become stronger if more complex documents are considered, and with descriptions that are even longer. Really excessive redundancy might have detri-mental effects on resolution as well as interpretation, because it confuses hearers. (A hearer might wonder, along Gricean lines,  X  X hy are they saying  X  X icture 5 in Part A of
Section 3, printed in black and white X . Surely if they have to give so much information, they cannot simply mean Picture 5? X .) 12 documents in which incomplete descriptions were given. Ancestral Search predicts that subjects will search the current section (where the question is asked) exhaustively, before moving on to another section. Figure 5 shows subjects X  compliance with An-cestral Search in their first navigation action. (Eight of the 12 documents contained a description of the form Picture 5 in Part A, so for these it suffices to look at the first navigation action.) Four subjects complied perfectly. Half the subjects complied almost perfectly, deviating in at most 2 of the 12 cases. However, five subjects deviated almost completely (10 or more times). Closer inspection showed that these latter subjects seemed to navigate randomly, not following any obvious pattern (e.g., top to bottom).
It may well be that these subjects did not take the experiment seriously. Nevertheless, we still have more deviation from Ancestral Search than expected.

Ancestral Search, and then found that it was not effective when they encountered some documents in which the referent turned out to be in some far-away section, after which they changed to a more random strategy. (Recall that our experiment deliberately included some unreasonably short descriptions.) Our data seem to confirm this. For instance, subject S 11 started in compliance with Ancestral Search until encountering a document asking, in Section 2, to find a picture in Part C. The subject clicked as many as 6 times on Part C of Section 2, before finally finding the referent in Section 3. He went on to deviate four times from Ancestral Search.
 that we allowed. Subjects could go directly from, say, Part C in Section 2, to part A in
Section 3, without an extra navigation step to go into Section 3. In fact, it may even be faster to navigate to another section than within the current one, depending on the position of the mouse pointer. (This contrasts with the university domain, where one could not go directly from room 120 in Watts building to room 140 in Cockcroft building without first having to walk between the buildings.) It should be noted that this problem may be more pronounced after the first navigation action has been made.
For instance, if one clicks on Part A in Section 2, then the mouse pointer is about as close to Part C in Section 1 as to Part C in Section 2. To explore this idea, we looked at the four documents in which a description of the form picture 5 was given. In 83 cases, subjects who complied with Ancestral Search for the first navigation action needed to perform a second action; in 77% of these cases, they also complied with Ancestral Search in the second action. Now in as many as 68% of the cases in which they did not comply, they clicked on the closest link in an adjacent section (e.g., Part A of the next section after having first clicked on Part C). This confirms our suspicion that the lack of effort required to deviate may have been a reason for deviation. With hindsight, we should probably have made the distance between the relevant sections larger. 7. Conclusion
This article has discussed generation strategies that facilitate resolution of a referring expression by adding logically redundant properties. We have shown that this can be of crucial importance, especially in large domains, where minimally distinguishing descriptions can sometimes be completely useless (witness, e.g., Example [1c]). Two algorithms for generating logically redundant references along the lines described in this article have been implemented. The experiments reported in the previous sections indicate that these algorithms are fundamentally on the right track.
 of logically redundant properties in referring expressions (Arts 2004). One of the out-comes of these experiments was that certain types of logically redundant information almost consistently led to accelerated resolution. This was particularly true for informa-tion concerning the location of an object. For example, a logically minimal description like the white button on the left took readers longer to resolve than a redundant one like the white button at the top left (our emphasis). It is interesting to note that these results were obtained in situations where neither LO nor DE could occur.
 are designing an NLG system and want to give it a GRE component; how do you know whether to use the new algorithm, instead of one of its predecessors? Redundancy has a role to play in different kinds of situations (see the Introduction of this article), but our algorithms focus on a class of cases that we believe to be particularly widespread, namely where the domain is hierarchical in the sense of Section 3. Because hierarchies involve relations, let us once again compare the predictions made by our algorithms with those made by Dale and Haddock (1991). Suppose their description the bowl on the 252 table was said when there are two tables and two bowls, while (only) the table furthest away from the hearer has a bowl on it. FI and SL , by contrast, would generate something redundant like the bowl on the far-away table. Which of the two descriptions is best? available to the reader without effort (e.g., all the domain objects are visible at a glance) then Dale and Haddock X  X  minimal descriptions are fine, but when search is required, the kind of  X  X tudied X  redundancy embodied in FI and SL becomes necessary. Consider the example again. If the tables and bowls are visible at a glance, then resolving the
DE -inducing description the bowl on the table is unproblematic, because there is nothing here to discover: The crucial part of the domain is directly available, and no search is needed. Consequently, it is superfluous to say anything about the location of the table.
But suppose we are in a huge room, where it is not obvious for the hearer what is on each table. In this situation, the bowl on the table would be a rather unhelpful description, would be consistent with our algorithms. (The example can be made more dramatic by hiding the table with the bowl on it in another room.) What this example highlights is the distinction between the things that speaker and hearer know when a referring expression is uttered, and the things they can discover . It is in the latter case that search becomes an issue. We have shown how this idea can be made precise and incorporated into a GRE algorithm, and we have demonstrated that this can improve the generated descriptions from the perspective of the hearer.
 has shown that speakers and hearers often act as if they are completely oblivious of the epistemic limitations of their interlocutors, even when these limitations have been made perfectly obvious to them (e.g., Keysar, Lin, and Barr 2003). These widely known results have caused some researchers to expect language users to behave with unbridled descriptive  X  X gocentricity X  in all situations. The first of our two experiments suggests that human writers (as opposed, perhaps, to speakers) can be highly altruistic in their descriptions of objects. The second experiment demonstrates how descriptive altruism can benefit readers.
 ing the referent), we have not only shown that it can be good to add logically redundant information to a referring expression; we have arguably also shed some light on the reason why redundant descriptions are sometimes preferred. By counting the number of clicks that subjects need in order to find the referent, and relating these to predictions stemming from our Ancestral Search model, we believe that we have achieved a degree way in which insights in human language processing can be produced by eye-tracking experiments. It would be interesting to see whether the ideas discussed here can be confirmed using such a more entrenched psycholinguistic paradigm.
 Acknowledgments
