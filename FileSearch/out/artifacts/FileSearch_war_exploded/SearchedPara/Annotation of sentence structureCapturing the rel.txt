 Abstract The focus of this article is on the creation of a collection of sentences manually annotated with respect to their sentence structure. We show that the concept of linear segments X  X inguistically motivated units, which may be easily detected automatically X  X erves as a good basis for the identification of clauses in Czech. The segment annotation captures such relationships as subordination, coordination, apposition and parenthesis; based on segmentation charts, individual clauses forming a complex sentence are identified. The annotation of a sentence structure enriches a dependency-based framework with explicit syntactic informa-tion on relations among complex units like clauses. We have gathered a collection of 3,444 sentences from the Prague Dependency Treebank, which were annotated with respect to their sentence structure (these sentences comprise 10,746 segments forming 6,341 clauses). The main purpose of the project is to gain a development data X  X romising results for Czech NLP tools (as a dependency parser or a machine translation system for related languages) that adopt an idea of clause segmentation have been already reported. The collection of sentences with annotated sentence structure provides the possibility of further improvement of such tools.
 Keywords Sentence and clause structure Dependency and coordination Annotation 1 Motivation Syntactic analysis of natural languages is a fundamental requirement of many applied tasks. Parsers providing automatic syntactic analysis are quite reliable for relatively short and simple sentences. However, their reliability is significantly lower for long and complex sentences, especially for languages with free word order; see e.g. Zeman ( 2004 ) for results for Czech. The identification of the overall structure of a sentence prior to its full syntactic analysis is a natural step capable of reducing the complexity of full analysis. Such methods have brought good results for typolog-ically different languages, see e.g. Jones ( 1994 ) for English or Ohno et al. ( 2006 ) for Japanese; also first results for Czech are promising (esp. a clause segmentation in a translation system for related languages, as in Homola and Kubon  X  2010 ).
We exploit a concept of segments X  X inguistically motivated units, which may be easily detected automatically, as they were defined by Lopatkova  X  and Holan ( 2009 ). 1 The segment annotation captures relationships among segments, especially subordination, coordination, apposition and parenthesis. Based on the segment annotation, clauses forming complex sentences can be identified: those segments that constitute individual clauses are grouped and marked as single separate syntactic units of a higher layer, the layer of clause structures. Let us demonstrate the basic idea of segmentation on the following Czech newspaper sentence:
First, the sentence is split into individual segments; here the punctuation, the coordinating conjunction, and the brackets are considered as segment boundaries. morphological analysis contains a lot of more or less reliable information that can segments can be represented by the so-called segmentation chart that should (1) capture a level of embedding for each segment, and (2) identify individual clauses (marked by ellipses), as in the following scheme: 1.1 Prague dependency treebank and segment annotation annotated with respect to sentence structure. The obvious idea is to use the Prague Dependency Treebank , 2 henceforth PDT (Hajic  X  et al. 2006 ), a large and elaborated corpus of Czech newspaper texts with rich syntactic annotation. The PDT adopts the dependency-based framework, thus it contains explicit information on mutual relations between individual tokens (words and punctuation marks). However, relations among more complex units, especially among clauses, are not explicitly indicated.

Rich syntactic information stored in the PDT can be used (at least to some ( 2009 ). In both papers, the authors describe well-developed automatic procedures for identifying segments and/or clauses and their mutual relationship from the analytical layer of the PDT (i.e., a layer of surface syntax, see Hajic  X  et al. 2004 ), However, these procedures cannot be properly evaluated so far because of the lack of test data (the papers either provide evaluation on a very small sample of sentences X  X ens of sentences X  X r they focus on comparing the results of two automatic tools). Nevertheless, the preliminary evaluation shows that extracting the overall sentence structure from dependency trees of the analytical layer is not segmentation tools necessarily requires reliable and precisely annotated develop-ment and test data (see below). 1.2 Why to annotate sentence structure? The development and evaluation of tools for extracting a sentence structure from PDT data is interesting from the theoretical point of view: it may reveal possible limitations of dependency-based annotation at the layer of surface syntax (especially those related to non-dependency relations like coordination, and surface ellipses).
However, the main purpose of identifying sentence structure X  X ither manually or automatically from the PDT (using a reliable automatic tool) X  X s to gain structure of a (morphologically analyzed) sentence (the first results based on a small data sample are reported by Lopatkova  X  and Holan 2009 ).

As already mentioned, the first experiments integrating a segment and/or a clause identification have brought promising results in dependency syntactic parsing (namely a combination of several parsers, one of them exploiting the idea of segmentation, see Holan and Z  X  abokrtsky  X  2006 ) and in machine translation between related languages (namely Homola and Kubon  X  2010 ). These results encourage us in our effort to prepare a sufficient amount of reliable data analyzed at the level of a sentence structure. 1.3 Related work The proposed approach X  X ontrary to such well known approaches as, e.g., chunking (Abney 1991 ) or cascaded parsing (Abney 1995 ; Ciravegna and Lavelli 1999 ), prepositional phrases in a  X  X ottom-up X  direction X  X an be characterized as a  X  X op-down X  method: first, a structure of sentence clauses is assessed and, second, syntactic relations within individual clauses are identified. Such an approach is quite novel; as far as we know, a similar method has been tested only for Slovene (Marinc  X  ic  X  et al. 2010 ) so far. 1.4 Outline In this article, we present a project of manual annotation of sentence structure for complex Czech sentences. The article is structured as follows: In Section 2, the basic concepts, especially boundaries, segments and segmentation charts, are introduced. The core Section 3 describes the principles of the annotation for basic evaluation of the existing tools are presented in Section 4 . 2 Boundaries, segments and segmentation charts 2.1 Segment boundaries An (input) sentence is understood here as a sequence of tokens (word forms and punctuation marks) with their morphological tags. All tokens are automatically divided into two disjoint sets: ordinary words and segment boundaries. The following tokens are considered as segment boundaries :  X  Punctuation marks: comma, colon, semicolon, question mark, exclamation  X  Coordinating conjunctions: tokens with morphological tag starting with the pair
After the identification of boundaries, the input sentence is partitioned into individual segments; a segment is understood as a maximal non-empty sequence of tokens that does not contain any boundary.

The concept of linear segments serves as a good basis for the identification of clauses in Czech. This is possible due to very strict rules for punctuation in Czech: The beginning and the end of each clause in a Czech sentence must be indicated by a boundary (contrary to, e.g., English, where there are clauses with no formal markers, as in She said she would come . 4 ); this holds for embedded clauses as well. This implies that a single clause consists of one or more segments (Section 3); several clauses then create a complex sentence . 2.2 Segmentation charts and clauses Relations between clauses, especially super-or subordination, coordination, apposition or parenthesis, are described by the so-called segmentation charts . The segmentation chart captures the levels of embedding for individual segments, as described below.

The principal idea of the segmentation chart is quite simple, it can be described by the following basic instructions. In the examples, segments are marked by square brackets [ and ] k , where k is the level of embedding, the boundaries are underlined. In addition, individual clauses are marked by brackets { and } j , where j is an index of a particular clause. 2.2.1 Main clauses Segments forming all main clauses 5 of a complex sentence belong to the basic level (level of embedding 0), as in the following sentence: 2.2.2 Dependent clauses Segments forming clauses that depend on clauses at the k -th level obtain level of embedding k ? 1 (i.e., the level of embedding for subordinated segments is higher than the level of segments forming their governing clause): 2.2.3 Coordination and apposition Segments forming coordinated sentence members and coordinated clauses occupy the same level. The same holds for an apposition. 2.2.4 Parenthesis Segments forming parenthesis (e.g., sequence of word forms within brackets) obtain the level of embedding k ? 1 if the level of their neighboring segments is k :
Although this basic idea of segmentation charts seems simple, it appears that X  when working with  X  X eal data X  from the newspaper corpus X  X etailed annotation phenomena and especially for their combination, see Lopatkova  X  and Kljueva ( 2010 ). In the following section, we focus on some of the guidelines. 3 Annotation of complex sentences from the PDT complex Czech sentences. We focus on the annotation of (a part of) Czech sentences from the PDT. We primarily take advantage of morphological analysis (the m-layer of PDT provides the word form, lemma and tag for every token) and partially X  in case of ambiguous sentences X  X lso from the surface syntactic analysis stored in the PDT (the a-layer; for the segment annotation, only information on analytical functions of tokens is used). The annotation only focuses on the identification of individual clauses and their mutual relations, which are not explicitly marked in the PDT. 6
Let us stress here that the segment annotation is based on formally expressed structures rather than on their semantic interpretation. For example, we do not interpret text enclosed in brackets: whether it is semantically an apposition, a sentence member or an independent sentence part, as it is discussed by Kubon  X  et al. ( 2007 ). We annotate such text as a parenthetical segment on a lower level compared to the neighboring segments. The interpretation is postponed to the higher layers of annotation (some phenomena are resolved at the a-layer, other phenomena pertain to the t-layer).

The annotators have been instructed to disambiguate annotated sentences; if more readings are possible, they should respect the reading rendered in PDT. 3.1 Segments with different levels of embedding The identification of a subordinated status of a particular segment is based on morphological properties of tokens forming this segment, i.e., on the presence of a token with  X  X ubordinating function X .  X  X ubordinating tokens X  are especially of the following types:  X  Subordinating conjunctions (e.g., aby  X  X n order to X , dokud  X  X ill X , kdyby  X  X f X ,  X  Relative/interrogative pronouns and some types of numerals (e.g., kdo  X  X ho X , co  X  Pronominal adverbs (e.g., kde  X  X here X , kdy  X  X hen X , jak  X  X ow X , proc  X   X  X hy X ). 3.1.1 Governing and dependent clauses The super-and subordinated (mutually related) segments primarily capture relations between governing and dependent clauses.

A particular subordinated segment X  X s (a part of) a dependent clause X  X an precede or follow the superordinated segment(s) that create(s) its governing clause. Such a segment can also be placed in between two superordinated segments (in case of a governing clause with an embedded dependent clause, as in the following example with the embedded relative clause):
In addition to governing and dependent clauses, there are also other constructions that should obviously be classified as subordinated segments. We will mention at least two of them, namely direct speech and parenthesis. 3.1.2 Direct speech Segments (one or more) representing direct speech formally expressed by quotation marks 7 belong to a lower level, compared to the level of the neighboring segments:
On the other hand, segments representing direct speech without quotation marks neighboring segments. The reason is quite evident: there is no formally expressed indication of the subordination of such segments (the interpretation of these constructions is left to the higher layers of annotation, similarly as for other formally unexpressed phenomena). 3.1.3 Parenthesis annotated as belonging to a lower level compared to the neighboring segments. The interpretation (whether it is an apposition, a sentence member such as, e.g., object or adverbial, or an independent sentence part) can be found at the a-layer of the PDT, see also Kubon  X  et al. ( 2007 ). In such cases, parenthetical expressions are captured as separate clauses even if they consist of a fragmental expression:
In contrast, segments forming parenthesis without an explicit/unambiguous formal mark are annotated as consisting of segments on the same level as their neighboring segments (similarly as for direct speech, the annotation captures formally marked structures). 3.2 Segments on the same level and identification of clauses We can identify three main groups of structures in which segments are mutually related and share the same level of embedding: segments forming a clause with an embedded dependent clause, coordinated segments, and segments forming an apposition. 3.2.1 Segments forming a clause with an embedded dependent clause Segments on the same level X  X nlike super/subordinated ones X  X an form a single clause, as in the following example of the attributive dependent clause splitting the main clause (the span of a sentence with an embedded clause being the most interesting case):
For the annotators, the most important task is to identify individual clauses . They group those segments that constitute individual clauses of a complex sentence and thus mark them as separate syntactic units at the layer of clause structures. 3.2.2 Coordination of sentence members and coordination of clauses The relation of coordination may occur between two (or more) sentence members (like subjects, objects, predicates, adverbials, etc.) or between two (or more) clauses, be they main clauses or dependent ones. The coordinated units are characterized by the same syntactic relations to other parts of a (complex) sentence, identify segments containing coordinated sentence members and put them together into a single clause. In contrast to this, coordinated clauses are marked as separate clauses sharing the same level of embedding, 8 as in the following sentence:
This complex sentence consists of five segments (marked by [ and ]), which form three clauses (marked by { and }), namely one main clause (on the zero level) and two coordinated dependent clauses (on the first embedded level).

The segmentation is purely linear (one segment follows another). After the identification of segments, they are grouped into clauses X  X s we could see, a single clause prototypically consists of one or more segments. This is fully true for semantically and syntactically complete sentences, i.e., sentences without ellipses of different kinds. However, we can mention one construction where clauses identified by the annotators (i.e., clauses based on segments) do not conform with the linguistic intuition, namely the case of coordinated clauses sharing one (or more) sentence member(s) or a syntactic particle. We interpret such cases as ellipses, i.e., a shared sentence member or a particle is supposed to belong to only one of the clauses (and to be elided in the other clause); thus the shared sentence member or particle is annotated as a part of one clause only:
The reflexive particle se (printed in bold) belongs to both verbs opravovat  X  X o segmentation chart, it is marked as a part of the first clause Neopravuje se and elided in the second clause neinvestuje .

There is one exception to this basic instruction: if the shared sentence member is a predicate then the particular segments are joined together in a single clause (providing that no other formal labels as, e.g., brackets, indicate more levels), as in the following example: indicates a single clause, i.e., a verb constitutes (a core of) a sentence. 9 , 10 3.2.3 Apposition Apposition is a construction where the same  X  X dea X  is rendered in different ways (the latter being an explanatory equivalent of the former), both having the same syntactic relation to other sentence members (e.g., a name and a position of a particular person, as in the following sentence):
Following the PDT, apposition is treated in the same way as coordination and the members of an apposition are considered to share (multiple) syntactic position in a sentence (like in the case of coordination). 4 Basic statistics and evaluation We have gathered a collection of 3,444 sentences from the PDT, which were annotated with respect to their sentence structure (these sentences comprise 10,746 segments forming 6,341 clauses). 11 Two graduate students with very good linguistic backgrounds serve as annotators. 4.1 Inter annotator agreement (IAA) In order to get the idea of how difficult the annotation task is (and how good our annotation instructions are) we have measured an inter-annotator agreement (IAA) for our two annotators. As a baseline, all segments got the most frequent level, i.e., basic level of embedding (level 0); clauses were not identified.

The agreement was calculated as follows, see Table 1 : (1) Both annotators got the same set of segments and they assigned a level of embedding for each segment; they agree on this segment if they assign the same level. (2) The annotators identify particular The agreement on the whole sentence means that all segments of the sentence got the same level of embedding and that the same clauses were identified by the annotators.
The annotated data obtained from the annotators were analyzed. The most frequent cause of disagreement (after the exclusion of clear annotation errors) was a different annotation of unclear syntactic constructions like sentence fragments, sport scores, or addresses and phone numbers. Based on this analysis, we have refined the instructions in the annotation manual (Lopatkova  X  and Kljueva 2010 ). One of the annotators then went through the sentences with disagreement and unified the annotations according to the updated manual. As a result, we got so-called golden data that can serve for further exploitation. 4.2 Results for the existing automatic tools The collection of golden data makes it possible to compare and evaluate the already existing tools for automatic identification of segments and clauses. We examined individual segments and at the identification of individual clauses, respectively, using the a-layer of PDT: (1) the rule-based tool described in Lopatkova  X  and Holan ( 2009 ) (LH in Table 2 ; the tool provides levels of embedding for individual segments only, clauses are not identified), and (2) the tool based on machine learning methods described in Kru  X  za and Kubon  X  ( 2009 ) (KK in Table 2 ; the algorithm specifies clauses directly, it does not work with the concept of segments). The numbers clearly confirm that the results of existing segmentation tools are not satisfactory yet. As both these tools are based on a dependency paradigm, the comparison with a tool based on a phrase-structure paradigm will be of a great interest. 5 Conclusion In this article, a project aiming at obtaining a collection of sentences annotated with respect to their sentence structure was introduced. The data collection makes it possible to search for systematic differences between the manual and the automatic improvement of NLP tools.
 References
