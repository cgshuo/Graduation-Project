 As Internet access has expa nded globally, the Intern et has become the primary means of communication for many people. As a result, people exchange vast amounts of personal information through their computers. A  X  X ersonal X  com-puter consequently holds numerous types of personal content such as e-mail mes-sages, MS-Word documents, PDF documents, and locally saved Web files. Such content is typically categorized and store d in a user-defined directory structure. Although this structure might not be well defined, it and the stored documents should reflect, to some extent, the user X  s interests and concept classification. That is, the stored content and directory s tructure will probably reflect the kind of things in which the user is interested, what they already know, and how they relate concepts.

However, such information is simply stored in the user X  X  PC; it is not used to enhance the user X  X  activities on the PC. For example, even though a computer contains a great deal of information about the user, conventional Web search engines (e.g., Google) simply accept q uery words without having any way of considering what the user already knows or what the query words mean to the user. This is because user-profile inform ation reflecting the user X  X  views is not generated.

We have developed a method for developing a user profile by extracting se-mantic relationships between terms in t he documents stored in the user X  X  PC. The deviations in the appearance of terms in each directory are used to estimate the relationships between any pari of terms. Tow axes are used:  X  broad / Narrow and  X  co-occurrent / Exclusive.

These relationships can be treated by the computer as user-profile informa-tion, enabling it to take into account for many applications the user X  X  interests, intentions, and knowledge. For examp le, Web search can be personalized by expanding the query and re-ranking the search results. 2.1 Deviations in the Appearance of Terms Related terms can have various relationships. For example, one might be used in more documents than the other. Consider the relationship between  X  X aseball X  and  X  X LB X  ( X  X ajor league baseball X ). The former has broader usage, and doc-uments containing  X  X LB X  will likely also contain  X  X aseball X , while documents containing  X  X aseball X  will less likely contain  X  X LB X . By focusing on the devia-tions in the appearance of terms in each directory, we can estimate the person X  X  relative valuation of each term in a pair, i.e., the semantic relationships between terms.

An example distribution of terms in a directory is shown in Figure 1. Direc-tory A has two sub-directories containing documents. Key terms from some of the documents are shown in the figure. Bot h  X  X lassic X  and  X  X ach X  are evenly dis-tributed between the two sub-directories and in the main directory, while  X  X iano X  and  X  X iolin X  are unevenly distributed. We can thus say that  X  X lassic X  is used more broadly than  X  X iano X  and  X  X iolin X  and that  X  X lassic X  is co-occurrent with  X  X ach X . This means that we should be able to identify useful relationships between two terms based on the deviations in their distribution in the directory structures. We can plot the two relationships described above as shown in Figure 2. The vertical axis represents the broad/narrow relationship, and the horizontal one represents the co-occurrent/exclusive relationship. Each of the four ovals indicates a certain directory, and the triangles and circles shown how the terms X and Y are distributed.

The oval at the top shows the case where term Y has a  X  X road X  relationship to term X . In this directory, term X appears unevenly and term Y appears evenly. The one at the bottom shows the case where term Y has a  X  X arrow X  relationship to term X . In this directory, term X appears evenly and term Y appears unevenly. When the distributions of two terms differ in this manner, we can categorize their relationship using the concepts of  X  X road X  and  X  X arrow X .
The oval on the right shows the case where term X and term Y have a  X  X o-occurrent X  relationship. In this directory, both terms appear evenly. The oval on the left shows the case where term X and term Y have an  X  X xclusive X  relation-ship. In this directory, both terms appear unevenly and are not co-occurrent. When the distributions of two terms are similar in this manner, the relationship is  X  X o-occurrent X  or  X  X xclusive X . 2.2 Directories as Current Context A PC user usually stores documents related to numerous fields, and the docu-ments likely contain many multisense words. This means that a word used with the same meaning in two fields can be co-occurrent with quite different words, depending on the field. For example, for the  X  X ance X  and  X  X usic X  fields,  X  X lassic X  co-occurs with quite different words. Thi s means that the relationship between  X  X lassic X  and another term depends on the context, so it is important to extract the semantic relationships between term s based on the user X  X  current context. By  X  X ser X  X  current context X  we mean the field he or she currently has in mind. We treat a directory as the us er X  X  current context. A dir ectory typically contains documents related to a field with meani ng to the user, so if he or she somehow indicates a certain director y as the current context, the semantic relationships between terms can be extracted.

Extracting semantic relationships between terms, as described above, can be done in any directory with sub-dir ectories. For a cer tain directory D ,term X may be regarded as a broader term than term Y , while in a different directory D ,thesameterm X may be regarded as a narrower term than term Y .

In short, the semantic relationships between terms can be extracted based on three parameters: two terms and a directory indicated by the user. 2.3 Term Frequency In addition to considering the differences in the deviations of terms and the user X  X  current context, we also n eed to consider term frequency.
The deviations in the appearance of terms and term frequency can be cal-culated independently. As described in section 2.1, we identify the relationship most appropriate for two terms, and, at the same time, the degree of the rela-tionship is adjusted upwards for the more frequent term.

Since very general terms appear quite frequently in almost any type of docu-ment, the degree for these terms in any relationship must be adjusted downwards based on a concept such as inverse document frequency (IDF). 3.1 Basic Algorithm to Extract Semantic Relationships There are various ways to calculate the s emantic relationships between terms. Before explaining our approach, we describe the basic algorithm we use to extract semantic relationships between terms.

First, we define some symbols.  X  D is a directory; X and Y are terms.  X  Sub i ( D ) denotes D or a sub-directory under D .  X  V RelationN ame ( X, Y, D ) denotes the degree on the  X  Num ( D ) is the number of documents directly stored in D .  X  Num ( X, D ) is the number of documents with X directly stored in D .
Next, we give the basic algorithm. 1. Calculate the deviations in the appearance of X and Y under a user-specified 2. Calculate the relationships between X and Y based on the deviations. 3. Calculate the term frequencies for X and Y . 4. Calculate the degree for each relationship between terms ( V RelationN ame ).
Various implementations are possible for each step. 3.2 Deviations in the Appearance of Terms We calculate the deviations using Gini coefficients, which are typically used to measure income inequality in economics. They range from 0 to 1, where  X 0 X  means equitable and  X 1 X  means inequitable. We use them because they are a confirmed statistical method and the values are distributed from 0 to 1. A Gini coefficient (CG) is given by where q i are numeric data points and N is the total number of data points. A Gini coefficient ranges from 0 to 1 regardless of N .

To use Gini coefficients to calculate deviations in the appearance of terms, the data need to be prepared. We use the r atio of the number of times each term appears in each directory as the data.
 Let X  X  say that the current target directory is indicated by  X  X  X  in Figure 3. There are documents in  X  X  X  and in each sub-directory. For example, if there are ten documents in  X  X  X  and two of them include the target term, the appearance ratio for  X  X  X  is 1 / 5. The ratio for each sub-directory is computed in the same way.
Figure 4 is an example bar chart of the ratio for four directories. In this example,  X  X  X  has the highest ratio and  X  X  X  has the lowest one. There is no bar for  X  X  X , which means that no documents are directly stored in  X  X  X . The large disparity in the bar heights means that the target term is unevenly distributed. If the target term were evenly distributed, the bars would have similar heights. The appearance ratio of target term X in Sub ( D, i ) is computed using
This ratio can be used as the data to calculate the Gini coefficients, and the number of data points with the value P ( X, Sub i ( D ))) is Num ( Sub i ( D )). Therefore, the formula for the Gini coefficients of X in D is where This is the method used to calculate deviations in the appearance of terms. The deviation for X in D is represented by CG ( X, D ); CG ( X, D ) approaches 1 as the deviation becomes larger and approaches 0 as it becomes smaller. 3.3 Relationships Based on Deviations The degree for each relationship between terms can be calculated based on only the deviations in the appearance of terms. Let X  X  focus on Y  X  X  relationships to X
For the  X  X road X  relationship, when the deviation for X is smaller and that for Y is larger, R broad is larger. We need such a function using a Gini coefficient for each relationship.
 Our implementation is as follows.
 3.4 Term Frequency As described above, the term frequency also affects the semantic relationships. There are certainly many methods for me asuring term frequency. We count the number of documents that contain the target term and normalize it by the number of documents, i.e., Furthermore, we need to reduce the effect s of the terms that are too general. Inverse document frequency (IDF) is one of the most common methods for doing this. IDF is defined as follows.
 RootDirectory is the top directory. The IDF is computed using all the documents in a PC.

The coefficient of term frequencies ( T ( X, Y, D )) is computed by multiplying all of them: 3.5 Degrees of Relationships The degrees of Y  X  X  relationships to X are calculated using
Let X  X  compute the semantic relationships between the terms in the example directory shown in Figure 5. As term frequency is calculated for the whole di-rectory, we are concerned here only with the relationships computed based on the differences in the distributions.

Directory  X  X  X  is a top-level directory and contains two sub-directories. Sub-directory  X  X  X  contains four documents, and  X  X lassic X , for example, appears twice in  X  X  X .  X  X  X  is the user-specified directory and thus indicates the current context.
 The deviations in the appearance of the terms are computed as follows. The four relationships computed between  X  X lassic X  and  X  X iolin X  are The results indicate that  X  X iolin X  is narrow in relationship to  X  X lassic X . Some example meaningful relationships are as follows.
 We can use the semantic relationshi ps between terms to personalize Web searches. In our prototype system, we used them to expand queries and to re-rank search results.

The system uses a conventional Web search engine such as Google. A user can enter query terms and expand queri es as necessary. The system sends the current query to Google and obtains the re sult. The user can re-rank the search results as necessary. 4.1 User X  X  Current Context As explained in 2.2, the user somehow n eeds to specify a directory as the current context. This could be done i n various ways. For example, 1. The user could explicitly specify a directory. 2. The system could take the directory containing the document the user is 4.2 Query Expansion Queries are expanded as follows. 1. First, the user specifies query term X . The user X  X  current co ntext, directory 2. The system evaluates the sem antic relationships between X and every term 3. The system adds terms to the current query and sends the expanded query 4.3 Re-ranking Search results are re-ranked as follows. 1. The system obtains all the content from the result items. 2. It generates a feature vector for each item based on TF-IDF. 3. It generates an evaluation feature vector as follows. Each term X has a 4. The system compares the evaluation vector, V 1 , with each item X  X  feature 4.4 Possible Uses These four semantic relationships ca n be used to personalize Web searches in various ways.
 Query Expansion 1. Suppose a user enters query word X and gets unacceptable search results. 2. Again suppose a user enters query word X and gets unacceptable search 3. Suppose a user wants more detail about a certain term X . Adding a  X  X arrow X  Re-ranking 1. Suppose search results for an expanded query are still un acceptable for a 2. Suppose a user wants results that are NOT similar to the documents indi-3. If a user wants results containing detailed information about the query words, 4.5 Experiments and Discussion We conducted two experiments. First, we distributed 148 documents among 38 directories to test extract ing semantic relationships from documents stored in a PC. The topics of the documents were hobbies and business.
 There were two sub-directories in the root directory:  X  X usiness X  and  X  X obby X . The  X  X usiness X  directory contained 88 documents and 21 sub-directories. The  X  X obby X  directory contained 60 documents and 14 sub-directories. Several of these documents were about  X  X rench wine X , and few were about  X  X apanese wine X .
 Experiment1
In the first experiment, we used  X  X anaka X  as the query term and the  X  X usi-ness X  directory as the user X  X  current context. We used the query expansion and re-ranking functions with the  X  X o-occurrent X  relationship.

First, query expansion was done for  X  X anaka X .  X  X anaka X  is a last name, and there were many documents containing  X  X atsumi Tanaka X  in the user X  X  directo-ries. Therefore, the  X  X anaka X  in the query most likely meant  X  X atsumi Tanaka X . In this case, we wanted terms co-occurring with  X  X anaka X , so we used the  X  X o-occurrent X  relationship. The additional term identified by the system was  X  X at-sumi X , the best additional term.
 However, even with  X  X atsumi Tanaka X  as the query, we still had a problem. There are several famous people named  X  X atsumi Tanaka X , so the Google search results contained many unsuitable items. Table 1 shows the number of results related to the target  X  X atsumi Tanaka X  for the original Google search and the one after re-ranking. The top 20 results for the original ranking contained 10 suitable items. After re-ranking, 7 out of 10 suitable items move up to higher ranks than original ones. While the original top 10 results contained 4 suitable items, the re-ranked top 10 results contai ned 7 suitable items. While the original top 5 results contained 2 suitable items, all of the items of the re-ranked top 5 results are suitable items. The results were significantly better. Experiment2
In the second experiment, we used  X  X ine &amp; -shopping X  as the query and the  X  X obby X  directory as the user X  X  current co ntext. We used the re-ranking function with the  X  X arrow X  relationship.

Using the  X  X arrow X  relationship means the user wants to get detailed informa-tion  X  in this case,  X  X ine X  without  X  X hopping X . The user X  X  documents contained many references to  X  X rench wine X  and only a few to  X  X apanese wine X . This indi-cates that more suitable information would be about  X  X rench wine X  than about  X  X apanese wine X .

Table 2 shows the number of results related to  X  X rench wine X  and the num-ber related to  X  X apanese wine X  for the original Google search and the one af-ter re-ranking. The top 20 results for the original query contained 4 related to  X  X rench wine X  and 11 related to  X  X apanese wine X . After re-ranking, 3 out of 4  X  X rench wine X  items move up to higher ranks than original ones, and 8 out of 11  X  X apanese wine X  items move down to l ower ranks. The relevance ratios for the top 10 and top 5 were improved by re-ranking. Once again, the results were significantly better.
 Haystack [1] is a personal information management system developed by MIT. It manages e-mails, calendars, personal documents, and Web documents through the resource definition framework (RDF). WorkWare++ [2, 3] is groupware de-veloped by Fujitsu Laboratories that enables groups to store and manage busi-ness documents. It can manage a great deal of information about documents, people and event information. When the information is stored, metadata such as time is automatically abstracted and also stored. By scanning the contents, a user can become aware of what kind o f knowledge has been accumulated in a certain field or who knows certain information.

These and similar concepts have been de veloped to promote the generation of knowledge in a certain domain or community on a limited scale. In contrast, our method is aimed at extracting knowledge of any person and use it for many purposes.

Sanderson [4] proposed a method for extracting a concept hierarchy based on subset relationships between sets of documents. They attempted to find particu-lar expressions that indicate meaningful relationships in many documents. Glover [5] proposed a method for determining parent, self, and child keywords for a set of Web pages, where self words describe the cluster and parent and child words describe more general and more specific co ncepts, respectively. Their method is based on the relative frequency of keywords in and out the cluster. They also use the textual contexts of links to the pages, called extended anchor text, to discover term relationships. They do not distinguish keywords in different posi-tions when counting occurrences. Oyama [6] proposed a method for identifying pairs of keywords in which one word descr ibes the other. They focused on where words appear in a document, i.e., in the title or in the body.

These efforts were aimed at extracting general knowledge from a large quan-tity of documents. In contrast, our method needs fewer documents and uses the directory structure. We have described a method for extracting semantic relationships between terms appearing in documents stored in a personal computer and its applications to Web search personalization. The relationships are based on the deviations in the appearance of the terms. We identified four semantic relationships, broad, narrow, co-occurrent, and exclusive. Th ey can be used to personalize Web search through, for example, expansion of queries and re-ranking of search results. We presented potential applications of this method and showed experimentally that it can usefully personalize Web search.
 This work was supported in part by the Japanese Ministry of Education, Culture, Sports, Science and Technology under a Grant-in-Aid for Software Technologies for Search and Integration across Heterogeneous-Media Archives, a Special Re-search Area Grant-In-Aid For Scientific Research (2) for the year 2005 under a project titled Research for New Search Service Methods Based on the Web X  X  Semantic Structure (Project No. 16016247; Representative, Katsumi Tanaka), and the Informatics Research Center for Development of Knowledge Society In-frastructure (COE program of Japan X  X  Ministry of Education, Culture, Sports, Science and Technology).

