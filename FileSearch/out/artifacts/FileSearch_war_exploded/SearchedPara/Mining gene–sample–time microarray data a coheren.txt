 REGULAR PAPER Daxin Jiang  X  Jian Pei  X  Murali Ramanathan  X  Chuan Lin  X  Chun Tang  X  Aidong Zhang Abstract Extensive studies have shown that mining microarray data sets is im-portant in bioinformatics research and biomedical applications. In this paper, we explore a novel type of gene X  X ample X  X ime microarray data sets that records the expression levels of various genes under a set of samples during a series of time points. In particular, we propose the mining of coherent gene clusters from such data sets. Each cluster contains a subset of genes and a subset of samples such that the genes are coherent on the samples along the time series. The coherent gene clusters may identify the samples corresponding to some phenotypes (e.g., dis-eases), and suggest the candidate genes correlated to the phenotypes. We present two efficient algorithms, namely the Sample-Gene Search and the Gene  X  Sample Search , to mine the complete set of coherent gene clusters. We empirically eval-uate the performance of our approaches on both a real microarray data set and synthetic data sets. The test results have shown that our approaches are both effi-cient and effective to find meaningful coherent gene clusters.
 Keywords Bioinformatics  X  Clustering  X  Microarray data 1 Introduction The microarray technology can measure the expression levels of thousands of genes simultaneously. It is an important research problem in bioinformatics and clinical research to explore the patterns in microarray data sets. For example, in drug development, gene expression patterns may reflect gene-level responses to different drug treatments and provide deep insights into the nature of the diseases.  X  X he gene  X  time data sets record the expression levels of various genes during  X  X he gene  X  sample data sets account the expression levels of various genes an n  X  l gene expression matrix , where each row is a gene and each column is either a sample (in a gene X  X ample data set) or a time instant (in a gene X  X ime data set). Each cell in the matrix represents the expression level of a certain gene on a certain sample or at a certain time point.
 a set of genes under a set of samples can be monitored synchronically during a series of time points [ 39]. Different from the previous gene X  X ime or gene X  X ample samples ,and time . We call such data gene  X  sample  X  time microarray data ,or GST data for short. Figure 1a elaborates the structure of a GST microarray data set. viewed as an n  X  l matrix such that each cell m i , j contains the time series with respect to gene g i under sample s j , as shown in Fig. 1b.
 indicate that high correlations may exist between the gene expression patterns and some diseases. It is natural to extend the similar analysis to GST microarray data. That is, it is interesting to identify a subset of genes G and a subset of samples S in a GST microarray data set such that each gene g  X  G has coherent patterns across the samples in S during the time series. For example, in Fig. 1,gene g i 1 , g We call such subsets of genes and samples a coherent gene cluster .
 problem in the clinical use of a variety of drug therapies. For example, IFN- X  is the most widely prescribed immunomodulatory therapy for multiple sclerosis (an autoimmune disease of the brain and spinal cord). The therapy is known to exert all its biological effects via gene transcription but there are no validated markers for its long-term efficacy in multiple sclerosis. Although double blind, random-ized, placebo-controlled clinical trials have established that IFN- X  treatment re-duces the progression of disability in multiple sclerosis, only 30 X 40% of patients respond well to the therapy. To define the mechanism of IFN- X  and investigate the partial responsiveness of various patients, the expression levels of large numbers of genes were monitored for 13 multiple sclerosis patients during a 10-point time series [ 39].
  X  . In other words, patients can differ both in the magnitude and rate of their gene expression profiles. However, the underlying mechanisms are not fully character-ized. The coherent gene cluster model is directly relevant to characterizing this underlying heterogeneity of treatment responses to IFN- X  , since it is capable of identifying patients whose responses are similar and defining the time courses of genes that distinguish these patient subsets. Moreover, the genes in the clusters may suggest the candidate genes correlated to the response.
 biologists. The sample sets in clusters may correspond to some phenotypes (e.g., while the corresponding set of genes may suggest the candidate genes correlated to the phenotypes.
 to different phenotypes such as age and gender. Therefore, to avoid missing any valuable hypothesis, it is necessary to mine all the coherent clusters in a data set. croarray matrices. For example, various clustering algorithms can identify the co-expressed genes showing coherent patterns during the time series (e.g., [ 19, 27, 33 , 35]). Moreover, both supervised and unsupervised approaches are proposed to partition the samples into homogeneous groups (e.g., [ 5, 10 , 24, 34]). Addition-ally, statistical approaches are proposed to validate the significance of the mining results (e.g., [ 22, 37]). However, all those previous studies target at conventional gene X  X ime or gene X  X ample microarray data sets. The models of clusters in those previous studies are different from our coherent gene clusters, which disclose the correlation among genes, samples, and time points. Therefore, those algorithms cannot be extended directly to solve our problem.
 attributes. Conceptually, a pattern-based cluster is a coherent gene cluster. If we treat the GST microarray data sets as an n  X  l matrix of time series, as shown in Fig. 1b, then pattern-based clusters and coherent gene clusters may have some similarity at the first look. However, in some pattern-based approaches, a cluster requires that each pair of objects in the cluster must be coherent on each pair of attributes. Such a requirement is often too strong in practice. Our coherent gene clustering relaxes the constraints among the objects. Therefore, each traditional pattern-based cluster is a coherent gene cluster, but the other way is not necessar-ily true.
 sample  X  time microarray data sets and make the following contributions. sets. We justify that the model is meaningful for biomedical research. research on mining coherent gene clusters from GST microarray data sets. We develop two approaches, namely the Gene  X  Sample Search and the Sample  X  Gene Search , to mine the complete set of coherent gene clusters. We illustrate and com-pare the efficiency and scalability of both approaches.
 synthetic data sets. Our results show that our proposed methods can find coherent gene clusters that are of interest to biomedical research from real data sets. The results on synthetic data sets also show that our algorithms are both efficient and scalable.
 Section 3 describes the preprocessing step of computing the maximal coherent sample sets for each individual gene. Section 4 presents two algorithms to mine coherent gene clusters. In Sect. 5, our methods are evaluated using both real and possible coherent clusters for GST data sets in Sect. 7. Section 8 concludes the paper. 2 Problem description Given a set of n genes G -Set ={ g 1 ,..., g n } and a set of l samples S -Set = { s The results form a conventional n  X  l microarray matrix M ={ m i , j } ,where m i , j is the expression level of gene g i ( 1  X  i  X  n ) on sample s j ( 1  X  j  X  l ) .Ifsuch microarray experiments are conducted synchronically on all genes and all samples at time instants t 1 ,..., t T , the results form an n  X  l  X  T GST microarray matrix M ={ m t i , j } ,where ( 1  X  t  X  T ) .
 Ta b l e 1 list the notations used in this paper.
 a subset of samples during the whole time series. There are various methods to measure the correlation between two time series. However, for gene expression data, users are often interested in the overall trends of the expression levels in-stead of the absolute magnitudes. Therefore, we choose the Pearson X  X  correlation coefficient as the coherence measure, since it is robust to shifting and scaling pat-is defined as sample s j . The correlation coefficient ranges between  X  1 and 1. The larger the value, the more coherent are the two vectors.
 Definition 2.1 (Coherent gene submatrix) Given a GST data matrix M , a gene g threshold specified by the user. A subset of genes G  X  G -Set is coherent across a subset of samples S  X  S -Set , if every gene g i  X  G is coherent across samples in A coherent gene submatrix having u genes and v samples is said a ( u ,v) -coherent gene submatirx.
 Proposition 2.1 (Trivial coherent gene submatrices) For any gene g i and any respectively.
 immediately. gene submatrix should consist of at least two genes and two samples.
 Proposition 2.2 (Anti-monotonicity) Let ( G  X  S ) be a coherent gene submatrix. Then, for any subsets G  X  G and S  X  S, ( G  X  S ) is also a coherent gene submatrix.
 Proof For any gene pair in G and any sample pair in S , they must satisfy the coherence requirement since they are in the cluster ( G  X  S ) .
 avoid such redundancy, a user may only want the maximal submatrices. A co-herent gene submatrix ( G  X  S ) is maximal if there exists no any other coherent gene submatrix ( G  X  S ) such that G  X  G , S  X  S . Moreover, a user may not be interested in very small clusters, which are often formed by chance. Thus, a user can specify the minimum numbers of genes and samples in a submatrix. Generally, given min g and min s as user defined minimum gene size and minimum sample size thresholds, a submatrix ( G  X  S ) is called significant if | G | X  min g and | S | X  min s .
 Definition 2.2 (Coherent gene cluster) Given a GST microarray matrix M ,a minimum coherence threshold  X  , a minimum gene size threshold min g and a min-imum sample size threshold min s , a submatrix ( G  X  S ) of M is a coherent gene clusters if it satisfies the following constraints: (1) ( G  X  S ) is a coherent gene submatrix; (2) ( G  X  S ) is maximal; and (3) | G | X  min g and | S | X  min s . coherent gene clusters in the given data set with respect to the user-specified pa-rameters. 3 Maximal coherent sample sets We propose two algorithms to compute maximal coherent gene clusters. In both algorithms, to compute coherent gene clusters, we need to check whether a subset of genes are coherent on a subset of samples. To facilitate the tests, for each gene g , we compute the sets of samples S such that (1) | S | X  min s ;(2) g k is coherent on S ; and (3) there exists no proper superset S  X  S such that g k is also coherent a gene may have more than one maximal coherent sample set.
 ciently using the following 2-step process.
 ( s , s otherwise, c i , j = 0.
 herent sample sets can be reduced to the problem of finding all maximal cliques graph if and only if c i , j = 1. Here, we follow the terminology that a clique is a set of vertices such that the induced subgraph is a complete graph. A clique S is called maximal if there exists no any other clique S such that S  X  S . Please note that there may exist more than one maximal clique in a graph.
 is found, here, we need to find the complete set of maximal cliques in the graph. Theorem 1 (Complexity of preprocessing) The problem of computing the com-plete set of maximal cliques that have at least min s vertices is NP-hard. Proof It is well known that the conventional clique problem is NP-complete. Therefore, the counting problem of finding the complete set of cliques of size at least min s is in #P. Since a #P problem corresponding to any NP-complete problem must be NP-hard, the problem of computing the complete set of maximal cliques in a graph is NP-hard.
 of samples is typically below 100. For each gene, the number of maximal cliques is quite small and the samples can often be partitioned into exclusive small subsets. Our experimental results show that, with efficient search and pruning techniques that will be introduced soon, it is still practical to find the complete set of maxi-mal cliques. In the following, we will show how to find the maximal cliques of a sample set by a depth-first search in a sample set enumeration tree.
 samples) can be enumerated systematically. For example, consider a set of samples S ={ a , b , c , d } . The complete set of nonempty combinations of samples can be divided into 4 exclusive subsets: (1) the ones having sample a ; (2) the ones having sample b but no a ; (3) the ones having sample c but no a or b ; and (4) { d } .They are shown as the immediate children of the root in Fig. 2.
 further divided into three exclusive sub-subsets: (1) the ones having samples a and b ; (2) the ones having samples a and c but no b ; and (3) { a , d } . { a , b , c , d } . It provides a conceptual tool to enumerate the complete set of combi-nations systematically.
 tree to detect the maximal cliques of the samples. Given a set of samples S ,the set enumeration tree has 2 | S | nodes. However, we never need to materialize such a tree. Instead, we only need to keep a path from the root of the tree to the node that we are working on as a working set. Such a path contains at most ( | S |+ 1 ) nodes. samples. Thus, we can use the subset of samples to refer to the node. At node { s samples that can be used to extend the node to some larger subsets of samples in the subtree. We have the following result.
 Lemma 3.1 At node v ={ s i 1 ,..., s i k } of the sample set enumeration tree, where ( 1  X  i 1  X  r  X  k such that c v  X  X  Tail is a subset of that of v .
 Proof The first claim of the lemma follows the definition of set enumeration tree. 0, then the gene is not coherent on c j and c i r , j .
 in the tail of v , it must also be coherent on every sample in v and s . at least min s samples.
 Pruning-rule 3.1 (Pruning small sample sets) At a node v ={ s i 1 ,..., s i k } ,the subtree of v can be pruned if ( k +| Tail | )&lt; min s .
 nations can be divided into l exclusive subsets as shown before, we only need to contains less than min s samples.
 also be pruned, since it cannot lead to any new maximal coherent sample set. Pruning-rule 3.2 (Pruning subsumed sets) At a node v ={ s i 1 ,..., s i k } ,if { s subtree of the node can be pruned.
 is presented in Fig. 3. For the readers familiar with the techniques of depth-first mining of maximal/closed frequent patterns, the ideas of pruning here share the ever, one key difference is that the frequent pattern mining conducts counting on triangle matrix { c i , j } is materialized. 4 The mining algorithms combination of genes and samples thoroughly. After all the coherent gene clusters are found, we can identify and report the maximal ones. The na  X   X ve method is very costly and thus infeasible for real data sets. For example, suppose we have 1000 genes and 20 samples. The na  X   X ve method may have to search up to ( 2 1000  X  1 )  X  ( 2 20  X  1  X  20 )  X  1 . 12  X  10 307 combinations! spaces sharply ? When computing the maximal coherent sample sets (Fig. 3), we systematically enumerate combinations of samples in a recursive depth-first search and develop techniques to prune unpromising subspaces aggressively. Stimulated by the similar spirit, here we can also systematically enumerate the combinations of genes and samples and prune the unfruitful combinations. binations of samples systematically. Then, for each subset of samples, we can find the maximal subsets of genes that form coherent gene clusters on the samples and check whether the clusters are maximal. This method is called the Sample  X  Gene Search . On the other hand, we can let the gene enumeration go first. For each subset of genes, we find the maximal subsets of samples that form coherent gene clusters with the genes and check whether the clusters are maximal. The method is called the Gene  X  Sample Search .
 are shown in Fig. 4. Proper pruning techniques should be developed to prune the unpromising combinations and search branches as early as possible. details are in fact substantially different. We are mining coherent gene clusters on samples. As long as the genes coherently respond on the same subset of sam-ples, they belong to the same cluster. However, the expression patterns of different genes in the same cluster on one sample can be very different. 4.1 Sample X  X ene Search In the Sample  X  X ene Search, we need to address the following issues.  X  As we enumerate the combinations of samples systematically, for each subset  X  During the sample set enumeration , which sample sets can be pruned ?  X  How can we determine whether a coherent gene cluster is subsumed by the 4.1.1 Maximal coherent gene sets for sample sets For each combination of samples S , we need to compute the maximal coherent gene set G S such that the genes in G S are coherent on S and no proper superset G  X  G S also has this property.
 that S  X  S g ,then g  X  G S .Inotherwords, G S can be derived by one scan of the maximal coherent sample sets of all genes. If a maximal coherent sample set is a superset of S , then the corresponding gene g is inserted into G S .
 all genes once for every combination of samples. An efficient solution is to use an inverted list .
 samples. The maximal coherent sample sets for each gene are listed in Fig. 5a. b , in the gene. For example, gene g 2 has two maximal coherent sample sets, g . b coherent sample sets containing s ,asshowninFig. 5b.
 Instead, we only need to get the intersection of the inverted lists of the samples s { g 4.1.2 Pruning irrelevant samples be the set of samples that can be used to extend S to a larger set S  X  S  X  S tail if j  X  i k . Moreover, if the maximal coherent gene set of S  X  X  s j } contains less For example, in our running example (Fig. 5), sample s 6 cannot be used to extend sample set S ={ s 2 } , since there is no gene coherent on both s 2 and s 6 . lead to any coherent gene cluster having min s or more samples, and thus can be pruned. 4.1.3 Pruning unpromising coherent gene clusters Similar to the situation in Pruning rule 3.2, we can prune the unpromising com-binations that cannot lead to any new maximal coherent gene cluster. Here, two pruning techniques can be applied.
 S ={ s G
S  X  S tail are subsumed by the maximal coherent gene cluster. The recursive search of S cannot lead to any maximal coherent gene cluster and thus can be pruned. maximal coherent gene cluster ( G  X  S ) found before such that S  X  S tail  X  S and G subsumed by ( G  X  S ) , and thus can be pruned.
 before such that S  X  S and every maximal coherent sample set containing S also contains S , then the recursive search of S cannot lead to any maximal co-search the sample set S ={ s 2 } after we find the maximal coherent gene clus-can see that every maximal coherent sample set containing s 2 also contains s 1 .In other words, there exists no maximal coherent gene cluster containing s 2 but no s . Thus, the search of S can be pruned. 4.1.4 Determining maximal coherent gene clusters When we search a combination of samples S , we need to check whether G S  X  S is a maximal coherent gene cluster. We examine those maximal coherent gene clusters ( G  X  S ) such that S  X  S . Clearly, since we conduct depth-first search in the set enumeration tree, such maximal coherent gene clusters should be reported either before S is searched, or in the subtree rooted at S . 4.1.5 The Sample  X  Gene Search algorithm Based on the previous discussion, we have the Sample  X  Gene Search algorithm in Fig. 6. 4.2 Gene X  X ample Search Although the computational details of Sample  X  Gene Search and Gene  X  Sample Search are substantially different, the overall structures of these two algorithms are symmetric one to the other. In Gene X  X ample Search, we enumerate the com-binations of genes systematically. For each combination of genes, we compute the maximal sets of samples that the genes are coherent on. Many pruning techniques in Sample  X  Gene Search have the symmetric versions in Gene  X  Sample Search . Limited by space, we omit the details here. Instead, we only focus on the differ-ences between the two approaches. 4.2.1 Determining coherent gene clusters The concept of coherent sample sets for a gene can be generalized for a set of genes. Given a set of genes G ,a maximal coherent sample set with respect to G is a set of samples S G such that (1) genes in G are coherent on S G ; and (2) there exists no S  X  S G that samples in G are also coherent on S . Please note that there can be more than one maximal coherent sample set for a given set of genes. ingly, S G can be computed by some simple intersection operations. For example, { ( s { s S 2 by the function find-max-coherent-sample-sets in Fig. 7. 4.2.2 Pruning irrelevant genes and unpromising coherent gene clusters Similar to the idea in Sect. 4.1.2 , we can prune genes that cannot be used to extend the current combination of genes. For a given set of genes G ={ g i 1 ,..., g i k } , of genes if j  X  i k or none of the maximal coherent sample set with respect to G  X  X  g be used to extend G .If | G |+| G tail | &lt; min g ,then G should be pruned. clusters to prune the unpromising coherent gene clusters. Suppose we are search-ing a gene combination G 1 .Let S 1 be one maximal coherent sample set with (
G  X  S ) such that S 1  X  S and G 1  X  G ,then S 1 should be removed from the list of the maximal coherent sample sets S G 1 , since it cannot lead to any maximal coherent gene cluster. Moreover, if S G 1 becomes empty after the pruning, then G 1 should be pruned, since any recursive search from G 1 cannot lead to any maximal coherent gene cluster. 4.2.3 Merging coherent genes in the tail list In our running example, the maximal coherent sample sets with respect to gene g 1 ( in a shoot.
 Lemma 4.1 When search a combination of genes G, if there exist genes { g sample set of G, then there exists no maximal coherent gene cluster containing G but no { g j 1 ,..., g j k } .
 Proof Suppose we have such a maximal coherent gene cluster C containing G { g is a coherent gene cluster. Since G  X  ( G  X  X  g j 1 ,..., g j k } X  S ) , C cannot be a maximal coherent gene cluster. A contradiction.
 the current node, and thus shrink the number of recursions. The computation time is saved as well, since we only need to check the coherent gene clusters, prune the irrelevant genes or unpromising gene clusters for all these genes in one shoot. by Lemma 4.1 . The real-world GST microarray data sets are typically sparse and genes are coherent on a quite small number of sample sets. As a consequence, the performance of Gene  X  Sample Search can be improved substantially by this optimization.
 We can apply the similar optimization technique for sample X  X ene. That is, a sam-ple s j is merged into current combination of samples S as long as the inverted list Therefore, there are few cases when this rule can be applied in real applications. 4.2.4 The Gene X  X ample Search Algorithm Based on the previous discussion, we have the Gene -Sample Search algorithm as shown in Fig. 8. 5 Experimental results We implemented and tested our approaches on both a real GST microarray data set and synthetic data sets. The system is implemented in Java. The tests are con-ducted on a Sun Ultra 10 work station with a 440 MHz CPU and 256 MB main memory. 5.1 The data sets 5.1.1 The real data set We use the real gene X  X ample X  X ime microarray data set reported in [ 39]. It consists of the microarray measurements of 4324 genes in 13 multiple sclerosis (MS) pa-MS patients show heterogeneous responses to IFN- X  treatments. For example, the patients with relapsing MS respond better to IFN- X  treatments than the patients with progressive disease do. However, relapsing MS patients also exhibit consid-So far, the effects of IFN- X  treatment at the genomic level in humans are poorly understood. Researchers are interested in distinguishing the heterogeneous clini-cal response to IFN- X  therapy among the patients. Moreover, characterized gene expression dynamics correlated to the heterogeneous responses potentially help in exploring the causing mechanisms at the molecular level. 5.1.2 Synthetic data We observe that the preprocessing, i.e., mining the maximal coherent sample sets for each individual gene, is relatively fast. The major bottleneck in mining coher-ent gene clusters is in the latter part. Therefore, instead of generating synthetic GST data sets, we simulate the table of maximal coherent sample sets for genes such as in Fig. 5a. Initially, an empty table is created. Then, a certain number of coherent gene clusters ( G  X  S ) are randomly generated. For each g  X  G , S is inserted into the table as one maximal coherent sample set with respect to g .In addition to the size of the synthetic data set, i.e., the total number of genes in G-Set and the number of samples in S-Set , the synthetic data generator takes the following parameters: (1) k , the number of coherent gene clusters in the data set; (2) max gene and min gene , the maximal and minimal numbers of genes in a coher-ent gene cluster, respectively; and (3) max sample and min sample , the maximal and minimal numbers of samples in a cluster, respectively.
 tice, only a small number of genes are correlated with a phenotype [ 13]. When the size of the data set grows, we expect to see more coherent gene clusters. To simulate the situation, we set k to ( | G-Set | X | S-Set | )/( 3000 ) . 5.2 Results on the MS microarray data mental bias. We first choose a global normalization strategy to filter out the out-liers [ 39 ], estimate the missing values using KNN impute [ 36], and standardize the data set such that the gene expression levels of each patient at each time point have a mean of zero and a standard deviation of one. We then apply the principle component analysis (PCA) [ 18] to remove the systematic variation caused by ex-perimental bias. Moreover, we filter the genes which exhibit  X  X lat patterns X  across the whole set of samples. That is, a gene will be removed from the data set if its expression level do not change significantly (e.g., 10%) during the whole time series on any sample. The rationale is that these genes are probably irrelevant to IFN- X  response under investigation.
 rithm to the data with min s = 3, min g = 50, and  X  = 0 . 8. From the min-ing results, we systematically select top 25 high-quality coherent gene clusters using the method in [ 20]. Please note that for each cluster C = ( G  X  S ) ,the genes showing  X  X lat patterns X  across S are removed. The clusters are reported at http://www.cse.buffalo.edu/DBGROUP/bioinformatics/GST.
 clusters. To better understand the biological functions of the genes in clusters, we then investigate the enrichment of clusters in terms of Gene Ontology [ 6]. Finally, we discuss the correlation between the identified clusters and the known aspects of IFN- X  pharmacology. 5.2.1 Statistical significance of clusters To estimate the statistical significance of clusters, we generate 100 permutated data sets from the original data. Since clusters containing only one gene or one apply our algorithm to each permutated data set. Suppose C records all the clusters generated from the 100 permutated data sets. We calculate the histograms of the number of samples and genes in clusters from C . Figure 9 illustrates the distribu-tion of the percentage of clusters in C with respect to the number of samples in clusters. For example, 18.54% of the clusters in C contains two samples. Please note no clusters have more than five samples.
 the number of genes in clusters given a specific number of samples. For example, in Fig. 10 a, we can see all the clusters containing only two samples have 160 X  260 genes, and the distribution is approximately Gaussian. However, when the number of samples in clusters increases, the number of genes in clusters decreases dramatically. For example, the number of genes in clusters ranges between 2 and 24 when | S |= 3(Fig. 10 b) and the range drops to 2 X 6 for | S |= 4(Fig. 10 c) and 2 X 3 for | S |= 5(Fig. 10 d). This means that by chance, fewer genes will form coherent patterns across a larger subset of samples.
 and samples in clusters, respectively. The probability of c is a joint distribution P ( (
G  X  S ) as |
G higher the statistical significance. In our case, we set min s = 3andmin g = 50, according to Fig. 10 b, the p -Value of a cluster with at least three samples and 50 genes is approximately zero. Therefore, the clusters reported by our algorithm are statistically significant. 5.2.2 Gene annotation of clusters We use the Gene Ontology (GO) [ 6] to annotate the genes in clusters. GO is orga-nized as a hierarchical direct acyclic graph (DAG). There are three major parts of GO, which form three independent ontologies describing the attributes of molec-ular function, biological process, and cellular component for a gene product. GO is a rapid growing collection with more than 11,000 terms so far. A significant portion of genes (3501 out of 4324) in our MS data set has been annotated by GO terms.
 is M . If we randomly draw p genes from the complete gene set G -Set , the prob-ability that q of the selected p genes are associated with T can be approximated by the hypergeometric distribution [ 35] and the p -Value of a cluster C = ( G  X  S ) with q genes in term T is uli X ; 9 clusters are associated with  X  X ell communication. X  We also examine the been annotated. For example, only 19 out of 107 genes in Cluster 2 are anno-wide range of eight samples (Fig. 11 ). This cluster may provide valuable infor-mation for function prediction of those unknown genes. Moreover, among the 10 clusters that are not enriched in any second-level Go terms, we also find some clusters are enriched in the third-level GO terms. For example, Cluster 11 is en-riched in  X  X ransport X  ( p -Value = 0 . 0184) and Cluster 24 is enriched in  X  X xygen and reactive oxygen species metabolism X  ( p -Value = 0 . 00648). The expression patterns as well as the detailed gene annotation for all the clusters are reported at http://www.cse.buffalo.edu/DBGROUP/bioinformatics/GST. Since IFN- X  has anti-viral, anti-proliferative and immunomodulatory effects, the clustering results are biological feasible. 5.2.3 Interesting observations on clusters To assess the usefulness of the coherent gene cluster model, we initially focus on  X  X enchmark X  mRNAs that are known to be IFN- X  responsive. For example, 80 out of the 659 genes in Cluster 1 are associated with the response to external stimuli ( p -Value 0.0262). We find this cluster contains several genes known to be induced by IFN- X  treatment [ 8, 32]. A few examples of such gene of particular in-terest are signal transducer and activator of transcription 1 (STAT-1, Hs. 479043), which is associated with the IFN- X  receptor and forms part of the transcription factor complex that binds the interferon-responsive promoter sequence; guanylate binding protein-1 (Hs. 62661), myxovirus resistance protein-2 (Hs. 926) and dou-ble stranded RNA-dependent protein kinase (PKR, Hs. 131431), all of which are involved in the anti-viral response.
 communication ( p -Value 0.00749) and 13 are known to associate with cell X  X ell signaling ( p -Value 0.00487). Those genes, together with the other genes in the same cluster that are unknown or poorly understood, may serve as switches in the genetic network and hence play an essential role in the biological processes. Thus, studying the time series of the genes in the coherent gene clusters may greatly help people understand the regulatory mechanisms behind the response to IFN- X  treatment.
 though our computational model allows genes with diverse temporal profiles to be present in the same cluster as long as their profiles are similar across the sub-set of patients. This suggests that there are groups of genes with similar temporal profiles that are activated in patients. The emergence of significant p -Values in most clusters suggests that the genes groups are functionally coordinated. Criti-cal analysis of the evidence for functional coordination is currently underway in our laboratory. Biologically, this finding is potentially very valuable because the promoter sequences of these gene groups can be analyzed to determine whether they share common regulatory pathways. Further analysis that include clinical in-formation could potentially reveal whether the subsets of patients differ in their clinical phenotypes. 5.3 Effects of the parameters The maximal coherent gene cluster is defined with respect to three parameters, i.e., the minimum number of genes min g , the minimum number of samples min s , and the coherence threshold  X  . We test the effect of the parameters on the real GST data set. Figure 12 a shows the number of coherent gene clusters when min g varies from 5 to 100, min s = 3and  X  = 0 . 8. Clearly, the number of coherent gene clusters in the data set decreases when min g increases. The result concurs the intuition: with a lower min g value, we can catch more clusters with more or coherent blocks when min g = i . Then, we can show B 1  X   X  X  X  B i  X   X  X  X  B n . min s when min g and  X  arefixedto10and0 . 8, respectively. This result can be explained in a way similar to the situation of min g . Figure 12 c shows the effect of  X  on the number of coherent gene clusters in the data set, with min min s = 3. When we lower the coherence threshold, more combinations of samples are  X  X oherent X  by chance with respect to a minimum of min g genes.
 the value of the parameter (represented by the X -axis) increases, the number of coherent gene clusters (represented by the Y -axis) goes down. The curve drops sharply until a  X  X not X  is met, then the curve goes stably to the right. For example, we can see the  X  X nots X  of min g = 20 in Fig. 12 a, min s = 5inFig. 12 band  X  = 0 . 85 in Fig. 12 c. We examine the  X  X not X  (min s = 5) in Fig. 12 a with the histogram in Fig. 9, and find that P ( s  X  5 ) 0. We also check the  X  X not X  (min g = 20) with the histogram in Fig. 10 b, similarly, we find P ( g  X  20 | s = 3 ) 0. The consistency between the  X  X nots X  in Fig. 12 and the distribution of clusters significant coherent gene clusters in the real data set.
 0 and determine the threshold min g according to the histogram in Fig. 10 and the Fig. 12 c. A  X  X not X  in the figure may suggest an appropriate  X  value. As shown by our empirical study, such parameter settings often generate highly coherent and statistically significant clusters. For example, Fig. 11 shows the temporal patterns within a cluster with  X  = 0 . 8. 5.4 Scalability We first test the efficiency of the preprocessing (algorithm in Fig. 3) on various random subsets (by sampling) of the real microarray data set. The size of the sub-sets varies from 500 to 4324 genes, and all the samples are included. For each size, we sampled 30 subsets and calculate the average runtime. Figure 13 a illustrates the scalability for the preprocessing step. As we discussed in Sect. 3, the real GST microarray data sets are often sparse. With the efficient pruning techniques, the preprocessing algorithm is linearly scalable to the size of the data sets. Search on synthetic data sets. We set min s = 5, min g = 10, and  X  = 0 . 8. We first fix the number of samples to 30, and report the runtime with respect to number of genes (Fig. 13 b). We can see both approaches show an approximately linear scalability with respect to the number of genes. Figure 13 c shows the scalability for both approaches under different sizes of sample sets (from 30 to 100), when with respect to the number of samples. Please note that Sample  X  Gene Search and Gene  X  Sample Search always report the same set of clusters, since both approaches find the unique complete set of maximal coherent gene clusters in the data set. However, since the number of genes for a microarray data is typically by far larger than that of the samples, the enumeration of genes is much more expensive than the enumeration of samples. This explains why the Sample  X  Gene Search is faster than the Gene  X  Sample Search . 5.5 The effect of Lemma 4.1 Lemma 4.1 can identify the genes g i that can be merged into the current combi-nation of genes, and thus can reduce the number of recursions in the mining. We use some samples of the real microarray data set (each subset contains 100 X 1000 genes and 12 patients) to compare the performance of the Gene  X  Sample Search with and without the optimization. The comparison is conducted in three aspects: (1) the maximal number of recursion levels in the Gene  X  Sample Search ;(2)the number of gene combinations in the Gene  X  Sample Search ; and (3) the runtime. Figure 14 shows the results. We can clearly see that (1) the maximal number of recursion levels can be reduced substantially (Fig. 14 a); (2) with the optimization, the total number of gene combinations needed to be checked goes down sharply Fig. ( 14 b); and (3) the runtime is much shorter when the optimization is applied Sample Search . conduct similar tests. However, we can hardly see any significant improvement brought by the optimization. As we discussed in Sect. 4.2.3 , due to the sparsity of the microarray data, many genes can be merged because they are coherent on the same sample set. However, few samples would be merged together since usually the maximal coherent gene sets with respect to two different sample sets are not identical. 6 Related work This research is related to the previous work on clustering conventional gene X  X ime and gene X  X ample microarray data, pattern-based clustering, and frequent item set mining.
 time microarray data, various algorithms (e.g., [ 2, 11, 19, 33, 35]) have focused on clustering the genes. That is, co-expressed genes are grouped based on their expression patterns during the time series. However, different approaches (e.g., macroscopic phenotypes as well as to detect informative genes which manifest the sample partition. However, all the cluster models in those previous studies are substantially different from our coherent gene clusters. As a consequence, those algorithms cannot be extended directly to solve our problem.
 microarray data. This study is directly stimulated by this category of research. that follow similar patterns on subsets of samples. Different from the traditional clusters such as subspace clusters, the direct distance between the genes may not be short due to the shifting of the patterns. Moreover, the pattern-based clusters may have overlap: a gene can participate in different biological processes and thus more than one pattern-based cluster.
 herence between genes and conditions (either time series or samples). For a given set of genes and a given set of conditions, a bicluster is a subset of genes coher-ent with a subset of conditions. Yang et al. [ 41] proposed a move-based algorithm to find biclusters more efficiently. Both algorithms [ 7, 41] adopt heuristic search approaches, and thus cannot guarantee to find the complete set of biclusters in the data set.
 set of objects O and a subset of attributes A ,pair ( O , A ) forms a pattern-based cluster if for any pair of objects x , y  X  O , and any pair of attributes a , b  X  A , the difference of change of values on attributes a and b between objects x and y is smaller than a threshold  X  . In a recent study [ 26], Pei et al. addressed the re-dundancy due to the anti-monotonicity of pattern-based clusters. The concept of maximal pattern-based clusters was developed and an efficient algorithm, MaPle , was proposed to mine the complete set of maximal pattern-based clusters. order-preserving clustering ( OP-cluster for short). A group of genes form an OP-cluster on a permutation of a subset of samples if each gene has increasing expression levels on the subset of samples.
 pattern-growth methods for frequent pattern mining. The idea of using set enumer-ation tree in frequent item set mining was first proposed in [ 4]. The pattern-growth framework for mining frequent item sets was presented in [ 14], and was extended to mining frequent closed item sets in [ 25]. Moreover, enumerating samples in gene microarray data sets was first proposed in [ 26, 38], and was stimulated by the fact that the number of samples is often 1 X 2 orders of magnitudes less than the number of genes in microarray data sets.
 However, there are two essential differences between the frequent pattern mining methods and the approaches developed in this paper. First, the coherent gene clus-ters are inherently different from frequent item sets. Thus, the similarity between the two categories of methods is only at the level of spirit (e.g., set enumeration and pruning). The technical details are dramatically different. Second, several new techniques such as the inverted lists are adopted to tackle the particular microarray data. 7 Other interesting coherent clusters in GST data In this paper, we focus on mining coherent gene clusters in GST data. That is, the set of genes in a cluster are constrained to exhibit coherent expression patterns across the set of samples in the cluster. Nevertheless, two other types of clusters, coherent sample clusters and coherent gene  X  sample clusters , may also be inter-esting.
 ( { words, genes are co-expressed across the samples. In practice, co-expressed genes may belong to the same or similar function categories, and co-expression may indicate co-regulation as well. Although numerous studies have aimed at finding co-expressed genes from traditional gene X  X ime data sets (e.g., [2, 11, 12, 15 X 17, 19, 27, 29 X 31, 33, 35, 42]), due to the high noise ratio of microarray data, a group of genes which consistently demonstrate co-expression across multiple samples are usually more reliable.
 { s during the time series. Clearly, a coherent gene X  X ample cluster is both a coherent gene cluster and a coherent sample cluster. Therefore, the biological meaning of the coherent gene X  X ample cluster is twofold: the samples in the cluster may cor-respond to some phenotype, while the genes in the cluster may not only correlate to the phenotype but also share similar functions.
 with respect to the whole time series. However, a specific cellular process may last for only a sub-interval within the whole time series of the microarray exper-iment. In particular, a gene may participate in one cellular process together with a set of genes G 1 at time point t 1 but join another process with a different set types of coherent clusters on a subset of continuous time points. Moreover, we will develop effective indices on the coherent clusters to describe the dynamics of genes. 8 Conclusions In this paper, we investigate a novel type of gene X  X ample X  X ime microarray data sets and propose a new problem of mining coherent gene clusters from such Sample  X  Gene Search and the Gene  X  Sample Search . Our extensive performance study on both a real microarray data set and synthetic data sets shows that there exist interesting and significant coherent gene clusters in the real data set, and both algorithms have good performance. Despite that both search methods re-turn the unique complete set of maximal coherent gene clusters ,the Sample  X  Gene Search is usually more efficient than the Gene  X  Sample Search since the number samples.
 References
