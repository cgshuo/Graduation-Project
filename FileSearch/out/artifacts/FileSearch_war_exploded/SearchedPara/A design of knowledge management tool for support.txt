 1. Introduction New Product Development (NPD) is one of the most important activities for companies to gain competitive advantages. Nowadays, the NPD is more and more depending on knowledge. Therefore, Knowledge Management (KM) has attracted a lot of attentions from both academia and practitioners so as to realize NPD-support KM strategies and tools. This paper focuses on the KM tools for facilitating knowledge acquisition and knowledge sharing. Knowledge query is usually the basic function for the most of KM tools. It is a traditional and direct way for users to acquire knowledge when they perform their design to think  X  X ut of the box X . The mode of knowledge query may not be suitable for users. Some recommended knowledge out of the users X  expectation and expertise could supply some hints or inspiration to them. It will be benefit for the users to gen-erate new ideas for the NPD. Besides the  X  X uzzy front end X , other stages (e.g., conceptual design, detailed design, technical implementation, etc.) also need the designers X  innovative ideas for solving some detailed design problems during the NPD process. For these purposes, knowledge recommendation can act as a supplement way for the traditional knowledge query in the KM tools. Both the knowledge query portal and the knowledge recommendation portal are the necessary functions for an advanced KM tool. According to this scheme, this paper proposes a new design of KM tool, which contains two basic functions: the knowledge query and the knowledge recommendation. The former one is the basic function for all types of KM tools, and also acts as the basis for the latter one because the query history can be used for mining users X  profiles, which reflect their demands for knowledge. The key issue for the design of the KM tool lies in the function of knowledge  X  recommendation. For realizing this function, this paper proposes two types of knowledge recommendation ways: one is a vector-based way; the other is a phrase-based way. Key techniques for implementing the KM tool are elaborated. A demo example is also illustrated to show the functions of the proposed KM tool.

The remainder of this paper is organized as follows. Some related works are briefly introduced in the next section. Section 3 presents framework of the whole system. For the key function, i.e., knowledge recommendation, an overview of the design is given in Section 4. Sections 5 and 6 elaborate the design details on the vector-based way and the phrase-based way for implementing the knowledge recommendation, respectively. Then a demo example about the application of the KM tool in a NPD process is illustrated in Section 7 . Closing remark and summary are then outlined in the last section. 2. Related works In knowledge economy, enterprises need to adapt and update their knowledge to keep their capability of innovation.
Therefore the relationship between the KM and organizational innovation is becoming an important issue in academic and practical areas ( Liao &amp; Wu, 2010 ). The root of KM can be traced back to the extensive works in diverse domains, such as organization science, business management, cognitive science, computer science and expert systems ( Alavi &amp; Leidner, are mainly from the view of organization culture and technology development; the latter one is more related with this paper.
Bradfield and Gao investigated KM problems in the new product development process of a multi-national manufacturing company ( Bradfield &amp; Gao, 2007 ), and proposed an ontology-based methodology to disseminate knowledge to users. Zhang,
Hu, Xu, &amp; Zhang (2012) developed an integrated KM framework for product-service systems business in construction machinery industry. Mountney, Gao, &amp; Wiseall (2007) studied the integration of manufacturing knowledge into the product introduction process, and a prototype KM tool was developed by them to meet those requirements. Shaw and Edwards stud-ied key components of a knowledge sharing strategy, and the relationships between it and manufacturing strategy ( Shaw &amp;
Edwards, 2006 ). Mart X n, Le X n, Luque, &amp; Monedero (2012) presented a distributed KM tool for formalizing knowledge man-agement descriptions. Dantas &amp; Farias (2010) made use of ontology as metadata to contextualize user search for knowledge.
Their proposed techniques can be used for the function of  X  X onceptual navigation X  in designing KM tools. Huang, Lin, &amp; Chan (2012) designed a KM system that comprises semantic tagging mechanism and triple-pattern and visual searching mecha-nisms. Hou &amp; Pai (2009) proposed a knowledge visualization methodology that computer systems can automatically convert the textual knowledge into visualized display; and a web-based prototype system was also developed to support spatial knowledge sharing. Knowledge map is also a type of KM tool and widely used by practitioners. Lin &amp; Hsueh (2006) designed a knowledge map system to facilitate knowledge map creation and maintenance functions by utilizing information retrieval and data mining techniques. Besides the above knowledge resources management or sharing techniques, Savci &amp; Kayis (2006) studied knowledge elicitation techniques, and proposed a reasoning methodology for knowledge elicitation, which provides a systematic engineering approach to product and process development. Berman (2001) proposed a design concept of Knowledge Grid (KG) to facilitate knowledge sharing among global users. KG is an advanced mode of KM platform, whose level is higher than traditional KM tools. Our research team designed a KG based knowledge query platform to support innovative product design activities ( Zhen &amp; Jiang, 2008 ).

Among the above KM applications or methodologies, they are mainly based on the traditional query mode. In the area of knowledge recommendation, Li, Liao, &amp; Lai (2012) build a recommender system for knowledge sharing in online forums. Their system integrates similarity, expertise, relation modules for mining some relevant threads and experts efficiently. Li, Liu, &amp; Li (2011) used fuzzy techniques to design an expert recommendation approach to foster tacit knowledge sharing.
Our research team also designed a distributed recommender systems for peer-to-peer environments ( Zhen, Jiang, &amp; Song, 2010 ). However, the above systems focus on the applications in routine scenarios, rather than the fields of NPD, which needs innovation ideas supported by KM tools.

Human X  X omputer interaction (HCI) is an important issue for designing the KM tools. Because of the HCI X  X  importance in the development of web-based systems, some typical HCI topics, e.g., user-centered design and usability testing, have at-of MIS (Management Information Systems). The HCI and the MIS share some common disciplines such as cognitive psychol-ogy, social psychology, computer science, and communication; they also share many common research methodologies ( Hoc, 2001 ). To develop KM tools with friendly interfaces, there exist many research and practice strategies that have been studies ( Zhang et al., 2002 ).

From the above literature review, we can see that most of the KM tools are essentially based on knowledge query mode; no matter they are distributed systems, use some visualization forms, use some specific AI techniques, are built on comput-ing grid, or not. The ultimate purpose of these tools is to help users find knowledge that fits their needs. The importance of this study lies in that our proposed KM tool integrates the knowledge query mode and the knowledge recommendation mode together in a whole system. Although there exist several studies on knowledge recommendation techniques, this study differs from them on that our proposed tool focuses its recommendation functions in the area of NPD, rather than some gen-eric situations. The major contribution of this study is that it proposes a NPD-support KM tool that contains knowledge rec-ommendation mode, which can efficiently supply potentially useful knowledge for users to support their design tasks in the process of NPD.
 3. Overview of the knowledge management tool
The KM tool proposed in this paper has two major functions: knowledge query and knowledge recommendation. For the former function, users input some keywords and search for knowledge according to the keywords. For the latter function, the users need not input some search criteria; the KM tool can supply the users with some knowledge resources that may be potentially useful for them. Besides the above two functions, some maintenance functions are also necessary for the KM tool. The potential users of the KM tool in this study can be categorized under two types: Common users all the engineers, designers, managers, clerks, etc., who are involved in the product development process. Users can query knowledge and receive knowledge recommendations through the system.

Knowledge engineers the experts who are in charge of defining knowledge categories and keywords, managing knowledge resources in the repository, tagging knowledge with categories, defining knowledge demand information for members, roles and tasks.

The framework of the KM tool is illustrated in Fig. 1 . It has three types of portals: knowledge query portal, knowledge recommendation portal, and maintenance portal. The former two portals are used by the common users, and the third portal is only used by the knowledge engineers. For the second portal, there are two different ways: one is the vector-based rec-ommendation; the other is the phrase-based recommendation. The following two sections will elaborate the design details on these two ways, respectively.

As shown in Fig. 1 , most of the components inside the KM tool can be divided into two parts: (1) supply side, i.e., knowl-edge repository and the management functions on the resources in the repository; (2) demand side, i.e., knowledge demands of members, roles, and tasks involved in the NPD process. Besides the two parts, there are modules on managing the knowl-edge categories and ontology, which are utilized in the vector-based and the phrase-based recommendation, respectively. In addition, query log (i.e., query historical records) is also maintained for updating users X  demands for knowledge. The details are elaborated in Section 5.2 .
 4. Knowledge recommendation based on the matching between knowledge resources and user demands
Recommender systems usually use similarity based matching or popularity analysis to realize the goal of recommenda-tion ( Pera &amp; Ng, 2013 ). How to match knowledge resources and user demands is a key issue for knowledge recommendation.
Further, the description method of the knowledge resources and the user demands is the basis for the matching process. In this study, we propose two methods for modeling the knowledge resources and the user demands: one is a vector-based way; the other is a phrase-based way.
 The vector-based way it means both the knowledge resources and the users X  knowledge demands are described by vectors.
Each element in a vector reflects the degree that a user (or a knowledge resource) belongs to a certain category. The matching between the users and knowledge is actually the similarity calculation of two vectors. In addition, the vectors for modeling the users X  demands are not static, but are dynamically changing as their interests vary along the time.
The phrase-based way it means the knowledge resources and the users X  knowledge demands are described by some struc-tured phrases. In the application environment of product development, the knowledge demand may describe the design problems faced by users during their designing activities. We can use a phrase structure  X  X djective + noun + OF + noun X  to describe the demands, and use  X  X erb + noun + OF + noun X  to describe the knowledge resources. Then the knowledge rec-ommendation is based on the matching between these structured phrases.

The following two sections (i.e., Sections 5 and 6) elaborate the above two types of matching methods, respectively. 5. Vector-based matching between knowledge and users 5.1. Describing knowledge and users by vectors
There exist many methods for measuring the similarities between concepts. For example, feature vector based similarity measures ( Formica, 2009 ), distance-based and angle-based measures ( Zhang &amp; Rasmussen, 2001 ), probability-based mea-2008 ), etc. Each method has their strengths and applicable areas. This study adopts the most commonly used vector-based method for similarity measures.

First we define a set of keywords as K  X f k 1 ; k 2 ; ... ; k N g to describe knowledge categories. It should be mentioned that the knowledge recommender systems in this study are assumed for serving product development members who mainly per-form design works on some specific product categories, rather than general product development works or routine office works. Therefore, the number of keywords involved in the application environments of this study (i.e., N ) is not very large. Both the knowledge resources in the repository and the user demands information are described by the keywords in the set
For the weights w , they can be continuous numerical variables and range from 0 to 1. The larger is a weight value, the higher degree that a user X  X  demand (or an item of knowledge resource) belongs to a certain category. The weights w can also is related with the corresponding categories k 2 and k s ; otherwise the weights equal zero.
 user u and the knowledge k , denoted by  X  Sim  X  u * ; k *  X  X  , can be calculated according to the cosine formula as follows:
To describe users X  knowledge demand (or knowledge resources), it may be difficult for users (or knowledge engineers) assigning some exact and rational weight values to each element contained in the vectors. In realistic environments, these weight values are usually set as binary values. In this case, the similarity formula turns to: sim  X  u * ; k *  X  X  u * k * is the ratio of the number of categories, which are concerned by both the user and the knowledge, to the number of cate-gories, which are concerned by either the user or the knowledge. 5.2. Dynamic changing of user demands User demand models (user profiles) are not static, but are dynamically changing along the time ( Calegari &amp; Pasi, 2013 ). In the product development process, users X  tasks and roles may change in different stages. For different tasks and roles, their issues have influences on the knowledge demands of users.

For a product development team, the knowledge demands for each team member, role, and task can be defined through some specific tools. By using the tools, users can choose some categories and set weight values to describe their interests; and knowledge engineers can also assign some categories and weight values to roles (or tasks) according to the knowledge requirements of the roles (or the tasks).
 During the product development process, the users may need to query some knowledge by keying into some keywords. However, these keywords may not exist in the predefined set of knowledge category keywords. In reality, it is difficult to build some relationships between the keywords, which are randomly keyed into the query portal by users, and the prede-fined knowledge category keywords. We used the category information of the knowledge resources searched and browsed by users to revise their knowledge demands.

For example, there is a user u in a product development team. His (or her) knowledge demand is described by a vector: u searched and finally browsed by the user. The category information of the two knowledge resources are denoted by: k 3 r and r 8 reflects the influence degree of the knowledge resources k 3 and k 8 on the user X  X  demand, respectively. If the system has some function for users to evaluate the knowledge browsed by them, we can use the rank value of the browsed knowl-edge to determine the above mentioned r values. If the evaluation function does not exist in the system, we can use some alternative methods. For example, the system can measure how long the user spends on browsing the knowledge. Then the length of the time can be used to quantify the above mentioned r values.

In addition, the r values should be variable with respect to the gap between the time of browsing and the current time. For the decreasing trend of the influence along the time. More specifically, we assume the influence degree of the knowledge browsed currently is one; if the gap between the browsing time and current time is hl , the degree is 0.5; and the degree ap-proaches zero with the gap increasing. If the time gap of a browsed knowledge resource is denoted by t , the influence degree Users X  knowledge demands are dynamically changing, and can be modeled from two parts: static part and dynamic part. The static part is the initial setting for the users X  demands, and it can only be revised by the users personally or knowledge engineers; these revising actions are performed manually. The dynamic part is derived from the knowledge browsed by users during their working activities; the details are addressed in the previous paragraph. A formal definition of the users X  knowledge demand model is given as follows: the user u during an effective time window, which could be defined in advance, e.g., one week, one month, one year, etc.; for is updated according to the following formula: P 6. Phrase-based matching between knowledge and users
Different from the vector-based way, the phrase-based way means the knowledge resources and the users X  knowledge demands are described by some structured phrases.

In the application environment of product development, the knowledge demand may describe the design problems faced by users during their designing activities. We can use a phrase structure  X  X djective + noun + OF + noun X  to describe the de-mands. For example, a user encounters a problem in the process of diesel design. The oil consumption of the current design is too high. The user needs to think out some methods to solve the problem. In this scenario, the knowledge demand of the user can be presented in the form of  X  X djective + noun + OF + noun X , i.e.,  X  X xcessive oil consumption OF diesel X . The combina-tion of the adjective and the first noun describes the problem; and the second noun specifies the problem area. Then, all the knowledge that relates to some solution methods on reducing the oil consumption of diesel can be recommended to the user.
We use a phrase structure  X  X erb + noun + OF + noun X  to describe the knowledge resources. Continuing the above example, a phrase  X  X ecrease oil consumption OF diesel X  just follows the form  X  X erb + noun + OF + noun X . In addition, some knowledge that relates to decreasing the oil consumption of gasoline engine can also be potentially useful for solving the problem, and should be recommended to the user by the system. The system can  X  X nderstand X  the gasoline engine is a concept that is highly related with the diesel in the ontology.

For the knowledge resources, their descriptions in the form of above phrases are given by the knowledge engineers. For the users X  demand information, the descriptions are given by their selves. It should be mentioned that the verbs and the adjectives used in the above descriptions are limited in two given sets respectively. The users cannot use these verbs and adjectives in an arbitrary manner. This setting can avoid synonyms, e.g.,  X  X educe X  and  X  X ecrease X , etc. The mapping relation-ships between the verbs and the adjectives are defined in advance. For example: the adjective  X  absence of  X  X  matches to the lable  X  X o X  control  X ;  X  unstable  X  X o X  regulate  X ; and so on.

From the above analysis, we can see that the ontology is a key issue for realizing the matching between the knowledge and the users. In the ontology, the relationships between different concepts are defined. In this way, the recommender sys-tem can intelligently find out some potentially useful and related knowledge from repositories, and then supply them to the target users. An example of the ontology is illustrated in Fig. 2 as follows. 7. A demo example
This section gives a demo example to illustrate the application of the KM tool in a NPD process. The object of the product in this demo example is compressors that are used in air conditioners. Some design tasks for new compressor development are shown in Fig. 3 .

The tasks in Fig. 3 constitute a NPD workflow for compressors. For the tasks in the workflow, their demands for knowl-edge are different from each other. For example, the task of  X  X arket research X  may need some information on air conditioner market yearbooks, or some materials on the market of the products that are related with the air conditioner compressors; the task  X  X hermodynamic calculation X  may need some knowledge about the subject of thermodynamics, design standards on some parameters of refrigerant, etc. For different tasks, the KM tool should supply them with different sets of knowledge resources. It should be mentioned that the tasks are correlated with some certain members in the NPD team. The recom-mended knowledge resources are actually supplied to the members who perform the tasks. The above mentioned correla-tions between members and tasks, and the knowledge demands of tasks are maintained by the knowledge engineers in the NPD team.

In the NPD team, there are also plenty of roles, e.g., mechanic engineer, electronic engineer, project manager, etc. For these roles in the workflow, their demands for knowledge are also different from each other. It should be mentioned that the roles are correlated with some certain tasks in the NPD team. The correlations between them are shown in Fig. 4 . When implementing the KM tool in the realistic application environments, the knowledge engineers should define the NPD members, roles, tasks, correlations between them, and their demands for knowledge in advance. Without the above information, some potentially useful knowledge resources cannot be extracted from the repositories and be recommended to some certain members, roles, and tasks. Some interfaces of the KM tool for defining knowledge demands are shown in Fig. 5 .

Based on the information defined in the above interfaces, the KM tool can recommend knowledge to members according to their knowledge demands, some roles X  and tasks X  knowledge demands, if the roles and the tasks are performed by the members. Some interfaces of the KM tool for browsing the recommended knowledge, searching knowledge, and managing knowledge are shown in Fig. 6 .

In the NPD process, the knowledge resources for supporting product design can be categorized under three types. The first one is the browsing-type knowledge. For example, design cases, design standards, design formulae, design manuals, etc. These knowledge resources are usually in the format of documents. And they are mainly browsed by users through the portal of the KM tool. The second one is the software-type knowledge, for example, some tele-services for calculations or simula-tions in the design process. These knowledge services are just like some software on the web. They are stored in the knowl-edge repository, but can be invoked by users through the KM tool on their PCs. The users enter input data, and then output result will be returned by the knowledge services. The users need not to own these services and store them on their PCs, but they can use them through the form of knowledge service. The third one is the expert-type knowledge. Some implicit knowl-edge only exists in experts X  brains, and they are hard to be represented in the form of documents or software. The expert-type knowledge is actually the contact information of the experts, who are tagged with their expertise, or their specialties in solving some certain problems. The contact information can be recommended to some users who may need to communicate with the experts on the problems in the NPD process. The communication channels can be email, audio, or video, with the support of whiteboard web systems. Then knowledge demanders could communicate with the experts through various channels on the KM tool. Fig. 7 illustrates some examples of knowledge utilization in the NPD process.
 8. Summary This paper chooses the NPD as the application area and studies how to design an efficient KM tool so as to support the
NPD activities in companies and institutes. A KM tool with knowledge query and recommendation functions is designed and implemented. More specifically, two recommendation ways, i.e., the vector-based and phrase-based ways, are proposed in this study. A demo example of utilizing the KM tool in the NPD process of compressors in air conditioners is also illustrated to show how the NPD is supported by the tool. This paper paves a way for developing some platforms that can share and manage globally distributed knowledge resources.

However, there are still some limitations for the current design model. (1) This design uses the similarity between the users X  demands and knowledge X  X  descriptions as the basis to realize the (2) The proposed KM tool cannot apply in the NPD on all types of products. It is mainly oriented to some mechatronic prod-(3) The KM tool is just a prototype system, and its interfaces seem a bit simple. The current GUI design of the KM tool lacks
In future, we will try to improve the human X  X omputer interfaces of the KM tool, as well as the in-built recommendation mechanisms in the tool by using some advanced AI techniques in the fields of recommender systems. In addition, how to improve the current design of the KM tool so that it can apply for more types of products and even service design is an inter-esting direction for our further researches on KM tools design and development.
 Acknowledgements This research is supported by the National Natural Science Foundation of China (Grant No. 71101087); Shanghai Pujiang Talent Program (Grant No. 11PJC072); Soft Science Program by Shanghai Municipal Science and Technology Commission (Grant No. 12692107400); Research and Innovation Program by Shanghai Municipal Education Commission (Grant No. 12YS006).
 References
