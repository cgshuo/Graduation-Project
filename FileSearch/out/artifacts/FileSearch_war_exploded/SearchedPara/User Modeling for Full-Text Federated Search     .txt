 User modeling for information retr ieval has mostly been studied to improve the effectiveness of information access in centralized repositories. In this paper we explore user modeling in the context of full-text federated sear ch in peer-to-peer networks. Our approach models a user X  X  pers istent, long-term interests based on past queries, and uses the mode l to improve search efficiency for future queries that represent in terests similar to past queries. Our approach also enables queries representing a user X  X  transient, ad-hoc interests to be automatically recognized so that search for these queries can rely on a relatively large search radius to avoid sacrificing effectiveness for efficiency. Experimental results demonstrate that our approach can significantly improve the efficiency of full-text federated search without degrading its accuracy. Furthermore, the proposed approach does not require a large amount of training data, and is robust to a range of parameter values. H.3.3 [ Information Search and Retrieval ]: Search process. Algorithms, Performance, E xperimentation, Design User modeling, Query clustering, Peer-to-peer, Federated search User modeling for information re trieval has been a very active research topic in recent years. Most studies focus on using user models for query expansion/refo rmulation, result re-ranking, or document/link recommendation to improve the effectiveness of information access in centralized repositories. There have been very few studies of user modeling for federated search of multiple distributed collections in the absence of a central authority. Because peer-to-peer (P2P) networks have emerged as an attractive solution to information retrieval in distributed environments when search using centralized repositories or indexes is either impossible or impracticable, we are interested in investigating how user modeling can improve the performance of federated search in p eer-to-peer networks. Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. SIGIR X 06 , August 6 X 11, 2006, Seattle, Washington, USA. Copyright 2006 ACM 1-59593-369-7/06/0008...$5.00. relevant resources, a relatively la rge search radius is usually required to reach the hubs that cove r relevant contents. In this paper, we study how user modeli ng can be used to improve the quality of initial hub selection in order to start the search in the right neighborhood so that less effort (i.e., a smaller search radius) is required to find information pr oviders with relevant contents and therefore higher search efficiency can be achieved. We propose an automatic mechanism for each information consumer to adaptively model the persistent, long-term interests of the user it represents based on past queri es, and use the model to guide initial hub selection for future que ries that represent interests similar to past queries. Our approach also automatically recognizes queries representing th e user X  X  transient, ad-hoc interests, for which the model based on search history cannot support effective initial hub selection, so it can fall back on a default search strategy of a large search radius to avoid sacrificing accuracy for efficiency. Experimental results demonstrate that our approach can significantly improve the efficiency of full-text federated search without degrading accuracy. In the following section we de scribe related work on user modeling for information filtering, Web retrieval and federated search in P2P networks. Our approach to modeling user interests for full-text federated search is presented in Section 3, followed by the evaluation resources in Section 4. We present experimental results to evaluate the effectiveness of our approach in Section 5 and explore the impact of different parameter settings in Section 6. Section 7 concludes. User modeling represents a user X  X  information needs (interests) with a user model (also called  X  X  ser profile X ). A user model can be hand-crafted, or learned auto matically from queries and their retrieved documents based on exp licit (e.g., relevance judgment), implicit (e.g., mouse c lick, time on page), or pseudo (e.g., the top ranks) relevance feedback. Comm only used representations for a user model include a set of attri butes with values, a structured representation such as a weighted concept hierarchy based on a predefined ontology, or a bag-of-w ords representation such as a vector of weighted terms or a uni gram language model. A user X  X  interests can be represented as a whole using one representation, or as a set of topics (determine d by clustering or classification) with one representation for each topic. Which technique and representation to use in genera ting user models depends on the objectives and requirements of the particular applications. In information filtering, a user model is specified by the user explicitly and modified over time by the system based on the long-term observations of the document stream and periodic relevance feedback from the user ( X  adaptive information filtering  X ) [13]. Typically adaptive information filtering systems exploit machine learning techniques to handle positive and negative relevance feedback provided by the user. Although explicit relevance feedback from th e user is usually available for information filtering, Web retrie val and federated search in distributed environments are unlik ely to have such luxury. Personalized Web search uses user models to adapt search to the needs of individuals through query expansion, result re-ranking, or link recommendation. A user model with a bag-of-words representation can be generated fro m queries and the text of the top-ranked or visited documents to represent the user X  X  short-term interests (within a single search session) [15], long-term interests in which the information provi ders having similar contents connect to the same hubs can best support effective interest-based hub selection since contents relevant to similar interests tend to be similar to each other. The network can provide this property by using distributed hash tables [ 12] or dynamic topology evolution [2, 7, 10] to regulate its content placement. In addition to queries representing persistent information needs, a user may also issue queries that are not conceptually related to his/her long-term interests, to satis fy transient, ad-hoc information needs. Because interest-based hub selection at a consumer depends on the limited (and ofte n biased) information the consumer has learned about the hubs as a byproduct of past search, it is unlikely to provide any clue about which hubs can best locate relevant contents for transient information needs not related to search history. Therefore, for queries expressing transient information needs, the consumer must resort to a more extensive search using a larger search radius (TTL) to route queries to the hubs that directly cover relevant contents, trading efficiency for accuracy. In other words, different search strategies are required for differe nt types of queries to optimize the overall search performance. Our goal is to develop an approach that enables each consumer to distinguish between queries representing different pers istent interests for effective interest-based initial hub selection at the consumer, and to recognize transient information needs so that full-text hub selection at the hubs can be fully utilized to guarantee accuracy. User modeling for full-text federa ted search in a peer-to-peer network takes place at each individual information consumer due to the lack of a centralized serv er to monitor search activities in the network. Similar to the approach taken in [20], query clustering is used to group past queries in identifying a user X  X  different interests. Each query cluster represents a topic of interest . The interest-dependent performance is measured for each hub that provided search results to this consumer, which is dynamically updated whenever new results are available. For a hub that covers contents related to multiple topics of interest, its performance for each topic is measured independently of the other topics. The optimal hubs for a new query are determined based on their performance for clusters of similar past queries. In the following subsection, we present the design for the two main tasks of our approach, namely clustering queries and learning about the hubs X  performance for each cluster. Section 3.2 describes in detail the implementation of our approach. Query clustering requires a representation for each query/cluster, and a similarity measure between queries and clusters. Because the small number of query terms does not provide a reliable basis for clustering queries effectively, a commonly used method to measure query similarity in Web retrieval is to count the number of commonly retrieved documents for the queries [5, 21]. This method may work well if the task is to group queries that are very similar. However, to group queries by interest, it is quite likely that two queries that express sim ilar interests in a general topic (e.g., music) may not have any retrieved document in common even though the vocabularies of their retrieved documents may have significant overlap. Therefore, it is more appropriate to measure query similarity based on the contents of the documents returned for each query. Which retrieved documents to choose in generating a representation for the corresponding query depends after the search results are obtained for the query so that the full contents of the top-ranked merged documents (assuming no feedback is available) can be used to generate the query representation for clustering. Our experimental results demonstrate that a small numbe r of the top-ranked merged documents (e.g., 5  X  10) are sufficient to provide a reliable representation for query clustering. To distinguish between the two representations of the same que ry, we refer to the former one used for classification as its  X  TermRepresentation  X  and the latter one used for clustering as its  X  DocRepresentation  X .
 We refer to queries that are rela ted conceptually to the user X  X  persistent interests as  X  characteristic queries  X  since they are characteristic of his/her long-term information needs. By contrast, queries that represent transient, ad-hoc interests of the user are referred to as  X  uncharacteristic queries  X . User modeling allows the consumer to use past search experience to reduce the search radius and improve search efficiency for characteristic queries without reducing accuracy. But a default, larger search radius is still required for unchar acteristic queries to reach more hubs so as to locate sufficient rele vant contents. Therefore, for each new query, the consumer needs a classification threshold T classify to distinguish uncharacteristic queries from characteristic ones in order to apply different search strategies accordingly.
 Each query cluster is required to reach a certain size S min before it is regarded as a topic of interest. This is designed to avoid classifying queries to clusters of uncharacteristic queries formed by chance and to make the description of the topic represented by each cluster more reliable. Instead of classifying a new characteristic query to the most similar cluster, a weighted k -nearest neighbor approach is used to increase the robustness of our approach, where the value of k is determined by T classify and the weight is related to the similarity between the query and the cluster. Among all the clusters whose K-L divergence-based distance measures to a query X  X  re presentation are small enough (determined by a clustering threshold T cluster ), the query chooses to join the largest cluster in order to minimize the  X  X oise X  introduced by small clusters of uncha racteristic queries. The total number of query cluste rs can be limited in order to control the amount of resources dedicated by an information consumer to process and store the language models used to represent the clusters. Although in most cases a consumer may not find it necessary to limit the number of query clusters (the average size of the representation for a query cluster is 69KB in our experiments), associating each cluster with a time stamp and removing infrequently used clus ters can reduce clusters of uncharacteristic queries and effec tively model the user X  X  interest shift. In our implementation, wh en the number of query clusters exceeds N max , clusters among the r least recently used clusters are removed in an ascending order of cluster size until the number of query clusters drops to N max . The hierarchical peer-to-peer ne twork we used to evaluate the performance of our approach to full-text federated search was created from the data defined in a previously published P2P testbed [8]. 2,500 collections, each consisting of documents crawled from a real Web site, were extracted from the TREC WT10g Web test collection to defi ne 2,500 information providers in a hierarchical P2P network. The number of hubs in the Two sets of queries were selected from the queries defined in the P2P testbed, which were automa tically generated by extracting key terms from the documents in WT10g [8]. The first query set consisted of 563 characteristic queries manually chosen to represent a user X  X  persistent interests in 8 relatively broad categories, and 437 uncharacter istic queries automatically selected to express the user X  X  transient information needs not related to the aforementioned 8 categories. The categories were determined by soft-clustering the 2,500 providers using their full-text resource representations a nd inspecting the most frequent non-stopword terms from each cluster. Therefore, these categories were representative of the contents provided in the network. Table 4.1 shows for each  X  X road X  category a general description, the number of queries issued for the category, and sample queries with query te rms stemmed using the k-stem stemmer [6]. Among the 8 categor ies,  X  X inancial information X ,  X  X ducation X ,  X  X ealth X  and  X  X echnology X  were popular in the network with a large number of providers providing related contents. By comparison,  X  X usic X ,  X  X aw X ,  X  X eligion X , and  X  X overnment issues X  were mu ch less popular. Samples of uncharacteristic queries are also in cluded in the table. The second query set included 400 characteristic queries in 8 categories which can be regarded as sub-categories of the above  X  X road X  categories and 600 uncharacteristic queries. Table 4.2 shows sample queries for these  X  X arrow X  categories. Given a query set, queries in the set were issued by an information consumer in a ra ndom order. The information consumer was not given information about which queries represented which types of interests. It was up to the consumer to decide, based on the learned user model, whether to issue a query as a characteristic query (with in terest-based initial hub selection and a small search radius) or as an uncharacteristic query (with a default large search radius). Because a small percentage of queries (depending on S min ) would be issued as uncharacteristic queries at the beginning in order to learn a reliable user model (even if the consumer recognized some of them as characteristic Table 4.1  X  X road X  categories and stemmed sample queries. queries. 1 The performance of full-text federated search over the same set of queries by using random initial hub selection without user modeling was used as a baseline. In our experiments, when less than 10% of the hubs were located within the search scope, no hub routing was involved so that federated search completely relied on initial hub selection to reach the hubs. Figure 5.1 shows that there was a big difference in accuracy between interest-based initial hub selection and random initial hub selection. This indicates that by modeling user interests, initial hub selection ba sed on the interest each query represented was much more effective in choosing the hubs that cover most relevant contents. Ov erall, search started with random initial hub selection needed to rely on a much larger search scope and full-text hub selection for query routing among the hubs in order to obtain accuracy comparable to that started with interest-based initial hub selection. In ot her words, search based on the user model required a much sm aller number of query messages and thus a much higher efficiency in order to achieve similar query routing could be reduced by 80% compared with using a ttl characteristic of 3 (with m = 5), but relative degradation in accuracy was only 8%. In summary, the results demonstrate that our approach can significantly improve the efficiency of full-text federated search without degrading its accuracy. One might expect that user interests that were more focused could be better modeled and could enable more effective interest-based hub selection. The results show that interest-based hub selection only had slightly superior resu lts for queries of  X  X arrow X  categories. This can be explained by the fact that with the small number of hubs in the network, the content area covered by each hub was relatively broad, so in terest-based hub selection was likely to select the same hubs for queries of a  X  X road X  category and for queries of the corresponding  X  X arrow X  category, leading to similar performance. A finer granularity in the hubs X  content areas might yield a greater performance improvement for queries of more focused interests. In addition to random initial hub selection, we also compared our approach against three other methods of initial hub selection. Content-based initial hub selection uses resource selection algorithm based on the content models of the hubs learned from The accuracy of the set of queries issued as uncharacteristic queries was not included because they used ttl uncharacteristic and random initial hub selection. categories and those of  X  X arro w X  categories yielded similar conclusions, the figures for  X  X arrow X  categories are omitted. As shown in Figure 5.2, initial hub selection without user modeling (content/performance-base d) underperformed that with user modeling (interest-based) due to the inability to identify uncharacteristic queries not related to search history. Because non-clustered interest-based initial hub selection didn X  X  distinguish between different interests although each hub X  X  performance for different interest s was likely to be different, it was less effective than clustered interest-based initial hub selection. The superior performance of interest-based initial hub selection with query clustering re sulted from its ability to measure each hub X  X  performance for different interests separately, and to use the measured pe rformance for hub selection when (and only when) past search could effectively guide future search. The previous section showed th at our approach can provide significant gains in federated search performance with a certain set of parameter values. In this section we study the robustness of our approach by exploring the impact of different parameter settings. When not mentioned, th e default parameter values are those shown in Table 5.1 with the exception that ttl characteristic is set to 0 and m is set to 5 (to focus on the performance of initial hub selection without further hub routi ng). Since similar conclusions can be drawn using either set of queries, only the results for the queries of  X  X road X  categories are shown due to space constraints. A vertical dashed line in each figure of this section marks the default value of the corresponding parameter. First we investigate whether the performance of our approach is sensitive to the values of the classification threshold T classify and the clustering threshold T cluster . In theory, a tighter classification threshold causes more queries to be issued as uncharacteristic queries with a large search radius, which results in lower search efficiency but can reach a higher percentage of the hubs. Correspondingly, a looser classifica tion threshold increases search efficiency with the possibility of hurting search accuracy. As to the clustering threshold, clusters created using a tighter clustering threshold represent narrower topics so that the percentage of the queries issued as uncharacteristic queries is likely to increase, resulting in lower efficiency but potentially higher accuracy. A looser clustering threshold leads to less cohesive query clusters representing broader topics with higher search efficiency. Therefore, the classification thre shold and the clustering threshold have similar effects on search accuracy and efficiency. Figure 6.1 shows the change in search performance as the value of T classify varies from 6.5 to 7.5 (with a default value of 7.0). The left vertical axis denotes the percen tage of the queries, which is a rough measure of search efficiency since efficiency is linearly correlated with the percentage of the queries issued as characteristic queries. Search accuracy is measured by the mean average overlap precision over the set of queries issued as characteristics queries (the right vertical axis). As expected, loosening the default threshold value increases search efficiency (the solid curve) moderately due to a larger percentage of the queries being issued as characteristic queries with a small search radius. However, the improvement in efficiency is not at the cost of significantly deteriorating search accuracy (the dotted curve). Overall, the figure indicates that the performance of our approach is quite robust when the threshold value is chosen within a certain range. Similar results can be obt ained for the clustering threshold documents, they may fail to appear among the very few top-ranked merged documents. To ach ieve reliable performance, the set of the top-ranked merged documents needs to be sufficiently large to guarantee the inclusion of relevant documents. As shown in the figure, both search accuracy and search efficiency become quite stable after the value of D top reaches 5. This indicates that when feedback from the user is not available and  X  X seudo-relevance feedback X  has to be used, at least 5 top-ranked merged documents are required for the performan ce to be robust. The maximum number of recorded query clusters N max is also a factor that can affect the performance of our approach. The experimental results of using different N max values (omitted here due to space constraints) show that within the tested range of 10 to 200, when N max is smaller than 40, existing query clusters need to be constantly removed in order to make room for new clusters. The high turnover rate prohibits usef ul clusters that represent the user X  X  persistent interests from being formed and becoming stabilized. As a result, the percentage of the queries issued as characteristic queries is small and the search accuracy of these queries is low due to the low quality of clustering. Therefore, to avoid negatively affecting the eff ectiveness of query clustering, the constraint on the maximum number of recorded query clusters cannot be too tight. User modeling has mostly been studied for information filtering and Web retrieval to improve the system X  X  performance in delivering relevant documents. In this paper, we explore its use for a new task under a new type of environment. Specifically, we develop an approach to modeling user interests for improving the efficiency of full-text federated search in peer-to-peer networks without degrading its accuracy. By using past queries and ranked search results to model the user X  X  persistent interests and evaluate the performance of each directory service with regard to each interest, an information consumer is able to make effective interest-based initial directory service selection, which can significantly reduce the amount of query routing required. In our study, we find that our approach works effectively in an unsupervised manner without requi ring a large amount of training data, and it is robust to a range of parameter values. Compared with previous work on user modeling for information retrieval, our approach has seve ral distinctive characteristics. First, it explicitly distinguishes between queries that are closely related to the user X  X  persistent interests and queries that aren X  X , which allows different search strate gies to be applied to different kinds of queries. Second, by au tomatically creating new clusters to model new interests as they ar ise and constantly reassessing old ones, our approach tracks evolving user interests in a timely manner, and naturally captures not only long-term interests that span months and years, but also s hort-term interests that last for only several days. Third, in contrast to most of the previous research on user modeling that focuses on detailed user models for tasks such as filtering and collaborative search, our work shows that coarse user models, which can be learned from very small amounts of training data, can be useful for some retrieval tasks. This reminds us that different tasks may require user models of different granular ity, and the most appropriate approach to user modeling for a pa rticular task is not necessarily the one that generates the finest-g rained user models. 
