
Multi-word expressions (MWEs) constitute a large part of the lexicon and account for much of its growth (Jackendoff, 2002; Seaton and Macaulay, 2002). However, despite their impor-tance, MWEs remain difficult to define and model, and consequently pose serious difficulties for NLP applications (Sag et al., 2001). Multi-word Predi-cates (MWPs; sometimes termed Complex Predi-cates) form an important and much addressed sub-class of MWEs and are the focus of this paper.
MWPs are informally defined as multiple words that constitute a single predicate (Alsina et al., 1997). MWPs encompass a wide range of phe-nomena, including causatives, light verbs, phrasal verbs, serial verb constructions and many others, and pose considerable challenges to both linguistic theory and NLP applications (see Section 2). Part of the difficulty in treating them stems from their position on the borderline between syntax and the lexicon. It is therefore often unclear whether they should be treated as fixed expressions, as compo-sitional phrases that reflect the properties of their component parts or as both.

This work addresses the modelling of MWPs within the context of distributional semantics (Tur-ney and Pantel, 2010), in which predicates are represented through the distribution of arguments they may take. In order to collect meaningful statistics, the predicate X  X  lexical unit should be suf-ficiently frequent and semantically unambiguous.
MWPs pose a challenge to such models, as na  X   X vely collecting statistics over all instances of highly ambiguous verbs is likely to result in noisy representations. For instance, the verb  X  X ake X  may appear in MWPs as varied as  X  X ake time X ,  X  X ake effect X  and  X  X ake to the hills X . This heterogene-ity of  X  X ake X  is likely to have a negative effect on downstream systems that use its distributional rep-resentation. For instance, while  X  X ake X  and  X  X c-cept X  are often considered lexically similar, the high frequency in which  X  X ake X  participates in non-compositional MWPs is likely to push the two verbs X  distributional representations apart.
A straightforward approach to this problem is to represent the predicate as a conjunction of mul-tiple words, thereby trading ambiguity for spar-sity. For instance, the verb  X  X ake X  could be con-joined with its object (e.g.,  X  X ake care X ,  X  X ake a bus X ). This approach, however, raises the chal-lenge of identifying the sub-set of the predicate X  X  words that should be taken to represent it (hence-forth, its lexical components or LCs).

We propose a novel approach that addresses this challenge in the context of identifying lexical in-ference relations between predicates (Lin and Pan-tel, 2001; Schoenmackers et al., 2010; Melamud et al., 2013a, inter alia ). A (lexical) inference rela-tion p L  X  p R is said to hold if the relation denoted by p R generally holds between a set of arguments whenever the relation p L does. For instance, an in-ference relation holds between  X  X nnex X  and  X  X on-trol X  since if a country annexes another, it gener-ally controls it. Most works to this task use dis-tributional similarity, either as their main compo-nent (Szpektor and Dagan, 2008; Melamud et al., 2013b), or as part of a more comprehensive system (Berant et al., 2011; Lewis and Steedman, 2013).
For example, consider the verb  X  X ake X . While the inference relation  X  have  X  take  X  does not gen-erally hold, it does hold in the case of some light verbs, such as  X  have a look  X  take a look  X , under-scoring the importance of taking more inclusive LCs into account. On the other hand, the pred-icate  X  X ikely to give a green light X  is unlikely to appear often even within a very large corpus, and could benefit from taking its lexical sub-units (e.g.,  X  X ikely X  or  X  X ive a green light X ) into account.
We present a novel approach to the task that models the selection and relative weighting of the predicate X  X  LCs using latent variables. This ap-proach allows the classifier that uses the distri-butional representations to take into account the most relevant LCs in order to make the predic-tion. By doing so, we avoid the notoriously dif-ficult problem of defining and identifying MWPs and account for predicates of various sizes and de-grees of compositionality. To our knowledge, this is the first work to address lexical relations be-tween MWPs of varying degrees of composition-ality within distributional semantics.

We conduct experiments on the dataset of Ze-ichner et al. (2012) and compare our methods with analogous ones that select a fixed LC, using state-of-the-art feature sets. Our method obtains sub-stantial performance gains across all scenarios.
Finally, we note that our approach is cognitively appealing. Significant cognitive findings support the claim that a speaker X  X  lexicon consists of par-tially overlapping lexical units of various sizes, of which several can be evoked in the interpretation of an utterance (Jackendoff, 2002; Wray, 2008). Inference Relations. The detection of inference relations between predicates has become a central task over the past few years (Sekine, 2005; Zan-zotto et al., 2006; Schoenmackers et al., 2010; Berant et al., 2011; Melamud et al., 2013a, in-ter alia ). Inference rules are used in a wide va-riety of applications including Question Answer-ing (Ravichandran and Hovy, 2002), Information Extraction (Shinyama and Sekine, 2006), and as a main component in Textual Entailment systems (Dinu and Wang, 2009; Dagan et al., 2013).

Most approaches to the task used distributional similarity as a major component within their sys-tem. Lin and Pantel (2001) introduced DIRT, an unsupervised distributional system for detecting inference relations. The system is still considered a state-of-the-art baseline (Melamud et al., 2013a), and is often used as a component within larger sys-tems. Schoenmackers et al. (2010) presented an unsupervised system for learning inference rules directly from open-domain web data. Melamud et al. (2013a) used topic models to combine type-level predicate inference rules with token-level in-formation from their arguments in a specific con-text. Melamud et al. (2013b) used lexical expan-sion to improve the representation of infrequent predicates. Lewis and Steedman (2013) combined distributional and symbolic representations, eval-uating on a Question Answering task, as well as on a quantification-focused entailment dataset.
Several studies tackled the task using super-vised systems. Weisman et al. (2012) used a set of linguistically motivated features, but evaluated their system on a corpus that consists almost en-tirely of single-word predicates. Mirkin et al. (2006) presented a system for learning inference rules between nouns, using distributional similar-ity and pattern-based features. Hagiwara et al. (2009) identified synonyms using a supervised ap-proach relying on distributional and syntactic fea-tures. Berant et al. (2011) used distributional simi-larity between predicates to weight the edges of an entailment graph. By imposing global constraints on the structure of the graph, they obtained a more accurate set of inference rules.

Previous work used simple methods to select the predicate X  X  LC. Some filtered out frequent highly ambiguous verbs (Lewis and Steedman, 2013), others selected a single representative word (Melamud et al., 2013a), while yet others used multi-word LCs but treated them as fixed expres-sions (Lin and Pantel, 2001; Berant et al., 2011).
The goals of the above studies are largely com-plementary to ours. While previous work focused either on improving the quality of the distribu-tional representations themselves or on their incor-poration into more elaborate systems, we focus on the integration of the distributional representation of multiple LCs to improve the identification of inference relations between MWPs.
 MWP Extraction and Identification. MWPs have received considerable attention over the years in both theoretical and applicative contexts. Their position on the crossroads of syntax and the lexi-con, their varying degrees of compositionality, as well as the wealth of linguistic phenomena they exhibit, made them the object of ongoing linguis-tic discussion (Alsina et al., 1997; Butt, 2010). In NLP, the discovery and identification of MWEs in general and MWPs in particular has been the focus of much work over the years (Lin, 1999; Baldwin et al., 2003; Biemann and Giesbrecht, 2011). Despite wide interest, the field has yet to converge to a general and widely agreed-upon method for identifying MWPs. See (Ramisch et al., 2013) for an overview.

Most work on MWEs emphasized idiosyncratic or non-compositional expressions. Other lines of work focused on specific MWP classes such as light verbs (Tu and Roth, 2011; Vincze et al., 2013) and phrasal verbs (McCarthy et al., 2003; Pichotta and DeNero, 2013). Our work proposes a uniform treatment to MWPs of varying degrees of compositionality, and avoids defining MWPs ex-plicitly by modelling their LCs as latent variables. Compositional Distributional Semantics.
 Much work in recent years has concentrated on the relation between the distributional representa-tions of composite phrases and the representations of their component sub-parts (Widdows, 2008; Mitchell and Lapata, 2010; Baroni and Zampar-elli, 2010; Coecke et al., 2010). Several works have used compositional distributional semantics (CDS) representations to assess the composition-ality of MWEs, such as noun compounds (Reddy et al., 2011) or verb-noun combinations (Kiela and Clark, 2013). Despite significant advances, previous work has mostly been concerned with highly compositional cases and does not address the distributional representation of predicates of varying degrees of compositionality.
This section details our approach for distribu-tionally representing MWPs by leveraging their component LCs. Section 3.1 describes our gen-eral approach, Section 3.2 presents our model and Section 3.3 details the feature set. 3.1 General Approach and Notation We propose a method for addressing MWPs of varying degrees of compositionality through the integration of the distributional representation of multiple sub-sets of the predicate X  X  words (LCs). We use it to tackle a supervised prediction task that represents predicates distributionally. Our model assumes a latent distribution over the LCs, and es-timates its parameters so to best conform to the goals of the target prediction task.

Formally, given a predicate p , we denote the set of words comprising it as W ( p ) . The set of al-lowable LCs for p is denoted with H p  X  2 W ( p ) . H p contains all sub-sets of p that we consider as apriori possible to represent p . For instance, if p is  X  X ikely to give a green light X , H p may include LCs such as  X  X ikely X  or  X  X ive light X . As our method is aimed at discovering the most relevant LCs, we do not attempt to analyze the MWPs in advance, but rather take an inclusive H p , allowing the model to estimate the relative weights of the LCs.

The task we use as a testbed for our approach is the lexical inference identification task between predicates. Given a pair of predicates p = ( p
L ,p R ) , the task is to predict whether an infer-ence relation holds between them. For instance, if p
L is  X  X evour X  and p R is  X  X at greedily X , the clas-sifier should use the similarity between  X  X evour X  and  X  X at X  in order to correctly predict an infer-ence relation in this case. Selecting the wider LC  X  X at greedily X  might result in sparser statistics. In other examples, however, taking a wider LC is po-tentially beneficial. For instance, the dissimilar-ity between  X  X ake X  and  X  X ake X  should not prevent the classifier from identifying the inference rela-tion between  X  X ake a step X  and  X  X ake a step X .
Our statistical model aims at predicting the cor-rect label by making use of partially overlapping LCs of various sizes, both for the premise left-hand side (LHS) predicate p L and the hypothesis right-hand side (RHS) predicate p R . More for-mally, we take the space of values for our latent LC variables to be H p ( p number of examples available, coupled with their gold-standard labels y ( i )  X  { 1 ,  X  1 } . For brevity, sume the existence of a feature function  X ( p,y,h ) which maps a triplet of a predicate pair p , an infer-ence label y , and a latent state h  X  H p to R d for some integer d . We denote the training set by D . 3.2 The Model We address the task with a latent variable log-linear model, representing the LCs of the predi-cates. We choose this model for its generality, con-ceptual simplicity, and because it allows to easily incorporate various feature sets and sets of latent variables. We introduce L 2 regularization to avoid over-fitting. We use maximum likelihood estima-tion, and arrive at the following objective function: where:
We maximize L using the BFGS algorithm (No-cedal and Wright, 1999). The gradient (with re-spect to w ) is the following: given that taking an expectation over H can be done efficiently. It is therefore possible to use prior linguistic knowledge to consider only sub-sets of p that are likely to be non-compositional (e.g., verb-preposition or verb-noun pairs).

In our experiments we attempt to keep the ap-proach maximally general, and define H p to be the set of all subsets of size 1 or 2 of content words in W p 1 . We bound the size of h  X  H p in order to re-tain computational efficiency and a sufficient fre-quency of the LCs in H p . MWPs of length greater than 2 are effectively approximated by their set of subsets of sizes 1 and 2.

Each h can therefore be written as a 4-tuple denotes the (possibly empty) second word of the predicate. Inference is carried out by maximizing number of content words in p , and as the number Initialization. The introduction of latent vari-ables into the log-linear model leads to a non-convex objective function. Consequently, BFGS is not guaranteed to converge to the global opti-mum, but rather to a stationary point. The result may therefore depend on the parameter initializa-tion. Indeed, preliminary experiments showed that both initializing w to be zero and using a random initializer results in lower performance.

Instead, we initialize our model with a simpli-fied convex model that fixes the LCs to be the pair of left-most content words comprising each of the predicates. This is a common method for selecting the predicate X  X  LC (e.g., Melamud et al., 2013a). Once h has been fixed, the model col-lapses to a convex log-linear model. The optimal w is then taken as an initialization point for the la-tent variable model. While this method may still not converge to the global maximum, our experi-ments show that this initialization technique yields high quality values for w (see Section 6). 3.3 Feature Set This section lists the features used for our exper-iments. We intentionally select a feature set that relies on either completely unsupervised or shal-low processing tools that are available for a wide variety of languages and domains.

Given a predicate pair p ( i ) , a label y  X  { 1 ,  X  1 } R that contains triplets of the type ( p,x,y ) where p is a binary predicate and x and y are its argu-ments. We use the Reverb corpus as R in our ex-periments (Fader et al., 2011; see Section 4). We refrain from encoding features that directly reflect the vocabulary of the training set. Such features are not applicable beyond that set X  X  vocabulary, and as available datasets contain no more than a few thousand examples, these features are unlikely to generalize well.

Table 1 presents the set of features we use in our experiments. The features can be divided into two main categories: similarity features between the LHS and the RHS predicates (table X  X  top), and fea-tures that reflect the individual properties of each of them. Within the LHS feature set, we distin-guish between two sub-types of features: word features that encode the individual properties of features that only apply to LCs of size 2 and re-middle part). We further incorporate LDA-based features that reflect the selectional preferences of the predicates (table X  X  bottom).
 Distributional Similarity Features. The distri-butional similarity features are based on the DIRT system (Lin and Pantel, 2001). The score defines for each predicate p and for each argument slot s  X  X  L,R } (corresponding to the arguments to the right and left of that predicate) a vector v p s which represents the distribution of arguments appearing in that slot. We take v p s ( x ) to be the number of times that the argument x appeared in the slot s of the predicate p . Given these vectors, the similarity between the predicates p 1 and p 2 is defined as: where sim is some vector similarity measure.
We use two common similarity measures: the vector cosine metric, and the BInc (Szpektor and Dagan, 2008) similarity measure. These measures give complementary perspectives on the similar-ity between the predicates, as the cosine similar-ity is symmetric between the LHS and RHS predi-cates, while BInc takes into account the direction-ality of the inference relation. Preliminary exper-iments with other measures, such as those of Lin (1998) and Weeds and Weir (2003) did not yield additional improvements.

We encode the similarity of all measures for the pair h L and h R as well as the pair h A latter feature is an approximation to the similar-ity between the heads of the predicates, as heads in English tend to be to the left of the predicates. These two features coincide for h values of size 1. Word and Pair Features. These features en-code the basic properties of the LC. The motiva-tion behind them is to allow a more accurate lever-aging of the similarity features, as well as to better
The feature set is composed of four analogous as two sets of features that capture relations be-The features include the ordinal index of the word within the predicate, the lemma X  X  frequency ac-cording to R , and a feature that indicates whether that word X  X  lemma also appears in both predicates of the pair. For instance, when considering the predicates  X  X ikely to come X  and  X  X ikely to leave X ,  X  X ikely X  appears in both predicates, while  X  X ome X  and  X  X eave X  appear only in one of them.

In addition, we use POS-based features that encode the most frequent POS tag for the word lemma and the second most frequent POS tag (ac-cording to R ). Information about the second most frequent POS tag can be important in identifying light verb constructions, such as  X  X ake a swim X  or  X  X ive a smile X , where the object is derived from a verb. It can thus be interpreted as a generalization of the feature that indicates whether the object is a deverbal noun, which is used by some light verb identification algorithms (Tu and Roth, 2011).
In cases where h L is of size 2, we additionally encode features that apply to the conjunction of POS and the number of times the two lemmas oc-curred together in R . We also introduce features that capture the statistical correlation between the words of h L . To do so, we use point-wise mu-tual information, and the conditional probabili-ties P ( h A have often been used for the unsupervised detec-tion of MWEs (Villavicencio et al., 2007; Fazly and Stevenson, 2006). We also include the analo-gous set of features for h R .
 LDA-based Features. We further incorporate features based on a Latent Dirichlet Allocation (LDA) topic model (Blei et al., 2003). Several recent works have underscored the usefulness of using topic models to model a predicate X  X  selec-tional preferences (Ritter et al., 2010; Dinu and Lapata, 2010; S  X  eaghdha, 2010; Lewis and Steed-man, 2013; Melamud et al., 2013a). We adopt the approach of Lewis and Steedman (2013), and de-fine a pseudo-document for each LC in the evalu-ation corpus. We populate the pseudo-documents of an LC with its arguments according to R . We then train an LDA model with 25 topics over these documents. This yields a probability distribution P (topic | h ) for each LC h , reflecting the types of arguments h may take.

We further include a feature for the entropy of the topic distribution of the predicate, which re-flects its heterogeneity. This feature is motivated by the assumption that a heterogeneous predicate is more likely to benefit from selecting a more in-clusive LC than a homogeneous one.
 Technical Issues. All features used, except the similarity ones and the topic distribution features are binary. Frequency features are binned into 4 bins of equal frequency. We conjoin some of the feature sets by multiplying their values. Specifi-cally, we add the cross product of the features of the category  X  X imilarity X  (see Table 1) with the rest of the features. In addition, we conjoin all LHS (RHS) features with an indicator feature that indicates whether h L ( h R ) is of size two. This re-sults in 1605 non-constant features.

We further note that some LCs that appear in the evaluation corpus do not appear at all in R . In our experiments they amounted to 0.2% of the LCs in our evaluation dataset. While previous work of-ten discarded predicates below a certain frequency from the evaluation, we include them in order to facilitate comparison to future work. We assign the similarity features of such examples a 0 value, and assign their other numerical features the mean value of those features. Corpora and Preprocessing. As a reference corpus R , we use Reverb (Fader et al., 2011), a web-based corpus consisting of 15M web extrac-tions of binary relations. Each relation is a triplet of a predicate and two arguments, one preceding it and one following it. Relations were extracted us-ing regular expressions over the output of a POS tagger and an NP chunker. Each predicate may consist of a single verb, a verb and a preposi-tion or a sequence of words starting in a verb and ending in a preposition, between which there may nouns, adjectives, adverbs, pronouns, determiners and verbs. The verb may also be a copula. Exam-ples of predicates are  X  X ake the most of X ,  X  X ould be exchanged for X  and  X  X s happy with X .

Reverb is an appealing reference corpus for this task for several reasons. First, it uses fairly shal-low preprocessing technology which is available for many domains and languages. Second, Reverb applies considerable noise filtering, which results in extractions of fair quality. Third, our evaluation dataset is based on Reverb extractions.
 We evaluate our algorithm on the dataset of Zeichner et al. (2012). This publicly available and an indication of whether an inference rela-tion holds between them within the context of a specific pair of argument fillers. The corpus was compiled using distributional methods to de-tect pairs of relations in Reverb that are likely to have an inference relation between. Annota-tors, employed through Amazon Mechanical Turk, were then asked to determine whether each pair is meaningful, and if so, to determine whether an inference relation holds. Further measures were taken to monitor the accuracy of the annotation.
For example, the pair of predicates  X  X ake the most of X  and  X  X ake advantage of X  appears in the corpus as a pair between which an inference rela-tion holds. The arguments in this case are  X  X tu-dents X  and  X  X heir university experience X . An ex-ample of a pair between which an inference rela-tion does not hold is  X  X end to neglect X  and  X  X nder-estimate the importance of X , where the arguments are  X  X obert X  and  X  X is family X .
 The dataset contains 6,565 instances in total. We use 5,411 pairs of them, discarding instances that were deemed as meaningless by the annota-tors. We also discard cases where the set of ar-guments is reversed between the LHS and RHS predicates. In these examples, p R ( x,y ) is infer-able from p L ( y,x ) , rather than from p L ( x,y ) . As there are less than 150 reversed instances in the corpus, experimenting on this sub-set is unlikely to be informative.

The average length of a predicate in the cor-pus is 2.7 words (including function words). In 87.3% of the predicate pairs, there was more than one LC (i.e., | H p | &gt; 1 ), underscoring the im-portance of correctly leveraging the different LCs. We randomly partition the corpus into a training set which contains 4,343 instances (  X  80%), and a test set that contains 1,068 instances, maintaining the same positive to negative label ratio in both datasets 4 . Development was carried out using cross-validation on the training data (see below).
We use a Maximum Entropy POS Tagger, trained on the Penn Treebank, and the WordNet lemmatizer, both implemented within the NLTK package (Loper and Bird, 2002). To obtain a coarse-grained set of POS tags, we collapse the tag set to 7 categories: nouns, verbs, adjectives, adverbs, prepositions, the word  X  X o X  and a cate-gory that includes all other words. A Reverb argu-ment is represented as the conjunction of its con-tent words that appear more than 10 times in the corpus. Function words are defined according to their POS tags and include determiners, possessive pronouns, existential  X  X here X , numbers and coordi-nating conjunctions. Auxiliary verbs and copulas are also considered function words.

To compute the LDA features, we use the on-line variational Bayes algorithm of (Hoffman et al., 2010) as implemented in the Gensim software package (Rehurek and Sojka, 2010).
 Evaluated Algorithms. The only two previous works on this dataset (Melamud et al., 2013a; Melamud et al., 2013b) are not directly compara-ble, as they used unsupervised systems and evalu-ated on sub-sets of the evaluation dataset. Instead, we use several baselines to demonstrate the use-fulness of integrating multiple LCs, as well as the relative usefulness of our feature sets.

The simplest baseline is A LL N EG , which pre-dicts the most frequent label in the dataset (in our case:  X  X o inference X ). The other evaluated sys-tems are formed by taking various subsets of our feature set. We experiment with 4 feature sets. The smallest set, S IM , includes only the similarity fea-tures. This feature set is related to the composi-tional distributional model of Mitchell and Lap-ata (2010) (see Section 6). We note that despite recent advances in identifying predicate inference relations, the DIRT system (Lin and Pantel, 2001) remains a strong baseline, and is often used as a component in state-of-the-art systems (Berant et al., 2011), and specifically in the two aforemen-tioned works that used the same evaluation corpus.
The next feature set B ASIC includes the features found to be most useful during the development of the model: the most frequent POS tag, the fre-quency features and the feature Common . More inclusive is the feature set N O -LDA, which in-cludes all features except the LDA features. Ex-periments with this set were performed in order to isolate the effect of the LDA features. Finally, A LL includes our complete set of features.

The more direct comparison is against partial implementations of our system where the LC h is deterministically selected. Determining h for each predicate yields a regular log-linear binary classi-fication model. We use two variants of this base-line. The first, L EFT M OST , selects the left-most content word for each predicate. Similar selec-tion strategy was carried out by Melamud et al. (2013a). The second, VP REP , selects h to be the verb along with its following preposition. In cases the predicate contains multiple verbs, the one pre-ceding the preposition is selected, and where the predicate does not contain any non-copula verbs, it regresses to L EFT M OST . This LC selection method approximates a baseline that includes sub-categorized prepositions. Such cases are highly frequent and account for a large portion of the MWPs in English. Including a verb X  X  preposition in its LC was commonly done in previous work (e.g., Lewis and Steedman, 2013).

We also attempted to identify verb-preposition constructions using a dependency parser. Unfor-tunately, our evaluation dataset is only available in a lemmatized version, which posed a difficulty for the parser. Due to the low quality of the resulting parses, we implemented VP REP using POS-based regular expressions as defined above.

The full model is denoted with L ATENT LC. For each system and feature set, we report results us-ing 10-fold cross-validation on the training set, as well as results on the test set. Both cases use the same set of parameters determined by cross-validation on the training set. As the task at hand is a binary classification problem, we use accuracy scores to rate the performance of our systems.
Table 2 presents the results of our experi-ments. Rows correspond to the evaluated algo-rithms, while columns correspond to the feature sets used and the evaluation scenarios (i.e., train-ing set cross-validation or test set evaluation). Our experiments make first use of this dataset in its fullest form for the problem of supervised learning of inference relations, and may serve as a starting point for further exploration of this dataset.
For all feature sets and settings, L ATENT LC scored highest, often with a considerable margin of up to 3.0% in the cross-validation and up to 4.6% on the test set relative to the L EFT M OST baseline, and 5.1% (cross-validation) and 6.8% (test) margins relative to VP REP .

The best scoring result of our L ATENT LC model in the cross-validation scenario is 65.72%, obtained by the feature set All . The best scoring result by any of the baseline models in this sce-nario is 62.7%, obtained by the same feature set. For the test set scenario, L ATENT LC obtained its highest accuracy, 65.73%, when using the feature set Basic . This is a substantial improvement over the highest scoring baseline model in this scenario that obtained 61.6% accuracy, using the feature set All . This performance gap is substantial when tak-ing into consideration that the improvements ob-tained by the highly competitive DIRT similarity features using the stronger L EFT M OST baseline, result in an improvement of 3.1% and 5.3% over the trivial A LL N EG baseline in the test set and cross-validation scenarios respectively.

Comparing the different feature sets on our pro-posed model, we find that the Basic feature set gives a consistent and substantial increase over the Sim feature set. Improvements are of 2.8% (test) and 2.2% (cross-validation). Introducing more elaborate features (i.e., the feature sets NoLDA and All ) yields some improvements in the cross-validation, but these improvements are not repli-cated on the test set. This may be due to idiosyn-crasies in the test set that are averaged out in the cross-validation scenario.

For a qualitative analysis, we took the best per-forming model of the data set (i.e., with the Basic feature set), and extracted the set of instances where it made a correct prediction while both baselines made an error. This set contains many verb-preposition pairs, such as  X  X ist as  X  report as X  or  X  X ubmit via  X  deliver by X , underscoring the utility of leveraging multiple LCs rather than con-sidering only a head word (as with L EFT M OST ) or the entire phrase (as with VP REP ). Other ex-amples in this set contain more complex patterns. These include the positive pairs  X  X alk much about  X  have much to say about X  and  X  X ncrease with  X  go up with X , and the negative  X  X ake predic-tion about  X  meet the challenge of X  and  X  X njoy watching  X  love to play X . Relation to CDS. Much recent work subsumed under the title Compositional Distributional Se-mantics addressed the distributional representa-tion of multi-word phrases (see Section 2). This line of work focuses on compositional predicates, such as  X  X ick the ball X  and not on idiosyncratic predicates such as  X  X ick the bucket X .

A variant of the CDS approach can be framed within ours. Assume we wish to compute the similarity of the predicates p L = ( w 1 ,...,w n ) and p R = ( w 0 1 ,...,w 0 m ) . Let us denote the vec-tor space representations of the individual words as v 1 ,...,v n and v 0 1 ,...,v 0 m respectively. A stan-dard approach in CDS is to compose distributional representations by taking their vector sum v L = v 1 + v 2 ... + v n and v R = v 0 1 + ... + v 0 m (Mitchell and Lapata, 2010). One of the most effective sim-ilarity measures is the cosine similarity, which is a normalized dot product. The distributional sim-ilarity between p L and p R under this model is sim( p L ,p R ) = sim( w i ,w 0 j ) is the dot product between v i and v 0 j
This similarity score is similar in spirit to a simplified version of our statistical model that restricts the set of allowable LCs H p to be { ( { w i } , { w 0 j } ) | i  X  n,j  X  m } , i.e., only LCs of size 1. Indeed, taking H p as above, and cosine similarity as the only feature (i.e., w  X  R ), yields the distribution
This derivation highlights the relation of a sim-plified version of our approach to the additive CDS model, as both approaches effectively aver-age over the similarities of all pairs of words in p L and p R . The derivation also highlights a few ad-vantages of our approach. First, our approach al-lows to straightforwardly introduce additional fea-tures and to weight them in a way most consistent with the task at hand. Second, it allows much more flexibility in defining the set of allowable LCs, H p . Specifically, H p may contain LCs of sizes greater than 1. Third, our approach uses standard proba-bilistic modelling, and therefore has a natural sta-tistical interpretation.

In order to appreciate the effect of these advan-tages, we perform an experiment that takes H to be the set of all LCs of size 1, and uses a sin-gle similarity measure. We run a 10-fold cross-validation on our training data, obtaining 61.3% accuracy using COSINE and 62.2% accuracy us-ing BInc . The performance gap between these re-sults and the accuracy obtained by our full model (65.7%) underscores the latter X  X  effectiveness in integrating multiple features and LCs.
 Effectiveness of Optimization Method. Our maximization of the log-likelihood function is not guaranteed to converge to a global optimum. Therefore, the quality of the learned parameters may be sensitive to the initialization point. We hereby describe an experiment that tests the sen-sitivity of our approach to such variance.

Selecting the highest scoring feature set on our test set (i.e., B ASIC ), we ran the model with mul-tiple initializers, by randomly perturbing our stan-dard convex initializer (see Section 3). Concretely, given a convex initializer w , we select the starting point to be w +  X  , where  X  i  X  N (0 , X  | w i | ) . We ran this experiment 400 times with  X  = 0 . 8 .
To combine the resulting weight vectors into a single classifier, we apply two types of standard approaches: a Product of Experts (Hinton, 2002), as well as a voting approach that selects the most frequently predicted label. Neither of these exper-iments yielded any significant performance gain. This demonstrates the robustness of our optimiza-tion method to the initialization point.
We have presented a novel approach to the distributional representation of multi-word pred-icates. Since MWPs demonstrate varying levels of compositionality, a uniform treatment of MWPs either as fixed expressions or through head words is lacking. Instead, our approach integrates mul-tiple lexical units contained in the predicate. The approach takes into account both multi-word LCs that address low compositionality cases, as well as single-word LCs that address compositional cases and are more frequent. It assumes a latent distribu-tion over the LCs of the predicates, and estimates it relative to a target application task.

We addressed the supervised inference identi-fication task, obtaining substantial improvement over state-of-the-art baseline systems. In future work we intend to assess the benefit of this ap-proach in MWP classes that are well-known from the literature. We believe that a permissive ap-proach that integrates multiple analyses would perform better than standard single-analysis meth-ods in a wide range of applications.
 Acknowledgements. We would like to thank Mike Lewis, Reshef Meir, Oren Melamud, Michael Roth and Nathan Schneider for their help-ful comments. This work was supported by ERC Advanced Fellowship 249520 GRAMPLUS.
