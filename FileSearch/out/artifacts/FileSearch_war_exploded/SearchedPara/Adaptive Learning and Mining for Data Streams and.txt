 Advisors: Ricard Gavald`a and Jos  X e L. Balc  X azar Ph.D. Dissertation Committee: Joost Kok, Joao Gama, Minos Garofalakis, Christian Borgelt, and Lluis A. Belanche. This thesis is devoted to the design of data mining algo-rithms for evolving data streams and for the extraction of closed frequent trees. First, we deal with each of these tasks separately, and then we deal with them together, develop-ing classification methods for data streams containing items that are trees.
 In the data stream model, data arrive at high speed, and the algorithms that must process them have very strict con-straints of space and time. In the first part of this thesis we propose and illustrate a framework for developing al-gorithms that can adaptively learn from data streams that change over time. Our methods are based on using change detectors and estimator modules at the right places. We propose an adaptive sliding window algorithm ADWIN for de-tecting change and keeping updated statistics from a data stream, and use it as a black-box in place or counters or accumulators in algorithms initially not designed for drift-ing data. Since ADWIN has rigorous performance guarantees, this opens the possibility of extending such guarantees to learning and mining algorithms. We test our methodology with several learning methods as Na  X   X ve Bayes, clustering, decision trees and ensemble methods. We build an experi-mental framework for data stream mining with concept drift, based on the MOA framework, similar to WEKA, so that it will be easy for researchers to run experimental data stream benchmarks.
 Trees are connected acyclic graphs and they are studied as link-based structures in many cases. In the second part of this thesis, we describe a rather formal study of trees from the point of view of closure-based mining. Moreover, we present efficient algorithms for subtree testing and for min-ing ordered and unordered frequent closed trees. We include We have described a rather formal study of trees from the point of view of closure-based mining. Progressing beyond the plain standard support-based definition of a closed tree, we have developed a rationale (in the form of the study of the operation of intersection on trees, both in combinatorial and algorithmic terms) for defining a closure operator, not on trees but on sets of trees, and we have indicated the most natural definition for such an operator; we have provided a mathematical study that characterizes closed trees, defined through the plain support-based notion, in terms of our clo-sure operator, plus the guarantee that this structuring of closed trees gives us the ability to find the support of any frequent tree. Our study has provided us, therefore, with a better understanding of the closure operator that stands behind the standard support-based notion of closure, as well as basic algorithmics on the data type.
 Then, we have presented efficient algorithms for subtree test-ing and for mining ordered and unordered frequent closed trees. A number of variants have suggested themselves for further study: we have evaluated the behavior of our al-gorithms if we take into account labels, a case where our algorithm does not fare as well as in the unlabeled case. The sequential form of the representation we use, where the number-encoded depth furnishes the two-dimensional infor-mation, is key in the fast processing of the data.
 And finally, we include an analysis of the extraction of asso-ciation rules of full confidence out of the closed sets of trees, along the same lines as the corresponding process on item-sets, and we have found there an interesting phenomenon that does not appear if other combinatorial structures are analyzed: rules whose propositional counterpart is nontriv-ial are, however, always implicitly true in trees due to the peculiar combinatorics of the structures. That study is not yet finished since we have powerful heuristics to treat those implicit rules but wish to obtain a full mathematical char-acterization. Using the previous work done in evolving data streams min-ing and closed frequent tree mining, we have presented effi-cient algorithms for mining ordered and unordered frequent unlabeled closed trees on evolving data streams.
 If the distribution of the tree dataset is stationary, the best method to use is IncTreeNat , as we do not need to delete any past transaction. If the distribution may evolve, then
