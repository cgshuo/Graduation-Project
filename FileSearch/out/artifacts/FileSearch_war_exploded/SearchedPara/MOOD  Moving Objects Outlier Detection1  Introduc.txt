 Outlier detection is a fundamental problem in data mining. It has applications in many domains including credit card fraud detection, network intrusion de-tection, environment monit oring, medical sciences, m oving objects monitoring etc. Several definitions of outlier have been given in past, but there exists no universally agreed definition. Hawkins [1] defined an outlier as an observation that deviates so much from other observations as to arouse suspicion that it was generated by a different mechanism.

Recently, with the advancement in data co llection technologies, e.g., wireless sensor networks (WSN), data arrive continuously and contain certain degree of inherent uncertainty [2]. The causes of uncertainty may include but are not lim-ited to limitation of equipments, inconsistent supply voltage and delay or loss of data in transfer [2]. Detection of outliers from such data is a challenging re-search problem in data mining. Hence this paper describes and demonstrates the MOOD system, to detect ou tliers from moving objects X  streams, where the moving objects are uncertain and this uncertainty is given by the Gaussian dis-tribution. In addition, the MOOD system generates dynamic graphs comparing the efficiency and accuracy of the underlying algorithms.
 The problem of outlier detection on un certain datasets was first studied by Aggarwal et al. [3]. However, their work was given for static data and cannot han-dle moving objects data or data streams. In [4], Wang et al. proposed an outlier detection approach for probabilistic data streams. However, their work focuses on tuple-level uncertainty. In contrast, in this work, attribute level uncertainty is considered. This section describes th e distance-based outlier detection approach for moving objects X  data steams. In this paper, o i denotes a k -dimensional uncertain object with attributes vector with mean Namely, N ( time, S j = { the time t j . Hence streams are the sequences of mo ving objects X  states (locations) generated over time. We assume that the states of all the objects are generated synchronously and the set of states at a timestamp t j is called a state set S j as shown in table 1. We now present the definition of distance-based outliers for uncertain data streams, originally proposed in our previous work [6], as follows. Definition 1. An uncertain object o i is a distance-based outlier at time t j ,if the expected number of objects in S j lying within D -distance of o i are less than or equal to threshold  X  = N (1  X  p ) ,where p is the fraction of objects that lie farther than D -distance of o i  X  S j .

The straightforward approach to detect outliers from each state set is to use the cell-based approach of uncertain distance-based outlier detection (UDB) for every timestamp, presented in our previ ous work [5]. However, the duration be-tween two consecutive timestamps is usually very short and the state of all the objects may not change much in this duration. Hence, we proposed an incre-mental approach of outlier detection (denoted by CUDB in this work), which makes use of outlier detection resul ts obtained from previous state set S j  X  1 at timestamp t j  X  1 to detect outliers in current state set S j at timestamp t j [6]. This eliminates the need to process all the objects X  states at every timestamp and saves a lot of computation time. In the following, we present an overview of the MOOD system, its interface and functionalities and the underlying algorithms. 3.1 The MOOD System Interface The main interface of the MOOD system is shown in Fig. 1. The MOOD sys-tem accepts moving objects X  streams. In addition, the system takes as input some parameters, as shown in the top-left corner of the MOOD system interface in Fig. 1. These parameters are required by the underlying algorithms for the computation of continuous outliers.
 The MOOD system computes outliers for three algorithms. Namely UDB, CUDB and Knorr. In the MOOD system inte rface, the circles represent the objects at current timestamp while the s quares represent the objects in the pre-vious timestamp. The black bordered cir cles/squares represent the inliers. The red circles/squares represent the outliers identified by both the algorithms (i.e., CUDB and Knorr), while the pink and blue circles/squares represent the out-liers identified by only CUDB algorithm and only Knorr algorithm, respectively. Moreover, the movement of objects is represented by green arrows as can be seen from Fig. 1. 3.2 The Underlying Algorithms The UDB algorithm is proposed in our previous work [5] and can only detects distance-based outliers from uncertain static data. In order to make this algo-rithm work for continuous moving objects X  data or streaming data, the UDB algorithm is executed for every timesta mp. The CUDB is an incremental algo-rithm for distance-based out lier detection from uncerta in data streams, proposed in our work [6]. The CUDB makes use of outlier detection results obtained from previous state set S j  X  1 at timestamp t j  X  1 to detect outliers from current state at every timestamp and saves a lot of computation time. The graph on the top-right corner of the MOOD interface (see Fig. 1) shows the difference in execution times of the UDB and the CUDB algorithms for moving objects data streams.
The Knorr algorithm is proposed by E.M.Knorr et al. [7] for distance-based outlier detection from deter ministic static data. In the MOOD system, the Knorr outlier detection algorithm is used as a baseline to compare the accuracy of the CUDB algorithm. The graphs on the mid-right and the bottom-right of the MOOD interface (see Fig. 1) shows the comparison of precision and recall respectively. The precision is defined as the ability of the algorithms to present only true outliers. The recall is defined as the ability of the algorithms to present all true outliers. The precision and recall of the algorithms are measured on the perturbed dataset in the MOOD system. The perturbations are added to simulate the noise in moving objects X  data. The perturbed dataset is obtained by adding normal random numbers with zero mean and standard deviation 15 to each of the tuple values of the original dataset.
 Acknowledgements. This research was partly supported by the program  X  X e-search and Development on Real World Big Data Integration and Analysis X  of the Ministry of Education, Culture, Sports, Science and Technology, Japan.
