 In these years, a considerable number of studies have been made on the Seman-tic Web. Especially, construction of a huge scale ontology covering many named entities, domain-specific terms and relations among these concepts is demanded as an essential technology for various applications such as information retrieval. Most researches on ontology construction are divided into two categories; re-searches on constructing a task (or domain)-specific ontology, and researches on constructing an upper ontology. The former is primarily the development of tools which help users to build ontologies by hand according to the requirements of tasks. The latter is on constructing multi purpose (general) ontologies whose scope is the entire world. Most of the common upper ontologies, for example OpenCyc 1 and WordNet [8], define only general cencepts and formal relations such as is-a and a-part-of relationships. However, in order to fulfill the require-ments of various applications such as information retrieval, a large-scale ontology which defines named entities, domain-specific terms, and various relationships among these concepts is needed. Recently, Wikipedia, a large-scale Web-based encyclopedia, is used in a notable number of studies which automatically build ontologies covering named entities and domain-specific terms. This is because Wikipedia has a wide coverage of concepts and its potency has been demon-strated in those conventional studies. However, although these studies have in-sisted the coverage of concepts in Wikipe dia, they have rarely payed attention to the variety of relationships among concepts.

In this work, we aim at automatically constructing a large scale ontology by combining information from Wikipedia and the Web. In the construction of the ontology, we focus on the following two points.  X  the coverage of named entities and domain-specific terms  X  the variety of relations among concepts To achieve these points, we use Wikipedia Thesaurus [10], an association the-saurus which defines relatedness among concepts, to cover numerous named en-tities and domain-specific terms. This has advantages not only to cover large numbers of named entities and domain-specific terms, but also to refine concept pairs between which relationship should be defined. After finding strongly related concept pairs from Wikipedia Thesaurus, we use a Web search engine to extract a variety of relations. In this phase, how we create Web search queries is im-portant to filter Web pages which are suitable for relation extraction. Hence we add case particles (one of postpositions in Japanese, which have similar function to prepositions in English) to related concept pairs for generating Web search queries. Then we analyze the responses t o extract relation s among concepts. In the past, a considerable number of studies have been made for automatically constructing a large scale ontology. Recen tly, many researchers have payed at-tention on Wikipedia mining, a research area that is similar to Web mining but highly specialized for Wikipedia, to automatically construct a large scale ontol-ogy. Since Wikipedia is based on Wiki, anyone can edit and refine the articles by using a Web browser, that makes Wikipedia high quality and huge scale. As for the quality, according to the statistics of Nature [3], Wikipedia is almost as accurate in covering scientific topic s as the Encyclopedia Britannica. As for the scale, Wikipedia contains not onl y general concepts but also a large num-ber of named entities and domain-specific terms which belong to various kinds of categories such as culture, history, m athematics, science, society, and tech-nology. As of May 2010, the English version of Wikipedia contains more than 3.3 million articles, and the Japanese version contains more than 670 thousands articles. Moreover, Wikipedia has various advantages such as dense and multi-ple link structure, high-quality anchor texts, and concept identification by URL [11]. Because of these advantages, Wikipedia have become one of the most major corpora over the past several years.

DBpedia [1] and YAGO [13] are typical instances of constructing a large scale ontology by analyzing Wikipedia. DBpedia focuses on the infobox, a template to describe attributes on articles in Wikipedia, and simply translates it into RDF (Resource Description Framework) to construct a large scale multilingual ontology. YAGO also constructed a large scale ontology by using NLP (Natural Language Processing) techniques specialized for English grammar for mapping classes in WordNet [8] to categories in Wikipedia. Although these researches have insisted the coverage of concepts, t hey have rarely payed attention to the variety of relationships among concepts.

The case frame dictionary [5] is one of the dictionaries defining a variety of relations among terms. A case frame consists of nouns, case particles and a verb, e.g.  X  { employee } ga { car, truck, airplane } ni { package, commodity } wo tsumu (load) X . Case particle is one of postpositions in Japanese language and it has similar function to prepositions in English. Case frames are created by analyz-ing a large amount of documents and conducting clustering from co-occurrence data of nouns, case particles and verbs. Since the case frame dictionary defines relations among nouns by verbs and case particles, it can be regarded as a kind of ontology. However, the case frame dictionary covers few named entities and domain-specific terms because they o ccur not as often as general terms.
Though the purpose is different from constructing an ontology, Suhara et al. [14] proposed a relation extraction met hod which can extract a variety of rela-tions among named entities. This method extracts verb relations among related named entities by analyzing snippets in results of Web search in blogsphere and connecting the named entities centering on verb and case particle pairs. In addition, Suhara et al. mentioned that their method sometimes received many ir-relevant Web pages not suitable for extracting relations such as itemizations and lists. On the other hand, Ohshima et al. [12] proposed a method that efficiently makes a short list of Web pages suitable for relation extraction by adding a par-allel particle (one of postpositions in Japanese language) to Web search queries.
From these conventional studies, we can see that Wikipedia mining and Web mining are usable for relation extraction. However, few studies have paid atten-tion to both Wikipedia and the Web for relation extraction. In 2009, Yan et al. [15] used information on both Wikipedia and the Web to extract relations. Though they did not intend to construct an ontology, their method outperformed a relation extraction method using only the Web information. In this work, we propose a relation extraction method combining Wikipedia and the Web information.
 3.1 Extraction of Related Concept Pairs Our method first extracts strongly related concept pairs by utilizing Wikipedia Thesaurus. Wikipedia Thesaurus is a dictionary which defines relatedness among concepts in Wikipedia that we developed in our former research [10]. For exam-ple, the relatedness between  X  X Phone X  and  X  X Pod Touch X  is 0.016 (means high-relative pairs), and the one between  X  X Phone X  and  X  X lackBerry X  is 0.0053 (means medium-relative pairs). Though we can gain strongly related concept pairs by using Wikipedia Thesaurus, we cannot acqui re their relations. However, strongly related concept pairs are likely to have some relations. Additionally, it defines relatedness among named entities and domain-specific terms such as  X  X arry Potter X  and  X  X . K. Rowling, X   X  X ijkstra X  X  algorithm X  and  X  X dsger Dijkstra. X  For these reasons, we reached an assumption that Wikipedia Thesaurus can be used to extract relations among specialistic concept pairs which are not defined in existing ontologies. 3.2 Relation Extraction between Concepts by Web Search Our method uses Web search to find concrete relations after extracting related concept pairs. In this phase, a concept pair is given as an input, and relations be-tween concepts with the ranking accordin g to the importances are the output. An extracted relation consists of a verb and c ase particles. As described in section 2, case particles are postpositions in Japanese language, e.g. ga means nominative, ni means accusative, wo means dative and so on. The importance is calculated based on the frequency on the Web and the reliability as a synonym. For ex-ample, if a concept pair  X  X asayoshi Son X  and  X  X oftBank X  is given as input, the output may be as  X  X asayoshi Son ga SoftBank wo sougyousuru  X  (Masayoshi Son establishs SoftBank) and  X  X asayoshi Son ga SoftBank wo keieisuru  X  (Masayoshi Son manages SoftBank) ordered by their importances. Our method adds case particles to concept pairs to generate Web search queries. Then it extracts sen-tences from top responses in the Web search results, and applies morphological analysis and dependency parsing to them to extract verbs as their relations. We describe the detail on each process in the following clauses.
 Acquisition of Synonyms and Reliability of Concepts. In NLP-based relation extraction, the problem of identifying concepts in texts is inevitable. For instance, the concept of a company  X  X pple Inc. X  has many representations (synonyms) like Apple Inc. , Apple Computer ,andjust Apple . We should fig-ure out these synonyms in order to extract relations with high coverage from texts. Whereat, we utilize anchor texts linked to concepts in Wikipedia as their synonyms [9]. In Wikipedia, since the text part of a link (anchor text) is a sum-mary of the linked page in most cases, we can extract synonym candidates by analyzing the anchor texts of a Web page.

Given a list of anchor texts L c linked to the concept (page) c ,thenumberof following equation. Reliability R c ( l i ) indicates how suitable an anchor text l i is as a synonym of the concept c . If the max number of occurrences max( M c ( l k )) is 0 or 1, we just use the name of the URL assigned to the concept page as a sole synonym. Reliability R c ( l i ) is used for calculating importance I , as described later. Additionally, we adopt the synonym with the highest reliability among R c as the label of the concept. This label is used for generating Web search queries as described in the next clause. Generation of Web Search Queries with Case Particles. Our method gen-erates Web search queries from related c oncept pairs extracted from Wikipedia Thesaurus. Moreover, it adds case part icles after each concept in queries. A query with case particles filters search results which are suitable for extracting relations. Suhara et al. [14] does not add case particle to queries, which makes search results noisy. For example, for the concept pair  X  X asayoshi Son X  and  X  X oftBank X , case particles ga and wo are added after each concept to generate a query  X  X asayoshi Son ga  X   X  X oftBank wo  X . As the result, the search engine re-turns a set of Web pages definitely including  X  X asayoshi Son ga  X  and  X  X oftBank wo  X . These pages tend to include not itemizations or lists but normal texts. Con-sequently, these pages include more verbs than that gained by a simple query  X  X asayoshi Son X   X  X oftBank X .

In particular, as shown in Fig. 1, Web search queries are generated for each com-bination of case particles. Then, sets of responses are gained by these queries. We acquire top N Web pages and the number of all hit counts H for each query. The number of all hit counts H is used for calculating importance I , as described later. Relation Extraction by Analyzing Responses. After acquiring top N Web pages for each query, our method divides them into each sentence according to delimiters such as period and line feed. The n it extracts sentences which include the concept pair with case particles. To i dentify whether the concept is included in a sentence or not, we use synonyms described above.
 It applies dependency parsing by CaboCha [6] and morphological analysis by MeCab [7] to the sentences which include the concept pair with case particles (Fig. 2). As a result, it can gain verbs that has a modification relation with the concept pair.

For given variables including an extracted verb v , a concept pair ( c 1 , c 2 ), case particles following each concept ( p 1 , p 2 ), it calculates the number of occurrences F ( c 1 ,p 1 ,c 2 ,p 2 ,v ) for each relation as follows.
 Here, L c 1 and L c 2 respectively denotes all the synonyms for concepts c 1 and c . S ( l 1 ,p 1 ,l 2 ,p 2 ,v ) denotes the number of occurrences for a sentence includ-ing synonyms l 1 and l 2 , case particles p 1 and p 2 ,andverb v .Itcalculates a weighted number of occurrences by reliability R determined for each syn-onym as mentioned above. After analyzing all sentences, it calculates the im-portance I ( c 1 ,p 1 ,c 2 ,p 2 ,v ) for each relation from the number of occurrences F ( c 1 ,p 1 ,c 2 ,p 2 ,v ).
 H ( c 1 ,p 1 ,c 2 ,p 2 ) denotes the all hit count in We b search by a query consisting of a concept pair ( c 1 , c 2 ) followed respectively by case particles p 1 and p 2 . N denotes the max number of Web pages which should be analyzed. When the hit count H ( c 1 ,p 1 ,c 2 ,p 2 ) is larger than N , the equation (3) speculates how many the relation exists on the Web. Importance I is used for ranking extracted relations. We conducted an experiment to evaluate our proposed relation extraction method. To verify the effectiveness of adding case particles to Web search queries, we com-pared our method with a method without case particles. In addition, we looked into the extracted relations whether th ey are unlikely to be defined in existing ontologies. 4.1 Experimental Environment We evaluated the relations among related concepts extracted by each method by hand. In particular, we randomly selected 306 named entity pairs from Wikipedia Thesaurus and generated 20 combinations of Web search queries with case par-ticles (postpositions) ha , ga , wo , ni ,and de . In this evaluation, we gained 50 Web pages for only top 5 combinations of case partices according to the hit count H . Then we judged top 5 relation s according to the importance I into three groups: the correct group X , the partially correct group Y and the wrong group Z .The criteria of the judgment were as follows; if a relation is apparently understand-able then it is correct , if a relation is understandable with some supplementary information or it is sometimes corr ect and sometimes wrong then it is partialy correct , and the others are wrong . Moreover, we judged uncertain rumors into the correct relation group.

We adopted the following three metrics used in the study [14] to evaluate how extracted relations were appropriate. 1. Accuracy of the highest rank 2. Mean Reciprocal Rank (MRR) 3. Discounted Cumulative Gain (DCG) We distinguished the case regarding partially correct relations as correct and the case regarding them as wrong. For DCG, we calculated the score for two cases: from 1st to 5th and from 1st to 3rd. 4.2 Experimental Results Table 1 shows the experimental results. First of all, the proposed method ex-tracted relations for 101 pairs while the compared method extracted relations only for 49 pairs. This simply means that the proposed method could extract relations twice larger than by the compared method. In addition, while the com-pared method extracted 1. 60 relations per concept p air, the proposed method extracted 2.60 relations per concept pair. That is, the proposed method (which added case particles to Web search queries) could extract not only relations for more concept pairs but also more relati ons per concept pair than the compared method (which did not add case particles to Web search queries).

As for the accuracy of the highest rank and MRR, the proposed method shows slightly lower score than the compared method. However, if the partially correct relations are not regarded as correct, the proposed method shows as almost same score as the compared method. Moreover, in terms of DCG, the proposed method shows higher scores than the compared method. This is because DCG is affected by all extracted relations and based on a point-addition scoring system. Briefly, a method which can extract more correct relations achieves higher DCG. Thus we see the proposed method could extract more correct relations than the compared method with almost same precision. 4.3 Extracted Relations Table 2 shows an example of extracted relations by the proposed method. This represents the first-ranked relations f or each concept pair. Looking at Table 2, a variety of relations which are unlikely to be defined in existing ontologies are extracted; relations of consciousness such as  X  X chubert ha Beethoven wo sonkei (respect) X , and relations between an actor and the role such as  X  X iroshi Fujioka ga Kamen Rider ni henshin (disguise) X . Moreover, in relations such as  X  X ro Wrestling Noah wo Mitsuharu Misawa ga hataage (launch on an enterprise) X  and  X  X yoto Sangyo University ni Kyoto Seian High School wo ikan (place under the control of another department) X , the most appropriate verb is extracted among various similar verbs. What X  X  interesting is that the fact that Shingo Katori was absent from the idol group SMAP due to the flu at the beginning of January 2010 could be extracted as a relation at the end of January 2010. Relations abount new topics and news t end to be extracted more prior than steady relations. These relations are b eneficial because exi sting ontologies do not possess these information. The relation  X  X EWS wo Tomohisa Yamashita ga dattai (drop out) X  is not a fact but just a rumor on January 2010. Considering applications on the Web, these relations can be also beneficial. In this paper, we proposed a relation extraction method to construct a large scale ontology which has a wide coverage of concepts as well as a variety of relation-ships by combining information on both Wikipedia and the Web. In particular, our method utilizes Wikipedia Thesaurus [10] for discovering strongly related concept pairs and generates Web search queries wit h case particles. Then it analyzes texts in the Web search results to extract relati ons between the related concept pairs.
From the result of the evaluation, we confirmed the effectiveness of adding case particles to Web search queries. It coul d extract correct rela tions twice larger than the compared method, which did not add case particles, with almost same precision. In addition, our method could extract a variety of relations which were not defined in existing ontologies. That is, our method is efficient to construct a large scale ontology which has a variety of relations.
 In our future work, we plan to construct a large scale ontology by our method. Constructing and releasing a large scale ontology is important for the advance-ment of many research areas that use ontologies. For example, researchers who are engaged in ontology construction may construct a more superior ontology based on it. Engineers who are engaged in research and development of applica-tions based on ontologies may develop useful services by using it.
 This research was supported in part by Grant-in-Aid for Scientific Research (B)(21300032), Grant-in-Aid for Scientific Research (C)(20500093), Grant-in-Aid for the Global COE Program (J101413001) and the Microsoft Research IJARC Core Project.

