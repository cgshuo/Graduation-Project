 We address the problem of prediction in graphical models that are computationally challenging be-cause of both high-treewidth and large state-spaces. A primary example where intractable, large state-space models typically arise is in dynamic state estimation problems, including tracking ar-degrees-of-freedom (state variables) and fine-level resolution at which states need to be estimated. Another typical example arises in pixel-labeling problems where the model topology is typically a 2D grid and the number of classes is large [3]. In this work, we propose a novel, principled frame-work called Structured Ensemble Cascades for handling state complexity while learning complex models, extending our previous work on structured cascades for low-treewidth models [4]. The basic idea of structured cascades is to learn a sequence of coarse-to-fine models that are op-timized to safely filter and refine the structured output state space, speeding up both learning and inference. While we previously assumed (sparse) exact inference is possible throughout the cas-cade [4], in this work, we apply and extend the structured cascade framework to intractable high-treewidth models. To avoid intractable inference, we decompose the desired model into an ensemble of tractable sub-models for each level of the cascade. For example, in the problem of tracking ar-ticulated human pose, each sub-model includes temporal dependency for a single body joint only. Figure 1: (a) Schematic overview of structured ensemble cascades. The m  X  X h level of the cascade takes as To maintain efficiency, inference in the sub-models of the ensemble is uncoupled (unlike in dual decomposition [5]), but the decision to filter states depends on the sum of the max-marginals of the constituent models (see Figure 1). We derive a convex loss function for joint estimation of sub-models in each ensemble, which provably balances accuracy and efficiency, and we propose a simple stochastic subgradient algorithm for training.
 The novel contributions of this work are as follows. First, we provide a principled and practical gen-eralization of structured cascades to intractable models. Second, we present generalization bounds on the performance of the ensemble. Third, we introduce a challenging VideoPose dataset, culled from TV videos, for evaluating pose estimation and tracking. Finally, we present an evaluation of our approach on synthetic data and the VideoPose dataset. We find that our joint training of an ensemble method outperforms several competing baselines on this difficult tracking problem. Given an input space X , output space Y , and a training set { x 1 ,y 1 ,...,  X  x n ,y n  X  X  of n samples from a joint distribution D ( X,Y ) , the standard supervised learning task is to learn a hypothesis h : X 7 X  Y that minimizes the expected loss E D [ L ( h ( x ) ,y )] for some non-negative loss function L : Y X Y  X  R + . In structured prediction problems , Y is a ` -vector of variables and Y = Y 1  X  X  X  X  X  Y , and Y i = { 1 ,...,K } . In many settings, the number of random variables, ` , differs depending on input X , but for simplicity of notation, we assume a fixed ` here. The linear hypothesis class we is the inner product of a vector of parameters  X  and a feature function f : X  X Y 7 X  R d mapping ( x,y ) pairs to a set of d real-valued features. We further assume that f decomposes over a set of cliques C over inputs and outputs, so that  X  ( x,y ) = to the subset of Y variables in the clique c and we will use Y c to refer to the set of all assignments to the clique. By considering different cliques over X and Y , f can represent arbitrary interactions between the components of x and y . Evaluating h ( x ) is tractable for low-treewidth (hyper)graphs but is NP-hard in general, and typically, approximate inference is used when features are not low-treewidth.
 In our prior work [4], we introduced the framework of Structured Prediction Cascades (SPC) to handle problems with low-treewidth T but large node state-space K , which makes complexity of O ( K T ) prohibitive. For example, for a 5-th order linear chain model for handwriting recognition or part-of-speech tagging, K is about 50 , and exact inference is on the order 50 6  X  15 billion times the length the sequence. In tree-structured models we have used for for human pose estimation [6], typical K for each part includes image location and orientation and is on the order of 250 , 000 , so even K 2 in pairwise potentials is prohibitive. Rather than learning a single monolithic model, a structured cascade is a coarse-to-fine sequence of increasingly complex models, where model com-plexity scales with Markov order in sequence models or spatial/angular resolution in pose models, for example. The goal of each model is to filter out a large subset of assignments without eliminating the correct one, so that the next level only has to consider a much reduced state-space. The filtering process is feed-forward, and each stage uses inference to compute max-marginals which are used to eliminate low-scoring node or clique assignments. The parameters of each model in the cascade are learned using a loss function which balances accuracy (not eliminating correct assignment) and efficiency (eliminating as many other assignments as possible).
 More precisely, for each clique assignment y c , there is a max marginal  X  ? ( x,y c ) , defined as the maximum score of any output y that contains the clique assignment y c : For simplicitly, we will examine the case where the cliques that we filter are defined only over single variables: y c = y j (although the model may also contain larger cliques). Clique assignments are the set of possible states for the j  X  X h variable. The threshold proposed in [4] is a  X  X ax mean-max X  function, Filtering max marginals in this fashion can be learned because of the  X  X afe filtering X  property: en-consistent with the true answer y i will be filtered. Thus, for fixed  X  , [4] proposed learning parame-ters  X  to maximize the margin  X  ( x i ,y i )  X  t ( x i , X  ) and therefore minimize filtering errors: Above,  X  i are slack variables for the margin constraints, and ` i is the size of the i  X  X h example. In this work, we tackle the problem of learning a structured cascade for problems in which inference is intractable , but in which the large node state-space has a natural hierarchy that can be exploited. For example, such hierarchies arise in pose estimation by discretizing the articulation of joints at multiple resolutions, or in image segmentation due to the semantic relationship between class labels (e.g.,  X  X rass X  and  X  X ree X  can be grouped as  X  X lants, X   X  X orse X  and  X  X ow X  can be grouped as  X  X nimal. X ) Although the methods discussed in this section can be applied to more general intractable settings, and our prior work considered more general cascades that operate on graph cliques, we will assume for simplicitly that the structured cascades operate in a  X  X ode-centric X  coarse-to-fine manner as fol-lows. For each variable y j in the model, each level of the cascade filters a current set of possible states Y j , and any surviving states are passed forward to the next level of the cascade by substituting each state with its set of descendents in the hierarchy. Thus, in the pose estimation problem, surviv-ing states are subdivided into multiple finer-resolution states; in the image segmentation problem, broader object classes are split into their constituent classes for the next level. We propose a novel method for learning structured cascades when inference is intractable due to loops in the graphical structure. The key idea of our approach is to decompose the loopy model into a collection of equivalent tractable sub-models for which inference is tractable. What distinguishes our approach from other decomposition based methods (e.g., [5, 7]) is that, because the cascade X  X  objective is filtering and not decoding, our approach does not require enforcing the constraint that the sub-models agree on which output has maximum score. We call our approach structured ensemble cascades . 3.1 Decomposition without agreement constraints Given a loopy (intractable) graphical model, it is always possible to express the score of a given output  X  ( x,y ) as the sum of P scores  X  p ( x,y ) under sub-models that collectively cover every edge in the loopy model:  X  ( x,y ) = experiments presented in this paper.) For example, in the method of dual decomposition [5], it is possible to solve a relaxed MAP problem in the (intractable) full model by running inference in the (tractable) sub-models under the constraint that all sub-models agree on the argmax solution. Enforcing this constraint requires iteratively re-weighting unary potentials of the sub-models and repeatedly re-running inference until each sub-model convergences to the same argmax solution. However, for the purposes of a structured cascade, we are only interested in computing the max marginals  X  ? ( x,y j ) . In other words, we are only interested in knowing whether or not a configu-ration y consistent with y j that scores highly in each sub-model  X  p ( x,y ) exists. We show in the remainder of this section that the requirement that a single y consistent with y j optimizes the score of each submodel (i.e, that all sub-models agree ) is not necessary for the purposes of filtering. Thus, because we do not have to enforce agreement between sub-models, we can learn a structured cas-cade for intractable models, but pay only a linear (factor of P ) increase in inference time over the tractable sub-models.
 Formally, we define a single level of the ensemble cascade as a set of P models such that  X  ( x,y ) = P p  X  p ( x,y ) . We let  X  p ( x,  X  ) ,  X  and threshold of the p  X  X h model, respectively. We define the argmax marginal or witness y ? p ( x,y j ) to be the maximizing complete assignment of the corresponding max marginal  X  ? p ( x,y j ) . Then, if y = y ? p ( x,y j ) is the same for each of the p  X  X h submodels, we have that P useful and sufficient for filtering in a structured cascade. 3.2 Safe filtering and generalization error We first show that if a given label y has a high score in the full model, it must also have a large ensemble max marginal score, even if the sub-models do not agree on the argmax. This results in a  X  X afe filtering X  lemma similar to that given in [4], as follows: Lemma 1 (Joint Safe Filtering) . If Proof. In English, this lemma states that if the global score is above a given threshold, then the sum of sub-model max-marginals is also above threshold (with no agreement constraint). The P Therefore, we see that an agreement constraint is not necessary in order to filter safely: if we ensure that the combined score making a mistake if we compute max marginals by running inference separately for each sub-model. However, there is still potentially a price to pay for disagreement. If the sub-models do not agree, and the truth is not above threshold, then the threshold may filter all of the states for a given variable y j and therefore  X  X reak X  the cascade. This results from the fact that without agreement, there is no single argmax output y ? that is always above threshold for any  X  ; therefore, it is not guaranteed that there exists an output y to satisfy the Joint Safe Filtering Lemma. However, we note that in our experiments, we never experienced such breakdown of the cascades due to overly aggressive filtering.
 filtering loss , which we define for any fixed  X  as follows, where  X  = {  X  1 ,..., X  P } is the set of all parameters of the ensemble. (Note that this loss function is somewhat conservative because it measures whether or not a sufficient but not necessary condition for a filtering error has occured.) To conclude this section, we provide a generalization bound on the ensemble filtering loss, equiva-lent to the bounds in [4] for the single-model cascades. To do so, we first eliminate the dependence according to each sub-model. Let the vector  X  x  X  R mP denote these scores, where m is the number of possible state assignments in the sub-models.
 Theorem 1. For any fixed  X   X  [0 , 1) , define the dominating cost function  X  ( y, X  x ) = r (1 /P where  X  E is the empirical expectation with respect to training data.
 The proof is given in the supplemental materials. 3.3 Parameter estimation with gradient descent In this section we now discuss how to minimize the loss (5) given a dataset. We rephrase the SC optimization problem (3) using the ensemble max-marginals to form the ensemble cascade learning problem, Seeing that the constraints can be ordered to show  X  i  X  can form an equivalent unconstrained minimization problem and take the subgradient of (7) with respect to each parameter  X  p . This yields the following update rule for the p  X  X h model: This update is identical to the original SC update with the exception that we update each model individually only when the ensemble has made a mistake jointly . Thus, learning to filter with the ensemble requires only P times as many resources as learning to filter with any of the models individually. We evaluated structured ensemble cascades in two experiments. First, we analyzed the  X  X est-case X  filtering performance of the summed max-marginal approximation to the true marginals on a syn-thetic image segmentation task, assuming the true scoring function  X  ( x,y ) is available for inference. Second, we evaluated the real-world accuracy of our approach on a difficult, real-world human pose dataset (VideoPose). In both experiments, the max-marginal ensemble outperforms state-of-the-art baselines. 4.1 Asymptotic Filtering Accuracy We first evaluated the filtering accuracy of the max-marginal ensemble on a synthetic 8-class seg-mentation task. For this experiment, we removed variability due to parameter estimation and focused our analysis on accuracy of inference. We compared our approach to Loopy Belief Propagation (Loopy BP) [8], a state-of-the-art method for approximate inference, on a 11  X  11 two-dimensional grid MRF.  X  For the ensemble, we used 22 unique  X  X omb X  tree structures to approximate the full grid model (i.e. Figure 2(a)). To generate a synthetic instance, we generated unary potentials  X  i ( k ) uni-formly on [0 , 1] and pairwise potentials log-uniformly:  X  ij ( k,k 0 ) = exp  X  v , where v  X  X  [  X  25 , 25] was sampled independently for every edge and every pair of classes. (Note that for the ensemble, we normalized unary and edge potentials by dividing by the number of times that each potential was included in any model.) It is well known that inference for such grid MRFs is extremely difficult [8], and we observed that Loopy BP failed to converge for at least a few variables on most examples we generated.
 Ensemble outperforms Loopy BP. We evaluted our approach on 100 synthetic grid MRF in-stances. For each instance, we computed the accuracy of filtering using marginals from Loopy BP, the ensemble, and each individual sub-model. We determined error rates by counting the number of times  X  X round truth X  was incorrectly filtered if the top K states were kept for each variable, where we sampled 1000  X  X round truth X  examples from the true joint distribution using Gibbs sampling. To obtain a good estimate of the true marginals, we restarted the chain for each sample and allowed 1000 iterations of mixing time. The result is presented in Figure 2(b) for all possible values of K (filter aggressiveness.) We found that the ensemble outperformed Loopy BP and the individual sub-models by a significant margin for all K .
 Effect of sub-model agreement. We next investigated the question of whether or not the ensem-bles were most accurate on variables for which the sub-models tended to agree. For each variable y ij in each instance, we computed the mean pairwise Spearman correlation between the ranking of the 8 classes induced by the max marginals of each of the 22 sub-models. We found that complete agreement between all sub-models never occured (the median correlation was 0.38). We found that sub-model agreement was significantly correlated ( p &lt; 10  X  15 ) with the error of the ensemble for all values of K , peaking at  X  =  X  0 . 143 at K = 5 . Thus, increased agreement predicted a decrease in error of the ensemble. We then asked the question: Does the effect of model agreement explain the improvement of the ensemble over Loopy BP? In fact, the improvement in error compared to Loopy BP was not correlated with sub-model agreement for any K (maximum  X  = 0 . 0185 , p &lt; 0 . 05 ). Thus, sub-model agreement does not explain the improvement over Loopy BP, indicating that sub-model disagreement is not related to the difficulty in inference problems that causes Loopy BP to underperform relative to the ensembles (e.g., due to convergence failure.) 4.2 The VideoPose Dataset Our dataset consists of 34 video clips of approximately 50 frames each. The clips were harvested from three popular TV shows: 3 from Buffy the Vampire Slayer , 27 from Friends , and 4 from LOST . Clips were chosen to highlight a variety of situations and and movements when the camera is largely focused on a single actor. In our experiments, we use the Buffy and half of the Friends clips as training (17 clips), and the remaining Friends and LOST clips for testing. In total we test on 901 individual frames. The Friends are split so no clips from the same episode are used for both training and testing. We further set aside 4 of the Friends test clips to use as a development set. Each frame of each clip is hand-annotated with locations of joints of a full pose model: torso, upper/lower arms for both right and left, and top and bottom of head. For each joint, a binary tag indicating whether or not the joint is occluded is also included, to be used in future research.  X  For simplicity, we use only the torso and upper arm annotations in this work, as these have the strongest continuity across frames and strong geometric relationships.
 Articulated pose model. All of the models we evaluated on this dataset share the same basic structure: a variable for each limb X  X  ( x,y ) location and angle rotation (torso, left arm, and right arm) with edges between torso and arms to model pose geometry. We refer to this basic model, evaluated independently on each frame, as the  X  X ingle Frame X  approach. For the VideoPose dataset, we aug-mented this model by adding edges between limb states in adjacent frames (Figure 1), forming an intractable, loopy model. Features: Our features in a single frame are the same as in the beginning levels of the pictorial structure cascade from [6]: unary features are discretized Histogram of Gra-dient part detectors scores, and pairwise terms measure relative displacement in location and angle between neighboring parts. Pairwise features connecting limbs across time also express geometric displacement, allowing our model to capture the fact that human limbs move smoothly over time. Coarse-to-Fine Ensemble Cascade. We learned a coarse-to-fine structured cascade with six lev-els for tracking as follows. The six levels use increasingly finer state spaces for joint locations, discretized into bins of resolution 10  X  10 up to 80  X  80 , with each stage doubling one of the state space dimensions in the refinement step. All levels use an angular discretization of 24 bins. For the ensemble cascade, we learned three sub-models simultaneously (Figure 1), with each sub-model accounting for temporal consistency for a different limb by adding edges connecting the same limb in consecutive frames.
 Experimental Comparison. A summary of results are presented in Figure 3. We compared the single-frame cascade and the ensemble cascade to a state-of-the-art single-frame pose detector (Fer-rari et al. [9]) and to one of the individual sub-models, modeling torso consistency only ( X  X orso Only X ). We evaluated the method from [9] on only the first half of the test data due to computation time (taking approximately 7 minutes/frame). We found that the ensemble cascade was the most accurate for every joint in the model, that all cascades outperformed the state-of-the-art baseline, and, interestingly, that the single-frame cascade outperformed the torso-only cascade. We suspect that the poor performance of the torso-only model may arise because propagating only torso states through time leads to an over-reliance on the relatively weak torso signal to determine the location of all the limbs. Sample qualitative output from the ensemble is presented in Figure 4. Related Work. Tracking with articulated body parts is challenging for two main reasons. First, body parts are hard to detect in unconstrained environments due to the enormous variability in appearance (from lighting, clothing and articulation) and occlusion. Second, the huge number of degrees of freedom makes exact modeling of the problem computationally prohibitive. In light of these two issues, many works focus on fixed-camera environments (e.g., [10, 11, 12]), some even assuming sillhouettes can be obtained (e.g., [2]), or 3d information from multiple sensors ([13]). In choices of modeling, past works reduce the large state space degrees of freedom by only modeling location and scale, or resorting to sampling methods ([1, 14], or embedding into low-dimensional latent spaces [10]. In contrast, in this work we learn to efficiently navigate an unconstrained state space in the challenging setting of a single, non-fixed camera.
 We adopt the same basic modeling structure as [15, 9, 16] in our work, but also model dependencies through time. We also take a discriminative approach to training rather than generative. Ferrari et al. [9] use loopy belief propagation to incorporate temporal consistency of parts, but to our knowl-edge we are the first to quantitatively evaluate on movie/TV show sequences.
 In the method of dual decomposition [5], efficient optimization of a LP relaxation of MAP inference in an intractable model is achieved by coupling the inference of a collection of tractable sub-models. This coupling is achieved by repeatedly performing inference and updating a set of dual parameters until convegence. In contrast, we perform inference independently in each sub-model only once , and reason about individual variables using the sums of max-marginals.
 Future Research. Several key questions remain as future directions of research. Although we presented generalization bounds for the error of the cascade, such bounds are purely  X  X ost-hoc. X  We are currently investigating a priori properties of or assumptions about the data and cascade that will provably lead to efficient cascaded learning and inference. In the future, our approach on the VideoPose dataset could be easily extended to model more limbs, additionally complex features in time and geometry (e.g. [6]), and additional states such as occlusions. Successfully solving this problem is necessary in order to understand the context and consequences of interactions between actors in video; e.g., to be able to follow a pointing arm or to observe the transfer of an important object from one person to another.
 Acknowledgements References
