  X  Most previous research on location recommendation services in location-based social networks (LBSNs) makes recom-mendations without considering where the targeted user is currently located. Such services may recommend a place near her hometown even if the user is traveling out of town. In this paper, we study the issues in making location rec-ommendations for out-of-town users by taking into account user preference, social influence and geographical proximity. Accordingly, we propose a collaborative recommendation framework, called U ser Preference, P roximity and S ocial-Based C ollaborative F iltering (UPS-CF), to make location recommendation for mobile users in LBSNs. We validate our ideas by comprehensive experiments using real datasets col-lected from Foursquare and Gowalla. By comparing baseline algorithms and conventional collaborative filtering approach (and its variants), we show that UPS-CF exhibits the best performance. Additionally, we find that preference derived from similar users is important for in-town users while social influence becomes more important for out-of-town users. H.3.3 [ Information Search and Retrieval ]: Information Filtering Recommender Systems, Collaborative Filtering, Location Recommendation, Location-Based Social Networks
Due to the rapid development of Web 2.0, social network-ing and mobile technologies, location-based social networks (LBSNs) , such as Foursquare, Facebook Places and Gowalla, have emerged in recent years. They allow users to connect with friends, explore places (e.g., restaurants), share their  X 
Gregory Ference is now affiliated with Google, Inc.  X  Mao Ye is now affiliated with Klout.
 locations, and upload comments, photos and videos. Differ-ent from conventional social networking services that con-nect people merely in the cyber world, LBSNs bring people together via cyber connections with other people and  X  X hys-ical X  interactions with locations 1 , e.g., a user may  X  X heck-in X  to a location indicating she has visited the location. These interactions are shown in Fig. 1.
 Figure 1: Graph representation of users/locations in a LBSN
To encourage mobile users to explore new locations, the location recommendation service is an essential function to LBSNs (similar to the item recommenders to many e-com-merce services, such as netflix.com and amazon.com). The goal is to recommend a list of new locations that a targeted user may be interested in. Some state-of-the-art research proposes to incorporate social and geographical influence into collaborative filtering techniques when making location recommendations [15, 16]. However, they do not consider the current location of a mobile user. Thus, regardless of where the user is located, these systems will recommend the same locations, which could possibly be far away from the user X  X  current standing location. For example, consider a target user that lives in New York, NY, USA and travels out of town to San Francisco, CA (other side of USA) for a vacation. Based on the core idea of collaborative filter-ing, similar users of the target user (i.e., those who exhibit similar location visiting behaviors to the target user) are chosen to provide clues for making a recommendation. Due to the geographical locality of human mobility, most of these similar users likely live in the New York area because they have visited many locations that the target user has also vis-ited. As a recommendation is made by considering locations visited by these similar users (who may have never visited San Francisco), the recommended locations could be very far away and not reasonable. Additionally, collaborative filter-ing may recommend the same locations, no matter where the user is currently located in the world. While some systems filter/penalize far away locations [4, 7], they do not consider the social aspects that influence a user in an LBSN. In this
Locations here refers to places or points-of-interests. paper, we study the issues in making location recommen-dations for out-of-town users (users who are far away from their home region) by taking into account user preference, social connections and geographical proximity.

In order to investigate what is important for location rec-ommendation, we analyze datasets collected from Foursquare and Gowalla and have the following findings.
Based upon these findings, we propose a collaborative rec-ommendation framework called U ser Preference, P roximity and S ocial-Based C ollaborative F iltering (UPS-CF) to facil-itate location recommendation for mobile users in LBSNs. This framework, built upon collaborative filtering, has two simple but important features: i) it filters locations that are too far away from the current location of the user; and ii) it integrates similar users (who have visited many common places) and social connections (i.e., friends in LBSNs) into the collaborative filtering algorithm. This framework allows us to investigate the different roles of similar users and so-cial connections in location recommendation when the user is in town or out of town. The contributions of this paper are summarized as follows. The remainder of the paper is organized as follows. In Section 2, we review some background and relevant works. In Section 3, we show how social friends, similar users and geographical proximity are important factors for location recommendation in LBSNs. In Section 4, we present our location recommendation algorithm and in Section 5, we re-port our findings in an experimental study. Lastly, in Section 6, we conclude this study and point out future directions.
In this section, we introduce user-based collaborative fil-tering as the background for our algorithm design and then review prior research that is relevant to our study.
User-based collaborative filtering (user-based CF) is a well-received technique for item recommendations, which can be adopted for location recommendations by treating locations as items. As a result, it recommends locations for a target user in accordance with location visiting behaviors of  X  X im-ilar users X  (i.e., other users with similar visiting histories in terms of commonly visited locations). Let U be the user set and L be the location set in an LBSN. The check-in ac-tivity for a user u  X  U and location l  X  L is denoted as c u,l , where c u,l = 1 represents that u has a check-in at l and c u,l = 0 otherwise. Using the user check-in activities of locations, user-based collaborative filtering derives a user X  X  implicit preference over a specific location as a score (be-tween 0 and 1), denoted by p u,l , which ranks how likely a user u would like to visit a location l . It is defined below: where w u,v is the similarity weight between users u and v and U 0  X  U is the top-m users of the target user, i.e., the m users that have the highest similarity weight with the target user.

There are many ways of calculating the similarity weight, including cosine-based similarity, correlation-based similar-ity, and adjusted cosine similarity [11]. For simplicity, cosine-based similarity is used in this paper. The similarity weight between users u and v , denoted as w u,v , is defined as follows:
Here we review relevant research on LBSNs in two cate-gories: i) data analysis on LBSNs, and ii) recommendation techniques for LBSNs.
 Data Analysis. It becomes obvious that location is an es-sential part of social networks, especially for mobile users. Recently, research works on analyzing geographical proper-ties of social networks have been reported. Ludford et al. investigate how different location types affect users sharing behaviors [9] while Cho et al. discuss how social relation-ships and periodic behavior shape user movements [3]. Scel-lato et al. analyze socio-spatial properties of LBSNs and find heterogeneity across different users [13]. Also, Li and Chen classify users by mobility and behavior [8] while Scel-lato and Mascolo analyze how users connect with friends and checked-in locations [12]. Our work is unique from these pa-pers because our analysis aims to explore factors that may help in making location recommendations for users.
 Recommendation techniques. Many prior work on rec-ommendation techniques, mostly based on content-based and collaborative filtering algorithms, have been proposed [1]. The use of social friendship has been shown to be ben-eficial in making recommendations [1, 6]. However, these works do not deal with location recommendation, i.e., they do not consider geospatial features of locations. Recently, due to the growing popularity of mobile devices, the research momentum on location recommendation has increased [2, 4, 5, 7, 14, 15, 16, 18]. However, some focus on GPS data or mobile environments, without considering social aspects of an LBSN [5, 14, 18].

Only recently, a few research works have started to in-vestigate location recommender systems for LBSNs [2, 4, 7, 15, 16]. To our best knowledge, Ye et al. are the first to study location-based recommendation algorithms for LB-SNs [15], but it does not consider the current location of the user. Berjani and Strufe propose a collaborative filtering al-gorithm for location recommendation system in LBSNs [2] without considering the social aspects nor the current loca-tion of the user. Chow et al. filter locations that are farther away [4], Levandoski et al. use a travel penalty to favor lo-cations close to the user [7], and Bao et al. use local experts to help recommend locations. However, all of them do not consider social aspects that exist in LBSNs. Ye et al. delve into location recommendations by analyzing and proposing a system that combines user preference, social influence, and geographical influence [16], but it does not take the current location of the user into account. Thus, it will recommend the same locations to the user without considering her cur-rent positioning. Our research work aims to study the issues in making location recommendations for out-of-town users and investigate the roles of friends and similar users in in-town or out-of-town scenarios.
In this section, we conduct data analysis by using two datasets collected from Foursquare and Gowalla. Particu-larly, we are interested in studying when users travel long distance, i.e., visit far away locations. First, we perform ex-periments using user-based CF to discuss issues arising when making recommendations for mobile users traveling out of town. Then, we study the mobility of users from their home location, aiming to understand the geographical proximity of users X  traveling behavior. For this paper, we perform experiments using two LBSNs: Foursquare and Gowalla. The Foursquare dataset includes 202 , 932 users and 155 , 321 locations while the Gowalla data-set includes 116 , 889 users and 1 , 070 , 338 locations. In ad-dition, there is a total of 1 , 713 , 965 mutual social connec-tions (or called friend ) pairs in the Foursquare dataset and 267 , 505 friendship pairs in the Gowalla dataset.
We aim to support location recommendation for both in-town and out-of-town scenarios. Thus, we first conduct ex-periments using user-based CF upon the two real datasets to observe how effective it performs when making recommenda-tions to users located at different distances from their home regions (i.e., the region where the majority of their check-in activities occur).
We evaluate the user-based CF algorithm using the check-ins as the ground truth. By marking off randomly selected locations within certain distance ranges as  X  X ot-visited X , we measure how well the recommendations recover the marked-off locations (Section 5.1 elaborates more on evaluation pro-cess). By varying the distance from the home region, Fig. 2 plots precision @ N for different distance ranges (e.g., 0-20 km, 20-40 km). The user-based CF method performs reasonably well when the marked-off locations are close to home regions of users, but the precision degrades when the marked-off locations are 20-40 km away from their home regions. This phenomenon occurs in both datasets consis-tently, acknowledging our concerns that collaborative filter-ing may not work well for out-of-town users.

We argue that this degradation is due to: (a) the rec-ommended locations derived from candidate locations pre-viously visited by the top similar users of the target user are likely to be close to her home region and thus too far away from her current region; and (b) some of the most similar users may not have visited locations near the target user X  X  current region. To address (a), an idea is to incorporate a proximity constraint to filter locations far away from the user X  X  current region. To address (b), we need to extend the base of similar users from which the candidate locations are derived. As prior studies have shown that friends tend to exhibit similar behaviors (and we assume that includes far-away places), we integrate friends into our collaborative recommendation framework in Section 4. Figure 3: Probability distribution of traveling distance of users from their home location in the Foursquare dataset
For the mobility of users, we explore how far users tend to travel to visit locations. For this experiment, we use the Foursquare dataset since it contains home locations that users report on their user profile. Analyzing users that have visited at least 10 locations, we examine how close 50% and 80% of the user X  X  visited locations are to their home loca-tion to show how far users typically travel. The probability distribution to display how far users travel from their home location to visit locations is shown in Fig. 3, where a data point on the graph represents the percentage of users that have at least a certain percentage of locations (50% or 80%) within the given distance on the x-axis. The figure shows that many users visit locations nearby their home location, with 83 . 7% of users visiting 50% of their locations and 63 . 3% of users visiting 80% of their locations within 100 km of their home location. Therefore, we see that many users visit a large majority of their locations near their home location . This confirms our intuition that users tend to visit nearby places. Thus, location recommender systems should recommend places to users that are a short distance away from the current standing point of the user. Based on the previous observations, we propose the U ser Preference, P roximity and S ocial-Based C ollaborative F il-tering (UPS-CF) recommendation framework.
The basic idea of UPS-CF follows the user-based CF al-gorithm to explore the implicit preferences of top similar users in making a location recommendation. However, due to the constraint of human mobility, locations that are far away from the current location of the target user should be excluded from consideration. Thus, UPS-CF adopts a prox-imity constraint, denoted as d p , to filter candidate locations which are farther than d p from the target user X  X  current lo-cation. Notice that d p can be adapted based on application requirements. For example, for a mobile map application, the recommendation should be tailored based upon the dis-played region on the map, which allows the recommendation engine to set d p accordingly.

Additionally, users with commonly visited locations with the target user may not be the best source to decide can-didate locations because these users may have not visited locations near the target user. Thus, UPS-CF incorporates friends (i.e., socially connected users) in order to broaden the selection base. This idea is reasonable as the homophily and social influence phenomenon among friends indicate that friends tend to have similar behaviors. Therefore, we aim to incorporate this factor and investigate its roles (in com-parison with similar users) in UPS-CF under in-town and out-of-town scenarios.

As shown, UPS-CF incorporates the notion of a proxim-ity constraint by filtering out candidate locations that are farther away from the current standing location of the tar-get user. Similar to the user-based CF algorithm, UPS-CF defines a ranking score as the probability of a user u visiting location l , denoted p u,l where w u,v indicates the importance (i.e., weight) of a user v contributing to a recommendation targeting on user u and c u,l is a boolean variable representing whether u has a check-in at location l as explained in Section 2.1.

Notice that the similarity weight w u,v used in Eq. (3) is different from that in Eq. (2). The weight w u,v here is used to combine the roles of a similar user and a friend. We use control parameter  X  (where 0  X   X   X  1) to balance the weight w E u,v for the role of a similar user and the weight w for the role of a friend and define w u,v as follows:
Accordingly, UPS-CF is able to take advantage of similar behavior between close social friends in a social network as well as user preference between similar users. Notice that user preference among similar users is derived based on the widely-known belief that similar users tend to visit similar places, which user-based CF employs to decide its top-m users [1, 6, 11]. Let L be the set of locations. The similarity weight between users u and v , in terms of their common experiences in check-ins, is defined as follows:
On the other hand, we believe that users are more likely to go to places that friends have previously visited [17]. This is based on the tendency for people to be similar to their friends, due to homophily and social influences among friends in social networks [10]. The friendship between users u and v is denoted as f u,v , where f u,v = 1 represents that u is friends with v and f u,v = 0 represents no record that u is friends with v . Therefore, the similarity weight of social influence between users u and v is defined as follows:
In this section, we conduct comprehensive experiments with real datasets from Foursquare and Gowalla to validate our ideas and evaluate our proposed algorithm. Our ex-periments are designed to achieve the following goals. (1) We want to study the optimal setting of  X  for UPS-CF un-der different distance ranges from home regions to see how similar users and social friends play a role in location rec-ommendations for differing ranges. (2) We want to compare UPS-CF against several collaborative filtering variants and baseline algorithms for in-town and out-of-town recommen-dation. (3) We want to test how well the different algorithms perform for the cold start problem for users who have very few existing check-ins, which is a well-known problem for collaborative filtering algorithms.
For evaluating the recommendation algorithms, we adopt a widely used approach for data mining and machine learn-ing research. Given the check-ins in the collected Foursquare and Gowalla datasets, the general idea is to mark off some data points in the datasets (e.g., a user u has visited a lo-cation l ). Using this as the ground truth, we evaluate how well the algorithms are able to recover the mark-off l in their recommendations for u . Therefore, we can compare UPS-CF with other algorithms to see which one provides better recommendations.

More formally, we randomly remove a check-in record that a user u has visited a location l . Then, we randomly se-lect a query point q (current standing location of u ) that is distance d ql away from l . This allows our application scenario to be more realistic because u will most likely not be at the same geo-coordinate as l . Next, for each algo-rithm, we recommend N locations for u to visit and track if l was recommended. After repeating the process, we cal-culate precision @ N for each algorithm, i.e., the percentage that l was recovered. For our evaluation, we choose N to be 5 and 10 and alternate d ql between 5, 10, 20, 50, and 100 km. The predetermined pool of d ql has a bias towards shorter distances since users intuitively will not travel long distances from their current standing location to a recom-mended location. For example, if a user is looking to eat at a restaurant, she will almost never travel hundreds of kilo-meters to go to a restaurant that far away; instead, she will almost always choose to eat at a place within a small driving distance. Thus, we do not set d ql to be a very long distance.
In our evaluation, we compare two baseline algorithms and four variants of the collaborative filtering method. 1. M ost V isited (MV): Based on popularity, the algo-2. C losest L ocations (CL): The algorithm recommends 3. U ser-Based CF (U): The user-based CF algorithm 4. U ser and P roximity-Based CF (UP): The User-5. U ser and S ocial-Based CF (US): The UPS-CF 6. U ser, P roximity and S ocial-Based CF (UPS):
When we evaluate the algorithm, the user location pairs ( u , l ) are divided into in town (0-20 km) and out of town (200-1000 km) in accordance with the distance of a loca-tion l from the home region of user u . This allows us to see not only how the algorithms compare overall but also for varying distance from the users X  home regions. When we evaluate the algorithms, four-fold cross validation is per-formed, where 3 4 of the data is the training data (to optimize  X  for US and UPS, as explained in Section 5.2) and 1 4 is the testing data. After finding  X  , we perform the evaluation process stated above to evaluate the different algorithms.
Before we can evaluate the collaborative filtering algo-rithms, we need to tune some parameters to optimize the effectiveness of the algorithms. In UP and UPS, we need to set the proximity constraint d p for filtering out far away locations. We set d p to be 100 km so a reasonable number of candidate locations remain for recommendations while still being a realistic distance for a user to travel. On the other hand, for US and UPS, we empirically tune  X  to obtain its optimal settings for in-town and out-of-town scenarios. No-tice that  X  is the weight for the role of a similar user and 1  X   X  is the weight for the role of a friend.

We use the average of precision @5 and precision @10 as the overall performance metric to tune  X  for US and UPS. In the experiments, we divide the Foursquare and Gowalla datasets based on distance ranges from their home into two categories, i.e., in-town (0-20 km) and out-of-town (200-1000 km) scenarios. Table 1 shows the optimal settings for pre-cision of US and UPS under each category. Notice that a large  X  means the role of similar users are important while a small  X  means friends are important. For both US and UPS algorithms, the optimal  X  is large (0.8 for Foursquare and 0.9 for Gowalla) for in-town traveling and small (0.1 for Foursquare and Gowalla) for out-of-town traveling. In
Figure 5: Effectiveness of algorithms for in-town users other words, when users are in town, similar users contribute more to effective recommendations while social friends play a more important role when users are out of town. The wide discrepancy between the in-town and out-of-town  X  shows that users have a different decision process for the two scenarios. One possible expla-nation for a small  X  in out-of-town scenarios is that users may travel to various places to visit friends, which makes friends more important in this scenario. Next, we evaluate the recommendation performance of UPS by comparing it with other approaches. The results are shown in Fig. 4 and Fig. 5. When the user is in town, UPS performs the best in both datasets, followed by US, UP, U, CL, and MV in the Foursquare dataset and UP, US, U, CL, and MV in the Gowalla dataset. Since UP performs better than U and UPS performs better than US, we con-clude that removing locations farther away (i.e., the effect of proximity constraint) improves recommendation perfor-mance. In addition, UPS performs better than UP and US performs better than U, which means friends (i.e., the effect of social connections) also help for recommendations. For the out-of-town scenario, we see that the precision of UPS and UP is strengthened (in comparison to the in-town scenario) while the precision of US and U degrades in both datasets, which shows that filtering farther away locations is very important in this scenario. US and U do not per-form well because some of the recommended locations may be too far away. Thus, if a user is on vacation or moving to a new location far away from his previous home region, US and U will give unsatisfactory recommendations. However, UPS and UP recommend only locations near the current lo-cation of the user. Therefore, unlike U and US, UPS X  X  effectiveness does not deteriorate in the out-of-town scenario. In addition, we see that UPS outperforms UP and US outperforms U, which means that social friends are important for recommendation. Since geographical proxim-(a) Precision@5 -Foursquare (b) Precision@5 -Gowalla ity is important, CL performs average for out-of-town trav-eling, but it does not take advantage of similar users and social friends like UPS. MV performs poorly throughout.
Therefore, filtering based on the proximity constraint and using social connections help to improve collaborative filter-ing (which exploits the power of implicit preferences among similar users). In addition, we see that CL can sometimes perform well since it takes advantage of the geographical proximity of locations, but it does not include user prefer-ence and social influence, which negatively affects its abil-ity to recommend locations. Lastly, MV always performs poorly, with precision never increasing above one percent.
Finally, we look into the effectiveness of the different rec-ommendation algorithms for cold start users. Cold start is a problem in collaborative filtering algorithms that exists when a user has not yet visited a location or has visited only a few locations. Due to the lack of information about the users, recommendations could perform poorly. To see how our algorithms perform, we use the same training and testing sets as before, except that we keep at most 2 locations visited for each user in the testing sets. Fig. 6 shows the results of the experiment for precision @5, with each bar representing the percentage decrease in precision between the regular and cold start effectiveness experiments ( precision @10 shows a similar phenomenon and omitted due to space constraints). With MV and CL, the percentage decrease is relatively small since these algorithms do not use history to make recommen-dations, so a lack of history in the cold start problem has minimal effect. For the collaborative methods, we see a drop in precision, with the smallest percentage drop (better cold start performance) being UPS.

We can see a few interesting trends in the results for both datasets. First, we see that U and US have a consistently larger percentage drop than UP and UPS, respectively. This shows that filtering by radius leads to a lower percentage de-crease. Since filtering by radius removes locations that are too far away from the user, UP and UPS will have fewer in-correct candidate locations, even though the cold start situ-ation has very little history. In addition, US and UPS have a lower percentage decrease than U and UP, respectively. This occurs because the UPS and US algorithms also use social connections to help recommendations. Even though little history exists for which locations users visited, the so-cial factor helps give a better recommendation. Lastly, we see that the combination of filtering based on the proximity constraint and using the combined strengths of similar users and social friends helps UPS have the lowest percentage de-crease among all collaborative filtering methods.
In this paper, we introduce a location recommendation service that considers both in-town and out-of-town scenar-ios for increasing effectiveness of the service. We propose a new collaborative recommendation framework, namely, User Preference, Proximity and Social-Based Collaborative Filter-ing (UPS-CF), which incorporates user preference, social connections, and geographical proximity to give location rec-ommendations for mobile users. Using datasets from Four-square and Gowalla, we conduct extensive experiments to evaluate our proposal and compare with collaborative filter-ing variants as well as baseline algorithms. We show that UPS-CF outperforms all other comparing algorithms and the effectiveness does not degrade for out-of-town users. In addition, we find that for in-town users, similar users are important while social friends become more important for out-of-town users. Knowing this, our proposed solution can provide location recommendations for users whether they are in town or out of town by adjusting a weight parameter between similar users and friends.

For future work, we plan to enhance the proposed recom-mendation techniques using semantic tags for locations (e.g.,  X  X estaurant X  or  X  X useum X ). Since this information about lo-cations gives insight into the types of locations a user visits, we could use it to facilitate location recommendations.
