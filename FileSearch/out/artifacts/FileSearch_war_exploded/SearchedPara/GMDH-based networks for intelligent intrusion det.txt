 1. Introduction
The ever-expanding nature of Internet traf fi c accompanied with convenient availability of open source tools to launch mal-icious attacks has placed a demand for better network intrusion detection systems to detect such attacks accurately, so as to initiate subsequent countermeasures. Malicious attacks launched against an organization ' s computing infrastructure may cause huge fi nancial losses. Accurate detection is an important fi rst step towards securing a computer network. Rapid detection will allow the victim network to trigger appropriate countermeasures to reduce the effects of these attacks. A victim may range from a critical server operating to serve a client-base, to an entire infrastructure network. The attacks themselves vary in type and scopes of their abilities, from trojan horses to report back stolen information to the attacker, to distributed intensity-driven attacks such as Denial of Service (DoS). While the former tends to operate in the background and study the behavior of a machine, with the intent of stealing sensitive information, the latter attack type involves the participation of multiple attacker machines (which may be unaware of their participation in the attack), to send high volumes of traf fi c to the victim machine in a short interval of time. As a result, traf fi c will aggregate at the victim ' s end beyond its ability to process such in fl ow of high magnitude, consequently causing it to be incapacitated from providing further services. signatures do not exist in the signatures database. Therefore, to maintain a high degree of accuracy in intrusion detection, an updated version of the attack signature database needs to be introduced to the misuse detector, on a frequent basis, for retraining. Misuse detectors are known for their high degree of accuracy and ef fi ciency in attack detection ( Barbara et al., 2001 ; Stolfo et al., 2001 ).

In this paper, the problem of network intrusion detection is addressed through classi fi cation of network traf fi caseither normal or anomalous. We introduce the use of Group Method for
Data Handling (GMDH)-based networks ( Ivakhnenko, 1966 )for intelligent classi fi cation of network traf fi c. The GMDH technique has been found to hold promise in the fi eld of intelligent computing. Such a technique for data classi fi cation based on established input  X  output relationships of a dataset, has been applied to diverse application domains, such as educational testing, pattern recognition, spam email classi fi cation ( Abdel-Aal, 2005 ), and even for intrusion detecion ( Onwubolu and
Sharma, 2008 ). Unlike regression-based techniques, the GMDH technique does not require user intervention for specifying the model relationship or the architecture of the neural network a priori. In addition, it performs well even with fewer training parameters, and yields high accuracies ( Agarwal, 1999 ; Montgomery and Drake, 1991 ).
 The scheme proposed in this paper operates in two phases.
During phase 1, selection of the most appropriate network traf fi c features is performed, and during phase 2, the network traf fi cis classi fi ed as being either normal or anomalous through the use of
GMDH-based networks, tested on both ranked as well as the entire feature set. The GMDH network models are built at various levels of complexity and their attack classi fi cation performance is studied for the KDD-99 dataset ( Kayac  X  k et al., 2005 ).
The ranking of network traf fi c features, which are 41 in number for the KDD-99 dataset, is done based on three statistical ranking techniques, namely, Information Gain, Gain Ratio, and GMDH.
Our proposed scheme selects the top m common features from the ranked feature lists generated by these three techniques. These features are subsequently introduced as input to the GMDH network for generation of models for network traf fi c classi fi cation.
The KDD-99 dataset has a total of 22 attack types, and 1 normal type, as labels ( y i ) for each data sample x i . The GMDH models are generated based on a variation of the model complexity, de fi ned through the Complexity Penalty Multiplier (CPM) parameter. The resulting models are then subject to an unlabeled segment of the dataset, to test the classi fi cation accuracy of the generated models. The contributions of this paper can be outlined as follows:
Introduction of three prominent statistical ranking techniques, to identify the most relevant network traf fi c features for the dataset,
Proposal of a GMDH network-based approach for classi fi cation of network traf fi c into normal or anomalous, and
Analysis of the simulation results obtained when the proposed scheme is tested on unlabelled network traf fi c data.
The remainder of this paper is organized as follows. Section 2 discusses related work found in the literature for intelligent network intrusion detection. GMDH-based networks are elabo-rated upon in Section 3 .In Section 4 , a detailed description of the proposed intrusion detection technique is provided. Section 5 provides the simulation results together with a detailed analysis and insight. Finally, the concluding remarks are stated in Section 6 . The proposed scheme uses nine traf fi c features as input to the MLP, which means the input layer should contain nine neurons. The MLP network consists of three layers: (i) the input layer with nine neurons, (ii) the hidden layer, and (iii) the output layer with two neurons, with all layers being fully connected. The Sigmoid function is used as a transfer function between the neurons. The author uses 10,000 data points, with 90% of it being used for training, and the remainder for testing.

The Random Neural Network (RNN) model ( Gelenbe, 1990 , 1989 ) has also been used successfully for a wide range of applications. It comes in two architectures, namely, feed-forward, or a fully recurrent architecture. RNNs have strong generalization capabilities, even when the training data set is relatively small compared to the actual testing data. The model also achieves fast learning due to its computational simplicity for the weight updating process. RNN was used by Oke and Loukas (2007) for DDoS attack detection. It was used in conjunction with statistical variables like maximum likelihood, Hurst parameter, and Entropy. Hurst parameter gives network traf fi c self-similarity while Entropy shows how much data is contained in the traf fi c, that differentiates signi fi cantly between normal traf fi cand anomalous traf fi c( Oke and Loukas, 2007 ). In Flegel and Meier (2004) , a novel 1-class Support Vector Machine (SVM) has been proposed, speci fi cally designed for handling intrusion detection features, wherein a single sphere is used for representing the class of normal or anomalous connections, with all outliers labeled as being in the opposite class. A quarter-sphere approach was also de fi ned and both the single and the quarter sphere techniques were tested on the KDD-99 dataset. The performance of both approaches under varying anomaly ratios was reported, with the highest average accuracy reported as approximately 90%, at the cost of a 10% false alarm rate, as obtained from the illustrated ROC curves.

In Onwubolu and Sharma (2008) ,ahybriddifferential evolution-GMDH technique for network intrusion detection is proposed. The study evaluated the ability of the differential evolution technique in selecting the most appropriate para-meters of the GMDH model to be generated. The resulting model was used for classi fi cation of the DARPA dataset entries into normal or anomalous. In Wasniowski et al. (2005) , a framework is proposed for agent-based network intrusion detection. The authors have attempted to use the self organization ability of GMDH for pattern classi fi cation, when applied to data obtained from local network traf fi c by the Snort system. However, the results of tests conducted for the proposed scheme were not reported. In contrast, our proposed scheme does feature pre-processing and subsequent model generation on the resulting ranked features of the KDD-99 dataset. The following sections describe the proposed technique and its performance when simulated. Unlike conventional neural networks, GMDH gener-ates models to depict generalization over a dataset without user intervention, and performs well even in the presence of a few independent variables. We provide an in-depth study of the GMDH technique in the following section. 3. GMDH-based networks
The original GMDH is a supervised inductive algorithm for construction of self-organizing models of optimal complexity based solely on the input  X  output relationships of a given dataset, without the need for user intervention. It introduces a higher-order polynomial to relate each input variable m of the dataset to a single output variable y . The procedure adopted by the GMDH technique for evolving the polynomial so as to fi nd an optimal model to represent the input  X  output relationship was said to where x is the input to the node, y is the output of the node and z , z 1 , z 2 and z 3 are the node coef fi cients.

The double node GMDH implementation takes two inputs and the third-degree polynomial equation includes a cross term so as to consider the interaction between the two inputs, i.e. where x i , x j are the inputs to the node, y is the output of the node and z 0 through z 7 are the node coef fi cients. 3. Evaluate: The models generated in the previous step are evaluated for each data point n of the training set N ,to construct a matrix Z of values generated when the obtained polynomial is used for evaluation of the data points, where, each column of Z represents the outputs generated when the polynomial of the previous step is used for classifying the N data points. 4. Replacement: The columns of the original variables ( X )are replaced with those columns of Z which best predicted the output class y . Speci fi cally, the least square error d j is computed as follows Ivakhnenko (1966) : d j  X   X  where, t is the number of entries in the test data set. 5. Stopping criteria: The lowest value of d j m obtained from the previous step is checked to see if this value has decreased in magnitude from the previous iteration. If yes, continue with repetition of steps 2  X  4 for varying polynomial sizes, else stop execution. 3.2. Abductive network ensemble
Network ensemble is a learning approach where a set of network models, generated by the GMDH implementation based on varying complexities (de fi ned through the CPM parameter), algorithm is repeatedly forced to select a small subset of optimum predictors with reduced complexity settings. The process is repeatedly executed, with selected features removed from the dataset during each iteration, with the quality of features in iteration i + 1 always being less than that of features for each iteration t o i  X  1. As a result, features are ranked in groups based on predictive quality, with those selected earlier being better predictors.

The ranked features can be selected for model synthesis based on one of two approaches. In the fi rst approach, the top m ranked features can be selected for introduction to the classi fi er for training. It may be noted that based on system needs, the classi fi er can be trained on either the fi nal ranked feature subset, or on each feature subset generated during the feature ranking iterations. In the second approach, the top ranked features are determined by repeatedly forming subsets of the m ranked features, with increasing values of m , starting from 1 and reaching the total number of available features in the dataset. For the latter approach, it is postulated that increasing m will lead to nondecreasing accuracy in data classi fi cation. The model that yields the lowest classi fi cation error rate is thus selected. If two models with different values of m have the same classi fi cation error rates, the one generated based on the lesser value of m is selected ( Abdel-Aal, 2005 ). 4. The attack detection scheme
In order to construct a model to accurately represent network traf fi c as being either normal or anomalous, the abductive network-based intrusion detection scheme proposed in this sec-tion operates in two phases. Phase 1 of the scheme is where the network traf fi c features of the dataset are ranked based on three common techniques, namely, Information Gain, Gain Ratio, and GMDH. The top m ranked features appearing as an intersection set of the outcomes of these three techniques, are selected for abductive modeling. An abductive model is de fi ned as an inter-connection of a set of input network traf fi c features based on speci fi c criteria, as de fi ned below. The model is evolved based on the selected complexity penalty multiplier (CPM) of the algorithm, at time of initialization. The fi nal model of the network traf fi c (from the dataset) will help classify the data into one of two classes accurately, with the postulation that the model shall best fi t any observed network traf fi c with close similarity to the attack model. The accuracy in detection of the attacks is de fi ned as the ability of a model to correctly distinguish between normal and anomalous traf fi c data. An illustration of the proposed intrusion detection scheme is provided in Fig. 1 . It may be noted that we address the issue of intrusion detection as a two-class problem, wherein, the network traf fi c is either tagged as normal or anomalous. Intra-class differentiation between the various attack types of the dataset is beyond the scope of our proposed scheme.
Prior to the application of any training algorithm on a given data set, it is essential to convert all features (attributes) to a format that is intelligible by the classi fi cation algorithm. Subse-quent to preprocessing of data, the features of the data set are identi fi ed as either being signi fi cant to the intrusion detection process, or redundant. This process is known as feature selection. Redundant features are generally found to be closely correlated to one or more other features. As a result, omitting them from the intrusion detection process does not degrade classi fi cation accu-racy. In fact, the accuracy may improve due to the resulting data reduction, and removal of noise and measurement errors asso-ciated with the omitted features. Therefore, choosing a good subset of features proves to be signi fi cant in improving the performance of the system.
 (b) Removal of selected features to force the model to select (c) Repetition of the process until all features are selected or (d) Change model complexity in steps from small to large, if
After feature ranking is completed, the top ranked features are considered for attack detection, one at a time as long as the accuracy of the selected model is non-decreasing. We stop when the accuracy drops, as an indication of model over fi tting.
In Section 5 , we follow this procedure at different levels of model complexity, numbers of layers, and numbers of inputs, and study the corresponding effect on the attack detection process.

A comparison of the impact of all three techniques on the attack detection accuracy is provided in Section 5 .

Subsequent to fi ltering and selection of the highest ranked features for the intrusion detection process, the reduced data set is used for training and evaluating the detection scheme. 5. Simulation results and analysis
This section describes the simulation performed for feature ranking based on the three statistical techniques de fi ned in
Section 3 , and to build models of GMDH networks for network traf fi c classi fi cation. The simulator as such provides for simulta-neous feature selection and model building on the dataset. The dataset itself was partitioned with 75% of it being used for training and the remainder 25% of unlabeled data used for testing the accuracy of the proposed technique. The GMDH networks were modeled at various levels of complexity, de fi ned through the CPM (Complexity Penalty Multiplier) parameter. The value of CPM has an inverse effect on the complexity of the model generated (i.e. the number of levels of the model and the interconnections between the levels). Therefore, smaller CPM values will lead to more complex models as opposed to larger ones. 5.1. The dataset
For testing the accuracy of the GMDH models in distinguishing normal from anomalous traf fi c, the KDD-99 dataset ( Tavallaee et al., 2009 ) was used. This dataset was originally derived from the raw DARPA network traf fi c. In the dataset, the network connection details that were obtained from the raw data were parsed into a vector with 41 distinct features. The processing of raw network connection data was carried out through the use of data mining and expert systems, so as to emulate a misuse-based network intrusion detection system. In addition, each attack type of the dataset was categorized into one of four categories, namely, Denial of Service, U2R, R2L, and Probing. Several intrusion detection schemes have been proposed in the past, with their corresponding performances being tested on the KDD-99 dataset ( Yu, 2008 ; Sabhnani, 2003 ; Ahmad et al., 2008 ; Middlemiss and Dick, 2003 ;
Zhang et al., 2011 ). The 41 features of the dataset constituting the feature vector are constituted of
Thirteen content-based features derived from network traf fi c payload. These features were constructed to identify U2R and R2L attacks.

Ten host-based header features constructed over a 100 s time window to detect slow probes (Denial of Service) attacks.
Ten temporal header features constructed over a 2 s time window, and scheme: Accuracy  X  TP  X  TN TP  X  TN  X  FN  X  FP  X  9  X  Recall  X  true positive rate  X  TP TP  X  FN  X  10  X  Precision  X  TP TP  X  FP  X  11  X  Specificity  X  TN TN  X  FP  X  12  X  Detectionrate  X  Attacks detected Total Number of attacks n 100 %  X  13  X  where TP, true positive is the number of normal test samples classi fi ed correctly. FP, false negative is the number of normal test samples classi fi ed as attacks. TN, true negative is the number of attack test samples classi fi ed correctly. FN, false negative is the number of attack test samples classi fi ed as normal.

The Receiver Operating Characteristic (ROC) area is used for weighing the performance of the GMDH classi fi er on the input feature set, through the following de fi ned levels: 1.0: perfect prediction 0.9: excellent prediction 0.8: good prediction 0.7: mediocre prediction 0.6: poor prediction 0.5: random prediction
Precision  X  Recall (PR) curves, often used in Information Retrie-val ( Manning and Schlutze, 2000 ; Raghavan et al., 1989 ), have been cited as an alternative to ROC curves for tasks with a large skew in the class distribution ( Bunescu et al., 2005 ; Goadrich et al., 2004 ). An important difference between ROC space and PR space is the visual representation of the curves. Looking at PR curves can expose differences between algorithms that are not apparent in ROC space. 5.3. Feature ranking results and analysis
Simulations performed to test the proposed scheme can be divided into two phases. During Phase 1, the three feature ranking techniques de fi ned in Section 3 , were implemented to rank the features of the dataset. For running simulations based on selected features, the commonly occurring features in the three lists of ranked features, are selected (see Table 1 ). These selected features are then introduced to the abductive network during Phase 2 of the scheme, for building generic models to represent the dataset testing of the dataset to quantify the accuracy in attack detection. 5.4. Monolithic abductive models
For monolithic abductive models, we ran the simulation using all features from the training set, and different CPM values, i.e. of their ranking, were introduced to the simulator, incrementally. A total of 65 abductive network models were built, with each model consisting of four layers and varying CPM values. In Table 2 , the attack detection and the false alarm rates are illustrated for fi ve synthesized GMDH models with varying CPM values. It is evident from the fi ndings that the accuracy of the synthesized models remains consistent around 97.6%, unaffected by the network layers set to fi ve and with CPM  X  1. Fig. 2 shows that the model stabilizes both in terms of the detection rate as well as the false alarm rates, beyond k  X  20, when a total of fi ve layers of an values. However, higher CPM values proved to slightly improve the performance as compared to lower CPM values, in terms of recall.
The simulation was also run with varying numbers of top-ranked features. When the top 14 and 20 ranked features were selected, with CPM  X  1, and the number of GMDH layers set as 4, the results were not as good as those obtained when using the full feature set, but were comparable to a certain extent. However, it was noticed that the training time for the reduced feature set simulation run was much less than the time required for running on the full feature set. The time required for training, i.e. abductive network model building, was found to improve with decreasing numbers of features. When all 123 features were used for training, the simulator took an estimated 1805 s for model building, whereas, with 14 features selected, the training time reduced to 589 s ( Table 2 ).

Table 3 shows the results of using the top 14 and 20 commonly ranked features by all three techniques from Section 3 . For the same simulation, Fig. 5 illustrates the precision  X  recall curves. As may be observed from both Table 3 and Fig. 5 , the detection rate showed a slight degradation in performance, reaching a maximum of only 96.9% when 20 features are selected, as opposed to 97.9% when all features are selected (from the previous subsec-tion results). For the 14-feature case, the false alarm rate was found to be 2.8%, whereas if 20-features are selected, the false alarm rate drops down to 2.0%. 5.5. Abductive networks for top-ranked features
After performing simulation runs with all features selected, we synthesized abductive networks using the top 14 selected features, ranked by the three feature selection algorithms outlined in Section 3 . The resulting networks are compared based on the precision  X  recall curve, as shown in Fig. 6 . The area under the curve for the GMDH selected features, is 0.993, whereas the area under the curve for the abductive network model synthesized using Gain Ratio-selected features is 0.990, and the area under the curve based on features selected through Information Gain is 0.983. It can be observed here that abductive networks synthesized using the GMDH top-ranked features outperform abductive networks synthesized based on features ranked through Gain Ratio and Information Gain. The abductive networks synthesized using the Gain Ratio approach outperform abductive networks synthesized using Information Gain. Abductive networks synthesized using Information Gain were found to yield better Recall values as opposed to Precision values.

In Table 4 , we provide an illustration of the attack detection and the false alarm rates obtained when the top 14 features of each of the three feature selection techniques, are used for abductive network model synthesis. As may be observed, in terms of attack detection rates, features ranked highest by Gain Ratio proved to yield a detection rate of 97.5% when used for GMDH model generation. On the contrary, GMDH-ranked features yielded a detection rate of 95.3%. Gain Ratio was found to generate the most number of false alarms, at 4.3%, followed by a 4.3% false alarm rate of the Information Gain technique. Features ranked through GMDH were found to best model the dataset, and yielded the lowest false alarm rate of 2.8% (at par with results from the previous sub-section). 5.6. Ensemble abductive models
The best abductive network model was synthesized for CPM  X  1 (see Section 5.4 ). Therefore, an ensemble network comprising of three separate abductive network models was built, with the value of CPM fi xed at 1, and all 123 features selected. The GMDH models generated by the committee were combined based on a majority This research work was conducted as part of research project no. NSTIP-11-INF1658-04.
 References
