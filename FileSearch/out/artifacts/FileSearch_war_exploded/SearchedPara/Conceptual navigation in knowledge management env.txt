 1. Introduction
The use of Intranets provides resources for giving access to corporative information, systems and tools for cooperative work to the employees of the companies. In corporative environments, Intranets have been important resources for knowl-edge management.

The search for information in an Intranet is realized mainly through the navigation in Web environments. This kind of navigation is very useful, since it is easily accessible even to the most lay users.

However, the high volume of information available in an Intranet can make the task of navigating through the documents contained in the net until the desired document waste a lot of time. Therefore, it is necessary the existence of a better orga-nization of these documents and that mechanisms that speed the navigation through these documents are available. A way of organizing the documents of an Intranet is by using concepts of the Semantic Web.
 Companies use Semantic Web to manage their knowledge in an adequate way and to improve the resources that the
Intranets offer. Intranets are based mainly on Web resources. The World Wide Web consists basically of documents whose content is understandable for human beings only. Berners-Lee, Hendler, and Lassila (2001) presented Semantic Web as an evolution of the Web for an environment in which software agents can make inferences, deductions and search for informa-tion in the net. For this, metadata are associated to documents in a format that the agents can understand.
Besides the use by agents, metadata can be used by people to retrieve documents. The use of text to retrieve documents falls in the ambiguity problem. Ambiguous words make that a large amount of results to return in a query, thus consuming a lot of time of the user to filter the relevant documents.
Metadata are usually stored separately from the content of the document. A model of document storage with two distinct layers can be considered: a metadata storage layer and a document storage layer. To represent the metadata, several formats can be used such as texts or tags.

Metadata can also be represented by ontologies. Gruber (1993) defines an ontology as an explicit specification of a con-ceptualization. Ontologies are a key technology to make Semantic Web possible (Berners-Lee et al., 2001; Domingue &amp; Dzbor, 2004 ). An ontology can formally describe a domain and consists of a list of terms and relationships among them. Terms represent concepts of the domain (Antoniou &amp; van Harmelen, 2004 ).

For the purpose of this work, it is considered that an ontology is adequately capable of capturing and representing a con-text. Thus, in the scope of knowledge management, ontologies allow employees to commonize concepts concerning terms used by them, making possible a more uniform representation of the knowledge.

Allied to an ontology, a semantic index can be used to help the retrieving of documents. A semantic index can serve as an association of each indexed document to one or more terms described in the ontology.
 This article introduces the concept of conceptual navigation and presents the NavCon, an architecture that implements it.
The conceptual navigation makes use of several concepts, previously organized in the format of ontologies, to provide mech-anisms that optimize the user navigation through the Web. The use of a context aims to reduce the retrieving of unnecessary information helping the user to keep focus on his research.

This article has the following structure: in Section 2, concepts to characterize a context in a knowledge management environment using ontologies are introduced. In Section 3, the use of metadata for retrieving documents is explained. In Section 4, the creation of a semantic index is explained. In Section 5, the definition of conceptual navigation is presented.
In Section 6, the proposal of architecture for conceptual navigation is described. In Section 7, an example of application of the architecture in a company Intranet is showed. In Section 8, a comparison of NavCon with systems that use meta-data for the retrieving of documents is done. Finally, in Section 9, the conclusion and proposals for future works are presented. 2. The use of ontologies to characterize the context
According to Davenport, Prusak, and Prusak (1997) , knowledge  X  X  X s a fluid mixed with experiences, values, contextual information and specialists insights, which provide a structure to evaluate and to incorporate new experiences and informa-tion. In the organizations, it frequently becomes inlaid not only in documents or repositories, but also in the routines, pro-cesses, practices and organizational norms X .

Since long ago, organizations value the knowledge of their employees, but lately  X  X  X any organizations have perceived that they require more than a casual approach (and even unconscious) of the corporative knowledge, if they want to be successful in the economies of today and tomorrow X  (Davenport et al., 1997 ), that is, they need a knowledge management.
According to Hubert (2001) , knowledge management can be understood as a systematic approach to help knowledge to flow for the right people, at the right moment, in a way that it can be more efficiently and effectively used. The objective of knowledge management is to find, to understand, to share and to use knowledge to create value.

Studies demonstrate that there is a narrow linking between knowledge management and information technology. In many cases, knowledge management would not have happened without Intranet (Clarke &amp; Cooper, 2000 ). The Web, by mak-ing possible and promoting the acquisition, dissemination and sharing of knowledge in a corporative level, became an impor-tant instrument of knowledge management.  X  X  X he Intranet technology provides a standard infrastructure in which all the phases of the organizational learning can be supported X  ( Harvey, Palmer, &amp; Speier, 1997 ).

The Intranet has made possible the development of Web portals, where employees have access to the corporative infor-mation and systems and the tools of cooperative work.

Document storage in an Intranet, by itself, is not enough for an effective knowledge management. It is necessary to estab-lish relationships among the stored information in order to create a context (Davies, Fensel, &amp; van Harmelen, 2003 ). Frank, 2003). This context can serve as filter for the existing information in the Internet that interest the user.
The context concept is very subjective, varying according to its application. At the same time, context is a sufficiently intuitive concept but not hard to define.

Dey (2001) defines context as  X  X  X ll information that can characterize the situation of an entity. An entity is a person, place or object considered relevant for the interaction between the user and an application, including the very user and the very application X . The author still defines that  X  X  X  system is based on context, when it uses the context to supply information and/ or relevant service to the user where the relevance depends on the task of the user X .

Br X zillon (1999) argues that the main role of the context is to supply a greater control on the knowledge. The con-text identifies which knowledge must be considered, in which conditions of activation, which are the validity limits and which is the moment to use it. These factors show the importance of the construction and use of trustworthy knowledge systems. In this case, the context acts as a filter to supply meaning and to reduce the amount of informa-tion presented to the user. The context filters the information that is relevant for the accomplishment of a task by the user.
A previous work that uses ontology to characterize context was presented by Sieg, Mobasher, and Burke (2007) . Sieg et al defines context as the representation of the intention of an user in his search for information. The context is represented using an ontological profile of the user who the authors define as an instance of a reference ontology.
As far as Web navigation for the search for information is concerned, one can consider that the context of the navigation is associated with the subject, which the searching user relates to. The navigation inserted in a context must display to the user relevant information related to the task that he executes. For example, when navigating inside the context of his work envi-ronment, an user will search documents related to the subjects of this environment. The context helps filtering the informa-tion that will be presented or directing the information to points more relevant to the necessities of the user at the moment of the query.

Fahley and Prusak (1998) argue that the creation of a shared context is crucial for knowledge management. These authors define a shared context as a common understanding of the external and internal terms of an organization and how these terms are connected. According to Fahay and Prusak, the development of a shared context requires the establishment of a common vocabulary.

A company can store information in the form of ontologies establishing, in such a way, a common vocabulary. These ontologies can define the relationships among the information shared in an Intranet.

By making tools available for querying information based on context can facilitate the search and presentation of the information to the user. 3. The use of metadata for the retrieving of documents Seen as a hypertext system, the Web is a net of links among documents in which the user navigates by using visual marks.
These links are static and defined by the author of the document. According to Carr, DeRoure, Davis, and Hall (1998) , the format of static links inserted in HTML pages can be considered a closed hypermedia system. In open hypermedia systems (OHS), links are metadata stored and kept separately from the page layout data.

One of the main problems related to Web static links is its constant outdating. Since traditional static links are defined inside HTML documents, they become inconsistent whenever the pages to which they are related change their address. The fact that static links contain, inside them, the navigation direction is pointed as another problem of this kind of link.
The navigation direction that the links will follow is defined by the author and cannot be modified by the user of the page (Crampes &amp; Ranwez, 2000; Davies et al., 2003 ).

Fig. 1 shows the metadata use model for the retrieving of documents. The model presents two linking layers: metadata layer and document layer. In the document layer, the documents have static connections among each other done through static links defined in the documents.
 Usually, text, tags or concepts to represent the metadata can be used. Metadata can have relationships among each other.
Metadata link themselves to documents through an index. Consequently, the documents can be indirectly linked to another documents through the metadata layer. 3.1. Text metadata
The use of text as metadata for the retrieving of documents can be found in search tools like Google the occurrences of each word in a set of documents.
 Although sufficiently spread in search tools, the textual research is inherently ambiguous ( Kraft, Maghoul, &amp; Chang, 2005;
Sieg et al., 2007 ). For example, an user who searches information regarding the Jaguar car model. When he executes a query,
In such situation, the use of context is a factor to reduce the ambiguity. 3.2. Tag metadata the possibility to the users create the metadata layer associating tags to documents. When noting a document with a tag, an user can indicate a relationship with another tags.

Figs. 2 and 3 show a comparison between the use of text and tags to represent metadata. Two differences noticed between the indexing with tags and with text is the amount of metadata produced and associated to documents and the possibility to establish relationships among metadata.

Usually, documents are linked to fewer tags than text words. The user notes just a few tags in a document while the con-tent of the document can present hundreds or thousands of words. On the other hand, each tag can be a combination of sev-eral words. Therefore, it is possible to presume that the amount of tags in the metadata layer can be greater than the number of words.

Another observed difference is that tags in the metadata layer can have some kind of relationship among each other. By associating tags to a document, an user can indicate the existence of a relationship among these tags. The words of a text, although they form a cohesive set, they dont have a clearly defined relationship.

The systems Del.icio.us 3 and Wikify! ( Mihalcea &amp; Csomai, 2007 ) are examples of tools that use tags as metadata for the retrieving of documents.

Del.icio.us is a social bookmarks tool that allows users to define tags to manage and share bookmarks from a centralized database.

Wikify! is a system for automatic extraction of keywords and disambiguation of words. Given an input document, the system has the ability to identify concepts in a text, executing an extraction of keywords to link these concepts to the cor-responding pages in the Wikipedia (disambiguation of words). 3.3. RDF and ontology metadata
Classes and instances that are present in ontologies represent concepts that can also be used as metadata. Thus, in the metadata layer, one can found concepts that are semantically linked among each other and, from an index, related to doc-uments. The use of concepts in the metadata layer is advantageous because it can be used to define a context where the user will navigate.

Fig. 4 shows the use of an ontology representing metadata. In this case, concepts of an ontology can be distributed in more than one metadata layer. Different layers can represent, for example, inheritance among concepts. The concepts, in one of the layers, can have links to another concepts in the same or in another layer. An index establishes the linking between concepts of the ontology and documents in the document layer.

Fig. 5 shows RDF representing metadata. RDF (Resource Description Framework) of the presented kinds of metadata.
 Several developers present tools for the construction of metadata layers and navigation in RDF resources and ontologies. Some examples of tools that use RDF resources and ontologies in Web environments are Semantic Turkey ( Griesi, Pazienza, &amp; Stellato, 2007 ) and the browsers Tabulator (Berners-Lee et al., 2006 ) and Disco ( Bizer &amp; Gau, 2007 ).
Semantic Turkey is a Firefox plugin for the notation of visited pages using classes of ontologies. The plugin has function-alities to insert notations about Web pages in an ontology, an editor of ontologies and a semantic browser in which the user can graphically navigate through the ontology. When navigating through the ontology, an user can retrieve visited pages. The visited pages. Semantic Turkey is a useful tool for the construction of the ontology and the index links. However, the plugin does not support the situation of an user who searches information in documents that have not been visited yet. Tabulator is a RDF browser. This browser offers the possibility to navigate in a net of RDF links and resources. From the
RDF links, it is possible to access links for Web documents. Tabulator provides resources in order to users access and interact with RDF data and developers include their data in RDF format.

Disco is another semantic browser with a behavior similar to that of Tabulator. The Disco browser renders the informa-tion found in RDF format presenting it in the format of HTML pages. The rendered pages contain links for the navigation through the information contained in the RDF data.
 Besides, COHSE ( Carr, Hall, Bechhofer, &amp; Goble, 2001; Yesilada, Bechhofer, &amp; Horan, 2007 ) Conceptual Open Hypermedia
Service is another system based on ontologies as metadata. This system is also based on the theory of open hypermedia sys-tems. COHSE combines the use of open hypermedia systems with ontologies to create links among documents. The system generates links, in Web documents, that activate queries in search tools such as Google and others.
In a work based on COHSE, Domingue and Dzbor (2004) propose a tool, called Magpie, to associate meaning to the infor-mation contained in Web pages and, from these meanings, to offer services and functionalities to the user. Magpie works as a task bar that actives a functionality to highlight concepts found in a Web page. The concepts are stored in an ontology. Dur-4. Semantic index
In the model presented in Fig. 1 of the previous section, the linking between the metadata layer and the documents layer can be done through an index. The index is semantically constructed based on ontology.

Tudhope and Cunliffe (1994) proposes a semantic indexing concept to make more precise the search of the user in text format information, especially Web pages. One of the characteristics of the semantic indexing is the linking of each indexed document with one or more terms described in the ontology.

A semantic index can be manually or automatically created. The manual indexing can be done either collaboratively or by a specialist in the subject to be indexed. The indexing can also be carried through in automatic way by software agents who search Web documents to associate them to terms contained in the index.
 When collaboratively done, the use of notation tools that associate tags to Web documents to categorize them is usual.
Folksonomies (Mathes, 2004 ) can emerge from the most used tags. Usually, folksonomies are simple and emerge from fre-quent use. Folksonomies have the advantage to be shared in the same way as ontologies intend to be. A problem with the use of tags and folksonomies is that they form an uncontrolled vocabulary. It is difficult to exist a consense concerning the terms that must be associated to documents. It is usual that different users have different understandings concerning the same document. This situation provokes an ambiguity, when we consider that different users have different understandings con-cerning the same term and can use the same tags in different documents with different connotations.
On the other hand, folksonomies can evolve to ontologies. Ontologies have a more rigorous formalism with a better de-fined semantic. Usually, a person or a group of specialists is responsible for defining the concepts of the ontology. For exam-ple, in a knowledge management environment in a company, there can be an administrator or a group of administrators with power to create and maintain the ontology of the company.

Thus, the absence of a controlled vocabulary can be improved by using an ontology that defines a domain for the tags used in the creation of the index. Thus, the users attribute terms to documents selectioned just among those that are contained in the ontology.

The indexing of documents can also be done by using automatic methods. Examples of automatic methods for the cate-gorization of texts have been proposed by da Fonseca (2002), Deerwester, Dumais, Furnas, Landauer, and Harshman (1990) and Janik and Kochut (2008).

The proposal of Deerwester et al. (1990) considers the existence of a latent semantic structure implicit in the terms asso-ciated to documents. The proposal uses statistical methods to estimate this latent structure. The analysis of latent semantic indexing (LSI) uses a matrix of terms associated to documents to construct a semantic space in which terms and documents be next to this document if they attend the association patterns. The position in the space serves as a semantic index. In the indexing proposed by Janik and Kochut (2008) , an ontology is used as a base for the classification of the documents.
A document is converted in a graph of entities. The ontological classification of these entities is analyzed to define the cat-egory to which the graph belongs and, finally, the document. da Fonseca (2002) proposes a semantic indexing method in which a software agent searches concepts existing in an ontology in Web documents of an Intranet. The final outcome of this method is a database with concepts and links to doc-uments related to these concepts, which serve as base for query applications.

Independent of the form as it is produced, either in manual or automatic way, the semantic index will possess a list of terms, directly connected to the classrooms of the ontology, that are keys for a list of links pointing with respect to docu-ments that possess some type of relation with a classroom of the ontology. 5. Conceptual navigation
Conceptual navigation is a way of navigating in Web sites when one is inserted in a context. Such context can be repre-sented by an ontology that supplies support to the navigation. A conceptual browser navigates through relationships in a net of concepts to reach documents associated to these concepts.

Fig. 6 shows an example of conceptual navigation. The example has an ontology that contains the concepts h metric i and h requirement i . There is a semantic index that relates the concepts to a set of Web pages.

Conceptual navigation assumes the existence of a semantic index that associates concepts of an ontology to Web pages where these concepts occur. Tudhope (Tudhope &amp; Cunliffe, 1994 ) defines that a semantic indexing system is that one that has a controlled vocabulary, generally manually defined, with the terms of the index representing unique concepts that interrelate among each other. da Fonseca (2002) suggests that the semantic indexing can make more precise the search of the user for literal information, especially in Web pages.

Fig. 7 shows a sequence of steps during a conceptual navigation. In step 1, from the conceptual link h metric i , one has ac-the set of pages related to the concept h requirement i .

Conceptual navigation contributes for knowledge management concerning the use of the knowledge. When using a cor-porative ontology to lead the navigation, the user has the advantage of visualizing the structure of the corporative knowl-edge. This visualization gives to the user the chance of a better understanding of the corporative knowledge. The ontology and the semantic index represent the structure of the knowledge. Additionally, the continuous update of the semantic index eliminates the problem of links pointing to non-existing documents.

Conceptual navigation uses navigation resources of an ontology to access the concepts contained in this ontology. It is possible to use graphical resources to facilitate the navigation and the identification of concepts and relationships. Concep-tual links indicate an address where a graph of concepts of an ontology and its relationships are displayed.
In an environment where one can semantically index all the documents, for example, in an Intranet, the conceptual nav-igation can be used as a tool to query the semantic index. The concepts of the ontology that are visualized by the user can trigger a query in the semantic index.
 Many times, the user starts a search on documents having only an inaccurate idea on what he is searching for Pandit and more related to what the user really wants to query.

In a broader environment, like the Internet, generally, the conceptual navigation presents the advantage of supplying a navigation scope to the user. The user can identify concepts related to the documents through which he has already navi-gated. The user can use these concepts to be oriented through his navigation on the Web.

The conceptual navigation in the Internet also presents advantage when compared to static links. Even with the limitation of the semantic index not containing all the documents that exist in the Internet, the conceptual navigation is capable of supplying access to more documents than the static links that point only to one document. 6. An architecture for the conceptual navigation
The architecture proposed in this article, denominated NavCon, can be divided in two modules. The first module handles the content of Web pages by inserting conceptual links. The conceptual links activate the second module, which is respon-sible for leading the navigation through the ontology until the desired documents. 6.1. Module of conceptual link insertion
The first module has the purpose of inserting conceptual links in Web pages. The process of insertion of conceptual links is illustrated in the Fig. 8 . Usually, an user requires a Web page. A proxy captures the page requested by the user and runs through it trying to identify terms that are associated to concepts of the ontology. The found concepts are marked with con-ceptual links. At the end, the modified page is sent to the client.

The ontology that will be used, represented in OWL language, is configured in the proxy and defines the context in which the user is inserted. The implemented bookmark service offers a resource to select the ontologies that define the context.
The defined context will be common to all the users once the selection of the ontologies is not individually done rather user. The two forms of selection are important when we consider different environments for using the resources of the
Web. For example, in an Intranet inside a company, the context would be defined by a manager or group of managers who would be responsible for configuring the ontologies in the proxy. In a more opened environment, like the Internet, a resource for the user to configure his profile becomes more advantageous. The user can inform which ontologies he prefers to use, thus defining the context in which he desires to be inserted.

The system allows the indication of more than one ontology for the definition of the context. Thus, several ontologies may be used at the same time. The system identifies, through the concepts found in the Web page, which ontology the page is related to.

One can notice that the original page can be any Web page. It is not necessary that the page has been constructed with semantic links. The system is capable of identifying the concepts in the page and to construct adequate links.
For the implementation of the first module, the server proxy WBI 4.5
Java API, appropriate for the creation of intermediate applications in the Web. According to WBI, intermediate applications are to add functionalities to a system when neither the producing data source nor the consumer can be modified.
In the WBI, a service that receives a Web page, crawls the content of this page identifying concepts, searches these con-cepts in predefined ontologies and makes the bookmark in the HTML code of the page inserting a conceptual link was imple-mented. The conceptual link differs from other links, because it points to the address that activates the navigation applet in the ontology. A JavaScript code is also added to the content of the page to display an icon next to the conceptual link. This icon allows, visually, to identify which links of the page are conceptual links distinguishing themselves from the original links of the page.

The icon of conceptual link is displayed only when the pointer of the mouse is over the conceptual link. The intention is to prevent as much as possible that the insertion of conceptual links makes modifications in the original layout of the page.
At the moment, the system that makes the bookmark does not overwrite or replace links that already exist in the page. If a concept identified by the system already has a link created by the constructor of the page, this concept is not marked with the conceptual link. 6.2. Module for navigation in the ontology
The second module of the NavCon realizes, from the activation of the link conceptual, the navigation through the ontology and the retrieving, by using the semantic index, of the HTML documents related to the desired concept.
The navigation tool activated by the conceptual link is an adaptation of the TGLinkBrowser an applet that displays a graph containing the concepts of the ontology and its relationships. The user can navigate through these concepts. Once a concept is selected, it is possible to access external documents related to it.
TGLinkBrowser was developed by using TouchGraph 7 that is a Java library for the creation and navigation of interactive net through mechanism to hold and to drag items, thus moving the vision perspective of the net, to occult and to display nodes and their respective relationships and the possibility of visualization of external resources to the visualized net. Fig. 9 illustrates the implementation of NavCon with TGLinkBrowser. In the moment T1, the conceptual link is activated.
After this activation, represented by the arrow  X  X  X lick X , the procedure MakeXML is executed. This procedure queries the ontology and the semantic index and generates a XML file that describes the graph to be presented by the Touchgraph Applet to the user in the moment t2. MakeXML was implemented by using Jena 2
NavCon shows a net of relationships constructed from the classes of an ontology where nodes indicate classes and edges indicate relationships between the classes.

From the nodes of the graph of concepts, it is possible to open a pop-up window that displays a list of addresses with links that are associated to the concept.

With the use of the semantic index, it is possible to keep the list of addresses updated. The list presents valid addresses only. By keeping the list updated, it is possible to reduce the uncomfortable situation of trying to access outdated pages or those that do not exist any more.
 6.3. Architecture analysis
A question to be analyzed regarding this architecture is related to the performance of the page linking service and the navigation through the ontology. When the content of a Web document is modified before being displayed to the user, there can be an increase in the page load waiting time. Since the tool only inserts links in the text of the document, the percentage of the page content that is modified is low and there is no increase in the page load waiting time detectable by the user.
Other dynamic linking systems, such as Annotea, 9 use similar features and show satisfactory results in relation to the per-formance of the page rendering.

Another point to be analyzed is related to the capacity of the linking service being able to correctly localize the classes of the ontology in the pages. The linking service uses lists of terms related to the concepts of the ontology. Thus, one can con-sider that the capacity to find the concepts in the pages depends on the quality which the association of the terms with the concepts of the ontology is defined with.

Regarding the security, since it adopts a centralized approach, the system offers a high security level. The suggested archi-tecture uses a proxy to make the page linking service available. The security of this service depends on the access security level to the proxy and the permissions to modify the available services. Thus, one can better control the way the pages will be modified.

One can also consider the user privacy during the navigation and the privacy of the retrieved documents. The user privacy the context is done in a proxy, in a centralized way and common to all users. Thus, there is no need to register information about the navigation habits of the users. 7. Example of use of NavCon
This section presents a case study of application of conceptual navigation done with NavCon. For this case study, a big governmental company providing information technology services was chosen. The company implements a system devel-opment methodology based on the CMMI model. The company invests in knowledge management through actions defined by a work group responsible for the elaboration and implantation of the organizational knowledge management.
For the construction of the ontology that was used as example in this study, a survey next to the department of systems development of the company was carried through. Concepts related to the terms that appear in documents produced by development projects were chosen. The concepts were mapped in classes and instances of the ontology. Table 1 presents a list with examples of some classes and instances contained in this ontology. These concepts were defined from terms emerged in documents of projects used by the developers of the company. Names of projects, systems, languages and tools were included. For simplification, Table 1 shows the concepts used in this example only.

Fig. 10 shows an example of a Web page, which exists in the Intranet, with conceptual links inserted by NavCon. In this example, the user needs to do a search about documents in h ODF i format. When the browser of the user loads the required page, NavCon identifies the h ODF i terms contained in the ontology. Then, the system inserts a conceptual link in this term.
NavCon also inserts a JavaScript code in order to display an icon in the side of the marked term to visually identify which links are conceptual links. Conceptual links point to the place of the system that displays concepts related to the concept that the user wants to activate.

After the activation of a conceptual link by the user, an applet is initiated as shown in Fig. 11 . The applet displays a visu-system also presents the name of the relationship between two concepts when the user activates an edge between two nodes.

Finally, in Fig. 12 , a list of links related to the h ODF i concept is displayed. The user obtains the list by positioning the mouse on the concept in the graph. Then, one can access documents pointed by these links.

This way, by navigating in the system, when the user accesses a page that contains the h ODF i term, he identifies that this term is a concept of the ontology of the company. By activating the navigation applet in the ontology, the developer notes that the h ODF i format is related to some systems of the company. Finally, the developer accesses the list of links of the semantic index related to the h ODF i concept and finds documents related to this concept.

Conceptual navigation also contributes to reduce the problem of ambiguity of terms. By searching the term h ASP i , for example, the user can know the definition and the documents related to this term inside the environment of the company. A quick search in the Internet shows that the term h ASP i has several meanings in different contexts. 8. Related work The NavCon architecture presents a proposal that has similarities with the works and systems described in Section 3. Quintura and NavCon use different formats of metadata representation. Quintura uses tags and NavCon uses ontologies.
The noticed similarity is that both systems present an additional resource for the navigation in the metadata. Quintura offers of the ontology.

Compared with semantic browsers Tabulator and Disco, NavCon offers the possibility to navigate on the ontology by using graphical resources. The form of visualization of the RDF net in Tabulator and Disco is basically textual. Moreover, Nav-Con displays a list of documents related to the concepts while Tabulator and Disco just open the document described by the RDF tuple.

Concerning the COHSE system, the similarity with NavCon is the fact that both systems are established in ontologies for the inclusion of links in Web pages. The main difference is that COHSE activates search tools, such as Google, from the con-cepts linked in a Web page while NavCon activates the navigation in the graph of concepts of the ontology. Moreover, Nav-Con uses the semantic index to give access to other Web documents.

Wikify! is a system that also includes links in Web pages. Different from COHSE and NavCon, Wikify! uses the free ency-clopedia Wikipedia as its knowledge base instead of ontologies.

The very Wikipedia 10 is another example of system that inserts dynamic links in Web pages. Links introduced in the pages of the Wikipedia point to other articles of the very Wikipedia.
 Context Browser presents one of the possibilities for conceptual navigation in the Web. The navigation in the Context
Browser concentrates in identifying concepts in pages that display results of queries executed in search tools. The NavCon system tries to identify concepts in any page requested by the user. The navigation through the graph of concepts is a dif-ferential in relation to the exhibition, in the form of side menus, of the concepts made by the Context Browser. 9. Conclusion In this article, the concept of conceptual navigation was presented. The conceptual navigation uses resources of Semantic Web and techniques of open linked systems in order to propose a way for the user to navigate in the Web inserted in a con-text. This context is determined by the used ontology. Thus, one navigates not only in documents, but through the relation-ships among concepts found in documents.

After that, we describe the NavCon architecture for conceptual navigation. This architecture carries through the insertion of conceptual links in Web pages through a proxy. NavCon offers resources to the navigation through the net of concepts of the ontologies, queries the semantic index from a concept of the ontology and accesses documents related to this concept through the semantic index.

As future works, we intend to evolve some of the functionalities that the tool already has. The algorithm of identification of concepts in the Web page needs be worked to improve the precision in the identification of concepts with more than one term. The definition of contexts with more than an ontology needs to be developed in order to NavCon can correctly identify which ontology the concept belongs to. It is interesting to elaborate a form of presenting options to the user when the same concept is located in more than one ontology. Finally, we intend to allow the user select the ontologies and create his indi-vidual context without the need of an administrator of the system to be in charge of this definition.
The use of the presented architecture is suggested as a tool for knowledge management. In corporative environments, ontologies can organize the corporative knowledge while NavCon can act as a resource for the acquisition of this knowledge by the users.
 References
