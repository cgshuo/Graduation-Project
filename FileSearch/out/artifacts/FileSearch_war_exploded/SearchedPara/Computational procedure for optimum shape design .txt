 1. Introduction and background
Optimum design synthesis generically belongs to inverse problems since the shape genesis of the target object needs to arise as a consequence of the required functionality which the object has to deliver. The geometric changes of the target object are imposed by the optimizer within some evolutionary proce-dure and are driven by given excellence criteria and design constraints towards the respective optimum shape, as shown in the generic design process in Fig. 1 .

As direct design synthesis is not viable, it can be partially implemented as iterative shape genesis and subsequent analysis ( Fig. 1 ). Low cost and easy implementation of the complex shape synthesis task can be accomplished by setting up an optimization workflow based on integrating existing geometric modeling (computer-aided design (CAD)) and simulation software (finite elements analysis (FEA)). This approach eliminates the necessity to develop new software and the respective overhead. The relatively slow convergence of the resulting non-gradient multi-application optimization workflow can be relieved by providing for simultaneous execution of many instances of the simulation software. Generally, design optimization is the process of deter-mining the best-possible solution x ( Arora, 1989 ; Rao, 1996 ) according to
Determine : x  X  X  x 1 x 2 x n T such that min f f  X  x  X g g  X  x  X  r 0 , j  X  1 , p h j  X  x  X  X  0 , j  X  1 , r  X  1  X  with n continuous or discrete optimization variables x , p inequal-ity and r equality constraints. The objective function f ( x ) refers to one or several (multi-objective) excellence criteria such as weight, cost, net-present-value (2), etc., while the constraints g ( x ) and h ( x ) specify the capacity to sustain loads, permissible deflections and stresses, restrictions of eigen-frequencies, dimen-sions, technological constraints, technical regulations, etc. In the age of global competition, excellence ( Fig. 2 ) has become crucial, as a non-optimized design will disappear from the market either due to under-performance or due to excessive cost, both caused by its non-optimality.

Fig. 2 presents some of the elements encompassed in the complex design process, which is both information-intensive and analysis-intensive. By augmenting the CAD and analysis tools with optimization procedures, the design process in Fig. 2 can be upgraded to computer-aided optimum design (CAOD) which can be considered a natural evolution of the basic CAD approach.
Design excellence is commonly oversimplified such that it can be benchmarked and measured in terms of some straightforward and tangible criteria such as total mass. This usually leads to sub-optimal performance of the optimized designs in terms of respective total lifetime performance. Instead, the total lifetime value delivered by the design should be used for excellence benchmarking in the  X  X eal world X , which requires combined and coupled financial &amp; engineering modeling ( Vucina et al., 2010 ). Such models must include nonrecurring investment-related terms and recurring operations-related terms modeled as func-tions of the design variables, which all have to be discounted into some aggregate best-compromise excellence criterion. Suitable candidates are the net present value (NPV) and/or internal rate of return (IRR), (2). The net present value is the equivalent aggregate economic potential of all value flows E N ( i ) (investments, revenues, costs, etc.) over all time intervals i , discounted using rate D to the initial moment of the lifecycle (total of n intervals), NPV  X  and the IRR is the discount rate D n which drives the value of the NPV to zero.

The complexity of (1) and the procedure in Fig. 1 have several sources and causes. The most critical one is the complexity of the physical simulation model which typically involves  X  difficulty of geometric representation of complex shapes which needs to be compact while globally and locally faithful,  X  large number of hybrid, continuous and discrete design variables,  X  high non-linearity requiring iterative schemes,  X  implicit and possibly discontinuous structure of the mathematical model,  X  discretization and stepwise schemes for the space and time domains in evaluating constraints and objectives, etc.
The design excellence criteria in the expanded economic space (2) further add to the non-linearity of the design optimization process due to discounting, depreciation, costs of financing, cost of engagement of resources, and other elements.

At the computer-aided implementation level ( Fig. 3 ), CAOD introduces the need for numerical optimization programs, but also for functional integration and harmonization of complemen-tary engineering tools that support typically separate phases in design, namely geometric modeling and engineering analysis. Due to excessive complexity of the physical models, surrogate models are used in early iterations to evaluate excellence and feasibility of candidate designs, while infeasible shapes need to be dis-missed, as shown in Fig. 3 .

The optimizer search strategies, both with gradient-and non-gradient methods, are typically based on (local) solution update schemes x n  X  x o  X  a U S , where x n and x o are the new and old n -dimensional vectors of design variables, respectively, and a is the change in design in some selected search direction S . Population-based (usually global) procedures are based on P n  X  G  X  P
P are populations (sets) of n -dimensional design points, and ! some set of operators acting on the populations. Both options require many evaluations of the designs, i.e. evaluations of excellence and constraints. 2. Approaches and methodologies, related work
Many authors have contributed in different aspects of the multi-disciplinary processes in Fig. 3 . Shape optimization and optimum design deal with changes in shape, which must recur-rently be communicated to the coupled simulation packages (FEA). The changes may include new boundaries of objects, new locations of nodes, FE re-meshing.
 optimization of geometry and shape that has increasingly come under consideration in practice. Different basic approaches to parameterizing shapes and coping with changing geometries have been proposed ( Vanderplaats, 1979 ; Braibant and Fleury, 1984 , 1985 ; Imam, 1982 ). This is also outlined by Samareh (1999) and
Saitou et al. (2005) , where different representations of shape, resulting shape algorithms and several related techniques are reviewed. Early approaches use FE nodal coordinates as shape variables, which typically results in many shape variables and discontinuities in slope between individual elements X  shapes. The dimensionality of the optimum design problems is large and generally changes with re-meshing. Other representations employ parameters of boundary curves as shape variables. The polynomial and spline approaches use interpolation and approx-imation curves or surfaces to represent the shape. Representa-tions based on the  X  X uperposition of shapes X  use preselected component shapes superimposed to model the general shape, whereby participation coefficients of individual component shapes serve as shape variables. Formulations based on blending of preselected component shapes sometimes need less design variables then those where they describe the shape itself, but may provide insufficient local shape control. Parus et al. (2009) present elements of morphing of multiple basic shapes as efficient modeling tools in shape synthesis.
 domains with respective finite element meshes. Control nodes of the design elements are directly linked to design optimization variables and their current positions are used as reference points for new meshing in FEA simulations. Song and Baldwin (1999) use the design points, selected as a small subset of all FE nodes at boundary, for the role of design variables. Least-square B-spline fitting based on those design points is used to define positions of other FE nodes, and changes of mesh, errors and sensitivities are also considered. Cantilever beams, plates with hole and brackets are used as test-cases. Automatic selection of design variables from CAD models is studied by Zhang et al. (1995) . If character-istic points are selected as variables, geometric constraint equa-tions due to continuity requirements apply at the boundary contour. The paper describes the formulation, discusses sensitiv-ity terms and applies the approach to torque arm and bracket optimum shape examples. The CAD ( Rogers and Adams, 1976 ;
Bohm et al., 1984 ; Farin, 1993 ) approaches are built on the feature-based solid modeling concept where the parametric CAD capabilities are used ( Hardee et al., 1999 ; Dai et al., 2005 ).
Feature-based parametric CAD directly provides updated designs for new values of the parameters and preserves the design integrity specified by the user-defined rules and relations. The parameters driven by the optimization variables can be some of the feature-based CAD parameters: properties of basic solid modeling primitives, 2D contour control points, operators gen-erating 3D shapes from 2D contours, locations of elements, etc.
None of the mentioned approaches is supreme in all aspects and there is no ultimate shape parameterization which provides faithful geometric modeling properties including local control, yields sensitivity derivatives, couples well and exchanges data with CAD and FEA programs, and does all this by using a compact shape definition data-set.
 1989 ; Deb and Goel, 2000 ; Cappello and Mancuso, 2003 ) are frequently applied in shape optimization as they are well suited for multi-objective shape design and Pareto-set generation as well as parallelization. Annicchiarico and Cerrolaza (1999) use B-splines to model the boundaries and GAs to optimize shape, and demonstrate the approach using plate in tension and connecting rod as test cases. Papadrakakis and Lagaros (2004) discuss the efficiency of soft computing methodologies for deterministic and reliability-based structural optimization problems.

There are numerous publications that present applications of shape optimization, only a few can be mentioned here. They typically include the integration of shape optimization and FEA, parameterizations, and approximation models. Examples of appli-cation in literature include airfoil multi-point and multi-criteria optimum design, structural shape design (plates, frames, machine elements, vehicle and aircraft components), design of product components, optimum design of tools (sheet metal forming, casting, forging, metal forming), optimization for fatigue resis-tance, etc. Early studies apply parameterizations to optimum design of airfoils, beams in bending, fillets, plates, torque arms, brackets. Bezier and B-spline parameterizations are applied to the problem of optimum shape of a hole in biaxial stress field and fillet shape optimization ( Shyy et al., 1988 ). Pourazady and Fu (1996) present the application of B-spline parameterization and design sensitivities in a numerical procedure applied to shape optimization of beams, arcs, and fillets. Shape optimization is also put into the multi-objective perspective with Pareto front gen-eration ( Deb and Goel, 2000 ), where binary raster initial repre-sentation is used, while plates and bicycle frames are presented as application objects. Shape optimization is also applied to lathe bed and flange design ( Dai et al., 2005 ). Combined 3D scanning and shape optimization with CAD parameterization and shape processing are applied towards optimum design of the connecting rod and fork based on evolutionary strategies ( Garcia et al., 2008 ).
Applying CAD based parameterization, sensitivity terms, FEA, and commercial software to turbine blade shape optimization is presented by Hardee et al. (1999) . An application of B-splines to the representation of boundaries, mesh smoothing, and deploy-ment of SLP and Simplex optimizers to shape optimization of a torque converter clutch are given by Hyun et al. (2004) .
A procedure based on design elements and Bezier bodies with FE meshing ( Kegl, 2000 ), is applied to examples of a plate with hole and a hook. Different approaches to nonparametric shape optimi-zation for real applications are reviewed by Meske et al. (2005) , where a chosen set of surface nodes are used as optimization variables and optimality criteria based optimization is proposed due to many optimization variables. Carswell and Lavery (2006) use B-spline and NURBS surfaces from 2D splines and develop links to CAD formats including IGES (standardized CAD exchange format) and FEA and present application to surfboard and sail-board fins design. These references provide just a glimpse into the variety of approaches applied in shape optimization and the examples used, as a detailed survey is not feasible here.
To complete the design cycle, FEA is typically needed for the evaluation of excellence criteria and constraints with re-meshing procedures in charge of adapting the FE mesh to changing boundaries and resolving areas with heavy element distortions.
FE packages can in some cases be enhanced to provide sensitivity derivatives for gradient search algorithms, r f  X  @ f =@ x , where f is the response and x are the optimum design variables. The sensitivities may be evaluated numerically by finite-difference schemes, thereby increasing the number of function evaluations and truncation and round-off errors. FEA packages can also be upgraded correspondingly to directly provide elements of the sensitivity derivatives. Sensitivities of the structural response with respect to the design variables can be obtained from continuum equilibrium equations using material derivatives, or by evaluating derivatives of the discretized equilibrium equations K
U u  X  F / K U @ u where x are the design variables, K and F the stiffness matrix and load vector, respectively, and u the displacement vector. The design sensitivity term requires the evaluation of the pseudo-load on the right-hand side, which involves evaluations of derivatives of the FE shape functions and Jacobian with respect to the design variables.

Since the design-sensitivity based approach (3) requires major changes in the analysis procedure and software, another method will be pursued in this paper. At the cost of being slower than gradient-based methods, it can provide for more straightforward acceptance of shape optimization in early-stage design in indus-trial environments. This approach employs existing engineering design (CAD) and analysis packages (FEA) with optimum design capabilities built into the workflow developed here, which imple-ments non-gradient optimizers to vary the design parameters.
The idea is that instead of having to build multi-functional large-scale integrated applications, separate existing programs specialized for geometric modeling  X  CAD, engineering analysis, optimization (and other functionalities as needed), can be orche-strated together in a heterogeneous multi-application workflow ( Fig. 3 ). While this has obvious advantages in costs, user-friendli-ness and shorter learning-curves, it also introduces the need for mutual synchronization and coordination of all processes, respec-tive communication between different applications, data transfer and data mining. The changes of the optimization variables must be communicated to the CAD and FEA models (specifications of geometry, loading and boundary conditions), which provide results needed for evaluations of constraints and objective func-tions that steer the design optimizer X  X  search strategy. Moreover, changes in shape imposed by the optimizer occasionally lead to infeasible design geometries which need to be detected and subsequently penalized or dismissed. 3. Proposed parameterization using chained Bezier curves and surfaces
The ambition of the paper is to develop a distributed numer-ical framework for shape optimization which integrates 3D shape acquisition (3D scanning, stereo-photogrammetry, triangulation, data-set compression via parameterization) of initial geometry and genetic-algorithm based shape re-engineering. A geometric knowledge representation and compaction scheme by applying parameterizations of 2D and 3D geometries is also developed.
One of the key aspects of optimum design is appropriate parameterization of shape, which is necessary for compact repre-sentation and storage of shape and efficient simulation of the interaction between the object and its environment. Shape optimization is also an element of enhanced reverse engineering whereby objects are 3D-scanned, resulting geometric data-sets are parameterized and subsequently shape-optimized. 3D scanning of an existing object and corresponding parameteriza-tion ( Fig. 4 ) will provide the initial geometric solution for the optimizer engaged in reverse engineering with shape optimiza-tion. An optical 3D digitizer based on the principle of triangula-tion is applied within this framework, where fringe patterns are projected onto the object for coding of point positions and recorded by two cameras. 3D coordinates for each camera pixel (two cameras) are calculated in high precision, based on stereo-photogrammetry.

As Fig. 4 indicates, simultaneous 2D camera views of a sequence of partial scans of the object are mutually aligned and combined to provide the 3D coordinates of the resulting overall points cloud. However, before the scanned shape can be used as initial solution in shape optimization, the resulting large point clouds need to be replaced by mathematical surfaces ( Fig. 4 ) using parameterizations, which yields the respective shape control variables. These parametric mathematical objects are particular-ized by respective best-fitting to the scanned point clouds. 3.1. Parameterization procedure
Since the parameterization of shape defines the shape optimi-zation variables, it should produce compact control point data-sets in order to reduce the dimensionality of the optimum design search space. In contradiction to the optimization efficiency aspiration, representation of complex 2D and 3D shapes requires many control points and results in high-degree surfaces. Beyond the disadvantage of their non-locality property, such surfaces may also introduce numerical complexity and possible oscillations between control points. Therefore this paper develops a method of chaining low-degree partial surfaces to potentially provide for numerical efficiency, local control and continuity imposed by additional conditions on the piecewise surfaces. Generally, all simulation and analysis programs engaged in a design problem should operate on a single non-redundant geometric database with parameterization scheme ambitions articulated in Fig. 5 . are frequently used as approximation curves defined by corre-sponding control points ( Rogers and Adams, 1976 ; Bohm et al., 1984 ; Farin, 1993 ). Bezier curves (4) are convenient in shape parameterization since they pass through the end control points.
Moreover, the end slopes (7) are defined by the respective control points at the ends, and by analogy for higher-order derivatives.
These properties are used in this paper to impose inter-segment continuity for piecewise chained curves.
 defined as "# with u as the position parameter and P i as the control nodes coordinates, whereby the blending functions B sum to unity for each u . The recursive Bernstein polynomials B are given as
B  X  u  X  X  X  1 u  X  U B i , n 1  X  u  X  X  u U B i 1 , n 1  X  u  X  for which there also exists the more convenient explicit (non-recursive) form:
B  X  u  X  X 
The derivatives are obtained as d P  X  u  X  du  X  n d
P  X  u  X  du 2  X  n  X  n 1  X 
Bezier curves can be extended to 3D Bezier surfaces and bodies by blending Bezier curves, whereby control points of a Bezier curve are replaced by Bezier curves in the orthogonal direction P  X  u , v  X  X  where P i , j are control nodes of the control polyhedron.
Bezier curves do not possess the property of locality and directly link the number of control nodes with the degree of the respective curve. B-splines are a generalization of Bezier curves where the degree of the curve is independent of the number of control points and where the change of one of the control points only affects k segments. B-splines of the ( k-1)th degree through ( n  X  1) nodes P i with knots u i can be defined as P  X  u  X  X  N N where the blending functions N are defined recursively only. B-splines can be further generalized to the rational NURBS.
In this paper, we develop the approach of using chained piecewise Bezier curves and surfaces, (4) X (8), to provide for locality and low-degree of curves. They are piecewise by defini-tion, with each defined only within a partial segment of the entire domain. However, while reducing the problems of locality and possible oscillations, this raises an additional requirement of imposing and ensuring adequate continuity between the piece-wise segments. In the framework of design optimization, chaining of piecewise curves should also not increase the parameterization complexity, as increasing the number of control points would drastically increase the numerical effort due to higher dimension-ality of the search space. The proposed procedure is based on subdividing the domain into patches and chaining piecewise low-degree Bezier curves and surfaces into complex shapes. This provides for numerical simplicity, good geometric modeling capabilities including local control, and low dimensionality of the design optimization search space, in accordance with Fig. 5 .In a way, this procedure acts as a lossy data-set compression technique where the compromise between the small size of the control point data-set and representation accuracy is adjustable and controllable. The data compression aspect refers to reducing the size of the initially given points cloud or initially used number of control points representing the total surface.

The procedure starts by subdividing the problem domain into patches, each of which is assigned an individual approximation curve or surface with corresponding control points. In segments between adjacent original control points where the chained surfaces are to be joined with C 1 continuity, additional control points are interpolated ( Fig. 6 a and b) using the original local points. The number of optimum design variables is thereby not increased since the generated points depend on the original ones.
Fig. 6 c demonstrates the scheme in 3D, and Fig. 6 d X  X  apply the procedure to the case of the step function in 3D defined over a circular domain.

In each direction of the surface (e.g. x , y ), for the case in Fig. 6 a, the total number of control points N P_tot (encompassing original control points N P_orig and interpolated points) can be derived as N N where N C is the number of chained curves and D B the degree of the piecewise Bezier curves in the respective direction. The scheme in Fig. 6 b joins adjacent curves in a control point, generating two additional points for slope continuity. Additional control points are in the cases in Fig. 6 interpolated linearly,
P  X  P L  X  a U  X  P R P L  X  , a A  X  0 , 1  X  X  11  X  where P L and P R are the control points defining the segment where adjacent Bezier curves are joined, a is the blending operator, and P ad the additional control point. Fig. 6 b illustrates how an intermediate point (4 a  X  1 b ) can be fixed by boundary conditions during shape optimization without sacrificing the local
C continuity. Procedures for data mapping are developed to relate the original data points, expanded set of Bezier control points and individual Bezier curves.

The procedure in Fig. 7 can be used to determine the optimum structure of the set of variables for shape optimization, and is actually an optimization process itself. It can provide the sub-division of some given complex target surface into patches by optimizing the parameters listed as inputs: number of patches in x and y directions and respective degrees of piecewise Bezier curves and/or surfaces. It can use the minimum offset from the target surface as objective and permissible total offset as con-straint. The procedure in Fig. 8 generates the additional control points for C 1 inter-patch continuity for the partitioning of the surface into patches.
 parameterization of shape of the 3D wind-turbine blade based on
NACA 4415 airfoils in Fig. 9 , whereby 4 2 3rd degree patches are chained with C 1 continuity. Fig. 9 a presents the application of the developed parameterization ( Figs. 6 and 8 ) with the NACA airfoil contour, whereby the 2D airfoil points cloud (82 points) is imported to represent the target shape. Different control point structures and degrees of chained Bezier curves were applied as parameterizations, (4), (6), (11), and the respective shape vari-ables were optimized for minimum offsets from the target airfoil points. Initial 3D representations of the overall 3D blade can be obtained by lining up sets of control points of parameterized airfoils along the blade axis with appropriate mutual rotation and scaling as shown in Fig. 9 b (control points set), which yields a resulting 3D surface as in Fig. 9 c. 3.2. Advantages and enhancements of the procedure parameterization as they provide many useful properties such as locality and adjustable degree of continuity. However, repre-sentation of shape based on chained Bezier curves and surfaces is favored and developed in this paper because of several advan-tages offered by this approach. With the approach developed here ( Figs. 6 and 8 ), local piecewise curves or surface patches of different degrees can be chained easily. Hence more detailed representation in certain areas (more control points, higher-order curves, small regions) can be chained with less demanding areas (fewer control points, lower-order curves, patches extending over larger area), while these areas can be represented and processed independently in parallel before chaining. Moreover, as opposed to B-splines where recursive evaluation (9) is necessary, explicit expressions (6) exist for Bezier curves. Boundary conditions can simply be imposed directly by making the respective points anywhere in the data-set the end-points of segments, (4), (7).
Consequently, the overall integral curve can pass through selected intermediate points and still maintain C 1 or higher continuity at those points if requested. Numerical efficiency is provided for by simple implementation of non-recursive Bezier formulas and their chaining, and possibly parallel processing of individual patches.

Point grids with unevenly distributed points and flexible redistribution of control points are implemented easily. Grid points redistribution schemes such as (13), which is developed here, can provide more representation accuracy in the vicinity of edges without increasing the density of the grid. Re-allocating the control points is a way to provide for better local representation accuracy without increasing the dimensionality of the shape optimization problem, but a  X  X etter X  distribution of the support points implies non-uniform data grids.

The grid points redistribution procedure developed here is based on the objective to condense (compress) the grid points in the regions where the shape of the object undergoes intensive change, and consists of three steps: (1) detect  X  X harp X  edges within the domain, (2) construct lines normal to the detected edges starting from (3) compress (condense) the grid of data points in some selected
A simple  X  X dge detection X  procedure scans the data points cloud and evaluates first-order and second-order derivatives of f ( x , y ) based on respective finite-difference schemes applied to the data points, for example f where by the expressions indicate and approximately quantify the respective local slopes and curvatures contained in the data-sets. Intensive local change in slopes and small local radii of curvature indicate positions of edge points which can identify segments of edges and corresponding directions of normals. The  X  X ompression X  of grid points towards the edges is here accom-plished as shown in Fig. 10 .

In Fig. 10 , P and Q are some external and internal grid points (internal denotes the concave side, the same side of edge as center of curvature), t and n are the respective local tangent and normal for the edge e , C is the local center of curvature of the edge, E is the projection of P and Q on the edge and D is the end-point of the domain on the normal n .

The compression towards the edges can be implemented for example by quadratic scaling,
Q  X  E
As demonstrated in the examples in Section 5 , the procedure developed in Figs. 10 and (13) introduces significant improve-ment of the local representation capacity and accuracy of the mesh of chained Bezier piecewise patches in the neighborhood of the sharp edges. While edges cannot be represented as areas with slope discontinuity by a single integral patchwork of surfaces without user-defined partitioning of the entire object, these edges are here represented by continuous surfaces with high local gradients, resulting in dense iso-lines. 4. Computational procedure for optimum design and implementation zation are implemented in a dedicated workflow as multi-appli-cation processes, including: (1) Numerical optimizers ( Goldberg, 1989 ), (2) Finite element analysis software ( Adina, 2005 ; Cook et al., 1989 ), (3) In-house control and synchronization procedures developed
The process flows ( Fig. 11 ) and the sequence of mutual asynchronous executions of the applications is implemented via
SHELL calls to the operating system from within individual applications. The applications can mutually communicate by sending remote commands to each other via specialized functions that simulate local keyboard commands for the respective  X  X emo-tely X  called applications. Synchronization is implemented by verifying whether the remotely engaged application has termi-nated and whether the output files have been generated accord-ingly. After a preset period, in cases where the, respectively, called application has not completed its assignment successfully, the master application terminates the respective instance of the slave application and ignores the corresponding data flow. Such a situation happens for example when the optimizer generates an invalid or inconsistent geometry of the candidate design as illustrated in Fig. 12 .
 In the generic numerical implementation of the process in
Fig. 11 , a dedicated multi-application framework is set up. One application is assigned the role of the workflow manager (WM) for the overall process, and this application manages and moni-tors the operation of all other applications (workers  X  WR) that participate in the workflow. The WRs perform numerical tasks and possibly execute corresponding independent applications which are needed in the workflow, such as FEA, CAD, custom-made simulators, etc.

The necessary components of the workflow include optimiza-tion, geometric modeling for shape synthesis, and problem simulation &amp; evaluation (FEA) functionalities. Instead of an integral application, a heterogeneous program environment is developed, where multiple existing specialized applications are in charge of the above functions. The WM can communicate with multiple WRs by using the TCP/IP protocol, whereby the layout developed here involves a single client and many servers which expose different services.

The client implements the basic optimization workflow shown in Fig. 11 . It receives the GA chromosomes of different candidate solutions in subsequent generations of the GA populations. Instead of doing the necessary FEA simulations locally and sequentially, it sub-contracts this by calling for the services of the respective networked servers which expose the services of the corresponding locally installed FEA applications. This is done asynchronously and hence the client can manage the assignments of an array of server instances and monitor their respective results. Externally generated keystrokes, necessary to invoke and steer their respective behavior, are passed to the local applications. Delays are initiated where necessary in order for some operations (such as disk I/O) to be completed. In order to expose the services of local programs, listener programs must be launched at the servers with specific parameters, while the individual services are defined using operation attributes. The methods of the services exposed by the servers involve the services of independent specialized applications locally installed on the respective servers, such as FEA.

This approach is very general and makes no use of any specifics of the particular type of application deployed in the analysis. It is also generic in the sense that a program-wrapper for any external application can be written within the server class as part of the operation contract. The assignment is executed asynchronously without full-time engaging the client, which can process other hosts and services in the mean time. The input files of the respective analysis packages (FEA) are prepared by the client by updating the generic input file template with specific data for the particular candidate design in a process of input file inverse data mining. The output files are data-mined for neces-sary analysis results needed for the evaluation of objective functions and constraints.

The developed heterogeneous workflow consisting of different existing applications is an efficient low-cost distributed system for shape optimization and optimum design. The direct non-brokered communication between the client and servers provides much more hands-on control over the optimum design process than it is possible within standard clusters where individual requests are brokered by cluster manager software acting as intermediary. While being slower than design-sensitivity based approaches, this approach in Fig. 11 offers low cost, full flexibility and usage of existing applications familiar to the practicing designer.
 infeasible shapes. The geometric infeasibilities arise due to the fact that the control points of the parametric geometric entities are directly steered by the search algorithm of the optimizer. This may produce shape inconsistencies of the types shown in Fig. 12 .
 types shown in Fig. 12 are detected and dismissed within the shape optimization workflow itself. The identification of such cases is here implemented directly using geometric criteria, but also based on respective response of external applications engaged in the workflow. For example, the FE simulator may not be able to complete the re-meshing procedure successfully due to excessive deformation of individual elements.
 optimization according to several criteria such as minimum mass or maximum aerodynamic lift/drag ratio in the case in Fig. 9 . The optimizer varies the shape variables ( Fig. 11 ), generates the updated geometry of the sub-domains, and generates the addi-tional control points needed for C 1 continuity ( Fig. 8 ). The current candidate shape is dismissed if any of the infeasible situations in
Fig. 12 have occurred, if the FEA package cannot complete the meshing procedure, if there is excessive distortion of the finite elements, or if the analysis does not yield meaningful results. The developed procedure is robust since it poses no specific requirements on the simulation software and can handle invalid input data, non-regular executions of the simulator, and dead-locks in execution of the simulation package.

GA-based optimum design was applied here with populations between 50 and 200 and up to 500 generations. Uniform popula-tion creation, variable number of elite members, variable crossover share, ranked fitness scaling, stochastic uniform selec-tion, scattered crossover and Gaussian mutation operators were applied. 5. Test cases and results
Single Bezier and B-spline curves and surfaces are known to be inaccurate in approximating geometric data-sets if: (a) they contain sharp corners or edges, (b) multiple inflection points are present, and (c) intensive changes in curvatures exist in the data-set. Identifying such features in the raw points cloud can provide foundations towards subdividing the domain into regions, such that a faithful parametric approximation of the data-set can be accomplished. Generally, if a points cloud is to be approximated by some piecewise parametric curve or surface, there are two steps involved. The data-set is first searched for points which can be identified to belong to sharp edges or other potential bound-aries suitable for subdivision of the object into a patchwork of piecewise surfaces. Corners or sharp edges are typically charac-terized by intensive change in slope (tangents), and joint points/ lines are typically selected at locations where the curvature experiences sudden or intensive change. Different criteria and algorithms exist to identify them. Typically, the procedures in charge of subdivision of the domain are based on try-and-error approaches such that the error is maintained below a certain threshold. The approximation error between the data-set and the parametric curve/surface can be captured as the respective offset distance or enclosed volume. This paper however, focuses on the direct approach without the feature-based subdivision of the domain. 5.1. Parameterization of edged surfaces
The parameterization technique developed in this paper according to Fig. 6 , (3), (11) is applied to a 3D example ( Fig. 13 a), where a half-sphere emerges from a zero-plane yield-ing a sharp curved edge within the domain. The following figures present parameterizations with different numbers of chained patches and degrees of basis functions in individual directions, resulting in diverse respective grids of control points. The num-bers and degrees of surface patches need not be the same in both directions, as in most practical cases these parameters would be non-symmetric according to the representation requirements. Initially, uniform grids are used.

The initial parameterization is based on 2 2 surface patches of degrees 3 3 controlled by 6 6 points. Increasing the degrees of the patches improves the representation slightly but does not contribute much to local edge sharpness. Fig. 14 shows the resulting surfaces for the control point structures in Fig. 13 :
Fig. 14 a is the result of the grid in Fig. 13 b, while the resulting surfaces in Figs. 14 b and c are based on increasing the number of chained patches rather than their degrees. In Fig. 14 b, a grid for 4 4 surface patches of degrees 3 3 controlled by 10 10 points is used, but far denser grids seem necessary to capture the edges.
Although the areas in edge vicinity are modeled more accurately in Fig. 14 c, this representation is still not satisfactory despite the fact that 1764 (42 42) shape variables are used, which makes this parameterization inadequate for shape optimization due to high dimensionality of the search space.

This is a hard test-case for any integral parameterization since the object to be parameterized contains sharp edges which are not aligned with any coordinate direction or CAD primitive. The difficulty of this test problem is due to the fact that there is no a-priori user-defined subdivision of the overall domain into sub-domains such as sphere and plane. Consequently, a single para-meterization scheme has to extend over the entire design domain which contains  X  X nknown X  edges. This integral parameterization will be used within the framework of shape optimization, and the shape of the candidate designs will change from iteration to iteration. Therefore, the shape and position of the edges between different primitives will not be fixed, and the overall parameter-ization has to be robust with respect to such changes. It is also of critical importance to have as few shape variables as possible for the requested global and local representation accuracy, as the direct consequence is the dimensionality of search space. Unfor-tunately, a whole-domain integral parameterization without edge-based domain subdivision cannot model sharp edges unless many control points are deployed as shape variables.

The following figures demonstrate the approach based on redistributing the control points, Figs. 10 and 13 , developed to comply with the requirement that the number of control points is kept as small as possible, whereby better local representation accuracy is achieved by means of a better distribution of the points within the domain.

The developed approach generally combines the detection of edges in the dataset, construction of lines normal to edges, and condensation of the data-points grid into the vicinity of the edges ( Fig. 10 ). The improved local representation capacity and accuracy of the patchwork of chained piecewise surfaces with the same number of shape variables for objects containing edges can be observed in Fig. 15 . For comparison, the developed compression technique towards the edge has been applied in the first quadrant only. The integral chained-surfaces model can now represent edges by developing higher local gradients of the mosaic-like patchwork of surfaces. Figs. 15 d and e demonstrate the impact of the developed grid condensation procedure. The sharp edge, while still part of continuous surface, can now be represented in a much more localized manner.
 Next, best-fitting of the various cases of parametric chained
Bezier surfaces in Figs. 13 X 15 to the points cloud ( Q ) extracted from the target object (half-sphere emerging from zero-plane) was applied such that the respective control points set ( P )is optimized for the minimum total offset ( E ) criterion E  X  P  X  X  1 2
Best-fitting of parametric surfaces can be done independently and separately within individual regions with the approach developed here. Continuity conditions, C 1 or higher, are then imposed on the joints between segments unless they are identi-fied as sharp corners or edges and intentionally left at C continuity.

Best fitting the parametric curves/surfaces to the given data-sets (point clouds) is based on minimizing the sum of squared distances between the data points and corresponding points on the curve with respect to the parameters of the approximation curves (14). For Bezier and B-spline curves/surfaces, this criterion provides a linear system which yields the unknown parameters, the control points positions. The matching points on the para-metric curves are usually located such that the respective value of the position parameter of the curve corresponds to the sum of chord lengths up to the particular data point divided by total sum of chord lengths for the respective segment.

The procedure based on chaining piecewise surfaces and generating additional points for continuity provides for comple-tely uncoupled and isolated best fitting at the level of individual surface patches. They are fitted to individually corresponding spatial sub-sets of the given points cloud independently of each other. Afterwards, the individual patches are chained ( Fig. 8 )to preserve continuity. This is illustrated in Fig. 16 a, where the half-sphere from Figs. 13 and 14 is cut off and leveled at half its amplitude, and only the affected surface patches are re-fitted and subsequently chained with the patches which remained unchanged. Another example is the two-sided closed plate struc-ture in Figs. 16 b and c, completely parameterized by a single
Bezier surface patchwork extending over both its faces, with a quadratic initial grid projected onto the circular domain.
The demanding test case of the half-sphere emerging from a zero-plane was also used to compare the performance of different approaches and parameterizations including Bezier and B-spline surfaces. Different multitudes of variable-degree surfaces were chained in the x and y coordinate directions. Special focus was given to the capability of the respective approach to handle the sharp edge between the semi-sphere and the zero-plane, located within individual patches. The efficiency of representing sharp edges using a single chained surface could also be benchmarked by considering the intensity of change of respective derivatives in the edge zones. An additional degree of difficulty is caused by the inflection points (zones) contained in the control points grid, as the center of curvature switches side. The zones around the sharp edges were also considered in relation to the developed proce-dure given in (13) and Fig. 10 , the compression of the control points grid towards the edges contained in the control points cloud. The offsets were evaluated on a grid with 1000 sampling points spanning the entire domain, while alternatively their local distribution around the sharp edges could also be used.
Table 1 presents a comparison of different cases of best-fitting chained Bezier surface patches defined by respective degrees of individual patches and their multitude, whereby the performance is benchmarked in terms of average and maximum offsets for all the sampling points.

It can be observed that higher multiplicity of chained patches increases the approximation quality and reduces the average offset between the points cloud and the approximation surface.
Also, as expected, chained low-degree Bezier surfaces outperform single higher-order surfaces with the same total number of control points as the latter may experience intensive local varia-tions. Table 1 also demonstrates that the control points conden-sation towards edges becomes more effective with a higher number of chained surfaces as the sampling points grid used here includes relatively few points in edge vicinity. using 3 3 3rd degree patches with 8 8 control points and 10 10 3rd degree surface patches with 22 22 control points, two of the cases given in Table 1 . Figs. 17 a and d present the overall patchwise approximations surfaces for the two cases.
Figs. 17 b and c present the corresponding approximation error distribution between the best-fitted chained surfaces and the given points cloud for the former case (3 3 surfaces), and
Figs. 17 e and f present the error distribution for the latter case, 10 10 chained surfaces. In all cases, control points re-allocation and compression towards the sharp edge is applied in the first quadrant only, which can be well noticed in all figures as the respective edges are expressed far better.

Fig. 17 clearly indicates the fact that the re-allocation of the control points towards the sharp edges (13) in the first quadrants significantly improves the local accuracy in the vicinity of the edge. Obviously, both Table 1 and Fig. 17 reveal the fact that more chained surfaces with more control points result in higher approximation accuracy, however at the cost of having, respec-tively, more shape optimization variables.

Fig. 18 presents the results of the approximating the same example of half-sphere emerging from zero-plane by using different B-spline configurations, (9). Approximation surfaces and error surfaces after best-fitting ( Eberly, 2008 ) are shown for the cases of 8 8, 10 10 and 12 12 control points.

It can generally be observed for all cases that similar approx-imation accuracy is achieved as with chained Bezier surfaces, however the latter can express the edges more accurately in areas where grid compression towards the edge is applied ( Fig. 17 ).
As elaborated earlier, these examples show that the proposed procedure (given by (6), (11), Fig. 8 ) is a viable method, given its advantages in non-recursive evaluation, chaining of patches of different degrees, imposing of prescribed fixed positions at inter-mediate points (for example for boundary conditions) while maintaining C 1 continuity, and uncoupled processing of indivi-dual patches.

The next test example is a closed-surfaces object consisting of all faces of a quarter-cone as shown in Fig. 19 , where all side surfaces are jointly parameterized by a single chained Bezier patchwork like in previous cases. All edges are modeled to maintain C 1 continuity, only the vertical z -axis edge is C continuous for comparison. A single control points grid has to stretch over all surfaces, which is implemented as shown in Fig. 19 a.

Fig. 19 demonstrates that the developed parameterization method can jointly represent closed-volume 3D objects which contain sharp edges using a single Bezier surfaces patchwork that stretches over the entire object (encompasses all faces), without a-priori domain decomposition carried out by the user. This makes it convenient for shape optimization, since the geometry undergoes continuous change. It also shows that the developed grid condensation procedure provides a way to model objects with edges and multiple faces with improved local accuracy by re-allocating the points of the grid rather then increasing their respective multiplicity. This is crucial in optimum design where high dimensionality of the shape variables vector dramatically increases the run time of the search algorithm. These features also highlight the developed procedure as being efficient for geometric knowledge representation and compaction in 3D machine vision and shape optimization. 5.2. Parameterizations for shape optimization of a plate with variable-direction biaxial stress field
Shape optimization of a hole in a biaxial stress field is the subject of the third test-case ( Shyy et al., 1988 ). The excellence criterion is the maximum Von Mises stress for a plate with a 2:1 loading ratio under the condition that the prescribed area of the hole is maintained. Fig. 20 presents the initial solution with a circular hole shape. 2D chained Bezier parameterization with only five design (shape) variables is used for the parametric curve defining the boundary of the hole, and a relatively coarse FE mesh is applied.
Fig. 21 presents the results using the procedure developed in this paper, in this case using C 2 continuous piecewise cubic para-meterization for comparison. A genetic algorithm based optimizer is applied with a population of 20 individuals, two elite indivi-duals, ranking-based fitness scaling, uniform selection, scattered crossover with probability of 0.8, Gaussian mutation. The opti-mized shape comes close to the expected elliptical shape ( Shyy et al., 1988 ).

Fig. 22 demonstrates the results obtained for the same pro-blem as in Fig. 21 but with reversed loading ratio, in this case 1:2.
As expected, starting from the initial shape in Fig. 20 , this shape optimization results in the same optimized shape as that in
Fig. 21 (case 2:1 loading) but rotated by 90 1 . It yields the same result as if the optimum design shown in Fig. 21 had undergone pure  X  X igid body X  rotation by 90 o . Therefore the optimum design procedure ( Figs. 6, 8, and 11 ) and in particular the developed parameterization scheme prove to be invariant under coordinate transformation (rotation) of the given problem, since re-shaping by means of optimization has resulted in the final shape equiva-lent to  X  X igid X  shape rotation of the initial shape. Figs. 21 and 22 provide results that are sufficiently close in values and distribu-tions (given the intentionally small-sized data-sets both for parameterization and discretization), and agree with the expected elliptic shapes. This matching becomes further enhanced if more shape parameters are used for optimum design and if finer FE meshes are applied.

The second test is illustrated in Fig. 23 a, where an asymmetric initial shape is subjected to optimum design for symmetric (1:1) loading and boundary conditions.

The optimum design process ( Figs. 6, 8, and 11 ) results in the symmetric circular shape shown in Fig. 23 a, while Fig. 23 b presents optimized designs obtained by the procedure in Fig. 11 for loading ratios ranging from 2:1 to 1:5.

The results in Figs. 21 X 23 are obtained with only five shape parameters, four design elements, and relatively coarse FE meshes in order to illustrate the developed procedure. More optimum design variables engaged as shape parameters and finer meshes result in higher accuracy, as better local shape control is possible and better sampling of stresses in FE Gauss support points closer to boundaries can be captured.

The generic features of optimum design as an inverse proce-dure can also be observed. In the vicinity of the optimum design, the sensitivity of the change in shape with respect to minimizing the maximum Von Mises stress in the entire FE domain (all elements) is relatively low. This is not very suitable for non-gradient and especially evolutionary optimizers and leads to slower convergence, as different designs can result in similar values of this criterion, the maximum values thereby possibly occurring at different locations. Convergence and efficiency also depend on initial shapes and ranges. 6. Conclusions
The optimum design procedure based on parameterizations using chained curves and/or surfaces as developed in this paper can be seen as a decision support system for optimum design that can be implemented inexpensively within the existing work environment with existing FEA packages or other simulation programs. The system generally integrates 3D shape acquisition (geometric knowledge) of the initial shape, a geometric knowl-edge representation/compaction scheme by parameterization of 2D and 3D shape, geometric modeling, genetic-algorithm based shape optimum design, and a custom-developed adaptive dis-tributed workflow.

A parameterization for complex 2D and 3D shapes based on adaptive chaining of low-degree Bezier curves and surfaces is developed and presented for the purpose of serving optimum design problems. Locality is provided for by its piecewise approx-imation structure, and continuity is imposed by automatically interpolating additional control points at joint interfaces. The approach developed here can adaptively select an adequate number of Bezier patches, their degree and positions such that a compact set of control points is applied for given requirements of accuracy. A re-allocation procedure for the grid points is also developed in order to improve the local representation accuracy for objects which contain edges, without sacrificing the desired low dimensionality of the shape variables vector. The developed overall procedure also provides non-recursive evaluation, chain-ing of surfaces of different degrees, fixing of boundary conditions at intermediate points, and uncoupled parallel best-fitting of individual patches.

Future work will proceed in the direction of using the para-meterization in compact representations of 3D shapes and opti-mum design, including the implicit representations using level-set surfaces.
 Acknowledgments
This work was supported by the Ministry of Science, Education and Sports of Croatia (023-0231744-3113). The authors also wish to thank Mr. Milan Curkovic, graduate student, for his assistance with the test examples.
 References
