
Tomonari Masada 1 , Atsuhiro Takasu 2 , Yuichiro Shibata 1 ,andKiyoshiOguri 1 This paper provides a simple and efficient approach to Bayesian analysis of topic time-dependency for large-scale document sets. Our aim is to improve the generalization power of latent Dirichlet allocation (LDA) [3] in terms of test data perplexity by proposing a topic model where we use document times-tamps as a key factor for improvement. Our approach is based on the intu-ition that a careful analysis of word fre quency differences among time points will help topic extraction by LDA-like Bayesian models. We propose a simple time-dependent variant of LDA and devise a special scheduling of variational Bayesian (VB) inference [3]. In our model, a different word multinomial distribu-tion is prepared for each time point. When we have T time points and K topics, T  X  K word multinomials are prepared in total. As this leads to a large num-ber of parameters, overfitting becomes cri tical. Our contribution to this issue is two-fold: 1. We propose a non-trivial way of defining Dirichlet priors over T  X  K word 2. We propose a special scheduling of VB inference. As an initialization, VB We conduct comprehensive experiments on six datasets, four of which are in English, one in Japanese, and the rest one in Korean. The largest dataset con-tains 368,000 documents, a set of one-year news articles, and 32,800,000 unique document-word pairs. Since our model has a simple construction, it does not sacrifice the efficiency in computation cost for mathematical sophistication and thus can easily handle large datasets. Our approach requires at most 1.5 times as much computation time as LDA in the framework of VB inference paral-lelized for multi-core CPU. With this efficiency, our approach can improve the generalization power of LDA and further that of Topics over Time (TOT) [16], a well-known time-dependent variant of LDA, by up to 15 percent.

The rest of the paper is organized as follows. Section 2 discusses previous works related to topical trend analysis. Section 3 provides the details of our proposal. Section 4 presents the settings and the r esults of our evaluation experiments. Section 5 concludes the paper with discussions and future work. Recent Web analysis has focused on processing timestamped documents, because we can observe an immense increase in the number of realtime posts sent to a variety of SNS sites, e.g. Twitter, Facebook, etc. Bayesian approach, one of the mainstreams in text mining, also seeks a method for analyzing time-dependency of topics latent in large-scale documen t sets to capture salient topical trends.
We briefly introduce LDA [3], a standard document model in Bayesian text mining. With LDA, we can take each document as a conglomerate of multiple se-mantic contents. LDA characterizes each document by a probability distribution defined over a fixed number K of latent topics. Precisely, LDA attaches a multi-nomial distribution Multi (  X  j ) defined over the topics { c 1 ,...,c K } to each of the given documents { d 1 ,...,d J } ,where  X  j denotes the parameters (  X  j 1 ,..., X  jK )of the topic multinomial for document d j . We can regard  X  jk as the probability that any word token in document d j expresses topic c k , not the other topics. Further, LDA characterizes each to pic by the multinomial Multi (  X  k ) defined over the fixed word set { v 1 ,...,v W } ,where  X  k denotes the parameters (  X  k 1 ,..., X  kW )of the word multinomial for topic c k . We can regard  X  kw as the probability that topic c k isexpressedbyanytokenofword v w , not of the other words.

A remarkable feature of LDA is that all topic multinomial parameters {  X  1 , ..., X  J } are drawn from a single common Dirichlet prior distribution Di (  X  ), where  X  denotes the set of the K hyperparamters (  X  1 ,..., X  K ). Further, all word multinomial parameters {  X  1 ,..., X  K } are drawn from another single common Dirichlet prior Di (  X  ), where  X  denotes the W hyperparamters (  X  1 ,..., X  W ). In the following, we simply call Di (  X  ) topic Dirichlet prior and call Di (  X  )word Dirichlet prior. With these two priors, LDA can reduce the diversity among the topic multinomials and also the diversity among the word multinomials, and thus can achieve a generalizat ion power better than PLSI [7].

When making LDA time-dependent, we can consider the following two as-sumptions [12]: (i) Topic distributions vary along time; (ii) Word distributions vary along time. Many previous works [2,10,11,15] adopt the former assumption. While Srebro et al. [12] give discussions supporting the former, other works adopt the latter [8] or combine both [9]. In this paper, we adopt the latter assumption and prepare a different word multinomial distribution for each time point. In [11], a highly sophisticated modeling is devised, and the former assumption is combined with the assumption of infinite topics [13]. While our approach may be combined with nonparametric approach, we do not pursue this direction in this paper. The topic model in [8] is similar to ours, because this model has a differ-ent word multinomial for each time point . However, this work f urther considers multiscale effects of the past word frequencies at each time point and realizes a flexible time-dependent posterior estimation. Consequently, the model becomes quite complicated and requires an approximated inference, whose implementa-tion becomes intricate when we attempt t o achieve a tolerable computation cost. In contrast, our approach seeks an efficient balance between generalization power and computation cost. 3.1 Model Construction In this paper, we model the time-dependency of topics by using a different word multinomial for each of the given time points { s 1 ,...,s T } . Therefore, our model has T  X  K word multinomials Multi (  X  tk ), t =1 ,...,T , k =1 ,...,K ,where  X  tk denotes the multinomial parameters (  X  tk 1 ,..., X  tkW ). That is, we have T  X  K  X  W word multinomial parameters in total, as in [8]. However, we take an approach different from [8] in defining Dirichlet priors over the word multinomials.
As is discussed in Section 2, LDA has K word multinomials each corresponding to a different topic and defines a single Dirichlet prior over these K multinomials. Therefore, we first defined a single Dirichlet prior over all T  X  K multinomials in our model. However, a preliminary exp eriment showed that overfitting was too strongly suppressed and that a poor generalization power was obtained.
Therefore, in another preliminary exp eriment, we tested the three options in Table 1. As a result, Option 1 achi eved success for many datasets. Op-tion 1 defines a common Dirichlet prior Di (  X  k )overthe T word multinomi-als Multi (  X  1 k ) ,..., Multi (  X  Tk )foreach k .  X  k refers to the hyperparameters (  X  k 1 ,..., X  kW )of Di (  X  k ) prepared for topic c k .Asthe T word multinomials Multi (  X  1 k ) ,..., Multi (  X  Tk ) are drawn from the same prior, we have a smooth-ing only separately for each topic, not over all word multinomials. Therefore, we can achieve a more moderate smoothing than a single common prior. However, Option 3 also gave impressive results for some datasets. When we take Option 3, the hyperparameters of the word Dirichlet priors are endowed with fully fine-grained indices  X  tkw . Since these indices are as fine-grained as the indices of the word multinomial parameters  X  tkw , Option 3 gives a smoothing effect more mod-erate than Option 1 and thus showed poor results due to overfitting for several datasets. However, since Option 3 was effective for some datasets, we combine Option 1 with Option 3 in our inference, as will be described in Section 3.2. The detailed results of the preliminary experiments will be given in Section 4.4.
The topic model proposed in [8] adopts Option 3 and does not consider Op-tion 1 and Option 2. That is, the hyperparameters of the word Dirichlet pri-ors are endowed with fully fine-grained indices  X  tkw . The model in [8] seems to avoid overfitting with multiscale analysis, which can exploit the interaction among word Dirichlet priors attached to different time points. This may cause a smoothing effect and thus may lead to a good generalization power. In contrast, we avoid such complication in modeling and consider various ways of indexing the hyperparameters of the word Dirichlet priors, as in Table 1, to obtain a special scheduling of VB inference wher e some of these options are combined. 3.2 Posterior Inference For posterior inference, we adopt variational Bayesian (VB) inference [3]. One reason of this choice is that parallelization is easier than collapsed Gibbs sam-pling (CGS) [5] and collapsed variational Bayesian (CVB) inference [14]. Many operations in VB inference are embarrassingly parallel like EM alogorithm [4], and thus our approach can scale up to larger datasets. Another reason is that VB achieves a generalization power comparable with CGS and CVB [1].

Due to space limitation, we only give an outline of the formula derivation for our VB, which is similar to that for LDA [3]. Let (  X  j 1 ,..., X  jK ) be the parameters of the variational Dirichlet posterior defined over the topics { c 1 ,...,c K } and attached to document d j .Intuitively,  X  jk tells how strongly the word tokens in document d j express topic c k .Further,let(  X  tk 1 ,..., X  tkW ) be the parameters of the variational Dirichlet posterior defined over the words { v 1 ,...,v W } and attached to the pair of time point s t and topic c k .Intuitively,  X  tkw tells how strongly topic c k is expressed by the tokens of word v w at time point s t .Witha variational approximation, we obtain the lower bound L of the log evidence as:
L = where  X  jwk , satisfying k  X  jwk = 1, refers to the approxim ated posterior proba-bility that a token of word v w in document d j expresses topic c k . n jw denotes the number of the tokens of word v w in document d j .Further,  X  (resp.  X  ) denotes the gamma (resp. digamma) function, and t j  X  X  1 ,...,T } is the index of the timestamp of document d j .

From the partial derivatives of L , we obtain the following update formulas: where  X   X  1 is the inverse of the digamma function.

While we used the formulas above in a preliminary experiment, any start from a random initialization was likely to find a poor local optimum. Therefore, we propose a special initialization . We first conduct VB for LDA with a random initialization by ignoring all timestamps. After a fixed number of iterations (50 iterations in our experiments) of this VB inference, we initialize the parameters of our model with the parameters estimated by this VB for LDA and start the VB for our model by using the update formulas shown above.

In the VB for LDA as an initialization, we use the following update formulas: where  X  kw is the approximated posterior parameter telling how strongly topic c k is expressed by the tokens of word v w . These three formulas correspond to Eqs. (2), (3), and (4), respectively. In our special scheduling, we first conduct the VB inference for LDA by using Eqs. (7), (8), and (9) and then initialize the parameters  X  jwk and  X  jk of our model with the estimations obtained by this VB for LDA. At the same time, we initialize the posterior parameters  X  tkw , k =1 ,...,K , w =1 ,...,W of our model as  X  tkw =  X  kw for each t .

As is discussed in Section 3.1, Option 3 in Table 1 sometimes gave impressive results in the preliminary experim ent. Therefore, we use Option 3 as a finalization of our VB inference. After conducting VB for LDA as an initialization, we train our model with Option 1 for a large enough number of iterations (140 iterations in our experiments). Then, w e use the hyperparameters  X  kw to initialize the hyperparameters  X  tkw in Option 3. Precisely, we set  X  tkw =  X  kw for each t . After this, we conduct a small number of iterations of VB inference update (10 iterations in our experiments) with Option 3 as a finalization. The update formula for  X  tkw in Option 3 can be written as follows: With respect to the effectiveness of Opt ion 3, Section 4.4 includes detailed discussions based on the experimental results.
 Our three-stage VB inference schedu ling is summarized in the left panel of Figure 1. While the number of iterations at each stage is determined based on the preliminary experiments, the important point is that we give a gradu-ally increasing degree of freedom to word posterior estimation as VB inference proceeds. In this manner, we S teer T ime-dependent E stimation of P osteriors with HY perparameter indexing. We call our approach STEPHY by concatenat-ing the italicized uppercase letters in the previous sentence. 4.1 Datasets We prepared the six datasets in Table 2 for our experiments. J , W , T ,and P in Table 2 are the numbers of documents, diff erent words, different time points, and different document-word pairs, respectiv ely. NIPS is the dataset often used in the experiments for machine learning. We us ed a well-cleaned version appearing in [6] 1 . We regarded each publication year as a different time point. This dataset is far smaller than the other five datasets. DBLP dataset is a part of the XML data available at the DBLP Web site 2 . We regarded the paper title as a document and the publication year as a timestamp. Since we used the papers dated from 1990 to 2009, T is equal to 20. DONGA is a set of Korean news articles issued in 2008 and were downloaded from the politics section of the Donga Ilbo Web site 3 .Each article was processed by K LT morphological analyzer 4 to segment each sentence into word tokens. We regarded each week as a single time point. Consequently, we have 53 different time points. TDT is the dataset prepared for the 2002-2003 Evaluation in Topic Detection and Tracking, Phase 4 5 . We regarded the date of each document as a timestamp. This datas et has the largest number of different time points among the six datasets. NSF is the dataset available at UCI machine learning repository 6 . Each document has an ID (e.g.  X  X 9000006 X ). We regard its first two digits (e.g.  X 90 X ) as a timestamp. The resulting timestamps range from 90 (i.e., 1990) to 02 (i.e., 2002). YOMI is a set of the Japanese news articles of Yomiuri newspaper published in 2005 7 . The documents were processed by MeCab 8 morphological analyzer to extract words. As in case of DONGA, we regarded each week as a timestamp. For all datasets, we removed the words of low and high frequency by following a common practice of text mining. 4.2 Settings For comparison, we also adopt VB inference for both LDA and TOT. The VB for LDA is explained in [3]. For TOT, no preceding works report the update formulas of VB. Since the formulas are a slight modification of those of LDA, we omit the details here. We only note that the parameters of per-topic Beta distributions in TOT should be rescaled as in case of CGS [16]. We set the rescaling factor to 0.7 based on preliminary trials. Also for TOT, any start from a random initialization gave a poor generalization power. Therefore, we first train LDA and use the resulting posteriors for initializing TOT as in STEPHY. The experiments are conducted on a Fedora 12 Linux PC equipped with Intel Core i7 920 CPU at 2.67 GHz and 12 Gbytes of main memory. For all cases in our experiments, this main memory size is enough to store all of the input data and the model parameters. To exploit the full potential of our multi-core CPU, we parallelize the operations in VB with OpenMP library by implementing the inference from scratch. Every ex ecution time reported in this paper is a wall-clock time obtained by running eight threads on the four cores of our CPU. 4.3 Evaluation Measure We evaluate the generalization power of each compared approach by test data perplexity, which tells how well each topic model can generalize to test data. We randomly select 10 percent word token s from the entire dataset as test word tokens and use them for calculating the perplexity defined as follows: where N test is the number of the test word tokens, t j  X  X  1 ,...,T } is the index of the timestamp of document d j ,and x ji  X  X  1 ,...,W } is the index of the word appearing as the i th test word token of document d j . The summation i in Eq. (11) is taken only over the test word tokens. Further,  X   X  jk and are the posterior probabilities obtained by normalizing the posterior Dirichlet parameters  X  jk and  X  tkw , appearing in Eq. (3) and Eq. (4), as follows: A smaller perplexity corresponds to a better generalization power. The perplexity for LDA and TOT is defined similarly by using  X  kw in Eq. (9) instead of  X  tkw . 4.4 Preliminary Experiments Before giving the results of the main experiment comparing STEPHY with LDA and TOT, we overview the results of our preliminary experiments in Table 3 and Table 4 to support the discussions in Section 3.1 and Section 3.2. These tables give the test data perplexity at the 200th iteration, i.e., the final iteration, of the VB inference when we set K = 50. Each perplexity is averaged over 20 different execution instances, and the corresponding standard deviation is also presented.
Table 3 shows the effect of our special initialization. The leftmost column includes the tags of the six datasets. When we train our model with Option 1 in Table 1 after a random initialization, we obtain the test data perplexity shown in the center column. When we train our model with Option 1 after an initialization using the posterior estimation of LDA, we obtain the perplexity in the rightmost column. Table 3 proves that the initialization with VB for LDA gives a better generalization power than the random initialization for all datasets.
Table 4 shows a comparison between the various ways of indexing the hyper-parameters of word Dirichlet priors. We applied the initialization with VB for LDA to each compared case. When we prepare a single common word Dirichlet prior for all T  X  K word multinomials, we obtain the perplexity in the rightmost column. When we adopt Option 1, Option 2, and Option 3 in Table 1, we obtain the results in the second, third, and fourth column, respectively.

When we only define a single common word Dirichlet prior, the test data per-plexity is poor for many datasets, as is shown in the rightmost column of Table 4. While the perplexity for NIPS dataset is occasionally good, this dataset is far smaller than the other datasets and does not represent the general situation. It seems that a single word Dirichlet prior is enough to cover the topical diversity latent in NIPS dataset. In contrast, the perplexity for NSF dataset is of disas-trous level. This may be because overfitting is too strongly suppressed by a single common prior. Option 2 also gives a poor perplexity for many datasets. Option 2 defines a common word Dirichlet prior Di (  X  t )overthe K word multinomials Multi (  X  t 1 ) ,..., Multi (  X  tK ) each corresponding to a different topic. This defi-nition is used for each time point s t separately. Therefore, while Option 2 can differentiate between various time points, the topical diversity is not well cap-tured, because the word posteriors corresponding to different topics share the same Dirichlet prior. In contrast, the perplexity achieved by Option 3 is fairly good. Option 3 gives the second best perplexity for DONGA, TDT, and NSF datasets. However, Option 3 requires a large computat ion time, because Option 3gives T  X  K  X  W word Dirichlet hyperparameters in total and thus requires considerable time for the hyperparameter update using Eq. (10). Therefore, we adopt Option 1, giving the best result for all datasets except NIPS, as the main driving force and use Option 3 for finalization. Based on this line of reasoning, we propose an inference scheduling d rawn in the left panel of Figure 1. 4.5 Main Experiment The results of our main experiment are summarized in Table 5. Both test data perplexity and computation time are obtained at the 200th iteration, i.e., at the final iteration, and are averaged over the results of 20 different execution instances. We also include the corresponding standard deviation for test data perplexity. Table 5 shows that STEPHY gives a smaller perplexity than LDA and TOT for all datasets. Especially, for DONGA dataset, the perplexity is reduced by 16.7 percent when compared with LDA. While the margin of improvement is not significantly large only for NSF dataset, we can say that STEPHY can put an improvement into the VB inference framework of LDA-like topic models.
Further, we can compare STEPHY in Table 5 with Option 1 in Table 4. As the left panel of Figure 1 shows, STEPHY conducts 10 iterations with Option 3 as a finalization after the 140 iterations with Option 1. By comparing STEPHY in Table 5 with Option 1 in Table 4, it can be observed that this finalization improves the perplexity for the following five datasets: DBLP (3027 . 6  X  17 . 3 &lt; 2768 . 2  X  20 . 1). We can contend that the finalization with Option 3 works.
The comparison experiment also shows that the increase in computation cost brought by our approach is moderate. Table 5 includes the wall-clock computation time each compared method requires for each dataset. The com-putation time of STEPHY is at most 1.46 times of LDA. With this increase in computation time, we can achieve a significant improvement shown in Table 5. While TOT requires less running time than STEPHY, TOT improves LDA only for DBLP and NSF datasets with a small margin. We can say that STEPHY provides a good balancing between generalization power and computation cost. We additionally conducted a set of experiments also for the case K = 100, i.e., the case where the number of topics is 100. The results, omitted due to space limitation, confirm our conclusion on the efficiency of STEPHY.
 The right panel of Figure 1 gives an example of the topical trend extracted by STEPHY from DBLP dataset. Each column corresponds to a different time point and includes the words sorted in the decreasing order of the posterior parameters  X  tkw from top to bottom for one topic arbitrarily selected from the 50 topics. We can interpret the parameter  X  tkw as showing how popularly word v w is used to express topic c k at time point s t . In the right panel of Figure 1, two or three top-ranked words keep their positions ov er many different time points. However, some explicit topical trends can be observed under these top-ranked words. For example, the word  X  X eb X  shows a peak around five or six years ago from 2009, and the word  X  X obile X  shows a stable po pularity in recent three or four years. Further, the rapid growth of the popularity of the words  X  X ireless X  and  X  X ensor X  may correspond to the recent rise of the trend related to wireless and sensor networks. Since our approach provides a different word posterior distribution for each time point, this type of trend analysis can be easily conducted only by inspecting the estimated values of  X  tkw along the time axis. In this paper, we propose a simple time-dependent variant of LDA and an effec-tive VB for the proposed model. STEPHY, our total schema for time-dependent topic modeling, improves LDA and TOT in terms of test data perplexity and only increases the computation time of LDA by at most a factor of 1.5.
With respect to the balancing between generalization power and computa-tion cost, we can add the following discussion. STEPHY improves LDA only basedonthe intra-epoch document similarity assumption, i.e., the assumption that the documents having the same timestamp are semantically related to each other. We do not explicitly model any interrelationships of word frequencies over neighboring time points. Therefore, ou r model does not require an intricate in-ference. In contrast, many time-depende nt topic models are further based on the inter-epoch similarity assumption, i.e., the assumption that the documents hav-ing different but close timestamps are also semantically related, and intensively exploit the topical dependency over neighboring time points [2,8,9,10,11,15,16]. Consequently, the inference requires det ailed tricks and becomes less scalable. Our experiments show that, with the intra-epoch similarity, STEPHY achieves an efficient balance betw een computation cost and generalization power. STEPHY leaves intact the model constru ction related to latent topics in LDA. Therefore, one possible future work is to combine our approach with the as-sumption of infinite topics [13,11], tho ugh we should shift the balance against computational efficiency and check if STEPHY can contribute more than the nonparametric approach that takes advantage of intricate inference.

Another more challenging future work is to apply STEPHY to the proba-bilistic models where each topic is characterized by a probability distribution other than multinomial distribution. By steering the time-dependent estimation of posteriors with some hyperparameter indexing strategies like those given in Table 1, we can make a similar proposal f or efficiently explo ring the parameter space also with respect to those models.
 This work was supported in part by the Nagasaki University Strategy for Foster-ing Young Scientists with funding provided by the Special Coordination Funds for Promoting Science and Technology of the Ministry of Education, Culture, Sports, Science and Technology (MEXT).

