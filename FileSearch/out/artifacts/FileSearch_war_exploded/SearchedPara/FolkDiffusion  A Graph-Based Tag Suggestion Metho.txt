 Social tagging is a popular way to organize and share web resources such as docu-ments, bookmarks and photos. Resources, tags and users are three essential parts in a social tagging system, in which users assign tags to resources and share with oth-For example, Flickr ( www.flickr.com ) is designed to share photos; CiteULike ( www.citeulike.org ) and BibSonomy ( www.bibsonomy.org ) is to share aca-demic references; and del.icio.us ( www.delicious.com ) is to share bookmarks. A common feature of these tagging systems is they all provide tag suggestions to ease the process of social tagging by recommending tags for a user given a resource.
Many methods have been proposed for tag suggestions. For the resources with rich text contents such as blogs and product reviews, content-based methods are proved to be effective [14]. However, for the resources with less text contents but having rich collabo-rative information, graph-based methods turn out to be useful. In graph-based methods, users, resources and tags are grouped into a tripartite graph, where there are connec-tions only between users, resources and tags, and there are no connections within users, resources and tags themselves. After that, some ranking algorithms, such as PageR-ank [12], are performed on the graph. By biasing the ranking values to the given user and resource, we can rank tags specific to the given user and resource. FolkRank is a representative graph-based method based on PageRank on user-resource-tag tripartite graph. FolkRank, proposed as a tag suggestion method in [3], was shown to outperform other content-free methods including collaborative filtering.

FolkRank, however, suffers from the problem of topic drift. Starting from the given user and resource, although FolkRank makes PageRank biased to the given user and resource to a certain extent, it always finally jumps into globally popular tags when reaching stationary state. This is caused b y the characteristic of PageRank, which was originally proposed to rank web pages acco rding to their link topology in isolation.
To solve this issue, in this paper we present a new graph-based ranking method, i.e., FolkDiffusion, for tag suggestions. FolkDiffusion is motivated by heat diffusion process. Heat diffusion is a physical phenomenon. The basic theory of heat diffusion is that heat always flows from the position with high temperature to the position with low temperature. Recently, the idea of heat diff usion is introduced in various applications such as dimension reduction [1], classification [6], anti-spam of web pages [17], social network analysis [9] and search query suggestion [8]. In these work, the input data is considered to be a medium and the heat is diffused from a given set of start points to other data points. After iterations of heat diffusion, the heat values of data points indicate their relatedness with the initial start points.

In this paper, we consider tag suggestions as a task of finding most related tags with the given user u and resource r . Firstly, we construct a graph with users, resources and tags, in which edge weights represent the relatedness between them. Based on the idea of heat diffusion, we initially set u and r having the temperature higher than zero. Then we set all tags, users and resources except u and r to be zero temperature. After that, the heat begins to flow from u and r on the graph according to the edges between them. The edge between two vertices can be imagined as the pipe of an air-conditioner for heat flow, and the edge weight indicates the diffusion speed of heat. After several iterations of diffusion, the heat values on tags indicate their relatedness with the original user u and resource r . The most related tags are suggested for u and r .

The important characteristic of FolkDiffusion is that the heat only flows from high temperature to low temperature. We can imag ine the process as follows. FolkDiffusion firstly recognizes a group of most related objects. The initially recognized related ob-jects are then endowed with the power to d ecide which may be furt her related. This feature prevents FolkDiffusion from topic drift, and guarantees the suggested tags are topically related to the given user and resource. In experiments, we will demonstrate the performance of FolkDiffusion compared with other graph-based methods including FolkRank. For resources with rich text contents, many content-based methods have been proposed for tag suggestions. Ohkura et al. [11] proposed a Support Vector Machine-based tag suggestion system. Katakis et al. [5] used a hierarchical multi-label text classifier to find the proper tags for a document. Mishne [10] used a search-based nearest neighbor method to suggest tags, where the tags of a new document were collected from the most relevant documents in the training set. Lip czak et al. [7] extracted keywords from the ti-tle of a document, and filtered them with a user X  X  used tags to get final suggestions. Tatu et al. [15] combined tags from similar documents and extracted keywords to provide tag suggestions. We find that most of content-based methods regard tag suggestions as ei-ther a text classification problem or a keyword extraction problem. In experiments of this paper, we also demonstrate a simple but effective content-based method, i.e., k NN, as a baseline method for tag suggestions.

Another class of tag suggestion systems is based on the connections between users, tags and resources, which does not take the content of resources into consideration and is thus named as graph-based methods. Xu et al. [16] used collaborative filtering to suggest tags for bookmarks. Jaschke et al. [3] proposed FolkRank, a PageRank-like it-erative algorithm to find the most related tags for the given resource and user. PageRank was originally used for ranking web pag es according to the topology of web graph. In PageRank we can set preference values to a subset of pages to make the final ranking values biased to these selected pages. In f act, FolkRank computes the relatedness be-tween tags and the specific user and resource by setting the given user and resource to high preference values in PageRank. 3.1 Problem Formulation In social tagging systems, a folksonomy is defined as a tuple F =( U, T, R, Y ) ,where U is the set of users, T is the set of tags and R is the set of resources. Y is a ternary relation between U, T and R , Y  X  U  X  T  X  R . A tuple record ( u, r, t )  X  Y is called a tag assignment, which means user u assigned tag t to resource r . The goal of tag
The basic idea of graph-based tag suggestions is to construct a graph with users, resources and tags as vertices and build e dges according to user tagging behaviors. After building the graph, we can adopt some graph-based ranking algorithms to rank tags for a specific user and resource. Then the top-ranked tags are recommended to users.

To describe the graph-based methods more clearly, we give some mathematical no-tations. For the folksonomy F =( U, T, R, Y ) , we firstly convert it into an undirected tripartite graph G F =( V, E ) .In G F , the vertices consist of users, resources and tags, i.e., V = U  X  R  X  T . For each tagging behavior of user u assigning tag t to resource r ,
In G F , we have the set of vertices V = { v 1 ,v 2 ,  X  X  X  ,v N } and the set of edges E = { Based on the graph, we can employ various graph-based ranking methods to recom-mend tags. In this paper, we first introduce two existing methods, namely most popular tags and FolkRank . Furthermore, we describe FolkDiffusion for social tag suggestions. 3.2 Most Popular Tags Here we introduce a simple but effective method for tag suggestions. Some notations are given as below, which is identical with [3]. For a user u  X  U , we denote all his/her tag assignments as Y u = Y  X  ( { u } X  T  X  R ) . Accordingly, we have Y r and Y t . Based on the same principle, we can define Y u,t = Y  X  ( { u } X { t } X  R ) for u  X  U and t  X  T . We a l s o h av e Y t,r accordingly. Furthermore, we denote all tags that user u  X  U have assigned as T u = { t  X  T | X  r  X  R :( u, t, r )  X  Y } .

There are variants of most popular tags as shown in [4], which are usually restricted in different statistical range. For example, most popular tags of folksonomy recommends the most popular tags of the whole set of folksonomy. Therefore, it recommends the same set of tags for any given user and resource pair, which suffers from cold-start problems and has no consideration on personalization.

A reasonable variant of most popular tags is recommending the tags that globally are most specific to the resource. The method is named as most popular tags by resource Since users might have specific preferences for some tags, which should have been used by him/her, thus we can use the most popular tags by user . As shown in [4], the performance is poor if we use most popular tags by user in isolation. If we mix the most popular tags by user and resource , the performance will be much better than each of them in isolation. The simplest way to mix the effect of users and resources on tags is to add the counts and then sort 3.3 FolkRank In FolkRank, two random surfer models are employed on the user-resource-tag tripartite graph. The ranking values of vertices are computed with the following formula where PR ( v i ) is the PageRank value and p v i is the preference to v i . Suppose we have an adjacent matrix A to represent the graph G F With the matrix, we rewrite the Equation 4 as where s is the vector of PageRank scores of vertices, and p is the vector of preferences of vertices.

A straightforward idea of graph-based tag suggestions is to set preferences to the user and resource pair to be suggested for, and then compute ranking values using PageRank with Equation (5). However, as pointed out in [4], this will make it difficult for other vertices than those with high edge degrees to become highly ranked, no matter what the preference values are.

Based on the above analysis, we describe F olkRank as follows. To generate tags for user u and resource r ,wehaveto: 3. Compute s = s (1)  X  s (0) .
 We rank tags according to their final values in s , where the top-ranked tags are suggested to the given user u and resource r . 3.4 FolkDiffusion struct FolkDiffusion as follows. Suppose at time t , each vertex v i receives an amount proportional to the time period  X t and the heat difference between v i and v j , namely f ( t )  X  f i ( t ) . Based on this, we denote M ( v i ,v j ,t, X t ) as where  X  is heat diffusion factor, i.e. the thermal conductivity. Therefore, the heat differ-ence at vertex v i between time t +  X t and time t is equal to the sum of the heat that it receives from all its neighbors. This is formulated as The process can also be expressed in a matrix form where f is a vector of heat at vertices at time t ,and H is If the limit  X t  X  0 , the process will turn into Solving this differential equation, we have f ( t )= e  X t H f (0) . Here we could extend the e The matrix e  X t H is named as the diffusion kernel in the sense that the heat diffusion process continues infinitely from the initial heat diffusion.  X  is an important factor in the diffusion process. If  X  is large, the heat will diffuse quickly. If  X  is small, the heat will diffuse slowly. When  X   X  +  X  , heat will diffuse immediately, and FolkDiffusion degrades into PageRank.

Like in PageRank, there are random relations between vertices. To capture these relations, we use a uniform random relation between vertices as in PageRank. Let 1  X   X  denote the probability that random surfer happens and  X  is the probability of following the edges. Based on the above discussion, we modify FolkDiffusion into In application, a computation of e  X t R is time consuming. We usually approximate it to a discrete form Without loss of generality, we use one unit time f or heat diffusion between vertices and their neighbors. We have f (0) . Therefore, for each iteration, we could diffuse the heat values s of vertices using the following formulation where M is the number of iterations. As analyzed in [17], for a given threshold ,we can compute to get M such that for any f (0) whose sum is 1.0. Similar to [17], in this paper we set M =10 for FolkD-iffusion.

Unlike FolkRank, FolkDiffusion sets the initial values f (0) for vertices to indicate the preferences. To suggest tags to user u for resource r ,weset f (0) = 0 ,butfor f (0) = 1 and f r (0) = 1 . After running FolkDiffusion on the tripartite graph, we rank tags according to their heat values and t he top-ranked tags are suggested to user u for resource r .
 3.5 Dynamic Length of Suggested Tag List For a social tagging system, it is straightforward to suggest dynamic number of tags based on the characteristics of given users and resources instead of fix number of tags. There are several factors that may influence the number of tags for a post: 1. The global factor, which is the gl obal average number of tags for each post, g ; 2. The user factor, which is the average number of tags for each post by this user, u ; 3. The resource factor, which is the average number of tags for each post for this Motivated by the idea in [13], with the three factors, we estimate the suggested number of tags sn for a given user and resource using formula sn =  X  1 g +  X  2 u +  X  3 r ,where  X  ,  X  2 and  X  3 are parameters and can be obtained using linear regression using training data. Note that the dynamic length of suggest ed tag list is independent to tag suggestion methods. The results in the following experi ments are all obtained using dynamic length of tag list. In experiments, we compare the results of three graph-based methods: most popular tags, FolkRank and FolkDiffusion. Before demonstrating the experiment results, we introduce the dataset and evaluation metric for experiments. 4.1 Dataset and Evaluation Metric In experiments we use two datasets provided by BibSonomy. BibSonomy is a social bookmark and publication sharing system that supports users to tag and share URLs and bibtexs. After removing all users, tags, and resources which appear in only one post, the datasets contains 253,615 tag assignments, posted by 1,185 users to 14,443 URLs and 7,946 bibtexs using 13,276 unique tags. Since the user behaviors for tagging URLs and bibtexs are quite different, we perform experiments on bookmark posts (41,268) Bookmark dataset and Bibtex dataset respectively.

To ensure the statistical validity of experiment results, we carry out experiments using 5-fold cross validation on datasets Bibtex and Bookmark. The performance of tag 4.2 Comparing with Other Methods In Fig. 1, we show the best performance of various graph-based methods on Bibtex and Bookmark datasets when the maximum of suggested tags are set from 1 to 10. In this figure, we also demonstrate the performance of the content-based method k NN, which finds most k similar resources according to their contents and suggest the tags of the k nearest neighbors to the given resource. k NN achieves the best result when k =2 .For the method of most popular tags, we use mpt+resource to indicate most popular tags by resource ,and mpt+mix to indicate most popular tags by mixing resource and user .For FolkRank, the best result is achieved when damping factor  X  =0 . 85 with maximum iterations max it = 100 . FolkDiffusion obtains the best result when damping factor  X  =0 . 85 , maximum number of iterations max it =10 and diffusion factor  X  =0 . 1 .
From the two figures, we have four observations: 1. FolkDiffusion achieves the best F 1 -measure on the both datasets. When maximum 2. For Bibtex and Bookmark datasets, graph-based methods outperform content-based 3. All graph-based methods perform better on Bibtex than Bookmark. This may be-4. Since we use dynamic length of suggested tag list, the F 1 -measure does not drop We also explore the performance of FolkDiffusion on training and test dataset released in Task-2 of 2009 ECML/PKDD Discovery Challenge ( http://www. kde.cs.uni-kassel.de/ws/dc09 ) [2]. FolkDiffusion achieves precision = 0 . 327 , recall =0 . 321 and F 1  X  measure =0 . 3241 , which ranks the fourth place com-pared to twelve submission results, which is slightly-lower than the performance of the second and third places. Note that the eval uation results on the released test set are much worse than those shown in Fig. 1, which is caused by the different distributions of resources/users/posts between the training set and test set. In all, the evaluation results verify the effectiveness of FolkDiffusion. 4.3 Influence of Parameter We further investigate the influence of dynamic length of suggested tag list. If we do not use the dynamic length and always suggest 5 tags for each given user and resource, the F -measure of FolkDiffusion will drop to only 0.398 on Bibtex and 0.342 on Bookmark. The influence is also valid to other graph-based methods.

Besides the above analysis, we also investigate the impacts of FolkDiffusion pa-rameters. In Table 1, we demonstrate the performance of FolkDiffusion on Bibtex and Bookmark as its parameters change, including the diffusion factor  X  and maximum number of iterations (denoted as max-it in tables). Here the damping factor  X  is set to 0.85. We find that the performance of FolkDiffusion are not sensitive to its parameters, which indicates the robustness of FolkDiffusion.
 In this paper, we introduce a new graph-based method for tag suggestions, namely FolkDiffusion, motivated by the idea of heat diffusion. We study the performance of k NN, most popular tags, FolkRank and FolkDiffusion on real online social tagging datasets. Experiments show that FolkDiffu sion outperforms other graph-based methods on both Bibtex dataset and Bookmark dataset significantly. This indicates the effective-ness of heat diffusion for modeling user tagging behaviors.

As some recent work indicates, ensembles of various methods will greatly improve the performance of tag suggestions. In future work, we plan to combine FolkDiffusion with other graph-based and content-based methods together to implement a practical social tagging system.
 This work is supported by the National Natural Science Foundation of China (NSFC) under Grant No. 60873174.

