 Automated multi-document summarization has drawn much attention in recent years. Multi-document summary is usually used to provide con-cise topic description about a cluster of documents and facilitate the users to browse the document cluster. A particular challenge for multi-document summarization is that the information stored in different documents inevitably overlaps with each other, and hence we need effective summarization methods to merge information stored in different documents, and if possible, contrast their differ-ences.

A variety of multi-document summarization methods have been developed recently. In this study, we focus on extractive summarization, which involves assigning saliency scores to some units (e.g. sentences, paragraphs) of the documents and extracting t K e sentences with highest scores. MEAD is an implementation of the centroid-based method (Radev et al., 2004) that scores sentences based on sentence-level and inter-sentence features, including cluster centroids, position, TF*IDF, etc. NeATS (Lin and Hovy, 2002) selects important content using V entence position, term frequency, topic signature and term clustering, and then uses MMR (Goldstein et al., 1999) to remove redun-dancy. XDoX (Hardy et al., 1998) identifies the most salient themes within the set by passage clus-tering and then composes an extraction summary, which reflects these main themes. Harabagiu and Lacatusu (2005) investigate different topic repre-sentations and extraction methods.

Graph-based methods have been proposed to rank sentences or passages. Websumm (Mani and Bloedorn, 2000) uses a graph-connectivity model and operates under the assumption that nodes which are connected to many other nodes are likely to carry salient information. LexPageRank (Erkan and Radev, 2004) is an approach for computing sentence importance based on the concept of ei-genvector centrality. Mihalcea and Tarau (2005) also propose similar algorithms based on PageR-ank and HITS to compute sentence importance for document summarization. 
In this study, we extend the above graph-based works by proposing an integrated framework for considering both information richness and infor-mation novelty of a sentence based on sentence affinity graph. First, a diffusion process is impos ed on sentence affinity graph in order to make the af-finity graph reflect true semantic relationships be -tween sentences. Second, intra-document links and inter-document links between sentences are differ-entiated to attach more importance to inter-document links for sentence information richness computation. Lastly, a diversity penalty process is imposed on sentences to penalize redundant sen-tences. Experiments on DUC 2002 and DUC 2004 data are performed and we obtain encouraging re-sults and conclusions. The proposed affinity graph based summarization method consists of three steps: (1) an affinity gra ph is built to reflect the semantic relationship betwe en sentences in the document set; (2) information richness of each sentence is computed based on the affinity graph; (3) based on the affinity graph and the information richness scores, diversity penalty i s imposed to sentences and the affinity rank score for each sentence is obtained to reflect both infor -mation richness and information novelty of the sentence. The sentences with high affinity rank scores are chosen to produce the summary. 2.1 Affinity Graph Building Given a sentence collection S={s i | 1  X  i  X  n}, the af-finity weight aff(s i , s j ) between a sentence pair of s and s j is calculated using the cosine measure. The weight associated with term t is calculated with th e tf *isf t formula, where tf t is the frequency of term t in the corresponding sentence and isf t is the inverse sentence frequency of term t, i.e. 1+log(N/n t where N is the total number of sentences and n t the number of sentences containing term t. If sen-tences are considered as nodes, the sentence collec-tion can be modeled as an undirected graph by generating the link between two sentences if their affinity weight exceeds 0, i.e. an undirected link between s i and s j (i  X  j) with affinity weight aff(s i constructed. Thus, we construct an undirected graph G reflecting the semantic relationship be-tween sentences by their content similarity. The graph is called as Affinity Graph. We use an adja-cency (affinity) matrix M to describe the affinity graph with each entry corresponding to the weight follows:
Then M is normalized to make the sum of each row equal to 1. Note that we use the same notation to denote a matrix and its normalized matrix.

However, the affinity weight between two sen-tences in the affinity graph is currently computed simply based on their own content similarity and ignore the affinity diffusion process on the graph. Other than the direct link between two sentences, the possible paths with more than two steps be-tween the sentences in the graph also convey more or less semantic relationship. In order to acquire the implicit semantic relationship between sen-tences, we apply a diffusion process Kandola et al., 2002 on the graph to obtain a more appropri-ate affinity matrix. Though the number of possible paths between any two given nodes can grow ex-ponentially, recent spectral graph theory (Kondor and Lafferty, 2002) shows that it is possible to compute the affinity between any two given nodes efficiently without examining all possible paths. The diffusion process on the graph is as follows: where  X  (0&lt;  X  &lt;1) is the decay factor set to 0.9. is the t-th power of the initial affinity matrix and the entry in it is given by that is the sum of the products of the weights over all paths of length t that start at node i and fini sh at node j in the graph on the examples. If the entries satisfy that they are all positive and for each node the sum of the connections is 1, we can view the entry as the probability that a random walk begin-ning at node i reaches node j after t steps. The m a-trix M is normalized to make the sum of each row equal to 1. t is limited to 5 in this study. 2.2 Information Richness Computation The computation of information richness of sen-tences is based on the following three intuitions: 1) the more neighbors a sentence has, the more in-formative it is; 2) the more informative a sen-tence X s neighbors are, the more informative it is; 3) the more heavily a sentence is linked with other informative sentences, the more informative it is. Based on the above intuitions, the information richness score InfoRich(s i ) for a sentence s i can be deduced from those of all other sentences linked with it and it can be formulated in a recursive for m as follows: 
And the matrix form is: where to 1. d is the damping factor set to 0.85.
 ~
Note that given a link between a sentence pair of s and s j , if s i and s j comes from the same document, the link is an intra-document link; and if s i and s comes from different documents, the link is an in-ter-document link. We believe that inter-document links are more important than intra-document links for information richness computation Different weights are assigned to intra-document links and inter-document links respectively, and the new af-finity matrix is: where the intra-document links (the entries of inter-document links are set to 0) and ity matrix containing only the inter-document links (the entries of intra-document links are set to 0).  X  ,  X  are weighting parameters and we let 0  X  X  ,  X  X  1. 7 he matrix is normalized and now the matrix is replaced by in Equations (4) and (5). 2.3 Diversity Penalty Imposition Based on the affinity graph and obtained informa-tion richness scores, a greedy algorithm is applied to impose the diversity penalty and compute the final affinity rank scores of sentences as follows:
After the affinity rank scores are obtained for all sentences, the sentences with highest affinity rank scores are chosen to produce the summary accord-ing to the summary length limit. We compare our system with top 3 performing systems and two baseline systems on task 2 of DUC 2002 and task 4 of DUC 2004 respectively. ROUGE (Lin and Hovy, 2003) metrics is used for evaluation 1 and we mainly concern about ROUGE-1. The parameters of our system are tuned on DUC 2001 as follows:  X  =7,  X  =0.3 and  X  =1.

We can see from the tables that our system out-performs the top performing systems and baseline systems on both DUC 2002 and DUC 2004 tasks over all three metrics. The performance improve-ment achieved by our system results from three factors: diversity penalty imposition, intra-document and inter-document link differentiation and diffusion process incorporation. The ROUGE-1 contributions of the above three factors are 0.02200, 0.00268 and 0.00043 respectively.

Figures 1-4 show the influence of the parameters in our system. Note that  X  :  X  denotes the real val-ues  X  and  X  are set to.  X w/ diffusion X  is the system with the diffusion process (our system) and  X w/o diffusion X  is the system without the diffusion proc -ess. The observations demonstrate that  X w/ diffu-sion X  performs better than  X w/o diffusion X  for most parameter settings. Meanwhile,  X w/ diffusion X  is more robust than  X w/o diffusion X  because the ROUGE-1 value of  X w/ diffusion X  changes less when the parameter values vary. Note that in Fig-ures 3 and 4 the performance decreases sharply with the decrease of the weight  X  of inter-document links and it is the worst case when inter-document links are not taken into account (i.e.  X  :  X  =1:0), while if intra-document links are not taken into account (i.e.  X  :  X  =0:1), the performance is still good, which demonstrates the great importance of inter-document links. 
