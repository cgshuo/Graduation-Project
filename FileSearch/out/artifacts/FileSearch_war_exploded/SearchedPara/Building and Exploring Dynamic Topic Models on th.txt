 Topic modeling is a machine learning technique that identi-fies latent topics in a text corpus. There are several existing tools that allow end-users to create and explore topic models using graphical user interfaces. In this paper, we present a visual analytics system for dynamic topic models that goes beyond the existing breed of tools. First, it decouples the Web-based user interface from the underlying data sets, en-abling exploration of arbitrary text data sets in the Web browser. Second, it allows users to explore dynamic topic models, while existing tools are often limited to static topic models. Finally, it comes with a tool server in the backend that allows the design and execution of scientific workflows to build topic models from any data source. The system is demonstrated by building and exploring a dynamic topic model of CIKM proceedings published since 2001.
 H.4 [ Information Systems Applications ]: Miscellaneous topic models; text mining; visual analytics; web crawling
The amount of available data and its rapid growth makes it difficult for humans to keep track of trends and topic shifts particularly in large document collections like scientific li-braries or social media channels. This not only applies to data that is available on the Web; it equally applies to classi-fied knowledge and information sources, e.g., for business in-telligence or communication surveillance. Fortunately, there are machine learning techniques that alleviate the task of understanding the structure and evolution of latent topics in documents. One of these techniques is called dynamic topic modeling [1], which uses algorithms that are able to identify the latent topics  X  X idden X  in a set of documents and how these have evolved over time. While topic models can be great tools for information and knowledge management, e.g., for research information management [5], an obstacle is that each topic model is a set of numbers with little meaning for a person who is not familiar with the algorithms. There are tools for exploring topic models, yet these are mostly limited to topic models that reflect a particular point in time and/or come hardwired with a particular data set.
Tackling these shortcomings, this paper presents a Web app that empowers stakeholders to engage in visual analyt-ics with topic models of data sets, without having to consult a topic modeling professional. The tool is called D-VITA (shorthand for Dynamic Visual Topic Analytics). While the first tool prototype was presented in [4], we present here a mature evolution of the system that allows building topic models from any data source with a few mouse clicks us-ing flexibly arrangeable toolchains. We demonstrate this in Section 4 by building a dynamic topic model of proceedings indexed on DBLP by example of the CIKM proceedings.
A topic model is a mathematical model about how a text corpus is generated by distributing words over documents. It can be used for finding the latent thematic structure in document collections. There are various methods to obtain a topic model, with the most prominent being Latent Dirichlet Allocation (LDA) [1], which is also used for computing topic models in D-VITA. LDA assumes that a document corpus exhibits latent topics from a set of topics. The number of topics is an input to LDA to be pre-set by the user. All documents share the same set of topics, but the proportion to which each topic is exhibited in the documents varies.
Topics are distributions over words from a shared vocab-ulary. Some words will be more relevant and some less relevant to a topic. For instance consider the present pa-per. Broadly speaking, it should be about information and knowledge management, since this is the thematic scope of CIKM. Yet, it uses words that is typical of a particular sub-set of CIKM topics, e.g., topic modeling, visual analytics, etc. It shall be noted that LDA does not produce labels for the topics; it simply outputs a set of discrete word distribu-tions. This is why X  X n the absence of a human being that manually assigns labels to those distributions X  X opics are typically labeled as an n -tuple using the n most important words for the topic, e.g.,  X  X opic modeling X  could be labeled  X  document text collection topics  X .

To consider the evolution of the distributions of topics and words in a collection of documents, the concept of dynamic topic models was developed in [2]. It factors in the epoch in which a document was created. The time window of an epoch can be defined by the topic modeler; it can be a year, a day, or even a second, depending on the nature of the document collection. The dynamic topic model explains how the variables in the topic model change when transitioning to the subsequent epoch. The implementation of the model explained in [2] is offered as a C library called dtm .
D-VITA implements a classic three-tier system architec-ture on the Web using Google Web Toolkit (GWT) and Java. The data tier comprises arbitrary relational databases. The only required database is the D-VITA configuration database.
The data are accessed via a component on the logic tier called DBAccess , which offers an interface for all data oper-ations. Other components on the logic tier are the server-side GWT components and the Tool Server, which acts as a simple design-and runtime environment for scientific work-flows, represented as sequences of tools that can be chained one after the other, with the only restriction being that the output of a tool must be compatible with expected input of the next tool in the chain. Each toolchain can have an arbi-trary number of input parameters, which are described using a simple XML dialect in a manifest file provided with each tool. For instance, a simple toolchain could consist of a web crawler that fetches data from a web archive, followed by a tool that filters the data according to certain user-defined criteria, and finally an LDA tool that builds the topic model.
On the presentation tier we have the client-side GWT components running in any Web browser, i.e., the topic ex-plorer (Figure 2), which represents the main visual analyt-ics interface; the document browser, which allows searching documents by words in their topic distributions; and the control panel, which allows configuring database connections and management of the Tool Server and toolchain designer.
This section presents how D-VITA was used to build a dynamic topic model of all papers published in CIKM pro-ceedings between 2001 and 2013 1 (Section 4.1), and to per-form visual analytics interactions with the topic model visu-alization to understand the development of topics in CIKM papers during that time window (Section 4.2).
The CIKM topic model was obtained by executing a tool-chain including the following tools (cf. Figure 1): 1. Abstracts Crawler. Implements the provision of raw data to the D-VITA analysis tools. It takes the URL of the DBLP page of any conference as an argument and crawls the proceedings of all events in the range of years given as an (optional) second argument. The output of this tool is a CSV file containing paper metadata (authors, title, ab-stract, year of publication) crawled from the publisher li-brary. Currently the crawler supports the digital libraries of ACM, Springer, and IEEE. For our CIKM topic model the crawler fetched 2926 abstracts from the ACM digital library. 2. Raw Database Generator. Takes the CSV file pro-duced by the Abstracts Crawler (or any other raw data
We chose this timeframe because before 2001 many CIKM paper abstracts are missing in the ACM digital library. provider) and feeds the data into a relational database. Since data access is managed by the DBAccess component, any database system on any server can be used. 3. Preprocessor. Preprocesses the raw data by extract-ing the set of words from the documents and records for each word in which documents it occurs; this is needed for running LDA. Stop words are removed and word stemming is performed. For use in the Web GUI the most common full word of each stem is recorded. The CIKM topic model includes 3863 distinct word stems. 4. Dynamic LDA. The output of the preprocessor is fed into the dynamic topic mining program. We reuse the C library  X  dtm  X , an implementation of [2]. The tool fills sev-eral DB tables representing the topic model for use by GUI components. For CIKM we chose a model with 20 topics. 5. Topic Ranking. Computes the topic ranking lists for all available sorting options in the D-VITA Web GUI (ex-plained in Section 4.2) and stores the results the DB. 6. Document Similarity Computation. Computes the similarity of documents based on their topic distributions and stores the results in the DB. Document similarities can be imagined as a | D |  X  | D |  X  T array, with D being the set of documents and T being the number of epochs in the topic model. This data is used for browsing documents by similarity in the D-VITA Web GUI.
We explain visual analytics in D-VITA using the CIKM topic model, which is accessible at http://goo.gl/JSDrck . The  X  X opic Explorer X  is the main GUI widget for this pur-pose (see Figure 2). It consists of three panels: Topic Evolution Panel. Shows a stacked area chart of the evolution of relevance of the selected topics. Clicking in the chart area triggers the display of detailed information on the clicked topic at the clicked time slice in the Document and Word Evolution Panel. The relevance value (vertical axis) is computed as follows. Let D t be the set of documents at time t  X  1 ...T , the complete corpus D = S T t =1 D t , and  X  topic distribution for document d  X  D . Then the relevance of topic k  X  K at time t is rel ( k,t ) := 1 | D obviously with  X  t ( P k  X  K rel ( k,t ) = 1).
 Topic Selection Panel. Displays the list of topics in the topic model, which can be sorted by various criteria, e.g.:
The topics can be filtered using keywords; in the screen-shot the keyword  X  X witter X  is used as a filter. To match the user provided string with the word distributions, the string is first chopped up into keywords separated by whitespace. Each keyword is then reduced to its word stem and com-pared to the word stems of all words in the topic model. To be eligible for the result set the word must exceed a threshold relevance of 1% for the topic. The result sets are joined using the union operator and sorted by descending word relevance. Formally, let Q be the set of words in the query term, and  X  k the word distribution in topic k , then result := S q  X  Q { k  X  K :  X  w ( stem ( q ) = w  X   X  k [ w ]  X  . 01) } . In the CIKM topic model three topics (the checked ones in Figure 2) matched the  X  X witter X  query. Not surprisingly the topics involving Twitter have been gaining relevance starting in 2006, the year when Twitter was launched.
 Document and Word Evolution Panel. Lists the most relevant papers for the selected topic and point in time. For each paper one can view the distribution of topics as a pie chart. The user can also explore papers related to the se-lected one. This panel also offers a chart illustrating the  X  X ord Evolution X  showing the distribution of words in the selected topic over time. In the screenshot in Figure 2 the user was interested in the topic  X  opinion product sentence reviews  X  in the year 2013 (this is indicated by the popup in the topic evolution chart). In the related documents list the user has selected the paper  X  X rediction of retweet cascade size over time X , for which this topic accounts for 63% of the topic distribution. The pie chart shows that the paper ex-hibits two other topics, with details being displayed when the user hovers over the pie slices.

Overall, the CIKM topic model showed that classic in-formation and knowledge management topics like informa-tion retrieval or query processing have declined in attention lately; it appears that the CIKM community has put in-creasing emphasis on topics related to social networks, large graphs, recommendations, and user modeling.
This paper has presented D-VITA, a visual analytics toolkit for dynamic topic models that comes with a flexible topic modeling tool engine in the backend. A demo video is avail-able at http://youtu.be/ozWf-knmzEI .
 This work was supported in part by the European Commis-sion through the FP7 project  X  X EL-Map X , grant no. 257822. [1] D. M. Blei. Probabilistic topic models. Commun. ACM , [2] D. M. Blei and J. D. Lafferty. Dynamic topic models. [3] E. Cohen. Decay models. In Encyclopedia of Database [4] N. G  X  unnemann, M. Derntl, R. Klamma, and M. Jarke. [5] C. Quix and M. Jarke. Information Integration in
