 Personalized recommendati on is becoming increasingly popular due to the great utility in providing people with products that they might be interested in and thus purchase. Many electronic commerce websites in a business-to-consumer (B2C) style, e.g., Amazon , have already benefited from personalized marketing leverage offered by product recommender s ystems [16,18]. Most researchers try to develop recommender systems by utilizing content-based methods or collabo-rative filtering or hybrid version of these two techniques. However, such recom-mendation paradigms cannot effectively handle all the cases that might happen in real-world applications.

In E-commerce recommender systems, t here is a special class of recommen-dation problems, in which a user X  X  behavior might evolve over time, i.e., within different stages the user will prefer distinct items, as shown in Scenario 1 .
Scenario 1: A customer with a baby needs to purchase some products of baby care. Within different growth stages of his/her baby, the desired products are significantly different.

In this scenario, the cust omer X  X  purchasing interest evolves over time. It is not reasonable to utilize item-based method for personalized recommendation, as the items purchased in different time periods might significantly different. Further, it is a non-trivial task to effectively capture the evolution of customer X  X  purchasing interest. In general, an item taxonomy is often associated with a recommender system, by which customers ca n easily navigate different categories of products. In this paper, we propose to employ such taxonomic knowledge to formalize users X  long-term preference, and in the meantime, to capture the evolution of users X  interest. However, only long-term preference cannot provide enough evidence against the user X  X  current desire, as illustrated in Scenario 2 .
Scenario 2: A customer with a 6-month baby needs to change the type of formula for his/her baby.

In this scenario, the customer need s to purchase some new items. In gen-eral, long-term preferences model users X  purchasing interest in a long run, e.g., what brands that the user prefers. How ever, for customers who step into a new purchasing stage, he/she would desire new types of items that have never been purchased before by this user. Therefore, only considering the customer X  X  long-term preference will not capture his/her desire. To handle such issue, we propose to explore the user X  X  short-term interest by analyzing similar users X  behaviors. Here  X  X imilar X  indicates that two users might have similar purchasing behaviors within the identical purchasing stage. By this way, we can easily resolve the situation that the customer desires new types of products within new stages.
In summary, the contribution of our paper is three-fold:  X  We define a new class of recommendation problem, named Recommendation  X  We introduce a taxonomy-oriented approach to model a user X  X  preference.  X  We propose a novel graph-based model for recommendation, in which a The paper is organized as follows. We des cribe some related work in Section 2. Section 3 defines the formal statement of the problem. In Section 4, we discuss the algorithmic details of our proposed method. Section 5 provides an empirical evaluation on a real-world data set, and finally Section 6 concludes the paper. In this section, we briefly review prior methods related to recommender systems. We also highlight the difference between our method and other existing work. Content-Based Recommendation. The effectiveness of content-based in-formation filtering paradigm has been proven for applications locating textual documents relevant to a topic. Particul arly in recommender systems, content-based methods [1,4,7] enable accurate comparison between different textual or structural items, and hence recommend items sim ilar to a user X  X  consumption history. However, content-based filtering approaches suffer from multiple draw-backs, e.g., strong dependence on the availability of content, ignoring the con-textual information of recommendation, and etc.
 Collaborative Filtering. Collaborative-based r ecommenders tackle the rec-ommendation problem by exploiting similar users X  profiles and recommending new items not previously rated or seen by the target user. Recommendation is therefore achieved by finding common characteristics in the preferences of other users. Common approaches in this category include k-Nearest-Neighbor (k-NN), matrix factorization [8,15], and etc. Amazon uses an item-to-item collaborative filtering approach to personalize the online store for each customer [11]. How-ever, collaborative filtering requires more ratings over items, and therefore suffers from the rating sparsity problem.
 Hybrid Recommendation. Hybrid approaches combine the aforementioned techniques in different ways to improve recommendation performance and tackle the shortcoming of underlying methods. Some sample approaches include [3,9], in which the inability of collaborative filtering to recommend items is commonly alleviated by combining it with content-based filtering.
 Knowledge-Based Recommendation. Knowledge-based personalization sys-tems emphasize explicit domain knowledge about the items as well as implicit knowledge about the users (e.g., psychographic, demographic, or other per-sonal attributes of users) to extract pertinent recommendations [6,17]. Some researchers use item taxono mies to raise the accuracy of the results [2,5,12].
In our work we investigate a special class of recommendation problems, in which a user X  X  preference evolves over tim e. We formalize the user X  X  preference by virtue of the category correlations within item taxonomies. To provide attractive recommendation list, we first identify the exact purchasing stage that the user lies in, and then localize the user X  X  short-term preference by inference over users, items, and concepts, where the candidate users X  short-term profiles that are within the same stage compared with the target user are selected to construct the inference base. 3.1 Background In our work, we employ item taxonomy to facilitate the recommendation proce-dure. In general, item taxonomies are often designed or applied in E-commerce websites, e.g., Amazon . In particular, we have the following elements within an E-commerce community:  X  User Repository: U = { u 1 ,u 2 ,  X  X  X  ,u n } . U contains all users or customers  X  Product Repository: P = { p 1 ,p 2 ,  X  X  X  ,p m } . P is composed of all the prod- X  X serRating: R = { R 1 ,R 2 ,  X  X  X  ,R n } . R includes all the rating information  X  Item Taxonomy: T over item category set C = { c 1 ,c 2 ,  X  X  X  ,c l } .Thetax-3.2 Problem Statement Problem ( Recommendation with Stage ): Within an E-commerce commu-nity, given U , P , R and T , recommend items to a target user, guaranteeing that the user X  X  current purchasing desire is maximally satisfied .

To resolve the above problem, we can decompose it into two different sub-problems based on the characteristics of the problem itself.
 Subproblem 1 ( Stage Identification ): Given an item taxonomy and a target user X  X  history, identify the user X  X  current preference on item categories.
To identify the recommendation stage fo r the target user, w e need to consider the entire purchasing history of this user. Simply modeling the user X  X  behavior based on transactional purchasing data cannot capture the evolution of the user X  X  exact interest. Fortunately, the item taxonomy can provide us a meaningful and elegant explanation of the user X  X  evolved behavior.
 Subproblem 2 ( Item Recommendation ): Given a target user X  X  current stage, recommend a list of items to the user such that his/her preference will be maxi-mally satisfied .

Once we obtain the recommendation stage of the target user, a natural way to recommend items is to refer other users X  b ehaviors within the same stage. In our problem setup, we have additional resources to use, e.g., the item taxonomy, to enrich the correlations among users, and therefore we are able to provide more reasonable recommendation list. The item taxonomy semantically encapsul es the correlations among items, which is suitable to capture users X  preferences over different item categories. Specifically in our work, we first separate a user X  X  purchasing history into different stages, and then model the user X  X  long-term pr eference by employing the item taxon-omy. Given a target user, we construct a multi-modal graph based on the users X  purchasing behaviors similar to the targ et user, and then perform inference on this graph to finalize the recommendation. 4.1 Stage Identification The long-term user profile consists of multiple stage profiles. Formally, given the purchasing history H of the target user u , H can be initially divided into multiple segments based on a specific time scheme. Here the time scheme used to segment H can be learned according to the detailed content of H using statistical or machine learning techniques. Taking i nto account the time complexity, hereby, we simply define a uniform time frame T as a segment unit, and then separate H based on T , i.e., H = { H t 0 ,H t 1 ,  X  X  X  ,H t n } ,where t 0 means the current stage, i.e., the latest purchasing period. For each time period t i , i =0 , 1 ,  X  X  X  ,n ,we model the user X  X  behavior H t i using the item taxonomy.
 User Profile Generation. As illustrated in Fig 1, to model the stage profile H 0 of user u 1 , we first extract the transactional data of u 1 , R 1 = For each transaction or item in R 1 , e.g., p 41 , we locate the fine-grained category that the item directly belongs to, e.g., c 4 , and then traverse the taxonomy from bottom to top, to obtain the category path starting from this category, e.g., c  X  c category path, i.e., assigning  X 1 X  to each category in the path. Subsequently, we aggregate the rating score for each category and formalize the user X  X  stage profile as a weighted category vector.
Again for the previous example, assume the basic category vector is in the form of ! c 1 ,c 2 ,c 3 ,c 4 ,c 5 " , then the weighted category vector R t 0 u where each entry represents the user X  X  implicit rating over the corresponding category. In such representation, we assign more weight on the categories of the upper level in the item taxonomy, by which we can avoid being trapped into specific topics and losing the overall rec ognition of the user  X  X  preference. The weighted category vector is l 2 -normalized. Finally, we can denote user u 1  X  X  long-term profile as R u 1 = { R t 0 u recommendation stage of u 1 as H t 0 .

The identification of the user X  X  cu rrent recommendation stage can help de-termine what information should be used in the item recommendation, i.e., to consider other users X  stage profiles. For example, there are three users u 1 , u 2 and u , whose long-term profiles are { R t 0 u { H 0 , we need to analyze the stage profiles of users u 2 and u 3 ,thatis, R R u 3 , since these stage profiles indicate that their stages are identical to u 1  X  X  current stage. In this sense, the long-term and short-term profiles of a user are dependent in a way that the short-term profile is derived from the long-term profile and also the long-term profiles of different users can contribute to the success of collaborative filtering. The s ubsequent procedures are all based on this scheme. Note that the evolution of a user X  X  purchasing interest exists within the user X  X  long-term profile, whereas the interest would be relatively stable within the user X  X  short-term profile.
 Model Refinement. As proposed in the previous section, the item taxonomy serves to connect users and items in a semantic way, in which users X  rating behaviors are amplified via the category path. In such a model, we can easily capture the correlations between different elements, i.e., users, items and cate-gories. In the following, we further formalize the taxonomy-based profiling model by specifying three different similarities.  X  User-User Similarity ( S U ): The user-user similarity originates from two dif- X  Item-Item Similarity ( S I ): Similarity between items can be computed using  X  Category-Category Similarity ( S C ): This similarity can help quantify the se-4.2 Item Recommendation Once we locate the recommendation stage of the customer, a simple solution to the recommendation is to employ user-to-user collaborative filtering to retrieve items that the customer might prefer. However, such paradigm might result in the overemphasis on popular items, and thus make popular items more popular, while the items in the long tail have little chance to be recommended to the user. To resolve this issue, we investi gate the effect of using the item taxonomy to increase the possibility that items in the long tail are being recommended. To this end, we first construct a multi-modal graph, and then given a target customer u , we perform random walk on this graph starting from u for recommendation.
In detail, the multi-modal graph consists of multiple resources, e.g., users, products and categories, associated with multiple types of correlations, e.g., user-user, item-item, cate gory-category relations and etc. These resources are all originated from the user X  X  purchasing behaviors within the same stage. We encap-sule the graph as an adjacency matrix. Formally, let U, P, C denote customers, products and categories respectively, and let U p ,U c ,P c denote user-product, user-category and product-category relations, then we can build a block-wise ad-jacency matrix W = product and category-category relations. Here the entries of U u is calculated by S U defined by Eq.(1), P p by Eq.(2) and C c by Eq.(3). The entries of other blocks in W can be derived by purchasing behaviors or the item taxonomy. For example, for entries in U p , each one is a binary value ( X 1 X  or  X 0 X ), representing whether the corresponding user has been purchasing the product or not.
Given a target user u , we perform random walk on the multi-modal graph starting from u .Hereweemploy random walk with restart (RWR) [13] to retrieve items for recommendation, such that the recommended items are not deviated much from the user X  X  purchasing interes t. Specifically, we construct a matrix A using normalized graph Laplacian, i.e., A = D  X  1 / 2 W D  X  1 / 2 ,inwhich D is a diagonal matrix with its ( i, i )-element equal to the sum of the i -th row of W . The algorithmic detail is described in Algorithm 1.

In Algorithm 1, we first build a multi-modal graph whose nodes include users, products and categories, and the weighted edges between nodes are quantified Algorithm 1. Recommendation using RWR by the adjacency matrix W .Herewenormalize W using graph Laplacian (line 2) to make it suitable for the random walk computation. Next, our method executes RWR (line 3-6) to retrieve elements highly related to a given user q . The procedure will end once the input vector  X  controls the steps of each random walk; in our case, we expect that the random walk be not so deep on the graph so that the selected items will conform to the user X  X  purchasing interest.

After ranked in retrieve the recommended items, we need to consider three distinct cases (Line 8-16). In this way, the resulted recommendation list is composed of products that are originated from differ ent recommendation disciplines. 5.1 Real-World Dataset The dataset used in our exp eriment is collected from Amazon.com . It consists of customers X  order information related to Baby Care , ranging from Jan 21st, 2005 to Mar 5th, 2009. This dataset contains 133,039 orders of 1,000 anonymous customers on 2,187 products. The ratings in this dataset are implicit rating, i.e., the binary rating originated from the purchasing behavior of customers. The time span of the customer X  X  order history varies significantly, ranging from several months to 4 years. The average number of orders for customers is 133. The item taxonomy covered by the dataset consists of 37 classes and it is a three-layer hierarchy: the root class,  X  X aby Care X  and subclasses, e.g.,  X  X aby Diaper X ,  X  X aby Formula X ,  X  X eeding Accessories X , and etc. For each category, the number of products contained varies from tens to hundreds. Hereby, the taxonomy is simple and items ratings in the dataset are relatively dense. Due to the space limit, we are unable to list all the classes contained in the taxonomy. 5.2 Experiments Profile Generation and Taxonomy. Long-term and short-term profiles both contribute to the success of recommendation . To verify this, we use the long-term and short-term profiles, res pectively, to perform the recommendation task. Also in our framework, we employ the item taxonomy to enrich the representation of users X  profiles. Therefore, we setup four baseline methods as follows: (1) Long-term without taxonomy (LT): use each customer X  X  entire purchasing history to construct profiles and perform collaborative filtering; (2) Short-term without taxonomy (ST): use each custom er X  X  recent purchasing history 1 to build profiles and perform collaborative filtering; (3) Long-term with taxonomy (LTT): use item taxonomy to enrich ea ch customer X  X  long-term profile and perform collab-orative filtering; (4) Short-term with taxonomy (STT): use item taxonomy to enrich each customer  X  X  short-term profile and perform collaborative filtering. In addition, we implement two existing approaches, [18] (TDC) and [12] (EUI) for comparison, where the former considers both user proximity and item proximity, and the latter uses taxonomy to recommend novel items to users.

For evaluation of our method (RwS for short), we empirically set the time frame T introduced in Section 4.1 to be 90 days, and use the purchasing history within the latest stage as the testing data, whereas the purchasing history before the latest stage is regarded as the source of profiling. Note that in our method, user similarities are calculated based on the stage closest to the target user X  X  current stage. The parameters  X  and  X  will be tuned in the following subsection. For each approach, we recommend products (top@10, top@20 and top@30) to all the users in the dataset, and then compute the averaged precision, recall and F1-score of the recommended list. Fi g 2 shows the comparison results.
From the results, we observe that (i) The performance of algorithms with item taxonomy involved is superior to the ones without taxonomy. It is evident that by using item taxonomy, users X  pref erence can be better captured, since the categories or classes have more distinguishable power than simple items on iden-tifying a user X  X  purchasing interest. (ii) By considering the short-term profiles, the accuracy of the recommended item list can be slightly improved, which is straightforward because we are more concerned with users X  recent activities. (iii) Our proposed method significantly outperforms other candidates, which demon-strates the efficacy of our algorithm in handling the problem of RwS. Model Validation. In Section 4.1 we introduced three distinct similarity mea-surements, i.e., user-user , item-item and concept-concept . The encapsulation of these three measures enables the method to capture the correlations among dif-ferent resources (users, items and cate gories), and therefore renders the recom-mendation more reasonable. Also, the item taxonomy can help better interpret the customers X  exact purchasing interest. To verify this claim, we evaluate the performance of using different measurements. In the experiment, we choose to use user-user and item-item similarities respectively, as two baselines, and then recommend items (top@10, top@20 and top@30) to a set of randomly selected users (100 users). Note that the parameters  X  and  X  are set to be 0.2 and 0.7, respectively. Detailed parameter tuni ng process can be found in next section. We plot the average precision and recall pair of recommendation results. As depicted in Fig 3, besides the higher r atio of precision and recall, the perfor-mance distribution of the unified multi-modal graph is more compact than the others, which demonstrates the effectiveness and stability of the strategy for multi-modal graph construction. Parameter Tuning. In our method, the parameter  X  is designed to control the importance of user-item similarity and user-category similarity, whereas the parameter  X  aims to control the depth of random walk on the multi-modal graph. To find the optimal value for these two parameters, we use the experimental setup similar to the previous sections, and plot the variation of averaged F1-score for each parameter. As shown in Fig 4, we empirically choose the optimal value  X  =0 . 2and  X  =0 . 7 for parameters. In this paper, we introduced a problem  X  Recommendation with Stage in E-commerce, and then proposed a novel m ethod that utilizes item taxonomy to resolve this problem. Our approach is capable to effectively capture a customer X  X  purchasing interest via a seamless integration of the customer X  X  long-term pro-file and short-term profile, where the long-term profile is derived from the entire purchasing history, and the short-term profile is originated from the identifi-cation of the current recommendation stage of the customer. For recommen-dation purpose, we focus on the current recommendation stage and proposed a multi-modal graph ranking method to obtain the recommended item list. Evaluation on a dataset collected from Amazon demonstrated that the prob-lem of recommendation with stage can be eff ectively tackled using our proposed method.

Notice that the performance of our p roposed method depends on the qual-ity of the item taxonomy. In our future work, we plan to investigate how the taxonomy would influence the performance of the proposed method. In addi-tion, the segmentation of a user X  X  purchasing history is based on a uniform time frame in our method, which is not quite sufficient since the durations of pur-chasing stages of different users might vary a lot. Therefore, we will also take into account different segmentat ion methods in our future work.
