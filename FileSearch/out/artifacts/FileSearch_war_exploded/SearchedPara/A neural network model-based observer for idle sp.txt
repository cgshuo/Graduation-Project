 1. Introduction
Internal combustion engine control algorithms are required to provide stable work of the engine, regardless of the variability of loads, operating conditions and changes of the engine character-istics. In the same time, the market demands also a reduction of toxic emissions, noise and vibrations, and improvement of the systems X  reliability. All these requirements impose implementa-tion of new additional systems (e.g. exhaust gases recirculation valve, variable valve timing systems) and more flexible and accurate control algorithms.

Energy produced by the engine is also used for supplementary onboard devices, the presence of which determines the quality of the car in terms of the user X  X  safety and comfort. It is estimated that in the next few years an average demand for electric power will exceed 2 kW ( Alternators  X  Technical Instruction, 1997 X 1998 ;
Nicastri and Huang, 2000 ). Such loads consume a considerable share of energy produced by the engine, especially during its work in idle speed, which takes from 15% to 20% of the total engine service life ( Wendeker and Czarnigowski, 2000 ). Switching on (or off) individual electric devices is done discretely, which results in the engine being engaged (or disengaged) with a torque of several Nm. Especially in the case of the idle run, this can results in undesirable changes of the engine speed.

Another problem is non-stationarity and non-uniformity of engine work. This is the effect of changes to the engine X  X  characteristics during its service life. The changes may be explained by changes of operating conditions that escape the control system X  X  sensors, such as humidity, position above sea level or air pollution, but also by natural wear of the engine, or variability of oil and fuel parameters.

The purpose of controlling the engine in idle run is to stabilize the engine speed at a desirable level. Any oscillation in the speed of a crankshaft results in vibrations of the components of the vehicle X  X  body. These are important from the point of the user X  X  comfort. Moreover, they hinder control of air X  X uel mixture composition. This is due to variability of mixture mass reaching the cylinder caused by changes of the filling time.

Key control variables, such as the spark advance and the mixture mass (cylinder filling factor) are used to control the engine speed. In most cases, both of them are used in parallel. If the changes of the additional loads are considerable, the mixture mass to reach the cylinder is being adjusted, e.g. by means of the by-pass valve. If the changes are smaller and quick response is required, control is executed by adjusting spark advance.
Most of the currently used idle speed control algorithms are based on a PID controller. There are many publications discussing examples of synthesizing the parameters for such controllers (Badreddine et al., 2001 ; Hrovat and Sun, 1997 ; Howell and Best, 2000 ; Shim et al., 1995 ). However, these algorithms do not satisfy growing performance requirements, and better solutions are looked for.

Algorithms such as PID or H-infinity base on simple linear models of the controlled phenomenon ( Badreddine et al., 2001 ;
Howell and Best, 2000 ; Shim et al., 1995 ). Therefore, the engine X  X  operation is brought to a linear function describing either the relationship between the engine speed in the idle run and the spark advance (PID controller), or between the engine speed and the spark advance plus state parameters (LQR and H-infinity algorithms ( Shim et al., 1995 ).

As is generally known, the engine X  X  characteristics are far from being linear ( Wendeker and Czarnigowski, 2003a ). This is particularly visible in the case of the effective torque. To solve control problems arising from this fact, non-linear models are applied. It is argued that the most effective tools for that are artificial neural networks. Once the effective torque value is known, the additional loads can be easily estimated, and consequently control can be exercised. 2. Model-based observer algorithm
An original control algorithm developed by the authors is based on the indirect adaptation, with one parameter identified by means of a neural-network observer. The parameter is the additional load on the engine in idle run b M add . This parameter reflects not only the actual alternator load, resulting from engaging an energy-consuming onboard device, but also any momentary changes of the effective torque or braking torque. The parameter is then used by the regulator for calculating a new control value. A flowchart of this approach to control is presented in Fig. 1 .

The additional load is estimated according to b
M  X  i  X  X  M _ i  X  i  X  M _ b  X  i  X  M _ inertia  X  i  X  X  1  X 
In the above equation, the indicated torque M _ i is estimated by means of a neural network model, inputs of which are: engine speed n , intake-manifold pressure MAP and spark advance angle f .

M  X  i  X  X  ANN  X  n  X  i  X  ; MAP  X  i  X  ; f i  X  i 1  X   X  2  X 
The braking torque M _ b is estimated by means of a model described by a quadratic function of engine speed
M  X  i  X  X  a 2 U n  X  i  X  2  X  a 1 U n  X  i  X  X  a 0  X  3  X 
The third summand in Eq. (1) is the braking torque due to the engine X  X  inertia, calculated on the basis of the moment of engine X  X  inertia J and the reduced engine acceleration a _ . The latter is calculated from the difference between the current engine speed and the speed measured in the previous step.

M
In order to reduce the system X  X  vulnerability to measurement noise and non-repeatability of the engine X  X  operation, the acceleration is to be filtered, and the reduced acceleration is calculated using  X  i  X  X  where a (i) is the actual momentary engine acceleration calculated in the i step of calculations, g a the coefficient of the rate of the estimation procedure adaptation, its value 2.4 has been estab-lished experimentally.

The additional load b M add is used for calculating the value of the required effective torque  X  sufficient for achieving a required engine speed in the next step of calculations. The value of indicated torque to correct the engine speed is calculated using
M  X  i  X  1  X  X  b M add  X  i  X  X  M  X  b  X  i  X  X  M  X  inertia  X  i  X  1  X  X  6  X 
It is assumed that the braking torque M  X  b is to change from its value calculated in the previous step, which is due to the change of the engine speed. The authors adopted a simplified method of estimating M  X  b on the basis of the average initial engine speed n(i) and the required engine speed n 0 . The method allows also for the braking torque ( M  X  inertia ) caused by acceleration from the current speed to the required speed during one step of calculations (i.e. during one control cycle)
M inertia  X  i  X  1  X  X  J where n 0 is the required engine speed, n(i) the current (measured) engine speed of the i step of calculations, D t the duration of one step of calculations.

In the case of the tested engine, the duration of the calculation step (one control cycle) has been established to be a half of the duration of the crankshaft turn.

The last stage of calculations is aimed at finding the value of the control parameter, i.e. the spark advance angle, to achieve the required indicated torque: j  X   X  i  X  X  f mi 1 9 j
The function defining the required spark advance was calculated on the basis of successive approximations. A flowchart of these calculations is presented in Fig. 2 .

In terms of the control systems design theory, the first part of the algorithm, described by Eqs. (1) X (7), is a neural network-based disturbance observer. The second part  X  Eq. (8) uses the indicated torque model to determine control value; it is thus an element of a model-based control algorithm. 3. Test stand
The experiments were conducted in the laboratory of the Chair of Combustion Engines of the Lublin University of Technology. The test stand ( Fig. 3 ) was divided in two sections. The engine section comprised a brake, the engine X  X  systems of electric power, fuel supply, cooling water circulation and exhaust disposal, and the engine itself together with its sensors and actuators. The control section housed recording and control systems. The test stand allowed applying variable loads to the engine and stabilizing its speed by means of the SAK-N-760 brake (by VEB Elbtalwerk), equipped with an AMX 231 controller (by Automex). The cooling
Advantech), stabilized the temperature of the coolant. The fuel consumption was measured by weight by means of AMX 212F scales (by Automex) ( Fig. 4 ). For the measurement of pressure in the combustion chamber a piezoelectric sensor (601A type) with 7055B spark plug adapter was used, both manufactured by
Kristler. The measured signal was recorded by means of PCL 818HG data acquisition device by Advantech, connected to a PC.
The engine was equipped with a camshaft position sensor. It was a MH420-6 optoelectronic converter by Megatron. Its 10-bit converter permitted determining the angle with the graduation of 1024 points per rotation.

The object of tests was a standard engine of a POLONEZ 1.5 GLI car, equipped by the manufacturer with a MULTEC control system (one-point injection system with Distributorless Ignition Sys-tem  X  DIS). ( Table 1 ).
 The control unit was a universal engine controller AMX 200 CAN designed and constructed at the Lublin University of Technology for purposes of testing control algorithms. The system was designed to control single-point or multi-point injection system engines (up to 4 injector groups) with a DIS ignition system and a by-pass air control system with a stepper motor. The controller processed signals from eight onboard sensors. Installa-tion of a CAN bus enabled the real-time control of the engine by means of a PC.

TDC signal sent by DIS activated the measurement of signals from all available sensors. The data obtained that way were then transmitted through the CAN bus to the data transmission servicing module, then coded and transmitted to the PC, where the control algorithm was calculated and control parameters were produced ( Fig. 5 ). On their receipt, the transmission servicing module was decoding and transferring them to the control module. Control parameters were realized by the control module in the next cycle of the engine X  X  operation.

The source of the additional load was a set of light bulbs connected in parallel to the engine wiring. A discrete change in the consumption of power resulted in an increased power generation in the alternator as a result of voltage controller operation, i.e. increasing the alternator X  X  load. The use of bulbs permitted attaching a stable load in a discrete manner, as the power consumed by bulbs did not change significantly while switching the system on and off. At the same time, activation of a full power consumption occurred in a sufficiently short time (shorter than a single computation cycle of the control system). It was deter-mined that the consumption of energy at the level of 100 W corresponded to the increase in the external torque of the engine of approximately 2.5 Nm. 4. Algorithm identification and verification
The algorithm required identifying the parameters of the model of the effective torque, brake torque and the moment of the engine X  X  inertia. The identification of the parameters covered exclusively the idle speed, as it was designed for the synthesis and verification of idle speed control algorithms. The scope of verification was therefore confined to engine speed range from 600 to 1300 RPM, manifold pressure range from 30 to 60 kPa, spark advance range from 0 1 to 30 1 before TDC.

The experiments covered overall 108 test points. The tests were conducted in a steady state. The coolant temperature was 75 7 2 1 C, the oil temperature was 50 7 2 1 C, and the temperature of the surrounding was 25 7 1 1 C. The air humidity was 50 and the air pressure 1004 7 3 hPa. The indicated torque was calculated on the basis of the combustion chamber pressure as average from 200 cycles, which was assumed to eliminate the interferences resulting from the adopted measurement and calculation methods. The data were used for constructing a neural network model of the indicated mean effective pressure as described in Section 4.1.

In parallel with the in-cylinder pressure measurements, the braking torque was tested. Using a direct current device facilitated not only braking, but also propelling the engine during the tests. The results were approximated with a polynomial of second degree:
M  X  i  X  X  a 2 U n  X  i  X  2  X  a 1 U n  X  i  X  X  a 0  X  9  X  where n(i) is the engine speed in RPM; a 0 =3.80; a 1 = 0.0084; a =0.000018.

The last parameter to be identified was the engine X  X  moment of inertia. The test of free coasting was conducted and deceleration measured ( Fig. 6 ). On its basis, the average value of moment of inertia was estimated to be J =0.16kgm 2 . 4.1. Neural network models The effective torque model was constructed on the basis of a
MLP BP neural network. The inputs were: the engine speed, the intake-manifold pressure and the injection start angle. The network type was a one-direction with one or two hidden layers and of bi-polar sigmoid activation function (multi-layer precep-tor). As the literature on the subject ( Kimura et al., 1998 ; Shi-Wei and Ding-Li, 2005 ; He and Rutland, 2004 ) argued that MLP networks were suitable for modeling internal combustion en-gines, the author decided to use the same network type.
The choice of input signals resulted from the analysis of parameters affecting the indicated torque. In order to increase precision of the network, the inputs and output were standardized to take values from the range from 0 to 1. The process of teaching used the back propagation algorithm ( Bromnick, 1999 ) and proceeded off-line on the basis of data obtained during the identification tests.

The results of the identification tests used in the teaching process were divided in two sets: a teaching one and a testing one, in such a way that they were representative for the whole range of engine operation examined ( Table 3 ). The number of samples was defined at the stage of planning the experiment.

The author developed his own C++program for calculations and teaching the neural network. The reason was the need for compatibility with the software used by the controller.
The structure of the network was based on preliminary calculations and a compromise between the accuracy and speed of data processing. A very important factor considered while choosing the network type was the duration of calculations. It had to be shorter than 1.4 ms, i.e. 10 1 of crank rotation at 1200 RPM.
Only under this condition the algorithm was capable of processing data on-line.

For the preliminary tests, a set of 10 one-hidden-layer and 15 two-hidden-layers neural networks was used. A set of 70 samples was used as a teaching set for all these networks. Table 2 presents some results of teaching process with their learning errors and calculation durations in ms. The learning factor and moment factor were b =0.015 and L =0.4 accordingly. These values were assumed as by the authors of ( Bromnick, 1999 ; Kimura et al., 1998 ) and on the basis of preliminary tests.

MLP 3-5-4-1 BP was chosen to be the best network type for the main tests as its learning error was the lowest among the networks whose duration of calculations was below the required limit.
Table 3 contains results obtained in 200 000 epochs for MLP 3-5-4-1 BP neural network. This corresponded in any case to the moment of completing the teaching process. The correctness of the model was verified on the basis of additional tests.
During the teaching process there was no interchange of samples between the teaching and the testing sets. The learning samples were fed into the network in a predefined order. After feeding each sample into the network, the weights of the network were adjusted. In the case of the teaching set, the assessment of the network X  X  approximation error took place after a whole epoch of calculations. As for the testing set, the error assessment was conducted after a fixed number of epochs (1000). For both teaching and testing variables, the teaching process was con-tinued until a constant value of the defined mean error between the consecutive teaching iterations was obtained ( Bromnick, 1999 ). The results are shown in Table 3 and in Figs. 7 and 8 . 5. Application of the algorithm
Tests were performed at the required speed of 800 rpm, in the steady state of a warm engine (the temperature of the coolant was 90 1 C, the temperature of the lubricating oil was 92 1 C). The initial value of the spark advance was 10 1 before TDC. The recording of data started after 40 s from the experiment X  X  start ( Fig. 9 ). After the next 20 s, there was a discrete increase in the engagement of the crankshaft of approximately 2.5 Nm, and after another several seconds, the additional load was disengaged. After about 30 s, the recording of data was terminated. The first 40 s of the test were aimed at stabilizing the parameters of the adaptive algorithm. To allow for the impact of the non-repeatability of the tests, the experiment was performed three times, and the average of three measurements was calculated.

To assess the performance of the developed algorithm, the authors compared it with a PID and an adaptive algorithm (Wendeker and Czarnigowski, 2003b; Czarnigowski et al., 2005 ). The adaptive algorithm was a linear model-based control algo-rithm with continuous identification of parameters.

The following aggregate indicator of the quality of control w was calculated: w  X  1 N where n i is the engine speed in an i th performance, n 0 desirable engine speed, N the number of measurement points taken into account in an analysis.

The changes of the load, the control value and the rotational speed of the crankshaft are presented in Fig. 9. The quality of control was experimentally tested under steady and suddenly changing loads.

It is worth considering, that the proposed algorithm reacted promptly to the change of the actual additional load. The control error in the case of changing load was minimal  X  it did not exceed 20 RPM. As Fig. 10 shows, the estimated additional load covered not only the actual additional load (average value 2.5 Nm), but also momentary changes of the engine X  X  characteristics and other disturbance.

The engine speed oscillations around the required value were significantly lower than in the case of both PID and adaptive control. This is due to the instant reaction of the controller: the controller uses the correction based not only on the control error but also on the estimated value necessary to recover the required speed within the shorter possible time, i.e. one cycle. This particular property makes the algorithm perform so efficiently.
However, the proposed algorithm is very sensitive to changes of the additional load and reacts to both real changes of engine load and any momentary disturbance. This results in strong oscillations of of spark advance. In the experiment, the cycle to cycle variability of the latter ranged from 0 1 to 25 1 before TDC.

The sensitivity described above cannot be reduced due to the construction of the algorithm. A reduction of the cycle to cycle variability of spark advance is possible by means of an additional filter at the algorithm X  X  output. A filter described by Eq. (5) could be applied, but it would slow down the system X  X  reaction to the real changes of additional load, and thus increase the control error.
Analyses of the course of engine speed stabilization, based on the smoothed average from a number of cycles ( Figs. 11 , 12), confirm the advantage of the control algorithm based on the neural network observer. In the case of increased load ( Fig. 11 ), as well as decreased load ( Fig. 12 ), the engine speed did not vary from the required value by more than 20 RPM. There occurred no overshoot, characteristic for both the PID and adaptive algorithms.
Moreover, the time of stabilizing the engine speed was considerably shorter: in both analyzed cases it was only 1.5 s, compared with 5 s required by the remaining algorithms.
Fig. 13 compares the performance of the PID, the adaptation (Wedeneker and Czarnigowski, 2003b; Czarnigowski et al., 2005 ) and the model-based controllers during the same test. The indicator of control quality was calculated on the basis of unsmoothed values, mean of three consecutive tests. The model-based control algorithm proved to be the most precise in terms of keeping the engine speed at the desired level.

To sum up, the model-based control algorithm demonstrated the lowest deviation from the required value and was the quickest in stabilizing the engine speed without oscillation. This was confirmed by comparing control errors, described by the aggre-gate indicator of quality w . 6. Conclusions
It has been proved that combining a neural network observer with an indirect adaptation based on a precise non-linear model of the engine, reduces the error of the idle speed control significantly.
Exploiting the knowledge on the engine operation characteristics to develop a control algorithm facilitates more accurate estimation of changes of the engine operation in terms of variability of additional load and engine parameters. Therefore, the controller can react quicker and more accurate to the changes of the object of control. The deeper the understanding of the engine X  X  principles of operation, the more precise the regulation. Both PID and adaptive control algorithms determine corrections of the control parameter (spark advance), while the model-based control algorithm offers a direct value of the control parameter that comprises allowances not only for the reaction to the detected change, but also for returning to the required engine speed.

However, this property of the model-based algorithm results in considerable fluctuation of the spark advance. Its prompt changes facilitate keeping the engine speed at a required level, but are likely to increase toxic emissions. Thus, the rate of changes should be reasonably reduced. This cannot be done without raising control error. Another drawback of the model-based control algorithm is the necessity of precise identification of the model. References
