 With the popularity of social media sites, digital content is increasingly stored and managed online. At the same time, the desktop and local storage continues to provide a personal environment in which users perform their daily tasks. Thus, to accomplish their tasks, users need to continuously switch between local and remote resources and applications, often carrying the burden of coordinating and synchronizing these in a consistent way. In this demonstration, we describe a system, called ScholarLynk, that bridges the local and online worlds and allows users to manage both local and online resources in a uniform way and in collaboration with others. H.4.0 [ Information Systems Applications ]: General; H.5.2 [ Information Interfaces and Presentation ]: User Inter-faces Design, Management, Human Factors
Recent years have seen the unprecedented growth of a wide range of online digital repositories, from digital libraries to social media sites hosting user-generated content, e.g., Flickr, Facebook. In addition to these, web-based services such as collaborative bookmarking sites, e.g., del.icio.us, Ci-teULike, have become increasingly popular, allowing users to manage and organise their online content. At the same time, the desktop and local storage continues to provide a personal environment in which users perform their daily tasks, and organise their local content. Thus, users often need to man-age content that is distributed across multiple online as well as multiple local stores, e.g., Flickr, Email, file system, IE favorites.
 well as on other users or groups. This way of linking enables users to receive notification messages when changes to a fol-lowed object occurs, e.g., when a user X  X  profile changes or when a publication item is cited or is added to a collection.
Central to the model are the interrelated notions of re-source, item, information object, entry and collection.
Resources are digital artifacts or real world entities which have associated digital representation or metadata. Resources may be local to the user X  X  desktop or remotely available through the Internet, e.g., emails, web pages, files, direc-tories, people, images, video. A resource resides outside the system and is uniquely identified by a reference, e.g., file system path, URL, DOI, MAPI address.

Items are the system representations of resources, con-sisting of a range of metadata describing the resource, e.g., title, date of creation, thumbnail, etc. All items are also information objects .

Collections are ordered or unordered sets of information objects, with metadata that captures the user X  X  interpre-tations . A collection inherently defines a context in which the user works and to which the collected items are related to. It is modeled as a set (or list) of in-context information objects ( entries ). Collections are also information objects themselves, enabling nested collections.

Entries represent the participation of information objects in the collections. They are a combination of the item and the interpretation of the item in the context of the collec-tion. The interpretation layer includes labeled or unlabeled relationships, comments, tags, and ratings.
ScholarLynk is designed as a peer-to-peer architecture, with two logical layers: an overlay network, called Scholar-Lynk Cloud, to which ScholarLynk Clients can dynamically connect to or leave.

The ScholarLynk Cloud is a centralized and web acces-sible environment to which clients connect in order to pub-lish their information objects and receive notifications about their follow actions. The Cloud manages (i) user and group profiles, (ii) published information objects and their inter-pretations together with their access rights, and (iii) users X  subscriptions, i.e., follow actions. The ScholarLynk Cloud is implemented by extending the D-NET Software Toolkit 2 (web service-oriented infrastructure solution developed as part of the DRIVER-II EC project 3 ). In particular, D-NET is extended with graph database services (based on Neo4J and MongoDB, for payloads) to manage ScholarLynk data model entities. Facebook X  X  Cassandra is used to implement efficient storage and delivery of notification messages for fol-lowed objects.

The ScholarLynk Client is closely integrated with the desk-top experience and provides a range of functions to manage the collections of information objects. In addition, it in-tegrates web data sources (e.g., DRIVER, Google Scholar, etc.) as Windows network drives which can be searched and browsed, and from which resources can be dragged and dropped into collections created by the user in ScholarLynk. The client is implemented in Windows Presentation Foun-dation (WPF) that allows a rich user experience along with www.d-net.research-infrastructures.eu http://www.driver-community.eu
