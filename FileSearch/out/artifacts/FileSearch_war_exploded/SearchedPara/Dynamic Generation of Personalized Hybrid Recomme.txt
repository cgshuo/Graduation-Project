 The problem of information overload has been a relevant and active research topic for the past twenty years. Since then, numerous algorithms and recommendation approaches have been proposed, which gives rise to a new type of problem: recommendation algorithm overload. Although hybrid rec-ommendation techniques, which combine the strengths of individual recommenders, have become well-accepted, the procedure of building and tuning a hybrid recommender is still a tedious and time-consuming process. In our work, we focus on dynamically building personalized hybrid rec-ommender systems on an individual user basis. By means of a dynamic online learning strategy we combine the most appropriate recommendation algorithms for a user based on realtime relevance feedback. Learning effectiveness of ge-netic algorithms, machine learning techniques and other op-timization approaches will be studied in both an offline and online setting.
 H.3.3 [ Information Search and Retrieval ]: Information filtering, Relevance feedback, User-centered design Algorithms, Design, Human Factors Recommender systems, hybrid recommender system, self-learning
Since the introduction of the collaborative filtering prin-ciple by Resnick et al. [1] in 1994, numerous algorithms and recommendation approaches have been proposed to tackle the information overload problem. Every one of these algo-rithms in its own way attempts to connect users to relevant
To address the stated research questions, the problem of building a hybrid recommender system will be reformulated as an optimization task to which known techniques from the domain of machine learning can then be applied. Hybrid recommender systems were first categorized by Burke et al. [2] in function of how they combine individ-ual recommenders (e.g., weighted, cascade, mixed, etc.). Early hybrid recommender systems often internally merged two classical algorithms e.g. a form of collaborative filter-ing (CF) with content-based filtering (CBF) to cope with specific failing use cases. Cornelis et al. [8] for example combined elements of CF and CBF to recommend time-specific items (i.e., events), which get rated only after users have consumed (i.e., visited) the items. Since in these types of hybrids, specific properties of the individual algorithms are exploited, they lack extendibility and easy integration of moreandothertypesofalgorithms.

Hybrid recommenders regarding individual recommenda-tion algorithms as black boxes, are more interesting because they easily allow to extend their models with other algo-rithms of any type. One famous example of such a system is the winning submission to the Netflix prize. Belkor et al. [9] blended 107 individual recommenders into one weighted hybrid model to achieve an optimal RMSE value. Their optimization target however was overall RMSE, and so the weights for the individual algorithms were the same for every user (i.e., static hybrid).

The AdaRec system [10] proposed a dynamic hybrid strat-egy that modifies its prediction strategy at runtime to cope with unique domains, trends and user interests. Focus how-ever, is on a switching strategy that selects the most suit-able recommendation algorithm rather than composing a dynamic weighted hybrid that incorporates input from all algorithms.

Closely related to this work, is the work of Bellogin et al. [4] where the problem of dynamic weighting of ensemble recommenders was analyzed from an information retrieval (IR) perspective. They proposed adaptations of query per-formance techniques from ad-hoc IR to define performance predictors in recommender systems. These performance pre-dictors could then be used to dynamically adapt the rec-ommendation strategy to the situation at hand. Our work differs from theirs, in that we do not adapt our system to predicted accuracy, but rather to realtime relevance feed-back collected through a user-system interaction process. We furthermore investigate the dynamic ensemble weight-ing problem from a machine learning perspective and ob-serve a black box approach for individual recommendation algorithms allowing easy integration of numerous algorithms regardless of complexity or type.
To be able to empirically experiment with various strate-gies and settings, we built a dynamic framework that pro-
The learning approach, or module as referred to in the previous section, is the very heart of this research. We want to dynamically combine predictions made by multiple algo-rithms and use reinforcement learning strategies to adapt in realtime to user feedback. To do so, we will be redefining our problem as an optimization task. We adopt the notation from [14] to define a dynamic ensemble recommender as: where  X  is a weighting factor indicating the importance value of the contribution for every algorithm a to the final predic-tion score g for a user u and item i . We now define an objective function: where with n the total number of algorithms. By choosing an ob-jective function f , we can now minimize (or maximize) f by creating an appropriate vector of algorithm weights  X  ( u ). Interesting choices for objective functions are for example typical evaluation metrics in the recommendation domain like RMSE, MAE, etc. When the objective function is se-lected, known optimization techniques can be applied to gen-erate good choices for the weight vector  X  ( u ). The implied research challenge for the learning module will be twofold. First, we must define what we want to optimize. Do we want minimal RMSE? Maximum precision or recall? Or even other metrics as  X  X umber of user clicks X , as long as they are measurable, can be optimized for. Secondly, an appro-priate optimization technique must be selected to generate a good solution in an appropriate time frame. Since we want to update the hybrid recommendations for a user dynami-cally while user feedback is provided, the appropriate time frame in this context is  X  X lmost realtime X .

We are currently investigating the applicability of genetic algorithms which, according to our earliest experiments, are able to rapidly provide near-optimal solutions to our prob-lem when properly tuned.

Figure 2 shows the results of a small experiment where we test our dynamic hybrid approach on 10 randomly selected users from the MovieLens 1M dataset. For these users, we trained our genetic algorithm to optimize their algorithm weight vectors (optimizing for RMSE) for 25 individual rec-ommendation algorithms. We compared our dynamic hy-brid recommender with a baseline switching strategy that for each user selects the best algorithm (i.e., lowest RMSE). While the difference varies from user to user, an overall ad-vantage of our weighted hybrid approach (over the switching approach) can be observed.

When we manually inspect the generated algorithm weight vectors, we find them to be very different for each user and so our early results seem to confirm that it makes sense to personalize these weights on an individual user level.
We plan on expanding our experiments to other machine learning techniques and to do more formal evaluations, first focusing on offline testing, where user data is simulated or replayed , but gradually moving to online testing where ac-tual users can become involved in the evaluation process. deliver good predictions, their importance weights can grad-ually increase and thereby also their contribution to the final user recommendations.

Some recommendation algorithms, such as neighborhood-based algorithms, can be run with a variety of different set-tings such as different neighborhood sizes, different similar-ity metrics, etc. Our hybrid approach, makes it very easy to empirically test appropriate settings, by plugging in multiple versions of the same algorithm in the system, each time with different settings. The best settings will then automatically prevail.

Scalability issues are avoided in the system by the decou-pling of the individual recommendation calculation and the final hybrid visualization of the results to users. While a slow calculation backend can periodically re-run the indi-vidual recommendation algorithms in batch, a fast online learning module on the frontend can provide users with an interactive and realtime feeling by instantly adapting to user feedback. Finally, we note that because the vector of algo-rithm weights can be made manipulable to the user, the sys-tem is able to account for some very user-specific situations. By for example including a recommendation algorithm that predicts ratings proportional to how recent movies are, the manipulation of the weight of this algorithm allows users to choose for themselves how much they want the recentness of movies to contribute their recommendations. Another inter-esting example is the random recommender. By including the random recommender as one of the individual recom-mendation algorithms, users may introduce an appropriate value of randomness thereby manipulating the serendipity (and diversity) of their recommendations.
In this work, we wish to solve the problem that emerged from solving the information overload problem: the recom-mendation algorithm overload problem. Instead of focus-ing on quality improvement of individual algorithms, we turn towards hybrid recommendation to combine the advan-tages and surpass the quality of its individual components. We propose a future-proof, dynamic weighted ensemble ap-proach that allows to generate hybrid recommenders on an individual user basis. To aid our research task, we have im-plemented a basic recommendation platform that integrates numerous and widely differing algorithms and supports a self-learning strategy to dynamically combine them in an optimal way. We are currently experimenting with genetic algorithms, but plan on involving and comparing multiple types of optimizing techniques like neural nets and other machine learning strategies.

In ongoing work we intend to explore an evaluation strat-egy, both in an offline and online context, to assess the qual-ity of developed methods and eventually address the research questions proposed in this work.
The described research activities were funded by a PhD grant to Simon Dooms of the Agency for Innovation by Sci-ence and Technology (IWT Vlaanderen). [1] Paul Resnick, Neophytos Iacovou, Mitesh Suchak,
