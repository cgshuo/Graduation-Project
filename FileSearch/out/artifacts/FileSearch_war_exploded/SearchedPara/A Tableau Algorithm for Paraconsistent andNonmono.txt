 Description logics (DLs) [1] are a family of formal knowledge representation languages which build on classical logic and are the logic formalism for Frame-based systems and Semantic Networks. E.g. DLs are the logical foundation of the Web Ontology Language (OWL) in the Semantic Web [2] which is conceived as a future generation of the World Wide Web (WWW). As is well known, ontologies or knowledge bases (KBs) in an open, constantly changing and collaborative environment might be not prefect for a variety of reasons, such as modeling errors, migration from other formalisms, merging ontologies, ontology evolution and epistemic limitation etc [3,4,5,6,7]. That is, it is unrealistic to expect that real ontologies are always logica lly consistent and complete. However, DLs, like classical logics, are not good enough to represent some non-classical features of real ontologies [4] such as paraconsistent reasoning and nonmonotonic reasoning.
In order to capture these non-classical features of ontologies or KBs, several ex-tensions of DLs have been proposed. They can be roughly classified into two two categories. The first (called paraconsistent approach ) is extending paraconsistent se-Belnap X  X  four-valued logic [8,9], Besnard and Hunter X  X  quasi-classical logic [10], Elvang-G X ransson and Hunter X  X  argumentative logic [11] and Priest X  X  paradoxical logic [12]. While these paraconsistent semantics can handle inconsistencies in DLs in a way, they share the same shortcoming: their reasoning ability is too weak to infer useful in-formation in some cases. For instance, the resolution rules do not work in four-valued DLs [8,9] and paradoxical DLs [12]; the application of proof rules are limited in a specific order in quasi-classical DLs [10]; and the proof systems are localized in sub-ontologies in argumentative DLs [11]. Moreover, the reasoning in most of existing paraconsistent DLs is monotonic and thus they are not sufficient to express evolving ontologies coming from a realistic world.

Considering a well known example about tweety :let K be a KB whose TBox is {
Bird Fly,Bird Wing } and ABox is { Brid ( tweety ) ,  X  Fly ( tweety ) } .In short, K tells us that all birds can fly, all birds have wings and tweety is a bird and can-not fly. It is easy to see that K is inconsistent. In our view, it might be reasonable that tweety has wings since the fact that tweety cannot fly doesn X  X  mean that tweety hasn X  X  wings, e.g., penguin has wings but it cannot fly. However, Wing ( tweety ) could not be drawn from K in four-valued DLs [9] or in paradoxical DLs [12]. Wing ( tweety ) is unknown in argumentative DLs [11]. Though Wing ( tweety ) might be inferred in quasi-classical DLs [10], both Bird ( tweety ) and Fly ( tweety ) are taken as  X  X ontra-diction X  (both true and flase ). In this sense, the quasi-classical inference might bring over contradictions. In addition, assume that we get a new information  X  Bird ( tweety ) about tweety . That is, we have known that tweety is not bird. Intuitively, we would not conclude that either tweety can fly or tweety has wings. A new KB could be is obtained by adding  X  Bird ( tweety ) in K . However, conclusions from the new KB are the same as
K in quasi-classical DLs. In other words, reasoning based on quasi-classical seman-tics cannot capture nonmonotonic feature of a true world.

The second (called nonmonotonic approach ) is extending DLs with nonmonotonic features, e.g., based on Reiter X  X  default logic [13], based on epistemic operators [14,15] and based on McCarthy X  X  circumscription [16]. They provide some versions of non-monotonic DLs. However, they are still una ble to handle some inconsistent KBs because they are based on classical models. In other words, the capability of incon-sistency handling is limited. For instance, in the tweety example, the original KB tells us that all birds can fly. When we find that penguin are birds which are unable to fly, we will usually amend the concept of bird by treating penguin as an exception (of birds) in those nonmonotonic DLs. It is impossible that we could enumerate all exceptions from incomplete KBs. Therefore, nonmonotonic mechanisms, in our view, might not be competent for deal with inconsistencies.

As argued above, paraconsistent DLs and nonmonotonic DLs have their advantages and disadvantages. It would be interesting to investigate paraconsistent nonmonotonic DLs by combining both paraconsistent and nonmonotonic approaches. While such ideas are not new in knowledge representation, it is rarely investigated how to define a para-consistent nonmonotonic semantics for DLs. The challenge of combining paraconsis-tent DLs with nonmonotonic DLs is to preserve the features of classical DLs while some non-classical features such as nonmonotonicity and paraconsistency in DLs are incorported. Ideally, such a semantics should satisfy the following properties: (1) It is based on the original syntax of DLs (e.g. no new modal operators are introduced); (2) It is paraconsistent, i.e., every KB has at least one model (no matter it is consistent or inconsistent); (3) It is nonmonotonic; (4) I t is still decidable. We note, however, the current approaches to incorporating nonmonotonic mechanism in DL reasoning hardly preserve the standard syntax of DLs, e.g., adding model operators in [14,15], open de-fault rules in [13] and circumscription patten in [16]. In this sense, some proposals of introducing nonmonotonic reasoning in paraconsistent semantics have been considered in propositional logic, e.g., ext ending default reasoning with four-valued semantics in [17] and with quasi-classical semantics in [18]. However, it is not straightforward to adapt these proposals to DLs. Therefore, defining a paraconsistent and non-monotonic semantics for DLs that is of sufficient expressivity and computationally tractable is a non-trivial task.

In this paper, we propose a nonmonotonic paraconsistent semantics, called minimally paradoxical semantics , for DLs. The major idea is to introduce a concept of minimal inconsistency presented in the logic of paradox [19] in DLs so that some undesirable models of DL KBs that are major source of inconsistency are removed. Specifically, given a DL knowledge base, we first define a p recedence relationship between paradox-ical models of the ontology by introducing a partial order w.r.t. a principle of minimal inconsistency, i.e., the ontology satisfying inconsistent information as little as possible. Based on this partial order, we then select all minimally models from all paradoxical models as candidate models to serve for characterizing our new inference. We can show that our inference is paraconsistent and nonmonotonic. Thus nonmonotonic feature is extended in paraconsistent reasoning of DLs without modifying the syntax of DLs. Fur-thermore, we develop a decidable, sound and complete tableau algorithm for ABoxes to implement answering queries. In this paper, though we mainly consider DL ALC since it is a most basic member of the DL family, we also argue that our technique for ALC can be generalized in the other expressive DL members. The paraconsistent logic adopted in the paper is the paradoxical DL ALC [12] because it is closer to classical ALC compared to other multi-valued semantics, e.g., Belnap X  X  four-valued semantics. Description logics (DLs) is a well-known family of knowledge representation formalisms. In this section, we briefly recall the basic notion of logics ALC and the paradoxical semantics of ALC . For more comprehensive background reasoning, we refer the reader to Chapter 2 of the DL Handbook [1] and paradoxical DLs [12]. Description Logic ALC . Let L be the language of ALC .Let N C and N R be pairwise disjoint and countably infinite sets of concept names and role names respectively. Let N
I be an infinite set of individual names . We use the letters A and B for concept names, the letter R for role names, and the letters C and D for concepts. and  X  denote the universal concept and the bottom concept respectively. Complex ALC concepts C, D are constructed as follows:  X  restriction: (  X  R.C ) I c = { x | X  y, ( x, y )  X  R I c implies y  X  C I c }
An ALC knowledge base (KB, for short) is a finite set of axioms formed by concepts, roles and individuals. A concept assertion is an axiom of the form C ( a ) that assigns membership of an individual a to a concept C . A role assertion is an axiom of the form R ( a, b ) that assigns a directed relation between two individuals a, b by the role R .An ABox contains a finite set of concept assertions and role assertions. A concept inclusion is an axiom of the form C 1 C 2 that states the subsumption of the concept C 1 by the concept C 2 .A TBox contains a finite set of concept inclusions. An KB contains an An interpretation that satisfies all axioms of a KB is called a model of the KB. Given a KB K ,weuse Mod ( K ) to denote a set of all models of K .AKB K is inconsistent iff Mod ( K )=  X  .WesayaKB K entails an axiom  X  iff Mod ( K )  X  Mod ( {  X  } ) , denoted K| =  X  .
 Paradoxical Semantics for ALC . Compared with classical two-valued ( { t, f } ) seman-tics, the paradoxical semantics is three-valued ( { t, f,  X  } ,  X  expressing both true and false ) semantics where each concept C is interpreted as a pair + C,  X  C of (not neces-sarily disjoint) subsets of a domain  X  I and the union of them covering whole domain, i.e., + C  X  X  C =  X  I . We denote proj + ( C I )=+ C and proj  X  ( C I )=  X  C .
Intuitively, + C is the set of elements which are known to belong to the extension of C , while  X  C is the set of elements which are known to be not contained in the extension of C . + C and  X  C are not necessarily disjoint but mutual complemental w.r.t. the domain. In this case, we do not consider that incomplete information since it is not valuable for users but a statemen t for insufficient information.

Formally, a paradoxical interpretation is a pair I =(  X  I ,  X  I ) with  X  I as domain, where  X  I is a function assigning elements of  X  I to individuals, subsets of  X  I  X   X  I ) to (1) ( ) I =  X  I ,  X  ;(2) (  X  ) I =  X  , X  I ;(3) (  X  C ) I = proj  X  ( C I ) , proj + ( C I ) ; C  X  { x | X  y, ( x, y )  X  proj + ( R I ) and y  X  proj  X  ( C I ) }
The correspondence between truth values in { t, f,  X  } and concept extensions can be easily observed: for an individual a  X   X  I and a concept name A ,wehavethat  X  A I ( a )= t ,iff a I  X  proj + ( A I ) and a I  X  proj  X  ( A I ) ;  X  A I ( a )= f ,iff a I  X  proj + ( A I ) and a I  X  proj  X  ( A I ) ;  X  C I ( a )=  X  ,iff a I  X  proj + ( A I ) and a I  X  proj  X  ( A I ) .
 For instance, let  X  = { a, b } be a domain and A, B two concept names. Assume that I is Then A I ( a )= t , A I ( b )= B I ( a )=  X  and B I ( b )= f .
  X 
I \ proj  X  ( C I a KB is called a paradoxical model of the KB. Given a KB K ,weuse Mod P ( K ) to denote a set of all paradoxical models of K . For instance, in the above example, I is a of {
A B } .AKB K paradoxically entails an axiom  X  iff Mod P ( K )  X  Mod P ( {  X  } ) , denoted K| = LP  X  .

We say a paradoxical interpretation I is trivial if A I =  X  I , X  I for any concept name A . Note that contradictions which have form of A  X  A ( a ) for some concept name A and some individual a in ALC are only satisfied by trivial paradoxical interpretations. In general, trivial paradoxical interpretations/models cannot provide any information about querying since all queries are answered as  X   X   X . For simplifying discussion, we mainly consider KBs without contradictions. Paradoxical description logic is proposed in [12] as a paraconsistent version of descrip-tion logics. In this section, we present a minimally paradoxical semantics for ALC by introducing a nonmonotonic reasoning mechanism minimally inconsistency (see [20]) to extend ALC with both paraconsistent and nonmonotonic features. The basic idea of our proposal is to introduce a preference relation on paradoxical models and to filter those models that cause more inconsistencies. Indeed, our proposal is able to maintain more consistent information in reasoning than previous approaches.

In a paradoxical DL, every paradoxical model can be represented as a set of concept assertions and role assertions similar to classical models. Since the constructor of the negation of a role  X  R is absent in ALC (see [9]), for simplicity to convey our idea, we mainly consider concept assertions in defin ing the preference relation in this paper.
Next, we introduce a partial order  X  between two paradoxical interpretations to char-acterize their difference on concept assertions.
 Definition 1. Let I and I be two paradoxical interpretations in ALC .Wesay I is more consistent than I , denoted I X  X  iff  X  I and I have the same domain  X  ;  X  if A I ( a )=  X  then A I ( a )=  X  for any concept name A  X  N C and any individual  X  there exists a concept name A  X  N c and an individual a  X   X  such that A I ( a )=  X  Intuitively, the first condition states that if I 1 and I 2 do not share a common domain, then they are not comparable; the second condition ensures that if I 1  X  X  2 then I 2 I
For instance, let  X  = { a, b } be a domain and A a concept name. Let I 1 and I 2 be Then we can easily see I 1  X  X  2 .If I 3 is a paradoxical interpretation such that A I 3 = { b } , { a } .Then I 1  X  X  3 and I 3  X  X  1 .Thatis, I 1 and I 3 are incomparable. So, in general  X  is a partial order.

Note that  X  is anti-reflexive, anti-symmetric and transitive. In other words, (1) I  X  X  for any paradoxical interpretation I ;(2)if I X  X  then I  X  X  ;and(3)if I X  X  and I  X  X  then I X  X  .
 We denote II as either I X  X  or I = I .So is also a partial order.
 Definition 2. Let K be a KB in ALC . A paradoxical model I of K is minimal if there exists no other paradoxical model I of K such that I  X  X  .Weuse Mod P min ( K ) to denote the set of all minimal paradoxical models of K .
 Intuitively, minimal paradoxical models are paradoxical models which contain minimal inconsistency. Since a non-empty KB always has a paradoxical model, it also has a minimal paradoxical model. That is, no matter whether a non-empty KB K is consistent or not, we have Mod P min ( K ) =  X  while Mod ( K )=  X  for any inconsistent KB K . Example 1. Let K =( { A B } , { A ( b ) ,  X  R.  X  B ( a ) ,R ( a, b ) } ) be a KB and  X  = { a, b } be a domain. We assume I is a paradoxical interpretation such that A I = { only minimally paradoxical model of K . Thus Mod P min ( K )= {I} .
 For a consistent KB, we can show that the set of its classical models corresponds to the set of its minimally paradoxical models. To this end, we first show how to transform concept name A  X  N C ,arolename R  X  N R and an individual name a  X  N I ,define For instance, let  X  = { a, b } and I c be a classical interpretation such that A I c = { a } and B I c = { a, b } . We transform I c into a paradoxical interpretation I where A I = { a } , { b } and B I = { a, b } ,  X  .

If K is consistent, we use Mod T ( K ) to denote the collection of all paradoxical mod-els of K transformed as above. It is interesting that each classical model corresponds to exactly one minimally paradoxical model for a consistent KB.
 Proposition 1. For any consistent ALC KB K , Mod P min ( K )= Mod T ( K ) . To see the validity of this result, we note that every paradoxical model in Mod T ( K ) is minimal because paradoxical models of a consistent KB are incomparable.

Based on the notion of minimally paradoxical models, we can define the following entailment relation.
 Definition 3. Let K be a KB and  X  an axiom in ALC .Wesay K minimally paradoxi-cally entails  X  iff Mod P min ( K )  X  Mod P min ( {  X  } ) , denoted by K| = m LP  X  . lation from a KB to an axiom by their minima lly paradoxical models. Because the infer-ence focuses on those paradoxical models in which inconsistency is minimized, | = m LP can give consideration to both the classical entailment | = and the paradoxical entailment | =
LP . When a KB is consistent, an inconsistency. When a KB is inconsistent, | = m LP inherits | = LP since every minimally able than | = and | = LP . For instance, in the example about tweety (presented in Section 1). We have K| = m LP Wing ( tweety ) and K X  X  X  Bird ( tweety ) } | = m LP Wing ( tweety ) .
Note that the minimally paradoxical entailment is determined by restricting para-doxical entailment to the subclass of minimal paradoxical models. Thus the entailment relation is nonmonotonic.

For instance, given an ABox A = { A ( a ) ,  X  A B ( a ) } where A, B are concept names and  X  = { a } a domain. Let I be a paradoxical interpretation s.t. A I = { a } ,  X  and B I = { a } ,  X  . It easily check I is only one minimally paradoxical model of A . then there exist three minimally paradoxical models of A I i ( i =1 , 2) where A I i = { a } , { a } and B I 1 = { a } ,  X  and B I 2 =  X  , { a } . Thus A | = m LP B ( a ) .
In addition, | = m LP is paraconsistent because each consistent KB has at least one min-imally paradoxical model.
 Theorem 1. | = m LP is paraconsistent and nonmonotonic.
 The next result shows that, if a KB is consistent, then the entailment | = m LP coincides with the classical entailment.
 Proposition 2. Let K be a consistent KB and  X  an axiom in ALC .Then This proposition directly follows from Propositio n 1. Note that for an inconsistent KB, | =
LP differs from entailment to all KBs in ALC while the classical reasoning in consistent KBs is still preserved.

Under classical entailment, anything can be inferred from an inconsistent KB. Thus, it is straightforward to see the following corollary.
 Corollary 1. Let K be a KB and  X  an axiom in ALC .If K| = m LP  X  then K| =  X  . However, the converse of Corollary 1 is not true in general when K is inconsistent. For instance, we have { A ( a ) ,  X  A ( a ) ,  X  A B ( a ) ,  X  B ( a ) }| = B ( a ) while { A ( a ) ,  X  A ( a ) ,  X  A B ( a ) ,  X  B ( a ) } | = m LP B ( a ) .
The resolution rule is important for automated reasoning in DLs. It is well-know that the inference rules modus ponens , modus tollens and disjunctive syllogism special cases of the resolution rule .
The resolution rule is not valid for | = m LP in the following sense, while it is invalid in paradoxical DLs. In other words, the infere nce power of paradoxical DLs is strength-ened by the concept of minimally paradoxical models.
 Proposition 3. Let C, D, E be concepts and a an individual in ALC . However, the resolution rule is not valid in general under minimally paradoxical seman-tics. For instance, { A ( a ) ,  X  A ( a ) ,A B ( a ) } | = m LP B ( a ) .
We remark that minimally paradoxical semantics does not only preserve the reason-ing ability of classical semantics for consistent knowledge but also tolerate inconsisten-cies (possibly) occurring KBs.

The results shown in this section demonstrate that the entailment relation | = m LP is much better than the paradoxical entailment defined in [12]. The minimally paradoxical semantics introduced in last section is based on minimal paradoxical models. A naive algorithm for reasoning under the new paraconsistent se-mantics could be developed by finding all minimal models from (possibly infinite) para-doxical models of a KB. However, such an algorithm would be very inefficient if it is not impossible. Instead, in this section, we develop a tableau algorithm for the new semantics. Tableau algorithms are widely used for checking satisfiability in DLs. Espe-cially, signed tableau algorithm ) has been developed in [12] for paradoxical ALC .Our new tableau algorithm for minimally paradoxical semantics is obtained by embedding the minimality condition into the signed t ableau algorithm. The challenge of doing so is how to find redundant clashes (i.e., a clash is caused by an inconsistency) and remove them from the signed tableau.

We first briefly recall the signed tableau al gorithm for instance checking in ABoxes (the details can be found in [12]). The signed tableau algorithm is based on the notion of signed concepts. Note that roles are not signed because they represent edges connecting two nodes in tableaux. A sign concept is either T C or F C where the concept C is in NNF (i.e., negation (  X  ) only occurs in front of concept names). Each signed concept can be transformed into its NNF by applying De Morgan X  X  law, distributive law, the law of double negation and the following rewriting rules: We u s e T A to denote a signed ABox whose concept names are marked with T ,i.e., T
A = { T C | C  X  X } .A signed tableau is a forest whose trees are actually composed of nodes L ( x ) containing signed concepts and edges L ( x, y ) containing role names. GivenanABox A andanaxiom C ( a ) , the signed tableau algorithm starts with F A as the initial forest of T A X  X  F C ( a ) } . The algorithm then applies the signed expansion rules, which are reformulated in Table 1. The algorithm terminates if it encounters a clash: { T A, F A } X  X  ( x ) or { F A, F  X  A } X  X  ( x ) where A is a concept name. Finally, we obtain a completion forest The problem whether A paradoxically entails C ( a ) is decided by checking whether the completio n forest is closed, i.e., checking whether every tree of the completion forest contains at least one clash. The algorithm preserves a so-called forest model property, i.e., the paradoxical model has the form of a set of (potentially infinite) trees, the root nodes of which can be arbitrarily interconnected.
In the following, we develop a preference relation on trees of the completion forest to eliminating the trees with redundant inconsistencies.

Let F be a completion forest and t atreeof F . We denote IC ( t )= { T A | {
T A, T  X  A } X  X  ( x ) for some node L ( x )  X  t } . Intuitively, IC ( t ) is the collection of contradictions in t .
 Definition 4. Let t 1 and t 2 be two trees of a identical completion forest. We denote t  X  we say t 2 is redundant w. r. t . t 1 .
 Intuitively, if t 2 is redundant w.r.t. t 1 then t 2 contains more inconsistencies than t 1 does.

Atree t of F is a minimally redundant tree of F if t IC t for each tree t in F and there is not any other tree t in F s.t. t  X  IC t . A minimally redundant tree is a tree we want to keep. A minimal completion forest of F , denoted by F m , is composed of all minimal trees of F . It can be easily verfied that F m always exists. Given an ABox A andanaxiom C ( a ) , the process of computing the minimal completion forest of T A X  X  F C ( a ) } is called the minimal signed tableau algorithm .
 A paradoxical interpretation I satisfies atree t iff for any node L ( x ) and any edge L ( x, y ) in t ,wehave (1) x I  X  proj + ( A I ) if T A  X  X  ( x ) and x I  X  proj  X  ( A I ) if T  X  A  X  X  ( x ) ; (3) ( x I ,y I )  X  proj + ( R I ) if R  X  X  ( x, y ) .
Based on the above definition, it follows that if I is a paradoxical interpretation and any individual a  X  N I . As a result, there exists a close relation between  X  (defined over paradoxical models) and  X  IC (defined over trees).
 Theorem 2. Let t and t be two trees of a completion forest F .If I and I be two paradoxical interpretations satisfying t and t respectively, then I X  X  iff t  X  IC t . Proof.(Sketch) Note that the ABox contains only concept assertions. We show only that the theorem is true for atomic concept A . It is straightforward to prove that the conclusion is also true for a complex concept by induction. (  X  )If t  X  IC t ,then IC ( t )  X  IC ( t ) . We want to show that I X  X  . Assume A
I ( a )=  X  . There is a concept assertion B ( b ) ,where B is a concept name and b an B
I ( b )=  X  implies B I ( a ) =  X  . Therefore, I X  X  by Definition 1. (  X  )If I X  X  , we need to show that t  X  IC t , i.e., IC ( t )  X  IC ( t ) . For any con-cept name and b an individual name, such that B I ( b )=  X  but B I ( a ) =  X  . Thus { IC ( t ) .

Now we are ready to define the concept of m inimally closed completion forests. A completion forest F is minimally closed iff every tree of F m is closed.

If the completion forest of T A X  X  F C ( a ) } by applying the minimal signed tableau algorithm is minimally closed, then we write A m LP C ( a ) .
 We show that our minimal signed tableau algorithm is sound and complete.
 Theorem 3. Let A be an ABox and C ( a ) an axiom in ALC . We have Proof.(Sketch) We consider only atomic concept A here. Let F be a completion forest for T A X  X  F A ( a ) } by applying the minimal signed tableau algorithm. We need to prove that F is minimally closed, i.e., every tree of the minimal forest F m is closed, iff A| (  X  ) Assume that F is minimally closed. On the contrary, supposed that A | = m LP then I | = LP A ( a ) since every minimal paradoxical model is always a paradoxical model. There exists a tree t which is satisfied by I in F and t is not closed by the proof of Theorem 7 which states that the signed tableau algorithm is sound and complete w.r.t. paradoxical semantics for ALC (see [12]). We assert that t is not redundant. Otherwise, there might be another tree t  X  IC t . We define a paradoxical interpretation I satisfing t . It is easy to see that I and I have the same domain by induction on the structure of complete F . By Theorem 2, we have I  X  X  , which contradicts the minimality of I . Thus the completion forest F for T A X  X  F A ( a ) } contains at least a tree t that is neither closed nor redundant, which contadicts with the assumption that F is minimally closed. Thus A| = m LP A ( a ) .
 (  X  )Let A| = m LP A ( a ) . On the contrary, supposed that F is not minimally closed. Then there exists a tree t of complete F such that t is neither closed nor redundant. Since t is not closed, by the proof of Theorem 7 (see [12]), we can construct a paradox-ical interpretation I such that I is a paradoxical model of A .However, I | = LP A ( a ) , a contradiction. Supposed that I is not minimal, there exists a paradoxical model I of A such that I  X  X  in the same domain. Thus there exists a tree t that is satisfied by I with t  X  IC t by Theorem 2, which contradicts to the assumption that t is not re-paradoxical model of A but I | = m LP A ( a ) . Therefore, F is minimally closed. Example 2. Let A = { C D ( a ) ,  X  C E ( a ) } be an ABox and D E ( a ) an axiom. There are four trees of the completion forest F of { T A X  X  F ( D E )( a ) } where t t D E ( a ) by Theorem 3. In this paper, we have presented a nonmonotonic and paraconsistent semantics, called minimally paradoxical semantics, for A LC , which can be seen a naturally extension of the classical semantics. The suitability of our semantics is justified by several important properties. In particular, the new semantics overcomes some shortcomings of existing paraconsistent DLs and nonmonotonic DLs. Based on the signed tableau, we have de-veloped a sound and complete algorithm, named minimal signed tableau, to implement paraconsistent and nonmonotonic reasoning with DL ABoxes. This is achieved by intro-ducing a preference relation on trees of comp letion forests in signed tableau. This new approach can be used in developing new tableau algorithms for other nonmonotonic DLs. There are several issues for future work: First, we plan to implement the minimal signed tableau for DLs. Before this is done, we will first develop some heuristics for ef-ficient implementation; Second, we will explore applications of the new paraconsistent semantics in ontology repair, revision and merging.
 The authors appreciate the referees for their helpful and constructive comments. This work was supported by NSFC under 60973003, 60496322 and ARC under DP1093652.
