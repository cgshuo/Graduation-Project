 Different recommender systems based on collaborative tech-nology have been proposed that recommend new relevant products to users by exploring past user preference pat-terns. The most common approach generates recommen-dations based on user consumption patterns and on rating information gathered during each user-item interaction. In this paper we introduce a novel approach based on views of items, which are basically more complex models of the user-item interactions aimed at capturing the aspects on which users base their ratings. The resulting view-based approach recommends views to users instead of the traditional items. The proposed algorithms are tested on an artificial database, and the results show that modeling further interaction infor-mation improves the accuracy of predictions, provides a ro-bust background to explain recommendations, exposes users to more specific recommendations and leads to better mod-els of user preferences.
 H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval X  Information filtering Algorithms, Experimentation, Measurement item views, user modeling, collaborative filtering, recom-mender systems
Recommender systems suggest items of interest to users based on either explicit or implicit preferences. The most popular recommendation systems are based on Collabora-tive Filtering (CF) which is a personalization filtering tech-nique that exploits the preference patterns of a collection of users in order to predict the utility of new items for a par-ticular user. Pure collaborative filtering requires no content knowledge as well as represents every user-item interaction with a single rating describing the overall user satisfaction with the item (see [3] and [4] for review). Recent approaches go beyond the classical scheme, either by including content-based mechanisms (hybrid systems) [3], or by incorporating multiple explicit user ratings for content-related features in order to increase the accuracy of the recommendations (mul-ticriteria recommender systems) [1, 5].

In this work we introduce the concept of item views to step further on the problem of the limited understanding of user preferences found in the current single-rating recommend-ing approaches. Our method can enhance the capabilities of CF by supporting mechanisms to recommend users views of items instead of the items themselves as well as provide in-sights regarding the reasons why users like items. The paper is organized as follows: section 2 presents the main motiva-tions of this work, introduces the concept of view of item and presents a simple algorithm to validate this approach; section 3 describes the experimental testing dataset; section 4 summarizes the main experimental results; and section 5 discusses the approach and its advantages over other recom-mending approaches.
Most of the research carried out in collaborative filter-ing proposes algorithms that build similarity measures by exploring only the user-item matrix of ratings. Although recent methods are considering other information, such as user demographics or item content profiles, recommendation models lack of a precise understanding of the user-item in-teractions. Two main issues are briefly described regarding this line of thought: In domains such as travel&amp;tourism, there exist customizable items, i.e. items composed by a number of components that can be configured and consumed in different ways, whose possible configurations could be understood as unique items. For instance, an accommodation experience can be quite dif-ferent if consuming either a double or a single room (figure 1). In such situation, an hotel should be recommended at-tending to the customizable components and their affinity to the active user. Recommendations should be built bottom-up, from components to the global item, if this component information is relevant to compute an overall prediction for the recommended travel experience.
 Figure 1: Depending on the selected components, slightly different configurations of the same item may completely change the user X  X  satisfaction.
 The general assumption that  X  two users rate similarly, then they have similar preferences  X  is a strong assessment that does not hold in all situations. Consider, for instance in the domain of movie recommendation, a scenario in which two users have seen the same two movies, and they both rated these movies in the same positive way. By following this assumption, if the first user watches another movie and rates it with a positive opinion, the new movie should be rec-ommended to the second user. But the reasons why users rated the items may be different. As a result, recommender systems that ignore the fact that similar ratings do not nec-essarily mean similar preferences would lead to inaccurate recommendations.
A view is a concept that makes sense only from the user point of view an can be interpreted as a user-centered repre-sentation that results from each user-item interaction. The idea behind views is that a user-item interaction can be ex-plained by a set of features and a collection of ratings for that features. Features are supposed to contain valuable in-formation to explain both user interactions and preferences. Let A be the set of all possible item attributes. Let I = { i 1 ,i 2 ,... } denote a set of items. By definition, each item i j may have associated a content representation that aggregates attributes of A , that is, T j = { a | a  X  X } . Sup-pose Q = { Q 1 ,Q 2 ,... } is the collection of views of all items that result from every user-item interaction. By definition, element Q w  X  Q aggregates features of a more general set F , Q w = { f | f  X  X } , whose elements represent item attributes, subjective features (provided by users) and objective fea-tures missing in the item contents, F = A X  X  U  X  X  I .
Given the set U = { u 1 ,u 2 ,... } of users and the collection of all possible s-dimensional points Q s = { ~q 1 ,~q 2 ,... } , resulting from combining all features in F , we define as the interaction function that carries each ( u k a rating element r ( u k ,i j ,~q z ), that defines the interaction of the user k with the item j based on point ~q z , which repre-sents a view of the item. Not null components of each ~q represent aspects which are relevant for the interaction and each not null component of vector ~r k,w contains the degree of satisfaction of the user with a feature of the view Q w
Figure 2 depicts a conceptual representation that may help to understand both the difference between items and views and the benefits of modeling views. Four users are  X  X ooking X  the item through different sides of the cube. For user 1 the interaction is described with view Q 1 = { f 1 for users 2 and 4 the interaction is represented with view Q 2 = { f 2 ,f 4 ,f 5 } and for user 3, with view Q 3 = { f The dissimilarity between users 1 and 3 can be explained Figure 2: Illustration of the concept of item views. using a traditional approach: users have different overall ratings (boldface component of the rating vectors, fig. 2) because they have different preferences, even if they are rat-ing different views. But the other situations can not be explained so easily without the view approach. Users 1 and 2 (or 1 and 4) match perfectly in their overall ratings, but they have different preferences and this is reflected in the fact that they are rating different views of the item, with different ratings on common features. Users 2 and 4 have also the same overall rating and though they are rating the same view they have different preferences, too. Finally, users 2 and 3 have different overall ratings, but they could have the same preferences despite they are consuming different views of the item.

Figure 3 compares the classical item-recommendation ap-proach against the new view-based approach. The illustra-tion on top depicts a use case in which the user is recom-mended a tourism item as a whole. By contrast, in the bottom figure the recommending process is enhanced with view information, and the user is recommended an specific view of the item, i.e., the one which is expected to produce the highest satisfaction in the user.
 Though views may require new techniques that exploit the additional feature-level information, traditional recommend-ing schemas could be used as the basic building blocks to recommend views as described in this section. Basically, the view-based feature aggregation algorithm builds a prediction  X  k,w for a view w by aggregating predictions for its features, where  X  k,wm represents the predicted satisfaction of user k with feature m of view w and {  X  wm } are certain aggrega-tion weights. Predictions for individual features  X  k,wm be computed using any traditional recommendation scheme; and particularly the neighbor-based approach, in which pre-dictions are interpolated from ratings of similar features and/or users. The relative weights {  X  wm } can be fixed de-pending on the domain, learned from user collaborative pro-files or computed using statistical techniques. Directions to alleviate the problem of obtaining the view structure and the feature ratings required to compute predictions  X  are given in the discussion section.
The evaluation of the view-based approach cannot be per-formed on real data yet, since traditional databases such as MovieLens do not contain user preferences for views. Such a database is difficult to build since it requires the develop-ment of an adequate platform in which both the view feature structure and the user ratings are explicitly or implicitly de-rived from the user behavior. Experimental results shown in this paper come from a validation of the view-based fea-ture aggregation algorithm on an artificial dataset and its comparison against a traditional item-based recommenda-tion algorithm.

Synthetic items are represented with a content profile of size p which contains textual information about the item. Each item also has a latent profile that defines a hidden representation used for rating purposes. The latent pro-file is generated by combining certain latent variables L = { l ,l b ,... } according to a certain probability distribution. Users are represented with preference profiles of the same size p and several parameters that model their interaction behavior. Basically, these parameters are assigned statisti-cally and model the activity, randomness in decisions, inter-action redundancy and risk of each user. Each user prefer-ence profile is generated by selecting p random latent vari-ables from L , one for each type of feature.

Interactions are described by a collection of features and their corresponding user ratings. Views are generated sta-tistically, by exposing users to the collection of items in the dataset. The resulting collection of views for a certain user depends both on the user and on several fixed parameters that model the domain of application. The amount of ex-plicit ratings available in the dataset (i.e. the level of in-volvement of the users when providing ratings for features) can be controlled during the interaction process.

The synthetic rating of user k on a certain view Q computed as a weighted sum of individual ratings for fea-tures, which are function of the distance between the user preference profile and each feature profile in the latent space.
In addition to the Normalized Mean Absolute Error, the following metric has been considered to evaluate the accu-racy of predictions: a r is the width of the rating scale,  X  k,w represents the pre-diction for user k and view w , and r k,w the corresponding real preference. h k,w measures the variability of the user ratings on views, defined as the mean absolute distance be-tween the rating of user k for view w and the overall rating of the user corresponding to the underlying item. Weighing factors  X  and  X  account for the relative contribution of ac-curacy and variance of ratings to Z. Therefore, Z evaluates how effective the prediction engine is at resolving different satisfactions for different views of the same item. The higher the Z, the more valuable recommendations are.
We ran three experiments for different levels of view struc-ture of the dataset using the view-based feature aggregation algorithm. Results were compared to those from a base-line item-similarity algorithm [6] with parameters x=0.8 and neighborhood size 20, ignoring any information about views.
The testing dataset was synthesized from a collection of 222 real movie content profiles, which contained plain in-formation about directors, music, photography, actors and genres. 600 random users were also statistically generated and the simulation synthesized 12,382 views, 13,406 interac-tions and 13,406 item ratings. Three different versions of the dataset were synthesized, for different quantities of feature ratings explicitly provided by users (see legend on table 1).
Table 1 summarizes precision results for each dataset and algorithm. Compared to the simple item-similarity algo-rithm, results show that considering sub-item information introduces substantial improvements in the rating predic-tion estimation. Besides, using views increases the average value of the variability measure Z, so that apart from being more specific, recommendations result more valuable to end users. Figure 4 illustrates some view prediction results for a sample user in terms of h k,w values and the normalized dif-ference between each view prediction and the corresponding real user rating. There are several views that have high val-ues of h k,w , what means that recommending a view instead of the item itself, added to the fact that the prediction error is low, would increase the satisfaction of the synthetic user. Figure 4: h and prediction error values for a sample user and different recommended views using Syn-thetic1 .
 Table 1: nMAE and Z-measure results for the view-based feature aggregation and item-similarity al-gorithms. Dataset Synthetic1 contains 48,259 rat-ings that correspond to 46,148 features; Synthetic2 18,865 ratings corresponding to 18,496 of 46,148 fea-tures and Synthetic3 does not contain any explicit ratings for features.
 Synthetic1 Synthetic2 Synthetic3
Views are a promising concept that provides a mecha-nism to capture the reasons why users interact with items, what means that resulting user preference models would be more reliable. Some relevant applications could be: (1) rec-ommendation of customized items, like tourism services, in which specific views or configurations of each accommoda-tion can be recommended; (2) recommendation of simple items, such as movies or books, in which personalized expla-nations of every recommended item can be provided.

However, the view-based approach requires to fully char-acterize each view of an item, both its structure of features and the ratings given to the aggregated features. In some contexts views may be explicitly defined by the user, but in other domains they must be inferred from other explicit or implicit information. The intrusiveness problem can be al-leviated by implementing different mechanisms that extract information from the user interaction with the recommender engine (purchasing history, user search queries,...). Attrac-tive user interfaces and richer user models are also required to take advantage of this paradigm. Besides, we are cur-rently developing a procedure to learn the view associated to each user-item interaction from user purchase history. If view z contains p + u features, and user k provided an overall rating r k,z for the view and explicit ratings for p features, { r k,zn 0 | n 0 = 0 ,...,p  X  1 } , ratings for the unrated features { f n } could be estimated using regression models.
 Context-aware recommenders [2] add new dimensions with descriptive information about the context of each user-item interaction. Though they are supposed to be able to explain ratings depending on the context, they may not capture all the reasons why the user selected a certain product or why the user rated the product that way, since reasons may be others than simply context. The view-based approach is ca-pable of modeling more general descriptive data (such as subjective attributes, missing item attributes, user tags,...) on which users base their satisfaction. The view-based ap-proach is also different from hybrid recommenders [3] that use textual features in two key points: (1) view features are not restricted to item attributes and (2) hybrid rec-ommenders, as any other traditional recommender system, recommend items, not views of items. Compared to multi-criteria rating recommenders, both approaches could more effectively explain user ratings and could provide a better model of user preferences. However, in the view-based ap-proach the user is free to specify what individual features are used to describe the experience at different levels of granular-ity. Besides, the view-based approach is specially interesting in domains, such as travel&amp;tourism, in which products are consumed in different ways and multiple times depending on both the user context and needs. Our approach would suggest the user how to experience items by recommending views or configurations instead of items.
The authors would like to thank the support of the  X  X in-isterio de Educaci  X on y Ciencia (MEC) X  through the grant TSI2007-65677-C02-02. [1] G. Adomavicius and Y. Kwon. New Recommendation [2] G. Adomavicius, R. Sankaranarayanan, S. Sen, and [3] G. Adomavicius and A. Tuzhilin. Toward the next [4] Z. Huang, D. Zeng, and H. Chen. A comparison of [5] H.-H. Lee and W.-G. Teng. Incorporating multi-criteria [6] B. Sarwar, G. Karypis, J. Konstan, and J. Reidl.
