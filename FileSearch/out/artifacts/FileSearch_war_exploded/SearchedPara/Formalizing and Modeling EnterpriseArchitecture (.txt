 In practice, Enterprise Architecture (EA) is driven top-down by the business and/or IT strategies and bottom-up by projects and programs which are often owned and driven by the business units. These initiatives, programs and projects are often evaluated via EA principles. EA principles aim to ensure that current and new projects and programs are aligned with, and not deviating from, the business and IT strategies [ 18 , 22 , 26 ]. In this context, EA principles refer to either the engineering view on the EA (such as how the elements of the EA must be implemented or changed to provide a certain functionality and what business requirements are needed for this functionality), or the social view (such as the ones related to organization X  X  culture or human aspects). For example, an EA principle  X  X e friendly with the client X  can refer to both the social and engineering views. The social view of this principle could mean that the organiza-tion recommends its employees to be nice to the customers, which is an informal recommendation and cannot be enforced. Whereas, the engineering view of this principle could mean that the organization has a good IT infrastructure and intends to develop a user-friendly software experience. This latter engineering view can be formalized and enforced. In our work, we aim to focus on the engi-neering view of the EA principles that can be modeled, formalized and enforced. Based on the experience with our industry partner, EA principles are usually written informally in a natural language format. This can cause ambiguities and lead to several interpretations. Moreover, there is no mechanism for consistency checking between various EA principles. In addition, the traceability between EA principles and the goals, objectives and strategies of the organizations are not fully documented. This lack of traceability can become problematic, particularly when the organizations X  objectives and strategies change or a new project is introduced to it. It can also lead to difficulties in analyzing the impact of EA principles on the goals and objectives of organizations, as well as difficulties in performing trade-off analysis deciding to which EA principles adhere to. A methodology for formal representation of EA principles together with a tool support can help organizations reduce the issues presented above. In recent years, much work has been done in other research fields such as regulatory com-pliance and goal-oriented requirements engineering in formalizing regulations and business rules (cf. N  X  omos3 [ 16 ]and Legal-URN [ 9 ] for analyzing regu-latory compliance between laws, regulations and business rules and processes.) Furthermore, there are open-source tools such as jUCMNav [ 3 ] which support the representation and analysis of goal-oriented models. These approaches have shown that having a structured framework with tool-support can ensure that the organization X  X  goals are aligned and in compliance with the current regulations and laws. Similarly, we look at EA principles from an engineering and normative perspective, noting that EA principles share similar characteristics with soft-laws [ 20 ]: semi-structured, represented in natural language and informal. Thus, a goal-oriented modeling approach could be suitable for formalizing, modeling and analyzing EA principles [ 21 ].
 The identified issues with EA principles X  formalism, as well as their resem-blance with soft-laws and the previous work conducted in formalizing laws and business processes and analyzing of regulatory compliance, lead us to the follow-ing research question: How can we represent EA principles in a semi-formal structure with a goal-oriented modeling language? What are the needed language constructs? What are the modeling constraints? We select Goal-oriented Requirements Language (GRL) [ 2 ] as the model-ing language for formalizing EA principles. GRL is part of the User Require-ments Notation (URN) [ 17 ] which is currently the only modeling language part of the ITU-T standard. Furthermore, URN has an open-source, Eclipse-based tool-support, called jUCMNav [ 3 ]. GRL supports different bottom-up and top-down evaluation mechanisms (e.g., qualitative, quantitative, hybrid) that allow analysis of goal satisfaction and trade-off analysis when choosing between dif-ferent alternatives. New profiles can be created by annotating GRL intentional elements with stereotypes and incorporating constraint rules written in Object Constraint Language (OCL). The language can also be extended with the help of Metadata and URN links . To that end, we use and extend the jUCMNav plug-in with a principle-base set of stereotypes and OCL rules.
 30 ] driven by practice. In our previous work, we analyzed the EA principles of the Schiphol group [ 21 ] and then mapped them to GRL intentional elements. In the current iteration, we conducted a more extensive literature study building on the work of Stezler [ 25 ] and Haki [ 12 ], analyzing the existing definitions of EA principles. In this paper, we provide guidelines on how to define EA principles in a more structured format and how to model them with GRL. We aim to improve the Principle-based GRL profile to capture various principle structures. We provide steps for modeling and we define means to verify the correctness and well-formedness of the GRL models. We validate our approach with a new case study within a governmental organization in Europe. We uploaded our GRL extension, together with the case study description, the resulted models and instructions to an online repository 1 .
 We present the steps for modeling EA principles with GRL in Sect. 3 . We eval-uate our approach with a case study and present the case results in Sect. 4 .We conclude and present directions for future work in Sect. 5 . In EA, principles have been defined as guidelines and rationales for the design and evolution of technology plans [ 4 , 10 , 15 , 24 , 26 ]. In other words, EA principles can be seen as  X  X ules of conduct X  and can be made more precise and operational by formalization. The empirical studies conducted by Haki, Fischer and Winter (cf. [ 8 , 12 , 13 , 32 ]) provide insights from a practitioners X  point of view on the use of principles. According to them, one of the difficulties in the use and adoption of EA principles is caused by a lack of understanding of their impact. According to Winter [ 32 ], EA principles miss a methodology for the adoption and application guidelines and there are no regular checks for usefulness and consistency. Bommel et al .[ 27 , 28 ]. The authors present a collection of EA principles from TOGAF and show the feasibility of formalization. The approach is done in two steps. The first step consists of interpreting the EA principles as defined in nat-ural language. The authors identified a set of issues regarding the interpretation from natural language. The second step includes the representation of EA prin-ciples as an ORM/ORC expression 2 . Their approach has limitations since the EA principles are represented in isolation. They are not connected to either the goals of the organization or other EA principles. Therefore this formalism does not support the impact analysis. Platianiotis et al. [ 23 ] proposed a conceptual framework for tracing the EA design decisions to their rationals, however the method does not provide any formalism for the EA principles. Additionally, the framework proposed by van Zee et al. [ 29 ] contains logic-based rules for verifying the integrity of EA decisions, but does not consider EA principles. ARMOR [ 7 ], which is based on Goal-Oriented Requirements Engineering (GORE) approach aims to fill the gap for modeling motivation but it does not focus on formally modeling the principles. Moreover, ARMOR is not scalable and does not include automatic analysis mechanism and tool support. On the other hand, the motivational extension to ArchiMate [ 5 ] tries to help representing EA principles in terms of goals and rationales, but does not provide any formalism. Focused on information systems, Akhigbe et al .[ 1 ] introduce an adaptive EA framework (BI-EAEA 3 ), that allows one to pro-actively accommodate the changes that occur in evolving settings (e.g., how an enterprise responds to various changes, such as modification, deletion and addition of organizations X  objectives). However, this method does not provide any formalization for EA principles and it only evaluates changes without considering the EA principles X  impacts.
 We previously introduced a framework called Principles-based GRL [ 21 ], in which we made the first steps towards formalizing EA principles and set grounds on checking compliance between EA principles and EA models [ 20 ]. In this paper, we aim to improve the GRL profile for principles and introduce constraints for modeling EA principles (i.e. OCL rules). Our approach aims to represent EA principles in terms of rationals, goals and operational actions. It also takes advantage of the GRL tool-support provided by using jUCMNav. jUCMNav allows users to break the model into hundreds of diagrams and intentional ele-ments and perform GRL analysis for all of the models. This feature which helps scalability of GRL also solves the scalability issues mentioned in the literature. In this section we aim to: 1. state the requirements for defining a set of EA principles 2. create a consistent definition of EA principles that enable us to analyze the EA principles in the Goal-oriented Requirements Language (GRL). 3. define modeling constraints (i.e. OCL rules) for ensuring the well-formedness of EA principles when represented in GRL. 3.1 Requirements for Defining a Set of EA Principles Lindstrom [ 19 ] uses the characteristics of  X  X ood requirements, originating from requirements engineering X  (e.g., IEEE Std 830-1998, Software Requirement Specification) to define the requirements for a good set of EA principles. The authors distinguish between syntax (the form of the principle) and semantics (the meaning and content of the principles). The criteria for assessing the quality of EA principles are as follows: verifiability, completeness, correctness, modifi-ability, unambiguity, consistency and stability. Similarly, TOGAF [ 26 ] lists five criteria that distinguish a set of good EA principles: understandable, robust, complete, consistent and stable.
 SMART set of EA principles (e.g., specific, measurable, achievable, realistic, time-related). The authors introduce the notion of prioritizing the EA principles based on the key objectives (contrary to Lindstrom who intentionally left out these issues.) An important requirement is the completeness of the set of EA principles.
 following requirements for a set of EA principles. 1. Understandable: Each principle should be sufficiently definitive and 2. Complete: Every potentially important principle governing the 3. Consistent: Principles should not be contradictory to the point 4. Measurable: Both on long-term and short-term, over the future 5. Stable: Principles should be enduring, yet able to accommodate 3.2 Mapping EA Principles to Goal-Oriented Requirements Language Constructs In this subsection, we  X  summarize the definitions of EA principles as found both in the current aca-demic literature and practice  X  introduce the GRL constructs and the stereotypes needed to formalize the EA principles  X  we present a mapping of EA principles to GRL constructs.
 Goal-oriented Requirements Language (GRL), which is based on the i* lan-guage, describes business concerns, goals satisfactions and stakeholders X  beliefs and dependencies. It can be extended and become domain specific by using stereotypes attached to the basic constructs of the language. Introducing stereotypes allows us to first define a domain specific notation for the EA prin-ciples and then introduce restrictions for the modeling language to assure the well-formedness of the models.
 We summarize the definitions of the existing constructive elements of EA principles as found both in the current academic literature and practice, and we annotate them with stereotypes as presented in Table 1 . All stereotypes related to EA principle are grouped under the name ST P rinciple . An example of the mapping is shown in Fig. 3 .  X  Name: This field captures the essence of the principle and should be easy to remember [ 11 , 22 , 26 ]. EA principles are not part of the GRL language definition. In order to evaluate the impact of the EA principles on a goal (and vice versa ), we introduce an element that explicitly refers to the EA principle itself and stereotyped it with the annotation Principle IE. For example, Principle 4 ( We prefer to communicate digitally with citizens and businesses of Sect. 4 is annotated by Principle softgoal in GRL in Fig. 3 .  X  Statement: This field is a clear, unambiguous description of the princi-ple [ 11 , 22 , 26 ]. The statement is in some sense a summary of the EA principle,  X  Added Value: This field states clearly what is aimed to be achieved when  X  Impact and Restrictions: This field defines the impact of an EA principle  X  Key Actions: This field states what the operational actions to be taken are  X  Preconditions: This field contains preconditions and requirements to be ful- X  Architecture Domain: This field states to which part of the architecture 3.3 OCL Rules for Checking the Well-Formedness of EA Principles The Object Constraint Language (OCL) is a declarative language for describing rules that apply to formal models. Due to its Eclipse OCL plug-ins that sup-port rule definitions, checking, and explanation, OCL can be integrated with jUCMNav. It is, therefore, possible to define and verify OCL rules for any GRL model. We provide ten OCL rules for checking the well-formedness of the EA principles. Given the space restrictions for this paper, we exemplify in Fig. 1 the implementation of one OCL rule 6 . 1. An EA principle must be modeled as a softgoal. (PrincipleAsSoft-
Goal) As stated before, the EA principles are seen as  X  X ules of conduct X  and cannot be fully enforced. Since the EA principles are high-level and somewhat vague in nature, we enforce modeling any element that has the stereotype Principle as a softgoal intentional element. 2. A key action must be modeled as a task. (KeyActionAsTask) By refining the EA principles to the level of tasks we ensure we operationalize the usage of EA principles. 3. The added value must be modeled as a softgoal or as a goal. (AddedValueAsGoalOrSoftgoal) EA principles should have an impact on the high level goals or softgoals of the organization. Softgoals , represent what a stakeholder wants to achieve. Contrary to goals, softgoals do not have quantifiable measurements. Goals , however, are more precise, have quantifi-able measurements and can be clearly achieved. 4. EA Principles, added values, preconditions, and key actions cannot be modeled as beliefs. (BeliefsNotStereoTyped) This rule is required since beliefs in GRL are different entities from the intentional elements (i.e. goals, softgoals, resources, and tasks). Beliefs capture the rationales and justifications of GRL intentional elements and their links. 5. Each EA principle must have at least one contribution from a key action. (KeyActionToPrinciple) In order to operationalize the EA prin-ciples, we consider it necessary to refine their definition until we reach the tasks X  level. This means that it is necessary to clearly define the key actions for realizing the EA principle. Therefore, each intentional element that has the stereotype Principle must be refined and have at least one contri-bution from an intentional element with the stereotype KeyAction . 6. If a precondition is introduced using a contribution link, the link must get the maximum value. (ContributionFromPreconditionIs-Max) In GRL, the evaluation algorithms depend on the values of the links.
By giving the contribution the maximum value (e.g., 100 or make ), we enforce that the precondition has at least high priority in the evaluation as the other intentional elements linked to the parent. 7. If a precondition is introduced using a dependency link, the pre-condition must be modeled as source. (PreconditionAsSource-
OfDependency) In GRL notation, the dependency links are modeled as follows: target source . We introduce this OCL rule in order to assure that preconditions are modeled correctly in GRL notation. A dependency link shows a relationship between a dependent intentional element which 8. Each EA principle must contribute to at least one (soft) goal (here 9. Each (soft) goal (here stereotyped AddedValue ) of the organiza-10. The EA principles should not propagate a  X  X onflict X  satisfaction 3.4 Synthesis In Sect. 3.1 , we presented requirements for a set of good principles based on a summary of previous approaches found in the literature (e.g. [ 19 , 22 , 26 ]). Fur-thermore, in Sect. 3.2 , we revised definitions of EA principles from literature EA principles. We mapped these constitutive elements of EA principles to con-stitutive elements of GRL, creating a Principle-based GRL profile. In order to check the correctness of the GRL models for EA principles we defined ten OCL rules in Sect. 3.3 . In Table 2 , we check the properties of a good set of principles over the defined OCL rules. In the previous sections, we presented our motivation for formalizing EA prin-ciples in GRL, along with the steps and requirements for this task. We evaluate our approach with a case study. We offer a posteriori rationalization and for-malization of the EA principles used by a governmental organization whom for professional reasons wishes to remain anonymous, hereafter called eGovernment . 4.1 Case Study Presentation eGovernment is the tax collection and customs administration of a European country. As part of the Ministry of Finance, eGovernment is responsible for supervising the import, export and transit of goods, detecting fiscal, economic and financial frauds, levying and collecting taxes, and paying out income-related benefits for child care, rent and health care.
 The administration of eGovernment has discussed about how they envision their organization in 2020: an efficient governmental organization that achieves maximum compliance at minimum cost. Furthermore, an organization that is well in contact with citizens and businesses, interacts with them and adapts to their needs and behaviors. Changing circumstances, such as aging population, globalization and digitalization require eGovernment to transform itself. This emerging vision and the way eGovernment wants to be positioned into society was translated into nine design principles to guide their transformation. We choose to analyze in detail a particular EA principle regarding the digi-talization of eGovernment , as presented in Fig. 2 . 4.2 Results: Formalization and Modeling of EA Principles in GRL In this section, we first provide the extended definition of eGovernment  X  X  EA Principle: We prefer to communicate digitally with citizens and businesses .Next, we analyze and interpret the statements and create the GRL model for the principle based on the mapping and OCL rules of Sect. 3 . This definition has been translated from its original language to English. We tried to avoid any interpretation errors and kept the translation as close to the original meaning as possible.
 guage using an adaptation of the EA principles X  structure from TOGAF [ 26 ]: name, statement, rationale and implications. In this context, the term  X  X atio-nale X  refers to the goals that are tackled by applying the principle and  X  X mplica-tions X  refers to the requirements and preconditions that have to be fulfilled. In Fig. 2 , the name is represented in bold text and the statement is composed of the following paragraph. The first set of bullet points represent the  X  X ationale X  and those under  X  X hat means that X  represent the  X  X mplications X . We observed that the natural language text yields additional information about the Preconditions and Key Actions for operationalization of the EA principle.
 that it follows the EA principles X  definition presented in Sect. 3 . We identified the following information in a tabular format: natural language description, Statement , (for which we marked in Fig. 2 each statement), the simplified GRL IE description, GRL Desc. , the reference of the current GRL element, of the GRL intentional element and the stereotype when applicable, the element to which it is related, Linked to , the relation type, the link value, Link Val. . Additional information, such as the actor or comments regarding the modeling solution or difficulties in interpretation of the natural language description can also be included. We present a partial semi-formal tab-ular representation of eGovernment  X  X  EA principle: We prefer to communicate digitally with citizens and businesses in Table 3 .
 One limitation for the a posteriori rationalization and the formalism is the challenge of evaluating the contribution links. In this example, we have intro-duced the values randomly. This step should be performed together with the architects and other involved stakeholders. A second challenge is raised by the interpretation of the natural language statements.
 4.3 Analysis of the EA Principles and GRL Models In eGovernment , the EA principles (also originally called Appointments ) were introduced with social aspects of the organization in mind. The EA principles were left ambiguous so that they could raise questions and bring people together for negotiations and finding solutions.
 In our analysis, we identified and could confirm the following facts: EA princi-ples are ambiguous. They have no traceability links to strategies, other principles, or activities of the organization. EA principles do not have a change management mechanism in place and have no formal mechanism for checking compliance. We also noticed that our formalism is more appropriate to the technology related EA principles. That is why we chose the EA principles related to technology, applications and infrastructure to formalize.
 4.4 Results: Evaluation from eGovernment  X  X  Enterprise Architects To ensure GRL models captured the essence of the EA principles correctly, we evaluated the models with two Enterprise Architects from eGovernment .The architects found the GRL models very useful in that they could visualize the principles and were easier for them to understand the links between the rationale, added value, actions and the goals of the principles. Furthermore, since the EA principles were linked to the high-level goals of the organization, it made them easier to justify and analyze. Also, we captured the traceability links between the related EA principles which helped the architects to document the links and verify the connections. The architects also informed us that assigning values for contribution links can be done at design time together with the architects. principles with high-level goals as well as low-level operationalized activities of the organization. In this paper, we focused on how to formalize and represent EA principles in a goal oriented modeling-language. For this, we first presented five requirements for good sets of EA principles and how to create EA principles. We, then, introduced a Principle-based GRL profile by adding stereotypes to the intentional elements of GRL. The correctness of the models is assured by defining ten OCL rules. Our method was applied to a case study from a European governmental organization. We formalized their technology related EA principles in GRL and conducted interviews with the involved architects for evaluation.
 In future work, we will focus on creating a formal change mechanism for revising the set of EA principles. This is a missing item for creating a  X  X ta-ble X  set of EA principles. First, changes in the set of principles (e.g., addition, deletion or modification of principles) trigger consistency checks on the models and revision of the current landscape, second, analysis of the current situation (e.g., current objectives or current environment of the organization, as well as addition of new projects and programs) trigger changes in the set of principles, potentially making the principles outdated and create conflicts with the new goals, new situations and potential imposed regulations. In order to realize the second type of revision, good traceability links between EA principles and busi-ness processes and architecture are needed, therefore we will also focus on this stream of research.

