 A place is a locale that is frequently visited by an individual user and carries important semantic m eanings (e.g. home, work, etc.). Many location-aware applications will be greatly enhanced with the ability of the automatic discovery of personally semantic places. The discovery of a user X  X  personally semantic places involves obtaining the physical loca tions and semantic meanings of these places. In this paper, we propose approaches to address both of the problems. For the physical place extraction problem, a hierarchical clustering algorithm is proposed to firstly extract visit points from the GPS trajectories, and then these visit points can be clustered to form physical places. For the semantic place recognition problem, Bayesian ne tworks (encoding the temporal patterns in which the places are visited) are used in combination with a customized POI (i.e. place of interest) database (containing the spatial features of the places) to categorize the extracted physical places into pre-defined types. An extensive set of experiments have been c onducted to demonstrate the effectiveness of the proposed approaches based on a dataset of real-world GPS trajectories. H.2.8 [ Database Management ]: Database Applications  X  data mining, spatial da tabases and GIS I.5.2 [ Pattern Recognition ]: Design Methodology  X  classifier design and evaluation, pattern analysis Algorithms, Experimentation Spatial-temporal data mining, Place discovery, Place recognition, GPS trajectory, Location-aware computing Mobile devices with the ability of positioning and wireless communication are becoming ubiquitous, and there have been an increasing number of location-aware applications. The key element of these applications is location. However, instead of latitude &amp; longitude coordinates, many emerging location-aware applications require a more semantic notion, i.e. place, which is a human-readable labeling of locations, e.g.  X  X ome X ,  X  X ork X ,  X  X estaurant X , etc. Using the notion  X  X lace X  can help to implement more intelligent and adaptive loca tion-aware applications, e.g. location-based reminder [1], pers onalized route planner [2], POI recommender [3], etc. Motivated by the potential merits, many efforts have been devoted to the learning of places from the historical locations (i.e. trajectory) left behind by the users. The discovery of a user X  X  personally semantic places can be divided into two sub-problems, i.e. obtaining the physical locations that matter to his/her daily life and labeling these locations as places with semantics. For the former problem, most of the existing approaches apply clustering algorithms on users X  trajectories to find places where they have visited. These clustering algorithms can be roughly divided into three categories, i.e. partitioning clustering (e.g. a variant of K-Means clustering algorithm proposed by Ashbrook and Starner [4]), density-based clustering (e.g. DJ-Cluster [5] and CB-SMoT [6]) and time-based clustering (e.g. a time-based clustering algorithm by taking advantage of the temporal continuity of the location points proposed by Kang [7]). However, these significant locations are represented by a geographical point, a point plus radius or a geographical region without semantic meanings. For the latter problem, some location-aware applications such as Reno [8] and Connecto [9] allow users to manually input meaningful labels by interacting with their interfaces. Apparently, manual labeling lays extra interaction burden on users, and thus does not scale well when the number of locations becomes large. Some other applications transform physical place locations to semantic place labels by using reverse geo-coding techniques [10, 11, 12]. However, semantics fetc hed from geographic information databases is always represented as postal address (e.g. x Road, y City), which is often as challenging to interpret as raw locations. Besides, the personal meaning (e.g. home, workplace) of a place is almost impossible to be dr awn from geographic information databases. This paper proposes an approach for automatically discovering a user X  X  personally semantic places (including extracting physical places and estimating semantic meanings) from his/her GPS trajectories. For physical places ex traction, this paper proposes a hierarchical clustering algorithm which leverages the advantages of both time-based clustering (which is simple and can work in an incremental way on mobile devices ) and density-based clustering (which can accommodate arbitrary sh apes of places) to effectively extract physical places from GPS trajectories. For semantic places estimation, this paper extracts tem poral features of visit patterns (e.g. dwell time, visit frequency, etc.) from each physical place, and adopts simple classificati on algorithm to categorize these places into pre-defined types which can be used as the semantic labels. Besides, a customized PO I database containing the spatial features of all POIs w ithin the area of interest is adopted to further improve classification accuracy. This paper proposes a hierarchical clustering algorithm to extract the physical locations of the places where the users have visited based on a three layered model. As shown in Figure 1, the lowest level is the GPS trajectories wh ich contain all the GPS points sorted by their timestamps (see Definition 1), the middle level contains all the visit points (see Definition 2), and the highest level represents the physical places (see Definition 3). The hierarchical clustering algorithm takes the GPS trajectories as input and conducts a time-based clus tering to identify visit points, and then extracts physical places from these visit points by using a density-based clustering. Definition 1 . (GPS point &amp; GPS trajectory) A GPS point is a pair p = ( lng , lat ), representing the longitude -latitude location. A GPS trajectory is a sequence of pairs Traj = &lt;( p which p k is a GPS point and t k is a timestamp ( t k Definition 2 . (Visit point) A visit point is a triple VP = ( p , t point stands for a location p around which the user stays for longer than a time threshold (i.e. t out  X  t in &gt;  X  Definition 3 . (Physical place) A physical place is a collection of visit points P = { VP 1 ,..., VP n }, in which VP 1 . p ,..., VP to each other. The time-based clustering algorithm for visit point extraction depicted in Figure 2 works incrementally and processes the GPS points of the GPS trajectory along the time axis (lines 2-4). A new visit point is found when the current cluster of GPS points (which are close to each other but far from the previous cluster of GPS points) spans a significant of time (lines 6-7). If the time duration of the current cluster is not long enough, however, the algorithm does not simply ignore it, but checks the time interval and distance between the current cluster and the previous cluster. If the time interval is longer than  X  time and the distance is less than a tolerated distance threshold  X  tolerated , the algorithm combines these two clusters and treats the result as a visit point (lines 10-12). The reason to use two cluster variables (i.e. CC and PC ) in the algorithm is to alleviate the discontinuous GPS sampling problem, which may lead to missing some visit points. For example, a user enters a large building from one side and leaves from another side, or the GPS device spends a long period of time to reacquire signal when the user leaves the building. 
Figure 2. A time-based clusteri ng algorithm for visit point When using the algorithm in practice, the parameter  X  should always be set larger than the parameter  X  tolerate the discontinuous GPS sampling problem (the experiences to tune these two parameters will be exploited experimentally in Section 4.1). The output of the visit point extraction algorithm is a set of clusters, each of which represents a visit point VP = ( p , t where p is the centroid of the cluster, t timestamps of the first and the last GPS points of the cluster respectively. Because one place may be visited several times, we create clusters of visit points to represent physical places as Definition 3. Several kinds of cl ustering techniques (e.g. K-Means, DBSCAN, etc.) can be employed for this problem. We seek to automatically assign semantics to the extracted physical places by classifying them into some general pre-defined types. Given that the characteristics of user activities are profiled according to the place type (e.g. users tend to stay at home for a long period of time during night time), the places can be categorized by looking at the temporal patterns in which they are visited. To implement the idea, for each extracted physical place, we extract features from each visit point of it, and calculate statistical values to form a feature vector, and then create a Bayesian network to map the feature vector to pre-defined place types. The Bayesian network show n in Figure 3 is composed of two kinds of nodes as following (the nodes with the border of dashed line represent visit point layer features, and the gray nodes represent place level features).  X  Visit point level nodes: These nodes represent features  X  Place level nodes: These nodes represent features that are The Bayesian network is to encode the probability distribution associated to the fact that the user is at a certain type of place for a given visiting pattern. The parameters of the network are learnt based on the calculated features of a number of different types of places which have been correctly labeled, and the final model can be used to estimate the type of a new place. The result of the Bayesian network classification for physical place x is a probability vector PV x = { p 1 , p 2 ... p T }, where T is the number of place types for consideration, p i ( i = 1... T ) is the probability that physical place x is classified as type i . The Bayesian network classifies the physical places by exploiting the temporal patterns in which they are visited. However, there may exist ambiguous place types which cannot be classified with high confidence based only on the temporal visit patterns. For example, users may visit a grocer y store and a bank with similar temporal patterns (e.g. short duration with high time of day entropy). To alleviate this problem, a customized POI database which contains a corpus of POIs (including the properties of place location and place type) within the area of interest can be used in combination with the Bayesian network to further improve classification accuracy. Based on the POI database, we construct a feature vector for each extracted physical place as FV x f weight of place type i in the geographical region of physical place x (denoted as G x ). The weight of place type is defined based on the idea of TF-IDF as follow. where n i x is the number of POIs of place type i within G total number of POIs within G x , N i is the total number of POIs of place types i in the POI database, and N is the total number of POIs in the POI database. Taking both the Bayesian networ k classification result and the POI database information into consideration, we calculate a confidence vector for physical place x CV x = { c 1 , c T is the number of place types for consideration, c the confidence that place x is finally classified as type i . type i based on the Bayesian network, nf i is the normalized weight of place type i in the geographical region of physical place x , and  X  is the weight to adjust the importance of p i and nf place is finally classified as the place type with the maximum confidence, and we call it an enhanced place classifier . In order to evaluate the performance of our approach, we conducted a number of experiments based on real GPS trajectories collected from 10 participants for nearly two months. All participants involved in the experiment are students or faculties of our lab. They were instructed to carry out the experiment in an open-ended wa y to make the recorded GPS trajectories reflect their daily lives as truly as possible, i.e. we did not set up any constraints on the da ta recording environment, and the participants could take the recording devices as they went about their normal lives. The partic ipants were asked to log the place type by choosing from a pre-defined list and write a textual description about the current place whenever they entered it. The place logs provided by the particip ants can be used as the ground-truth information about the places they have visited. Before applying the physical place extraction algorithm, the GPS trajectories need to be cleaned due to the uncertainty of GPS devices which may produce outliers. The GPS points which are far away from the reasonable sequence of temporally consecutive GPS points and result in unreasonable speed (speed greater than 27m/s based on the experience ga ined in [13]) are removed. In this section, we tried to tune the parameters and evaluate the effectiveness of our time-based cl ustering algorithm for visit point extraction. For the incorrect results made by the algorithm, we distinguish them as either false negative (i.e. the algorithm reports the user is moving while he/she is actually visiting a place) or false positive (i.e. the algorithm reports the user is visiting a place while he/she is actually moving). We compared our work with the existing time-based clustering algorithm [7] (we refer it as ETC ), and tuned the parameters in or der to reduce both false negative and false positive. The major difference is that ETC does not have the parameter  X  tolerated , and it simply ignores the cluster whose time duration is not long enough. We fixed the parameter  X  300 seconds based on the experiences gained in [7], and monitored the performance of ETC by adjusting the parameter  X  cluster . Figure 4 shows the influence of parameter  X  false positive ratio ( FPR , i.e. the ratio of the number of false positive to the number of extracted visit points) and the false negative ratio ( FNR , i.e. the ratio of the number of false negative to the number of logged visit points) of the algorithm. It can be found from the figure that the FNR is significantly sensitive to  X  (higher than 1000 meters) will both result in high FNR. This is because setting  X  cluster too low will cause the extracted clusters to be too small to represent a visit point, and setting  X  cluster will cause multiple visit points to be merged into one cluster, and therefore missing to discover some visit points. Besides, we cannot simultaneously minimize FPR and FNR for ETC, so we and F = 0.175), which considers both FPR and FNR like F-measure used to evaluate the information retrieval systems. 
Figure 4. The influence of cluster distance parameter on the algorithm performance of the existing time-based clustering. 
Figure 5. The influence of tolerated distance parameter on algorithm performance of our time-based clustering (  X  cluster Our time-based clustering algorithm adopts a tolerated distance parameter  X  tolerated to alleviate the discontinuous GPS sampling problem, and this means that our algorithm tends not to miss visit points even when  X  cluster is small. Therefore, we can fix  X  minimize the FPR and tune  X  tolerated to reduce the FNR. As shown in Figure 5, we fix  X  cluster = 30 meters to minimize the FPR (FPR = 12.27%), and the FNR is significantly decreased as increasing  X  algorithm mistakenly report a user is visiting a place when the user turns on the mobile phone far away from the location where he/she turns off it after a long period of time, and therefore cause the FPR increasing significantly. Thus, we find an optimal  X  value to minimize Formula 3 (  X  tolerated = 300 meters, and F = 0.062). This experiment tried to verify the enhanced place classifier by taking advantage of both the Bayesian network and a customized POI database. We used Google Pl aces API to collect public places for the area where the experiment was carried out and stored the results (including each place X  X  name, location, type and address) to the customized POI database. Because it is not feasible to create user-specific classifiers in practice, we adopted leave-one-user-out validation to evaluate the enhanced place classifier, and monitored the performance by adjusting the value of  X  . The enhanced place classifier gained the best average performance (75.00%) when setting  X  = 0.7 (i.e. 70% influence from the Bayesian network and 30% infl uence from the POI database). However, the variation rules of classification performance with respect to  X  of different place types are greatly different from each other. As shown in Figure 6 and Figure 7, the classification performance of places  X  X ome X  and  X  X ork X  is monotone increasing with respect to  X  , while the classification performance of places  X  X ecreation X  and  X  X usiness X  is monotone decreasing with respect to  X  . 
Figure 6. The effect of parameter  X  on the place classification 
Figure 7. The effect of parameter  X  on the place classification This means that these participants tended to have strong temporal regularity to visit personal places  X  X ome X  and  X  X ork X  and have weak temporal regularity to visit places  X  X ecreation X  and  X  X usiness X . Besides, places  X  X es taurant X ,  X  X upermarket X ,  X  X hop X  and  X  X our X  have sophisticated va riation rules of classification performance with respect to  X  . These experimental results can give heuristics to help location-aw are applications that consider different types of places to decide how to set the parameter  X  . For example, the application can set  X  = 1.0 to find places  X  X ome X  and  X  X ork X  based only on the Ba yesian network, and set  X  = 0.0 to find places  X  X ecreation X  and  X  X usiness X  based only on the POI database. In this paper, we propose a framework to discover users X  personally semantic places from their GPS trajectories, including physical place extraction and semantic place estimation. We propose a hierarchical clustering algorithm for the physical place extraction problem, and a combined Bayesian network and customized POI database approach for the semantic place estimation problem. The experi mental results drawn from a dataset of real GPS trajectories demonstrate the effectiveness of the proposed framework. This work was supported by the Ministry of Industry and Information Technology of China (No. 2010ZX01042-002-003-001), the Natural Science Foundation of China (No. 60703040), the Zhejiang Provincial Natural Science Foundation of China (No. LY12F02046), Science and Technology Department of Zhejiang Province (Nos. 2007C13019, 2011C13042). [1] Li, Y., Guo, A., Liu, S., Gao, Y. and Zheng, Y.T. 2010. A [2] Chung, J. and Schmandt, C. 2009. Going My Way: A user-[3] Zheng, Y., Zhang, L., Ma, Z., Xie, X. and Ma, W.Y. 2011. [4] Ashbrook, D. and Starner, T. 2003. Using GPS to learn [5] Zhou, C., Frankowski, D., Ludford, P., shekhar, S. and [6] Palma, A.T., Bogorny, V., Kuijpers, B. and Alvares, L.O. [7] Kang, J.H., Welbourne, W., Stew art, B. and Borriello, G. [8] Iachello, G., Smith, I., Consolvo, S., Chen, M. and Abowd, [9] Barkhuus, L., Brown, B., Bell, M., Sherwood, S., Hall, M. [10] Bogorny, V., Kuijpers, B. a nd Alvares, L.O. 2009. ST-[11] Ying, J., Lu, E., Lee, W.C. and Tseng, V.S. 2010. Mining [12] Xiao, X., Luo, Q. and Xie, X. 2010. Finding similar users [13] Chen, L., Lv, M.Q. and Chen, G.C. 2010. A system for 
