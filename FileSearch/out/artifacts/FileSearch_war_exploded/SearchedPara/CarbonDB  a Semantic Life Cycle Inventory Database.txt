 We demonstrate CarbonDB, a web application for Life Cycle Inventory data management. Life Cycle Assessment pro-vides a well-accepted methodology for modelling environ-mental impacts of human activities. This methodology re-lies on the decomposition of a studied system into interde-pendent processes in a phase called Life Cycle Inventory. Several organisations provide processes databases contain-ing thousands of processes with their interdependency links. The usual workflow to manage those databases is based on the manipulation of individual processes, which turns out to be a very harnessing work even if there are strong se-mantic similarities between the involved processes. In pre-vious publications, we proposed a new workflow for LCA inventory databases maintenance based on the addition of semantic information to the processes they contained. This method considerably eases the modeling process and offers a synthetic view of the dependencies links. We created a web application based on this approach composed of a back-end for data management and a front-end for searching processes and visualize the dependencies links in a graph.
 H.3.3 [ Information Search and Retrieval ]: Clustering; H.3.2 [ Information Storage ]: Record classification; H.3.1 [ Content Analysis and Indexing ]: Indexing methods; H.2.8 [ Database Management ]: Scientific Databases Clustering, Environmental database, Life Cycle Assessment, Onotology, Semantic annotation
In order to reduce the environmental impact of human activities, it is necessary to model and evaluate the environ-mental effects of these activities. This is the objective of the Life Cycle Assessment (LCA) method [3], which aims at de-termining the environmental impacts of a product, a service or, generally speaking, any human activity. This method can take into account all the life cycle stages of a product such as manufacture, use and recycling. LCA can assess var-ious environmental impacts, like greenhouse gases emissions or chemical products dissemination.
 into inter-process relations in the detailed-graph. We built a web application implementing this approach re-stricted to greenhouse gases emissions: CarbonDB 1 . It con-tains a back-end for LCI data management. It also contains a front-end offering a radial graph visualization of the macro-graph and the detailed-graph, a keyword-based search en-gine and an impact visualization interface.
The goal of Life cycle assessment methodology is to evalu-ate the environmental impacts of, for instance, a product or a company X  X  activity. This can be achieved by creating an inventory of elementary flows from and to the environment, for every step of a product X  X  production process or for every activity of a company [8][9]. In the LCA terminology, these steps or activities are called processes .
 A process is associated with environmental impacts (e.g., the greenhouse gases emitted or the resulting water pollu-tion) and with other processes. For instance, it is necessary to extract and transport coal in order to run a coal power plant. The total amount of environmental impacts of a pro-cess is the sum of its own impacts (i.e., that are not from its predecessors) and the impacts of its predecessors multiplied by a scalar dependency coefficient.
 The dependency links between the processes can be repre-sented using a digraph. Let G ( V, E ) be the digraph repre-senting dependency links between processes; in our termi-nology, this graph is called detailed-graph . The vertices set V is the set of processes. The edges set E contain the rela-tions between processes and the set of weights associated to the edges is the set of coefficients. Let p 1 and p 2 be vertices, then a directed edge from p 1 to p 2 means that process p 2 depends on p 1 .
 Determining the impacts for a specific process requires to recursively calculate the impacts of its predecessors. As ex-plained in [12], the dependency coefficients form a basic sys-tem of linear equations. Thus it is possible to calculate the impacts of the processes using iterative methods 2 or any di-rect method (like the Gaussian elimination)[13].
 Our approach is based on the existence of two layers of di-rected graphs. The first graph, called the detailed-graph , contains the dependency relations between processes. The second graph, called the macro-graph , contains the rela-tions between groups of processes (or macro-processes ). The macro-graph offers a simplified view of the data contained in the detailed-graph and eases the expression of new de-pendency relations between semantically close processes. In order to semantically regroup processes, we choose to index them with a set of keywords that are stored in an ontology [7][11]. The vocabulary of this simple ontology is composed of keywords and predicates to create binary relations be-tween these keywords.
 Using this ontology, we can regroup processes and depen-dency coefficients into semantic groups. A macro-process is
Because our approach is focused on modelling the depen-dency relations between the processes, we choose to restrict the environmental impacts to green house gases emissions, thus we named this application CarbonDB.
Life Cycle Inventory data is subject to uncertainty. It is therefore possible to use an iterative method and stop the algorithm if the delta obtained between two iterations is smaller than the uncertainty. This could significantly lower the computation time compared to a direct method.
 section of sets of keywords 3 ; A set of keywords contains all the keywords linked to a specific keyword considering only one predicate; 3) An interface to edit the macro-relations between groups of processes using groups of coefficients. The translation of the macro-relations into a set of detailed-relations is done in batch mode. As the detailed-graph con-tains only generated relations, this procedure does the fol-lowing actions: i) delete all the detailed-relations; ii) trans-late every (well defined) macro-relations; iii) calculate the impacts of the processes.
 The front-end has two main components: a keyword-based search engine and a visualization interface. The latter is composed of an interactive visualization of the macro-graph and the detailed-graph, and a panel containing the details of the active node in the graph visualization. The graph visu-alization also serves as a navigation interface in the graphs. Both graphs are displayed in a radial way: we focus on one node and display its predecessors and successors on semicircles and their neighbours into concentric semicircles. Finally, we added a logging functionality, which offers a branching and tagging capability. Thus we can manage mul-tiple databases, consult the user actions history and revert any change.
Back-end For the demonstration, we will show the con-ference participants how to create a new macro-relation, starting from the groups definitions with the keywords on-tology already containing some keywords. Data used during the demonstration will come from the U.S. National Re-newable Energy Laboratory (NREL) Life Cycle Inventory Database [2]. We will only use the inventory data for elec-tricity production in the U.S. More specifically, our demon-stration will be focused on the electricity production from coal, which is complex enough to apprehend the importance of the macro-graph. First, we define a group containing transport processes, a group containing electricity produc-tion from coal (there are several types of coal that can be used to produce electricity: lignite coal, bituminous coal, etc.) and a group containing the dependency coefficients between those two groups (we also set all the greenhouse gases impacts of the processes and the coefficients values). Then we can start the translation and impacts calculation processing. To demonstrate the importance of the ontology, we finally add a new keyword corresponding to a new mode of transport that could be used to transport coal. Conse-quently, the group containing the transport processes and the group of coefficients are automatically updated and, af-ter setting the proper value for the newly created process and coefficients, we can start again the processing. At the end we will obtain new detailed-relations between this new transport process and the already existing electricity pro-duction from coal processes.
 Front-end The results of those actions in the back-end are then shown in the front-end, where the conference partici-pant can navigate on the macro-graph (containing only two nodes) and the corresponding detailed-graph. In order to demonstrate the keyword-based search engine and the nav-igation interface, we will switch to another database filled
As it is sometimes necessary to define a dimension contain-ing only one keyword, we introduce the notion of common keyword , behaving like a dimension and applying to the co-ordinates of every cell in the group.

