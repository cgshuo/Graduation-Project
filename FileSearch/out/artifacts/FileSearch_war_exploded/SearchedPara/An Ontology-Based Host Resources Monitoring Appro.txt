 As a large-scale distributed system, grid discoveries unemployed resources in net-work, collects idle resources, and provides co mputing and storage services to users. If the real-time status of employed resource of all voluntary nodes can be represented in easily readable and understandable format to the load balancing subsystem of grid, the scheduler is able to assign the requests from users to the idle and appropriate nodes, job scheduler of grid has difficulty in understanding and integrating the status reports from each node in various syntax formats and semantic representation. 
Ontology is a powerful knowledge representations and management tool, and it is popular in the heterogeneous information management in web service, semantic web and grid applications [2]. Some grid monitoring systems have been built [3][4], how-The semantic representations, with ontology, of host resources are presented, and some encouraging results have been reported in [5]. In this paper, an ontology-based host resources monitoring approach in grid environment is proposed. 
The remainder of this paper is organized as follows. Section 2 shows the modeling with additional comments. ate concepts, taxonomies, and relationships with human-readable text and formal, ships, but how to define a minimal and complete set of concepts and relationships is a challenge. The principles of our ontology modeling are listed below. from some existing open network devices monitoring and management standards or protocols. The completeness of the concepts, properties and constraints has been dis-cussed for a long time during the standards proposing and improving period. In addi-tion, the concepts and properties in ontology, extracted from the existing and popular protocols, are easy to be accepted and shar ed by others. Due to the popularity of Sim-ple Network Management Protocol (SNMP), most of the nodes in grid support SNMP agents. Up to now, more than 100 Request for Comments (RFC) documents, related to MIBs, have been proposed [6] and at least 15 RFC documents, with the  X  X tandard X  or  X  X roposed standard X  status, are related to ho st resources. Therefore, it is necessary to investigate the MIBs of host resources before modeling. 
Second, ontology should describe the host resources in grid completely, and the number of concepts should be as few as po ssible. All the applications, winners of the Semantic Web Challenge 2003, use simple ontologies, and few ontologies contain find that some concepts are not valuable in grid environment. Although they are use-discarded during our ontology modeling. Although MIBs are expected to be translated into lightweight ontology only with the classes and properties in [5], the detailed methods of translating MIBs into RDF is not MIBs to OWL are categorized into data type, class and semantics constraints. 3.1 The Translation Rules of Data Types Mapping data types from SMI to OWL is the first step of the host resources ontology modeling. The data structure in MIBs must be one of the following: a base type, the BITS construct, or a textual convention [8]. Furthermore, conceptual tables and con-rules about the four kinds of data types are illustrated. data types in  X  X ase types X  are listed in the first column of Table 1. There is no specific definition of data types in the latest OWL specification, and the RDF mechanism for data types is inherited by OWL [9]. OWL uses most of the built-in XML schema data types and more than 35 basic data types are recommended for use with OWL, such as xsd:string, xsd:integer, xsd:unsignedLong. 
If a domain of data type in SMI is identical to a domain in OWL, the two data types can be mapped directly. For example,  X  X NTEGER X  in SMI is from -2147483648 to simplify the translation rules, these data types in OWL is selected to be the target data ample,  X  X pAddress X  is represented with string in SMI, no more than 4 characters, and mapped to  X  X sd:string X . This translation enlarges the representation domain of the data tology, we can make them equally. Under the two principles, all the target data types of  X  X ase types X  are listed in the third column in Table 1. 
The BITS construct represents an enumeration of named bits. This collection is as-enumerated may be present in a value [8]. As the translation method of  X  X pAddress X , the BITS construct can be mapped to xsd:nonNegativeInteger with some limitations. 3.2 Textual Convention different name, a similar syntax, but a more precise semantics. All the textual conven-tion data types can be represented in  X  X ase types X , but the domains are limited. There are two possible ways to represent the textual conversation data types in OWL. 
The first one is only to map these textual convention data types to basic data types in OWL, so necessary restrictions of domain should be attached. For example,  X  X is-playString X  is a textual data type is SMI, which represents  X  X CTET STRING (SIZE (0..255)) X . It is mapped into  X  X sd:string X  with the special limitations of minimum and maximum lengths. &lt;xsd:simpleType name= X  X isplayString X &gt; &lt;xsd:restriction base= X  X sd:string X &gt; &lt;xsd:maxLength value= X 255 X  /&gt; &lt;/xsd:restriction&gt; &lt;/xsd:simpeType&gt; 
The second way is to define some new data types in OWL. Users can define new data types in OWL if necessary. For example, we define a  X  X isplayString X  data type, whose maximum length is no more than 255, with XML schema above. In this paper, helpful to share the application ontology with others. 3.3 Conceptual Tables, Conceptual Rows, Class and Properties Tabular structures on an ordered collection of objects, conceptual table and row, can be regarded as complicated object types. E ach conceptual table contains zero or more rows, and each row may contain one or more scalar objects, termed columnar objects [8]. An example of conceptual table,  X  X rStorageTable X , is illustrated below.  X  X rStora-geEntry X  is the conceptual row of this table, which depicts of a logical storage of hard disk, including the  X  X rStorageSize X ,  X  X rStorageUsed X . hrStorageTable OBJECT-TYPE SYNTAX SEQUENCE OF HrStorageEntry MAX-ACCESS not-accessible STATUS current DESCRIPTION ...... ::= { hrStorage 3 } 
Although conceptual tables and conceptual rows are data types in SMI, they are not tables and conceptual rows are internal nodes in MIB tree. In general, the object iden-are multiple instances of the specific class. In ontology, zero or multiple instances of conceptual rows are contained in the class of conceptual table. child nodes describe the parent nodes from different aspects. Usually, internal nodes translated into classes in the modeling. The managed objects in MIBs are grouped and organized from the view of network management and they are not completely suitable for grid resources monitoring. However, we concentrate on the dynamic device utili-decreases dramatically during ontology modeling. Describing the relationships between classes in ontology is difficult and necessary in ontology modeling. There are several kinds of relationships supported by OWL, such ontology of grid, we discard the complete path of node in MIB tree, only integrating classes in host resources ontology are shown in Fig. 1.  X  X ostResource X  is a basic concept in the host resources ontology, which contains  X  X ystemDescription X ,  X  X evicesConfiguration X ,  X  X ardware X , and  X  X oftware X . In host resource monitoring applications, the real-tim e status description of a voluntary node instances of  X  X ostResource X . The class of  X  X ystemDescription X  gives the basic de-nodes in MIB tree with simple data types, e.g.  X  X rSystemUptime X , and  X  X ysName X .  X  X evicesConfiguration X  is the static description of the hardware configuration in a configuration information is organized as child node of  X  X rDevice X  in RFC 2790, but it is extracted as a separated class contained in  X  X ostResources X  directly. In fact, the hardware resources are categorized into computing resources, communication re-sources and storage resources. The values of the slots of these classes are dynamically increases continuously and the utilization of CPUs is varying. These dynamic statuses should be monitored periodically. The MIBs of WWW, E-mail, and DBMS can be MIBs of grid can be defined and integrated into the ontology to provide the powerful description ability of host resources. grid environment and describe the ontology with OWL. With the ontology, grid moni-tors and schedulers can obtain better description, data interoperability and integration ability of the physical resources in the grid. Moreover, having host resources semanti-cally annotated, enables us to perform semantic matching which significantly im-proves query results and delivers a ranked list of best matching candidates for a given monitoring method brings a new approach to represent semantics of the host re-sources in grid and gives hints for the future research on semantic grid QoS. 
