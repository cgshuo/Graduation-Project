 We present KnIT , the Knowledge Integration Too lkit , a system for accelerating scientific discovery and predicting previously unknown protein  X  X rotein interactions . Such predictions enrich biological research and are pertinent to drug discovery and the understanding of disease . Unlike a prior study, KnIT is now fully automated and demonstrably scalable. It extracts information from the scientific literature, automatically identifying direct and indirect references to protein interactions , which is knowledge that can be represent ed in network for m. It then reasons over this network with techniques such as matrix factorization and graph diffusion to predict new, previously unknown interactions. The accuracy and scope of KnIT's knowledge extractions are validated using comparisons to structure d, manually curated data sources as well as by performing retrospective studies that predict subsequent literature discoveries using literature available prior to a given date. Th e KnIT methodology is a step towards automated hypothes is generation from text , with potential application to other scientific domains . I.2.6 [ Learning ]: Concept Learning and Knowledge Acquisition Algorithms, Experimentation.
 Text Mining, Scientific Discovery, Hypothesis Generation . Broadening the scientific framework for biological hypothesis generation requires collecting , understanding, and integrating diverse facts. Even m any specia lized topic areas are becom ing too dense to be thoroughly studied and understood by the most well -read expert s. For instance, the literature on p53, a single protein with a critical role as a master switch to fight cancer , now exceeds 75,000 published papers . Each one of these papers has observations that may support, contradict or contextualize observations from others. The size , complexity, and growth rate of the literature are even greater for multi -component subjects, such as diseases  X  the breast cancer literature , for example, now encompasses over 300,000 scientific articles in Medline.
 Because biolog ical hypotheses necessarily depend on the limited data , from literature or otherwise, that a single person can read and understand , the challenge in a field with as rich a literature as biology is how t o harness the full depth and breadth of the knowledge that already exists in publications so as to formulate logically the best hypotheses consistent with the totality of th e data. To do so, we aim: to convert unstructured data source s to structured data via natural language parsing ; to represent that knowledge as a network of biological entities ; and f inally to reason over the resulting graph to identify n ovel, interesting, and testable hypothes es. Although the literature contains errors and machine translation of text will be incomplete and lack the depth of interpretation that scientists develop over a career, a central hypothesis of this work is that by focusing on only th e highest confidence predictions it will be possible to reliably make inferences that lead to new discoveries when tested. Baylor College of Medicine and IBM Research are engaged in a long -term partnership to create the necessary infrastructure, software, and algorithms to improve scientific discovery in this way . We have focused first on protein -protein interactions (PPIs) , which have potential applications in drug discovery and understanding of disease. Our initial, proof -of-principle efforts [45] indicated that new p53 kinases could be predicted using a simple bag-of-words feature space representation combined with a graph diffusion reasoning technique based on labels manually curated by experts . In th e current paper, we present a more complete , scalable, and general instantiation of the Knowledge Integration Toolkit ( KnIT ) for fully automated discovery . In wh at follows , we de scribe how KnIT di scovers PPIs in unstructured documents and then re ason s ove r those interactions to generate hypotheses. The discovery phase comprises ex traction and normalization of protein entit ies fo llowed by ex traction of PPIs. Th e latter task is accomplished by combining a catalog of curated relationship ty pes with rule -ba sed and machine -le arning approach es to extract me aningful and accurate PPI tri ples fr om parsed text . In the reasoning phase, Kn IT can deploy va rious gr aph algorithms on pr otein -ne twork representations to pr edict ne w interactions . We also describe several experiments design ed to test KnIT X  X  capabilities. I n a time -st amped  X  X etrospective X  experiment, we va lidate predictions based on the literature up to a given date ag ainst act ual subsequent discoveries. W e th en sh ow that the di scovered tr iples re present a substantial fraction of known pr otein -pr otein interactions , doc umented in the literature and elsewhere . Fi nally, we revisit our prior st udy [45] on phos phorylation of the protein p53 and show how th e current version of KnIT av oids the need for manual curation of abstracts ex tend our ear lier work to study phos phorylation of any pr otein. Ov erall, KnIT embodies an integrated computational approach to formulat ing nove l scientific hypotheses that accelerate laboratory discoveries. Kn IT is applicable to practically any industry or domain that is faced with overwhelming data and stagnation in innovation. Information extraction and reasoning components of KnIT are built into Watson Discovery Advisor , an IBM product that aims to accelerate breakthroughs by making connections between different pieces of information. In this work we cho ose bio logy as our test bed to demonstrate the capabilities of KnIT. Protein s are the fundamental molecular machinery in the cell, and id entifying their functions is a central pr oblem in molecular biology. With  X  20 , 000 di stinct protein s in humans [24], and tens of thousands of possible biological process annotations, disease associations, and molecular interactions , the numbe r of experiments that would be required to verify ev ery possible function for every pr otein is we ll beyond the capabilities of mo lecular biology experiments fo r th e foreseeable future. Fo r example, an im portant characteristic of an y protein is the set of other proteins with which it interacts; there are almost 200,000,000 protein pairs to investigate . To further complicate the issue, the types of relationships that can occur between any two proteins vary widely . To name a few, two proteins may ha ve: a binding interaction, in which the two physically interact with each other to carry out a task within the cell; a positive regulatory interaction, in which the activity of one protein in the cell increases the amount or activity of another protein; a negative regulatory interaction, in which the activity of one protein in the cell decreases the amount or activity of another protein; a modification interaction (e.g. phosphorylation or ubiquitination ), in which one protein causes a chemical change to the structure, and therefore function, of another protein; an expression relationship, in which the quantities of two proteins are frequently observed to be highly correlated or anti -correlated with one another; or a co -localization interaction, in which the two proteins are often found physically near each other, but not necessarily touching, in the cell. This type of information is often represented as a multimodal graph of relationships between proteins [21], for example StringDB [13]. Such graphs form a partial representation of the human inter actome , i.e., the totality of protein interactions in humans . Knowledge about s om e of these interaction types is al ready accessible in a structured data format. For example, expression relationships often come from published microarray data, which measure th e levels of thousands of messenger RNAs (each encoding a distinct protein) in specific cells or tissues. Many examples of this type of data are available from the GEO database [2]. Binding interactions can also be identified by large -scal e scr eens ; however, these expe nsive experiments are known to have significant false negative and false positive rates [12] too, are documented in a slew of databases [5; 6; 15; 16; 27; 55; 56] . Ho wever , combined, these databases contain around 100,000 likely binding interactions, only 10,000 of which are considered to be high quality [13] , wh ereas th e total number of binding interactions occurring in the human interact ome has been estimated[47] to be as high as 600,000 , le aving as many as half a million to be discovered. Other structured data result from human reading of the biomedical literature and manual input into databases, su ch as the PhosphoSitePlus [23] da tabase of protein modification interactions ; this approach re quir es in tensive labor to keep up with the latest developments in the scientific community. In summary, some pr otein relationship information is accessible, but the quality, coverage, and cost of acquisition of th is in formation must be impro ved . Na tural language processing is a useful tool for the extraction of human interactom e da ta from the biomedical literature. Early text mining mostly entailed identification of entity co-occurrence within publication text. In recent years, co-occurrence has served as a benchmark for comparison with more sophisticated approaches, but is also still used in many database efforts [13]. Some of the early impactful efforts were iHOP[22] and GeneWays [43]. A recent effort has read the available literature (both abstracts and open access articles) and made their analysis available in the EVEX database [52]. Another effort by Microsoft called Literome [40 ] allows the user to search genes for possible relationships , and it suggests possible inte rmediate interactions found in the literature. Although these efforts help inform the scientific community, none have taken the next step in proposing new scientific hypotheses.
 As the continuously dropping price s of DNA and RNA sequencing bring personaliz ed genomics closer to reality , we gain vast amounts of raw data on the variations between individuals. However, there remain s the challenge of contextualizing these variations in order to understand the source of patient symptoms arising from genetic disea se, and to potentially predict mutation effects before they are known to cause a disorder. To help do this, we aim to better understand the human genome by documenting  X  and generating hypotheses upon  X  the interactome as described by biomedical scientists across tens of millions of published abstracts. Biomedical relationship extraction is a well -studied problem [28; 38] . To identify connections between entities such as proteins , drugs and diseases, r ule -based or machine-learning -based approaches [9; 49] typically use a knowledge base that catalogs known interactions , such as MetaMap [1] or GeneOntology ,[15; 16] together with a text mining approach. Relations hips have been mined using co-occurrence techniques in which two entities in a network are linked simply because they are mentioned within the same sentence [25]. Methods based on clustering similar text have also been used to generate networks between entities [4; 42] . In recent times, syntactic pars ing of sentences to identify relationships between entities has also gained popularity [14; 37] . KnIT PPI ext ractio n is guided by a catalog of known biological interaction types and relies on natural language pars ing of sentences to establish explicit, directional relationships between known entities. Importantly , KnIT identifies not only direct connections between two proteins , but also indirect relationships where there is a secondary interaction or biological process at play. As a result , KnIT protein networks are more expressive and better at predicting heretofore unknown PPIs . KnIT rel ies on a rule -based approach for learning syntactic relations between known entities and known interactions in a labeled dataset. Learn ed rules are then applied to a Medline corpus for extraction of PPI s. The KnIT extraction engine is built using IBM InfoSphere X  BigInsights X  SystemT [30]  X  a powerful information extraction system for extracting structured information from unstructured and semi -structured te xt. SystemT provides us with basic text analytic capabilities such as sentence splitting, token detection, natural language parse of sentences , and so on. Deep -parsing components of SystemT are derived from an English Slot Grammar (ESG) parser [36] that provides core linguistic analys is. In this section , we will describe the individual components that are central to KnIT PPI Extraction : (1) entity identification and normalization and (2) event recogni tion and normalization. (An event refers to a particular protein -protein interaction mentioned in the text, such as  X  X lk1 inhibits RSK1 X .) Figure 1 presents a det ailed pipeline of tasks in KnIT PPI extraction. Both rule -based[48] and machine -learning -based[20] approaches have been used for protein extraction and normalization. Recent work has also integrate d simple rules with machine learning models. For example, Danger et al. , integrate a dictionary look-up and a conditional -random -field classifier for recognizing pertinent entity types in protein -protein interaction context s[10].
 KnIT needs to ignore mentions of generic protein families, such as  X  X istone X , and instead focus on mentions of specific protein s such as  X  X istone H3 X . This task can be very challenging . For example, given a mention such as  X  X RK -1,3 and 5 have strong impact X  , KnIT needs to extract not only GRK-1, but also GRK -3 and GRK -5. Moreover , KnIT needs to normalize proteins to their canonical forms ; a key challenge here is that proteins often share synonyms or abbreviations . Thus KnIT must understand mentions of proteins according to their context and map them to standardized identifier s. To this end, KnIT uses a hybrid model for protein extraction and normalization. The protein annotation process involves three steps: candidate generation, candidate selection, and protein normalization. To ensure high recall for the protein extraction task , KnIT relies upon a comprehensive dictionary of human proteins compiled from NCBI[2; 54] , the UniProt KnowledgeBase [51], HUGO[17], and CTD [11]. This dictionary has 340,000 entries, where each entr y is mapped to one of over 30,000 protein canonical form s. When generat ing candidates , KnIT employs a combination of dictionary -matching , pattern -matching , and abbreviation -matching rules to maximize recall while maintain ing sufficient precision . Dictionary -matching rules: Because i t is infeasible for a dictionary to capture all possible protein synonyms used in the literature , KnIT supports fuzzy matching of dictionary terms :  X  Greek letters matches, e.g.,  X  X eta(2) -microglobulin X  matches  X  Bracket independent matches, e.g.,  X   X  (2) -microglobulin X   X  Space/Hyphen independent matches, e.g.,  X   X  2 -KnIT also accounts for the different levels of ambiguity in the dictionary terms . During dictionary compilation, each dictionary term is semi -automatically categorized into one of three categories: unambiguous terms like  X  X  protein -coupled receptor kinase 2 X , ambiguous terms like  X  ATM X  , and very risky terms like  X  X 1 X  and  X  X 2 X  . T erms are categorized according to their length and character complexity; the current dictionary contains roughly 316K, 25K, and 1K terms in each category. Each m ention that matches some dictionary term is assigned a confidence score of  X  X igh X  ,  X  X edium  X , or  X  X ow  X , depending on the category of the term. Mentions with a confidence score of medium or low are further verified using the context -based protein classifier described in Section 3.1.2 below.
 Pattern -matching rules : Typically, some legitimate protein s do not appear in the dictionary at all , e.g., because researchers may not follow naming conventions or because some exploratory entity names are too new to be added to a dictionary. KnIT therefore enriches protein candidate generation using two types of patterns:  X  Entities comprising a known protein -family iden tifier Abbreviation -matching rules: Abbreviation s of proteins are commonly used in the literature. Frequently, the abbreviation itself is either ambiguous or does not appear in the dictionary at all. KnIT therefore detect s all definition -abbreviation pairs in an abstract and then maps all mentions of an abbreviation in the abstract to its corresponding definition. For example, if the defini ng text  X  Stearoyl -CoA Desaturase (SCD)  X  appears in a n abstract and  X  X tearoyl -CoA Desaturase  X  is identified as a protein using the dictionary , then all subsequent appearances of SCD are identified as  X  X tearoyl -CoA Desaturase  X  automatically. In this manner, all ad hoc abbreviations whose definitions are in the dictionary are correctly identified and disambiguated. Often , the candidate-generation process identifies entities that are false positives , i.e., they are not proteins . For example, SCD is both an abbreviation for  X  X tearoyl -CoA Desaturase  X  and an acronym for  X  X ickle Cell Disease X . Eliminating false -positive candidates is a challenging but important task . Intuitively, the context of a mention that refers to a protein should be very different than the context of the mention when it does not refer to a protein. For example, when proteins are mentioned in literature, the surrounding text often discusses protein -specific biological processes such as regulation or phosphorylation. It may also mention other protein names, or explicitly refer to the entity as a protein . In order to exploit the cues in the surrounding context, we trained a na X ve Bayes classifier that uses features derived from the neighboring context of a putative protein mention. KnIT use s the sentence containing the discovered mention as the cont ext span and computes the following features:  X  All words present to the left and right of the mention ;  X  The n umber of protein mentions in the sentence ;  X  Whether or not the two immediate words to the left and right Words appearing in the left context and right context are treated separately. To evaluate the classifier, w e used a dataset of 2282 positive examples and 2209 negative examples from BioNLP -ST 2013 tasks for event extraction and pathway curation ; we used tw o-thirds of the data for training and test ed on the remaining one -third . Our approach achiev ed an overall classification accuracy of 77.2%. Researchers commonly refer to proteins by different synonyms or aliases, and KnIT must be able to deal with this phe nomenon. Mapping a mention back to the correct canonical protein is a hard problem because different proteins often share the same synonym. For example, synonym  X  X 1 X  maps back to both the Dopamine Receptor D1 (DRD1) and Leiomoden 1 (LMOD1). Whenever KnIT identifies D1 as a protein mention, it also needs to decide precisely which protein is being refer enced. Fortunately, the context of a protein mention (i.e., the surrounding words) typically contains sufficient clues to identify the correct canonical prot ein, allowing disambiguation. For example, a mention of  X  X opamine X  or the family name  X  X PCR X  in the abstract would indicate that the abstract was discussing Dopamine Receptor D1 (DRD1).
 KnIT adopts the idea of unigram language models from computational linguistic s[35] and builds  X  X ontext models X  for proteins. For a protein  X  and an abstract  X  , denote by  X  of sentences in  X  that reference  X  . The context  X  protein  X  in a sentence  X   X   X  ! , ! is the multiset of terms that occur in  X  . The context model  X  ! of a protein  X  is defined as a probability distribution over the terms appearing in the protein X  X  context. In order to estimate this distribution, we query all th e abstracts in Medline corpus with the canonical name of the protein and select the set  X  ! of the 100 most relevant abstracts as ranked by TF -IDF score. We then define the combined context for  X  as  X  =  X  ! (  X  ,  X  ) !  X  ! corpus as  X  =  X  ! ! ; here we take multiset unions, with the latter union being over all proteins in the corpus. Let Then the probability of observing a term  X  in the context of protein g is defined as: The additive factors in the numerator and denominator are used to smooth the probability distribution so that terms not present in  X  are assigned a non-zero probability. We extend this definition to encompass the likelihood of seeing a given context  X  (i.e., a given multiset of terms) around  X  by setting  X  !  X  =  X  ! we make a simplifying independence assumption a la na X ve Bayes. Note that if a term  X  appears  X  times in the multiset  X  , then t he foregoing product contains  X  terms equal to  X  Whenever KnIT encounters an ambiguous protein mention, it uses the context models to identify the most likely canonical protein in a manner similar to query likelihood models in information retrieval [34]. That is, given an ambiguous mention  X  , its context  X  , and the set  X  of possible proteins referred to by  X  , KnIT determines the canonical protein  X   X  to maximize the likelihood of the context:  X   X  = argmax !  X  ! (  X  ! ) . To extract interaction events, KnIT uses a catalog of PPI type s together with natural language parsing of sentences . The catalog is maintained as a list structure similar to that used in the BioNLP 2013 pathway extraction task . The goal of extraction is to obtain triples , each comprising : 1. An event : an element appearing in the catalog of interactions 2. An agent : a protein that is causally active in an event . 3. A theme : a protein that undergo es the effects of an In general, depending on the interaction, extracted triples may or may not possess directionality. Binding relationships , for instance , do not represent directional events, whereas phosphorylation is an exampl e of an interaction that has a clear causal agent and affected theme. KnIT extracts two kinds of triples that capture interactions between proteins  X  direct and i ndirect. The first is a simple triple where there is a direct relationship between known entities. The two sentences below express direct relationships between known entities Plk1 and RSK1, and between p53 and Notch1.
 In addition, studies on HeLa cells using Plk1 siRNA interference and overexpression showed that phosphorylation of RSK1 increased upon interference and decreased after overexpression, suggesting that Plk1 inhibits RSK1 . These data indicate that p53 negatively regulates Notch1 activat ion during T cell development.
 In addition, KnIT also extracts relationships when the proteins are involved in more complex and indirect interactions. In the examples below we see that KnIT extracts relationships between bcl -2 and p53 that are indirect, si nce different processes (shown as underlined text) are involved in their interaction. Silencing of Bcl -2 induced massive p53 -dependent apoptosis . Our data suggests that bcl -2 is able to modulate transmembrane trafficking of p53 . The KnIT relationship catalog lists many types of protein -protein interaction types (some described in Section 2) that were curated using multiple data sources. Post -translational modification (PTM ) interactions were extracted from th e Gene Ontology [15; 16] , a hierarchy developed to represent functional knowledge for proteins. A second set of relationships (binding, expression, etc. ) is adapted from previous studies [41] and community tasks [28; 38] . Finally, we included our curated interac tions from the training data described in Section 3.2.2 below . The curated relationship types and their synonyms were considered valid if confirmed in multiple abstracts in PubMed. We also identified and explicitly added variants of an interaction instead of relying on stems, because we found that several verbs can be ambiguous in their stemmed forms. For example, the stem sulfat for the PTM sulfation will also match sulfate or sulfates to indicate the presence of chemical compounds. Finally, the interactions in the list were grouped into nine categories; each category name served as the canonical refer ence term for its associated set of interactions. Figure 3 shows the categories, along with some sample interactions for each; the current KnIT relationship hierarchy contains 71 interactions in total over all categories . In order to learn how PPIs are presented in literature , the subject matter experts (SMEs) on the team labeled abstracts containing PTM interactions. Abstracts were collected using a PTM query  X  X hosphorylate X . To ensure that the abstracts also mentioned at least one protein, the query also included p53, a commonly studied protein. To further ensure that there were meaningful and diverse interactions pre sent in the abstracts, an abstract was included in the query result only if the corresponding article was referenced by the manually curated PhosphoSitePlus [23] database . Finally, 400 abstracts were selected at random from the query result to use as training data. Of these abstracts, 60% contained mentions of phosphorylation and 40% contained mention s of other PTMs.
 The information labeled in the abstracts include d (1) verbs or biological interactions that could potentially apply to proteins (for potential insertion into the KnIT interaction catalog), and (2) the agent, theme and event , if present, in each sentence that contained a PPI. If negation was present , e.g.,  X  X TM did not phosphorylate p53 X  , then this f eature was recorded as well.
 Figure 2 shows examples of interactions collected for cataloguing and a sentence showing two PPIs labeled for Agent, Interaction and Theme instances. Using the sentences labeled for PPIs (see Section 3. 2.2 ), KnIT learns rules over natural language parse trees for event detection. Each sentence is run through the IBM ESG Parser and the dependency parse structure is examined for syntactic connections between the labeled interaction, agents and themes. Here we show a few examples of rules learn ed. (a) The dependency parse structure of a sentence  X  ATR phosphorylated p53 at Ser -15 X , reveals that the verb of interest, phosphorylated , is connected to a known agent and theme via nsubj and dobj , (noun-subject and direct -object) relationships. This connection is identified as a rule for semantic role labeling of agents and themes. In more detail, the parse structure is: root(ROOT, phosphorylated) nsubj(phosphorylated, ATR) dobj(phosphorylated, p53) prep_at(phosphorylated, Ser-15) (Here prep_at means that the arguments are connected by the preposition  X  X t X .) For test sentences that express syntactically similar relationships between known interactions and protein entitie s, following the nsubj and dobj connections will result in identification of agents and themes for that interaction. KnIT always relies on the catalog for identifying interactions ; the learned rules assign  X  X gent  X  or  X  X heme  X  semantic labels to protein entities . (b) KnIT extracts complex rules where secondary interactions are involved. For example a sentence such as  X  ATM -mediated phosphorylation of p53 at serine 15.  X  contains an indirect interaction, mediated , between the agent and the main interact ion, phosphorylation , i.e.,  X  ATM -mediated X  is an adjective modifying  X  X hosphorylation X  : A rule is learn ed to allow for any secondary interaction (from the KnIT relationship catalog ) to act as a connector between an agent and the interaction. (c) KnIT learns rules where agents and themes are not simply proteins but rather processes or events involving a protein . For example, in the sentence  X  Our data suggests that bcl -2 is able to modulate transmembrane trafficking of p53.  X  the interaction modulate is connected to an entity p53 via a process that is captured in the phrase  X  X ransmembrane trafficking of p53  X . Parse structures for every PPI in the labeled training data are examined in the above manner to collect a set of rules that describe how interactions and entities might relate to one another. Rules that have a support of at least three PPI s in the training data are selected for inclusion into KnIT.
 Although the rules are learn ed over interactions that are PTMs, the various sentence structures involved are very similar to those for the other interaction s in the KnIT catalog, so that the learne d rules are applicable to a wide variety of interactions. Although the set of rules is not exhaustive and will not identify every possible PPI, the high quality of the rules yields precision and recall sufficient to create a network well suited to PPI prediction . KnIT also learns t wo kinds of negation patterns . In the first pattern, negation is associated with the verb and is readily available in the dependency parse tree. For example in the sentence,  X  X TM did not phosphorylate p53 X  the dependency parse tree shows a connection between the inte raction  X  phosphorylate X  and negation word  X  not X  : root(ROOT, phosphorylate) neg(phosphorylate, not) nsubj(phosphorylate, ATM) aux(phosphorylate, did) dobj(phosphorylate, p53) More complex representations of negation such as an event  X  X as absent X ,  X  X arely detected X  need special treatment. The SMEs helped curate a list of expressions that are prevalent in PubMed in expressing negative interactions. As with event extraction, negations are predicted by learning rules that connect the known interaction and negation -indicating phrases. Here we discuss the end -to-end KnIT Extraction pipeline where the learned rules are applied to all 24 million abstracts in Medline , extract ing protein entities and their interactions to construct PPI networks. Let us revisit Figure 1 for an overview. 1. KnIT ingests one abstract at a time and performs a sentence 2. KnIT applie s the e ntity detection and normalization 3. Every sentence is then checked for the presence of an 4. KnIT performs a natural language parse of the sentence using 5. The parse tree is then examined using the rules learn ed 6. Sentences with interactions, agents and themes are We applied t he KnIT extraction engine to a Medline corpus of almost 24 million artifacts. All analysis was restricted to title and abstracts. We were able to extract a total of 171, 798 unique triples from 245, 833 text occurrences across 167, 590 unique abstracts where the agents and themes matched normalized protein entities, i.e. there was no ambiguity in what these entities were.
 Examples of interactions between ATM and p53 that can be extracted by KnIT using the learned rules are as follows.
 However, IR -activated, ATM -mediated ph osphorylation of p53 at serine 15 (human) or 18 (mouse) [Ser15(h)/18(m)], and apoptosis occurred in myoblasts but was impaired in myotubes.
 Nuclear accumulation and ATM -dependent phosphorylation of p53 on serine 15 were also observed . Upon treatment with 5 -Aza -CdR, ATM activation was clearly associated with P53 phosphorylation at Ser(15 ), which was directly responsible for 5 -Aza -CdR modified P21(Waf1/Cip1) expression.
 Moreover, knockdown of ATM by siRNA significantly reduced p53 phospho rylation and stabilization..
 ATM and ATR cannot phosphorylate p53 on Ser -20. (negation) ATM phosphorylates the p53 tumor suppressor on a site ( Ser15 ) that regulates transcription activity. After extracting (agent, event, theme) triples, KnIT then can use a variety of graph -reasoning techniques to predict heretofore unknown PPIs . There are many possible reasoning techniques [8; 29; 50; 57; 58] . To date, we have primarily investigated two different methods.
 Non -negative matrix factorization (NMF): This technique can use the discovered triple s directly to simultaneously predict many kinds of PPIs. Originally introduced by Paatero and Tapper in 1994[39], NMF can , given a matrix  X  , determine (two ) smaller matrices that approximate  X  when multiplied together. If  X  has dimensions m x n , NMF calculates smaller  X  and  X  matrices of dimensions m x k and k x n , respectively, where the parameter k &lt;&lt; min ( m, n ) determin es the granularity of the approximation. In our case ,  X  ! , ! would have a binary value indicating whether or not KnIT found a connection between proteins i and j , i.e., whether i and j appeared jointly in some triple . There are multiple possible objective functions available for determining  X  X ptimal X  values  X   X  and  X   X  of  X  and  X  , but we follow Paatero and Tapper and simply minimize the Frobenius norm of the factorization error: Matrix factorization is essentially a compression algorithm, where row i of W, corresponding to protein i in the original interaction matrix X, is a small  X  X eta -feature X  vector representing the nature of the relationships that row i (protein i ) of X has with the columns of X (the other protein ), which each have their own meta -feature vector in the H m atrix, as shown in Figure 5A. The dot product of the i th row of W with the j column of H yields a  X  X orrected X  value for X i,j , which may indicate a new connection if the original value was 0 and the corrected value is not. Berry et al . review many different regularization and parallelization methods [3] that appeared since the first publication, notably Lee and Seung X  X  1999 paper that rekindled the popularity of NMF [7; 18; 19; 26; 31; 32] . A range of NMF applications already exist in biology, such as for biolog ical image processing [59] and microarray data analysis . The latter produces meta -gene expression levels for each sample , which can then be used for clustering and classification [53]. Applying NMF to PPI networks, we expect it to determine latent variables that indicate the types of interactions each protein takes part in.
 BOW -GID : This technique was propos ed in Spangler et al. [46] to which we refer the reader for details. Briefly, an event and theme are fixed, and the goal is to find previously undiscovered agents. KnIT construct s a similarity network of proteins based on a bag -of-words (BOW) analysis [44]. Each protein that is a known agent is labeled wi th a weight of 1 and all other proteins are labeled with a weight of 0. KnIT then uses a graph information diffusion [33] (GID) technique to propagate the weights from known agents to the unknown agents. Candidates with the highest diffused weights are considered to be the most likely to be undiscovered agents. In this section, we describe several experiments designed to test the scope and accuracy of the KnIT discovery pipeline. We first describe a retrospective study using the NMF technique, then test KnIT X  X  ability to discover PPIs that are found in sources other than the biomedical literature, and finally show how we can automate, scale up, and generali ze the BOW -GID study in Spangler , et al. [46] Our retrospective study was design ed to test whether KnIT could predict additional connections that are absent from the network because they are not documented in the literature, could not be parsed, or remain undiscovered . We appl ied NMF in order to predict , using papers published before a given date, PPIs discovered in papers after that date . The results provide a consistent internal measure of data quality and a realistic assessment of the likelihood KnIT can accurately predic t future discoveries . Subgraphs were constructed for each interaction type. The most recent ~20% of edges was removed and used as a test set while the earlie r 80% formed the training set for the factorization model . Eight separate datasets, one for e ach of the most common interaction types, was used, and their results are shown in Figure 5B. The areas under the ROC curves show that each subnetwork was significantly more accurate than chance . Notably , the models from networks with more edges did better, suggesting that ultimate performance depends on the richness of the information available in the network to start with . Th ese data demonstrate that the automated KnIT extraction and prediction pipeline can identify new hypotheses that prove correct , i.e., foretell future observations on a large scale in time -stamped experiments designed to mimic realistic conditions. Table 1  X  Statistics on the networks created based on each of the 8 most frequently observed relationship types. E/N is the edge to node ratio. Figure 5. Hypothesis generation on KnIT network. A) 
Nonnegative matrix factorization was applied for B) In order to examine our ability to mine text for relationships, we compared the state of the KnIT extracted network to StringDB [13]. StringDB is a long -running effort to gather and combine a multitude of information sources on connections between proteins. Particularly useful is its sub database specific to protein -protein interactions with experimental evidence. The data sources, such as BioGRID, BIND, and DIP [13], manually collect information extracted from multiple experimental techniques (yeast two-hybrid experiments, mass spectrometry, genetic interactions , phage display , etc.) . Because this information is often taken from large -scale screens, the interactions are un available to a l iterature -mining -only approach. Despite this, we would expect KnIT relationships to have sign ificant correlation with StringDB. KnIT X  X  extracted network contains 118,864 edges and 11,375 nodes, while StringDB contains 136,734 edges and 13,893 nodes. Although each node represents a protein, not all proteins occur in the underlying data sources, an d so only 8,994 nodes are shared between them. Within this shared set of nodes, the KnIT extracted network contains 107,388 edges while StringDB contains 85,954. Had the KnIT extracted network been composed of random edges in this space, only 260 edges w ould be expected to be shared, but instead, 10,279 edges are in common (p&lt;0.0001). This shows that KnIT is significantly aligned with existing structured data, while also finding over 100,000 relationships that were not previously documented by StringDB. Next, we will show that the information appearing in StringDB that is not detected by KnIT extracted network could potentially be predicted using the factorization method used in section 5.1. To do so, we apply factorization to the KnIT network to predict interactions unique to StringDB. The positive test set was composed of edges that are in StringDB but not detected by our KnIT read ing on the literature ( 75675 interactions), while the negative set is all non-existent edges connecting pairs of proteins tha t do not have a connection in either network . The NMF analysis of Section 5.1 was repeated , but using the entire KnIT network to train the NMF model . Predicting these edges, the model had a performance, as measured by AU(ROC) (Figure 6) of 0.68. These data show that edge -prediction applied to KnIT relationships can discover true relationships absent from the literature with a significant enrichment over what would be expected by chance. In our final experiment, we tested whether the fully automated Kn IT system could eliminate the need for manual, expert -based annotation. Specifically, in a prior study [46], the BOW -GID technique was used to predict p53 kinases , proteins that add phosphate molecules to the tumor -suppressor protein p53. In that retrospective study , abstracts available in 2003 were used to predict subsequent discoveries in the literature. Remarkably, the system identified 7 out of 9 subsequently discovered p53 kinases . This proof -of-principle experiment demonstrated the predict ion of novel facts based on the literature , but still required SMEs to manually identify kinases in the abstracts, and in particular to identify kinases that phosphorylated p53 (so that they could receive a n initial weight of 1 in the graph diffusion analysis) . The goal s of our current experiment are (1) to see whether the prior, painstaking manual annotation by experts can be replaced by the new automated triple -extraction technology, thereby allowing KnIT to handle much larger corpora, and (2) to show the pote ntial of such s caling by expanding the prior study to identify kinases that target protein s in general , not just p53 . In more detail, we asked whether the kinases known up to a particular year for a given protein could predict kinases discovered after that year for that same protein , using the (now Figure 7 A) Retrospective analysis for kinases phosphorylating automated) BOW -GID method . We selected a set of 58 phosphorylated proteins with at least 4 kinases known in 2006 and 4 kinases discovered after 2006. We created a BOW similarity network of 332 kinases based on the literature through 2006 , used the triples discovered by KnIT to assign a weight of 1 to known kinases, and then ranked the unknown kinases by their post -diffusion score. Figure 7 show s that 68% of the protein test sets achieved an AU(ROC) &gt; 0.6, and 56% an AU(ROC) &gt; 0.7. The p53-specific result was AU(ROC) = 0.71 compared to AU(ROC) = 0.84 in the prior study, reflecting both the larger search space and the use of an automat ically generated initial labeled network rather than one created manually by a human expert . shows that, using KnI T in 2006 , we automatically modeled the kinase -kinase network and predicted a number of novel kinases found later in publication . Thus, KnIT is effective for predict ing novel connections on a large scale without manual intervention . This study presents a complete end -to-end discovery pipeline that transforms unstructured data from the biological literature into new scientific hypothes es, significantly enriched for truth . In the process , we show that we can automatically extract relationships from text. These relationship triples are pooled in to networks that are reasoned over by diffusing weights or by generating novel edges via matrix completion. Time -stamped studies rigorously assess ed the predictive power to foretell discoveries made after a given date , based on what was known prior to that date . We also tested prediction s against controls that do not appear in the literature. Finally, we appl ied KnIT knowledge extraction via triples to obviate the need for manual annotation of abstracts by SMEs when automatically reasoning via BOW -GID. These results point to the quality and predictive power of both the triples and of the network -based reasoning algorithms that we apply to the m. KnIT has show n good performance in prospective analysis and, in practice, already suggests thousands of hypotheses that have the potential to efficiently guide biological discoveries.
 Baylor College of Medicine and IBM Research are working together to accelerate scientific discoveries , with the long -term goal of tak ing on the challenge of personalized medicine. In order to understand individual genetic variation, we must be able to contextualize mutations with detailed annotatio n of genes and proteins . However, to make this practical on a large -scale , data must be structured , and reasoning automated. This study represents the early stages of our effort. In the future, our team will focus on a wider area of biological entities, such as drugs, treatments, and diseases, in order to develop an all -inclusive network of biomedical literature knowledge. The next steps will include a collection of algorithms validated with biological experiments to identify new hypotheses based on the entire network. We will also develop techniques to prioritize the large number of hypotheses generated based on likelihood, value and risk. Such a nalys es will yield a set of hypotheses that will fill gaps in science , accelerat e the pace of discovery and , in turn , improv e our understanding of disease to better guide patient care . This work was supported by the Robert and Janice McNair Foundation, DARPA (N66001 -14-1-4027), National Science Foundation (NSF DBI -1356569, NSF DBI -0851393), National Institutes of Health (NIH -GM079656 , NIH -GM066099 ), and was supported in part by the IBM A ccelerated Discovery Lab. [1] Aronson, A.R. and Lang, F.M., 2010. An overview of [2] Ashburner, M., et al., 2000. Gene ontology: tool for the [3] Berry, M.W., et al., 2007. Algorithms and applications [4] Brohee, S. and Van Helden, J., 2006. Evaluation of [5] Cancer Genome Atlas, N., 2012. Comprehensive [6] Cancer Genome Atlas Research, N., 2008. [7] Catral, M., et al., 2004. On reduced rank nonnegative [8] Chinnasamy, A., et al., 2006. Probabilistic prediction of [9] Cohen, A.M. and Hersh, W.R., 2005. A survey of [10] Danger, R., et al., 2014. Towards a Protein  X  X rotein [11] Davis, A.P., et al., 2011. The Comparative [12] Edwards, A.M., et al., 2002. Bridging structural biology [13] Franceschini, A., et al., 2013. STRING v9.1: protein -[14] Fundel, K., et al., 2007. RelEx  X  Relation ext raction [15] Gene Ontology, C., 2008. The Gene Ontology project in [16] Gene Ontology, C., 2010. The Gene Ontology in 2010: [17] Gray, K.A., et al., 2013. Genenames.org: the HGNC [18] Gui llamet, D., et al., 2001. A weighted non -negative [19] Hamza, A.B. and Brady, D.J., 2006. Reconstruction of [20] Hatzivassiloglou, V., et al., 2001. Disambiguating [21] Heath, L.S. and Sioson, A.A., 2009. Multimodal [22] Hoffmann, R. and Valencia, A., 2004. A gene network [23] Hornbeck, P.V., et al., 2015. PhosphoSi tePlus, 2014: [24] International Human Genome Sequencing, C., 2004. [25] Jenssen, T.K., et al., 2001. A literature network of [26] Jia, Y.W.Y. and Turk, C.H.M. ,200 4 Fisher non -[27] Jupe, S., et al., 2012. Reactome -a curated [28] Kim, J. D., et al., 2011. Overview of BioNLP shared task [29] Kuchaiev, O., et al., 2009. Geometric de -noising of [30] Laura, C., et al., 2010. SystemT: an algebraic approach [31] Lee, D.D. and Seung, H.S., 1999. Learning the parts of [32] Lee, D.D. and Seung, H.S., 2000. Algorithms for Non -[33] Lisewski, A.M. and Lichtarge, O., 2010. Untangling [34] Manning, C.D., et al., 2008. Introduction to Information [35] Manning, C.D. and Sch X tze, H., 1999. Foundations of [36] Mccord, M.C. and Bernth, A., 2010. Using slot [37] Miyao, Y., et a l., 2009. Evaluating contributions of [38] N X dellec, C., et al., 2013. Overview of BioNLP shared [39] Paatero, P. and Tapper, U., 1994. Positive matrix [40 ] Poon, H., et al., 2014. Literome: PubMed -scale genomic [41] Pyysalo, S., et al., 2007. BioInfer: a corpus for [42] Quan, C., et al., 2014. An unsupervised text mining [43] Rzhetsky, A., et al., 2004. GeneWays: a system for [44] Salton, G. and Mcgill, M.J., 1986. Introduction to [45] Scott, S., et al., 2014. Automated hypothesis generation [46] Scott, S., et al., 2014. Automated hypothesis generation [47] Stumpf, M.P., et al., 2008. Estim ating the size of the [48] Tanabe, L. and Wilbur, W.J., 2002. Tagging gene and [49] Tikk, D., et al., 2010. A comprehensive benchmark of [50] Tuncbag, N., et al., 2011. Predicting protein -protein [51] Uniprot, C., 2013. Update on activities at the Universal [52] Van Land eghem, S., et al., 2013. Large -scale event [53] Wang, H., et al., 2013. Predicting protein -protein [54] Wheeler, D.L., et al., 2003. Database resources of the [55] Wishart, D.S., et al., 2009. HMDB: a knowledgebase [56] Xie, Z., et al., 2010. hPDI: a database of experimental [57] You, Z.H., et al., 2013. Prediction of protein -protein [58] Zhang, Q.C., et al., 2012. Structure -based prediction of [59] Zitnik, M., et al., 2013. Discovering disease -disease 
