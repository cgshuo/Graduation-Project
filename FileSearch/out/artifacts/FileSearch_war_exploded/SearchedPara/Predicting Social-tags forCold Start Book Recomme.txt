 We demonstrate how user ratings can be accurately pre-dicted from a set of tags assigned to a book on a social-networking site. Since a newly-published book is unlikely to have social-tags already assigned to it, we describe a proba-bilistic model for inferring the most probable tags from the text of the book. We evaluate the proposed approach on a newly-created corpus, involving 146 books and 1060 users. Our experiments demonstrate that the proposed approach is significantly better than a well-tuned collaborative filter-ing baseline for books with 10 or fewer ratings. We also show how predictions based on social-tags can be combined with the traditional collaborative-filtering methods to yield superior performance with any number of ratings.
 H.3.3 [ Information Search and Retrieval ]: [Information filtering]; H.3.3 [ Online Information Services ]: [Web-based services] Algorithms, Measurement Recommender Systems, Annotation, Social-tags
Personalised recommendations filter out information and help consumers identify products that they might be inter-ested in without the need to evaluate a broad range of alter-natives. For e-tailers, recommender systems have the poten-tial to increase profits by converting casual visitors into buy-ers, cross-selling products, and increasing loyalty through a customised browsing experience. Recommender systems such as the ones used by Amazon.com and Netflix, try to predict what consumers would like based on their history of likes and dislikes and the choices and feedback from other people with similar preferences. These systems are based on a collaborative filtering (CF) technology along with an on-line feedback mechanism where users are requested to rate items. CF systems are based on matching  X  X iking X  patterns of users where  X  X iking X  is measured using rating information. Therefore, these systems rely heavily on available rating in-formation. When a new item is encountered that no rating information is yet associated with, the recommender system struggles to generate a recommendation. This is known as the  X  X old-start X  problem [5]. This is where content comes into play and in particular social-tags. Social-tags describe the properties of an item and allow it to be found again by browsing or searching. Specifically in the book domain, many social-tags convey important information about the book but most tags cannot be found in the actual text of the book [3]. This is because they often reflect ideas and thoughts that humans who read the book had. This makes social-tags an extremely useful resource for generating rec-ommendations. In this paper we propose a method for using social-tags alone or in combination with CF-based meth-ods to improve recommendations and to solve the cold-start problem when few to no ratings are available for the book.
CF methods have been applied to various domains from news stories and blogs to music, films and books. For the lat-ter, perhaps the most popular system is the one developed and used by Amazon.com [7]. Amazon X  X  method, named  X  X tem-to-item X , aims to reduce the matrix size in the sense that similarity is only computed between pairs of items pur-chased in the past by the same customers. In the same domain, the Libra system [8] produces content-based recom-mendations of books based on data found on Amazon.com. However, the data used by the system includes  X  X elated au-thors X  and  X  X elated titles X  information generated by Ama-zon X  X  internal CF systems. These features were found to make a significant contribution to the quality of recommen-dations.
In the music domain, there has been work on predicting social-tags using audio features and supervised learning [1]. Music attributes from acoustic features were used to pre-dict user-defined tags 1 and preliminary results showed that
Acquired from Last.fm -http://www.last.fm/ a supervised learning approach to auto-tagging has merit. In the domain of book texts, a Relevance Models based al-gorithm was used for the task of predicting social-tags for a new book [2]. The Relevance Models based algorithm out-performed a boosting based one both in terms of quality and scalability. In this paper we adapt this approach for the task of annotating books with social-tags on a large set of labels. We augment the same corpus with rating data and use it to evaluate predicted ratings.
We implement a content-based system where recommen-dations for user u and book b are generated from social-tags based on the similarity between book b and other books in the corpus: Here, r u,b 0 is the rating that user u gave to book b 0 . We use relative frequency of tags to compute the similarity between books: cos( b, b 0 ) represents a cosine similarity measure between two books, where each book is represented as vector of tags and their tf-idf weights.

To simulate a true cold-start problem, we assume that the book for which the rating is predicted is  X  X ew X . We use a probabilistic model, described in Section 3.1.1, to annotate the book with social-tags. The new book is then represented as a vector of predicted tags and weights.
Relevance models (RM) are specifically designed to cap-ture dependencies in bags of labels . The approach was orig-inally developed for alleviating the problem of vocabulary mismatch in Information Retrieval [6], and has since been applied to problems ranging from automatic tagging of im-ages [4] to recovering missing values in database records [9]. We will use the following formulation of relevance models to predict a set of social-tags based on the full text of a book.
Each book B in the training set T is represented as a set of user-assigned social-tags, together with a set of words which represent the actual content of the book. Relevance models operate by estimating a joint probability distribution see a set of social-tags t 1 . . .t n assigned to a book containing words w 1 . . .w m . Under the assumption of exchangeability, the joint probability of observing the words together with the tags can be expressed in the following form: Estimation details are provided in [9].
 Let B 0 represent a testing book, for which we would like to predict the most likely social-tags. Let w 0 1 . . .w 0 m the full text of B 0 . The probability that tag t should be assigned to book B 0 can be estimated as: We label B 0 with n tags that have the highest P ( t | B 0
In order for a system to produce good recommendations regardless of the available ratings we created a hybrid system which used predicted ratings from both systems: tag-and CF-based. To combine the systems we used a linear mixture: Here, r CF is the rating predicted by the CF-based system, and r RM is the rating predicted by Relevance Models. As  X  should be bigger on sets with more ratings to give the CF system more weight, we used a mixing parameter inspired by Bayesian priors: Here,  X  represents the expected number of ratings when the CF system should overtake the tag-based system. At this point we expect  X  = 0 . 5.
We predicted rating for user u and book b using the fol-lowing weighted sum: Here,  X  r u is the average rating of user u 1 , r u 0 ,b user u 0 gave to book b ,  X  r u 0 is the average rating of user u and cos( u, u 0 ) represents a cosine similarity measure between users u and u 0 1 .
For I2I we compared books rather than users. Again, to predict rating for user u and book b we used the following: Here, r u,b 0 is the rating user u assigned to book b 0 , and cos( b, b 0 ) represents a cosine similarity measure between books b and b 0 2 .
To create the final CF-based system we used a Minkowski norm (p-norm) mixture of the U2U and I2I systems: Here, r u 2 u is the rating generated by the U2U system and r i 2 i is the rating generated by the I2I system. The selection process of  X  and p is described in Section 6.2.
Computation excludes the current book
Computation excludes the current user
We trained and evaluated our proposed methodologies on a corpus consisting of the full texts of books, social-tags and user rating data. We obtained the full texts of 146 books from Project Gutenberg 2 , all of which are written in En-glish and of the fiction or literature genres. The books are popular classics which assures sufficient tagging and rating information. We describe the data pre-processing stages as well as the collection of social-tags in detail in [2]. For each book in the corpus we obtained user-rating data from a pop-ular social networking website. A book can be rated on a scale of 0.5 to 5 stars in half-unit increments. We obtained ratings for 1060 users. Our rating data set consisted only of users who rated at least one book from the corpus. To simulate a  X  X old-start X  scenario we progressively restricted each book to have at most 1, 3, 10, 30, 100, 300 or all of its ratings. The system randomly chose which ratings to keep or omit.
We tested two CF-based methods: (a) user-to-user ( U2U ) and (b) item-to-item ( I2I ). In (a) similarity was computed between pairs of vectors where each vector consists of one user X  X  rating data. In (b) similarity was computed between two vectors where each vector consists of one book rating information. We created a third and combined CF system by applying a Minkowski norm mixture to the I2I and U2U systems. We refer to this system as CF .

In our tag-based approach, we treated the problem using an I2I based methodology. However here, instead of using book vectors consisting of user-rating data, we used vectors consisting of tag weights. Moreover, the book for which the current prediction is made was treated as a  X  X ew X  book for which no information yet exists. We made use of the rest of the books in the corpus to predict social-tags for this book. These automatically generated tags made up the current book vector. We refer to this system as RMPred . To examine the upper bound of tag-based recommendations, we created another system which uses true tags (tags assigned by humans) only and refer to it as RMTrue . Lastly, our hybrid system CF RM used a linear mixture to combine RMPred and CF .
Table 1 displays Mean Squared Error (MSE) results the three basic systems as well as the user-average baseline. The tag-based system which uses true tags yields the lowest MSE and consistently outperforms all other systems. The improvement is especially large when less than 10 ratings are available per book. The CF-based methods demon-strate high MSE when only few ratings are available, and are both outperformed by the baseline. When ratings are added, MSE drops substantially and from 100 ratings and onwards it yields the same MSE value. I2I X  X  MSE closes the gap on the RM content-based system and the two demon-strate almost identical MSE scores with a slight advantage to the content-based system. This is expected as both sys-tems are based on computing the similarity between books rather than users. http://www.gutenberg.org/
Table 2: Correlation scores for basic approaches
The difference between the system based on true tags and the one using predicted tags was statistically insignificant. Clearly the quality of ratings generated using the predictions is almost identical to the ratings based solely on human as-signed tags.

As more books were added to the computation, the results improved substantially and the effect of increasing the num-ber of tags is similar as shown in Figure 1. The best results are yielded using all nearest neighbours and the maximum number of tags. The CF baseline systems demonstrate a similar trend, though the improvement is not as strong, as can be seen in Tables 1 and 2. The correlation and MSE val-ues converge very early (using only 10 nearest neighbours) and no improvement is demonstrated beyond this point. The RM and I2I based systems achieve the highest correlation and MSE scores while the U2U system performs worse across all data points.
 Figure 1: RMPred correlation coefficients for num-ber of nearest neighbours and tags MSE values for the combined CF system are shown in Table 3. It is clear to see that the combined system outper-forms the baseline approaches. To select the  X  value used for the p-norm combination, we experimented with values ranging from zero to one. When  X  = 0 . 3 the lowest MSE value is yielded across all numbers of available ratings. We tested a range of p values on this  X  = 0 . 3 to finally set p to 4. The system combining the CF baselines mixture and the tag based predictions consistently yields lower MSE val-ues across all numbers of available ratings as can be seen in Table 3. The difference is statistically significant on sets including 1, 3 and 10 ratings. As more ratings are added to the set, the difference weakens. Figure 2 shows MSE values for the combined CF baselines system, the combined RM and CF systems and RM on its own. Here, again, the re-sults tend to converge from 30 available ratings. In terms of correlation, the combined CF and RM system yields high-est correlation of 0.342 but does not outperform RM alone which yields the same correlation as shown in Table 4.
We tested statistical significance with t-test. When com-paring CF RM to CF, the differences are significant up to and including 10 ratings, with p = 0 . 039 when 10 ratings per book are available. The difference between MSE of RMTrue and RMPred is statistically insignificant with p = 0 . 139.
We described a method for solving the  X  X old-start X  prob-lem in book recommendations. We used a new corpus, con-sisting of the full texts of works of fiction, their social-tags and rating data. To simulate a  X  X old-start X  problem, we as-sumed that the book is new and no tags are assigned to it. Table 4: Correlation coefficients for combined sys-tems We used the book texts to automatically generate weighted social-tags which we then used for comparison with other books X  tags. We showed how the difference between recom-mendations based on the automatically generated tags and the ones based on true tags only is statistically insignificant. This means that in cases of new releases, when the book is not yet associated with social-tags, it can be automati-cally annotated with them to allow the generation of good recommendations.

We showed how a system that generates recommendations based on social-tags outperforms a user-to-user and item-to-item CF methods even when all ratings are available. When combining a tag-based system with a CF-based system, MSE significantly improved over the CF-based system when up to 10 ratings were available per book. Our results showed that the combined system consistently outperformed all indepen-dent systems in terms of MSE and also yielded the highest correlation with true ratings.

