 As the amount of structured data in the Web databases (WDB for short) in-creases dramatically, it becomes more and more important to effectively organize the Web databases, and thus to utilize such wealth of information [1, 2, 4, 5, 12]. Recently, there has been an increasing interest to measure the similarity of Web databases, and help users better explore the Web databases. A number of appli-cations can benefit from an effective Web database similarity measure. The Web database clustering [3, 10, 9, 17] techniques can make use of the similarity mea-sure to group the similar Web databases. Interface integration [19, 8, 6, 11, 18], the technique that integrates interfaces of multiple Web databases into a medi-ated interface, can use the similarity measure to identify similar Web databases to be integrated.
 effective features to represent Web databases. Some interface integration tech-niques [10, 9, 17] focus on the interfaces of Web databases, i.e., HTML forms . They extract labels and elements from the interfaces and construct interface schemas as features of Web databases. A drawback of the above-mentioned fea-tures is that they can only be applied for forms whose contents are indicative of the database domain, and they cannot be applied for simple keyword-based interfaces. Thus, Barbosa et al. [3] proposed new types of features to represent a Web database. They make use of the text (i.e., the bag of words) in the in-terface and in the Web page (page for short) where the interface is located as features. In addition, they assume that multiple pages with a common backlink (i.e., a page that links to the pages) are similar with each other. However, the methods in [3] have the following limitations. Firstly, they only consider the text information, which is extracted from the home-page of the Web database, and thus they are limited to represent the underlying record content. For example, the sub-categories of  X   X  X  X  X  X  X  X  (laptop accessories) X  is missed on the home-page of the WDB in Figure 1. Secondly, the text extracted from pages may contain a lot of noisy words, which are rarely discriminative and cannot capture the characteristics of the Web database. Take the Web database in Figure 1 as an example. Some words, e.g.,  X   X  X  X  X  (shopping cart) X , X   X  X  X  (checking) X , X   X   X  X  X  (hot sales) X  , are useless to represent the corresponding Web database. Even worse, some words, e.g.,  X   X  X  X  (nuts) X  , may lead to errors in terms of the similarity measure. Thirdly, since some pages may link to Web databases with multiple domains (i.e., online directories), the link structure exploited in [3] may not reflect the similarity of Web databases.
 categories in a Web database as the feature of the database. Informally, the record categories of a Web database are the category words of the records in the database. A lot of Web databases, especially the e-commerce Web databases, provide such record categories, in order to facilitate users to browse the records in the databases. For example, Figure 1 provides the categories of the records in an e-commence Web databases. Users can use the category  X   X  X  X  X  X  X  X  (shoulders computer bags) X  to browse all the sub-categories belonging to computer bag as well as all records of shoulders computer bags in the databases. Employing record categories as Web-database features has the following advantages. Firstly, the record categories are provided by designers of the Web databases to allow users to better understand the data. Thus, the categories are carefully selected to capture the content of the Web databases as accurate as possible, and they are of high quality. For example, the record categories in the dashed rectangle of Figure 1 are very discriminative, and can better represent the Web database. Secondly, there exists hierarchy structure between these record categories, such as  X   X   X  X  X  (computer bags) X  and  X   X  X  X  X  X  X  X  (shoulders computer bags) X  , and we can improve the effectiveness of similarity measure by considering the relatedness of categories computed based on the category-hierarchy.
 gories to measure the similarity of Web databases. The first challenge is an ef-fective similarity model based on the record categories. The record categories of different WDBs may be very heterogenous in terms of both category names and hierarchy structures, even though the Web databases are very similar, because the designers of WDBs may have different criteria to categorize the underlying data. Therefore, it is very difficult to measure such heterogenous WDBs. To ad-dress this challenge, we introduce a novel similarity model, named IOGM .We propose to incorporate a unified category hierarchy, which can be derived from the record categories of WDBs, and we introduce a category hierarchy-based model to effectively measure the similarity between WDBs. The second chal-lenge is the construction of the category hierarchy. Since we cannot derive the unified category hierarchy directly from the individual category hierarchies of WDBs, we introduce the suffix relationships of record categories, and develop an efficient algorithm to construct the unified category hierarchy based on the suffix relationships.
  X  We introduce the record categories, a novel feature, to well represent the  X  We propose a category-hierarchy based similarity model to make full use of  X  We propose a suffix-relationship based method to construct the category  X  We conduct experiments in real data sets to compare our methods with the The rest of the paper is organized as follows. Section 2 gives the related work. Section 3 introduces the category hierarchy based similarity model, and Section 4 shows the construction algorithm of the category hierarchy. We report the experiments in Section 5, and finally conclude in Section 6. Measuring the similarities of Web databases has been widely studied in the communities of the database and information retrieval. Some approaches of in-terface integration for Web databases consider the problem as the matching of different interface schemas[19, 8, 6, 11, 18]. These approaches extracted the inter-face schemas from the HTML-based interfaces of Web databases. Then, they exploit some schema matching techniques to match the attributes in different interfaces. However, these approaches can only be applied to the WDBs whose interface contents are indicative of the database domain, and they cannot be applied for simple keyword-based interfaces [3].
 interfaces to represent the corresponding WDBs, and propose to measure the similarity between these texts as the similarity between WDBs. The proposed approaches can avoid some drawbacks of interface integration. They, however, may be ineffective to measure the similarity between WDBs, because they bring many noisy words, which are rarely discriminative and cannot capture the char-acteristics of the Web database. Compared with the similarity models proposed in interface integration and Web-database clustering, we propose to use a novel feature, the record categories to represent the WDBs, and employ the category hierarchy to improve the performance of similarity measure. As shown in our experimental results, our similarity model can achieve better performance. tures. The method that is most related to our method is the OGM model in [7]. This model also employs a hierarchy structure to improve the similarity measure on top of sets of items. In addition, some approaches use the hierarchy structure to improve the performance of document similarity measure [15, 13] and doc-ument classification [15]. Compared with the above-mentioned approaches, we focus on employing the hierarchy structure to measure the similarity between two category sets obtained from the WDBs. We focus on the WDBs that contain a set of record categories (categories for short) provided by the designers of the WDBs. In particular, we take into account the hierarchy relationship of these categories. Take a WDB containing records in the bag domain as an example, as shown in Figure 1, we can obtain some record categories, e.g.,  X   X  (bag) X  ,  X   X  X  X  X  (computer bag) X  , etc, by extracting the text corresponding to the categories from the Web pages. Obviously, the  X  X omputer bag X  is a sub-categories of the  X  X ag X  , and thus they have a hierarchy relation-ship. The similarity measure of WDBs can benefit from the above-mentioned category hierarchy relationship, because we can use the hierarchy to measure the relatedness between each pair of categories. Consider another category  X   X   X  X  X  (shoulder bag) X  . Although this category does not equal to the  X  X omputer bag X  , both categories are all sub-categories of the  X  X ag X  according to the cate-gory hierarchy. Therefore, we can improve the effectiveness of similarity measure by considering the relatedness of categories computed based on the category hierarchy.
 each WDB as an individual category hierarchy, i.e., a tree of categories. Then, we can employ some similarity measures of trees to measure the similarity be-tween the corresponding WDBs. However, this method cannot perform well due to the heterogenous structure of category hierarchies across WDBs. More specif-ically, the designers of WDBs usually use different criteria to summarize the categories of the underlying records, even though the records are very similar. For example, to categorize the records in the domain of  X  X ag X  , one designer may use the categories,  X  X omen bags X  and  X  X en bags X  , and another one may use  X  X port bags X  and  X  X omputer bags X  . In addition, the hierarchy relationships of categories may be various across different WDBs. For example, in one WDB, the category  X  X omen bags X  may contain the  X  X omen computer bags X  and the  X  X omen shoulder bags X  , but the category  X  X omputer bags X  may contain  X  X omen bags X  and  X  X houlder bags X  in another WDB. Therefore, we cannot simply employ the hierarchy relationships provided by the WDBs.
 the record categories without the hierarchy structure provided by the individual WDBs. Then, we develop some methods to construct a unified category hierarchy based on the collected categories. Using the constructed category hierarchy, we can improve the effectiveness of similarity measure of WDBs. In this section, we assume that we already have a unified category hierarchy, and concentrate on presenting the similarity model based on the category hierarchy. The details of category hierarchy constructions will be discussed in Section 4. 3.1 Similarity Model etween WDBs We consider the similarity between two WDBs as the similarity between the two sets of categories corresponding to the WDBs. Specifically, let  X  = denotes the set of categories corresponding to a WDB, where C egory in the WDB. We measure the similarity between two WDBs based on the similarity between the two sets of categories, i.e., Many similarity models on top of sets, e.g., Jaccard coefficient, Cosine sim-ilarity, etc., can be used to compute the similarity between two category sets, sim (  X  1 , X  2 ). However, these models only consider whether two categories are identical or not, and they neglect the interior relatedness between categories themselves. [7] proposes to employ a hierarchy tree to compute the similarity of two sets, and introduces a novel model, named Optimistic Genealogy Measure (OGM for short). We borrow the framework of OGM to measure the similarity of two category sets,  X  1 and  X  2 , and propose the following similarity model, called Improved OGM (IOGM for short). The difference between OGM and IOGM is that they adopt different similarity function to measure the similarity of any two terms in  X  1 and  X  2 . And their elements of the sets are also different: the elements in OGM are only the leaf nodes in the hierarchy tree, but the elements in IOGM are all the nodes in the hierarchy tree. The basic idea of our model is that we examine all categories in  X  1 . For each category C category C j in  X  2 with the maximum relatedness of C i , and take the similarity between C i and C j as the similarity between C i and  X  2 in  X  1 , we compute the above-mentioned similarity of  X  2 similarities together to obtain the overall similarity between  X  Definition 1 (IOGM). Consider two sets of categories,  X  1 ing to two WDBs. We measure the similarity between  X  1 and  X  and sim ( C i , X  2 ) = max where  X  ( C i ,C j ) is the relatedness of the two categories, C Notice that, sim (  X  1 , X  2 ) is asymmetric. Next, we discuss the methods for estimating the relatedness of two categories based on the category hierarchy. 3.2 Estimating Category Relatedness Based on Category Hierarchy Given a category hierarchy, we present a method to estimate the relatedness of two categories in this section. Formally, a category hierarchy is a tree-based structure of categories, where relationship between the parent and the child rep-resents that the category corresponding to the child is a sub-category of the category corresponding to the parent. Figure 2 shows an example category hier-archy. We employ the category hierarchy to measure  X  ( C i and C j , in the category hierarchy. We define the LCA as the common ancestor of C i and C j with the maximal depth,where the depth is the number of nodes in the path from the root to the corresponding node in the category hierarchy. We use the category and the tree node exchangeably in the rest of the paper, if there is no ambiguity. For example, in Figure 2, LCA ( Y,H )= K , because 1) K is the ancestor of both Y and H ,and2) K has the maximal depth in all ancestors of Y and H . We note that the depth of the LCA of the two categories can capture their similarity. In details, the deeper the depth of the LCA of C more similar C i and C j are, because the two categories are sub-categories of a more specific super-category. Formally, we estimate the relatedness of C as follows. Notice that, when the two categories are same, we have  X  ( C to the formula.
 that the first category is the descendant category of the second category accord-ing to the category hierarchy. In this case, we assume that the two categories are highly related to each other, because the super-category includes the descen-dant category in semantic (e.g.,  X   X  (bags) X  includes  X   X  X  X  X  (computer bags) X  in semantic). Therefore, we define that the similarity between two categories satisfying LCA ( X,Y )= Y is 1.
 In this section, we discuss the method for constructing the category hierarchy, which is used in the proposed similarity model in Section 3. The basic idea of our method is to utilize the suffix relationship between categories. We describe the suffix relationship in Section 4.1, and introduce an efficient construction method in Section 4.2. 4.1 Suffix Relationship For two categories, we focus on determining whether they have a hierarchy re-lationship, that is, a category is the sub-category of the other category. To this end, we exploit the following grammatical observation in Chinese. If the longest common suffix of two categories is exactly the category with the shorter length, then the category with the shorter length is the sub-category of the one with the longer length. For example, in Figure 1, the longest suffix of  X   X  X  X  X  X  X   X  (shoulders computer bag) X  and  X   X  X  X  X  (computer bag) X  is  X   X  X  X  X  (computer bag) X  , which is exactly the category with shorter length. Therefore,  X   X  X  X  X  X  X   X  (shoulders computer bag) X  is the sub-category of the  X   X  X  X  X  (computer bag) X  . Formally, we define the suffix relationship as follows.
 Definition 2 (Suffix Relationship). Suppose C 1 and C 2 are two record cate-gories. If C 2 = b 1 b 2  X  X  X  b n C 1 ( n  X  1) , where each b we call that C 1 and C 2 are of suffix relationship, and C Figure 3(a) shows an example of the Suffix Relationship. We note that for a given record category, there could be several suffixes. For example, the suffix of  X   X  X  X  X  X  X  X  (shoulders computer bag) X  may be  X   X  X  X  X  (computer bag) X  or  X   X  (bag) X  . In order to obtain the direct sub-categories of a category, we use the longest suffix of a category as its sub-category, which is defined as follows.
Definition 3 (Longest Suffix). Suppose set S ( C i ) is the set of all the suffix of the category C i , then the longest category in S ( C i of C i .
 In particular, we name the record category which does not have a suffix, such as  X   X  (bag) X  ,as isolated record category . As we will see in 4.2, an isolated record category does not have any lower layer categories in the category hierarchy. 4.2 Category Hierarchy Construction
In this section, we present an algorithm that efficiently constructs the category-hierarchy based on the suffix relationship proposed in Section 4.1, as shown in Algorithm 1.
 =1  X  i . The output of the algorithm is a category-hierarchy, i.e., CHT .The algorithm firstly sorts the  X  according to the lengths of the categories in  X  in an ascending order (Line 1). This step guarantees that the father node of any category C has already been added to the category-hierarchy, CHT .The reason is that we visit the set  X  in ascending order of the length of categories.
If the longest suffix length of a C ,say LS , exists, then we have length ( LS ) &lt; the CHT . Otherwise LS does not exist, the father node in the CHT is the root node. Then the algorithm creates a virtual root node for the category-hierarchy in order to combine all the isolated record categories together (Line 2). Next, the algorithm processes every category C in  X  (from Line 3 to Line 13). In more details, it creates a new node for C in Line 4, and find the longest suffix for C in
Line 6. Then, the algorithm determines whether C is an isolated category. If it is an isolated category, it adds tree node corresponding to C to the child set of the root. Otherwise, it adds tree node corresponding to C to the child set of the tree node corresponding to its longest suffix LS . Finally, the algorithm returns the root node of CHT . Figure 3(b) shows an example of the category-hierarchy constructed by Algorithm 1.

It is notable that we do not deal with the case that one word has more than one meanings(e.g.,  X   X  X  X  (apple) X  ) in the construction of category hierarchy, which we may consider in the future work.
In this section, we report our experiments to examine the effectiveness of our cat-egory hierarchy based model for measuring the similarity between two WDBs. To this end, we conducted two experiments based on our similarity model. Firstly, we applied our similarity model to find the top-k similar WDBs, given a query WDB, and examined whether the found WDBs were relevant to the given WDB.
Secondly, we employed the similarity model for WDB clustering, which is an es-sential task for organizing the WDBs.
 5.1 Experiment Setup
Data Set. We examined the effectiveness of our category hierarchy based sim-ilarity model on top of a set of 623 Chinese WDBs, which we collected from the real Web using rule based method automatically. For each WDB, we man-ually annotated a domain label for it as a benchmark only for our clustering experiment. Note that the domain labels were only used for benchmark, and our proposed methods do not depend on these labels. Table 1 describes some details of the data set. From the table, we can see our experimental data contains 28 different domains, which covers most domains in Chinese WDBs. length ( C ), and so its longest suffix node has already been processed and added to Evaluation Metric. To evaluate the performance of top-k WDB recommenda-tion based on our similarity model, we asked 15 volunteers to label whether the recommended WDBs were relevant to the query WDB (the volunteer labeled 1 for relevant WDB, and 0 for the irrelevant one). Then, we exploited an aggrega-tion score, precision to evaluate the performance of top-k WDB recommendation, i.e., We further averaged the precisions of all the 623 WDBs as the precision of top-k WDB recommendation.
 i.e., the entropy and the F-measure [3]. For each cluster, we compute the entropy by using the standard formula.
 where p ij is the probability that a member of cluster j belongs to domain i .The entropy for all the clusters is the sum of the entropies of each cluster, weighted by the size of each cluster. Intuitively, the lower the entropy is, the better the clustering algorithm is. The F-measure provides a combined measure of precision and recall [16, 3]. For a cluster X and a domain label D (see Table 1 for details), we computed F-measure, F as follows.
 where N 1 is the number of WDBs in cluster X which can be judged to the domain D , N 2 is the number of WDBs in cluster X ,and N 3 WDBs in domain D . In general, the higher the F-measure value is, the better the clustering algorithm is.
 Baseline Method. We implemented the similarity model employed in [3] (FC+PC for short), which is the most effective method for WDB clustering in the state-of-the-art. This similarity model extracted the text in the interfaces to represent the corresponding WDBs, and developed several methods to de-termine the weights of the text for measuring the similarity. We used FC+PC as the similarity model in our top-k experiment and clustering experiment, and compared the performances with our proposed similarity model. 5.2 Experimental Results In this section, we report the experimental results of our category-hierarchy based similarity model.
 Top-k WDB Recommendation. Figure 4(a) shows the performance of top-k WDB recommendation using our similarity model and the baseline model. From the figure, we can see that the precision of our similarity model is 20 per-cent higher than that of the FC+PC similarity model. The main reason that our method outperforms the baseline methods is that we exploit the record categories to represent the WDBs. Compared with the FC+PC model, our method can make use of the text capturing the effective features of the WDBs. In contrast, the FC+PC method may bring many noisy terms, which would be harmful to the similarity measure. For example, there are many interfaces containing the text  X   X  X  X  (search) X  ,  X   X  X  (discount) X  , etc. These terms are useless for measuring the similarity between WDBs. In addition, to make full use of the record categories, we take into account the category hierarchy, which can improve the performance of similarity measure, compared with the traditional similarity models on top of sets, e.g., Jaccard coefficient, Cosine similarity, which FC+PC used. The ex-perimental results show that our category-hierarchy based similarity model are very effective, and the precision of top-1 WDB recommendation is 89 . 87%. Clustering. Since our similarity value from IOGM is asymmetrical, we re-normalize the similarity value by the following formula: We ran the clustering algorithms based on our similarity model and FC+PC on top of our data set. We employed the Partitioning Around Medoids (PAM) as the clustering algorithm [14]. This algorithm starts by setting an initial set of medoids, and iteratively replaces one of the medoids by one of the non-medoids if it improves the total distance of the resulting clustering. We computed the distance between two WDBs as 1 minus their similarity value.
 IOGM similarity model and by FC+PC model. We can see that both the en-tropy and F-measure obtained from our similarity model are much better than FC+PC. Our result is better because we consider more information about the content of the WDBs, and we also make use of the hierarchy structure of the record categories, which leads to a better similarity measure. In this paper, we have introduced a novel model for measuring the similarity be-tween Web databases. We proposed to employ the record categories, a novel fea-ture provided by the designers of WDBs, to represent the corresponding WDBs. We proposed a model on top of the two sets of categories to measure the similar-ity of the two WDBs. In order to improve the performance of similarity measure, we proposed to exploit a category hierarchy to make full use of the hierarchy relationships of categories. In addition, we introduced an effective and efficient algorithm to construct a high-performance category hierarchy. We conducted experiments on real Chinese Web databases, and the experimental results have shown that our proposed similarity model has performance advantages, com-pared with the baseline method. Furthermore, as all steps in our method is automatically implemented, our method can be used in real applications easily.
