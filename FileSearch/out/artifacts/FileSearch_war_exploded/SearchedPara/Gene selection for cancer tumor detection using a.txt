 A. Zibakhsh, M. Saniee Abadeh n 1. Introduction
In recent years there has been an explosion in the speed of attainment of biomedical data. Progresses in molecular genetics technologies, such as DNA microarrays ( Hedge, 2000 ), lead us to gain a global view of the cell. Microarray is a valuable technique for measuring expression data of thousands of genes simulta-neously. An important rising medical application domain for microarray gene expression profiling technology is medical decision support in the form of diagnosis of disease as well as prediction of clinical outcomes in response to treatment. The two areas in medicine that currently attract the most attention in that respect are management of cancer and infectious diseases ( Ntzani and Ioannidis, 2003 ).The prediction of the diagnostic category of a tissue sample from its expression array phenotype using the microarray data from tissues in identified categories is known as classification. The samples are usually the experiments and the categories are the types of tissue samples. A number of systematic methods have been developed and studied to classify cancer types using gene expression data ( Khan et al., 2001 ; Golub et al., 1999 ).

One of the most important challenges of the microarray classification problem is to eliminate redundant genes that are unrelated to classification accuracy. Selecting related genes from all testing genes is called  X  X  X ene Selection X  X , which corresponds to feature selection in pattern classification. Many gene selection approaches from statistical analysis ( Khan et al., 2001 ) and a
Bayesian model ( Lee et al., 2003 ) to Fisher X  X  linear discriminant analysis ( Xiong et al., 2001 ) and support vector machines (SVM) ( Guyon et al., 2002 ; Tang et al., 2006 ) have been developed over the years. There have been several studies ( Statnikov et al., 2005 ;
Ramaswamy et al., 2001 ) where different feature selection methods and classification systems have been compared.
In analyzing expression data by designing classifiers, it is better to provide additional biological knowledge associated for verifying the selected genes rather than only emphasizing on high classification accuracy and small number of used genes. Several frequently used techniques for designing classifiers from micro-array data, such as the support vector machine ( Nakashima et al., 2005 ), neural networks ( Yi-Chung, 2007 ), k-nearest neighbor ( Wang and Lee, 2002 ), and the logistic regression model ( Ooi and Tan, 2003 ), have low interpretabilities. In this paper, design-ing a precise and solid fuzzy rule-based classification system with linguistic interpretability using a small number of related genes has been investigated. The results of this work would be valuable for microarray data analysis and development of economical diagnostic tests. The desirable classifier is a set of fuzzy rules with linguistic interpretability where each rule is as the similar form: if gene A is High and gene B is Low, then the type of tumor is X.
 sion classifier (named CD-MFS, i.e., C ancer D iagnosis with M eme-tic F uzzy S ystem) with an accurate and compact fuzzy rule base for cancer tumor detection from microarray data. The design of
CD-MFS has three objectives to be simultaneously optimized: maximal classification accuracy, minimum number of rules, and minimum number of used genes. In designing CD-MFS, a new memetic algorithm with Multi-View fitness function approach is used to efficiently solve the design problem with a large number of tuning parameters. The new presented Multi-View fitness function considers two deferent evaluating procedures. The first procedure evaluates each single fuzzy if X  X hen rule based on the specified rule quality, while the second procedure considers the quality of each fuzzy rule according to the resulted fuzzy rule set fitness.
 have presented a summery review on the basic provided conven-tions in this paper. Section 3 introduces our fuzzy memetic-based rule learning algorithm. The following section will discuss the experimental results which we have obtained. In the last section of the paper we have derived some conclusions. 2. Preliminaries 2.1. Biological data overview trillions of cells in the human body. There are chromosomes in cell cores and in chromosomes there is DNA. DNA is composed of two coding and encoding parts, the coding part is referred to as a gene. Genes are codes that produce proteins. Proteins are large molecules which are the basis of any organism. All cells in one organism have same genes, but these genes have different expressions in different conditions and times ( KDnuggets et al., 2004 ).
 to several tens of thousand genes or ESTs (expressed sequence tags). After hybridization, the microarray is scanned and con-verted into numerical data. Finally, the data should be normal-ized. The purpose of this step is to counter systematic variation (e.g. difference in labeling efficiency for different dyes and compensation for signal spill over from neighboring spots) and to allow a comparison between different microarrays ( Yang et al., 2001 ).
 both clinical and histopathological information with an eye toward placing tumors in currently accepted categories based on the tissue of origin of the tumor. However, clinical information can be incomplete or deceptive. Molecular diagnostics offer the promise of precise, objective, and systematic human cancer classification, but these tests are not widely applied because characteristic molecular markers for most solid tumors are yet to be identified. Recently, DNA microarray-based tumor gene expression profiles have been used for cancer diagnosis ( Ramaswamy et al., 2001 ). DNA microarrays allow us to obtain a global view of the cell. For example, we can now routinely investigate the biological molecular state of a cell measuring the simultaneous expression of tens of thousands of genes using DNA microarrays. 2.2. Memetic algorithm
Evolutionary algorithms (EAs) maintain a population of candi-date solutions for the problem. These solutions are synonymously called individuals or search points. EAs repeatedly create new individuals (offsprings) out of individuals (parents) in the current population. Since EAs employ a fitness function in selecting high quality parents for offspring creation, after several generations these algorithms are capable of evolving high quality individuals.
The so called fitness function assigns a real fitness value to each individual. Over the past years, it has become increasingly popular to include local search techniques into the random search process of evolutionary algorithms ( Sudholt, 2009 ). These hybrid algorithms are known by various names, such as memetic algo-rithms (MAs), evolutionary local search, genetic local search, global_local search hybrids, large-step Markov chains, etc. The term memetic algorithms has been coined by Pablo Moscato, who relates local search to a process of cultural evolution; the word  X  X  X emetic X  X  is derived from biologist Richard Dawkins X  X  notion of  X  X  X emes X  X  as the cultural and social equivalent of  X  X  X enes X  X .
Memetic algorithms apply a local search procedure to some of newly created offsprings to quickly improve the fitness of indivi-duals and to discover promising regions of the search space. The benefit of local search is manifold. Firstly, we can expect high-fitness solutions to be found more quickly. Moreover, there may be low-fitness offspring located in the basin of attraction of a high-fitness local optimum. In a standard evolutionary algorithm, such individuals are likely to get lost immediately in the selection process ( Michiels et al., 2007 ). In a memetic approach local search may improve upon these solutions and reach a local optimum with high fitness. This effect is particularly visible in constraint optimization problems where often infeasible solutions are pena-lized with respect to their fitness and the penalty decreases towards feasible regions. If mutations and/or crossover create an unfeasible offspring, a local search can work as a repair mechanism and find a feasible solution. Lastly, there is an additional option to include problem-specific knowledge into the search as local search may be adopted to the problem at hand. Such an approach is often possible since local search strategies are typically easy to design, even in cases where no global problem-specific strategy is known ( Krasnogor and Smith, 2005 ). 2.3. Rule-based knowledge
The discovered knowledge in rule-based systems is repre-sented in the form of if  X  then prediction rules or commonly known as the Michigan encoding ( Michalewicz, 1994 ). These rules have the advantage of being high-level representative statements. Such rules state that the existence of one or more interpretations (antecedents) implies or predicts a certain result. A typical rule has the form
Rule: If A 1 and A 2 and y A n then C . where A i , 8 i A f 1 , 2 , ... , n g is the antecedent that leads to the prediction of C , the consequence. A i is seen as the independent variable and C as the dependent variable. In a population of rules, each of the if X  X hen rules can be viewed as an independent piece of knowledge ( Tan et al., 2003 ), and the insertion or deletion of rules into the population would not interfere with the performance of the other individual rules but would collectively reflect the performance of the population. For a multi-class problem, each of the rules predicts a particular class and the population of rules would cover all the different classes of the problem data set. 3. Related works
Computational analysis and computing can help researchers to collate a group of signature genes for a certain disease ( Wang et al., 2005 ; Buturovic, 2006 ). Since the price of microarray chips is very high and also we have not enough tissue samples from cancer patients, the number of records in microarray datasets is usually too few, which is not suitable for most machine learning algorithms. In addition, the processing and material used for microarray analysis is typically different between manufacturers. Therefore, it is difficult to identify a unique set of genes that can form an integrated dataset ( Ein-Dor et al., 2005 ). Moreover, while the number of samples for each cancer type is usually balanced for computer analysis, the ratio of cancer patients to normal adults is mostly much smaller in the real world.

Since the number of genes is always much greater than the number of tissue samples ( Yeung et al., 2005 ), one of the main challenges would be selecting small and discriminative subset of effective genes among tens of thousands of genes, which is a very difficult task. Therefore, gene selection becomes the most neces-sary prerequisite for a microarray based cancer classification system. However, the best combination of classification and gene selection is understood poorly, because there is another metho-dological trouble associated with training microarray data. This is the problem of  X  X  X ver-fitting X  X  ( Statnikov et al., 2005 ). In short, over-fitting means that one can obtain good performance using a training set, but when new data is used, a satisfactory result cannot be obtained using the trained model. This occurs often when we have a small number of high-dimensional samples (for both training and testing the model). Unfortunately, we have exactly such a problem in cancer tumor detection using micro-array datasets.

The common procedures used to classify microarray data have been described previously ( Statnikov et al., 2005 ; Wang et al., 2005 ; Buturovic, 2006 ; Papageorgiou, 2010 ; Martinez et al., 2010 ), and are as follows: 1. Raw microarray data normalization. The tens of thousands of probes on the microarray provide weak or strong signals after an experiment. Normalization converts the signals to vari-ables, and appropriate normalization is used to filter out some noise. 2. Gene selection. In order to solve the over-fitting problem, gene selection becomes critical. Gene selection includes gene filtering, gene clustering, gene ranking and gene extraction. Some basic numerical or statistical analyses, such as the t -test ( Fisher, 1932 ),
F -score ( Golub et al., 1999 ) or standard deviation (SD) ( Seigel, 2003 ) are applied to filtering the ge nes as a pre-procedure. The reason for gene selection has been pointed out in many previous studies; namely, that it reduces the dimensions and improves performance during classification ( Statnikov et al., 2005 ; Wang et al., 2005 ; Buturovic, 2006 ; Antonov et al., 2005 ; Zhang et al., 2006 ). 3. Classification. It is essential to choose the most appropriate and suitable machine learning classification algorithm by testing all possible procedures using these systems, because good gene selection should improve classification perfor-mance. These approaches include the C4.5 decision tree (C4.5) ( Quinlan, 1993 ), support vector machine (SVM) ( Vapnik, 1998 ), k-nearest-neighbor (KNN) ( Herwig et al., 1999 ) and Na X   X  ve Bayes (NB) ( John and Langley, 1995 ).
A previous work by Li et al. (2004) has carried out overall comparisons between many feature selection methods and clas-sifiers for microarray datasets. A total of eight feature selection methods were combined with four major classifiers, namely C4.5 decision tree, NB, KNN and SVM. Also, Dodoit et al. (2000) compared the performance of different discrimination methods for classification of tumors. These methods included nearest neighbor classifier, linear discriminant analysis, diagonal discri-minant analysis and classification trees.

HykGene ( Wang et al., 2005 ) and GEMS ( Statnikov et al., 2005 ) are both tools used for the analysis of microarray gene expression data. The major contribution of HykGene is that it selects a small set of non-redundant maker genes that are most relevant for the classification task. The Gene Expression Model Selector (GEMS) is a software system that automates high quality model construc-tion and provides excellent optimization and performance esti-mation procedures.

A major goal of an automated decision support system in cancer diagnosis such as ours is to develop diagnostic procedures based on the least number of possible genes needed to detect diseases. Thus, in this work, as an alternative to previous methods, we propose a simple yet powerful algorithm that can accurately predict gene expression class by using a very small number of genes. Thus, the most important feature of our cancer diagnosis system is that it has retained its interpretation capability besides its high accuracy. 4. Proposed method (CD-MFS)
This section presents the memetic algorithm, which the paper proposes in two subsections. Section 4.1 briefly explains fuzzy if X  then rules and a fuzzy reasoning method for pattern classification problems with continuous attributes. A heuristic procedure is also described to determine the consequent class and the certainty grade of each fuzzy if X  X hen rule from training patterns. This heuristic procedure is an adapted version of the one which has been introduced by Ishibuchi et al. (1992) .The memetic proce-dure used within the Multi-View fitness function approach is presented in Section 4.2 . 4.1. Fuzzy rule base for pattern classification
Let us assume that our pattern classification problem is a c -class problem in the n -dimensional pattern space with contin-uous attributes. We also assume that M real vectors
X All values in pattern attributes are normalized in a [0, 1] interval.
In the provided fuzzy classifier system, we use fuzzy if X  X hen rules of the following form:
Rule R j :If x 1 is A j 1 and x 2 is A j 2 and y and x n is A with CF  X  CF j .where R j is the label of j -th fuzzy if X  X hen rule, A
A are antecedent fuzzy sets in a unique interval, C j is the consequent class, and CF j is the grade of certainty of the fuzzy rule. In computer simulations, we use a typical set of linguistic values in Fig. 1 as antecedent fuzzy sets.

The whole number of if X  X hen rules, in a classification problem with n features is 6 n . It is impossible to use all of these rules in a single fuzzy rule base when the number of attributes (i.e., n )is large (for cancer tumor diagnosis in this article, n  X  15,009). Our fuzzy learning system searches for a few numbers of if  X  then rules, which are capable of detecting the cancer class with high classification accuracy. Since the result class and certainty grade of each if X  X hen rule can be computed according to training samples and a simple procedure, our learning classifier system is responsible for finding the best combinations of antecedent fuzzy sets ( Gadaras and Mikhailov, 2009 ). This goal may seem easy in the first stage. However, solving classification problems with high dimensions is very hard, specifically for our problem since it has a huge search space with 6 n states.
 grade of each rule ( CF j ) will be calculated from Ishibuchi et al. (1992) by the following steps: )
After using the above mentioned procedures for each rule, the result class and certainty grade of each rule would be identified.
For a new sample X p  X  ( X p 1 , X p 2 , y , X pn ), the winner rule R computed as follows:
For new samples, the result class and certainty grade are identi-fied according to Eq. (5) .
 follows. Each if  X  then rule will be coded as a string. The following numbers will be used to determine six linguistic variables ( Fig. 1 ); 0: do not care, 1: small, 2: medium small, 3: medium, 4: medium large, and 5: large. For example, the following fuzzy rule will be coded as  X 245103 X .
 and x 4 is small and x 5 is do not care and x 6 is medium, then Class
C j with CF  X  CF j . 4.2. Memetic algorithm procedure
In evolutionary algorithms, various fitness functions are used to evaluate a member of population. However, in most of them a single fitness function is used for evaluation in every generation.
As a kind of evolutionary algorithm, memetic algorithms use a fitness function in both the chromosomes X  evaluation and local search steps. Usually, this leads the algorithm to a late conver-gence and long computation time.

In this paper, we propose a memetic algorithm in which two different fitness functions are used. One of these fitness functions, which we have called the global fitness function , is based on the quality of a rule in covering the training samples. The global fitness function is used in the chromosomes X  evaluation process which is located outside of the local search procedure of the memetic algorithm. The second fitness function, that is called local fitness function , is employed by the local search procedure.
This fitness function is based on the total classification rate of the resulted fuzzy rule set.

For all intents and purposes, the proposed algorithm leads the evolutionary process of the memetic algorithm to a fast and effective convergence. An outline of the proposed memetic algo-rithm is presented in Fig. 2 . As shown, the algorithm consists of several steps. This subsection will discuss each of these steps in detail. 4.2.1. Initialization
Suppose that N population is the number of fuzzy rules in the initial population. In this paper, to create initial rule sets, the numbers of N population if  X  then rules will be produced randomly based on existing samples in the dataset and initialize the antecedent of rules by linguistic values in Fig. 1 . Here we set the do not care probability to zero, so each rule would have initially the maximum length. 4.2.2. Evaluation
To evaluate each of the fuzzy rules in the population, we need a fitness function. The equation of the first fitness function which, we have called the global fitness function , is as follows: Fitness  X  R j  X  X  POSITIVE Weight SRPP  X  R j  X  NEGATIVE Weight where SRPP and SRNP denote two features of fuzzy rule R j POSITIVE Weight and NEGATIVE Weight are the used coefficients for them respectively. SRPP stands for Single Rule Positive Power, which means the classification coverage degree of a single rule in classifying same class samples when we do not consider the existence of other rules. Similarly, SRNP stands for Single Rule Negative Power, which means the classification coverage degree of a single rule in classifying samples of other classes. For a give fuzzy rule R j , these numbers can be calculated by summation of the fuzzy coverage of R j for all of the training records according to the following equations.
 SRPP  X  R j  X  X  SRNP  X  R j  X  X  4.2.3. GA operations
Genetic algorithm (GA) operators consist of selection, cross-over and mutation. In this step, a population of N population springs (fuzzy rules) is created. The selection procedure is based on the Roulette wheel method. Each fuzzy if  X  then rule in the current population is selected according to the following selection probability: PR  X  X  X  fitness  X  R  X  P Then, selected rules are mixed using a uniform crossover method, so there will be a child rule as a result. A crossover operation is applied to a selected random pair of fuzzy if X  X hen rules with a pre-specified crossover probability ( P C ). With a pre-specified mutation probability ( P M ), each antecedent fuzzy set of fuzzy if X  X hen rules is randomly replaced with a different antecedent fuzzy set after the crossover operation. The uniform crossover and the random mutation method are presented in Fig. 3 . Here, the probability of changing a single gene to do not care is higher than other five linguistic variables. Therefore, we can increase the possibility of generating interpretable rules. After performing GA operations, the fitness value of each of the generated rules is evaluated according to Eq. (6) . 4.2.4. Local search
The local search operator searches the local area of an input rule to find better rules. However, this task is done in the final generations of the algorithm and on those rules that their fitness is higher than a pre-specified threshold. In this step we use another fitness function ( local fitness function ) to evaluate rules. First for the input rule, we calculate the  X  X  X otal Classification Rate X  X  value by using the following equation: Total Classification Rate R i  X  X  X  NCP  X  R i  X  Number of dataset samples where NCP( R i ) is the number of correctly classified training samples by R i . This search is done by increasing or decreasing an antecedent part of the rule. That is, each antecedent fuzzy set of fuzzy if X  X hen rule is randomly replaced with a different antecedent fuzzy set. The probability of changing any antecedents of R i to the do not care value is more than other linguistic terms.
The output of this procedure would be a rule, which is very similar to the input rule, while its second fitness (i.e., total classification rate) is improved. After performing the above local search procedure for the rule R i , the true fitness value of R evaluated according to Eq. (6) . 4.2.5. Replacement
According to the replacement rate ( P R ), the best generated rules will be replaced with the worst parental rules in the current population. This operation guarantees that our learning system retains the best found individuals. 4.2.6. Internal termination test
There are different approaches to terminate the operation of a genetic algorithm. One approach to break the evolutionary process of the algorithm is considering a pre-specified number of generations. Another approach is to stop the algorithm when after several iterations the best individual in the population has not been changed. In our proposed algorithm, we have considered the second approach. 4.2.7. Save best rule in rule set
During this step, the best rule which is the result of several generations will be added to the final learned rule set. However, this operation would be possible only if the new rule does not exist in the final learned rule set. 4.2.8. External termination test
As most of the operations in the mentioned memetic algorithm deal with random parameters, the algorithm repeats the previous steps until all samples of every class are covered by the final learned rule set. 4.2.9. Reasoning phase
We have performed some calculations for each extracted rule that would be used in the reasoning phase as follows:
First we calculated the centroid of NCP samples and called it the  X  X  X entroid Point (CP) X  X . Calculation of this point can be simply performed by computing the average value for each feature among NCP samples. Then we calculate the average Euclidean distance between NCP samples and CP (distNCP), and NMP samples and CP (distNMP). NMP samples are incorrectly classified training samples by rule. We have calculated a threshold by using distNCP and distNMP as the neighborhood radii (NR). The NR of the rule is used as a parameter to evaluate each test sample. rule compatibility grade for a given testing sample, is the mini-mum compatibility degree of rule ( Min_Opinion ). The coverage of each rule for any testing sample using Eq. (1) should be higher than Min_Opinion . This parameter guides the algorithm to pro-duce more accurate results and also more interpretable rules. steps. First, we select rules which the calculated value of them (Eq. (5) )is higher than Min_Opinion for a new sample. At the second step, among the selected rules from the previous step the winner rule would be the one that distance of the test sample from CP of it is less than its NR ( Fig. 4 ). 5. Experimental results performance of the CD-MFS classification system in cancer diagnosis. The 14_Tumors dataset has been gathered by
Ramaswamy et al. (2001) , and involves 308 samples and 15009 genes ( Ramaswamy et al., 2001 ). This data set has an important property; it has 14 different cancer tumors and is known as a comprehensive cancer dataset. These tumor types consist of breast, prostate, lung, colorectal, lymphoma, bladder transitional cell carcinoma, melanoma, uterine, leukemia, renal cell carci-noma, pancreatic, ovarian, pleural and central nervous system tumors. Expression data was generated using Affymetrix high-density oligonucleotide microarrays containing 16,043 known human genes or expressed sequence tags (EST). The expression intensities for each gene were calculated using the Affymetrix GENECHIP analysis software.
 dimensionality. Therefore, to decrease the dimensions of this problem, we will use a preprocess step. In this step, filtering methods will be used for rating genes in datasets. The popular  X  X  X nformation Gain X  X  method is used in our proposed method to decrease problem aspects, because in conducted researches, using the selected genes by the above method required a more efficient classification model. Therefore, we used and exploited 100 super-ior genes in ranking our conducted experiments to extract fuzzy rules and make the final classifier.

CD-MFS algorithm, we must determine some parameters first. In search algorithms there are two concepts: exploration and exploitation ( Wang and Lee, 2002 ). The former indicates the ability of the algorithm to cover the search space while the latter refers to the ability of the algorithm to benefit the results of its previous search steps. Too much exploration leads the algorithm to late convergence, while high exploitation may guide it to be trapped in a local optimum. Therefore, it is necessary to balance these two concepts. The CD-MFS algorithm parameters and their dedicated values have been determined using a trial and error mechanism in order to achieve the balance between exploration and exploitation abilities of the CD-MFS algorithm. The para-meters of the CD-MFS algorithm are listed in Table 1 .
Table 2 shows the classification rate of CD-MFS versus several recent and famous classification algorithms. As we can see from these results, our method using four-fold cross validation obtains the highest classification accuracy, 69.43%, reported so far. There-fore, we can draw the conclusion that the combination of the
Memetic algorithm and Fuzzy Logic would be very effective in detection of cancer tumors. In computer simulations we have presented two versions of the proposed new memetic-based fuzzy rule discovery system. The first version, which is called
CD-MFS-1, has only one reasoning step. The second version, which is called CD-MFS-2, has two reasoning steps, as demon-strated in Fig. 4 . We have compared the performance of CD-MFS-1 and CD-MFS-2 approaches with our earlier genetic-based fuzzy rule learning approach called CD-GFS ( Zibakhsh and Saniee, 2011 ) according to the mentioned data set.

Although there is no accurate definition for interpretability of fuzzy classification systems, the number of rules and mean length of rules are often used as two main factors of interpretability.
Table 3 shows the obtained results with CD-MFS for the men-tioned criteria. It should be noted that length of a rule such as R includes the number of non-do not care valued terms of R h
According to Table 3 we can observe that the high classification rate of CD-MFS has been achieved by means of only 23 fuzzy if X  X hen rules with a mean length of 14.7, which denotes that the final discovered classification system is accurate and also interpretable.
 Regarding the obtained results, we can conclude that the
CD-MFS learning algorithm is able to find an accurate rule based classifier using a small number of fuzzy rules, which assures the interpretability of the final classifier. This classifier is easier to understand and interpret by clinical experts. Therefore, the
CD-MFS classification system can improve classification accuracy and provide a short and compact rule set. 6. Conclusion
In this paper we provided a CD-MFS algorithm based on the memetic evolutionary idea that can classify gene expression data with an accurate set of fuzzy if X  X hen rules. It begins with low quality fuzzy if X  X hen rules, and results in a high quality rule set.
This algorithm has acceptable accuracy and classifies cancerous and benign tumors efficiently. Our proposed algorithm was evaluated on the 14_Tumors cancer dataset and compared with other classification systems. Results indicate that our presented
CD-MFS outperforms several well-known and recent classification algorithms. Moreover, the paper suggested Multi-View fitness functions in memetic algorithms and also a new reasoning method. The introduced Multi-View fitness function considered both global and local fuzzy rule strengths in classifying cancerous tumors from gene expression data. We also focused on producing meaningful fuzzy rules from the memetic algorithm, which are more interpretable for a medical expert. On the other hand, the algorithm produces fuzzy if X  X hen rules which are capable of distinguishing each kind of tumor clearly.
 Acknowledgment
This work was supported by Iran National Science Foundation (INSF).
 References
