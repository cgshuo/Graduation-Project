 1. Introduction
As the number of applications in information technologies increases, efficient retrieval of multidimensional data for these applications becomes crucial in order to make the best use of the available data. Classical approaches for accessing multidimensional data are often inapplicable or insufficient, due to the complexity and high dimensionality of the data. Naive applications of classical approaches usually incur an unacceptable penalty in retrieval time or search accuracy.
Improvements in the imaging technologies and the common availability of imaging devices have generated a deluge of multimedia data in scientific, medical, and social applications. The rapid growth of multimedia data has generated the need for new methods that provide efficient content-based retrieval (CBR). In response to this need, a number of content-based retrieval systems have been developed, some of which are listed in Fig. 1 . As demonstrated in the figure, retrieval systems can be divided broadly into two categories: feature-based and annotation-based systems. In the former category, low-level features (and/or objects) extracted from multimedia data are used [1,2] to compare and retrieve data; whereas in the latter category, text based semantic information is used to characterize the multimedia data and form the basis for the retrieval process. Annotation-based image retrieval systems have traditionally relied on manual annotation of images and retrieval by search of keywords within the annotation database. Several image segmentation methods have been proposed to perform automated segmentation and association of images to a pre-defined vocabulary [3,4]. The feature-based retrieval systems, which are the focus of this study, allow identification of similar images using low-level image features [5  X  10]. While most of these systems use tree-based or cluster-based data access structures, other access methods have also been applied, such as hashing and dimension reduction techniques.

Besides using low-level features in CBR systems, image registration techniques are used in the areas of image processing and pattern recognition to estimate the degree to which two given patterns are correlated in remote sensing, medical imaging, computer vision etc. The choice of an image similarity measure depends on the nature of the images to be registered in these techniques. Common examples of image similarity measures are Cross-Correlation, Mutual Information, Mean-square difference and Ratio Image Uniformity. Mutual Information (MI) and Cross Correlation (CC) have emerged in recent years as an effective similarity measure for comparing images [11,12] .

In addition to efforts to provide efficient and accurate multimedia data retrieval, there are also several high-level systems that attempt to address the problem in a different manner, via storage and management of multimedia data as they are perceived by humans [13  X  15]. These high-level systems define a data model to represent the multimedia objects and the temporal relations among them. They also define appropriate query languages to facilitate access to multidimensional data.

In each of these proposed CBR systems, retrieval performance becomes a critical factor that determines the scaling of their application to real-life databases. In order to meet the performance requirements of information retrieval in complex data domains, several approaches [16] and multidimensional access methods have been proposed [17,18] .

Spatial Access Methods (SAM) [19,20] index the multidimensional space defined by data feature vectors. These index structures are based on a tree data structure with the data nodes in the leaves of the tree and a cluster hierarchy built on top [21,22] . SAMs partition either the multidimensional data to be indexed or its underlying data space [17]. The main drawback of spatial-access methods is the drastic decrease in the retrieval performance as the dimensionality of the feature vectors of data objects increases, a phenomenon known as the curse of dimensionality [18]. The SAMs are generally outperformed by simple sequential scan when the number of data dimensions exceeds a certain threshold [17,21] .

Point Access Methods (PAM) try to index objects represented as points in a multidimensional space. In PAMs, the points in the database are organized in a number of buckets. These buckets correspond to some subspace of the universe and are accessed by either hashing or tree-based structures [17,18] . The Grid File [23] is the most commonly known and used index structure for hash-based PAM. On the other hand, there are several tree-based PAMs such as k-d-B Tree [24,25] , LSD-Tree [26], and hB-Tree [27]. Unlike SAMs, in tree-based PAMs, the regions are at the same level of the tree and they are mutually disjoint.
In order to alleviate the curse of dimensionality and remove redundant features from the data, dimension reduction techniques can be used to pre-process the data and map it to a low-dimensional space. One of the efficient low-dimensional index structures such as B+-Tree can then be used for indexing in this low dimensional space. Such dimension reduction approaches include KPYR [28], Pyramid-Technique [29], iDistance [30], EHD-Tree [31], Hilbert space-filling curve map [32], feature selection through association rules [33], and Pyramid Matching Technique [9]. The main drawback of dimension reduction approaches is the decrease in query accuracy since the low dimensional representations do not accurately represent the multimedia data. The specific requirements determine the desirable accuracy vs. speed trade-off, usually parameterized by the number of dimensions in the target space.

Data approximation structures such as VA-File [34], OVA-File [35], VQ-Index [36], BID/BID+ [37], Hierarchical Bitmap Index [38], and BitMatrix [39,40] construct a vector of approximations that is significantly smaller than the original data. Using these approximations, some of the indexed objects are pruned to reduce the number of distance computations that need to be performed during similarity queries. This type of access structures provides approximate k-nearest neighbor (k-NN) search that again presents a tradeoff between the retrieval accuracy and query response time.

Unlike spatial, point, and approximation access methods that operate in a feature-vector space, Metric Access Methods (MAMs), such as M-Tree [41], SlimTree [42], MRKD-tree [43], Hierarchical Cellular Tree [44], and CM-Tree [45] operate using the relative distances among objects. Whereas other methods partition the space , MAMs partition the data . As such, MAMs are effective in handling high-dimensional or non-vectoral data, provided that a function satisfying the metric constraints can be defined to compare data objects [46]. Similar to SAMs, MAMs utilize a tree data structure to organize the data into clusters. The the retrieval performance as in SAMs.

In this study, we focus on content-based image similarity measurement and retrieval process evaluating three different multidimensional access methods; BitMatrix, which is a cluster-based structure [39], SlimTree, which is an index structure on metric spaces [42], and a Landmark Multidimensional Scaling (LMDS) method [47] which uses the FastMap method [48] for the distance space by using an appropriate clustering method; SlimTree and LMDS are based on the distance space, partitioning the data objects themselves based on the inter-image distance measurements. In order to represent similarity between images, several feature-based distance measures are developed in this study, using the MPEG-7 visual descriptors, and these are compared with image-registration based distance measures for assessing image similarity. Four different image-registration based methods are evaluated for their performance in the image retrieval problem; Spatial Color Variance (SCV), Cross Correlation (CC), Mutual Information (MI), and Scale Invariant Feature Transform (SIFT). The performance comparison of these methods is accomplished by using query times and retrieval accuracy as the main criteria. The overall indexing and retrieval framework developed in this work is summarized in Fig. 2 .

Although the access methods described above have been applied to the image retrieval problem, there has been no controlled comparison of their success. The subjectivity of image similarity, the lack of widely accepted and readily available annotated benchmark data sets, and the difficulty of optimizing the set of parameters each method introduces have been the main factors in making an objective comparison of these methods a non-trivial pursuit. To the best of our knowledge, the present study is the first to perform a detailed comparative analysis of the access methods and image comparison functions in an image retrieval task.
Our experiments show that using feature based comparison methods has better accuracy than using image-registration methods. Moreover, feature based approach is faster for all access structure-similarity method pairs except for LMDS FastMap with similarity method using SCV.

Among the access methods that use feature-based comparison, SlimTree has the best accuracy values while LMDS FastMap comes next. As the embedded space dimensionality increases in LMDS FastMap , its accuracy approaches that of SlimTree. Furthermore, LMDS FastMap is the fastest method in accessing and retrieving similar objects by their features. SCV has the best accuracy values amongst image-registration based methods and for all access methods. Similar to feature-based approach, SlimTree, again, has the best accuracy values but also is the slowest one. LMDS FastMap performs better as the embedded space dimension increases in terms of accuracy, while it requires much more time in order to find relevant objects. However, even with this increase in search time, LMDS FastMap is the fastest access method for all embedded space dimensions. For the image-registration based similarity techniques, SCV has the best search time when it is used in LMDS FastMap structure while MI is the fastest method for BitMatrix and SlimTree.

In Section 2 below, we give a brief overview of our methodology and describe the low-level image descriptors utilized in this study. In Section 3 , we describe the multidimensional access methods: BitMatrix, SlimTree, and LMDS. While a comprehensive comparison of the vast number of available access methods is beyond the scope of this study, we have chosen these methods as representative of different approaches. BitMatrix is an efficient space-partitioning method, SlimTreeis a metric-access method that partitions the data objects, and LMDS is a multidimensional scaling method which we use in conjunction with the X-tree spatial access method. In Section 4 , we describe different ways of assessing the similarity of two images. In feature-based similarity measurement, the low-level image feature descriptors are combined using unweighted or weighted Euclidean functions, or an ordered weighted average distance function. For comparison, we have compared these with the Earth Mover's Distance (EMD), which is another function commonly employed in content-based image retrieval [50]. In image-based similarity measurement, the images are compared directly using CC, MI, SCV or SIFT methods. In Section 5 , we present the data retrieval performance of all of the combinations of the different components investigated in this study. The performance is measured by the running time, page access count and accuracy of search results for a query image. In Section 6 , we discuss the limitations of our approach and of the image retrieval approaches in general, and conclude with several guidelines and recommendations for domain-specific implementations. 2. Overview of methods
The accuracy of similarity-based image retrieval is especially sensitive to the selection of the image comparison function that evaluates the level of similarity between two images. In this work, we used both feature based and image-registration based comparison functions. In the former technique, four low-level MPEG-7 [51] feature descriptors are extracted and used: two color descriptors, Dominant Color (DC) and Color Layout (CL); one texture descriptor, Edge Histogram (EH); and one shape descriptor, are determined by either a constant weighting (CW) of each feature or by dynamically adapting the weights using the Ordered
Weighting Averaging (OWA) method [52]. Moreover, Earth Mover's Distance [50] is also used as another similarity measure in order to compare with Euclidean Distance. In the latter similarity measurement technique, the whole image is used to compute the degree of similarity of the query image with those from our database. For this purpose, we have used three different image-registration based similarity measurement methods, Cross Correlation (CC) [11], Mutual Information (MI) [11], Spatial
Color Variance (SCV) [53],and Scale Invariant Feature Transform (SIFT). CC and MI are commonly used as the preferred image based matching techniques, especially in image registration applications in biological and Geographic Information System (GIS) domains [11]. CC and MI use a feature matching process without segmenting salient objects in the image [11]. SCV is a histogram based comparison algorithm for colored images, and uses spatial and color information together. SIFT features have successfully been used for the object recognition, robotic mapping, and 3D modeling. The effect of these similarity measurement techniques on the retrieval process is analyzed in terms of response time and accuracy for the access methods studied in this work.
The performance of the multidimensional access structures is evaluated using three different image data sets. Corel data set [54] which has been used in a number of studies to demonstrate the performance of CBR systems and contains different categories of images with 100 images in each category. This database contains ten different categories; example images from each category are shown in Fig. 3 . ImageNet data set [55] has 4000 images and contains different categories such as car, basketball, football, tennis, bird, furniture, food and random images. The video image data set [56] has 3142 images and is extracted from news videos and contains miscellaneous images including news, sport, accident etc. The retrieval accuracy is measured in reference to the image classifications defined in the data set. A Sequential Scan method that compares the query with every single database object is also included in the comparison to provide a base line for time and accuracy results. Sections 3 and 4 below provide an overview of the multidimensional access methods and the similarity measurement techniques proposed in this study and Section 5 presents the experimental results. 3. Multidimensional access methods 3.1. BitMatrix
BitMatrix [39] is an access structure proposed for multimedia data retrieval that uses a data approximation approach in the range that it belongs to in the related feature dimension, generating a bitmap signature for each multimedia object [39]. The size of the BitMatrix access structure grows linearly with the number of indexed objects and with the dimensionality. Furthermore, BitMatrix is a dynamic access structure supporting insertions, deletions, and updates after it is built. In order to insert an object into BitMatrix, the bitmap signature of the object to be indexed is computed by the clustering algorithm. The resulting bitmap signature of the object is then added to the end of BitMatrix as a new line. In order to delete an object from BitMatrix, the bitmap signature of the object to be deleted is located on BitMatrix using the mapping between the image id and the index in BitMatrix that was built during construction. The row that contains the bitmap signature is then removed from the delete operation. The row that contains the bitmap signature is then updated with the new bitmap signature of the object on the BitMatrix.

BitMatrix supports two main types of queries: k-NN (k-Nearest Neighbor) query and range query. Since an exact match query bitmap signature of Q using a clustering algorithm. The bitmap signatures on BitMatrix are iterated performing bitwise AND with the query object's bitmap signature to find possible candidates. In the next phase, feature vectors of these candidate objects are accessed. For each candidate object, the exact distance to the query object is computed using a similarity method. Finally, have distances in the given range are returned as the results.

For feature-based comparison, we have used k-means clustering algorithm to index the data objects along each of the f for the feature-based similarity measurement approach the images are clustered into predefined number of clusters along their given in Fig. 3 . The images fall into 8 CL, 2 EH, 6 DC and 4 RS ranges.

Given a partitioning scheme, such as k-means clustering, an object's bitmap signature is defined as a bit string of length  X  i =1 the BitMatrix of the ten sample images resulting from the clustering.

On the other hand, for image-registration based comparison methods we consider only the distances among images, but not their feature vector representations. Thus the clustering algorithm used in BitMatrix construction and querying phase should be a distance-based algorithm. For this purpose, we have developed a simple and fast distance-based clustering method. In this algorithm, first an object is chosen randomly and another object having the maximum distance to the first object is found. These two objects form the center of two clusters. In the next step, the object that has the maximum distances to these centers is
In this study, the number of clusters has been chosen such that the query retrieval accuracy is optimized. 3.2. SlimTree
SlimTree is a balanced and dynamic paged structure that can be used to index multimedia data efficiently in a metric space [42]. SlimTree has two types of nodes as depicted in Fig. 5 , the leaf nodes that hold the actual data objects, and internal index nodes that hold routing information summarizing the distances of the objects contained under each branch. The multimedia data is presented by means of complex features and similarity between any two objects is defined by a distance function. The distance function is generally a computationally intensive operation and the performance of SlimTree is generally measured in terms of the number of distance calculations incurred in retrieving a given number of similar objects.

SlimTree is proposed as an improvement over the M-Tree [41] dynamic metric access method. It is well known that an increase in overlaps between tree nodes directly impacts query performance. The degree of overlap influences the number of alternative paths and nodes that need to be examined to find the relevant objects, and therefore the number of distance calculations and the query execution time. Thus, the main aim of SlimTree is to organize the objects in a hierarchical structure using a distance function such that the overlap between the minimum bounding regions covering objects in different sub-trees is minimized. The efficient node splitting algorithm of SlimTree is based on minimal spanning trees algorithm, and allows for higher storage utilization and smaller overlaps in the tree. The details of the SlimTree index structure and the algorithms for its construction are described in [42].

In this work, SlimTree is constructed for both similarity measurement approaches similarly since this structure requires only distances between images. Thus, the only difference in implementation for both approaches is the appropriate distance function. 3.3. Multidimensional scaling (MDS)
Multidimensional scaling (MDS) [57] is an approach to solve the metric-preserving dimensionality reduction problem and it maps a collection of N objects in high-dimensional space onto points in a low-dimensional space by preserving the similarity (or dissimilarity) measures of these objects. The classical metric MDS approach tries to match these (dis)similarity measures (or distances) of each pair of points in this low-dimensional space and in the original high-dimensional space, as closely as possible. On the other hand, in non-metric MDS approach, the goal is to find or establish a relative ordering of the input (dis)similarities.
The classical MDS algorithm has a computational complexity of O ( d  X  N 2 ), where N is the number of data points and d  X  is the dimensionality of the embedding space. In this method, an NbyN matrix of similarity (derived from the input distance/similarity matrix D ) is used to embed N objects. Although classical MDS gives an embedding that optimally minimizes a given error measure, it is impractical for large databases due to its time requirements. A number of sub-optimal but efficient algorithms for data reduction have been proposed to handle large high-dimensional data sets.

The Landmark MDS (LMDS) algorithm [47] recognizes that if an embedding is already available, new data points can be mapped to the same target space at a fraction of the cost of rebuilding the entire embedding. LMDS first identifies a set of n landmark data objects ( n bb N ) and applies classical MDS to the nbyn distance matrix containing their pairwise distances. Each of the remaining data points is then mapped onto the same embedding space using a distance-based triangulation procedure that landmark objects affect the accuracy of LMDS. Two strategies have been proposed for landmark selection [58]:  X 
Random choice.  X 
MaxMin (greedy optimization): Landmark objects are chosen one at a time, and each new landmark maximizes, over all unused data points, the minimum distance to any of the existing landmarks. The first point is chosen arbitrarily.
 time where C is the cost for accessing or computing distance between two objects.

Another MDS method, FastMap [48], constructs a d  X  -dimensional embedding, one dimension at a time. It iteratively selects the two farthest points in the data to be the projection axis, and the distances of all points to these two points are used to find the embedding coordinates along that axis. As pointed out in [48], FastMap essentially is an iterated form of LMDS in the simplest case of 2 landmarks. However, using only two points to determine each projection axis can make this algorithm unstable.
In [49], LMDS and FastMap are used together to achieve more robust and accurate embedding. Specifically, an initial FastMap embedding is performed to identify the landmark points for use with the LMDS algorithm ( LMDS FastMap ). It is noted that although FastMap has a good landmark selection strategy, it can give numerically unstable results, and does not guarantee improvement of the accuracy with increasing target dimensionality. Using the entire set of landmarks produced by FastMap in LMDS ensures that error propagation through iterative embedding is avoided and that the coordinates are optimized for the entire set of landmarks. In the present study, we use this combined dimension reduction strategy, and use LMDS and LMDS FastMap interchangeably to denote the method. 4. Similarity measurement techniques 4.1. Feature-based similarity measurement technique
In order to represent the images as a set of low-level features, we have used the MPEG-7 visual descriptors. MPEG-7 [51] was introduced as a standard for representing the audio-visual content. MPEG-7 focuses on the description of multimedia content and does not standardize the way these descriptions are obtained or how to use them, but only standardizes the descriptions and the way of structuring them. In [59], MPEG-7 visual descriptors are analyzed from the statistical point of view, using mean and variance of the descriptor elements, and cluster and factor analysis. It is shown that the best descriptor combination is Color
Layout, Dominant Color, Edge Histogram, and Texture Browsing. The other descriptors are highly dependent on these  X  best  X  descriptors.
 In this work, we use two color descriptors: Dominant Color (DC) and Color Layout (CL); one texture descriptor: Edge
Histogram (EH); and one shape descriptor: Region Shape (RS). DC and CL descriptors are used together in the system as the color descriptors since these descriptors complement each other in describing the color features of images. EH is chosen as the texture descriptor, since according to MPEG-7 standard, it is the recommended texture descriptor for non-homogeneous regions and natural images [60]. RS is used as the shape descriptor since it can describe complex objects consisting of multiple disconnected here, which includes both real images such as the nature category, and artificial images such as the dinosaur category.
These visual descriptors for the data sets are extracted using the MPEG-7 eXperimentation Model (XM) [61,62] Software. XM software is the simulation platform for the MPEG-7 Descriptors and comes with two sets of applications: the server (extraction) applications and the client (search, filtering and/or transcoding) applications. We have only used the server applications for low-level feature extraction. After the feature extraction process, BitMatrix and SlimTree index structure implementations in [63] and the LMDS FastMap implementation in [49] were adapted to allow comparison of the images via feature-based or whole image-based distance functions. BitMatrix was built by clustering CL, DC, EH, and RS feature dimensions into a pre-defined number of ranges. For EH and DC, this number of ranges is eight and for CL and RS, this number is set to four. These are manually optimized numbers and are chosen by performing accuracy tests.

Similarity measurement for the visual descriptors was carried out using the Euclidean Distance measure, which is a metric distance function. The attributes of the MPEG-7 descriptors are briefly explained below. More detailed information about MPEG-7 descriptors can be found in [51].

The Color Layout distance (  X  CL ) of two images a and b is defined as: chrominance in YCbCr color space.

The EH descriptor distance function is defined as: where n is 80 and Bincounts represents the number of types of edges (i.e. vertical, horizontal, 45  X  diagonal, 135  X  diagonal, and isotropic) for 16 sub-images of the image.

The RS descriptor distance function is defined as: where n is 35 and MagOfArt is the array of magnitudes of the shape coefficients.

The distance function for DC is a fuzzy distance function which is introduced in [64] and differs from the distance computation predefined threshold value, the color distance is evaluated in the specified color space, which is RGB for our system, using the following function: the threshold value, then color similarity is assumed to be 1.0. In the second step, the minimum percentage of the related dominant colors of two images is normalized and multiplied by the color similarity to find the final DC similarity of the two images.

Each of the descriptor functions described above is normalized such that any two images from the database gives a descriptor distance value between 0.0 and 1.0. The vector of descriptor distance values between two images is denoted as: 4.2. Aggregation of descriptor functions
The most common way of combining multiple distance functions is to take their arithmetic average. This restricted, equally weighted merging does not take into account the fact that some of the features may be more relevant for discriminating among the objects than others. In order to recognize the differing utility of the feature descriptors, we use a Constant Weighting (CW) scheme to combine the descriptor distance functions described above. The CW distance between two images is denoted as: where the weight vector is: such that w i  X  [0,1] and  X  i =1 4 w i =1. The weight vector W CW determines the contribution of each of the descriptor distance functions and has been determined by Nelder  X  Mead simplex optimization method [65].

In contrast to applying the same constant weights for all image pairs, it may be possible to determine the weights dynamically for the image pair being compared. Specifically, it may be desirable for a retrieval task to highlight the feature that two images share the most in their comparison. The Ordered Weighted Average (OWA) method [52] allows dynamic weighting of the features by ordering the descriptor distance values. Let W OWA =[ w 1 w 2 w 3 w 4 ] be a pre-determined weighting vector such that w ascending order, such that the vector I defines the mapping from  X  to  X   X  :  X   X   X   X  I 1  X  I 2  X  I 3  X  I 4 and  X  I 1  X   X  I 2  X   X  ordered weighted average distance between two images is then: Notice that the descriptor distance with the smallest value is associated with the largest element in the OWA weight vector. Note also that, since the descriptor distances have been separately normalized to fall in the range from 0 (maximum similarity) to 1.0 (maximum dissimilarity), and that the length of the W OWA vector is 1.0, the aggregated OWA distance  X  OWA is also within [0,1]. To illustrate the calculation of  X  CW and  X  OWA , consider the following descriptor distances for comparing two images: and let the CW and OWA weights be:
The aggregated distances are then calculated as:
Earth Mover's Distance(EMD) function is also used in order to compare with Euclidean Distance measure. The EMD measures minimum cost required to transform one histogram or signature into another. This measure can be applied to distributions of features as long as space of these features is equipped with some similarity measure (e.g., ground distance). We have used L1 distance as ground distance for this work ( EMD  X  L 1 ), since it makes the EMD be metric. The formal definition of the EMD can be found in [50]. We have used low level MPEG-7 features as the weights of the EMD signatures and their index is used as feature representatives. 4.3. Image-based similarity measurement techniques
In feature-based image comparison, each image is pre-processed and represented as a feature vector; the distance functions are then applied to these feature vectors and the original image data is no longer used in comparison. On the other hand, the whole image based comparison, also known as image registration , uses the image data directly to calculate the similarity of two images. In this study, we investigate two popular area-based image registration methods: Cross Correlation and Mutual
Information. These methods, sometimes called correlation-like methods or template matching methods [66], merge the feature detection step with the image matching step without detecting salient objects.

We have also included Spatial Color Variance method, a simple color histogram based image comparison method, to form a basis for these image registration methods. Spatial Color Variance is a simple and relatively fast matching method for colored images. in the images. A brief overview of each of the image registration methods is given in the following sub-sections. 4.3.1. Cross Correlation
Cross Correlation (CC) is a standard statistical technique and is mostly used in the image registration domain in order to estimate the degree to which two images are correlated [11]. Given two images represented as matrices A and B , the normalized
CC can be computed as: where A  X  and B  X  are the mean values of A and B , respectively. 4.3.2. Mutual Information
Mutual Information (MI) [11] is a measure of how well one image explains the other in a statistical sense. Mutual Information is commonly used in multimodal image registration. However, since we do not need to register the images, we use this method only for evaluating the degree of similarity between two images. Mutual Information of two images A and B is calculated as: amount of information contained in the two images combined and can be calculated using the joint histogram of the two images. 4.3.3. Spatial Color Variance
Another image-to-image comparison method applied in this work is a color signature based similarity measurement, the image is divided into 5 X 5 regions and is represented as a 25 X 3 feature vector ( Fig. 6 ). Spatial Color Variance (SCV) of two images is then calculated as the Euclidean Distance between their color average vectors. SCV essentially combines color information with spatial information.

The BitMatrix clustering process uses only one dimension since we deal with the whole image. Therefore, we can expect a slight decrease in retrieval efficiency for this access structure since SlimTree and LMDS FastMap require distances only. 4.3.4. Scale Invariant Feature Transform
Scale Invariant Feature Transform (SIFT) have successfully been used for object recognition, owing to their ability to capture distinctive keypoints that are invariant to location, scale and rotation, and that are robust to affine transformations [67,68] . However, applications of SIFT have generally been in recognition of transformations of the same object, which is different than the image retrieval task surveyed in this method. Thus, we have adopted a matching process of SIFT keypoints in order to compare images by using SIFT descriptors in a simple way by using L 2 distance function. 5. Experiments
The performance of the aforementioned access methods and similarity measurement techniques is evaluated on the images from three different data sets; Corel Database [54], News Video image set originally taken from [56] and ImageNet data set [55]. food (See Fig. 3 ). Each category contains 100 images. ImageNet has 4000 images forming different categories images such as basketball images, cars, birds, furniture, food and miscellaneous images each having various number of images. Images from news video data are extracted and used as third data set which has 3142 images and contains categories including news, sport etc. Each curves, averaged over all query objects. Moreover, F-Measure is computed and used as another metric for retrieval performance.
The retrieval efficiency is evaluated using the query times and also page access count for k-Nearest Neighbor (k-NN) queries, with varying k values.

SlimTree access structure is implemented using the XXL API [69]. BitMatrix structure is implemented using Weka [70] and Colt access structure and perform queries on the BitMatrix.

The LMDS FastMap is adopted from [49] to use feature-based and image-based similarity measures for the embedding. The embedded vectors are indexed using the X-Tree spatial access method [72].
 For completeness, we perform a Sequential Scan of the entire database to provide a baseline for accuracy and time performance.
The performance of the Euclidean Distance measures is compared with that of the Earth Mover's Distance ( EMD  X  L 1 ), whose implementation is adopted from [73] to deal with MPEG-7 descriptors. In Sequential Scan, a query is compared with every single image in the database and the database objects are sorted by the similarity measure under consideration.
 5.1. Comparison of feature-based similarity methods
The weights of CW and OWA feature-based similarity measures have been optimized using the Nelder  X  Mead simplex method [65], with the objective of maximizing the area under the precision  X  recall (P  X  R) curve. The optimized W CW weights are: for Corel data set: w CL =0.455, w EH =0.511, w RS =0.0215, w DC =0.0123 for ImageNet data set: w CL =0.448, w EH =0.513, w RS =0.022, w DC =0.015 for news video data set: w CL =0.433, w EH =0.528, w RS =0.018, w DC =0.012
These values highlight the contributions of the CL and EH features and provide only marginal contributions to the RS and DC features. We have done some experiments regarding this point. For example, if we ignore RS and DC features, then the area under PR is 0.426. But if we ignore RS and DC features, this value becomes 0.423. On the other hand, for LMDS where space dimension is ten (10), the difference is somewhat larger, 0.383 when four features are used and 0.369 when only two features are used.
For OWA, the following optimized weights were obtained for all data sets: w 1 =0.527, w 2 =0.368, w 3 =0.054, w 4 =0.050
The precision  X  recall results for all multidimensional access methods and for all data sets for 10-NN query are shown in Fig. 7 and a selection of these results for Corel data set are depicted in Fig. 8 . The optimized constant weight measure is found to outperform the OWA measure. Among the multidimensional access methods, SlimTree with constant weights performs the best in terms of retrieval accuracy. Note that, since the distance functions used to compare images are metric, the accuracy of SlimTree is guaranteed to be the same as that of the Sequential Scan. On the other hand, BitMatrix and LMDS are approximating the distance function and may give better or worse accuracy than Sequential Scan. As embedded space dimensionality is increased, the accuracy of LMDS FastMap approaches that of the SlimTree. On the other hand, BitMatrix has worse accuracy than Sequential
Scan, because of the approximate representation of the objects resulting from the initial clustering step. Fig. 8 also shows the performance result for EMD  X  L 1 . Euclidean Distance measure has better PR values than EMD's since whole low-level feature values are used as single cluster in the signatures in a basic way.

Fig. 9 shows the query times for varying values of k in nearest neighbor queries for each of the methods for Corel data set. For retrieves results significantly faster than both BitMatrix and SlimTree, owing to the efficiency of X-tree Spatial Access Method. due mostly to the time spent during the clustering process in each query evaluation phase. The search time values for SlimTree are requiring rather frequent disk page accesses.

Table 1 gives a closer look into the LMDS FastMap search time test results for Corel data set. Within the range of dimensions sampled, the search time for k-NN queries increases linearly as the dimensionality of the embedded space increases. Even when the embedded space dimensionality is relatively high (d=100), X-tree indexing over LMDS FastMap embedding is still faster than any other access structure. There is no significant difference in retrieval time for LMDS FastMap using constant weights or OWA. 5.2. Image-based similarity
The aim of image-based similarity methods is to perform comparisons of images themselves, directly. CC and MI techniques are mainly used in the image registration domain. SCV is a simpler, less commonly used method and works with pre-compiled color averages of the images. SIFT is mainly used in object recognition. Similar to the feature-based approaches, for each indexing method, we have evaluated these four methods in terms of their precision and recall performance in similarity queries over the databases.

The precision  X  recall curves for Sequential Scan is provided in Fig. 10 . Surprisingly, SCV gives significantly better precision recall results compared to the other two methods for all data sets. We attribute this to the fact that the images within the same category in the databases share similar spatial color distributions. This was also evident in the constant weighted feature-based retrieval, where the CL descriptor made an important contribution to the similarity measure. Furthermore, both the MI and the CC methods were applied on gray-scale images, making them unable to utilize the discriminative power of the color information. MI method generally performs better than CC according to [12]. Moreover, using SIFT descriptors has better results than CC method.
The area under the precision recall curves for the indexing methods for Corel data set is given in Table 2 . The results for other data sets are shown in Fig. 15 . Application of the indexing methods follows the same trend as the feature-based image comparison case. SlimTree has the same accuracy as Sequential Scan, as expected. BitMatrix has worse accuracy than SlimTree but better accuracy than LMDS FastMap for LMDS target dimensionality of less than 40. As the target embedding space dimensionality is increased, the accuracy of LMDS FastMap approaches that of the Sequential Scan.

The time requirements of the image-registration and indexing methods are depicted in Fig. 11 . Among three indexing methods, LMDS FastMap again has the best response time for whole image based comparison. BitMatrix is closer in speed to
LMDS FastMap than it was in the feature-based comparison. Since the image registration methods are computationally expensive operations, the SlimTree is the slowest, because of the distance computations it has to perform with the routing nodes in its index tree. LMDS FastMap performs distance computations only against the small set of landmark images it has selected during the index building phase. Increasing the number of objects to be retrieved does not therefore affect the number of image registration operations to be performed in LMDS FastMap . Since BitMatrix uses clustering process in both construction and query phases, this structure requires more time than LMDS FastMap . For every query phase, the cluster to which query belongs has to be found. After this step, the objects in the same cluster are accessed and similarity between these objects and the query object is calculated.
For the three image-based similarity measurement techniques, using MI in BitMatrix and SlimTree outperforms other techniques for these structures. On the other hand, for LMDS FastMap , SCV gives the best results among these techniques for both space dimension 5 and 10. Moreover, using CC causes an increase in the response time in comparison with MI and SIFT, even though no translation or rotation search is performed in the CC implementation.
Closer examination of LMDS FastMap speed test results shows that MI, SIFT and CC are slow for all dimensions as shown in Fig. 12 while SCV is significantly faster than these methods. Among all the comparison methods, the unweighted Euclidean Distance function and SCV image comparison method provide the fastest retrieval results (see Fig. 13 ). An increase in the embedded space dimensionality slightly increases the retrieval times for these methods while at the same time improving their retrieval accuracy.
For all other methods, increasing the embedding dimensionality from five to ten corresponds roughly to a doubling of the retrieval times. In general, the query retrieval time is linearly dependent on the embedding dimensionality for the LMDS FastMap method. OWA and CW feature-based distance functions provide slightly faster retrieval than MI, SIFT and CC image-based comparison methods. Moreover number of page access for SlimTree and LMDS is compared in Fig. 14 for all data sets and comparison methods. These figures also confirm the speed results for all comparison methods.

Fig. 15 provides a summary of the retrieval accuracy of feature-based and image-registration based approaches for all the access methods examined here. A feature-based comparison paradigm provides significantly better accuracy than image-registration based methods for the data set used in this study. Moreover F-Measure results shown in Fig. 16 also confirm this conclusion. 6. Conclusion and future work
In this paper, we have investigated various approaches to the image retrieval problem. Three indexing methods that represent different data indexing paradigms were compared, namely cluster-based indexing, distance-based indexing, and multidimensional scaling methods. Several feature-based distance measures were developed using the MPEG-7 visual descriptors. We additionally investigated the use of image-registration based distance measures for assessing image similarity. We have performed an accuracy,
CPU time and page access count analysis using three different image databases, and using the image categories as the ground truth against which the accuracy of the retrieval methods can be measured.

Sequentially scanning the entire database gives the best accuracy, but is impractical for large databases. Among the data access structures that are proposed to speed-up the image retrieval, SlimTree metric indexing method provides the best accuracy. Since the distance functions we have utilized form metric spaces, SlimTree is guaranteed to give the same results as the Sequential Scan.
On the other hand, SlimTree required significantly more time than other methods to retrieve the images that are similar to the query image, as measured by the given distance function. Due to the intrinsic complexity of the data sets, SlimTree search procedure showed a lack of sufficient pruning and thus a large number of distance calculations were incurred.
The clustering-based BitMatrix method and the dimensionality reduction based LMDS FastMap method are both approximate indexing methods that attempt to trade off accuracy for speed. Both of these methods were slightly worse in accuracy than the Sequential Scan. For the LMDS FastMap method, it is possible to increase the dimensionality of the embedded space such that the accuracy approaches that of the Sequential Scan. The running times of BitMatrix were similar to those of SlimTree. On the other hand, the LMDS Fastmap method was an order of magnitude faster than both BitMatrix and SlimTree.

Using feature-based image comparison was both faster and more accurate in retrieving similar images than image-registration based comparison, except for LMDS FastMap method applied to SCV measure which was faster but less accurate than feature-based comparison.

Among the image-registration based comparison methods, Spatial Color Variance provided the best precision and recall worse than Spatial Color Variance and Mutual Information methods for the image matching process. Furthermore, we have only
SlimTree access structure; otherwise, we recommend the use of less restrictive distance-based multidimensional scaling methods in combination with a Spatial Access Method, such as the LMDS FastMap and X-Tree methods investigated here.

Considering the subjectivity of the image categories, it is often not possible to have a single image comparison function that can successfully discriminate between different image categories. In applications where the images are highly similar, such as those collected in the medical imaging domain, the image-registration based methods are likely to perform better. On the other hand, we
Cross Correlation method in retrieval may cause the retrieval of flowers just because of using insufficient data (using only color false-positive images (i.e. architecture images with the Mutual Information method in the second column of Table 3 and horse images the best PR values for both similarity methods. Moreover, PR values of the horse and flower categories approach those of dinosaur category whenfeaturebased comparisonmethod is used. For example, for theyellow flowerimage shownin Table 3 ,allthreemethods recommend the use of feature-based comparison with a weighted combination of appropriate image descriptors. If a set of annotated images is available, the weight vector for combining the descriptors can be optimized to discriminate similar images from others.
To conclude, we have shown that multi-dimensional scaling can reduce the retrieval problem to a spatial-indexing task, where queries can be performed orders of magnitude faster than distance or cluster based indexing methods. The accuracy of the embedded space is shown to be comparable to that of the retrieval performed in the original space. We also show that constant weighting scheme can perform better than OWA for all access methods using features for comparing images. Furthermore, the
Spatial Color Variance was found to perform better than other image-based comparison methods in both accuracy and query processing times. Except for Spatial Color Variance's time performance, feature-based approach provides an effective retrieval of images and outperforms the image-registration based similarity measurement methods in both accuracy and running time. Acknowledgment
This work is supported in part by a research grant from TUBITAK EEEAG with grant number 109E014. We thank the anonymous reviewers for their valuable suggestions to improve the manuscript.

References
