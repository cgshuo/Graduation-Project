 gration of real-world entities into Internet applications. That means that smart devices will actively participate in the Future Internet. In 1999, the term "Internet of Things" years, the IoT has become a buzz word. It comes with innumerable devices as poten-model to identify the main building blocks of the IoT. Following the work of [1], this service. In this IoT world, connected devices ( X  X emperature sensor X ) can interact with But how does this IoT with its main building blocks fit in the conventional, traditional business process environment, which focuses on human resources and services hitherto known in the form of activities as steps in a predefined process flow? tion with the IoT, if business process-related devices such as RFID, sensors and actua-tors could directly take over responsibility as process resources for individual process tasks. From the process perspective, IoT devi ces stand out that they can interact with their physical environment in similar ways as human users. Furthermore, they acquire the ability to communicate exposing non-standard software components through ser-the direct integration of intelligent devices on the one hand leads to a modification of will arise. ness processes. One important initial step of this predefined BPM lifecycle is the ac-auto-mated by the ERP system. The current industry standard BPMN 2.0 allows, be-sides the creation of a graphical process mode l, the generation of a machine-readable BPMN 2.0 compliant resolution and execution engine [3]. devices as a resource type of a business process is not directly represented in standard process models. This means: The IoT devices and their non-standard software This implicates that without the proposed solution, IoT devices cannot be considered duties can be assigned to them. With falling technology prices and the advancing IoT considering IoT devices in the process flow as resources both for documentation and automation purposes. It is therefore important to establish early a process metamodel that covers this new requirement. With this research contribution, future ERP systems such as human staff for the operational enterprise processes. 
This work investigates how the component  X  X oT device X  and its native services can be expressed as a resource in an IoT-aware process model. Thus, we present five main contributions:  X  source role from business process perspective.  X 
Second, we depict the IoT device and its underlying native software components as a combination of swim lane and process activity-centric resource model.  X  Third, we integrate a general semantic model that captures the requirements to later 
BPM phases of IoT devices and its native software components as parameters.  X  Fourth, we extend the graphical stencils and both the CMOF representation and the 
XML schema of the process metamodel of the notation BPMN 2.0. On the seman-tic side we integrate the work from [4] and [5].  X 
Last, we test the proposed resource model practically: Therefore, we implement a cussed in terms of an example process. Current ERP systems focus on modeling and executing planned business processes in an enterprise environment with a constant number of process resources such as human performers in a company. In contrast to that, the IoT comes with thousands of devices business processes and quickly react with adapted processes to a permanent changing environment. Business Process Management (BPM) is defined as  X  X  systematic ap-non-automated processes to reach certain goals X  [7]. One central part and the basis of Model. Today X  X  ERP systems provide a loosely-coupled approach based on the Service Oriented-Architecture (SOA) paradi gm and assuming that a business process is composed out of exchangeable process tasks. A process task corresponds to a unit of work implemented by a service [8]. In the IoT domain it is distinguished between actuators). In order to bring these new types of IoT devices as a potential resource in the envisioned BPM environment, we aim to provide an IoT-aware Business Process Process Notations. We focus on conservative modeling standards for complementing existing business processes by straightforw ard IoT integration in order to maximize a adoption of core web technologies on the Internet. In [10], BPMN 2.0 was evaluated commonly used process notations EPC, UML activity diagram and WS-BPEL. Such, BPMN will serve as basis for the mapping work presented in this paper. The process clearly defined interface between the process design and deployment phase. It has to be decided which process constructs are used to represent and handle typical and all BPMN 2.0. 3.1 Overall Component Perspective between these components. To simplify, we first reduce and subsume, similar to [4], the IoT Domain Model of the IoT-Architecture 1 to its core components that are cen-major components:  X 
IoT service: Software components with well-defined and standardized interfaces, which enable access to other, heterogeneous components with native interfaces and expose their functionality as a unit of work to a business process.  X  of central interest for a user or an application, such as a business process.  X  sensing or actuating. It comes with communication capabilities to other IT systems and either belongs to a physical unit, or is directly integrated into it.  X 
Native service 3 : Software components with native interfaces hosted on IoT devices about entities or perform actions on entities in its physical environment. physical entity of the physical world can be associated with an IoT service. This con-actual source of information of the IoT services is the native software component that is accessed. An IoT service consequently ex poses a standard interface to the functio-nality of one or more native software components, which thereby become usable in a the model. The IoT device hosts native software components that contain executable code. Using its non-stand a provide information to th e information from the IoT s e Between an IoT device an d relationship  X  X ttached to X  i digital world through usin g be measured or changed by 
Continuing to integrate t the defined specification component to a knowledg e form, and expresses their applied to describe an exis t er, it is suitable to use the elements of the process m o actual allocation of proce s model the OWL definition s 3.2 Resource Perspect i This section includes map p the last section to the typ process modeling notation s process resources. For this notation, even though som e For the resource definition from the process perspective we reflect the following four main components:  X 
A physical entity is, following [16] and [17], a necessary part of the process model, neither be fully mapped on nor be executed correctly. Nevertheless, in contrast to typical process-participants, the physical entity has no process execution responsi-bility. Therefore, it is not a process resource and only indirectly participates in the process flow. Process participants who have no responsibility to execute any activi-ty or whose activities are simply unknown, and who don X  X  have any process flow, are considered as a kind of  X  X lack box X  or passive process participant.  X  (respective action, function) as it exists in many process notations 4 . An activity in automated software component with a standardized interface as the IoT service responsibility.  X  and acts similarly to a human user as a linking artifact between the process and the real world. Analogously to a human process resource, the IoT device as a technical the process model, an IoT device can be understood as a resource so that it contains in itself sub-resources -namely software components with native interfaces.  X 
Following the IoT domain model, a software component with a native interface cannot become part of a process without the help of an additional software compo-nent coming with well-defined and standardized interfaces that can expose it. It is not yet covered by existing process models, neither as a sub-task of the task nor as 
From a process model perspective, we understand a native service as a process re-source hosted on an IoT device that performs the actual deployment responsibility and according to Fig. 1 has the relatio n  X  X s exposed X  to the process task. As summarized by Fig. 2, t w fall in the perspective of b service. For both compon e description of model of [5] , The BPMN 2.0 notation b process model: one, on following we will apply bo t In this section, we propos e components as an extensio fied business process res o challenges. First, an IoT d e there-fore they are not me n central ERP system is oft e without including millions capability to directly overt a two types of process resou r its hosted native services b standard considers differen t standard comes with different representations: a graphic model and a machine-readable model consisting of a CMOF specification and an XSD specification. machine-readable model section. 4.1 General Overview process flow. In the background, it takes over the execution responsibility of the na-IoT device is not managed by a Process Execution Engine and has no direct interface can be defined, which can be understood and taken into account during the resolution of the process model, the actual service allo cation. The challenge is that we are deal-ing at the same time with a second process resource, namely the native software com-this distinction is made. 4.2 Graphical Model indicate the performer role or owner of activities. So like shown in Section 4.2 a lane is not a purely graphical element, but semantic element in its own. In order to explicit-graphical model is an IoT specific  X  X ensing Task X  exposing the actual native sensing the right an extended version of the associ ated description model is shown, which can implementation. 4.3 Machine-Readable Model by expanding the lane element of the BPMN 2.0 machine-readable model and introducing a new subclass. Additionally, we expand the resource role in order to map compliant as possible. Finally, we present a concept that can refer to external parame-ter description schemas and is used by the two new classes. 
The UML class diagram in Fig. 4 illustrates the CMOF representation with the IoT specific extensions. Accordingly, a process in [18] is defined as a subclass of a flow element container. The process is therefore a container for one or more sets of lanes, each of them serving again as a container for one or more lanes. A Lane as a parti-tion element may reference multiple FlowNodes such as Activities, Events, or Data activity level. Per activity an arbitrary number of resource roles may be defined. The and model associations. It defines the resour ce that performs an activity. For our pur-poses we define, as BPMN foresees, the specific NativeService Performer class in parallel to the existing HumanPerformer class. Through the corresponding introduction of a new resource role as a subclass IoTDevice, as the standard requires, we face three problems which we discuss in the following:  X 
Defining a new resource element results in the deletion of any assigned resources to other elements in the lane such as to the activities. That means the standard does domain on lane level as well as on activity level.  X 
BPMN supports internally known process resources, but no external parameter-based resource definitions that are based on ontologies. In other words, BPMN can the BPM environment. Descriptions for IoT elements are not bound to an XML based BPMN standard, but can include diverse description schemas which should be directly referenceable as well.  X 
The same problem follows with the non-parameter-based, prior allocation of a specific process resource on lane level, e.g. a specific temperature sensor. applying the conventional BPMN standard to them. The new element IoTDevice supports the definition of diverse parameters using the IoTParameterDef class. The component as envisioned by [21]. The schema of the parameters is not stored as part of the BPMN model, but referenced with extParameterRef pointing to individual device or native service 5 . The standard class Expression can capture the actual para-meter value belonging to IoTParameterDef , which the process resource shall fulfill. IoTAssignment defines the Expression that is used for the resource assignment, made already at the time of process modeling, if a dedicated available resource is known process model. Consequently, a process resource can be defined as a potential performer of an activity (native service), but without being known previously to the BPM environ-component. In the previous section we have discussed our approach of presenting the IoT domain components IoT device and native service as process resources in the business proposed approach, we discuss our realized implementation of extending a web-based modeling elements, what was not supported so far without our proposed extensions. 
We envision a dynamic pricing process in the retail domain showing how the IoT surement of the temperature sensor is used to estimate the quality of the good and the aware Business Process Modeling tool. The process includes two IoT devices: a tem-perature sensor offering its on IoT device sensing components through a standardized IoT service  X  X easure temperature X  and an ESL offering its on device actuating com-can now be defined declaratively at modeling time as an own lane subtype. For letting the business process be resolved and deployed automatically by the envisioned BPM environment, in which the actual available IoT devices change constantly, the process modeler can influence the dynamic resolving process by further specifying individual Store". Additionally, the native service of the temperature sensor shall provide a tem-perature accuracy of 0.1  X  C since the product orchid already reacts to smallest tem-chine-readable output of the modeling activity and serves as input for the deployment phase. The XML putput follows from the demonstrated CMOF extensions of Chapter 4, which were applied to the BPMN 2.0 XML schema specification in the tool. Below an excerpt of the XML code is shown containing the parameter assignment to the IoT device. &lt;process id="sid-55f5006d" isExecutable="true" name="Price process" processType="None"&gt; &lt;laneSet id="sid-93a79ca4"&gt; ... &lt;iotDevice id="sid-4CC740F3" name="Temperature Sensor"&gt; &lt;flowNodeRef&gt;sid-C4F56174&lt;/flowNodeRef&gt; &lt;flowNodeRef&gt;sid-6B68B70C&lt;/flowNodeRef&gt; ... &lt;iotParameterDef name="manufacturer" extParameter Ref="dev:controls/dev_manu_on "&gt; &lt;expression&gt;Future Store&lt;/expression&gt; &lt;/iotParameterDef&gt; ... 
We have simplified shown in this section, how IoT devices and its native services can be modeled and expressed in a dynamic pricing process using a web-based Busi-ness Process Modeling Tool. This implements our extensions to the notation of BPMN as one initial part of a future BPM-based ERP-System, that shall include the vision of the IoT in order to enable thousands of smart IoT devices to take part as a new resource type in a business process. dized interface that implements an atomic process task in a process model. In addition [22], posed by a complete integration of IoT devices to the Web, which central ideas which most of today's BPM solutions are based on, but a resource-oriented architec-ture is assumed, where an information unit is seen as a resource of evolutionary cycle. perspective. view of sensor and actuator-based business processes of the Future Internet. We point out differences and similarities between the approaches. Existing approaches are gen-mated code generation for sensor networks [26], but not on the mapping of the central RESTful business processes. The focus lies on the restful interaction as a special mes-namically bound to the process model, be it based on SOAP or REST principles. We part of the service support of the execution tool implementation. Similar to [24], [25] employs an information-centric approach to model business processes. The  X  X e-sources X  of the REST Architectures are not process activity instances but information focuses on the integration of existing service-based technologies as used in traditional expressed in BPMN can be transformed to efficient event-based code running on re-appropriate resolution technique can be used and the typical IoT situation that several solved. [20] introduces possible extensions to BPMN in order to express the mobility mobile participant out of the organization X  X  pool and to use a separate pool or lane for the mobile device. Our solution combines the approach of [20] with the style rules of [19] and considers multiple devices in one common business process pool as a lane. The lack of modeling concepts to represent sensors and actuators of the IoT and their process meta-level. In order to reach that goal, we initially introduced the IoT device and its underlying native software components to the process metamodel and came up with a general semantic model for capturing resource allocation requirement to process elements. For demonstrating the purpose of the new resource type we accor-dingly extended the three layers of the process metamodel coming with the standard BPMN 2.0 notation. Furthermore, we mapped the ontologies coming with the IoT model and thus extending the web-based editor of [6]. 
Our future work will include a broader application of the IoT Reference Architecture beyond. Acknowledgments. The authors would like to thankfully acknowledge the support contract number: 257521. The authors would also like to thank Surpana De and Payam Barnaghi for providing their work on IoT description models as input. 
