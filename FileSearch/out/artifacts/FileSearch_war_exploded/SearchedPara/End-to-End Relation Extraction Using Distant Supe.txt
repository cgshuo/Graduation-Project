 Relation Extraction (RE) from text as defined in ACE (Doddington et al., 2004) concerns the extrac-tion of relationships between two entities. This is typically carried out by applying supervised learn-ing, e.g. (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005) by using a hand-labeled corpus. Although, the resulting models are far more accurate than unsupervised approaches, they suffer from the following drawbacks: (i) they require labeled data, which is usually costly to pro-duce; (ii) they are typically domain-dependent as different domains involve different relations; and (iii), even in case the relations do not change, they result biased toward the text feature distributions of the training domain.

The drawbacks above would be alleviated if data from several different domains and relationships were available. A form of weakly supervision, specifically named distant supervision (DS) when applied to Wikipedia, e.g. (Banko et al., 2007; Mintz et al., 2009; Hoffmann et al., 2010) has been recently developed to meet the requirement above. The main idea is to exploit (i) relation repositories, e.g. the Infobox , x , of Wikipedia to define a set of relation types RT ( x ) and (ii) the text in the page associated with x to produce the training sentences, which are supposed to express instances of RT ( x ) .

Previous work has shown that selecting the sen-tences containing the entities targeted by a given re-lation is enough accurate (Banko et al., 2007; Mintz et al., 2009) to provide reliable training data. How-ever, only (Hoffmann et al., 2010) used DS to de-fine extractors that are supposed to detect all the re-lation instances from a given input text. This is a harder test for the applicability of DS but, at the same time, the resulting extractor is very valuable: it can find rare relation instances that might be ex-pressed in only one document. For example, the re-lation President(Barrack Obama, United States ) can be extracted from thousands of documents thus there is a large chance of acquiring it. In contrast, Pres-ident(Eneko Agirre, SIGLEX) is probably expressed in very few documents, increasing the complexity for obtaining it.

In this paper, we extend DS by (i) considering relations from semantic repositories different from Wikipedia, i.e. YAGO, and (2) using training in-stances derived from any Wikipedia document. This allows for (i) potentially obtaining training data for many more relation types, defined in different sources; (ii) meaningfully enlarging the size of the DS data since the relation examples can be extracted from any Wikipedia document 1 .

Additionally, by following previous work, we define state-of-the-art RE models based on kernel methods (KM) applied to syntactic/semantic struc-tures. We use tree and sequence kernels that can exploit structural information and interdependencies among labels. Experiments show that our models are flexible and robust to Web documents as we achieve the interesting F1 of 74.29% on 52 YAGO relations. This is even more appreciable if we ap-proximately compare with the previous result on RE using DS, i.e. 61% (Hoffmann et al., 2010). Al-though the experiment setting is different from ours, the improvement of about 13 absolute percent points demonstrates the quality of our model.

Finally, we also provide a system for extracting relations from any text. This required the definition of a robust Named Entity Recognizer (NER), which is also trained on weakly supervised Wikipedia data. Consequently, our end-to-end RE system is appli-cable to any document. This is another major im-provement on previous work. The satisfactory RE F1 of 67% for 52 Wikipedia relations suggests that our model is also successfully applicable in real sce-narios. 1.1 Related Work RE generally relates to the extraction of relational facts, or world knowledge from the Web (Yates, 2009). To identify semantic relations using ma-chine learning, three learning settings have been ap-plied, namely supervised methods, e.g. (Zelenko et al., 2002; Culotta and Sorensen, 2004; Kamb-hatla, 2004), semi supervised methods, e.g. (Brin, 1998; Agichtein and Gravano, 2000), and unsuper-vised method, e.g. (Hasegawa et al., 2004; Banko et al., 2007). Work on supervised Relation Extrac-tion has mostly employed kernel-based approaches, e.g. (Zelenko et al., 2002; Culotta and Sorensen, 2004; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005; Zhang et al., 2005; Bunescu, 2007; Nguyen et al., 2009; Zhang et al., 2006). However, such approaches can be applied to few relation types thus distant supervised learning (Mintz et al., 2009) was introduced to tackle such problem. Another so-lution proposed in (Riedel et al., 2010) was to adapt models trained in one domain to other text domains. In this section, we describe the resources for the cre-ation of an annotated dataset based on distant super-vision. We use YAGO, a large knowledge base of entities and relations, and Freebase, a collection of Wikipedia articles. Our procedure uses entities and facts from YAGO to provide relation instances. For each pair of entities that appears in some YAGO re-lation, we retrieve all the sentences of the Freebase documents that contain such entities. 2.1 YAGO YAGO (Suchanek et al., 2007) is a huge seman-tic knowledge base derived from WordNet and Wikipedia. It comprises more than 2 million entities (like persons , organizations , cities , etc.) and 20 mil-lion facts connecting these entities. These include the taxonomic Is-A hierarchy as well as semantic re-lations between entities.

We use the YAGO version of 2008-w40-2 with a manually confirmed accuracy of 95% for 99 rela-tions. However, some of them are (a) trivial, e.g. familyNameOf ; (b) numerical attributes that change over time, e.g. hasPopulation ; (c) symmetric, e.g. hasPredecessor ; (d) used only for data management, e.g. describes or foundIn . Therefore, we removed those irrelevant relations and obtained 1,489,156 in-stances of 52 relation types to be used with our DS approach. 2.2 Freebase To access to Wikipedia documents, we used Free-base (March 27, 2010 (Metaweb Technologies, 2010)), which is a dump of the full text of all Wikipedia articles. For our experiments, we used 100,000 articles. Out of them, only 28,074 articles contain at least one relation for a total of 68,429 of relation instances. These connect 744,060 entities, 97,828 dates and 203,981 numerical attributes. Temporal and Numerical Expression Wikipedia articles are marked with entities like Per-son or Organization but not with dates or numeri-cal attributes. This prevents to extract interesting relations between entities and dates, e.g. John F. Kennedy was born on May 29, 1917 or between en-tities and numerical attributes, e.g. The novel Gone with the wind has 1037 pages . Thus we designed 18 regular expressions to extract dates and other 25 to extract numerical attributes, which range from in-teger number to ordinal number, percentage, mone-tary, speed, height, weight, area, time, and ISBN. 2.3 Distant Supervision and generalization Distant supervision (DS) for RE is based on the following assumption: (i) a sentence is connected in some way to a database of relations and (ii) such sentence contains the pair of entities partic-ipating in a target relation; (iii) then it is likely that such sentence expresses the relation. In tra-ditional DS the point (i) is implemented by the Infobox , which is connected to the sentences by a proximity relation (same page of the sentence). In our extended DS, we relax (i) by allowing for the use of an external DB of relations such as YAGO and any document of Freebase (a col-lection of Wikipedia documents). The alignment between YAGO and Freebase is implemented by the Wikipedia page link: for example the link http://en.wikipedia.org/wiki/James Cameron refers to the entity James Cameron .

We use an efficient procedure formally described in Alg. 2.1: for each Wikipedia article in Free-base, we scan all of its NEs. Then, for each pair of entities 2 seen in the sentence, we query YAGO to retrieve the relation instance connecting these enti-ties. Note that a simplified version of our approach is the following: for any YAGO relation instance, scan all the sentences of all Wikipedia articles to test point (ii). Unfortunately, this procedure is impossi-ble in practice due to millions of relation instances in YAGO and millions of Wikipedia articles in Free-base, i.e. an order of magnitude of 10 14 iterations 3 . We model relation extraction (RE) using state-of-the-art classifiers based on kernel methods. The main idea is that syntactic/semantic structures are used to represent relation instances. We followed the model in (Nguyen et al., 2009) that has shown sig-nificant improvement on the state-of-the-art. This combines a syntactic tree kernel and a polynomial kernel over feature extracted from the entities: where  X  is a coefficient to give more or less impact to the polynomial kernel, K P , and TK is the syntac-tic tree kernel (Collins and Duffy, 2001). The best model combines the advantages of the two parsing paradigms by adding the kernel above with six se-quence kernels (described in (Nguyen et al., 2009)).
CSK =  X   X  K P +(1  X   X  )  X  ( TK + X
Such kernels cannot be applied to Wikipedia doc-uments as the entity category, e.g. Person or Orga-nization , is in general missing. Thus, we adapted them by simply removing the category label in the nodes of the trees and in the sequences. This data transformation corresponds to different kernels (see (Cristianini and Shawe-Taylor, 2000)). We carried out test to demonstrate that our DS ap-proach produces reliable and practically usable re-lation extractors. For this purpose, we test them on DS data by also carrying out end-to-end RE evalua-tion. This requires to experiment with a state-of-the-art Named Entity Recognizer trained on Wikipedia entities.
 4.1 Experimental setting We used the DS dataset generated from YAGO and Wikipedia articles, as described in the algorithm (Alg. 2.1). The candidate relations are generated by iterating all pairs of entity mentions in the same sentence. Relation detection is formulated as a mul-ticlass classification problem. The One vs. Rest strategy is employed by selecting the instance with largest margin as the final answer. We carried out 5-fold cross-validation with the tree kernel toolkit 4 (Moschitti, 2004; Moschitti, 2008). 4.2 Results on Wikipedia RE We created a test set by sampling 200 articles from Freebase (these articles are not used for training). An expert annotator, for each sentence, labeled all possible pairs of entities with one of the 52 rela-tions from YAGO, where the entities were already marked. This process resulted in 2,601 relation in-stances.

Table 1 shows the performance of individual clas-sifiers as well as the overall Micro-average F1 for our adapted CSK : we note that it reaches an F1-score of 74.29%. This can be compared with the Micro-average F1 of CK 1 , i.e. 71.21%. The lower result suggests that the combination of dependency and constituent syntactic structures is very impor-tant: +3.08 absolute percent points on CK 1 , which only uses constituency trees. 4.3 End-to-end Relation Extraction Previous work in RE uses gold entities available in the annotated corpus (i.e. ACE) but in real appli-cations these are not available. Therefore, we per-form experiments with automatic entities. For their extraction, we follow the feature design in (Nguyen et al., 2010), using CRF++ 5 with unigram/features and Freebase as learning source. Dates and numer-ical attributes required a different treatment, so we use the patterns described in Section 2.3. The results reported in Table 2 are rather lower than in standard NE recognition. This is due to the high complexity of predicting the boundaries of thousands of differ-ent categories in YAGO.

Our end-to-end RE system can be applied to any text fragment so we could experiment with it and any Wikipedia document. This allowed us to carry out an accurate evaluation. The results are shown in Table 2. We note that, without gold entities, RE from Wikipedia still achieves a satisfactory performance of 67.00% F1. This paper proposes two main contributions to Re-lation Extraction: (i) a new approach to distant su-pervision (DS) to create training data using relations defined in different sources, i.e. YAGO, and poten-tially using any Wikipedia document; and (ii) end-to-end systems applicable both to Wikipedia pages as well as to any natural language text.

The results show: 1. A high F1 of 74.29% on extracting 52 YAGO 2. The importance of using both dependency and 3. Our end-to-end system is useful for real appli-For this reason, we decided to make available the DS dataset, the manually annotated test set and the computational data (tree and sequential structures with labels).

