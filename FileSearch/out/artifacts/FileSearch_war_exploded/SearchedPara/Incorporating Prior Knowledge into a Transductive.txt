 This paper presents a transductive approach to learn rank-ing functions for extractive multi-document summarization. At the first stage, the proposed approach identifies topic themes within a document collection, which help to identify two sets of relevant and irrelevant sentences to a question. It then iteratively trains a ranking function over these two sets of sentences by optimizing a ranking loss and fitting a prior model built on keywords. The output of the function is used to find further relevant and irrelevant sentences. This process is repeated until a desired stopping criterion is met. I.2.7 [ Artificial Intelligence ]: Natural Language Process-ing X  text analysis Algorithms, Experimentation, Performance Mutli-document summariza tion, Learning to Rank
Multi-document summarization (MDS) aims at extracting information relevant to an implicit or explicit subject from different documents written about that subject or topic. MDS is generally a more complex task than single document summarization (SDS) as it aims to capture different themes inside a set of documents rather than to simply shorten the source texts [2]. An ideal multi-document summarizer at-tempts to produce relevant information around key facets dealing with the topic and present in the set of its relevant documents. A major issue for MDS is, therefore, to auto-matically detect these themes. In this paper we propose to incorporate prior knowledge induced from a set of keywords into a transductive algorithm to learn ranking functions with a minimal annotation effort for multi-document summariza-tion. Learning with prior knowledge has become a wide field of research in the last years [4]. The emphasis here is to in-corporate domain knowledge in the learning process rather than labeled instances which, in some applications are im-possible to gather. The summarizer we propose learns a linear ranking function from the bag-of-words representa-tion of sentences. At this stage, the construction of ranking functions is hindered by two difficulties. First, the initial training set should be defined automatically, whereas typ-ical machine learning methods require manually annotated data. Secondly, for each question the algorithm should be able to learn an accurate function with very few examples. To this end, our approach first defines a prior probability of relevance for every sentence using the set of keywords associated to a given question. It then iteratively learns a scoring function which fits the prior probabilities, and also minimizes the number of irrelevant sentences scored above the relevant ones. At each iteration, new relevant and ir-relevant sentences are identi fied using the scores predicted by the current function. These sentences are added to the training set, and a new function is trained.
We consider the case where for each given question, there are not any manually labeled sets of relevant and irrele-vant sentences available. In order to learn, our approach first builds training sets automatically from the following common assumption that question words as well as their topically related terms are relevant to the summary. For a given question q  X  X  and a set of documents D ,wethereby use a term-clustering technique proposed in [1] to first find words that are topically related to the question. This tech-nique partitions terms that appear in the same documents with the same frequency. It has empirically been shown that words belonging to the same term-cluster are topically re-lated. Following the assumption above and for each question q , we first create an initial training set by gathering two sets of relevant and irrelevant sentences to the summary. The relevant set is composed of the extended question,  X  q ,con-taining question words and words that belong to the same term-clusters than each of the question words. The set of irrelevant sentences is constituted of sentences that do not contain any of the expanded question words.

The prior model we propose takes then the form of a language model that computes conditional probability es-timates  X  ( q | s ), over the set of questions q  X  X  ,foreach sentence s  X  X  . The model first defines, for any keyword w a conditional probability of generating the question  X  ( q | w We further assume that all no-keyword terms are equiprob-able to all questions:  X   X  w  X  set an uniform prior distribution for questions:  X  q,  X  ( |Q| ,where k q is the extended keywords set of q . Finally by making the naive Bayes assumption that sentence terms are conditionally independent given a question, we estimate the conditional probability  X  ( q | s )ofaquestion q given a sentence s using Bayes X  rule. An advantage of this model is that it provides fast probability estimates which are com-puted once before the training stage that we present in the following section.

Our ranking algorithm works in a transductive setting .In this case the whole set of sentences to be ranked is known prior to learning . This setting makes use of the unlabeled examples in the learning stage in order to compensate for the small size of the initial generated training set. The trans-ductive summarizer algorithm is then composed of two main parts: (1) a prior knowledge model and (2) an iterative ar-chitecture that follows the self-learning paradigm [3] mini-mizing the following criterion
L ( f )= 1 Where, the first term is a standard ranking loss and the second term is the Kullback-Leibler divergence between the outputs of the prior model and the learnt function with P ( t )=(1+ e  X  t )  X  1 a sigmoid function, used to transform the score f ( s ) into a posterior probability estimation of rel-evance,  X  is a discount factor used to balance the relative influence of the prior model and D is the set of documents related to q . Initially, S + and S  X  are the generated training set. Then, a function is learned, and some unlabeled exam-ples are added to S + or S  X  using the predicted score. The process is repeated until S + achieves a sufficient size. We conducted our experiments on DUC 2005 1 data set. Documents are news articles collected from the AQUAINT cor-pus. For a given question, a summary is to be formed on the basis of a subset of documents to its corresponding topic. Each question comes also with a set of keywords that we used for probability estimation in our prior model. It is to be noted that for each topic, we dispose of three reference summaries produced by human assessors. Since we do not need any prior labeled training data to run our algorithm, these reference summaries are only used for evaluation pur-poses. For the evaluation criteria we used the ROUGE toolkit (version 1.5.5) applied by NIST for performance evaluation in DUC competitions. This program measures the quality of a produced summary by counting the relative number of its unit overlaps with a set of reference summaries -produced by three human assessors in these competitions. The fol-lowing table provides the comparison results on DUC 2005 . We compared our approach with two base-level summariz-ers, namely lead and random ,andthetoptwoperforming http://www-nlpir.nist.gov/projects/duc/data.html systems on DUC 2005 . The latter are those which achieved the highest ROUGE scores in that competition. The lead baseline returns all the leading sentences (up to 250 words) in the most recent document for each topic and the random baseline selects sentences in random. To see the effect of the prior knowledge model in learning the ranking function, we report experimental results obtained by TranSumm in the cases where the prior knowledge model is not used (  X  =0)or that summaries are exclusively made using the latter (  X   X  and finally for the best value of lambda (  X   X  ). TranSumm (  X  = 0) 0.06842 0.32945 0.12594
We observe that on DUC 2005 the proposed algorithm achie-ves the best results over other systems for the optimal value of the discount factor. We believe that this improvement is due to two conjugated factors. First, expanded keywords and question terms on this collection contain summary terms. We have further seen that questions from DUC 2005 are al-most long, containing 12 . 42 words in average. On the other hand, as TranSumm initializes the set of relevant sentences first by the expanded question and that it increases the score of sentences containing expanded keywords terms via the prior knowledge model. It turns out that summary-like sentences in DUC 2005 have potentially high scores.
We proposed a learning to rank approach for extractive summarization based on a transductive setting. Our ap-proach allows to extract sentences having similar words than questions, their topically related terms and the initial key-words. Our experiments on DUC 2005 show that our algo-rithm achieves the best results compared to state-of-the-art. This work was supported in part by the IST Program of the European Community, under the PASCAL2 Network of Excellence. [1] M.-R. Amini and N. Usunier, A contextual query [2] I. Mani and E. Bloedorn, Summarizing similarities and [3] R. Reichart and A. Rappoport, Self-Training for [4] Robert E. Schapire and Marie Rochery and Mazin
