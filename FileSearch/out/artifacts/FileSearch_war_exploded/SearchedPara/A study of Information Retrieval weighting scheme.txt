 The increase of user-generated content on the web in the form of reviews, blogs, social networks, tweets, fora, etc. has resulted in an environ-ment where everyone can publicly express their opinion about events, products or people. This wealth of information is potentially of vital im-portance to institutions and companies, providing them with ways to research their consumers, man-age their reputations and identify new opportuni-ties. Wright (2009) claims that  X  X or many busi-nesses, online opinion has turned into a kind of virtual currency that can make or break a product in the marketplace X .

Sentiment analysis, also known as opinion min-ing, provides mechanisms and techniques through which this vast amount of information can be pro-cessed and harnessed. Research in the field has mainly, but not exclusively, focused in two sub-problems: detecting whether a segment of text, ei-ther a whole document or a sentence, is subjective or objective, i.e. contains an expression of opin-ion, and detecting the overall polarity of the text, i.e. positive or negative.

Most of the work in sentiment analysis has fo-cused on supervised learning techniques (Sebas-tiani, 2002), although there are some notable ex-ceptions (Turney, 2002; Lin and He, 2009). Pre-vious research has shown that in general the per-formance of the former tend to be superior to that of the latter (Mullen and Collier, 2004; Lin and He, 2009). One of the main issues for supervised approaches has been the representation of docu-ments. Usually a bag of words representation is adopted, according to which a document is mod-eled as an unordered collection of the words that it contains. Early research by Pang et al. (2002) in sentiment analysis showed that a binary unigram-based representation of documents, according to which a document is modeled only by the pres-ence or absence of words, provides the best base-line classification accuracy in sentiment analysis in comparison to other more intricate representa-tions using bigrams, adjectives, etc.

Later research has focused on extending the document representation with more complex fea-tures such as structural or syntactic informa-tion (Wilson et al., 2005), favorability mea-sures from diverse sources (Mullen and Collier, 2004), implicit syntactic indicators (Greene and Resnik, 2009), stylistic and syntactic feature selec-tion (Abbasi et al., 2008),  X  X nnotator rationales X  (Zaidan et al., 2007) and others, but no systematic study has been presented exploring the benefits of employing more sophisticated models for assign-ing weights to word features.

In this paper, we examine whether term weight-ing functions adopted from Information Retrieval (IR) based on the standard tf.idf formula and adapted to the particular setting of sentiment anal-ysis can help classification accuracy. We demon-strate that variants of the original tf.idf weighting scheme provide significant increases in classifica-tion performance. The advantages of the approach are that it is intuitive, computationally efficient and doesn X  X  require additional human annotation or external sources. Experiments conducted on a number of publicly available data sets improve on the previous state-of-the art.

The next section provides an overview of rel-evant work in sentiment analysis. In section 3 we provide a brief overview of the original tf.idf weighting scheme along with a number of variants and show how they can be applied to a classifica-tion scenario. Section 4 describes the corpora that were used to test the proposed weighting schemes and section 5 discusses the results. Finally, we conclude and propose future work in section 6. Sentiment analysis has been a popular research topic in recent years. Most of the work has fo-cused on analyzing the content of movie or gen-eral product reviews, but there are also applica-tions to other domains such as debates (Thomas et al., 2006; Lin et al., 2006), news (Devitt and Ah-mad, 2007) and blogs (Ounis et al., 2008; Mishne, 2005). The book of Pang and Lee (2008) presents a thorough overview of the research in the field. This section presents the most relevant work.
Pang et al. (2002) conducted early polarity classification of reviews using supervised ap-proaches. They employed Support Vector Ma-chines (SVMs), Naive Bayes and Maximum En-tropy classifiers using a diverse set of features, such as unigrams, bigrams, binary and term fre-quency feature weights and others. They con-cluded that sentiment classification is more dif-ficult that standard topic-based classification and that using a SVM classifier with binary unigram-based features produces the best results.

A subsequent innovation was the detection and removal of the objective parts of documents and the application of a polarity classifier on the rest (Pang and Lee, 2004). This exploited text coher-ence with adjacent text spans which were assumed to belong to the same subjectivity or objectivity class. Documents were represented as graphs with sentences as nodes and association scores between them as edges. Two additional nodes represented the subjective and objective poles. The weights between the nodes were calculated using three dif-ferent, heuristic decaying functions. Finding a par-tition that minimized a cost function separated the objective from the subjective sentences. They re-ported a statistically significant improvement over a Naive Bayes baseline using the whole text but only slight increase compared to using a SVM classifier on the entire document.

Mullen and Collier (2004) used SVMs and ex-panded the feature set for representing documents with favorability measures from a variety of di-verse sources. They introduced features based on Osgood X  X  Theory of Semantic Differentiation (Os-good, 1967) using WordNet to derive the values of potency, activity and evaluative of adjectives and Turney X  X  semantic orientation (Turney, 2002). Their results showed that using a hybrid SVM classifier, that uses as features the distance of doc-uments from the separating hyperplane, with all the above features produces the best results.
Whitelaw et al. (2005) added fine-grained se-mantic distinctions in the feature set. Their ap-proach was based on a lexicon created in a semi-supervised fashion and then manually refined It consists of 1329 adjectives and their modifiers cat-egorized under several taxonomies of appraisal at-tributes based on Martin and White X  X  Appraisal Theory (2005). They combined the produced ap-praisal groups with unigram-based document rep-resentations as features to a Support Vector Ma-chine classifier (Witten and Frank, 1999), result-ing in significant increases in accuracy.

Zaidan et al. (2007) introduced  X  X nnotator ra-tionales X , i.e. words or phrases that explain the polarity of the document according to human an-notators. By deleting rationale text spans from the original documents they created several contrast documents and constrained the SVM classifier to classify them less confidently than the originals. Using the largest training set size, their approach significantly increased the accuracy on a standard data set (see section 4).

Prabowo and Thelwall (2009) proposed a hy-brid classification process by combining in se-quence several ruled-based classifiers with a SVM classifier. The former were based on the Gen-eral Inquirer lexicon (Wilson et al., 2005), the MontyLingua part-of-speech tagger (Liu, 2004) and co-occurrence statistics of words with a set of predefined reference words. Their experiments showed that combining multiple classifiers can result in better effectiveness than any individual classifier, especially when sufficient training data isn X  X  available.

In contrast to machine learning approaches that require labeled corpora for training, Lin and He (2009) proposed an unsupervised probabilis-tic modeling framework, based on Latent Dirich-let Allocation (LDA). The approach assumes that documents are a mixture of topics, i.e. proba-bility distribution of words, according to which each document is generated through an hierarchi-cal process and adds an extra sentiment layer to accommodate the opinionated nature (positive or negative) of the document. Their best attained per-formance, using a filtered subjectivity lexicon and removing objective sentences in a manner similar to Pang and Lee (2004), is only slightly lower than that of a fully-supervised approach. We use the terms  X  X eatures X ,  X  X ords X  and  X  X erms X  interchangeably in this paper, since we mainly fo-cus on unigrams. The approach nonetheless can easily be extended to higher order n-grams. Each document D therefore is represented as a bag-of-words feature vector: D = w where | V | is the size of the vocabulary (i.e. the number of unique words) and w is the weight of term i in document D .

Despite the significant attention that sentiment analysis has received in recent years, the best ac-curacy without using complex features (Mullen and Collier, 2004; Whitelaw et al., 2005) or ad-ditional human annotations (Zaidan et al., 2007) is achieved by employing a binary weighting scheme (Pang et al., 2002), where w w i = 0 , times that term i appears in document D (hence-forth raw term frequency ) and utilizing a SVM classifier. It is of particular interest that using tf in the document representation usually results in decreased accuracy, a result that appears to be in contrast with topic classification (Mccallum and Nigam, 1998; Pang et al., 2002).

In this paper, we also utilize SVMs but our study is centered on whether more sophisticated than binary or raw term frequency weighting func-tions can improve classification accuracy. We base our approach on the classic tf.idf weighting scheme from Information Retrieval (IR) and adapt it to the domain of sentiment classification. 3.1 The classic tf.idf weighting schemes The classic tf.idf formula assigns weight w term i in document D as: where tf D , idf i ,
N is the total number of documents and df i is the number of documents that contain term i .
The utilization of tf straightforward and intuitive but, as previously discussed, usually results in decreased accuracy in sentiment analysis. On the other hand, using idf to assign weights to features is less intuitive, since it only provides information about the gen-eral distribution of term i amongst documents of all classes, without providing any additional evi-dence of class preference. The utilization of idf in information retrieval is based on its ability to distinguish between content-bearing words (words with some semantical meaning) and simple func-tion words, but this behavior is at least ambiguous in classification.
 Table 1: SMART notation for term frequency vari-ants. max term in the document and avg dl is the average number of terms in all the documents. For ease of reference, we also include the BM25 tf scheme. The k default values of 1 . 2 and 0 . 95 respectively (Jones et al., 2000).
 l (logarithm) 1 + log ( tf ) a (augmented) 0 . 5 + 0 . 5 tf 3.2 Delta tf.idf Martineau and Finin (2009) provide a solution to the above issue of idf utilization in a classification scenario by localizing the estimation of idf to the documents of one or the other class and subtract-ing the two values. Therefore, the weight of term Table 2: SMART notation for inverse document frequency variants. For ease of reference we also include the BM25 idf factor and also present the extensions of the original formulations with their  X  variants.

Notation Inverse Document Fre-n (no) 1 t (idf) log N p (prob idf) log N  X  df  X ( t ) (Delta idf) log N 1 df 2  X ( t  X  ) (Delta smoothed idf)  X ( p  X  ) (Delta smoothed prob idf) i in document D is estimated as: where N ments in class c ing documents in class c above weighting scheme was appropriately named Delta tf.idf .

The produced results (Martineau and Finin, 2009) show that the approach produces better results than the simple tf or binary weighting scheme. Nonetheless, the approach doesn X  X  take into consideration a number of tested notions from IR, such as the non-linearity of term frequency to document relevancy (e.g. Robertson et al. (2004)) according to which, the probability of a document being relevant to a query term is typically sub-linear in relation to the number of times a query term appears in the document. Additionally, their approach doesn X  X  provide any sort of smoothing for the df errors in corpora where a term occurs in docu-ments of only one or the other class and therefore df 3.3 SMART and BM25 tf.idf variants The SMART retrieval system by Salton (1971) is a retrieval system based on the vector space model (Salton and McGill, 1986). Salton and Buckley (1987) provide a number of variants of the tf.idf weighting approach and present the SMART nota-tion scheme , according to which each weighting function is defined by triples of letters; the first one denotes the term frequency factor, the sec-ond one corresponds to the inverse document fre-quency function and the last one declares the nor-malization that is being applied. The upper rows of tables 1, 2 and 3 present the three most com-monly used weighting functions for each factor re-spectively. For example, a binary document repre-sentation would be equivalent to SM ART.bnn 1 or more simply bnn , while a simple raw term fre-quency based would be notated as nnn or nnc with cosine normalization.

Notation Normalization n (none) 1
Significant research has been done in IR on di-verse weighting functions and not all versions of SMART notations are consistent (Manning et al., 2008). Zobel and Moffat (1998) provide an ex-haustive study but in this paper, due to space con-straints, we will follow the concise notation pre-sented by Singhal et al. (1995).

The BM25 weighting scheme (Robertson et al., 1994; Robertson et al., 1996) is a probabilistic model for information retrieval and is one of the most popular and effective algorithms used in in-formation retrieval. For ease of reference, we in-corporate the BM25 tf and idf factors into the SMART annotation scheme (last row of table 1 and 4 th row of table 2), therefore the weight w of term i in document D according to the BM25 scheme is notated as SM ART.okn or okn .

Most of the tf weighting functions in SMART and the BM25 model take into consideration the non-linearity of document relevance to term fre-quency and thus employ tf factors that scale sub-linearly in relation to term frequency. Addition-ally, the BM25 tf variant also incorporates a scal-ing for the length of the document, taking into con-sideration that longer documents will by definition functions is a very active research area in infor-mation retrieval and it is outside the scope of this paper to provide an in-depth analysis but signifi-cant research can be found in Salton and McGill (1986), Robertson et al. (2004), Manning et al. (2008) or Armstrong et al. (2009) for a more re-cent study. 3.4 Introducing SMART and BM25 Delta We apply the idea of localizing the estimation of idf values to documents of one class but em-ploy more sophisticated term weighting functions adapted from the SMART retrieval system and the BM25 probabilistic model. The resulting idf weighting functions are presented in the lower part of table 2. We extend the original SMART anno-tation scheme by adding Delta (  X  ) variants of the original idf functions and additionally introduce smoothed Delta variants of the idf and the prob idf factors for completeness and comparative rea-sons, noted by their accented counterparts. For example, the weight of term i in document D ac-cording to the o  X ( k ) n weighting scheme where we employ the BM25 tf weighting function and utilize the difference of class-based BM25 idf val-ues would be calculated as: w where K is defined as k However, we used a minor variation of the above formulation for all the final accented weighting functions in which the smoothing factor is added to the product of df  X ( p  X  ) and  X ( k ) ), rather than to the df i alone as the above formulation would imply (see table 2). The above variation was made for two reasons: firstly, when the df ing factor influences the final idf value only in a minor way in the revised formulation, since it is added only after the multiplication of the df N the smoothing factor correctly adds only a small mass, avoiding a potential division by zero, where otherwise it would add a much greater mass, be-cause it would be multiplied by N
According to this annotation scheme therefore, the original approach by Martineau and Finin (2009) can be represented as n  X ( t ) n .

We hypothesize that the utilization of sophisti-cated term weighting functions that have proved effective in information retrieval, thus providing an indication that they appropriately model the distinctive power of terms to documents and the smoothed, localized estimation of idf values will prove beneficial in sentiment classification. Table 4: Reported accuracies on the Movie Re-view data set. Only the best reported accuracy for each approach is presented, measured by 10-fold cross validation. The list is not exhaustive and be-cause of differences in training/testing data splits the results are not directly comparable. It is pro-duced here only for reference.
 Approach Acc.

SVM with unigrams &amp; binary weights (Pang et al., 2002), reported at (Pang and Lee, 2004) Hybrid SVM with Turney/Osgood
Lemmas (Mullen and Collier, 2004)
SVM with min-cuts (Pang and Lee, 2004)
SVM with appraisal groups 90 . 2% (Whitelaw et al., 2005)
SVM with log likehood ratio feature selection (Aue and Gamon, 2005)
SVM with annotator rationales 92 . 2% (Zaidan et al., 2007)
LDA with filtered lexicon, subjectiv-ity detection (Lin and He, 2009)
The approach is straightforward, intuitive, com-putationally efficient, doesn X  X  require additional human effort and takes into consideration stan-dardized and tested notions from IR. The re-sults presented in section 5 show that a number of weighting functions solidly outperform other state-of-the-art approaches. In the next section, we present the corpora that were used to study the ef-fectiveness of different weighting schemes. We have experimented with a number of publicly available data sets.

The movie review dataset by Pang et al. (2002) has been used extensively in the past by a number of researchers (see Table 4), presenting the oppor-tunity to compare the produced results with pre-vious approaches. The dataset comprises 2,000 movie reviews, equally divided between positive and negative, extracted from the Internet Movie Database 3 archive of the rec.arts.movies.reviews newsgroup. In order to avoid reviewer bias, only 20 reviews per author were kept, resulting in a to-by previous research on the specific data are pre-sented in table 4. We do not claim that those re-sults are directly comparable to ours, because of potential subtle differences in tokenization, classi-fier implementations etc, but we present them here for reference.

The Multi-Domain Sentiment data set (MDSD) by Blitzer et al. (2007) contains Amazon reviews for four different product types: books, electron-ics, DVDs and kitchen appliances. Reviews with ratings of 3 or higher, on a 5-scale system, were labeled as positive and reviews with a rating less than 3 as negative. The data set contains 1,000 positive and 1,000 negative reviews for each prod-uct category for a total of 8,000 reviews. Typically, the data set is used for domain adaptation applica-tions but in our setting we only split the reviews
Lastly, we present results from the BLOGS06 (Macdonald and Ounis, 2006) collection that is comprised of an uncompressed 148GB crawl of approximately 100,000 blogs and their respective RSS feeds. The collection has been used for 3 con-secutive years by the Text REtrieval Conferences vided with the task of finding documents (i.e. web pages) expressing an opinion about specific enti-ties X , which may be people, companies, films etc. The results are given to human assessors who then judge the content of the webpages (i.e. blog post and comments) and assign each webpage a score:  X 1 X  if the document contains relevant, fac-tual information about the entity but no expression of opinion,  X 2 X  if the document contains an ex-plicit negative opinion towards the entity and  X 4 X  is the document contains an explicit positive opin-ion towards the entity. We used the produced as-sessments from all 3 years of the conference in our data set, resulting in 150 different entity searches and, after duplicate removal, 7,930 negative docu-ments (i.e. having an assessment of  X 2 X ) and 9,968 positive documents (i.e. having an assessment of Documents are annotated at the document-level, rather than at the post level, making this data set somewhat noisy. Additionally, the data set is par-ticularly large compared to the other ones, making classification especially challenging and interest-ing. More information about all data sets can be found at table 5.

We have kept the pre-processing of the docu-ments to a minimum. Thus, we have lower-cased all words and removed all punctuation but we have not removed stop words or applied stemming. We have also refrained from removing words with low or high occurrence. Additionally, for the BLOGS06 data set, we have removed all html for-matting.

We utilize the implementation of a support vec-tor classifier from the LIBLINEAR library (Fan et al., 2008). We use a linear kernel and default parameters. All results are based on leave-one out cross validation accuracy. The reason for this choice of cross-validation setting, instead of the most standard ten-fold, is that all of the proposed approaches that use some form of idf utilize the training documents for extracting document fre-quency statistics, therefore more information is available to them in this experimental setting.
Because of the high number of possible combi-nations between tf and idf variants ( 6  X  9  X  2 = 108 ) and due to space constraints we only present re-sults from a subset of the most representative com-binations. Generally, we X  X l use the cosine nor-malized variants of unsmoothed delta weighting schemes, since they perform better than their un-Data set # Documents # Terms # Unique Movie Reviews 2,000 1,336,883 39,399 668 Multi-Domain Sentiment
Dataset (MDSD) BLOGS06 17,898 51,252,850 367,899 2,832 normalized counterparts. We X  X l avoid using nor-malization for the smoothed versions, in order to focus our attention on the results of smoothing, rather than normalization. Results for the Movie Reviews, Multi-Domain Sentiment Dataset and BLOGS06 corpora are re-ported in figures 1, 2 and 3 respectively.

On the Movie Review data set, the results re-confirm that using binary features ( bnc ) is bet-ter than raw term frequency ( nnc ) ( 83 . 40% ) fea-tures. For reference, in this setting the unnor-malized vector using the raw tf approach ( nnn ) performs similar to the normalized ( nnc ) ( 83 . 40% vs. 83 . 60% ), the former not present in the graph. Nonetheless, using any scaled tf weighting func-tion ( anc or onc ) performs as well as the binary approach ( 87 . 90% and 87 . 50% respectively). Of interest is the fact that although the BM25 tf algo-rithm has proved much more successful in IR, the same doesn X  X  apply in this setting and its accuracy is similar to the simpler augmented tf approach.
Incorporating un-localized variants of idf (mid-dle graph section) produces only small increases in accuracy. Smoothing also doesn X  X  provide any particular advantage, e.g. btc ( 88 . 20% ) vs. bt  X  c ( 88 . 45% ), since no zero idf values are present. Again, using more sophisticated tf functions pro-vides an advantage over raw tf , e.g. nt  X  c at-tains an accuracy of 86 . 6% in comparison to at  X  c  X  X  88 . 25% , although the simpler at  X  c is again as ef-fective than the BM25 tf ( ot  X  c ), which performs at 88% . The actual idf weighting function is of some importance, e.g. ot  X  c ( 88% ) vs. okc ( 87 . 65% ) and akc ( 88% ) vs. at  X  c ( 88 . 25% ), with simpler idf fac-tors performing similarly, although slightly better than BM25.

Introducing smoothed, localized variants of idf and scaled or binary tf weighting schemes pro-duces significant advantages. In this setting, smoothing plays a role, e.g. n  X ( t ) c 8 ( 91 . 60% ) vs. n  X ( t  X  ) n ( 95 . 80% ) and a  X ( p ) c ( 92 . 80% ) vs. a  X ( p  X  ) n ( 96 . 55% ), since we can expect zero class-based estimations of idf values, supporting our initial hypothesis on its importance. Addition-ally, using augmented , BM25 or binary tf weights is always better than raw term frequency, pro-viding further support on the advantages of us-ing sublinear tf weighting functions 9 . In this set-ting, the best accuracy of 96 . 90% is attained using BM25 tf weights with the BM25 delta idf variant, although binary or augmented tf weights using delta idf perform similarly ( 96 . 50% and 96 . 60% respectively). The results indicate that the tf and the idf factor themselves aren X  X  of significant im-portance, as long as the former are scaled and the latter smoothed in some manner. For example, a  X ( p  X  ) n vs. a  X ( t  X  ) n perform quite similarly.
The results from the Multi-Domain Sentiment data set (figure 2) largely agree with the find-ings on the Movie Review data set, providing a strong indication that the approach isn X  X  limited to a specific domain. Binary weights outperform raw term frequency weights and perform similarly with scaled tf  X  X . Non-localized variants of idf weights do provide a small advantage in this data set although the actual idf variant isn X  X  important, e.g. btc , bt  X  c , and okc all perform similarly. The utilized tf variant also isn X  X  important, e.g. at  X  c ( 88 . 39% ) vs. bt  X  c ( 88 . 25% ).

We focus our attention on the delta idf vari-ants which provide the more interesting results. The importance of smoothing becomes apparent when comparing the accuracy of a  X ( p ) c and its smoothed variant a  X ( p  X  ) n ( 92 . 56% vs. 95 . 6% ). Apart from that, all smoothed delta idf variants perform very well in this data set, including some-what surprisingly, n  X ( t  X  ) n which uses raw tf ( 94 . 54% ). Considering that the average tf per document is approx. 1 . 9 in the Movie Review data set and 1 . 1 in the MDSD, the results can be attributed to the fact that words tend to typically appear only once per document in the latter, there-fore minimizing the difference of the weights at-tributed by different tf functions 10 . The best at-tained accuracy is 96 . 40% but as the MDSD has mainly been used for domain adaptation applica-tions, there is no clear baseline to compare it with.
Lastly, we present results on the BLOGS06 dataset in figure 3. As previously noted, this data set is particularly noisy, because it has been an-notated at the document-level rather than the post-level and as a result, the differences aren X  X  as pro-found as in the previous corpora, although they do follow the same patterns. Focusing on the delta idf variants, the importance of smoothing becomes apparent, e.g. a  X ( p ) c vs. a  X ( p  X  ) n and n  X ( t ) c vs. n  X ( t  X  ) n . Additionally, because of the fact that documents tend to be more verbose in this data set, the scaled tf variants also perform better than the simple raw tf ones, n  X ( t  X  ) n vs. a  X ( t  X  ) n . Lastly, as previously, the smoothed lo-calized idf variants perform better than their un-smoothed counterparts, e.g. n  X ( t ) n vs. n  X ( t  X  ) n and a  X ( p ) c vs. a  X ( p  X  ) n . In this paper, we presented a study of document representations for sentiment analysis using term weighting functions adopted from information re-trieval and adapted to classification. The pro-posed weighting schemes were tested on a num-ber of publicly available datasets and a number of them repeatedly demonstrated significant in-creases in accuracy compared to other state-of-the-art approaches. We demonstrated that for accurate classification it is important to use term weight-ing functions that scale sublinearly in relation to the number of times a term occurs in a document and that document frequency smoothing is a sig-nificant factor.

In the future we plan to test the proposed weighting functions in other domains such as topic classification and additionally extend the approach to accommodate multi-class classification. This work was supported by a European Union grant by the 7th Framework Programme, Theme 3: Science of complex systems for socially intelli-gent ICT. It is part of the CyberEmotions Project (Contract 231323).

