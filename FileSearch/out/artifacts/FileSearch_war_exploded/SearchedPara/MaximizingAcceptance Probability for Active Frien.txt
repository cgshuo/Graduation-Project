 Friending recommendation has successfully contributed to the explosive growth of online social networks. Most friend-ing recommendation services today aim to support passive friending, where a user passively selects friending targets from the recommended candidates. In this paper, we advo-cate a recommendation support for active friending, where a user actively specifies a friending target. To the best of our knowledge, a recommendation designed to provide guidance for a user to systematically approach his friending target has not been explored for existing online social networking ser-vices. To maximize the probability that the friending target would accept an invitation from the user, we formulate a new optimization problem, namely, Acceptance Probability Maxi-mization (APM) , and develop a polynomial time algorithm, called Selective Invitation with Tree and In-Node Aggrega-tion (SITINA) , to find the optimal solution. We implement an active friending service with SITINA on Facebook to val-idate our idea. Our user study and experimental results reveal that SITINA outperforms manual selection and the baseline approach in solution quality efficiently. K.4.2 [ Computers and Society ]: Social Issues ; F.2.2 [ Analysis of Algorithms and Problem Complexity ]: Non-numerical Algorithms and Problems Friending, social network, social influence
Due to the development and popularity of social network-ing services, such as Facebook, Google+, and LinkedIn, the new notion of  X  X ocial network friending X  has appeared in re-cent years. To boost the growth of their user bases, existing social networking services usually provide friending recom-mendations to their users, encouraging them to send invita-tions to make more friends. Conventionally, friending recom-mendations are made following a passive friending strategy, i.e., a user passively selects candidates from the provided recommendation list to send the invitations. Moreover, the recommended candidates are usually friends-of-friends of the user, especially those who share many common friends with the user. This strategy is quite intuitive because friends-of-friends may have been acquaintances or friends offline. Furthermore, most users may feel more comfortable to send a friending invitation to friends-of-friends rather than a to-tal stranger whom they have shared no social connections with at all. It is believed that given the success rate of such a passive friending strategy to be high, it has contributed to the explosive growth of online social networking services.
In contrast to passive friending, the idea of active friend-ing , where a person may take proactive actions to make friend with another person, does exist in our everyday life. For example, in a high school, a student fan may like to make friend with the captain in the school soccer team or with the lead singer in a rock-and-roll band of the school. A salesperson may be interested in getting acquainted with a high-value potential customer in the hope of making a busi-ness pitch. A young KDD researcher may desire to make friends with the leaders of the community to participate in organization and services of a conference. However, to the best of our knowledge, the idea of providing friending recom-mendations to assist and guide a user to effectively approach another person for active friending has not been explored in existing online social networking services. We argue that social networking service providers, interested in exploring new revenues and further growth of their user bases, may be interested in supporting active friending.

One may argue that in existing social networking services, an active friending initiator can send an invitation directly to the friending target anyway. 1 However, it may not work if the initiator is regarded as a stranger by the target, es-pecially when they are socially distant, i.e., they have no common friends. Therefore, to increase the chance that the target would accept the friending invitation, it may be a good idea for the initiator to first know some friends of the target, which in turn may require the initiator to know some friends of friends of the target. In other words, if the ini-tiator would like to plan for some actions, he may need the topological information of the social network between the target and himself, which unfortunately is unavailable due to privacy issues. In this situation, it would thus be prefer-able if the social networking service providers, given a target specified by the initiator, could provide a step-by-step guid-ance in the form of recommendations to assist the initiator to make friends towards the target.

In this paper, we are making a grand suggestion for the social networking service providers to support active friend-ing. Our sketch is as follows. By iteratively recommending a list of candidates who are friends of at least one existing friend of the initiator, a social networking service provider may support active friending, without violating the current practice of privacy preservation in recommendations. Con-
F or the rest of the paper, we refer to the friending initiator and friending target as initiator and target for short. si der an initiator who specifies a friending target. The so-cial networking service, based on its proprietary algorithms, recommends a set of friending candidates who may likely increase the chance for the target to accept the eventual invitation from the initiator. Similar to the recommenda-tions for passive friending, the recommendation list consists of only the friends of existing friends of the initiator. By ap-pearance, the initiator follows the recommendations to send invitations to candidates on the list. The invitation is dis-played to a candidate along with the list of common friends between the initiator and the candidate so as to encourage acceptance of the invitation. 2 As such, the aforementioned step is repeated until the friending target appears in the recommendation list and an invitation is sent by the initia-tor. It is clear, however, that the recommendations made for passive friending may not work well because active friending is target-oriented. The recommended candidates should be carefully chosen for the initiator, guiding him to approach the friending target step by step.

To support active friending, the key issue is on the de-sign of the algorithms that select the recommendation can-didates. A simple scheme is to provide recommendations by unveiling the shortest path between the initiator and the target in the social network, i.e., recommending one candi-date at each step along the path. As such, the initiator can gradually approach the target by becoming acquainted with the individuals on the path. However, this shortest-path rec-ommendation approach may fail as soon as a middle-person does not accept the friending invitation (since only one can-didate is included in the recommendation list for each step). To address this issue, it is desirable to recommend multi-ple candidates at each step since the initiator is more likely to share more common friends with the target and thereby more likely to get accepted by the target. This is espe-cially true, if broadcasting of the friending invitations can be made to all neighbors of the initiator X  X  friends. In other words, the probability to reach the friending target and get accepted can be effectively maximized as an enormous num-ber of paths are flooded with invitations to approach the target. Nevertheless, the mechanism of friending invitations is abused here because the above undirectional broadcast aimlessly involves many unnecessary neighbors. Moreover, the initiator may not want to handle a large number of te-dious invitations.
 In this paper, we study a new optimization problem, called Acceptance Probability Maximization (APM) , for active friend-ing in online social networks. The service providers, eager to explore new monetary tools to increase revenue, may con-sider charging users for the active friending service. 3 Given an initiator s , a friending target t , and the maximal number r
R of invitations allowed to be issued by the initiator, APM finds a set R of r R nodes, such that s can sequentially send invitations to the nodes in R in order to approach t . The ob-jective is to maximize the acceptance probability at t of the friending invitation when s send it to t . The parameter r controls the trade-off between the expected acceptance prob-ability of t and the anticipated efforts made by s for active friending t . 4 Again, R is not returned to s as a whole due to privacy concerns. Instead, only a subset R s of nodes that are adjacent to the existing friends of s are recommended
Th is is also a common practice for passive friending in ex-isting social networking services such as Facebook, Google+, and LinkedIn.
Recent news has reported that Facebook now allows its user to pay to promote their and their friends X  posts [1].
Since s is not aware of the network topology and the dis-tance to t , it is not reasonable to let s directly specify r Instead, it is more promising for the service provider to list a set of r R and the corresponding acceptance probabilities and monetary costs, so that the user can choose a proper r according to her available budget. to s , while other subsets of R will be recommended to s as appropriate in later steps 5 .

The spread maximization problem [6, 7, 14, 17], which also adopts a probabilistic influence model, is different from APM in this paper. Given an initiator s and his friends, APM intends to discover an effective subgraph (i.e., R ) be-tween the seeds and t . On the other hand, the spread max-imization problem, given the topology of the whole social network, aims to find a given number of seeds to maximize the size of the whole spread t .

To tackle the APM problem, we propose three algorithms: i) Range-based Greedy (RG) algorithm, ii) Selective Invita-tion with Tree Aggregation (SITA) algorithm, and iii) Selec-tive Invitation with Tree and In-Node Aggregation (SITINA) algorithm. RG selects candidates by taking into account their acceptance probability and the remaining budget of invitations, leading to the best recommendations for each step. However, the algorithm does not achieve the optimal acceptance probability of the invitation to a target due to the lack of coordinated friending efforts. On the other hand, aiming to systematically select the nodes for recommenda-tion, SITA is designed with dynamic programming to find nodes which may result in a coordinated friending effort to increase the acceptance probability of the target. SITA is able to obtain the optimal solution, yet has an exponential time complexity. To address the efficiency issue, SITINA further refines the ideas in SITA by carefully aggregating some information gathered during processing to alleviate re-dundant computation in future steps and thus obtains the optimal solution for APM in polynomial time. The contri-butions of this paper are summarized as follows.
The rest of this paper is organized as follows. Section 2 introduces a model for invitation acceptance and formulates APM. Section 3 reviews the related work. Section 4 presents the SITA and SITINA algorithms proposed for APM. Sec-tion 5 reports our user study and experimental results. Fi-nally, Section 6 concludes the paper.
I n this paper, APM is formulated as an offline optimiza-tion problem intending to maximize the expected acceptance probability. In an online scenario where the initiator does not send invitations to some nodes in R s or some nodes in R s do not accept the invitations, a new APM with renewed invitation budget could be re-issued to obtain adapted rec-ommendations. While this scenario raises important issues, it is beyond the scope of this paper.
The notion of acceptance probability refers to an invita-tion. Thus, here we first discuss two important factors that may affect the acceptance probability of a friending invita-tion in the environment of online social networking services and describe how in this work we determine whether an indi-vidual would accept a received invitation. Next, we explain why the issue of deriving the acceptance probability over a social network is very challenging and how we address this is-sue by adopting an approximate probability based on a max-imum influence in-arborescence (MIIA) tree. We formulate the acceptance probability maximization (APM) problem based on the MIIA tree. The invitation acceptance model follows the existing social influence and homophily models, which have been justified in the literature. Later in Section 5, the invitation acceptance model will be validated by a user study with 169 volunteers.
In the process of active friending, while friending candi-dates are recommended for the initiator to send invitations, whether the invitees will accept the invitations remains un-certain. Based on prior research in sociology and online social networks [12, 20, 21], we argue that when a person receives an invitation over an online social network, the de-cision of the invitee depends primarily on two important factors: i) the social in uence factor [13, 14], and ii) the ho-mophily factor [9, 12, 21]. Here, the social influence factor represents the influence from the surroundings (i.e., common friends) of individuals in the social network on the decision. On the other hand, the homophily factor captures the fact that each individual in a social network has a distinctive set of personal characteristics, and the similarities and com-patibilities among the characteristics of two individuals can strongly influence whether they will become friends [12]. Be-tween them, social influence comes from established social links, while the homophily between two individuals may ex-ist without a prerequisite of established social relationship. Thus, we consider these two factors separately but aim to treat them in a uniformed fashion in our derivation of the acceptance probability for an invitation.

As the social influence factor involves the structure of the social network (i.e., the common friends of the individuals), we first consider the acceptance probability of an invita-tion in terms of social influence. 6 Let the social network be represented as a social graph G ( V; E ) where V consists of all the users in the social networking system and E be the established social links among the users. An edge weight w u,v  X  [0 ; 1] on the directed edge ( u; v )  X  E probabilisti-cally denotes the social influence of u upon v . The probabil-ity can be derived according to an existing method [13, 14] according to the interaction in online social networks, while the setting of negative social influence has also been intro-duced in [4]. Thus, if u is associated with an invitation from a user s to v (i.e., u is a common friend of s and v ), w is the probability for v to be socially influenced by u to ac-cept the invitation. 7 Hence, the acceptance probability for an invitation can be derived by taking into account the so-cial influences of all the existing common friends associated with an invitation. It is assumed that each common friend u has an independent social influence on the invitee v to ac-cept the friending invitation [9, 12, 20] and thus the overall acceptance probability can be obtained by aggregating the individual social influences. Later, the user study in Section
W e intend to extend it with homophily factor later.
The social influence probability has been extensively used to quantify the probability of success in the process of confor-mity, assimilation, and persuasion in Social Psychology [9, 12, 20]. While how to obtain the edge weight is an active research topic [13, 24], it is out of scope of this paper. 5 demonstrates that the influence probability and homophily probability derived according to the literature are consistent to the real probabilities measured from the users.
While obtaining the acceptance probability for a given invitation (as described above) is simple, deriving the ac-ceptance probability for a friending target t who does not have any common friends with the initiator s becomes very challenging because more than one invitation needs to be issued (so as to make some common friends first), and there are complicated correlations among user acceptance events for users between s and t .

Moreover, our ultimate task is to find a set R of interme-diate users between s and t with size at most r R for s to send invitations to, so as to maximize the acceptance probability of t . We call this problem the acceptance probability maxi-mization (APM) problem. Due to the combinatorial nature of this invitation set R , it is still difficult to find such a set to maximize the acceptance probability of t even in cases where computing the acceptance probability is easy. The following theorem makes the above two hardness precise.
Theorem 1. Given the set of neighbors S of the initia-tor, computing the acceptance probability of t is #P-hard. Moreover, nding a set R with size r R that maximizes the acceptance probability of target t is NP-hard, even for cases when computing acceptance probability is easy.

Proof. We prove the theorem in [30].
The spread maximization problem in the Independent Cas-cade (IC) model [17] also faces the challenge in Theorem 1. To efficiently address this issue, an approximate IC model, called MIA, has been proposed [4, 5, 6]. The social influ-ence from a person u to another person v is effectively ap-proximated by their maximum in uence path (MIP), where the social influence w u,v on the path ( u; v ) is the maximum weight among all the possible paths from u to v . MIA cre-ates a maximum influence in-arborescence, i.e., a directed tree, M IIA ( t; ) including the union of every MIP to t with the probability of social influence at least from a set S of leaf nodes. The MIA model has been widely adopted to de-scribe the phenomenon of social influence in the literature [4, 5, 6] with the following definition on activation probability, which is basically the same as the acceptance probability if s broadcasts friending invitations to all nodes in M IIA ( t; ). Definition 1. The activation probability of a node v in M IIA ( t; ) is ap  X  ( v; S; M IIA ( t; ))) =  X   X   X  1  X  where N in ( v ) is the set of in-neighbors of v .
Note that ap  X  ( u; S; M IIA ( t; ))  X  w u,v is the joint proba-bility that u is activated and successfully influences v , and u can never influence v if it is not activated. Therefore, the activation probability of a node v can be derived according to the activation probability of all its in-neighbors, i.e., the child nodes in the tree. Since S is the set the leaf nodes, the activation probabilities of all nodes in M IIA ( t; ) can be efficiently derived in a bottom-up manner from S toward t .

In light of the similarity between the IC model and the decision model for invitation acceptance in active friending with no budget limitation of invitations, we also exploit MIA to tackle the APM problem. M IIA ( t; ) is constructed by the MIPs from all friends of s to t , i.e., S is the set of friends of s . In other words, is set as 0 to ensure that the social influence from every friend is fully incorporated. Neverthe-less, different from the activation probability in the litera-ture, which allows the influence to propagate via every node Fi gure 1: Combining the social in uence and ho-mophily factors in M IIA ( t; ), the acceptance probability for active friend-ing allows the social influence to take effect on the invitation acceptance only via a set R of nodes to be selected in our problem. Thus, we define the acceptance probability for an invitation to node v as follows.

Definition 2. The acceptance probability for an invita-tion of a node v in M IIA ( t; ) is ap ( v; S; R; M IIA ( t; ))) =  X   X   X   X   X  1  X  where N in ( v ) is the set of in-neighbors of v .
Equipped with MIA, we are able to derive the acceptance probability of t efficiently with a simple iterative approach from the leaf nodes to the root (i.e., t ). The above MIA ar-borescence incorporates only the social influence factor. As discussed earlier, the homophily factor between the initiator and the receiver of an invitation is also crucial for friending. Homophily in [9, 12, 21] represents the probability for two individuals u and v to create a new social link due to shared common personal characteristics. Homophily in Sociology manifests the general tendency of people to associate with others and similar others can be quantified with various ap-proaches [2, 16, 29]. The homophily probability can be set according to [3].

To extend MIA, we attach a duplicated s to each node with a directed edge, with a parameter specifying the ho-mophily factor from s to v . The MIP from each candidate to t , together with the directed edge from s to the candi-date, is incorporated in the extended MIA. Therefore, the extended MIA is also an arborescence, where each leaf node is a friend of s or s herself, and those leaf nodes make up the set S .

Figure 1 shows an example of the extended MIA. For each internal node, such as v 1 , its acceptance probability factors are not only the social influence from v 3 and v 4 but also the homophily factor between s and v 1 .

In this paper, the influence probability and homophily probability are derived according to the above literature without associating them with different weights. Later, user study will be presented in Section 5, and the results show that the real acceptance probability complies with the ac-ceptance probability of the above model. In this work, we formulate an optimization problem, called Acceptance Probability Maximization (APM) , to select a given number of intermediate people to systematically approach the friending target t based on M IIA ( t; ). The APM prob-lem is formally defined as follows.
 Acceptance Probability Maximization (APM). Given a social network G ( V; E ), an initiator s and a friending tar-get t , select a set R of r R users for s to send friending invi-tations such that the acceptance probability ap ( t; S; R; M IIA ( v; )) is maximized, where S is the friends of s , including s itself.

As analyzed later, the optimal solution to APM can be obtained in O ( n V r R 2 ) time 8 , where n V is the number of nodes in a social network, and r R is the total number of invitations allowed. The setting of r R has been discussed in Section 1. It is worth noting that APM maximizes the ac-ceptance probability of t , instead of minimizing the number of iterations to approach t , which can be achieved by the shortest path routing in an online social network. Neverthe-less, it is possible to extend APM by limiting the number of edges in an MIP of M IIA ( t; ), to avoid incurring an unaccepted number of iterations in active friending.
Recommendations for passive friending has been explored in the recent few years. Chen et al. [3] demonstrated that friending recommendations based on the topology of an on-line social network are the easiest way to result in the ac-ceptance of an invitation. In contrast, recommendations based on contents posted by users are very powerful for discovering potential new friends with similar interests [3]. Meanwhile, research shows that preferences extracted from social networking applications can be exploited for recom-mendations [15]. To avoid recommending socially distant candidates, users are allowed to specify different social con-straints [23], e.g., the distance between a user and the rec-ommended friending targets, to limit the scope of friending recommendations. Moreover, community information has been explored for recommendations [25]. It is important to note that the aforementioned research work and ideas are proposed for passive friending, where the friending targets are determined by the recommendation engines of social net-working service providers in accordance with various criteria (e.g., preferences and social closeness). Thus, the user can conveniently (but passively ) send an invitation to targets on the recommendation list. Complementary to the conven-tional passive friending paradigm, in this paper, we propose the notion of active friending where a friending target can be specified by the initiator. Accordingly, the recommen-dation service may assist and guide the initiator to actively approach a target.

The impact of social influence has been demonstrated in various applications, such as viral marketing [6, 17, 18] and interest inference [28]. Given an online social network, a major research problem is the seed selection problem, where the seeds correspond to the leaf nodes of MIA (i.e., initiator s and her friends) in our problem. In contrast, APM selects the topology between the friends and t , instead of selecting the seeds. The homophily factor, capturing the tendency of users to connect with similar others, has been considered in several applications, such as by identifying either trusted users [26] or users relationships [31] in social networks.
Notice that some works develop algorithms to return a subgraph or path, such as community detection [19], short-est path [10], pattern matching [11], or graph isomorphism query [8]. In contrast to the shortest path query, our al-gorithms for the APM problem emphasize the returning of a graph, instead of a path. The topology of the returned graph contains valuable neighborhood information of some common friends who can be leveraged to effectively increase the acceptance probability of a friending invitation. The ini-tiator of a pattern matching or a graph isomorphism query needs to specify a subgraph as the query input. However, the goal of this study is to find an unknown graph between s and t to maximize the acceptance probability of a invitation to a friending target.
M IA was proposed to simplify the IC model, which is com-putation intensive and not scalable. Nevertheless, we prove that APM in the IC model is NP-hard for general networks and not submodular in [30].
To tackle the APM problem, we design efficient algo-rithms in support of the invitation recommendations for ac-tive friending. From our earlier discussions, it can be eas-ily observed that the set of intermediate nodes in R , i.e., those to be recommended for invitation, play a crucial role in maximizing the acceptance probability for active friend-ing. Here we first introduce a range-based greedy algorithm which provides some good insights for our other algorithms.
The algorithm, given an invitation budget r R , aims to find the set of invitation candidates for recommendations to an initiator s who would like to make friends with a tar-get t . Let R denote the answer set, which is initialized as empty at the beginning. The algorithm iteratively selects a node v from the neighbors of s  X  X  current friends and adds it to R based on two heuristics: 1) the highest acceptance probability and 2) the number of remaining invitations. The purpose of the former is to minimize the potential waste of a friending invitation, while the latter avoids selecting a node too far away to reach t by constraining that v can only be at most r R  X  X  R | X  1 hops away from t . As a result, the range-based greedy algorithm is inclined to first expand the friend territory of s and then aggressively approach towards the neighborhood of t .
While the range-based greedy algorithm is intuitive, the nodes added to R at separate iterations are not selected in a coordinated fashion. Thus, it is difficult for the range-based greedy algorithm to effectively maximize the accep-tance probability. To address this issue, we propose a dy-namic programming algorithm, call Selective Invitation with Tree Aggregation (SITA) , that finds the optimal solution for APM by exploring the maximum influence in-arborescence tree rooted at t (i.e., M IIA ( t; )) in a bottom-up fashion. SITA starts from the leaf nodes, i.e., nodes without in-neighbors, to explore M IIA ( t; ) in a topological order until t is reached finally. In order to obtain the optimal solution, SITA needs to investigate various allocations of the r R in-vitations to different nodes close to s or t in M IIA ( t; ). However, it is not necessary for SITA to enumerate all pos-sible invitation allocations. Thanks to the tree structure of M IIA ( t; ), for each node v , SITA systematically sum-marizes the best allocation for v , i.e. which generates the highest acceptance probability for v , corresponding to the subtree rooted at v . The summaries will be exploited later by v  X  X  parent node, which is the only out-neighbor of v , to identify the allocation generating the highest probability. The above procedure is repeated iteratively until t is pro-cessed, and the allocation of r R invitations to the subtree rooted at t is the solution returned by SITA.

More specifically, let f v,r denote the maximum acceptance probability for v to accept the invitation from s while r invitations have been sent to the subtree rooted at v in M IIA ( t; ). By first sorting all nodes in topological order to t , we process f v,r of a node v after all f u,r of its in-neighbors u have been processed. Apparently, f v, 0 = 0 for every node v that is not a friend of s because no invitation will be sent to the subtree rooted at v . On the other hand, for every leaf node v , which is a friend of s (or s itself), f v,r r = 0. For all other nodes v in M IIA ( t; ), SITA derives f v,r according to each in-neighbor f u i ,r i as follows, where N in ( v ) denotes the set of in-neighbors of v with
N in ( v ) = d v , u i is an in-neighbor of v , and r i is the number of invitations sent from s to the subtree rooted at u i . An in-vitation is sent to v , while the remaining r  X  1 invitations are distributed to the in-neighbors of v . SITA effectively avoids examining all possible distribution of the r  X  1 invitations to the nodes in the subtree. Instead, Eq. (1) examines only Fi gure 2: The running example(not including s and her edges) f i ,r i of each in-neighbor u i of v on every possible number of invitations r i . In other words, only the in-neighbors of v , instead of all nodes in the subtree, participate in the compu-tation of f v,r to efficiently reduce the computation involved. For each node v , f v,r is derived in ascending order of r until reaching r = min ( r R ; z v ), where z v is the number of nodes that are not friends of s in the subtree rooted at v . SITA stops after f t,r R is obtained. In the following, we show that SITA finds the optimal solution to APM. 9
Lemma 1. Algorithm SITA answers the optimal solution to APM.

Proof. We prove the lemma by contradiction. Assume that the solution from SITA, i.e., f t,r R , is not optimal. Ac-cording to the recurrence, there must exist at least one in-neighbor t 1  X  N in ( t ) together with the number of invita-tions r 1 such that f t 1 ,r 1 is not optimal. Similarly, since f ,r 1 is not optimal, there exists at least one in-neighbor t  X  N in ( t 1 ) of t 1 with the number of invitations r 2 such that f t 2 ,r 2 is non-optimal, r 2 &lt; r 1 . Here in the proof, let f ,r i denote the non-optimal solution found in i -th iteration of the above backtracking process, which will continue and eventually end with a probability f t i ,r i such that 1) t friend of s but f t i , 0  X  = 1 or f t i ,r i = 0 for r i a friend of s but f t i , 0  X  = 0. The above two cases contradict the initial assignment of SITA. The lemma follows. Exa mple. Figure 2 illustrates an example of M IIA ( t; ) with r R = 7, where the nodes denote the users involved in deriving the maximal acceptance probability for t and the numbers labeled on edges denote the influence probability between two nodes. Without loss of generality, s and her homophily edges are not shown in Figure 2. Note that the dark nodes at the leaf are s and her existing friends and thus have the acceptance probability as 1, while the white nodes are the recommendation candidates to be returned by SITA along with their acceptance probabilities. SITA explores M IIA ( t; ) from the dark leaf nodes in a topological order, i.e., the f v,r of a node v is derived after all f u,r of its in-neighbors u are processed. Take u 4 as an example. f u 4 , 0 since no invitation is sent, f u 4 , 1 = 1  X  (1  X  f u 5 , 0 Similarly, for u 8 , f u 8 , 0 = 0 and f u 8 , 1 = 0 : 95. Consider u which has in-neighbors u 7 and u 8 , f u 6 , 0 = 0, f u 6 f for a node v , f v,r is derived for r  X  [0 ; min ( z v ; r u , we only derive r  X  [0 ; 2]. Nevertheless, to find f v,r needs to try different allocations by distributing the number of invitations r i to each different neighbor u i and then com-bining the solutions f u i ,r i to acquire f v,r . For example, to derive f u 17 , 5 , it is necessary to distribute 4 invitations to its in-neighbors, including u 18 , u 20 and u 24 . The possible al-
Du e to the space constraint, we do not show the pseudo-code of SITA here but refer the readers to the next section where a more general SITINA is presented. (1 ; 1 ; 2) and (1 ; 2 ; 1) 10 , which will obtain acceptance proba-bility 0.5738, 0.7539, 0.7081, 0.6674 and 0.7639 respectively. Eventually, we obtain f u 17 , 5 = 0 : 7639. Notice that the num-ber of possible allocations grows exponentially. After all the nodes are processed, we obtain f t, 7 = 0 : 7483. On the other hand, the greedy algorithm RG selects a user v =  X  R with the highest acceptance probability and at most r R  X  X  R | X  hops away from t . Accordingly, it selects u 8 , u 6 , u 15 and u 3 sequentially. In the 6th step, the node with the highest probability is u 10 . However, u 10 is 3-hops away with 3 &gt; r R  X  X  R | X  1 = 2 and thus is not selected. Instead, it selects the node with the next highest acceptance probabil-ity, i.e., u 2 . In the last step, only the root t can be selected, so RG obtains a solution with the acceptance probability as 0.4013. As such, SITA outperforms RG.
Unfortunately, SITA is not a polynomial-time algorithm tribute r  X  1 invitations to the subtrees of the d v in-neighbors corresponding to each node v . To remedy this scalability issue, we propose the Selective Invitation with Tree and In-Node Aggregation (SITINA) to answer APM in polynomial time. SITINA effectively avoids the processing of O ( r d allocations by iteratively finding the best allocation for the first k in-neighbors, which in turn is then exploited to iden-tify the best allocation for the first k + 1 in-neighbors. The process iterates from k = 1 till k = d v . Consequently, the possible allocations for distributing r  X  1 invitations to all in-neighbors are returned by Eq. (1) in O ( d v r R ) time, where d v is the in-degree of v in M IIA ( t; ).

To efficiently derive f v,r in Eq. (1), we number the in-neighbors of v as u 1 , u 2 ... to u d v , where d v is the in-degree of v . Let m v,k,x denote the maximum acceptance proba-bility by sending x invitations to the subtrees of the first k neighbors of v , i.e., u 1 to u k . Initially, m v, 1 ,x x  X  [0 ; r R ]. SITINA derives m v,k,x according to the best result of the first k  X  1 in-neighbors, m where f u k ,x  X  w u k ,v is the acceptance probability for allocat-ing x  X  invitations to the k -th in-neighbor u k , and m v,k is the best solution for allocating x  X  x  X  invitations to the first k  X  1 in-neighbors. By carefully examining different x we can obtain the best solution m v,k,x for a given k .
SITINA starts from k = 1 to k = d v . For each k , SITINA begins with x = 0 until x = min(  X  i  X  [1 ,k ] z u i is the total number of nodes that are not friends of s in the subtrees of the first k in-neighbors. SITINA stops after finding every m v,d v ,x , x  X  [0 ; min ( z v The pseudocode is presented in Algorithm 1, and the fol-lowing lemma indicates that the optimal solution of APM is m Lemma 2. For any v and r , f v,r = m v,d v ,r  X  1 .
Proof. We prove the lemma by contradiction. Assume that m v,d v ,r  X  1 is not optimal. According to the recurrence, there exists at least one r d v such that m v,d v  X  1 , ( r mal, there exists at least one r d v  X  1 such that m m non-optimal solution obtained in the i -th iteration. The backtracking process continues and eventually ends with i = d v  X  1, where m v, 1 ,r 1  X  = f u 1 ,x . It contradicts the ini-tial assignment of m v, 1 ,r 1 , and the lemma follows. So me allocations are eliminated since r i =  X  [0 ; min ( r k x = 1 x = 2 x = 3 x = 4 x = 5 x = 6 1 0.3 15 * * * * * 2 0.3 15 0. 4931 0.6 528 * * * 3 0.3 2 0. 5342 0.6 674 0 .7639 0. 8314 0.8 520
The following theorem proves that the algorithm answers the optimal solution to APM in O ( n V r R 2 ) time, where n is the number of nodes in a social network, and r R is the number of invitations in APM. Note that any algorithm for APM is  X ( n V ) time because reading M IIA ( t; ) as the in-put graph requires  X ( n V ) time. Therefore, SITINA is very efficient, especially in a large social network with n V signif-icantly larger than d max and r R .

Theorem 2. Algorithm SITINA answers the optimal so-lution to APM in O ( n V r R 2 ) time.

Proof. According to Lemma 1 and Lemma 2, SITINA obtains the optimal solution of APM. Recall that n V is the number of nodes in the social network, and d v is the in-degree of a node v in M IIA ( t; ). The algorithm contains O ( n V ) iterations. Each iteration examines a node v to find m v,d v ,x for every x  X  [0 ; min( z v  X  1 ; r R  X  1)], where r number of invitations sent by s in APM. There are O ( d v cases to be considered to explore all m v,d v ,x for v in Eq. (2), and each case requires O ( r R ) time. Therefore, finding m v,d v ,x for a node v needs O ( d v r R 2 ) time, and for all nodes in M IIA ( t; ) it is O ( M IIA ( t; ) is a tree (i.e. | E | = n V  X  1), the overall time complexity is O ( n V r R 2 ). The theorem follows. Exa mple. In the following, we illustrate how SITINA de-of u 17 are ordered as u 18 , u 20 and u 24 . 11 Then, we find all m representing the maximum acceptance probability u 17 ob-tained by only sending x invitations to the subtree rooted at the first in-neighbor, i.e., u 18 . Then we derive m u for x  X  [0 ; min ( z u 18 + z u 20 ; r R  X  1)] to acquire the maxi-mum acceptance probability of u 17 by sending invitations to subtrees rooted at u 18 and u 20 . Notice that different x representing the invitations distributed to the k -th subtree, need to be examined in order to find the optimal solution. For instance, while deriving m u 17 , 3 , 4 , we compare 1 m f w 1 ; z u 17  X  1 ) = 6), the computation of u 17 finishes. Table 1 lists the detailed results, where * denotes the instances with r exceeding the number of people who are not the friends of s in the first k subtrees. 12
We implement active friending in Facebook and conduct a user study and a comprehensive set of experiments to val-idate our idea of active friending and to evaluate the perfor-mance of the proposed algorithms. In the following, we first detail the methodology of our evaluation and then present the results of our user study and experiments.
We adopt a user study and experiments, two complemen-tary approaches, for the performance evaluation. We aim to use the user study to investigate how the recommendation-based active friending approach fares with the approach based on the users X  own strategies (i.e., which they would
T o avoid confusion, we keep their ID in this example with-out renaming them as u 1 , u 2 , and u 3 .
Note that m u 7 ,k,x = 0 when x = 0. A lgorithm 1 Selective Invitation with Tree and In-Node Aggregation (SITINA) Re quire: The query issuer s ; the targeted user t ; the influ-Ensure: A set R of selected users that s sends requests to, 1: Obtain a topological order which orders a node with-2: for v  X  do 3: //obtain all f v,r , r  X  [0 ; min( r R ; n v )] 4: Order in-neighbors of v as u 1 , u 2 ,... u d v 5: m v, 0 ,r  X  0 for  X  r  X  [0 ; min( r R  X  1 ; n r  X  1)] 6: for k = 1 to d v do 7: for x = 0 to min( 9: for x  X  = 0 to min( z u k ; x ) do 15: Backtrack v,k,x to obtain R 16: return R with maximized f t,r R fo llow under the existing environment of social networking services). To perform the user study, we implement an app. on Facebook. Through the app., the user is able to decide whom to invite based on their own strategies to approach the target. Meanwhile, according to the recommendations gen-erated from the Range-Based Greedy (RG) algorithm and the Selective Invitation with Tree and In-Node Aggregation (SITINA) algorithm, respectively, the user also sends alter-native sets of invitations to carry out the active friending activities for comparison. 13 Note that Selective Invitation with Tree Aggregation (SITA) is not considered because it makes exactly the same recommendations as SITINA. We recruited 169 volunteers to participate in the user study. Each volunteer was given 25 targets with varied invitation budgets to work on. The social distances between the volun-teer and the targets were pre-determined in order to collect results for comparison under controlled parameter settings.
We further conducted experiments by simulation to eval-uate the solution quality and efficiency of SITA, SITINA, and RG, implemented in an HP DL580 server with four In-tel Xeon E7-4870 2.4 GHz CPUs and 128 GB RAM. Two large real datasets, FacebookData and FlickrData were used in the experiments. FacebookData contains 60,290 users and 1,545,686 friend links crawled from Facebook [27], and Flick-rData contains 1,846,198 users and 22,613,981 friend links crawled from Flickr [22]. The initiator s and target t are selected uniformly at random.

An important issue faced in both of our user study and the experiments is the social influence and homophily factors captured in the social network, which are required for RG, SITA and SITINA to make recommendations. Most of the previous works adopted a fixed probability (e.g., 1/degree in [17, 6, 4, 7]) or randomly chose a probability from a set a values (e.g., 0.001, 0.01, 0.1 in [6, 4]) due to the absence of real social influence probabilities and homophily probabili-ties. To address this issue, in the user study, we obtained the social influence probability on each edge by mining the interaction history of volunteers in Facebook in accordance with [13, 14]. We also derived the homophily probabilities
T o alleviate the burden of the participants, we send invita-tions on their behalves to the recommended candidates. (a ) Invitation Acceptance Figure 3: Verifying the derived acceptance proba-bility from s to other nodes by mining the profile information in their Facebook pages based on [3]. The social network in the user study is denoted as UserStudyData . As for the social networks in FacebookData and FlickrData that were used for the experiments, we unfortunately do not have personal profiles and historical interactions of the nodes. Thus, we could not generate the social influence probability and ho-mophily probability by mining real data. As a result, we chose to assign the link weights of the social network based on: i) the distributions of social influence and homophily probabilities obtained from our user study (denoted as US), and ii) the Zipf distribution for its ability to capture many phenomena studied in the physical and social sciences [32].
Through the user study, we logged the responses of par-ticipants to invitations and thus were able to calculate the acceptance probabilities corresponding to invitations under various circumstances. Using the collected data, we made a number of comparisons.

First, we wanted to verify that the acceptance probabil-ity of an active friending plan derived based on the MIIA tree (using the mined social influence and homophily prob-abilities as the link weights) are consistent with that of the plan being executed in the user study. To this end, we first verified the accuracy of our invitation acceptance model (for single invitation) by comparing the derived acceptance prob-ability and the actual acceptance probability obtained from real activities in the user study. Figure 3(a), in which re-sults obtained from the user study and our model are respec-tively labeled as Actual and Derived , plots the comparison in terms of the number of common friends in an invitation. As can be seen, the acceptance probabilities of both Ac-tual and Derived increase as the number of common friends in invitations increases. Most importantly, the results are consistently close, indicating that our invitation acceptance model with its social influence and homophily weights used is able to reasonably capture the decision making process for invitations in real life.

Notice that the above comparison focuses on the aspect of invitation acceptance only, without taking into account the social network topology, which we approximate with the MIIA tree. To verify that using the MIIA tree is suf-ficiently effective for active friending planning, we further compared acceptance probability derived using our proposed algorithms with the actual acceptance probability obtained through executing the plan in the user study. Figure 3(b) shows that, under various distances between the initiator and target, the acceptance probabilities derived using MIIA tree is reasonably close to the actual acceptance probabili-ties.

Next, we compared the effectiveness of strategies based on RG, SITINA and the participants X  own heuristics. Fig-ure 4(a) plots the comparison by varying the number of friending invitations, r R . RG and SITINA generally out-perform user heuristics (labeled as User) under all settings. We can observe that the performance of SITINA is gen-erally very good and improves as r R increases, while the performance of User and RG are marked with a leap from r
R = 5 to 10 and remain close thereafter. This indicates the value of the extra computation effort required for deriving (a ) Different r R ( d s,t = 3) Figure 4: Acceptance probability in the user study Fi gure 5: Acceptance probability ( d s,t = 2 ) recommendations due to the increased invitation budget are worthwhile, outperforming the heuristic strategies derived based on RG and human intuition. Figure 4(b) describes the evaluation of the acceptance probability of t under var-ious settings of d s,t . When d s,t is 2, it is more likely that there will be a lot of common friends (due to the nature of social networks), and thus have greater acceptance proba-bilities. When d s,t increases, it becomes more difficult for an initiator to make effective decisions due to the smaller number of common friends and the lack of knowledge about the social network topology that is larger and more complex. As is evident in Figure 4, SITINA has the best performance.
While the user study verifies that SITINA is able to achieve the best performance, the size of the social network is small due to the limited number of volunteers participating in the study. To further validate our ideas in a large-scale social network and to evaluate the scalability of SITINA, we con-ducted an experimental study by simulations. As proven earlier, SITA can obtain the optimal solution of APM. However, it is not scalable as it needs to examine all combinations of invitation allocations. Here we used it as a baseline to compare the efficacy and efficiency with SITINA over social networks of different sizes. First, we compared the results by randomly sampling 50 (initiator, target) pairs using UserStudyData . As depicted in Figure 5, both SITA and SITINA significantly outperform RG in terms of accep-tance probability. Next, we compared their running time, not only using UserStudyData but also the large-scale Face-bookData and FlickrData . As Figure 6 shows, the SITA algorithm takes more than 7 days without returning the an-swer, and is thus not feasible for practical use. For the rest of the experiments, we only compared SITINA with RG.
In this section, we conducted a series of sensitivity tests to examine the impact of different parameters, including the invitation budget ( r R ), the number of friends of s ( N ), the distance between the initiator and target ( d s,t ), and the skewness of social influence and homophily probabilities ( ). In experiments on the impacts of r R , N , d s,t , we tested both the FacebookData (US) and FlickrData (US). 14 As the ob-servations on both datasets are quite similar, we only report both results for the first experiment and skip the FlickrData
US and ZF denote the link weights assigned respectively based on models from the User Study and Zipfian Distribu-tion. ( a) Acceptance probability ( a) Acceptance probability result for the rest due to space constraints. Finally, in the last experiment, we use FacebookData (ZF) to observe how may potentially impact our algorithms.
 Impact of r R . By varying r R and setting the default d s,t of sampled ( s; t ) pairs as 4, we compared SITINA and RG in terms of the acceptance probability and the number of iterations using FacebookData (US) and FlickrData (US) (see Figure 7 and Figure 8, respectively). As can be seen in Figures 7(a) and 8(a), SITINA exhibits a much better per-formance than RG, regardless of the r R . Meanwhile, Figures 7(b) and 8(b) reveal that the longest path in the solution R obtained by SITINA is shorter than that in RG because RG tends to spend invitations on some local users with higher acceptance probabilities. 15 Impact of N . We are interested in finding out whether the number of friends of s has an impact on the performance. Thus, we chose four different groups of initiators s (who have around 100, 200, 300, and 400 friends, respectively) and sampled 100 different targets t to compare their acceptance probabilities. With r R set as 25, Figure 9 shows that as the number of friends increases, the initiators have more choices to reach their targets. In this way, SITINA can find the optimal solution with a high acceptance probability, while the near-sighted RG tends to select the friends of friends with higher acceptance probabilities and eventually results in a small acceptance probability to t .
 Impact of d s,t . We also conducted an experiment to un-derstand the impact of d s,t on the performance. Not surpris-ingly, the finding is consistent with our user study (please refer to Section 5.2 and Figure 4(b)). As such, we do not plot the results here due to the space limitations. Impact of . In the experiments above, social influences and homophily factors are modeled based on our user study, but the distributions in different social networks may vary. Thus, through the skewness parameter , we used the Zip-fian distribution to examine the impact of on our algo-rithms. As can be observed in Figure 10, the distributions of social influence and homophily become more skewed (i.e., increases) and the acceptance probabilities of SITINA and RG drop, because it becomes more difficult for invitations to get accepted when there are smaller numbers of highly influential links while the number of less influential links increases. It is also worth noting that, as the line in the fig-ure indicates, the percentage of performance difference be-tween SITINA and RG (i.e., the acceptance probability of SITINA divided by that of RG) increases, which indicates that SITINA is able to handle a skewed distribution much better than RG.
R G is inclined to take more time to reach t because in-vitations are sequentially sent towards t . The latency of friending a new intermediate node is different for each node. Fi gure 9: Varying N ( FacebookData (US))
Observing the need of active friending in everyday life, this paper formulates a new optimization problem, named Acceptance Probability Maximization (APM), for making friending recommendations on online social networks. We propose the algorithm called Selective Invitation with Tree and In-Node Aggregation (SITINA), to find the optimal so-lution for APM and implement SITINA in Facebook. The user study and experimental results demonstrate that active friending can effectively maximize the acceptance probabil-ity of the friending target.

In our future work, we will first explore the impact of the delay between sending an invitation and acquiring the result in active friending. This is important when the user wants to make friends with the target within certain time frame. In addition, for multiple friending targets, it is not efficient to configure recommendations separately for each target. An idea is to give priority to the intermediate nodes that can approach many targets simultaneously. We will study active friending for a group of targets in our future work. This work was supported in part by the National Science Council, Taiwan, under NSC 101-2628-E-001-003-MY3 and NSC 101-2219-E-002-002. [1] http://money.cnn.com/2012/10/03/technology/ [2] V. Chaoji, S. Ranu, R. Rastogi, and R. Bhatt.
 [3] J. Chen, W. Geyer, C. Dugan, M. J. Muller, and [4] W. Chen, A. Collins, R. Cummings, T. Ke, Z. Liu, [5] W. Chen, W. Lu, and N. Zhang. Time-critical [6] W. Chen, C. Wang, and Y. Wang. Scalable influence [7] W. Chen, Y. Yuan, and L. Zhang. Scalable influence [8] J. Cheng, Y. Ke, W. Ng, and A. Lu. FG-index: [9] R. B. Cialdini and N. J. Goldstein. Social influence: [10] E. Cohen, E. Halperin, H. Kaplan, and U. Zwick. [11] W. Fan, J. Li, S. Ma, H. Wang, and Y. Wu. Graph [12] T. L. Fond and J. Neville. Randomization tests for [13] A. Goyal, F. Bonchi, and L. V. S. Lakshmanan. [14] A. Goyal, F. Bonchi, and L. V. S. Lakshmanan. A [15] I. Guy, N. Zwerdling, D. Carmel, I. Ronen, E. Uziel, [16] S. Hangal, D. MacLean, M. S. Lam, and J. Heer. All [17] D. Kempe, J. M. Kleinberg, and  X  E. Tardos.
 [18] J. Leskovec, A. Krause, C. Guestrin, C. Faloutsos, [19] K. Macropol and A. K. Singh. Scalable discovery of [20] P. V. Marsden and N. E. Friedkin. Network studies of [21] M. McPherson, L. Smith-Lovin, and J. M. Cook. [22] A. Mislove, M. Marcon, K. P. Gummadi, P. Druschel, [23] R. Ronen and O. Shmueli. Evaluating very large [24] K. Saito, R. Nakano, and M. Kimura. Prediction of [25] E. Spertus, M. Sahami, and O. Buyukkokten.
 [26] J. Tang, H. Gao, X. Hu, and H. Liu. Exploiting [27] B. Viswanath, A. Mislove, M. Cha, and K. P.
 [28] Z. Wen and C.-Y. Lin. On the quality of inferring [29] B. Xu, A. Chin, H. Wang, and L. Zhang. Social linking [30] D.-N. Yang, H.-J. Hung, W.-C. Lee, and W. Chen. [31] S.-H. Yang, A. J. Smola, B. Long, H. Zha, and [32] G. K. Zipf. Human behavior and the principle of least
