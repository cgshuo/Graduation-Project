 Classical recommender systems provide users with ranked lists of recommendations, where each one consists of a sin-gle item. However, these ranked lists are not suitable for applications such as trip planning, which deal with hetero-geneous items. In this paper, we focus on the problem of rec-ommending a set of packages to the user, where each package is constituted with a set of different Points of Interest that may constitute a tour. Given a collection of POIs, our goal is to recommend the most interesting packages for the user, where each package satisfies the budget constraints. We for-mally define the problem and we present a novel composite recommendation system, inspired from composite retrieval. Experimental evaluation of our proposed system, using a real-world dataset demonstrates its quality and its ability to improve both diversity and relevance of recommendations. recommender system, package, top-k, diversity, trip plan-ning
Classical recommender systems provide the user with rec-ommendations as ranked lists consisting in single items, e.g., movie, book. In trip planning, a user is interested in sug-gestions for points of interest (POI), that could be very het-erogeneous, e.g., museum, park, restaurant, etc. A tourism recommender system can benefit from a system capable of recommending items organized in packages (bundles) rather than ranked lists, which constitute an improved exploratory experience for the visitor. Then, there is a need to recom-mend for the user the best packages that match his prefer-ences. Furthermore, there may be a cost for visiting each point of interest (time, price, etc.) that the user may want to constraint with a budget. The budget can also simply be the number of items per package. Some so-called  X  third generation  X  travel planning web sites, such as Tripadvisor and YourTour, aim at assisting the user with suggestions of places to visits integrating these kinds of constraints, but the suggestions are often based only on the most popular places and neglect the personalization aspect for the user. Thus, the use of these web sites is very limited. Our con-tribution in this paper is the design and implementation of a suggestion model promoting diversity and inspired from composite retrieval [1]. The approach we propose is to group suggestions in different packages, where each package is con-stituted with a set of diverse POIs. Each POI has a cost and a time of visit associated with it, and the user speci-fies a maximum total budget for any recommended package of items. POIs in each package are chosen using a scoring function that takes into account the personalization, the di-versity and the popularity of the items in the package. The evaluation of our proposed system using a real dataset with data crawled from the website Tripadvisor, shows that our system is competitive, it can improve the diversity of recom-mendations without deteriorating their relevance. The road map of the paper is as follows. After discussing related work in more details (Section 2), we give a formalization of the problem (Section 3). We then describe the model and define the quality criteria of packages. We show how we calculate the score of a package (section 4). In section 5, we describe our algorithm for calculating the top-k packages. In section 6, we subject our system to thorough experimental analy-sis using a real dataset. We investigate the quality of the recommended packages. Finally, we discuss future work and conclude the paper in Section 7.
In [2], authors are interested in finding the top-k tuples of entities. Examples of entities could be cities, hotels and air-lines, while packages are tuples, they query documents using keywords in order to determine entity scores. A package in their framework has a fixed size, e.g., one city, one hotel and one airline. Instead, in our work, we allow packages of vari-able size, subject constraints specified by the user. Other closely related work is [4] where a framework is proposed to recommend travel itineraries from online user-generated data, like picture uploads. They formulate the problem of recommending travel itineraries that might be interesting for users while the travel time is under a given time bud-get. However, in this work, the value (score) of each POI is only determined by the number of times it was mentioned by other users in the social network, whereas in our work, the importance of a POI is determined not only by the popular-ity of the POI but also with a personalized score depending on user X  X  preferences and his ratings for other POIs. Finally, the closest work to our X  X  is [6], where the authors explore returning approximate solutions to composite recommenda-tions. The focus of the work is on using a Fagin-style algo-rithm for variable size packages and proving its optimality. The same authors further develop the idea into a prototype of recommender system for travel planning (CompRec) [7]. However, the score of an item is just the predicted rating of a user, while we believe that using also the popularity of items improves the relevance of the recommended packages. Furthermore, none of these works accounts for the diversity in packages which leads to a better satisfaction of the user.
Given a set I of POIs, a set U of users, an active user u  X  U and a POI i  X  I . We denote by c ( i ) the cost of POI i and by t ( i ) the average time needed for visiting POI i . Given a set of POIs P  X  I , we define Score ( P ) the score of a package P , which estimates the quality of a package (see more details in section 4.2.4) , c ( P ) = P i  X  P c ( i ) the cost for a package P and t ( P ) = P i  X  P t ( i ) the time to visit POIs in package P . Given a cost budget B c and a time budget B t a package P is said Valid iff c ( P )  X  B c and t ( P )  X  B Problem 1. Top-k Composite recommendations Given a set I of POIs, an active user u with his prefer-ences background, a cost budget B c , a time budget B t and an integer k, a top-k composite recommender system has to determine the top-k packages P 1 , P 2 , ..., P k such that each P i has c ( P i )  X  B c , t ( P i )  X  B t , and among all Valid pack-ages, P 1 , P 2 , ..., P k have the k highest scores, i.e Score ( P )  X  Score ( P i ) for all Valid packages P /  X  X  P 1 , P 2 , ..., P
Our distance between POIs is based on a taxonomy of hierarchical topic categories organized in a tree structure. Formally, we used a domain ontology developed by [3] to represent these categories. Let be I the set of all possible POIs. Each POI in I is associated to one category in the taxonomy, e.g. museum, park, building, etc. We define the topical distance dist t : I  X  I  X  N between two POIs i and j as the length of the shortest path between the two categories of i and j in the taxonomy: where c i , c j are the categories of POIs i , j and sp is the shortest path function. The topical similarity evaluates in which measure two POIs i and j deal with similar thematics or topics. The similarity depends on the topical distance between the two POIs i , j :
In order to suggest the top-k packages of POIs for a spe-cific user, it is necessary to have a criteria estimating how  X  X ood X  is a package P according to a user u . We denote it by the score of a package. To this end, we need to measure how a new POI not visited yet by the user would be inter-esting for him. The popularity is also an important factor in the general appreciation of a POI. In fact, the proper-ties depending only on the popularity of a POI are often more important than the similarity with the user profile [5]. Moreover, we assume that the user is not only interested by visiting POIs he would like, but instead visiting POIs that best cover his interests. For example, a user who likes muse-ums will not be satisfied with a recommended package with only museums. The diversity of POIs in the same package is thus an important criteria for the quality of the package.
The overall popularity measures the popularity of a POI i  X  I : where j designates the POIs of I and pop : I  X  N represents a popularity indicator of a POI. By extension, the overall popularity of a package P is:
Most of travel recommender systems focus on the model-ing of user preferences in order to get a ranking of the most pertinent POIs. However, the diversity of suggestions has never been the focus point. Nevertheless, it has been sug-gested that the diversity has a large positive effect on the satisfaction of the user [8]. So, we adapt the intra list di-versity introduced by [8] for a package of POIs P , we define the intra package diversity: The estimated appreciation evaluates to what extent a POI i that a user has not yet rated would be interesting. The estimated appreciation of a user u  X  U for a POI i  X  I is calculated using a simple item-item collaborative filtering: where j designates POIs of the sample S i , the set of similar POIs rated by the user u , and rating u  X  [0 , 1] associates for a POI the rating given by the user u , divided by the maximum rate. By extension, the estimated appreciation for a user u for a package P is defined by the mean of the estimated appreciation for POIs forming the package:
The score of a package evaluates the quality of POIs that form a package for a user u according to the overall popular-ity, the diversity and the estimated appreciation. The score for a package P for a user u is calculated by: where C eapp , C opop , C div are positive Coefficients that mod-ulate respectively, the importance of the estimated appreci-ation, the overall popularity and the diversity in the score function.
The construction of top-k packages is done in two steps: first, a set of valid packages are produced in large quantities with a cardinality c &gt;&gt; k , packages are formed by aggrega-tion around a pivot POI and taking into account the quality criteria. Our approach for forming a set of good valid pack-ages is inspired from the algorithm  X  X OBO X  ( Bundles One-By-One ) introduced by Amer-Yahia et al. [1]. We adopted this algorithm to take into account the quality criteria of the packages defined in Section 4.2. The goal of this algo-rithm is to create c valid packages that respect the budget constraints. It is inspired from k  X  nn clustering. At each step a POI is chosen as pivot, and a valid package with max-imum score is built around that pivot. The pseudo code is described in algorithm 1 .

BOBO starts with an empty set of packages. Then, a list of candidates pivots POIs is constituted, by ranking I in the descending order of popularity. As long as the number of formed packages is less than c , at each iteration the first POI is taken from the set of Pivots , and a package is built around it. This is done by the routine Pick bundle described in algorithm 2. This routine greedily keeps picking the next POI that maximizes the score of the package formed around the pivot, as far as the cost budget and the time budget constraints are satisfied. Let us go back to BOBO X  X  main loop: once a candidate package is created, it is added to  X  X ackages X  and its elements are removed from  X  P ivots  X  so that they are not longer used.
 Algorithm 1: BOBO Algorithm 2: Pick bundle
Once the required number of packages has been created, they are ranked following their respective scores (Section 4.2.4). Afterwards, we select the k packages having the best scores.
The goal of our experiments were: (1) evaluate the rele-vance of the packages recommended by our algorithm, and (2) evaluate their diversity as well. In order to have a set of POIs constituting potential recommendations, we crawled data from Tripadvisor. Each POI has a thematic category organized in a tree structure, which allows us to construct our similarity measure. In addition, Tripadvisor provides for a POI the number of users rating for a POI, we used it as an indicator of its popularity, for estimating the function pop : I  X  N defined in Section 4.2.1. For our experiments, we crawled users rating information from POIs in the five most popular cities in France. We exclude POIs that have very few or no reviews. The dataset contains 40635 ratings for 1183 POIs by 18227 users, so as we see the data is very sparse. We associate with each POI its cost and its average time of visit crawled also from Tripadvisor. The average price of POIs was close to e 7 and the average time for vis-iting a POI ranges from 30 minutes to 3 hours. Because of the large sparsity of the underlying user rating matrix, we selected the 20 most active users as our sample for testing the algorithms.
 The following measures are used for evaluation : P recision : is calculated as the ratio of recommended POIs that are relevant to the total number of recommended POIs.
 Diversity : we extend the intralist diversity introduced by Ziegler et al [8] to a set of k packages { P 1 , ..., P k Intralist Diversity (MILD) is defined.
F P D : the F-measure is the harmonic mean of precision and diversity :
Our goal was to test the impact of personalization (per), popularity (pop) and diversity (div) on the quality of recom-mendations. To this end, we compared several versions of our system, corresponding to different possible combinations of the factors of C eapp , C opop C div . Each version corresponds to a different combination of the parameters. Versions we tested are summarized in the Table 1. The name of each ver-sion indicates the use or not of the different aspects when constituting the set of packages.

We tested our system varying the number of returned packages k , we vary it between four values: { 5 , 10 , 15 , 20 } . (%) P(%) D(%) F P D (%) P(%) D(%) F P D (%) pop 57.75 47.89 52.36 53.5 51.33 52.39 51.84 49.43 50.59 50.18 48.61 49.38 The cost budget is fixed to e 60 and the time budget fixed to 600 minutes. We tested our algorithms under various cost and time budgets with very similar results, so other budgets are omitted for lack of space.
To evaluate also the effectiveness of the proposed system, we compare our results with the package recommendation method proposed by Xie et al. [6], which is the closest work to ours. The authors also computed the estimated appre-ciation of POIs using an item-item collaborative filtering approach, without taking in consideration the popularity of POIs and the diversity aspect of recommendations.
Results of our versions compared to the competitive ap-proach according to precision, diversity and F P D are re-ported in Table 2. In all our versions, we can notice a high influence of the popularity of POIs with respect to the pre-cision. It is important to underline that the popularity is a significant factor as well as the personalization. In fact, in most cases, the  X  X op X  version leads to a better precision than the  X  X er X  version and the  X  X op +div X  version better than the  X  X er+div X  version. These results are in accordance with [5], which highlights the importance of the popularity and its effect on the relevance of recommendations. Vary-ing the number of packages, the  X  X er+pop X  version always performs the best precision and outperform the algorithm of Xie et al. , due to combining the personalization and the pop-ularity. Without surprise, the  X  X iv X  version is the one who performs the best diversity compared to all others. However, it has also the worst values for precision. Concerning the F-measure between precision and diversity,we notice that the  X  X er+pop+div X  realizes the best compromise, and outper-forms the competitive algorithm. This version tends to pro-mote a large diversity, performs better than Xie et al. , and is not significantly different in precision comparing to the  X  X er + pop X  version. Thus, the  X  X er+pop+div X  is the best approach when considering both precision and diversity.
Motivated by applications of trip planning, we studied the problem of recommending packages consisting of sets of POIs. Our composite recommendation system consists of ranking packages according to a score function, where the score of a package depends on the estimated appreciation, the overall popularity and the diversity of POIs constitut-ing the package. We formalized the problem of generating top-k packages recommendations that are under budgets, where a cost and a time is incurred by visiting each rec-ommended POI and the budgets are user specified. We de-veloped an algorithm for retrieving the top-k packages with best scores. The evaluation of our system using a real world dataset crawled from the website Tripadvisor demonstrates its quality and its ability to improve both the relevance and the diversity of recommendations. We plan now to realize a study of the proposed system with real users on a situation of mobility, where the localization context will take an im-portant role on the recommendation process. Furthermore, it will be interesting to compare the preferences of the user between a recommender system providing classical ranked lists and our composite recommender system. A mobile ap-plication is currently being developed, so that we can test it later with real users and study the exploratory dimension achieved by the composite approach and its impact on users satisfaction. [1] S. Amer-Yahia, F. Bonchi, C. Castillo, E. Feuerstein, [2] A. Angel, S. Chaudhuri, G. Das, and N. Koudas. [3] L. Castillo, E. Armengol, E. Onaind  X  X a, L. Sebasti  X a, [4] M. De Choudhury, M. Feldman, S. Amer-Yahia, [5] H. Steck. Item popularity and recommendation [6] M. Xie, L. V. Lakshmanan, and P. T. Wood. Breaking [7] M. Xie, L. V. Lakshmanan, and P. T. Wood.
 [8] C.-N. Ziegler, S. M. McNee, J. A. Konstan, and
