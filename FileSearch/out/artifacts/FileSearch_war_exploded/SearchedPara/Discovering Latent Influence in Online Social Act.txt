 Many people share their activities with others through on-line communities. These shared activities have an impact on other users X  activities. For example, users are likely to become interested in items that are adopted (e.g. liked, bought and shared) by their friends. In this paper, we pro-pose a probabilistic model for discovering latent influence from sequences of item adoption events. An inhomogeneous Poisson process is used for modeling a sequence, in which adoption by a user triggers the subsequent adoption of the same item by other users. For modeling adoption of multiple items, we employ multiple inhomogeneous Poisson processes, which share parameters, such as influence for each user and relations between users. The proposed model can be used for finding influential users, discovering relations between users and predicting item popularity in the future. We present an efficient Bayesian inference procedure of the proposed model based on the stochastic EM algorithm. The effectiveness of the proposed model is demonstrated by using real data sets in a social bookmark sharing service.
 H.2.8 [ Database Management ]: Database Applications X  Data Mining ; I.2.6 [ Artificial Intelligence ]: Learning; I.5.1 [ Pattern Recognition ]: Model X  Statistical Algorithms Poisson processes, social community, latent variable models, Bayesian inference
Many people share their activities with others through on-line communities, such as social sharing, social networking, and microblogging services. For example, in social shar-ing services, users share their favorite items, such as web pages [1], photographs [2], video [3], music [4] and scientific papers [5]. These shared activities have an impact on other users X  activities. Users are likely to become interested in fa-vorite items of their friends. A web page that is praised by an influential user in a social network service is likely to get popular.
 We can obtain activity data from these online services. However, we cannot generally obtain data that directly de-scribe which activity has had an impact on the following ac-tivities. The user interactions in some online communities have been referred to as  X  X allot box communication X  [34], in which users do not directly interact with each other by exchanging messages, but they implicitly interact with one another by expressing their preferences on the shared items.
In this paper, we propose a probabilistic model for discov-ering latent influence between users in social communities. As activities, we consider adopting items by users over time, such as sharing web pages, voting for music and joining com-munities. The given data is multiple event sequences, where each event sequence is associated to an item, and contains user and timestamp information for each event of adopting the item. The proposed model can be used for finding in-fluential users, discovering relations between users and pre-dicting trends in item popularity in the future.

With the proposed model, we assume that each user has some latent degree of influence. Each adoption event can trigger the subsequent adoption events for the same item by other users. The possibility of triggering depends on the influence of the users of the preceding events. The pro-posed model also assumes that the influence differs among pairs of users. Friends can have an impact more than people who have never met. We use a cascade Poisson process [30] for modeling an event sequence of adopting an item. By using multiple cascade Poisson processes for modeling mul-tiple event sequences and sharing their parameters, we can infer influence for each user and relations between users. We call the proposed model shared cascade Poisson processes (SCPP).

We present an efficient probabilistic inference procedure for the proposed model based on the stochastic EM algo-rithm. In the E-step, we sample the latent trigger for each event from the preceding events using collapsed Gibbs sam-pling while analytically integrating out parameters for influ-ences and relations. By integrating out parameters, we can drastically reduce the memory requirement. In the M-step, we estimate the other model parameters by maximizing the joint likelihood. By alternately iterating E-and M-steps, we i nfer the proposed model from the given data.

The paper is organized as follows: In Section 2, we out-line related work. In Section 3, we propose the shared cas-cade Poisson processes for discovering latent influence from multiple sequences of item adoption events. We present its Bayesian inference procedure in Section 4, and discussion on scalability of the inference in Section 5. In Section 6, we describe a sampling procedure for generating data from the inferred model. In Section 7, we demonstrate the effec-tiveness of the proposed framework by using real data sets in a social bookmark sharing service. Finally, we present concluding remarks in Section 8.
Great interest is being shown in developing methods for analyzing online social communities. Those methods are used for viral marketing [12, 28, 21, 6], ranking influential users [31, 18] and personalized recommender systems [32, 11, 19, 7]. Learning degree of influence of users is useful for pre-dicting future item adoption and recommendations [31, 11]. However, in many social communities, users may not neces-sarily declare explicit social ties among themselves even if such functionality exists and the degree of influence of each tie is rarely explicitly declared. Thus, estimating influences and relations among users from their activities are impor-tant.

Influences in social communities are often analyzed by us-ing information diffusion models, such as independent cas-cade models [13, 35, 15] and linear threshold models [16]. They usually assume discrete time although events occur in continuous time. Some information diffusion models in continuous time have been proposed [17, 29]. The proposed model is based on Poisson processes, which are widely used for modeling events in continuous time. Poisson processes have been extensively studied in statistics, and have elegant theoretical properties, such as superposition and subsam-pling properties [22]. We can use these properties for devel-oping a procedure of generating samples as described in Sec-tion 6, and for extending the proposed model. We develop an efficient Bayesian inference procedure, where parameters are analytically integrated out. With continuous time infor-mation diffusion models [29], influences are estimated given the network structure of users, where each edge represents the existence of influence. On the other hand, the proposed model can efficiently estimate influences without the net-work structure because influence parameters, which require memory of the order of the square of user size, integrated out in the Bayesian inference. In recent years, methods for estimating influences without the network structure based on maximum likelihood have been proposed [25, 14, 15].
The proposed model is an extension of the cascade Poisson process [30], which models a sequence of cascading events. We simultaneously model multiple sequences of adoption events for multiple items by sharing parameters, such as influences and relations among users. In [30], parameters are estimated based on maximum likelihood. We take a Bayesian approach that discourages overfitting during infer-ence. Reciprocating Hawkes Processes [9], which are inho-mogeneous Poisson processes, are used for discovering social structures from direct interaction time-series data, such as message exchanges. The proposed model does not use in-teraction data between users, but uses item adoption event Figure 1: Example of the given data with three items and seven users. Latent triggers are shown by arrows between users. data to model how users indirectly interact with each other and influence each other in social communities.
Suppose that we have a set of | I | event sequences D = { D i } i  X  I , where I is a set of items. An event sequence for item i consists of N i events, where an event is a pair of time u in adopts item i at time t in . Without loss of generality, we can assume that events are sorted by their timestamps, t in  X  t in  X  for n &lt; n  X  . Our notation is summarized in Table 1. An example of the data is shown in Figure 1. Note that triggers that are shown by arrows between users are not observed.

In our model, an event can trigger further events in the future. This property is referred to as cascading, where the occurrence of an event sprouts the possibility of a chain of further events. For example, in Figure 1, adoption of Item-1 by User-A causes adoption of Item-1 by User-B and User-F. In particular, we use the following intensity function for modeling the rate that user u adopts item i at time t in-fluenced by the event that user u  X  adopts item i at time t , Here,  X  u  X   X  0 represents the influence of user u  X  on the other users. Note that this user influence remains the same across Figure 2: Parameters in the proposed shared cas-cade Poisson processes. all items. The second factor  X  u  X  u  X  0 represents the strength of the relation from user u  X  to user u , where we assume P u  X  U  X  u  X  u = 1. This relation matrix is shared across items. The third factor exp(  X   X  ( t  X  t  X  )) models decay of the influence over time with parameter  X   X  0. Since an event cannot have an effect on past events, the intensity is zero when t  X   X  t . A decaying rate over time is a simple but natural assumption since, in general, trends evolve or are replaced over time. There is no influence from other event sequences, and events of item i do not trigger events of other items i  X  6 = i .
Events can occur without influence from preceding events according to the following background intensity function, Here,  X  i  X  0 represents the rate that item i is adopted with-out being triggered by the preceding events. It represents the general popularity of item i ; if it is high, many users adopt the item without copying or influence from peers.  X  0 u  X  0 represents the probability that a user who adopts an item without any trigger is in fact user u , and P u  X  U  X  In Figure 1, User-A, User-E and User-G adopt Item-1 inde-pendently from the preceding events. The first event for each item always occurs from the background as, by defini-tion, there are no previous users to be influenced by. The background intensity can be seen as influence from outside the social community, such as newspapers, TV programs and online news sites as [26].

Figure 2 shows the parameters in the proposed shared cascade Poisson processes: (a) relations between users,  X  = over time,  X  , (c) influence for each user {  X  u } u  X  U , and (d) popularity for each item {  X  i } i  X  I . Here, U +  X  U  X  X  0 } represents a set of users contain a virtual user who is used for the background intensity as well as actual users U . Notice that influence can occur in both directions amongst a pair of users e.g. in Figure 2 (a) we see that User-B and User-C influence each other.

Let D ( n ) i be an event sequence of item i , which consists of events caused by the n th event, D (0) i be an event sequence without triggers. They are disjoint, D ( n ) i  X  D ( n  X  ) n 6 = n  X  . We assume that each sequence is generated by a Figure 3: Dynamics of intensity in the shared cas-ca de Poisson processes.
 Poisson process as follows, for events from the background intensity, and for events triggered by the preceding event n = 1 ,  X  X  X  , N
The whole event sequence of item i is represented by their processes. The superposition of Poisson processes is also a Poisson process (a proof can be found in [20]) and we use this fact to rewrite the generative process using a Poisson process, where the recursive intensity function is given by where D it = { ( t  X  , u  X  ) | ( t  X  , u  X  )  X  D i and t  X  of events before time t .
 Figure 3 shows the dynamics of intensity for each item. The horizontal line in each item represents the background intensity, which is constant over time, but different depend-ing on the item. At the time of an event occurrence, the in-tensity increases depending on the influence of its user. For example, since User-A has high influence, the event by User-A increases the intensity largely. The intensity decreases over time with parameter  X  . The total intensity is the su-perposition of the background intensity and intensities from the preceding events.

The probability of multiple event sequences D given pa-rameters  X  = {  X  m } m  X  U  X  I ,  X  and  X  is described as follows, where we can analytically calculate the integral as follows, This value is called the expectation function, which repre-sents the expected number of occurrences in the time period from 0 to T .
We present a Bayesian inference algorithm for the shared cascade Poisson processes based on a stochastic EM algo-rithm. The algorithm alternates collapsed Gibbs sampling of latent triggers and maximum joint likelihood estimation of hyperparameters, while integrating out parameters for in-fluences, popularities and relations.

We introduce latent variables for simplifying the inference without changing the model. Let z in  X  X  0 , 1 ,  X  X  X  , n  X  t } be the latent index of the event which caused the ar-rival of the n th event in item i , where z in = 0 indicates that the event was triggered by background intensity. The trigger event must occur before the arrival of this n th event, therefore t in  X  &lt; t in , since cause precedes effect. By using latent variable z , the recursive intensity function (6) can be written as where In words, (9) states that the intensity is a sum of intensities for each possible trigger of the event.

Combining (7) X (10), the joint probability of data D and and  X  is as follows, p ( D , Z |  X  ,  X  ,  X  )  X  We assume a Gamma prior for each of user influences and item popularities  X  m , m  X  U  X  I , and a Dirichlet prior for relations  X  u , u  X  U + , where | X | represents the number of elements in the set. The choice of a Gamma and Dirichlet prior permit analytic marginalization over the parameters  X  and  X  , respectively, and the joint likelihood is given by ber of events for user u  X  caused by user u , M u = P u  X   X  U is the number of total events caused by user u , and M i = P n =1  X  ( z in = 0) is the number of events caused by the back-ground intensity in item i . Here,  X  (  X  ) represents indicator function;  X  ( A ) = 1 if A is true, and  X  ( A ) = 0 otherwise. For each item i  X  I , C i = T , and for each user u  X  U , where D u is a set of timestamps of events of user u . Based on the joint likelihood (14), we develop a stochastic EM procedure for the inference. In the E-step, given the current state of all but one latent assignment z in , a new value for z in is sampled from the following probability, p ( z in = y | D , Z \ in ,  X ,  X , a, b )  X  = 8 &lt; : sents the value or set excluding the n th event in item i .
In the M-step, the decay parameter  X  and Dirichlet pa-rameter  X  are estimated by maximizing the logarithm of the joint likelihood (14). We estimate  X  using Newton X  X  method. The objective function to be maximized as a function of  X  is given by The update rule is given by where the first and second derivatives of the joint likelihood with respect to  X  are described in Appendix A.

We estimate the Dirichlet parameter  X  by using the fixed-point iteration method described in [24]. The update rule is where  X (  X  ) is the digamma function defined by  X ( x ) =
B y alternately iterating the E-step with (16) and M-step with (18) X (19), we can estimate latent variables Z , decay parameter  X  and Dirichlet parameter  X  . Note that because we are able to analytically integrate at all other parameters (influences  X  u , item popularities  X  i , and the relation matrix  X  ), there is very little risk of overfitting. The posteriors for  X  and  X  are given by Thus, we can obtain point estimates of the integrated out parameters as follows, which can be used for finding influential users, and which can be used for discovering relations between users. In the experiments, we fixed the hyperparameters as follows: a = b = 1. The proposed model has relation parameters between users  X  , which require memory of O ( | U | 2 ). The memory require-ment increases quadratically with the number of users if we were to explicitly sample the relation parameters in our in-ference procedure. It makes analyzing data with a huge number of users prohibitively expensive. However, in the proposed inference procedure, we do not need to store these parameters as they are integrated out. Instead, we need to store count M uu  X  for u  X  U + and u  X   X  U , which represents the number of events of user u  X  which were caused by user u . In general, most of the counts are zero since the count is incremented only when the two users adopt an item within a short time of one another. In addition, the Bayesian infer-ence procedure exploits sparsity. When M u  X  u &gt; M u  X  X  u probability of selecting the event of user u  X  is high, because the probability is proportional to M u  X  u in (16). The model has  X  X he rich gets richer X  effect. In the experiment using the  X  X cience X  data set with 4,543 users, which is described in Section 7, 59,590 elements of the influence parameters have nonzero value after the inference, which make up only 13.1 elements per user. Thus, by using the proposed inference, we can analyze data with a huge number of users efficiently.
The most demanding part of the inference is Gibbs sam-pling in the E-step. The computational complexity of each Gibbs sampling (16) is O ( R ), where R is the average num-ber of events for each item, since we have R options for each latent variable on average. In total, the computational com-plexity becomes O ( IR 2 ). The computational time for the inference with the  X  X cience X  data set, which consists of activ-ities in four years, was 12 minutes when using a computer with 3.20GHz CPU.
 Algorithm 1 G enerate an event sequence from shared cas-cade Poisson Processes from time T to T  X  for item i . Input: P arameters,  X  ,  X  ,  X  , and data before T , D = { ( t Output: Data from T to T  X  , D  X  = { ( t n , u n ) } n&gt;N 1: D  X   X  X  X  2: n  X  N 3: loop 4: s n  X  Exponential(1) 6: u n +1  X  Discrete(  X   X  i ( t n +1 , u )) 7: if t n +1 &gt; T  X  then 8: break 9: end if 10: n  X  n + 1 12: end loop
B y generating sequences, we can simulate when users adopt items in the future. We can generate event sequences based on the shared cascade Poisson processes given parameters and the data up to the present time. Based on Monte Carlo method, we can predict informative values, such as the num-ber of adoptions for each item, by averaging the simulation results. The simulation can be also used for targeting users who are influential and trigger the most events, which is useful for sociology and viral marketing [21, 6].
Algorithm 1 shows the procedure of generating an event sequence for item i from time T to T  X  , which is based on  X Cinlar X  X  method [10, 27]. The inputs are parameters,  X  ,  X  , exponential random variable is sampled, which corresponds to a timestamp from a homogeneous Poisson process with rate one. At line 5, we obtain a timestamp of the shared cas-cade Poisson processes by inverting the expectation function R
P u  X  U  X  i ( t  X  , u ) dt  X  . The solution is given by where W (  X  ) is the Lambert W function, which solves the equation x = W ( x ) exp( W ( x )), and
E = 1 At line 6, user u n +1 is sampled depending on the intensity at time t n +1 , where is the intensity normalized to sum to one. This term repre-sents the probability that the user adopting item i at time t is u given the previous history of user item adoptions. Al-gorithm 1 can be used to efficiently forecast future event sequences and simulate the effect of various social interven-tions.
W e evaluated the proposed shared cascade Poisson pro-cesses using large data sets collected from a social bookmark sharing service, Delicious [1]. Here, adopting an item cor-responds to bookmarking a web page. The original data, described in [33], is distributed by the authors for research purpose. We used nine data sets obtained from the origi-nal data, where each data set consist of events of adopting items that are tagged with one of nine frequently used tags. The tags and their statistics are shown in Table 2. The sets of users and items are different depending on each data set. We omit users who appear less than 30 times in each data set. The data was collected between September 2003 to December 2007. Since the data only contain the date on which a certain item was adopted, the timestamp in all our experiments is measured in days.

We evaluated the predictive performance using the log-arithm of the likelihood for timestamps at the test period from T to T  X  , which is given by
L = X where D test i represents the test data for item i . For each data set, we prepared 10 different training and test data splits by changing the test time period from 10 to 100 days. Figure 4 shows the test likelihoods, which are averaged by the test period, T  X   X  T . We compared the proposed shared cascade Poisson processes (SCPP) with the homogeneous Poisson processes (PP). The proposed model achieved higher predictive performance than the Poisson processes with all of the data sets except for the  X  X ews X  data set. In general, the test likelihood decreases as the test period increases, because long term prediction is more difficult than short term prediction. Many web pages in the  X  X ews X  data set are adopted by influence from portal or news sites, not by influence of other users, which may explain why the Poisson processes achieved better performance.

We also evaluated the predictive performance of users by using the logarithm of the likelihood for users at the test period as follows, We compared the proposed model with latent Dirichlet allo-cation (LDA) [8], and multinomial distribution as the base-line. LDA is a widely used probabilistic model for discrete data, such as text documents, where each document consists Figure 7: Relations between users estimated by the p roposed model in the  X  X cience X  data set. Each node represents a user, and users who are influenced are connected. We omit isolated users who are not con-nected with others. of a set of words. In our data sets, a word corresponds to a user, and a document corresponds to an event sequence of an item. Figure 5 shows the result. The proposed model achieved higher user predictive performance than the other methods with all of the data sets except for the  X  X ews X  data set. These results indicate that modeling influences and re-lations is important for analyzing social activity data sets.
Figure 6 shows the event sequences in the  X  X cience X  data set with the estimated results of influence between events. Some events occur in a short time interval, and they were learned to have been triggered by the precedent events in the sequence. Events which occurred in isolation were estimated as being generated from the background intensity.
Figure 7 shows relations between users estimated by the proposed model in the  X  X cience X  data set. The relation graph is visualized using the method in [23] so that connected nodes are located closely. Most users have a small number of edges, but a few users have a lot of edges; these would be the main influencers or most influenced depending on the direction. Some users form clusters, where users in each cluster are connected to each other, representing communi-ties of influence. Overall the influence graph for this data set is quite sparse.

Figure 8 shows the values of influences and popularities estimated by the proposed model in the  X  X cience X  data set, where user and item indices were sorted by their values. Only a small number of users and items have high influence or popularity, whilst most have very small values.
In this paper, we have proposed a probabilistic model for discovering latent influence in social activities. Our model is based on multiple inhomogeneous Poisson processes, in which events are triggered by preceding events, and param-eters are shared among the Poisson processes. We also pre-sented its efficient Bayesian inference procedure based on the stochastic EM algorithm. We have confirmed experi-mentally that the proposed model can appropriately model sequences of item adoption events in social bookmark shar-ing data sets. [1] http://www.delicious.com/ . [2] http://http://www.flickr.com/ . [3] http://www.youtube.com/ . [4] http://www.last.fm/ . [5] http://www.citeulike.org/ . [6] N. Agarwal and H. Liu. Blogosphere: research issues, [7] C. Au Yeung and T. Iwata. Capturing implicit user [8] D. M. Blei, A. Y. Ng, and M. I. Jordan. Latent [9] C. Blundell, K. Heller, and J. Beck. Modelling [10] E.  X Cinlar. Introduction to stochastic processes , [11] D. Crandall, D. Cosley, D. Huttenlocher, J. Kleinberg, [12] P. Domingos and M. Richardson. Mining the network [13] J. Goldenberg, B. Libai, and E. Muller. Talk of the [14] M. Gomez-Rodriguez, D. Balduzzi, and B. Sch  X  olkopf. [15] M. Gomez-Rodriguez, J. Leskovec, and B. Sch  X  olkopf. [16] M. Granovetter. Threshold models of collective [17] D. Gruhl, R. Guha, D. Liben-Nowell, and A. Tomkins. connected between them. F igure 8: Estimated user influence (a), and item popularity (b) in the  X  X cience X  data set. User and item indices are sorted by their values. [18] M. Katagiri and M. Etoh. Social influence modeling [19] N. Kawamae, H. Sakano, and T. Yamada. Personalized [20] J. F. C. Kingman. Poisson processes , volume 3. [21] J. Leskovec, L. A. Adamic, and B. A. Huberman. The [22] D. Lin, E. Grimson, and J. Fisher. Construction of [23] T. Matsubayashi and T. Yamada. A force-directed [24] T. Minka. Estimating a Dirichlet distribution, 2000. [25] S. A. Myers and J. Leskovec. On the convexity of [26] S. A. Myers, C. Zhu, and J. Leskovec. Information [27] R. Pasupathy. Generating Poisson arrival streams. [28] M. Richardson and P. Domingos. Mining [29] K. Saito, M. Kimura, K. Ohara, and H. Motoda. [30] A. Simma and M. I. Jordan. Modeling events with [31] X. Song, Y. Chi, K. Hino, and B. L. Tseng.
 [32] X. Song, B. L. Tseng, C.-Y. Lin, and M.-T. Sun. [33] R. Wetzker, C. Zimmermann, and C. Bauckhage. [34] M. Xia, Y. Huang, W. Duan, and A. B. Whinston. [35] J. Yang and J. Leskovec. Modeling information
This appendix describes the first and second derivatives of the joint likelihood (14) with regard to decay parameter  X  , which are required for estimating the decay parameter based on Newton X  X  method. The first derivative of S (  X  ) is given by and the second derivative of S is given by where A u =  X C u , A  X  u =  X  P t  X  D
