 ORIGINAL PAPER Matthew Hurst Abstract Tables appearing in natural language documents provide a compact method for presenting relational infor-mation in an immediate and intuitive manner, while simul-taneously organizing and indexing that information. Despite their ubiquity and obvious utility, tables have not received the same level of formal characterization enjoyed by sen-tential text. Rather, they are modeled in terms of geom-etry, simple hierarchies of strings and database-like rela-tional structures. Tables have been the focus of a large vol-ume of research in the document image analysis field and lately, have received particular attention from researchers in-terested in extracting information from non-trivial elements of web pages. This paper provides a framework for repre-senting tables at both the semantic and structural levels. It presents a representation of the indexing structures present in tables and the relationship between these structures and the underlying categories .
 Keywords Table understanding  X  Information extraction 1 Table processing systems The recent increase in research studying automatic systems dealing with the location, recognition and understanding of tables is a consequence of the ubiquitous information over-load that computational linguists and language engineers are now enjoying [ 5 , 9 , 10 , 11 , 13 , 15 ]. The web demonstrates the utility of tables as a direct and compact document ele-ment for presenting anything from simple statistics (e.g. vote counts) and the formated results of online database queries, to complex relations indicating the results of detailed scien-tific inquiry or the organization of complex conceptual hi-erarchies (e.g. the classification of meteorite types and their observable features). In the more traditional media, tables have a history that pre-dates that of sentential text. tems capable of capturing and manipulating tables has a significant, and ongoing, pre-web history in the document image processing community (e.g. [ 12 ]). Document image understanding tackles the problem of converting bitmaps of scanned documents into computer readable formats that may then be searched, classified, clustered and so on. In addition, there is a large body of work on the editing and formatting of tables [ 2 , 19 , 20 ], as well as investigations into the psy-chological aspects of information presentation in tabular for-mats [ 3 , 21 ].
 nessed inquiry into the problem of getting at the content of the table in a meaningful manner by providing an un-derstanding of the structure of the table and the manner in which different elements interact to produce a meaningful  X  X eading X  [ 5 , 7 ].
 construction of tables from low-level input such as document images and plain text documents, and that dealing with the interpretation and manipulation of abstract representations of tables X  X ave proposed and exploited characterizations of the table suitable to the various tasks. These characteriza-tions have been couched at a variety of formal levels. In other cases, the work reported has relied on our intuitive un-derstanding of what a  X  X able X  is.
 table in terms of lines and unanalysed text blocks [ 8 ]. At a slightly higher level, the table is viewed as either a set of cells located on a two-dimensional grid [ 12 ], or as a structure laid out in an XY tree [ 1 ]. At the highest level [ 19 ], a table is modeled as a set of categories (of strings) which are com-bined in some way to provide a mapping to a data domain. ing with the appropriate level of analysis. However, tables have yet to be analysed in a manner similar to natural lan-guage text. The basic content element of these models is the string, and the semantic differences that distinguish the ta-ble fragments in Fig. 1 , for example, cannot be represented or analysed. as a presentation of a set of relations holding between orga-nized hierarchical concepts ( categories ). It then proceeds to indicate the relationships between this characterization and the strings (viewed as syntactic natural language compo-nents) that appear in the table X  X emonstrating the interac-tion between the syntactic structure of the string content of the table, the structure of the table and the manner in which the strings may represent elements of categories, category structure and relations between categories. The theory also provides an understanding of the cause and form of the var-ious types of ambiguity that the table presents to automatic systems due to the limitations of the two-dimensional grid that the table is expressed on and the overloading of table structure.
 basic terms that will assist research into table processing sys-tems by delivering the following:  X  a framework for representing categories, an indication of  X  an understanding of the relations that the table describes.  X  a pragmatic approach to deriving the categories of a ta-following considerations: a theory allows us to characterize tables into classes in a principled manner and evaluate meth-ods tackling table processing tasks in terms of their ability to deal with different classes of tables; understand the distribu-tion of table classes in order to tune systems to give the best performance; understand the significance of certain features of tables which may be exploited and evaluated by machine learning methods.
 distinct from the logical structure of the document (a hierar-chy of sections, paragraphs and sentences) and the syntac-tic structure of the sentential text, is the manner in which its structure is overloaded. The table uses its simple two-dimensional geometry to denote both the organization of its terms and the relations that hold between those terms. ble at the relational level are nodes in a hierarchy. Their ex-pression often requires the expression in some form of that hierarchy. This is in contrast to the sentence whose basic elements are lexical items. The challenge of understanding the table is to recognize the categories and to understand the relationships holding between them. Both of these meaning-ful components are expressed via a common set of simple mechanisms based on the geometry of the table. 2 Categories, relations and the interpretation of tables A table X  X  main utility is the expression of one or more rela-tionships that hold between two or more sets of concepts. To provide a context for our discussion, we first define the basic relation. 1 Definition 1 A relation , R ,definedoverasetofsets, S = { S product. The elements of the relation are called tuples. bers of the Cartesian product for which it holds, or by a func-tion mapping the Cartesian product to the boolean domain. Forexample,ifset A is { a , b } and set B is { x , y } the Carte-sian product is the set of tuples { a , x , a , y , b , x and a relation R ={ t 0 , t 1 } is { a , y , b , y } which may be implemented as a function that maps each element from the Cartesian product to the boolean domain { true , false } , i.e. f R : A  X  B  X  X  true , false } .
 defined we term categories (they are sometimes referred to as domains in the table processing and database literature), which are sets of concepts organized to a greater or lesser extent according to some hierarchical principle. Providing an interpretation of a table means that we must define the set of categories described by, present in or implied by the table, and the set of relations defined for combinations of those categories.
 Definition 2 For a table, T , an interpretation, [[ T ]] is a tuple
S , R ,where S is an interpretation of the set of categories described by the table and R is a representation of the set of relations described by the table.
 how we map the syntactic description of T to the semantic description S , R . This may be done by providing the syn-tactic apparatus for describing the table then showing how we can map its basic elements and compositions of its ba-sic elements, to the universe of semantic objects, sets and logical statements and relations.
 stand the differences between the syntactic X  X emantic divide in sentential text and that in tables. From there, we will mo-tivate and discuss certain types of categories and relations with a view to developing a pragmatic model of tables that is both useful for everyday interpretive and generative sys-tems but contains all the elements required for a complete model-theoretic approach. 3 The expression of categories and the interaction between linguistic syntax and category structure When considering the manner in which language is used to express that an object or concept is an instance of a (more general) concept, a member of a class of objects or repre-sents a sub-category of a category, we can observe the fol-lowing patterns in sentential text. syntactic:  X  100 dollars  X ,  X  $ 100  X , semantic:  X  New York is a City  X ,  X  100 is a contextual:  X  How many dollars?  X  X  X  100.  X ,  X  100, guistic objects. To distinguish this with the structure of ta-bles, we don X  X  refer to the syntax of the table, but to the struc-ture of the table. The structure of the table will be defined in detail in Sect. 5 , for now we introduce the structure in the table as being some sort of path connecting the cells which indicates the order in which they are read. If two cells, c c , are adjacent on that path, then we indicate this using the notation c i  X  c j . The arrow indicates the order in which the cells are read. Siblings, children of a common parent, may be indicated by set notation. For convenience, we use the textual content of a cell to denote the cell. For example, this notation may be used to describe the first table in Fig. 1 in the following manner : {  X  X ame X   X   X  X red X  ,  X  X ame X   X   X  X saac X  ,  X  X olour X   X   X  X rown X  ,  X  X olour X   X   X  X lue X  ,  X  X red X   X  X rown X  ,  X  X saac X   X   X  X lue X  } . 2 press membership of a set. Below we describe a number of way in which set membership can be described within a ta-ble, followed by discussion. structural:  X  City  X   X   X  New York  X , X  Amounts in syntactic:  X  $ 100  X . structural, syntactic: {  X $ 500  X  ,...,  X  100  X  ,... } , X  $  X  contextual:  X  All Amounts in Dollars  X , X  100  X (im-with an ambiguity. In some cases the structure is used to express the existence of some form of log-ical relationship between elements (for example, a type of relationship in  X  City  X   X   X  New York  X ). In other cases, the structure of the table reflects the syntac-tic structure we might find in sentential text (for ex-ample,  X  $  X   X   X  100  X ,  X  The number of students taking  X   X   X  Computer Science  X ) or omits syntactic material due to sibling-hood ( {  X $ 500  X  ,...,  X  100  X  } see that they are of the form C i  X  C j where C i and C j expressions which may be interpreted as definitions of sets of concepts, and that there is a logical relationship between C i and C j ,andthat C j is a subset of C i .Asimpleexam-ple is the type of relationship. For example, the structure  X  Animal  X   X   X  Swine  X  may be interpreted as [[ X  Animal  X  X ] = { x : animal ( x ) } ,[[ X  Swine  X  X ] = { x : swine ( x ) } relationship between the two sets is type of . We call such a relationship a category constraint .
 fine the abstract category X  X he nodes in the hierarchy. Note that the examples above represent trivial hierarchical struc-tures of unit depth.
 Definition 3 An abstract category , C , is a tuple c , where c is an expression defining a set of objects, S is a set of categories (the sub-categories) and h is an expression of the relationship between C and each member of S .
 define certain types of categories with varying formal-ity. Uschold and Gruninger [ 18 ] suggested four levels of formality when describing ontological systems: highly infor-mal (natural language), semi-informal (restricted and struc-tured form of natural language), semi-formal (a formally defined language) and rigorously formal. In addition, we can introduce certain modes. An arbitrary category is any type of category for which h is undefined. An anonymous cate-gory is one for which both c and h are undefined.
 ural language :  X  A type of organization of  X  X  the set  X  X  of animals  X . This may be captured by what we will call a literal category .
 Definition 4 A literal category , L , is a tuple R , h where R is a set of strings, and S is a set of sub-categories and h is a string indicating the nature of the relationship be-tween L and its sub-categories S .
 expressed as a literal category as follows. We will motivate and discuss this type of category in the course of this paper.
 what we might term ontological categories and include  X  X ype of X  and  X  X art of X  hierarchies. For example, the orga-nization of life forms into certain classes. The Tree of Life project [ 14 ] is a perfect demonstration of this type of hierar-chy starting off with the division of  X  life form  X  into sub-classes {  X  Eubacteria  X ,  X  Archaea  X ,  X  Eukaryotes  X  } Definitions of the manner in which the category was par-titioned are provided informally, such as the following: with additional linguistic features. The entry for eukaryotes is shown in Fig. 2 .
 intuitive. There appears to be some form of commonality in the manner in which subsequent partitions of categories into sub-categories is carried out. This may be contrasted with less intuitive sequences of sub-categories such as the category in Fig. 3 .
 from arbitrary categories? archy are in some way consistent throughout the hierarchy, whereas the type of features in the animal hierarchy that are inspected are not. One way we might indicate the type of relationship between a category and its sub-categories is in terms of the types of features used to partition the set of ob-jects in the category into the set of sub-categories. Definition 5 A logical category , C ,isatuple e , h , S where e is a logical expression defining a set of semantic objects, S is a set of logical categories and h is an expres-sion of the type of relationship between C and each member of S .
 by defining h according to the type of features used to par-tition e into the sub-categories S . This allows us to distin-guish what we intuitively consider to be arbitrary categories from those which have a discernible type. Of course, argu-ments always exists which would ensure any collection of features belong together, so we term the division of features into types a view . It is the definition of the view that carries the obligation of representing some notion of  X  X eatures of the same type X . What we aim to do here is provide a meaningful representation of this mechanism.
 manner (assuming some knowledge representation model-ing the universe of things).
 Definition 6  X  The feature set of O , F O , is the set of fea- X  X f T is a set of features, a feature, f ,isof type T if f V }= F O and { T  X  V }= X  .
 used to make the partition of objects. This specification then allows us to characterize the definition of sub-categories as those objects in the category that have specific values for specific features.
 the set { sex } we can write: so the tuple contains empty positions denoted by and {} .) to partition the category in terms of feature types provides a description of the relationship between a category and it sub-categories.
 be represented by the appropriate composition of the expres-sions used to define the hierarchy of categories. For example, { x : x  X  A  X  value of ( sex , x , male ) } . We can also state that for any sub-category of a category, the set defined by that sub-category is a subset of the category; and that no sub-categories of a category intersect. Naturally we use similar compositions to define the set of object formed by the in-teraction between two categories that are not hierarchically associated such as the set formed by the intersection if ani-mals and male objects were presented as discrete categories (as perhaps they should be).
 between the table X  X  structure and set of categories that may be driven out by analyzing dependencies in the data. These so-called table categories offer a compromise between the overly general literal category and the restrictive and elusive form of the logical category. 4 Types of relation expressed in the table We can distinguish two types of category. An access cate-gory is one used to index the central information presented in the table. For example, the category indicating the set of people by their names in the first row of tables in Fig. 1 is an access category. The categories that are indexed we term data categories. The set of eye colours in the same table is a data category. There is a clear relationship between these two types of categories and what we call the functional de-scription of the table (to be introduced later) which distin-guished the layout of the table in a similar manner to the head, stub and matrix.
 pressed by a table.

Class 1 The first type of relation is that which takes a num-
Class 2 The second type of relation is that which is defined Class 3 The third type is that which associates elements of The class of a relation, R , is denoted by a superscript: , R 3 and is further illustrtated in Sect. 9 . 3 might term indexed tables .An indexed table is one which present a series of relations indexed by one or more access categories. However, relations may be presented in a tabu-lar format in an anonymous manner like those shown in the table in Fig. 4 a). This table introduces data values found at the intersection of two categories. However, significantly, it presents those data values in meaningful groups. In this case, the relation holds for tuples grouping four data values (i.e. the rows in the table). 5 An abstract model of table layout and structure So far we have discussed the categories and relations that go to make up a table. To complete the model we need to consider the geometry, layout and structure of the table. plest abstract terms.
 Definition 7 Atable, T , is a set of cells C .
 on the page. Abstracting the absolute location of the cell in terms of the media by which the table is presented, we can view the cells as having relative location. This can be mod-eled by providing a function r mapping between the set of cells and pairs of relative co-ordinates.
 tinguished as being the structures through which the essen-tial data presented by the table is accessed are termed the head  X  X he upper most area of access cells, and stub  X  X he left most area of access cells. We generalize these layout-based terms by using the functional characterizations that they suggest. Cells in the table are either part of the access structure ( access cells ), part of the data presented by the ta-ble ( data cells )orhavesome other function (for example, cells containing expository material). This aspect of the ta-ble may be modeled by f a mapping from cells to an element of the set { access , data , other } .
 tion is intended to represent the author X  X  intent (or primary intent if there are multiple uses) in presenting the data in a table. A reader of the table may derive relationships and information from the table other than that intended by the author. In such situations a different assignment of function is required to model the reader X  X  use of the table. For such alternate uses, one can generally imagine restructuring the table to better facilitate this novel use.
 by which a reader navigates the cells in the table. From any cell, there are a set of cells that may be read next on route to the final data cell. We call this structure the simple table relation and it can be expressed by a relation, S , indicating which pairs of cells form the source and sink of an arc in the reading.
 structure of the table is as follows.
 Definition 8 Atable, T , is a tuple C , r , f , S where C set of cells, r is a function mapping from cells to relative co-ordinates ( r : C  X  ( X 0 , Y 0 , X 1 , Y 1 ) ), f is a function mapping the domain of cells to the domain functional de-scriptions ( f : C  X  X  access , data , other } )and S is a relation defining the navigation of the table ( S : C  X  C ). 6 Syntactic and structural table content In Sect. 3 , we looked at how the table expresses categorical information. Here we review this process and relate it to the logical/literal category distinction. A logical category may be expressed by using the following syntactic and structural devices. First we look at the possible methods for forming syntactic objects.  X  we may use a string generated from the logical expres- X  we may use a string generated from the relationship  X  we may use a string generated from the logical expres- X  we may use a combination of these elements derived syntactic structure we now look at the structural expression of the logical category.  X  any syntactic expression derived as an expression of  X  the structure of the category may be mapped to the struc-lated to the literal categories. A logical category may be mapped to a number of literal categories and a literal cat-egory may be formed from number of logical categories. tial ambiguities that the logical/literal category distinction causes. If we have two logical categories forming a table ( A , B), one will form the access category and the other the data category. The table will describe a relation holding between the two categories  X  R : A  X  B . We have discussed how the categories may be expressed in the table, however there is also the possibility to express the relation in the table as well.
 mation in a table, we could construct those tables shown in Fig. 6 (  X  is used to denote the set of natural language ex-pression which may be interpreted as the semantic object  X  and  X  is used to denote an example from that set).  X  X  A is the set { a , b } .  X  B is the set { x , y } .  X  R is the relation { a , x , b , y } .

R may be  X  B in terms of A  X , or simply B which is a member of R . In other words, there is an am-biguity which may effect the formation of literal categories if B  X  R = X  . A set of tables realizing these conditions is showninFig. 6 together with concrete examples expressing the following information.  X  A is the set of boxes { a , b } , the name of a is  X  Oak  X  X nd  X  B is the set of objects { x , y } , the name of x is  X  ball  X   X  R is the relation contains , { a , x , b , y } .
 as all the above tables will be expressed with the same set of constructs.
 unrestricted nature, is that, when constructing literal cate-gories in the analysis of the table, we want to construct those categories that will help us find a mapping to the log-ical categories, and not to blindly mimic the structure of the table. 7 Table relations: structural dependancies in the table and data driven category analysis We need a principled way to form literal categories, oth-erwise we will just end up with literal categories that sim-ply reflect the functional characterization of the table, with a head category, a stub category and a data category. A method to derive suitable literal categories is outlined below in con-cert with an illustrative example using the table in Fig. 7 . Definition 9 A reading path to a data cell is an ordered set of the string content of the cells encountered by the reader traversing the table either horizontally or vertically from the outside of the table to the data cell according to the STR excluding the data cell.
 For example, the set {  X  State  X  ,  X  q  X  ,  X  probability  X  reading path for the data cell  X  1.0  X .
 Definition 10 A reading of a data cell is the union of all the reading paths to that cell.
 For the same cell, the reading would be: Definition 11 A reading set is the set of readings for all the data cells in the table The reading set from the example table is as follows. Definition 12 A string which always appears with another string in a reading is said to be dependent on that string. A dependency is a tuple s i , s j indicating that s i is dependent on s j and the dependency relation defines the set of string dependencies. Strings that never appear together in a reading are mutually independent .
 For example,  X  q  X  X salwayspresentwhen X  States  X  X s present.
 Definition 13 The dependency index for a dependency is a count of the number of times the dependency appears in any reading contained in the reading set.
 The dependency  X  q  X  ,  X  States  X  occurs four times in the reading set so its dependency index is 4.
 Definition 14 The reading index for a string is a count of the number of times the string appears in any reading contained in the reading set.
 Definition 15 We chain dependencies to form a maximal dependency in the following way. If s i , s j holds in the de-pendency relation and s j , s k holds in the dependency rela-tion then we form the maximal dependency s i , s j , s k .This is carried out exhaustively until the maximal dependency can no longer be extended.
 Definition 16 The set of all maximal dependencies is the maximal dependency set .
 dependency set is the count of the maximal dependencies it appears in and is limited to the the string X  X  reading index. This encodes the intuition that, in terms of semantics, a cell X  X  contents can X  X  modify the contents of cells from more than one category.
 pendency set due to this restriction, the dependency set may be modified to effectively filter out bogus dependencies (due to the numeric constraint outlined above) thereby resulting in singular dependency sets. This action causes alterations to be made to the maximal dependency set.
 ple requires that we make a decision about where the string  X  States  X  is to go. This decision is motivated by the num-ber of occurrences that the string represents in the current dependencies set: in total 24. In this case, the following is suggested: {  X  probability  X  } , {  X   X  } , {  X  b  X  }} egory values and category values which contain mutually in-dependent strings can be formed into categories . forming literal categories given the structure and layout of a table. It cannot discover the presence of expressions indi-cating relations. 8 Interpreting abstract tables We have now presented representational systems for the ta-ble in terms of geometry, layout and structure as well as for categories and relations. These two characterizations of the table allow us to define an interpretation of the table. Given the various ambiguities that the table presents to the interpre-tation process we define two different types of interpretation based on the abstraction of the category presented earlier. These two types are based on the following general form. Definition 17 If T is a table, an interpretation T is a map-ping from C , r , f , S to C , R where C is a set of cate-gories and R is the triple R 1 , R 2 , R 3 representing the set of Class 1, 2 and 3 relations.
 Providing specifications for C allows us to define the literal interpretation Definition 18 If T is a table, a literal interpretation [[ a mapping from C , r , f , S to S , R where S is a set of literal categories. and the logical interpretation Definition 19 If T is a table, a logical interpretation [[ is a mapping from C , r , f , S to L , R where L is a set of logical categories.
 less refined, definition of what it means to understand the ta-ble. The logical interpretation allows us to model the process of understanding in a more precise manner. 9 An illustrative example Consider the following set of objects.  X  Y is the set of years of the Common Era.  X  A is the set of American Cities.  X  M is the set of murder events.  X  I is the set of integers.
 which holds for each tuple d , l , i (d  X  Y , l  X  A , i  X  I exactly when i  X | { X  e  X  M : event location ( e , l )  X  event time ( e , d ) }|  X  i.e. the number of murders that occurred in a certain city in a certain year.
 shown in Fig. 4 b (ignoring for the moment the  X  Percent Change  X ). Following the method outlined in Sect. 7 ,we can derive the following literal categories (note that we use a summary notation here in which we elide the definition of the relationship between a category and its sub-categories). The structure is shown in Fig. 8 .
 = { t 1 0 , t 1 1 ,... } , is as follows. {  X  X ew York X  ,  X 1990 X  ,  X 2,245 X  , ...  X  X hiladelphia X  ,  X 1996 X  ,  X 431 X  } (Note that the strings are used to indicate the respective lit-eral categories.) are a number of interpretations that we could derive. It may expresses the set of murders ( M ) or it may represent the relation R .
 to include an indication of the change in the number of murders as a percentage of those committed in 1990. where R is the set of rational numbers. This situation is il-lustrated by the the complete table shown in Fig. 4 bandis an example of a Class 2 relation.
 change in murders between 1990 and 1996 for certain Amer-ican cities ,isasfollows. 10 Conclusion The aim of this paper was to develop representational mech-anisms capable of characterizing tables in a precise and de-tailed manner. In addition, we wanted to ensure that the framework developed would be of practical use, and so the strategy of providing a number of specializations of a gen-eral representation was used to increase the utility of the methods when applied to real world table processing prob-lems.
 tive co-ordinates), layout (functional areas X  X eneralization of head, stub and matrix), structure (navigation of cells), cat-egories and relations. This characterization distinguished el-ements of table structure in terms of categories, which are hierarchical organizations of concepts, in terms of content syntax (indicating the potential for these two structural as-pects to interact) and in terms of the relations expressed by the table.
 pressions of categories and relations, and we account for the structure of the table as being a reflection of the structure of the categories, the relations that the table describes and the syntax of natural language expressions denoting both. References
