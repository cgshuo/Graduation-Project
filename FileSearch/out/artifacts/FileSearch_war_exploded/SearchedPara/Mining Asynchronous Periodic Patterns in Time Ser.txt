 Most previous w ork on p erio dicy detection has fo cused on mining synchronous p erio dic patterns and do es not recog-nize misaligned presence of a pattern due to the interven-tion of random noise. In this pap er, we prop ose a more exible mo del of asynchronous p erio dic patterns that may b e present only within a subsequence and whose o ccurrences may b e shifted due to disturbance. Two parameters min rep and max dis are employed to sp ecify the minimum num-b er of rep etitions that is required within each segmen tof non-disrupted pattern o ccurrences and the maximum al-lowed disturbance b etween an yt wo successiv ev alid seg-ments. Up on satisfying these two requirements, the longest valid subsequence of a pattern is returned. At wo-phase algorithm is devised to rst generate p otential p erio ds by distance-based pruning, followed by an iterative pro cedure to derive and validate candidate patterns and lo cate the longest valid subsequence.
 H.2.8 [ Information Systems ]: Database Managemen t| Asynchronous p erio dic pattern, Segment-based approach Perio dicy detection of time series data is a challenging prob-lem of great imp ortance in many real applications. Most previous research in this area has assumed that the distur-bance within a series of rep etitions of a pattern, if any ,w ould not result in the loss of synchronization of subsequent o ccur-rences of the pattern with previous o ccurrences [1]. Distur-bance is allowed only in terms of \missing o ccurrences" but not as general as any \insertion of random noise events". However, this assumption is often to o restrictive since we may fail to detect an interesting pattern if some of its o ccur-rences is misaligned due to inserted noise events. Consider the applicatio n of inventory replenishment . The history of inventory re ll orders can b e regarded as a symb ol sequence. Assume that the time b etween two replenishments of cold medicine is normally a month. The re ll order is led at the b eginning of each month. But supp ose a ma jor outbreak of u causes an early re ll at the 3rd week. Afterwards, even though the replenishment frequency is back to once each month, the re ll time shifts to the 3rd week of a month. Therefore, it would b e desirable if the pattern can still b e recognized when the disturbance is within some reasonable threshold.
 In addition, the system b ehavior ma yc hange over time. Some patterns may not b e present all the time (but rather within some time interval). Therefore, in this pap er we aim at mining p erio dic patterns that are signi cant within a subsequence of symb ols whic hma y contain disturbance of length up to a certain threshold. Two parameters, namely min rep and max dis , are employed to qualify valid patterns and the symb ol subsequence containing it, where this sub-sequence in turn can b e viewed as a list of valid segmen ts of p erfect rep etitions interleaved by disturbance. Eac hv alid segment is required to b e of at least min rep contiguous rep-etitions of the pattern and the length of each piece of dis-turbance is allowed only as large as max dis . The intuition b ehind this is that a pattern needs to rep eat itself at least a certain numb er of times to demonstrate its signi cance and p erio dicy. On the other hand, the disturbance b etween tw ov alid segments has to b e within some reasonable b ound. Otherwise, it would b e more appropriate to treat such dis-turbance as a signal of \change of system b ehavior" instead of random noise injected into some p ersistent b ehavior. The parameter max dis acts as the b oundary to separate these two phenomena. For patterns satisfying these two require-ments, our mo del will return the subsequence with the max-imum overall rep etitions. Note that, due to the presence of disturbances, some subsequen tv alid segments may not b e well synchronized with the previous ones. This in turn would imp ose a great challenge in the mining pro cess.
 Similar to [1], we allow a pattern to b e partially lled to enable a more exible mo del. For instance, ( cold medi ,*, *, *) is a partial monthly pattern showing that the cold medicine is reordered on the rst week of each month while no strong regularity presents for the rest of the month. How-ever, since we also allow the shifted o ccurrence of a valid segment, this exible mo del p oses a dicult problem to b e solved. For a given pattern P , its asso ciated valid segments
Permission to make digital or hard copies of part or all of this work or permission and/or a fee.

KDD 2000, Boston, MA USA  X  ACM 2000 1 -58113 -233 -6/00/0 8 ...$5.00 ma yo v erlap. In order to nd the v alid subsequence with the most rep etitions for P ,w eha v e to decide whic hv alid segmen t and more sp eci cally whic h p ortion of a v alid seg-men t should b e selected. While it is relativ ely easy to nd the set of v alid segmen ts for a giv en pattern, substan tial dif-culties lie on ho w to assem ble these v alid segmen ts to form the longest v alid subsequence. As sho wn in Figure 1(b), with min rep =3, S 1 , S 2 , S 3 , and S 4 are four v alid seg-men ts of the pattern P =( d 1 ; ; ). If max dis = 6, then X in Figure 1(d) is the longest subsequence b efore S 4 is considered, whic h in turn mak es Y the longest one. If w e only lo ok at the sym b ol sequence up to p osition 10 without lo oking ahead in the sequence, it is v ery dicult to deter-mine whether w e should switc hto S 2 or con tin ue on S 1 This indicates that w ema y need to trac km ultiple ongoing subsequences sim ultaneously . Since the n um b er of di eren t assem blages (of v alid segmen ts) gro ws exp onen tiall y with in-creasing p erio d length, the pro cess to mine the longest sub-sequence b ecomes a daun ting task, ev en for a v ery simple pattern suc has( d 1 ; ; ). T o solv e this problem for a giv en pattern, a segmen t-based algorithm is dev elop ed to iden tify subsequences that ma y b e extended to b ecome the longest one and main tain them in suc haw a y that the longest v alid subsequence can b e iden ti ed b y a single scan of the input sequence.
 Another inno v ation of our mining algorithm is that it can disco v er all p erio dic patterns regardless of the p erio d length. Most previous researc h in this area fo cused on patterns for some pre-sp eci ed p erio d length [1] [2] or some pre-de ned calendar [3]. Unfortunately , in practice, the p erio d is not alw a ys a v ailable a priori (it is also part of what w ew an tto mine out from the data). A p erio d ma y span thousands of sym b ols in a long time series data or just a few sym b ols. W e rst in tro duce a distance-based pruning mec hanism to disco v er all p ossible p erio ds and the set of sym b ols that are lik ely to app ear in some pattern of eac h p ossible p erio d. In order to nd the longest v alid subsequence for all p ossi-ble patterns, w e emplo y a lev el-wise approac h. The Apriori prop ert y also holds on patterns of the same p erio d. A v alid segmen t of a pattern is also a v alid segmen tofan y pattern with few er sym b ols sp eci ed in the pattern. F or example, av alid segmen t for ( d 1 ;d 2 ; ) will also b e one for ( d Then, for eac h lik ely p erio d, all v alid patterns with their longest supp orting subsequences can b e mined via an itera-tiv e pro cess.
 In summary ,w e claim the follo wing con tributions. The remainder of this pap er is organized as follo ws. The gen-eral mo del and the algorithm outline are presen ted in Sec-tion 2. The algorithms of distance-based pruning, the sin-gular pattern v eri cation, and the complex pattern v eri ca-tion are elab orated in Sections 3, 4, 5, resp ectiv ely . Section 6 presen ts exp erimen tal results. The conclusion is dra wn in Section 7. Let = = f d 1 ;d 2 ; g b e a set of literals and D b e a sequence of literals in = .A pattern with p erio d l is a sequence of l sym b ols ( p 1 ;p 2 ;: ::;p l ), where p 1 2= and the others are either a sym bol in = or *, i.e., p j 2=[ (2 j l ). Since a pattern can start an ywhere in a sequence, w e only need to consider patterns that start with a non \*" sym b ol. Here, is in tro duced to allo w partial p erio dicy . In particular, w e use to denote the \don't care" p osition(s) in a pattern [1]. A pattern P is called a i -pattern if exactly i p ositions in P are sym b ols from = . (The rest of the p ositions are lled b y *.) F or example, ( d 1 ;d 2 ; ) is a 2-pattern of p erio d 3. F or t w o patterns P =( p 1 ;p 2 ;:::;p l ) and P 0 =( p with the same p erio d l , P 0 is a sp ecialization of P (or P is a generalization of P 0 ) i , for eac h p osition j (1 j l ), either p j = p 0 j or p j = is true. F or exam-ple, pattern ( d 1 ;d 2 ; ) is considered as a sp ecializati on of ( d 1 ; ; ) and a generalization of ( d 1 ;d 2 ;d 3 ). Giv en a pat-tern P =( p 1 ;p 2 ;::: ;p l ) with p erio d l and a sequence of l D 0 supp orts P ) i , for eac h p osition j (1 j l ), either = or p j = d j is true. D 0 is also called a matc h of P . In general, giv en a sequence of sym b ols and a pattern P , m ultiple matc hes of P ma y exist. In Figure 1(a), D 1 , D ::: , D 19 are 19 matc hes of ( d 1 ; ; ).
 Giv en a pattern P with p erio d l and a sequence of sym b ols D , a list of k ( k&gt; 0) disjoin t matc hes of P in D is called a segmen t with resp ect to P i they form a con tiguous subse-quence of D . k is referred to as the n um b er of rep etitions of this segmen t. D 1 , D 2 , D 4 , D 6 , and D 8 form a con tigu-ous p ortion as sho wn in Figure 1(b). Therefore, the subse-a segmen t with resp ect to the pattern ( d 1 ; ; ). By de ni-tion, eac h matc h of a pattern P itself is also a segmen t with resp ect to P . A segmen t S with resp ect to a pattern P is a v alid segmen t i the n um b er of rep etitions of S (with resp ect to P ) is at least the required minim um rep etitions (i.e., min rep ). If min rep = 5, then segmen ts S 1 ;S 3 4 qualify as v alid segmen ts in Figure 1(b). S 2 is not a v alid segmen t since it only con tains 4 matc hes of ( d In general, giv en a pattern P ,an y sequence of sym b ol can b e view ed as a list of disjoin tv alid segmen ts (with resp ect to P )in terlea v ed b y disturbances.
 Giv en a sequence D and a pattern P ,a v alid subsequence in D is a set of non-o v erlappin g v alid segmen ts, where the distance b et w een an yt w o successiv ev alid segmen ts do es not exceed the parameter max dis . The o v erall n um ber of rep etitions of a v alid subsequence is equal to the sum of the rep etitions of its v alid segmen ts. A v alid subsequence with the most o v erall rep etitions of P is called its longest v alid subsequence .F or a sequence of sym b ols D , if there exists some v alid subsequence with resp ect to a pattern, then this pattern is called a v alid pattern . It follo ws from the de nition that an yv alid segmen t itself is also a v alid subse-quence. If w e set max dis =6, ev en though S 1 and S 4 in Figure 1(b) are individ ual ly v alid subsequences, there do es not exist a v alid subsequence con taining b oth of them due to the violation of the maxim um allo w ed disturbance b et w een them. In con trast, S 2 and S 4 can b e included in one v alid subsequence (Figure 1(c)) whose o v erall n um b er of rep eti-tions is 10.
 F or a giv en sequence of literals D , the parameters min rep and max dis , and the maxim um p erio d length L max ,w e w an t to nd the v alid subsequence that has the most o v erall rep etitions for eac hv alid pattern whose p erio d length do es not exceed L max . A threefold algorithm is devised. 1. Distanc e-b a se d Pruning. F or eac h sym bol d ,w e ex-2. Single Pattern V eri c ation .F or eac h p oten tial p erio d 3. Complex Pattern V eri c ation . An iterativ e pro cess is Since there are a h uge n um b er of p oten tial patterns, O ( j=j L a pruning metho d is needed to reduce the n um b er of can-didates. The pruning metho d is motiv ated b y our observ a-tion that if a sym bol d participates in some v alid pattern of p erio d l , there should b e at least min rep times that the distance b et w een t w o o ccurrences of d is exactly l (in order to form a v alid segmen t). So the prop osed distance-based pruning metho d mak es one pass o v er the data sequence to disco v er all p ossible p erio ds and the set of sym b ols that are lik ely to app ear in some pattern of eac h p ossible p erio d. F or eac h sym bol d and p erio d l , the n um b er of times when the distance b et w een t w o o ccurrences of d in the sequence is l is collected.
 Our mo del not only allo ws partially sp eci ed patterns suc h as ( d; ; ) where d can also o ccur in the \*" p osition, but also recognizes patterns with rep etition of the same sym-b ol suc has( d; ;d ). Hence it is not sucien t to just trac k the distance of a sym b ol to its last o ccurrence. T o p erform the distance-based pruning when scanning through the se-quence, w e need to main tain a mo ving windo w of the last max sym b ols scanned. F or the next sym b ol, sa y d ,w e com-pare it with eac h of the sym b ol in the mo ving windo w. If a matc h o ccurs at the j th p osition, the coun t for p erio d ( L incremen ted b y1. F or example, in Figure 1(a), the third 1 in the sixth p osition will con tribute to b oth C d 1 ; 2 rence of a sym bol d w e need to trac k its distance to all of its previous o ccurrences within the mo ving windo w. Giv en a sym bol d and a p erio d l ,if C d;l is larger than or equal to the min rep threshold, then it is p ossible that d migh t participate in some v alid pattern of p erio d l .W e can use this prop ert y to reduce the candidate patterns signi can tl y . If a sym bol d and p erio d l pair has passed the distance-based pruning, then the segmen t-based approac h (SB) is used to disco v er the subsequence with the most rep etitions of ( d; ;:::; ) with p erio d l . Before presen ting the algorithm w ein tro duce the concept of extendibility and subse quenc e dominanc e .A t a giv en p osition i , a subsequence X with ending p osition j ( j&lt;i )is extendible if j i max dis 1. When scanning through the sym b ol sequence, at an ypo-sition, the set of extendible subsequences consists of those subsequences that still ha v e p oten tial to \gro w". F or ex-ample, at p osition 20 in Figure 1(c), b oth X and Y are extendible if max dis =6 F or an yt w ov alid subsequences and Y ,w esa y that X dominates Y i the n um b er of rep-etitions of X is greater than or equal to that of Y . Clearly , X dominates Y in Figure 1(c) at p osition 20.
 This subsequence dominance de nes a total ordering among the set of v alid subsequences that are considered to b e ex-tendible at an y giv en p osition. If X dominates Y at some p osition i (Figure 1(c)), then the subsequence X 0 generated b y app ending Z to X starting at p osition i cannot b e shorter than the extension Y 0 of Y generated b y app ending Z to Therefore, w e do not need to extend Y at p osition i . Note that w e still ha v etok eep Y since w ema y need to extend (to include V in Figure 1(c)) at some later p osition j ( j&gt;i ). This scenario ma y happ en when X ends at an earlier p osi-tion than Y do es and X is kno wn to b e not extendible at p osition j . This pro vides the motiv ation and justi cation of the pruning tec hnique emplo y ed in our algorithm. When scanning through a sequence to determine the longest subsequence con taining a pattern ( d; ; :::; ), the disco v ery pro cess ma y exp erience the follo wing phases rep eatedly: There are sev eral c hallenges here. First of all, the transition p oin t from Phase B to C is not ob vious. Although missing the next consecutiv e matc h clearly signals the transition to Phase C, the presence of the next matc h do es not necessarily mean the con tin uation of Phase B. This is illustrated b y Y in Figure 1(d) at p osition 10. Secondly , the transition p oin t from Phase C to A is not straigh tforw ard, either. In fact, an y (not just the rst) d o ccurring within the extension windo w can p oten tially b e a candidate leading to a new extension of the subsequence. F or Y in Figure 1(d), it is the second 1 (at p osition 25) in the extension windo w that leads to a longer v alid segmen t. W eth us need to dev elop an ecien t trac king mec hanism for managing the phase transitions. F urthermore, there is also the pruning issue. There can b e man yo v erlapping subsequences of a pattern. An e-cien t pruning criterion needs to b e dev elop ed to prune the subsequences that cannot b ecome the longest v alid subse-quence. This will reduce the n um b er of concurren t subse-quences that need to b e trac k ed. The problem here is that the longest subsequence at a particular instan tma ybeo v er-tak en b y a shorter o v erlapping subsequence. This is clearly demonstrated in Figure 1(d) b y X and Y . Assume that min rep = 3 and max dis =6. A t p osition 29, after rec-ognizing S 3 asav alid segmen t (b efore S 4 is recognized), o v ertak es Y ev en though Y gro ws to b e the longest v alid subsequence later. Ho w ev er, w e also observ e that for an y t w ov alid subsequences X 0 and Y 0 that end at the same p o-sition k in the sequence and X 0 dominates Y 0 ,an y further extension of Y 0 will alw a ys b e dominated b y some extension of
X 0 (Figure 1(e)). W e can th us prune Y 0 after p osition A good poin ttoc hec k for dominance relationshi p is when a segmen t Z rst b ecomes v alid. This is the p oin t where that encompasses Z b ecomes v alid and the t w oo v erlapping subsequences con v erge to a common tail segmen t.
 The SB algorithm scans through the input data sequence. Eac h time a matc h of pattern ( d; ;:: :; ) is iden ti ed (sa y , at p osition i ), the set of curren tly extendible subsequences are extended according to the follo wing principles. [4] sho ws that with carefully designed data structures, a sin-gle scan of the sequence is sucien t to lo cate the longest subsequence with appro ximately linear storage requiremen t. After disco v ering the single patterns, v alid subsequences of di eren t sym b ols ma ybecom bined to form a v alid subse-quence of m ultiple sym b ols of the same p erio d. W e emplo y a lev el-wise searc h algorithm, whic h generates the subse-quences of i -patterns based on v alid subsequences of ( i 1)-patterns with the same p erio d length. T o ecien tly prune the searc h space, w e use t w o prop erties: Since these t w o prop erties are straigh tforw ard, w e omit the pro of. Based on these prop erties, w e can prune the candi-dates of a v alid pattern ecien tly .F or example, if t w o pat-terns ( d 1 ; ; ; ) and ( d 2 ; ; ; ) are v alid, then three candi-date 2-patterns can b e generated: ( d 1 ;d 2 ; ; ), ( d 1 and ( d 1 ; ; ;d 2 ). Similarly ,( d 1 ;d 2 ;d 3 ; ) can b ecome a can-didate 3-pattern only if ( d 1 ;d 2 ; ; ), ( d 1 ; ;d 3 ; ), and ( d ; ) are all v alid. After the candidate set of v alid i -patterns is generated, then a similar algorithm to the SB algorithm is executed to v erify whether these candidates are indeed v alid patterns. The SB algorithm also nds the v alid subsequence with the most rep etitions for eac hv alid pattern. W e implemen t the protot yp e in C and execute on an IBM RS-6000 (300 MHz CPU) with 128MB running an AIX op-erating system. In the follo wing exp erimen ts, w e alw a ys set F or the purp ose of p erformance ev aluation, w e use a syn thet-ically generated sequence consisting of 1024 distinct sym b ols and 20M o ccurrences of sym b ols. The syn thetic sequence is generated as follo ws. The p erio d length l of the next pattern is selected based on a geometric distributio n with mean 50. The n um b er of sym b ols in v olv ed in a pattern is randomly c hosen b et w een 1 and the p erio d l . The n um ber of v alid seg-men ts is c hosen according to a geometrical distribution with mean 50. The n um b er of rep etitions of eac hv alid segmen t follo ws a geometrical distribution with mean 1000. After eac hv alid segmen t, the length of the disturbance is deter-mined based on a geometrical distribution with mean 1000. This pro cess rep eats un til 20M sym b ols are generated. W e rst in v estigate the e ects of distance-based pruning. Without the distance-based pruning, there could b e as man y as j=j L max di eren t single patterns ( d; ;:: :; )( 8 d 2 = ). Figure 2(a) sho ws the fraction of patterns eliminated b y distance-based pruning. It is eviden t that the n um ber of pruned patterns is a monotonically increasing function of the min rep threshold. With a reasonable min rep threshold, only a small p ortion of p oten tial single patterns need to b e v alidated and used to generate candidate complex patterns. After the distance-based pruning, eac h remaining p oten tial single pattern is v alidated through the SB algorithm. Since the v alidation pro cess (ev en for a giv en pattern) is not a triv-ial task, w e demonstrate the eciency of our SB algorithm b y comparing it with a reasonable t w o stage (TS) algorithm. In the TS algorithm, for a giv en pattern, all v alid segmen ts are rst disco v ered, then all p ossible com binations of v alid segmen ts are tested and the one with the most rep etition is c hosen. Figure 2(b) sho ws the a v erage elapse time of v ali-dating a pattern. (Note that the Y-axis is in log scale.) It is eviden t that SB algorithm can outp erform the TS algorithm b y at least one order of magnitude regardless the min rep threshold. Figure 2(c) and (d) sho w the space utilization in the SB algorithm and the o v erall resp onse time to nd all patterns, resp ectiv ely . Clearly , the higher the min rep threshold, the shorter the o v erall resp onse time. In this pap er, w e prop ose a exible mo del of async hronous p erio dic patterns to mine patterns that are of an y length and ma y only b e presen t within a subsequence, and whose o ccur-rences ma y b e shifted due to disturbance. Tw o parameters min rep and max dis are emplo y ed to qualify v alid patterns and the longest v alid subsequence is returned for eac hv alid pattern. A t w o-phase algorithm is devised to rst generate p oten tial p erio ds b y distance-based pruning, follo w ed b yan iterativ e pro cedure to deriv e and v alidate candidate patterns and lo cate the longest v alid subsequence. [1] J. Han, G. Dong, and Y. Yin. Ecien t mining partial p erio dic patterns in time series database. Pr o c. 15th
ICDE , 106-115, 1999. [2] B. Ozden, S. Ramasw am y , and A. Silb ersc hatz. Cyclic asso ciation rules. Pr o c. 14th ICDE , 412-421, 1998. [3] S. Ramasw am y , S. Maha jan, and A. Silb ersc hatz. On the disco v ery of in teresting patterns in asso ciation rules.
Pr o c. 24th VLDB , 368-379, 1998. [4] J. Y ang, W. W ang, and P .S.Y u. Mining async hronous p erio dic patterns in time series data. IBM R ese ar ch
R ep ort , 2000.
