 Color descriptors are one of the important features used in content-based image retrieval. The dominant color descrip-tor (DCD) represents a few perceptually dominant colors in an image through color quantization. For image retrieval based on DCD, the earth mover X  X  distance and the optimal color composition distance are proposed to measure the dis-similarity between two images. Although providing good retrieval results, both methods are too time-consuming to be used in a large image database. To solve the problem, we propose a new distance function that calculates an ap-proximate earth mover X  X  distance in linear time. To calcu-late the dissimilarity in linear time, the proposed approach employs the space-filling curve for multidimensional color space. To improve the accuracy, the proposed approach uses multiple curves and adjusts the color positions. As a result, our approach achieves order-of-magnitude time im-provement but incurs small errors. We have performed ex-tensive experiments to show the effectiveness and efficiency of the proposed approach. The results reveal that our ap-proach achieves almost the same results with the EMD in linear time.
 H.3 [ Information Storage and Retrieval ]: Information Search and Retrieval Measurement, Performance Image retrieval, Distance function, Earth mover X  X  distance
As the interest in applications using multimedia contents grows fast, the importance of image retrieval has also in-creased. Many studies have worked on various techniques for accurately retrieving the image(s) the human user wants [13][28][21]. Content-Based Image Retrieval (CBIR) is the technique of searching for images in large databases [13][5]. The human user defines a query image as an example, and the CBIR finds images similar to the query image based on the color distribution, shapes, and textures of the image. This paper deals with the color-based image retrieval prob-lem in CBIR.

How to represent the distribution of colors in an image has a significant implication in color-based image retrieval[15]. The method traditionally used is the color histogram that stores the information about the number of pixels for each color within a fixed set of color ranges. Although being able to represent the entire range of colors (by counting the num-ber of pixels for each possible color), the color histogram may not be a suitable representation for image retrieval for two reasons [25][20]. First, representing and using all possible colors may slow down the search. Second, since only a frac-tion of the color ranges in a histogram may be useful, using the entire range of colors in an image does not necessarily improve the accuracy of search.

Since it is humans who evaluate the accuracy of the searched images, we need a color description that is tailored to human perception[9]. Humans, when looking at an image, analyze it based on dominant colors [17][7]. An image with blue sky and desert, for example, would be analyzed by humans as an image composed of two main colors: blue (the sky) and yellow (the sand). That is, humans perceive the shades of yellow as a single color. To represent the color in the way human interpret them, the dominant color descriptor (DCD) is proposed for describing color features [21]. By color quan-tization, the DCD represents an image using a small number of dominant colors, their weights in the image, and several optional parameters. The image retrieval based on the DCD h as shown a better performance than that based on the color histogram [20].

To measure the dissimilarity between a given image and images in databases, one needs a distance function. The dis-tance function should be able to measure the following: (1) the dissimilarity between the dominant colors in two images, and (2) the dissimilarity between the weights of dominant colors in two images [17]. As a distance function that sat-isfies the above criteria, one may use the minimum work, the minimum amount of work needed to transform the color and weight distribution of one image to the distribution of another.

The Earth Mover X  X  Distance (EMD) computes the optimal minimum work needed to transform one distribution into the other [20]. The work is defined as the multiplication of the weight of a color transferred and the distance between the transfers. Since a dominant color in one distribution can be transformed into a color in the other distribution in many different ways, finding the minimum work requires a large amount of processing time [20].

Several efforts have been suggested to reduce the compu-tational cost. The EMD finds the minimum work by solv-ing the transportation problem [20]. The complexity of the EMD is O( n 3 logn ) where n is the number of the dominant colors. Optimal color composition distance (OCCD) is an approximate method that reduces the computational cost of finding the minimum work [17]. The OCCD quantized the dominant colors into a set of m color unit, each with the same weight, and finds an approximate minimum work by solving the minimum-cost graph-matching problem. The time complexity of the OCCD is O( m 3 ).

Color-based image retrieval in large databases requires a large number of image comparisons. Both the EMD and the OCCD are not suitable for large databases, because each im-age comparison requires high computational cost. Although a multidimensional index such as M-tree [3] can reduce the number of image comparisons, a significant number of im-age comparisons would still be required. For example, 500 to 700 comparisons are required for the database with 100,000 images when the M-tree is used [3].

For large databases, we need a distance function that cal-culates the minimum work between two images in reasonable time. In previous works, the EMD-L 1 and the wavelet EMD were proposed. The EMD-L 1 reduces the time complexity of the original EMD to O( n 2 )[12]. However it requires the L -distance instead of the usual Euclidean distance. The wavelet EMD was proposed as a linear-time approximate EMD computation [23]. The wavelet EMD, however, is ap-plied to the histogram descriptor and not to the DCD. The wavelet EMD requires the dual function of the EMD, which cannot be created in the DCD. Details of the EMD-L 1 and the wavelet EMD are found in [12] and [23].

We propose a distance function that computes an approx-imate EMD in linear time of the number of dominant colors. The proposed method works as follows. First, the proposed method creates a linear order of the dominant colors in each distribution. Second, the method calculates the work be-tween the first colors in order in each distribution. The sec-ond step is repeated until all dominant colors are considered. The result is the minimum work between two distributions, computed in linear time.

To linearize the distribution of dominant colors in the multidimensional space, we use a space-filling curve. The space-filling curve linearizes multidimensional space [18][11]. Among the various space-filling curves, we use the Hilbert curve, one of the most widely used linearization methods [8][18]. After the linearization using the Hilbert curve, we re-peat to select two colors nearest to the starting point of each distribution and compute the work between them. While the selection of two colors compared is based on the Hilbert or-der, the distance used in computing the work is the actual distance between them in the multidimensional space. The minimum work between two images is computed in O( n ), because the dominant colors are scanned sequentially only once.

However, there are two potential problems in the proposed method. First, the distance of two dominant colors close to each other in the multidimensional space may be measured distant in the Hilbert curve. As a result, the order of the dominant colors may not correctly represent the actual dis-tance between them, and the minimum work may be calcu-lated inaccurately. To solve the problem, we create multiple Hilbert curves by changing the starting point and the direc-tion of the Hilbert curve. We calculate the minimum work for each of multiple Hilbert orders and select the minimum value as the minimum work between two images.

Second, even when multiple Hilbert curves are used, there is a chance that the linearized order of dominant colors may not reflect the actual distance in multidimensional space. In particular, if two colors are on the opposite side from the center of the multidimensional space, the distance between them is measured distant in the Hilbert curve.

To solve this problem, we adjust the position of dominant colors to one of the corners of the multidimensional space. The position adjustment may decrease the discrepancy be-tween the actual distance of the colors in multidimensional space and the distance in the Hilbert curve. Since, the dis-tance between the colors is preserved with the position ad-justment, no additional error is introduced. After the posi-tion adjustment, we create multiple Hilbert curves, compute the minimum work for each Hilbert order and select the min-imum value as the minimum work between two images.
When adjusting the positions of dominant colors, we pre-serve the distance between the colors, and thus no addi-tional error is introduced by the position adjustment. The proposed distance function calculates in linear time the min-imum work that is almost the same as the EMD. To demon-strate the advantages of our method, we conduct an exten-sive set of experiments. The experimental results show that our method provides significant performance improvement over the EMD with small errors. It is also observed that the color-based image retrieval results of our method are comparable with the EMD.

This paper is organized as follows. Section 2 defines the problem and reviews two existing methods. Section 3 de-scribes our method in detail. Section 4 evaluates the per-formance of our method. Finally, Section 5 concludes this paper.
Let P = ( p 1 , w p 1 ), ..... ,( p m , w p m ) be the color-weight distribution of an image with m dominant colors, where p i is the dominant color and w p i is the weight of p i . Let Q image with n dominant colors. We assume the total weights of P and Q are the same. Let D = [ d ij ] be the ground distance matrix, where d ij is the distance between p i and q . The ground distance measures the dissimilarity between the dominant colors of two images and can be defined by any standard method, such as Euclidean distance or L 1 distance [20]. Let F = [ f ij ] be the transferred weight, where f the amount of weight transferred from p i to q j . The work between two colors, p i and q j , is defined as the multiplication of transferred weight f ij and ground distance d ij . The work between distributions P and Q is defined as:
The minimum work between P and Q is defined as the minimum amount of work required to transform distribution P into distribution Q . That is, we want to find the flow, F = [ f ij ], that minimizes the amount of work required to transform P into Q [20].

We use Figure 1 as an example to describe the compu-tation of the minimum work between P and Q . In Figure 1, P represents the distribution of an image composed of three dominant colors, and Q represents the distribution of an image with two dominant colors. When transforming P into Q , the dominant colors in P can be transferred into the positions in Q in many different ways, but the amount of work would be minimal when each dominant color of P is transferred into the position denoted by the same alphabet in Q . That is, the minimum work is 0.3 2 (for moving A ) + 0.3 1 (for B ) + 0.2 3 (for C ) + 0.2 1 (for D ).
The Earth Mover X  X  Distance (EMD) computes the opti-mal minimum work, but requires a significant amount of processing time [20]. The processing time is as important as the accuracy in dissimilarity measures, especially for large databases. In this paper, we propose a new distance func-tion that calculates an approximate minimum work in linear time.
The optimal color composition distance (OCCD) is an approximate method that reduces the computational cost of the minimum work. To compute the OCCD, dominant colors are quantized into a set of m color units, each with the same weight, w , where m w = 100. By solving the minimum-cost graph-matching problem on the undirected graph with m nodes (that represents m color units), the OCCD finds an approximate minimum work.

When an undirected graph is given, the minimum-cost matching problem finds the set of disjoint edges with the minimum cost [10]. The time complexity of the OCCD is O( m 3 ). The accuracy and the time complexity of the OCCD are influenced by the weight of the color unit. The weight of the color unit has a fixed size, while the weight of each dominant color varies. When dominant colors are quantized into a set of color units, therefore, color loss occurs due to the discrepancy between the weight of dominant color and the color unit. With larger weights, the computation takes less time but the accuracy suffers. When the weight of the color unit is divided into the minimum unit, no color loss occurs, and the OCCD is able to calculate the optimal minimum work, while the complexity would be higher. It is recommended to use m = 20, w = 5 [17].
In the EMD, the minimum work is computed based on the solution to the transportation problem. Suppose that suppliers need to provide goods to several consumers. Each supplier has a given amount of goods, each consumer has a given demand, and the cost of transporting a single unit of goods is given for each supplier-consumer pair. The trans-portation problem is then to find the least expensive flow of goods from suppliers to consumers that satisfies consumers X  demands [19].

The EMD defines that the dominant colors of one image as suppliers and those of the other image as consumers. The cost of a supplier-consumer pair is defined as the ground distance between the dominant colors. The minimum work can be calculated by solving the transportation problem. The complexity of the EMD is O( n 3 logn ). Due to the high computational complexity, both the EMD and the OCCD require a long retrieval time in content-based information retrieval.
In this section, we propose a new distance function that calculates an approximate EMD in linear time. In the fol-lowing, we assume that dominant colors are ordered in one-dimensional color space. The actual algorithm works in mul-tidimensional space. First, the proposed method selects the color nearest to the starting point of the one-dimensional space from each distribution and computes the work be-tween two colors by multiplying the ground distance between two colors and the maximum common weight (MCW). The MCW is defined as the smaller of the weights of the two colors compared. Second, the proposed method removes the amount of MCW from the two colors. By doing so, the weights used to compute the work are removed from the distributions. Third, the above two steps until all dominant colors of two images are used to compute the work. Finally, adding all the works, the proposed method calculates the minimum work between two images.

We use Figure 1 in Section 2 as an example. Figure 1 shows color-weight distributions of two images in the one-dimensional color space. The weight of the first dominant color in P is 0.3, and the weight of the first dominant color in Q is 0.6. The MCW between these two colors is 0.3. After computing the work (0.3 2), the MCW of the compared colors are removed. That is, the first dominant color at position 2 in P is removed, and the half of the weight of the first dominant color at position 4 in Q is removed. At the next step, the colors nearest to the starting point (and their weights) are at position 3 in P (with the weight of 0.5) and at position 4 in Q (with the weight of 0.3). The MCW between these two colors is 0.3. The work is 0.3 1. When repeating these processes in Figure 1, the minimum work is computed. In the one-dimensional space, our method can compute the optimal minimum work between two images in O( n ), where n is the number of dominant colors.
To apply this approach to the image retrieval, we need to establish the order of dominant colors by linearizing the three-dimensional color space. In this paper, we use Hilbert curve, one of the most widely-used space-filling curves [18][29]. Figure 2 shows several examples of the Hilbert curve in two-dimensional space. As shown in the figure, Hilbert curve fills two-dimensional space with a continuous curve. The Hilbert order of the dominant colors is created by this curve. With smaller granularity, multidimensional space is filled with a more complicated curve.

Because the color space, such as RGB and HSV, is three-dimensional space, we use three-dimensional Hilbert curve [18]. After the linearization, we compute the minimum work by above mentioned approach. Note that the work is com-puted based on the Hilbert order of dominant colors, but the actual ground distance between the dominant colors in three-dimensional space is used when computing the work.
Note that in multidimensional space our method may not
F igure 3: Hilbert curves in two-dimensional space. calculate the optimal minimum work, because the Hilbert order may not reflect the true proximity of the dominant colors. The distance of two neighboring dominant colors in multidimensional space might be measured distant by the Hilbert curve.

Figure 3 shows as an example of the Hilbert curve in two-dimensional space. Suppose P and Q are composed of weights of all colors are the same. The optimal minimum work between P and Q should be calculated by the sum of the work between p 1 and q 1 and the work between p 2 and q . The Hilbert order of dominant colors in Figure 3 (a), p 1 and q 1 is measured longer than the distance between p 1 and q 2 . As a result, the minimum work would be calculated by the sum of the work between p 1 and q 2 and the work between p 2 and q 1 .

This happens when the Hilbert order fails to reflect the proximity of dominant colors in multidimensional space. The point and the direction to create another Hilbert curve as the optimal minimum work between P and Q is calculated by the sum of the work between p 1 and q 1 and the work between p 2 and q 2 . With the Hilbert curve in Figure 3 (b), we are able to extract the order that reflects the proxim-ity of multidimensional space. Depending on the position of dominant colors in multidimensional space, the Hilbert order that may or may not reflect the proximity between them. Therefore, we propose to use multiple Hilbert curves. In k -dimensional space, (2 k k !) = 2 Hilbert curves can be cre-ated. In three-dimensional color space, 24 Hilbert curves can be created. We compute 24 minimum works based on the 24 orders and select the minimum value among them as the minimum work between two images.

Even when multiple Hilbert curves are used, however, the orders of dominant colors might still be misarranged. Fig-ure 4 shows an example where the proximity is not correctly reflected in the multiple Hilbert orders. In Figure 4, two-dimensional space is divided into quadrants, and the dom-inant colors of P and Q are on the opposite side of the boundary of quadrants I and II .

In Figure 4 (a), the work is calculated between p 1 and q and p 2 and q 1 , which results in inaccurate minimum work. This is because in most cases the distance of two colors that are on the opposite side of the boundary of the quadrant is measured distant by the Hilbert curve. In Figure 4, (a), (b), (c), and (d), all Hilbert curves calculate inaccurate minimum work. That is, even if multiple Hilbert curves are used, the distance between the colors near the boundary in the Hilbert order may not reflect the true proximity.

To solve the problem, we adjust the position of domi-nant colors in multidimensional space. When calculating the minimum work between two images, what we need is the distance between dominant colors, not the precise posi-tion of them. As long as we preserve the distance between the colors, the minimum work between two images will not be affected even when we adjust the position of them. In this paper, we propose to adjust the position of dominant col-ors using the minimum bounding box (MBB) shift method. The MBB is defined as the smallest hyper-rectangle that contains all dominant colors in k -dimensional space[2].
The position adjustment method finds the MBB and shifts it to one of the corners in multidimensional space. In Fig-the proximity of the dominant colors. Figure 5 (b) shows the position adjustment. As shown in the figure, the MBB shift puts the dominant colors into one quadrant (and makes them avoid the boundary of the quadrant). After the MBB shift, the Hilbert curve is able to find the correct order of &lt;q 1 ; p 1 ; q 2 ; p 2 &gt; that reflects the proximity of multidimen-sional space.

Note that the difference between the distance in multidi-mensional space and the distance in the Hilbert curve in-creases with the increase in the granularity of the Hilbert curve. In Figure 2 (a) in Section 3.1, for example, the dis-tance of the Hilbert curve between upper-left cell and upper-right cell is same as the distance of multidimensional space. In Figures 2 (b) and 2 (c), on the other hand, the difference between two distances grows with finer granularity. Also note that the Hilbert curve in the quadrant of a particular level is the same as the Hilbert curve of the previous level, as shown in Figure 2 in Section 3.1. These two facts indicate that if the MBB fits into a single quadrant (i.e., the entire dominant colors can be represented in the single quadrant), the level of the Hilbert curve decreases and the difference between two distances may decrease, which results in the proximity to be reflected correctly in the Hilbert curve in many cases.

Even when the MBB is bigger than the quadrant, we can adjust the position of the MBB and get different Hilbert orders, which make it possible to reflect the proximity of colors. In this paper, we shift the MBB to the origin (ex: RGB(0,0,0)). The Hilbert order may be different depend-ing on which corner the MBB is shifted to, and thus the approximate EMDs computed with different origins may be different. Since multiple Hilbert orders are created after the MBB shift, however, the experimental results (not reported in this paper) show that the impact of different origins is negligible.

After the position adjustment, we create (2 k k !) = 2 Hilbert orders. Consequently, 2 k k ! orders (48 orders in three-dimensional space) are created including the orders created using the original position of the dominant colors. We com-pute the approximate EMD of each order, and select the minimum value as the minimum work. Because generat-ing 2 k k ! orders requires a considerable time, we use map-pingTable(originCoord[h][i][j], HilberPosition) for creating multiple Hilbert curves. The mappingT able receives as an input the position of the dominant colors in k -dimensional space as array ( originCoord [ h ][ i ][ j ]), and maps its position in the Hilbert curve. Using the mapping table, the orders of the dominant colors are created with short memory access time. Also, if we use a parallel processing, the overhead of generating 2 k k ! orders is only a little[6].
 Figure 6 shows the algorithm of the proposed method. Suppose that 2 k k ! orders have already been created by the mappingTable . The algorithm CalculateAEMD calcu-lates the approximate EMD of each order. The dominant color nearest to the starting point from each distribution is selected (line 1), and the maximum common weight (MCW) between two colors is computed (line 3). If w q j is the MCW, Algorithm CalculateAEMD ( P , Q , AEMD ) Input: Output: -AEMD : the approximate EMD between P and Q 2: WHILE ( i &lt; n + m ) 4: 8: ELSE 9: 13: END IF 14: i ++ 15: END WHILE 16: END IF 17: RETURN AEMD
END CalculateAEMD the work is computed by multiplying the distance between two colors and w q j (line 4). The weights used to compute the work are removed from two distributions (lines 5 and 6). The algorithm selects the next dominant color q j +1 because the w q j = 0 (line 7). If w q j is the MCW in line 3, the al-gorithm proceeds through line 9 to line 13. The algorithm repeats the above process until all dominant colors of two distributions are visited. Adding all the work, the algorithm calculates the approximate EMD between P and Q .
Figure 7 shows the algorithm PositionAdjustment . This algorithm shifts the position of the dominant colors to the origin top l ef t . In line 1 to 3, the algorithm searches for of the dominant color nearest to the origin of the x , y , and z axises, respectively. In line 4 to 6, the dominant colors are shifted to the origin by subtracting top l ef t x , top l ef t and top l ef t z from the x , y , z coordinate of each dominant color. In line 7, the Hilbert order is created. In line 9, the algorithm calculates approximate EMD by calling the algorithm CalculateAEMD . We performed our color-based image retrieval on the SIM-PLIcity [24]. The SIMPLIcity is composed of 1,000 color images in 10 categories. Each category has 100 images. The data size of 1,000 images is reasonable, since our experi-ments are designed to test the time complexity of the EMD for each image comparison (and not necessarily the scalabil-Algorithm PositionAdjustment ( P , Q , AEMD ) Input: -Q : distribution Q = {( q 1 , w q1 ), ... ,( qm , w Output: -AEMD : the approximate EMD between P and Q 1: FOR each dominant color in P and Q 2: search ( top_left x , top_left y , top_left z ) 3: END FOR 4: FOR each dominant color in P and Q 8: END FOR 9: CALL CalculateAEMD () 10: RETURN AEMD END PositionAdjustment ity). As mentioned in Section 1, 500 to 700 comparisons are needed for 100,000 image when the M-tree is used. There-fore, even if a larger dataset is used for scalability, we would have a similar number of image comparisons and would have drawn the conclusion similar to the following experimental results.

To extract the dominant colors of the SIMPLIcity, we ap-plied the MPEG7 dominant color descriptor that extracts maximum 8 dominant colors of an image [16][4]. For the Si-IMPLIcity, the MPEG7 dominant color descriptor extracted the dominant colors in the 32 32 32 RGB space.

We performed extensive experiments on the SIMPLIcity to compare the processing time and the accuracy of the pro-posed method with the EMD, OCCD(20), and OCCD(100). The number in parentheses indicates the number of color units in OCCD. The 20 color units in OCCD(20) is the rec-ommended number of the color unit in [17]. When the num-ber of color unit is fixed at 20, the accuracy of the OCCD may suffer with the increase in the number of dominant col-ors. To measure the accuracy of the OCCD method fairly, we use both OCCD(20) and OCCD(100) in our experiments.
As an accuracy measure, we used the mean absolute per-centage error(MAPE) [22]. In the MAPE, a i is the EMD value, and f i is the approximate value computed by the pro-posed or the OCCD methods. The MAPE represents the accuracy as a percentage. As a processing time measure, we used the time elapsed during query processing, while ex-cluding the time for file access. For accurate experimen-tal results, we used the average of 100 queries, where each query calculates the dissimilarity of a query image to 1,000 images. The experiments were performed on a 2.80GHZ PC equipped with a Window7 OS and 2GH of main memory.
In the first set of experiments, we evaluated the prepro-cessing time of the proposed method. The preprocessing time in Table 1 shows the time to create the mapping table. Table 1: Preprocessing time of the proposed method T able 2: Performances of the proposed method while varying the number of orders used Th e preprocessing time increases as the granularity of the multidimensional space becomes finer. This is because the size of the mapping table increases with the finer granularity of the multidimensional space. Note that the mapping ta-ble can be used without additional overheads once created, since preprocessing can be done offline. Also, the mapping table maps the dominant colors to the order of the Hilbert curve directly, working as a hash table. Therefore, the per-formance of the proposed method does not degrade with finer granularity.

In the second set of experiments, we measured the pro-cessing time and the accuracy of the proposed method while varying the number of the orders used. We used the SIM-PLIcity imagess. Table 2 shows the experiment results. In three-dimensional color space, 24 Hilbert curves can be cre-ated at maximum by creating 3 Hilbert curves from each corner of the space. In Table 2, MHC(8) used 8 orders by creating a Hilbert curve from each corner. Likewise, MHC(16) and MHC(24) used 16 and 24 orders by creating 2 and 3 Hilbert curves from each corner, respectively. After creating 24 orders from the original position of the dominant colors, MHC(shift) shifted the position of dominant colors to the origin and used the additional 24 orders created by position adjustment. As shown in Table 2, the accuracy improves with the increase in the number of orders used. This is because the order that reflects the true proximity of MAPE (%) 4.2 -4.3 1.2 
Time (sec.) 0.023 0.789 0.684 59.846 th e multidimensional space depends on the position of the dominant colors. The accuracy does not improve much from MHC(16) to MHC(24) for two reasons. First the problem near the boundary of the quadrant is more prominent with finer granularity. Second, most of 24 orders have similar se-quences since they are created from the same position of the dominant colors. These problems can be solved by the posi-tion adjustment. The accuracy of the MHC(shift) is better than MHC(24). The elapsed time of the proposed method, although it increases linearly according to the number of the orders, is very short. The image retrieval can be done in a short time even when MHC(shift) is used. In the following, we used the MHC(shift).

In the third set of experiments, we compared the pro-cessing time and the accuracy of the proposed method with the EMD, OCCD(20), and OCCD(100). As shown in Ta-ble 3, the proposed method showed significantly better per-formance with small errors. The proposed method exhibits 4.2% MAPE, while shortens the image-retrieval time 34 times over the EMD. The proposed method calculates the approx-imate minimum work with an acceptable error bound in a very short time. OCCD(20) has 4.3% MAPE, similar to the MHC(shift), but the processing time of OCCD(20) is sim-ilar to that of EMD. Because the weight of the color unit is different from the weight of the dominant color, the error occurs in the OCCD. Also, the OCCD requires a consider-able processing time to find the optimal color unit pairs that satisfies the approximate minimum work. As the weight of the color unit gets smaller, the accuracy increases, but the performance suffers. OCCD(100), although the MAPE is only 1.2%, exhibits the elapsed time of 59.846 seconds, too long to be used in any practical image-retrieval or search applications.

Figure 9 shows the correlation between the processing time and the accuracy. We calculated the dissimilarities of the 30 randomly-generated query images to 100 SIMPLIcity images. Each point in Figure 9 is the result of each query. The x -axis is the elapsed time to calculate the dissimilarity with 100 images, and the y -axis is the average of the 100 accuracy results.

As shown in Figure 9, the accuracy of the EMD is 100% in all points and the elapsed time of the EMD is between 67 and 91 milliseconds (ms). The accuracy of OCCD(20) is similar to that of MHC(shift), but the elapsed time is similar to that of the EMD. OCCD(100) shows the high accuracy between 98.1% and 99.6%, but the elapsed time is 5564 to 6611 ms. In comparison, MHC(shift) shows both good performance and high accuracy. The accuracy of MHC(shift) is 95.8% to 98.3%, and the elapsed time is between 1.7 and 3.1 ms.
In the next set of experiments, we examined the precision and the recall of the search to measure the impact of er-rors in real-world image retrieval. We used the average of 100 queries, where each query retrieved 10, 20, 30, 50, and 100 images, and calculated the precision and the recall. As shown in Table 4, all methods exhibit similar results. This is because errors are rare in approximate methods. Both the proposed method and the OCCD show almost the same results with the EMD.
 Figure 10 shows an example of search results of each method. Each figure displays eight images closest to the query image 302.jpg, retrieved from the SIMPLIcity. The number below the image name represents the minimum work computed by each method. The images are ordered in terms of similarity. All methods retrieved bus images similar to the query image. MHC(shift) retrieved 55.jpg that is different from the query. The EMD retrieved 269.jpg that is the different from the query image. OCCD(20) retrieved 269.jpg incorrectly, and OCCD(100) retrieved 269.jpg and 55.jpg incorrectly. This is because the compositions of dominant colors in 269.jpg and 55.jpg are similar to the query image. The overall tendency of the retrieved images is similar in all methods. Figure 11 shows another example of search results, which indicates the tendency similar to that in Figure 10.
In this paper, we proposed a new distance function that calculates the approximate EMD in linear time. For the image retrieval based on the dominant color descriptor, the earth mover X  X  distance and the optimal color composition distance have been used as the dissimilarity measure. They provide high-quality results in image retrieval but require high computational cost.

Our distance function linearizes the multidimensional color space using the Hilbert curve, thereby calculates the approx-imate minimum work in linear time. To improve the accu-racy, the distance function adopts two improvements: the use of multiple Hilbert orders and the position adjustment. The extensive experiments reveal that our approach achieves the order-of-magnitude improvement on processing time and that the rate of error growth decreases as the number of the dominant color increases. The retrieval results of the pro-posed method in real-world images are almost the same as that of the EMD, which indicates the error of the proposed methods does not influence the quality of image-retrieval re-sults. Given the O( n ) processing time and small errors, our distance function can be used effectively in image retrieval for large databases.

As a future work, we would like to extend our work to in-dexing in a high dimensional space. Recently, several works have been proposed to reduce the number of EMD compar-isons in a high dimensional space [1][26][27][14]. Since the post-processing in these research needs a considerable num-ber of EMD comparisons, they require high retrieval time. To solve the problem, we are in the process of developing an indexing scheme based on our approximate EMD in a high dimensional space.
This research was supported by the MKE(The Ministry of Knowledge Economy), Korea, under the Convergence-ITRC(Convergence Information Technology Research Cen-ter) support program (NIPA-2011-C6150-1101-0001) super-vised by the NIPA(National IT Industry Promotion Agency) and was supported by the National Research Foundation of Korea(NRF) grant funded by the Korea government(MEST) (No. 2008-0061006) [1] I. Assent, A. Wenning, and T. Seidl. Approximation [2] B. Barequet and S. Peled. Analysis of the clustering [3] P. Ciaccia, M.Patella, and P. Zezula. M-tree: An [4 ] M. Coimbra and J. Cunha. Mpeg-7 visual descriptors -[5] R. Datta, J. Li, and J. Wang. Content-based image [6] J. Dean and S. Ghemawat. Mapreduce: Simplified [7] Y. Deng, B. Manjunath, C. Kenney, and M. M. ans [8] H. Jagadish. Analysis of the hilbert curve for [9] S. Landy and N. Graham. Visual Perception of [10] E. Lawler. Combinatorial Optimization: Networks and [11] K. Lee, B. Zheng, H. Li, and W. Lee. Approaching the [12] H. Ling and K. Okada. An efficient earth mover X  X  [13] Y. Liu, D. Zhang, G. Lu, and W. Ma. A survey of [14] V. Ljosa and A. S. A. Bhattacharya. Indexing spatially [15] B. Manjunath, J. Ohm, V. Vasudevan, and [16] J. Martnez. MPEG-7 overview . [17] A. Mojsilovic, J. Hu, and E. Soljanin. Extraction of [18] B. Moon, H. Jagadish, C. Faloutsos, and J. Saltz. [19] S. Rachev. The monge-kantorovich mass transference [20] Y. Rubner, C. Tomasi, and J. Guibas. The earth [21] W. Schwartz, A. Kembhavi, D. Harwood, and [22] J. Shepperd and C. Schofield. Estimating software [23] S. Shirdhonkar and D. Jacobs. Approximate earth [24] J. Wang, J. Li, and G.Wiederhold. Simplicity: [25] J. Weijer and C. Schmid. Coloring local feature [26] M. Wichterich, I. Assent, P. Kranen, and T. Seidl. [27] J. Xu, Z. Zhang, A. Tung, and G. Yu. Efficient and [28] R. Yan and W. Hsu. Recent developments in [29] M. Yiu, Y. Tao, and N. Mamoulis. The b dual -tree:
