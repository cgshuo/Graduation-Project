 ORIGINAL PAPER Najiba Tagougui  X  Monji Kherallah  X  Adel M. Alimi Abstract Researches on handwriting recognition have known a great attention since it has been considered as a tech-nological revolution in man-machines interfaces especially that handwriting has continued to persist as the most used meanofcommunicationandrecordinginformationinday-to-day life. The challenging nature of handwriting recognition and segmentation has attracted the attention of research-ers from academic and industry circles. The huge part of these researches deals with Latin and Chinese. Interest in Arabic script comes years later, and so the state of the art is less advanced. This survey describes the nature of this Arabic handwritten language and the basic concepts behind the recognition process. An overview of the state of the art of online Arabic handwriting recognition is presented. It is based on an extensive review of the literature in order to describe background in the field, discussion of the methods, and future research directions. It is the first survey to focus on online Arabic handwriting recognition and provide recogni-tion rates and descriptions of database used for the discussed approaches.
 Keywords Handwriting recognition  X  Online recognition  X  Written Arabic language  X  Cursive script 1 Introduction Several researchers have focused in recent years on the study of embedded applications on a PDA (personal digi-tal assistant), smartphone, or pocket PC since they repre-sent new trends in communication with the need to reach information anytime and anywhere. Their main objective is to improve interaction between men and machine while developing simple and ergonomic man-machine interfaces. Pen-based interfaces combined with automatic handwriting recognition seem to be the most promising and efficient solu-tion. They offer a very easy and natural input way since hand-writing is one of the most familiar communication media and digital pens are often preferable for everyone to use instead of using keyboards. In such a case, handwriting recognition has gained the advantages. However, it is not new at this time, a wide range of digitizer with different technologies is available in the market. Digital pen has been used as a human computer interface years ago because of its flexibil-ity in writing any kinds of texts. In fact, after more than 30 years of continuous and intensive effort devoted to solv-ing the challenges of handwriting recognition which can be defined as the ability of a computer to receive and interpret intelligible handwritten input, progress in recent years has been very promising. Indeed, research in online handwrit-ing recognition started in the 1960s after the advent of the tablets and has been receiving great interest from the 1980s. Tappert [ 1 ] reviewed the status of research and applications before 1990, while a recent survey done by Plamondon and Srihari [ 2 ] gives an overview of the near recent situation, for both online and offline Latin [ 3  X  7 ] handwriting recognition. Liu et al. [ 8 ] contributed a survey to online Chinese [ 9  X  11 ] character recognition. For the Arabic language, which is spoken by 350 million people and is important in the cul-ture of much more such as Farsi and Urdu, recent surveys are presented; Amin [ 12 ], Khorsheed [ 13 ], Lorigo [ 14 ], and M X rgner [ 15 ]. All these published works deal with offline handwriting recognition. Studies dealing with online Arabic context are relatively scarce. We propose to devote a survey solely to this area. Since the written Arabic is a standard-ized version used for official communication across the Arab world and the characters of Arabic script are used by a much higher percentage of the world, the ability to automate the interpretation of such written script would have widespread benefits.

The objective of this paper is to present a comprehensive review of the state of the art in the automatic processing of online Arabic handwriting. It reports many recent advances and changes that have occurred in this field, particularly over the last decade.
 The remainder of this article is organized as follows. In Sect. 2 , we will initially give an overview of the two branches of researches in handwriting recognition. To focus on the online counterpart, we will first present briefly the digitizer technology in Sect. 3 and to give more attention to the online Arabic handwriting recognition as mentioned above, we will present briefly commercialized recognizers dealing with online Arabic handwriting. In Sect. 4 , we will review the different methods applied and solutions proposed for solving the recognition problems in academic context. Key references will be given and comparison of the available approaches presented in the literature will be treated in more detail in subsections. In Sect. 5 , we will explain the necessity of creating a universal online Arabic database. Accordingly, Sect. 6 will prove the role of the international competitions for increasing the recognition accuracy, and finally in Sect. 7 , we will give a concluding discussion on the state of the art of online Arabic handwriting recognition which has already become a mature research field with important applications in both academic and industrial context. We will present some remarks on benchmarking and reporting results, and a short discussion of future challenges we identified for the field. 2 On/Offline handwriting recognition Two branches of research are available in handwriting rec-ognition. The first one, offline, concentrates on the recog-nition of handwriting in the form of an image obtained by a scanner, digital camera, or other digital input sources which offers static information as pixels. The image is bi-narized through threshold technique based on the color pat-tern, so that the image pixels are either 1 or 0. The second approach, which is termed online, deals with the recognition of handwriting script captured by a tablet PC or a similar touch-sensitive device, and uses the digitized trace of the pen to recognize the symbol. Temporal information about how the symbol was formed is given including the num-ber of strokes, the order of the strokes, the direction of the writing for each stroke, and the speed of the writing within each stroke. A stroke is the writing from pen down to pen up [ 1 ].

Online handwriting recognition systems by capturing the dynamic information of the writing enhance the accuracy over offline. Many works in literature are developed to the temporal order restoration of the offline trajectory and bene-fit from one of dynamic information [ 16 , 17 ]. Since, to date, offline handwriting recognition research has achieved nota-ble successes in certain focused application areas, including postal address reading [ 18 ], check banking [ 19 ], and form processing [ 20 ]. On the other hand, because there is still a big demand for nomadic computing, interest in online hand-writing recognition has been extremely increased. In fact, researches on this field are perceived as a challenge since the beginning of the sixties, when the first attempts to recog-nize isolated handprinted characters were performed [ 21 , 22 ]. Since then, numerous methods and approaches have been proposed and tested. Over the years, these research pro-jects have evolved from being academic exercises to devel-oping technology-driven applications including pen-based computers, signature verifiers, and developmental tools [ 2 ]. Despite the fact that handwriting recognition exists in a number of devices, such as PDAs, smartphones, tablet PCs, and notebooks, there is still no simple pen-based interface that can be used efficiently. The main drawback of online handwriting recognition is that the writer is required to use special equipment. Unfortunately, current online equip-ment is not as comfortable and natural to use as pen and paper [ 1 ]. 3 Digitizer technology The concept of a pen computer was first proposed by Kay in 1968 [ 23 ]. Since then, many innovations and improvements in handheld technology have occurred. To compare available digitizers, different characteristics can be used, such as res-olution, accuracy, and sampling rate which typically varies from 50 X 200Hz depending on the application. One of the interesting technologies is the combination of the digitizing tablet with the display screen, providing high level of inter-activity similar to that of drawing or writing using the usual pen and paper. Resistive and inductive pen-sensing technol-ogies are the most widely used touch screen technologies, but each one has unique characteristics that can make it the preferred choice for certain mobile applications.

Resistive technology [ 23 ] offers a fast, reasonably accu-rate, and affordable technology that recognizes the touch input from any stylus, finger, gloved hand, pen/tool. Fur-ther, due to its mainstream availability and low cost, resistive technology is most used. Another popular technology is the inductive technology [ 23 ], used more than 20 years in graphics tablets and tablets PCs. A technology of sin-gle chip solutions made the tablet eight times smaller than it was before. Recently, electronic pen with the ultra-sound technology is in use [ 24 ]. WACOM [ 25 ] summa-rizes both the recent properties and possibilities in electronic pens.

Many commercial products for handwriting recognition are currently used on tablet PCs like riteScript , rite-Pen , riteForm from Pen&amp;Internet [ 26 ], Apple X  X  Rosetta from Apple [ 27 ], MyScrit Notes from Vision Objects [ 28 ]. Practically, functional Arabic handwritten recognizers are scarce; nevertheless, three interesting products are currently commercialized with significant accuracy. In fact, IMAG-iNET Software Company, a Microsoft Egypt national affiliate, launched the first Arabic Support and Software Development Kit for  X  X icrosoft Windows CE X  produced by Microsoft Corp, the IMAGiNET Arabic Writer which is an online Arabic handwriting recognition system deal-ing with words and sentences. It is based on the iscript TM technology. The underlying methodology of this system is to train and deploy artificial neural networks to decide on the most likely character sequences corresponding to the dynamically sensed features sequences of curvature, with a preprocessing of short strokes corresponding to dots and diacritics [ 29 ].

Another interesting commercial online Arabic handwrit-ing recognizer is proposed by Vision Objects. It is a system based on MyScript handwriting recognition technology [ 28 ]. Afterpreprocessing,theonlinehandwritingispre-segmented into strokes and substrokes. The general idea is to over-seg-ment the signal and let the recognizer decide later on where the boundaries between characters and words are. Here, spe-cific techniques for processing diacritical marks have been employed to assure the proper association of letters and their diacritical marks. This segmentation stage is followed by the feature extraction stage. Feature sets use a combina-tion of online and offline information at various resolutions, including some higher level structural features. The feature sets are processed by a set of character classifiers, which use recurrent neural networks and other pattern recognition paradigms [ 30 ].

Another handwriting recognition system is proposed for Mac Users. It is Quickscript TM for use on comput-ers running Mac OS X version 10.5 (Leopard ) or 10.6 (Snow Leopard ). Technically, it employs a state-of-the-art handwriting recognition engine developed by Vision Objects . Tested on millions of handwriting samples from around the world, Quickscript TM accounts for subtle vari-ations in alphabet, vocabulary, and country-specific hand-writing styles. The Arabic script is among the 26 languages supported [ 31 ]. 4 Analysis of online Arabic handwriting recognition methods We present on this section a detailed description of online Arabic handwriting recognition systems (OAHRS) recently reported. First, we briefly introduced the Arabic script and recognition problems. One generic model of handwritten word recognition system is presented in Fig. 1 . It does not describe a standard but it is typical of most present recogni-tion systems. In the model, there are three main components including preprocessing, features extraction, segmentation, recognition, and post-processing. These steps are not neces-sarily present in all OAHRS but at least three of them exist in almost all the systems. Some researchers provided extra phases while others ignored some steps. Various approaches are used and they are neither necessarily independent nor disjointed from each other [ 32 ]. Therefore, the adopted approaches cannot be divided into different classes. Conse-quently, the OAHRS X  X  descriptions are organized according todifferentcomponentsoftherecognitionprocess,especially that many systems show contributions in more than one stage. 4.1 Arabic handwriting properties and recognition Arabic handwriting is a consonantal and cursive writing con-sisting of 28 basic letters, 12 additional special letters, and eight diacritics [ 33 ]. Arabic is written from right to left. And the majority of letters change slightly in the shape of their character according to their position in the word (initial, medium, final, or just isolated). Many Arabic let-ters contain dots and strokes in addition to the letter body. They are commonly known as delayed and they are gener-ally deferred strokes written last in a handwritten word. In addition to the classical problems of the handwriting recog-nition, recognizing Arabic needs to deal with ligatures, the multi-variability writer style, absence of diacritics, bad writ-ing habits like touching characters, misplacement of dots, etc. More details regarding the cursive Arabic script can be found in [ 12  X  15 , 33 , 34 ]. 4.2 Preprocessing Preprocessing is one of the basic phases of handwriting recognition and it is crucial to achieve better recognition rate. Prior to any recognition, the acquired data are generally preprocessed. 4.2.1 Geometric processing The main objective of preprocessing steps is to reduce noise, to eliminate the hardware imperfections and the trembles in writing, and to normalize the various aspects of the trace. Smoothing, filtering, and normalizing are commonly used. Mezghani et al. [ 35 , 36 ] smoothed the online signal by averaging a point with its 3 neighbors and re-sampled the spa-tial distance between each consecutive sequence of points. Daiffalah et al. [ 37 ] propose to perform smoothing using a low-pass filter, point clustering, and de-hooking. The same procedure is used by Izadi et al. [ 38 ] and Husain et al. [ 39 ]. Boubaker et al. [ 40 , 41 ] and Kherallah et al. [ 42 ] first adjust the vertical dimension of the handwriting lines to obtain a normalized script size and then apply a Chebyshev second type low-pass filter on the normalized trajectory to elimi-nate the noise introduced by temporal and spatial sampling. Biadsy et al. [ 43 ] also used a low-pass filter for smoothing and reduced the redundant points using Douglas and Peuc-ker X  X  algorithm, whereas Saabni and Sana [ 44 ]re-sampled the signal in uniform way and normalized the speed writing by using vertex removal.

Razzak et al. [ 45 ] propose an offline processing in online Urdu character recognition that runs parallel with online processing. The online preprocessing steps are stroke acquisition, stroke segmentation, smoothing, interpolation, and de-hooking. While the offline preprocessing steps are stroke combining and baseline finding, the strokes are pro-cessed in offline domain to map the disconnected strokes due to pen lifting during writing. Combining online and off-line preprocessing is also used in [ 46 , 47 ] and [ 48 ]. Al-Taani et al. [ 49 ] used just an offline processing by building a bound-ing box of 5*5 around the character. 4.2.2 Baseline detection Several recent approaches consider another important level following the smoothing, filtering, re-sampling, and normal-izingstepsinthepreprocessingstage.Itisbaselineestimation which is an offline perception. For Arabic OCR, baseline detection is used to get valuable information about the ori-entation of the text and the location of connection points between characters, so its detection can be used for skew normalization, character segmentation, and features extrac-tion. For the online context, it is basically used for delay strokes detection or removal [ 40 , 50  X  52 ], character segmen-tation [ 38 , 40 ], and features extraction [ 48 , 53 ].
A number of baseline detection methods are proposed in the literature basically the geometric approaches which are borrowed from offline or printed script applications. The logic approaches analyze the handwriting script topology to discern relevant points of the trajectory supporting the searched baseline. The geometric approaches are the oldest and one of the most known methods used is the histogram projection. It was used by Eraqi and Abdelazeem [ 48 ]. Bou-baker et al. [ 40 ] developed a baseline detection process con-sisting of two stages: the first one is a basic stage permitting the detection of set of points of aligned neighborhood. The second stage measures the level of verification of some topo-logic conditions by the most numerous set of points founded in the first stage [ 40 ]. For the Urdu script, Razzak et al. [ 53 ] present a baseline detection algorithm in three phases. Firstly, the secondary strokes are segmented form the raw input strokes. Then, primary baseline is extracted using the hor-izontal projection on ghost shapes. Finally, the local baseline of each ligature is estimated based on features and primary baseline estimation [ 53 ]. The baseline detection is important to detect diacritical marks and secondary strokes. 4.2.3 Handling delayed strokes In Arabic scripts, delayed strokes are written above or below a word part and could appear before, after, or within a word part with respect to the horizontal axis [ 54 ]. Many OAHRS consider delayed strokes as features that added complex-ity to online handwriting recognition process and should be totally discarded from handwriting in the preprocessing step [ 35 , 37 , 55  X  57 ] especially that diacritics are generally omitted when writing and the meaning of the word can be deduced from the context. Others first detect these strokes and then used in a post-processing phase with a reduced lexicon dictionary [ 52 , 58 ] or with hierarchical tree deci-sion [ 59 ]. Sternby et al. [ 6 ] connect delayed strokes to the word body with a special connecting stroke. The system treats diacritic attachment variations dynamically with the dual-graphapproachbybranch-and-boundsearchtechniques to discriminate between different word hypotheses involv-ing the same base shapes but different diacritic attachments. It is applied for both words and single characters. Elanwar et al. [ 51 ] presented a method to treat delayed strokes as spe-cial short strokes using freeman chain code (as presented in Fig. 2 ) leading to alternative spellings to accommodate dif-ferent word sequences where delayed strokes are drawn in different orders, whereas the diacritics processing module is presented by Boubaker et al. [ 40 ] as an integrating stage of the features extraction system. They are included in the features vectors by fuzzy affectation rate to graphemes. This choice is explained by the fact that the diacritics are often drawn in Arabic handwriting, for reasons of flexibility and speed, merged, or/and shifted [ 40 ]. Biadsy et al. [ 54 ] inte-grate the delayed strokes within the appropriate word-part body too using the delayed-stroke projection algorithm that involves two steps, the detection of delayed strokes and the incorporation of delayed strokes within the right word-part body of the processed point sequence (Table 1 ). 4.3 Feature extraction The aim of feature extraction is to reduce the input pattern by extracting and computing the most pertinent characteristics or parameters of the input signal to achieve better patterns classification. A variety of representations for the input sig-nal were used. Visual descriptors such as occlusions, valleys, and loops were used by Kherallah et al. [ 60 ], Jouini et al. [ 61 ], Al-Taani and Hammad [ 46 ]. Visual features were also inves-tigated by Halavati et al. [ 62 ]. Geometric descriptors are widespread used such as tangents [ 63  X  66 ], connection angles and distances between consecutive points [ 50 , 58 , 59 ]. The coordinate of the input signal [ 6 , 67 , 69 ] has also been used to extract time-dependent representation features such as cur-vilinear and angular velocities [ 10 , 40  X  42 , 56 ]. Based on the motor theory of movement generation, the features extracted from each character by Alimi [ 56 ] are the neuro-physiolog-ical and biomechanical parameters of the equation describ-ing the curvilinear velocity of the script. Similarly, Kherallah et al. used a feature vector composed of dynamic beta param-eters extracted from the curvilinear velocity of the trajectory points and circular static parameters in [ 65 ] and elliptical sta-tic parameters in [ 42 ] and [ 30 ]. The same parameters were also used by Njeh et al. [ 10 ].

Freeman code is one of the simplest and common used features. It was used by Jouini et al. [ 61 ] and Elanwar et al. [ 51 ] which propose three types of Freeman chain codes, long strokes, short strokes, and eight pen-up for re-sampling movement with additional pen-down information of succeed-ing stroke and current stroke.

The feature vector used by Al-Emami and Usher [ 66 ] con-tains the directional codes describing the stroke separated by zero, the length of each segment, a tangent value representing the slope of each segment, the x and y coordinates of each segment point, and flags referring to dots. The initial signal was divided to main strokes and secondary strokes by [ 43 , 50 , 54 , 58 , 68 ]. Saabni and El-Sana [ 44 ] extracted global ascend-ers and descenders loops, local features, and local relations between adjacent points for the main strokes of the body shape whereas the secondary strokes are recognized based on size, location, and order.

For the Persian script, Baghshah et al. [ 68 ] propose to divide each stroke into a set of small parts called tokens repre-sentinglines,arcs,orloops.Eachtokenisdescribedusingfive different features representing its straightness, orientation, COG-orientation, curvature side, and the relative length [ 68 ]. Halavati et al. [ 62 ] describe each feature by four different properties as segment type (line, arc, and moon), direction, curvature side, and relative length.

For the Urdu script, Husain et al. [ 39 ] invoke syntac-tical features identifying various shape forms present in the Urdu ligatures like loops in the beginning or end, intersections, direction/writing style of any ligature, while Razzak et al. [ 45 ] propose structural features also used by Al-Taani et al. [ 49 ] for Arabic digits. In [ 49 ], the pixels of the coordinates x and y values representing the drawn digit are used for calculating and normalizing successive slope values explored to record the change of direction and then estimate the slope.

Offline features were inspected by Al-Habian and As-saleh [ 47 ]. They discuss the use of feature vector extracted from a sliding window on the reconstituted image of the online text. Daifallah et al. [ 37 ] adopt the same approach based on Hu X  X  moments which are a set of seven compound spatial moments that are invariant in the continuous image domain to translation, rotation, and scale change whereas Eraqi and Abdelazeem [ 48 ] construct an offline bounded image by interpolating every stroke of the word. Alsalleh etal.[ 70 ]proposedavision-basedsystemwithfeatureextrac-tion process consisting of two major steps. First, temporal analysis is used to capture the motion of the image sequence andconvertittooneortwoAccumulatedDifferencesimages. Spatial analysis follows to extract the features from afore-mentioned Accumulated Differences images.

The combination of different feature extraction methods is also investigated. Alimi [ 56 ] uses kinematics features, fuzzy rules, and genetic algorithm. The value returned from the fitness function for one gene represents the degree of match between the word represented by that gene and the real hand-written word. The calculus of the fitness value is based on the fuzzy values assigned to the recognition of each character by the fuzzy neural network [ 56 ]. In the same research direc-tion, Kherallah et al. [ 57 ] propose to combine beta-elliptical features, visual coding, and genetic algorithm. The evalua-tion function is obtained by the measure of indices similarity. Baghshah et al. [ 68 ] consider geometric features and linguis-tic variables based on fuzzy rules. Mezghani et al. [ 35 ]use Fourier descriptors for the x and y components of the pen positions as a global representation and the tangents vector for the signal as a local one (Table 2 ). 4.4 Segmentation Segmentation refers to the different operations that must be performed to get basic and meaningful units that the recogni-tion algorithm will have to process. It generally works at two levels. The first level deals with the whole text and focuses on line detection. At the second level, the methodology focuses on the segmentation of the input into individual units such as strokes, characters, or graphemes. This operation is among the most challenging. Segmentation techniques for OAHRS were discussed by Abuzaraida et al. [ 71 ]. 4.4.1 The global approaches In these approaches, the extracted parameters represent the entire word or a zone of the word uniformly segmented in the space or in the time. The word test is treated as an indivisible entity in terms of recognition decision. Indeed, all the extracted parameters are simultaneously presented to the recognition system. Consequently, only one decision of recognition is applied to assign to a given word test, a label from the set of vocabulary. This explains the fact that the global approaches are specific to reduce vocabulary applica-tions and conversely incompatible to large vocabulary appli-cations.

The first version of the IRAC system developed by Amin et al. [ 72 ] adopts a parametric description using a topo-logic and statistic parameters extracted on the entire word avoiding then its segmentation. More recently, Saabni and El-Sana [ 44 ] adopted the holistic approach and avoided segmenting words into individual letters. To reduce the search space, a series of filters in a hierarchical manner are applied. The global geometrical extracted features are fed to a dynamic time warping recognizer, which uses the extracted features to determine and order the trained models (candidates) that match the input sequence. The top ranked k candidates are sent to a shape context-based classifier that determines the recognized word. Biadsy et al. [ 54 ] present a system (presented in Fig. 3 ) for the recognition of Arabic words based on HMMs using a feature vector which contains three features (the local angle, super segment, and loop pres-ence) from the point sequence. Razzak et al. [ 53 ] present a ligature-based approach heavily dependent on Urdu script. Strokes are divided into 62 classes based on the starting and ending styles of the ligature using fuzzy rule. The division in classes reduced the time complexity. 4.4.2 Analytical approaches In analytical approaches, the recognition of a word is the result of the recognition of its meaningful units (Fig. 4 ). Depending on whether this segmentation anticipates the step of parameters extraction and class recognition or that is directed by this last one, we speak in the first case of an ana-lytic approach with external segmentation (explicit segmen-tation) or of an analytic approach with internal segmentation (implicit segmentation) in the second case.

A system adopting an analytical approach with external segmentation is developed by Njeh et al. [ 10 ]. It is based on the fact that handwriting is composed by a sequence of basic features approximated by perceptual codes. These ones correspond to elementary perceptual codes (EPC), which are gathered to generate more global ones (GPC). Based on the beta-elliptic theory for the generation of online handwrit-ing, they use fuzzy set theory to detect the EPCs and genetic algorithms for GPCs while the main idea of the segmentation algorithm proposed by Izadi et al. [ 38 ] is to decompose a digi-tal curve into convex/concave segments which are considered aselementaryshapes.Thenotionsofconcavityandconvexity in Euclidian space are explored. In order to avoid finding seg-ments of very short lengths, a threshold is applied on the seg-ment curve length representing the sum of the lengths of the piecewise linear segments which construct the curve. Daifal-lah et al. [ 37 ] present an algorithm that works on strokes and segments them into letters by four stages: arbitrary segmen-tation, segmentation enhancement, connecting consecutive joints, and finally locating segmentation points. Boubaker et al. [ 40 ] segment the pseudowords in graphemes based on the detection of two typographically significant points: the back of the valleys adjoining the baseline with a parallel tan-gent and the angular points. Using the same basic idea, Eraqi and Adelazeem [ 48 ] proposed a segmentation algorithm that segments each PAW main stroke into its basic graphemes too. The algorithm depends on the local writing direction, a similar algorithm to the one proposed by Daiffalah et al. [ 37 ] but unlike Boubaker strategy, is independent of the base-line to be less sensitive to baseline detection errors. Sternby et al. [ 6 ] invoke segmentation technique based on the prin-ciple of Frame Deformation Energy, where each stroke is subdivided into segments based on the orthogonal direction of the writing direction using a set of heuristic rules. Heu-ristic rules are generally not very robust but segmentation is not the focus of his work. The aim of the segmentation pro-cedure was to divide input into segments containing at most the shape of one individual character [ 6 ].

For Urdu script, Razzak et al. [ 53 ] present a segmentation process to segment the primary stroke and secondary strokes. It is based on the threshold value and position with respect to the previous base character.

As example of a system developed around internal seg-mentation, we mention that proposed by Alimi [ 56 ]. The segmentation process is based on a genetic algorithm with a fitness function calculating the degree of match between a gene and the real handwritten word. The genetic algorithm should find the best combination of characters to reconstruct the word to be analyzed [ 56 ]. The segmentation strategy of Baghshah et al. [ 68 ] aims at separating each stroke into a set of small parts called tokens representing lines, arcs, or loops. They compute the average of the changes of angles between two consecutive sets of vectors. Any point, in which the computed value exceeds a certain threshold, can be a candidate for the end of an arc part and the process restarts from the next point. To finalize the segmentation task, a loop detection method is used to find the loops and deletes addi-tional candidate segmentation points that locate on them [ 68 ]. Elanwar et al. [ 51 ] propose a segmentation-recognition pro-cedure using a dynamic programming algorithm to find a globally optimal set of cuts through the input test string (fea-ture vector) which minimizes the defined cost function. The set of cuts and their precise shape are found simultaneously. Khan and Haider [ 9 ] report a statistical approach which uses normalization and rectification, coordinate transformation, and clustering to extract ligatures. The output is then fil-tered to extract start, overlapped, and end segment errors. A filter is applied to class segments in normal segment, start-ing segment, last segment, and overlapped segment. Vari-ous types of classification methodologies are then tested in order to find the best combination of features and classifiers for two-, three-, and four-stroke handwritten Urdu characters recognition.

The advantage of the analytical approaches is the divi-sion of the recognition problem of a word into several complementary subproblems of graphemes, characters, or strokes recognition. This makes analytical approaches adapted to the problems of word recognition in large or even opened vocabulary context. Indeed, many problems remain to be overcome in this scope, for example systems adopting a top-down or internal (implicit) segmentation achieve high recognition rate; however, they are still limited to applica-tions to a finite vocabulary. Conversely, the explicit segmen-tation approaches that are designed to work on open vocabu-laries are still inefficient in terms of recognition. They suffer particularly of the variability of writing styles and its negative effect on the results of graphemes segmentation (Table 3 ). 4.5 Recognition The recognition module in the system is the application of classification algorithms. It uses training data for recog-nizing basic individual units. The recognition, as will be described, includes a comparison of the test pattern with each class reference pattern representing words in the lexi-con and measuring a similarity score between the test pattern and the class reference pattern. The pattern similarity score is used to decide which pattern best matches the unknown pattern. The implementation of this recognition module in previous systems has been in a number of ways such as decision tree [ 59 , 66 , 73 ], dynamic programming [ 51 , 55 ], template matching [ 6 , 55 ], hidden Markov model [ 50 , 63 , 74 ], neural network [ 36 , 56 , 61 ], k-nearest neighbor [ 37 , 42 ], and other combination of techniques [ 47 , 62 , 75 ]. Normally, the process of recognition provides a list of word hypotheses or just the recognized word or character. With the help of some source of knowledge in the form of a language model, some improvements in recognition can be obtained. A lan-guage model can be the lexicon, which is a library or list of possible words for recognition, or the words that are allowed as input to the recognition system, but can also include some statistical or structural properties of a given language [ 76 ]. 4.5.1 Hierarchical classifier with tree structure In the late 80s and early 90s, first attempts to recognize online Arabic handwritten script have started with methods adapted from the field of offline handwritten script recognition. The first systems were those of Amin IRAC I [ 72 ], II [ 77 ] and III [ 78 ]. The IRAC system which recognizes isolated hand-writtencharactershadamuchbetterrecognitionperformance than the IRAC II and IRAC III dealing with words. In fact, the IRAC system was tested by three writers on sets of 73 char-acters to obtain character recognition rate of 95.4 % whereas the IRAC II system was tested on 400 words to obtain a rec-ognition rate of 80 and 90 % for the IRAC III tested on 1,000 words. Using a hierarchical classifier with a tree structure also and recognizing isolated characters, El-Wakil and Sho-ukry X  X  system [ 79 ] reports a recognition rate of 84 % and El-Sheikh and Al-Taweel X  X  system [ 73 ] 98 %. Al-Emami and Usher X  X  system [ 66 ] reaches 86 % writer independent and 100 % writer dependent when recognizing post code based on 13 Arabic characters. In [ 79 ], stable features are used hierarchically to reduce the number of letter classes and a k-nearest neighbor classifier determines the closest class. The recognition rate varies with the length of primitive strings, the optimal string length giving an accuracy of 84 % on tests with seven writers, and an alphabet of 60 characters. Weight-ing the features manually by their relative importance gave a maximum accuracy of 93 %. El-Sheikh and El-Taweel divide each character set into four subsets depending on the number of strokes and they use several simple global features, such the ratio between width and height or its inverse, the number and sequence of minima and/or maxima in the x and/or y directions of the main stroke, for the classification. Al-Em-ami and Usher categorized the slope of each stroke to one of four directions, followed by a learning stage in which the preprocessed data are entered into a decision tree. The system has been tested only with 13 Arabic letter shapes. It was first tested by 10 writers on a set of 120 post code words based on 13 characters to obtain a word recognition rate of 100 % by tuning the system X  X  parameters. Then, it was tested by one writer on a set of 50 post code words based on the same 13 characters to obtain a word recognition rate of 86 % without changing the system X  X  parameters.
 DecisiontreestructurewasusedalsobyAl-Taanietal.[ 46 ]. A transition network grammar with shape-based features has been used to match string of primitives to the corresponding digit. The method is tested on an online dataset representing the digits 0 X 9 collected from 100 users (3,000 samples). On the average, the recognition rate was about 95 %. Ghods and Kabir [ 59 ] used a decision tree to classify the main body of Farsi letters to nine groups. The main bodies of 4,000 iso-lated letters from  X  X MU dataset X  were used for training and test. A recognition rate of 94 % was reported. 4.5.2 Dynamic programming Alimi and Ghorbel [ 55 ] developed an online recognition sys-tem for isolated Arabic characters using dynamic program-ming algorithms. They reported a recognition rate of 93 % using different database sizes and replication of characters. Moreover, Elanwar et al. [ 51 ] used a dynamic programming technique for Minimum Edit Distance computing to com-pare each word (direction codes features) with the skeleton pattern. The database used for training is composed of 317 words (1,814 characters), written by four writers, and the test database is composed of 94 words (435 characters) written by other four writers. The recognition rate is 95 % character based. 4.5.3 Fuzzy approaches In 1996, Gader and Keller [ 80 ] overviewed the use of fuzzy methods in handwriting recognition. In 1997, a first neuro-fuzzy approach for Arabic systems was introduced by Alim-i[ 56 ]. In this system, a genetic algorithm is used to select the best combination of characters recognized by a fuzzy neural network. It was trained with 2,000 characters written by the same writer [ 67 ]. The system, which is writer dependent, was tested on 100 replications of the word ( ) written by the same writer. The system achieves a recognition rate of 89 %. In the same research direction, Kherallah et al. [ 57 ] propose to combine visual coding and the genetic algorithm. The average of the recognition rate for isolated Arabic words is 97 %. Compared to Alimi X  X  recognition system which has a manual segmentation of the handwritten words and the modeling system is based only on beta representation, the modeling system in [ 57 ] is based on an automatic segmenta-tion of handwritten words that consists of a combination of visual extractor and beta-elliptic representation (Fig. 5 ).
A fuzzy classifier is besides used by Baghshah et al. [ 68 ]to recognize Persian characters. In this classifier, the end token of the strokes is classified by using the fuzzy learning vec-tor quantization (FLVQ) algorithm and the other tokens are characterized by using fuzzy linguistic terms that describe simple representative features. The used database contains the isolated characters written by 128 persons. The recogni-tion rate of the purposed method on this database is near 88 % and improves to about 95 % when tuning the parameters for a query writer. The number of the rules used in this test is 30. Fuzzy rules are also considered by Razzak et al. [ 50 ]. It is a ligature-based approach for Urdu script combining fuzzy rules with HMM. The fuzzy rules are used as preprocessing and post-processing to normalize the input and the output. HMM is then applied for the recognition of basic shape by putting it into fuzzy rules. The presented system works for both handwritten Nasta X  X iq and Nasakh font of Urdu and pro-vided 87.6 and 74.1 %, respectively, correct classification results on 1,800 ligatures obtained from 15 trained users. 4.5.4 Template matching Sternby [ 31 ] uses a template matching scheme with a Bidi-rectional Long Short Term Memory algorithm, based on the work of [ 21 ], for dynamically treating the diacritical marks. It is applied for both words and single characters. A data-base containing 1,578 samples of 66 Arabic words written by 40 persons is used. The authors report character recogni-tion rates of 94.8 % and word recognition rates of about 92 %.
Alsallakh and Safadi [ 81 ] propose the AraPen, an Ara-bic online handwriting recognition system based on dynamic time warping. It was designed to handle non-cursive charac-ter recognition and adapted to the cursive case. In the non-cursive case, the system was tested on a small corpus and achieved a recognition rate of 91 %, after training with a specific writer X  X  style. The recognition rates went down dra-matically, to lower than 50 %, when adapting the system to cursive scripts [ 54 ].

Saabni and El-Sana [ 44 ] adopt the holistic approach to avoid segmenting words into individual letters. To reduce the search space, a series of filters in a hierarchical manner is applied. In the first filter, global features and delayed strokes patterns are used to reduce candidate word-part models. In the second filter, local features are used to guide a dynamic time warping (DTW) classification. Results presented after applying the geometric filter are from 83 to 88 % and after using the shape context filter with five candidates are between 86 and 90 %. 4.5.5 Statistical classifier Most of thehandwrittenrecognitionsystems arebasedonsta-tistical methods or rule-based methods. Normally, statistical classifiers are more reliable but more complex and requir-ing a large amount of data for training. HMM-based system received most of the attention, but other techniques were also used and proved to have satisfying results [ 54 ]. Kherallah et al. [ 42 ] present a multilayer perception classifier of neural networks (MLPNN) developed in a fuzzy concept. The train-ing process of the recognition system is based on an associa-tion of the self-organization maps (SOM) with fuzzy k-near-est neighbor algorithms (FKNNA). To test the performance of the system, a database of 30,000 Arabic digits is used. The global recognition rate obtained is about 95.08 % character based. A KNN classifier [ 82 ]isalsousedin[ 70 ]. It is an online video-based approach for Arabic handwritten recog-nition problem. A database comprising the videos of 28 iso-lated Arabic letters is compiled. Each letter is repeated eight times by two different users. The recognition rates are as high as 97.77 % with polar Accumulated Differences and 99.11 % for the two-tier-weighted Accumulated Differences scheme. While Mezghani et al. [ 35 ] developed an online recognition system for isolated Arabic letters using Fourier descriptors and Kohonen maps. They reported a recognition rate of 86 % on 7,244 samples of 17 classes written by 17 writers.
The success of HMM [ 83 ] in speech recognition sug-gests that it can also serve well character recognition [ 71 ]. The following published works are using HMM as classifier. Daifallah et al. [ 37 ] report a system that treats only Arabic words with letters without marks or points. Every letter is pre-sentedwithavector of sevendimensions (Hu X  X  moments) and the recognition system used is based on HMM. The results are between 71.3 and 92.6 %. Whereas Al-Habian and As-saleh [ 47 ] present a recognizer structure aimed at recogniz-ingonlineArabichandwritingwrittenincontinuousform,the basicunitsofrecognitionusedarestrokes,whicharesubletter parts. To recognize strokes, HMMs were used to model each stroke. Decision logic was then used to interpret the output of strokeHMMs, convertingtheir output intorecognizedwords. Data collected from six writers were used to validate the functionality of the system. Experimental simulation of the proposed system resulted in a recognition rate of about 75 %. Boubaker et al. [ 63 ] propose an OAHRS for recognition cur-sive words. They used a classifier module based on Hidden Markov Models implemented through the  X  X TK X  Toolkit. The used HMMs are of  X  X eft to right X  discrete type. The size of thecodebookis256.Forthetrainingandtest,theADABdata-base was used. A recognition rate about 86 % was reported. Similarly, Abdelazeem and Eraqi [ 52 ] present a new online handwriting recognition system for Arabic personal names based on HMM using a lexicon reduction implemented with a dynamic programming technique called  X  X inimum Edit Distance X . The system is trained with the ADAB database using two different methods: manually segmented characters and non-segmented words. The recognition rate reported is 92.5 % word based. The same authors tested the system pre-sentedin[ 48 ]usingaone-versus-one(OVO)multiclassfuzzy support vector machines model using RBF kernel. The rec-ognition rate was 87 % word based. The support vector clas-sifiers (SVCs) [ 84 ] find maximal margin boundaries between classes, minimizing the structural risk. However, SVCs pres-ent certain drawbacks in comparison with other machine learning techniques that may reduce their usability in some domains [ 85 ], thus explains the fail of the recognition rate. 4.5.6 Summary of online Arabic handwriting recognition For each cited literature reviewed, the methods used are given. As each system has a particular database for the train-ing and the test, the features and the lexicon size in the data-base used are also given (Table 4 ).

The panel discussion presented in [ 86 ]aftertheICFHR 2008 workshops highlights the recent achievements in the domain and discusses the impact of handwriting recognition technologies and researchers made in the last twenty years on the industrial and commercial sector. The current situation was analyzed in details and the most salient points that will drive the future studies can be summarized in three points. First, the need to restructure and unify the efforts of the both academic and industrial handwriting recognition community seems to be a necessity especially that the field of handwrit-ing recognition is still considered as an open research area and it is still of interest. Second, while being convinced that we are far away of reaching the human performance, more valuable researches and studies can be done thanks to the availability of more compact and powerful computers and the recent innovation in the recognition process. Finally, the major handicap of most available applications is their limited lexicon used, thus inducing a lower acceptability ratio of the final product by the users. Therefore, the key to enhance the future expansion of handwriting recognition systems will be versatility. 5 Online Arabic databases A handwriting recognition engine requires a database which contains reference information regarding the shape it is to interpret. To be fully generic and to be able to interpret as many variations as possible, the reference data should be based on as much diverse handwritings as possible. In fact, large standard databases with large datasets are an essen-tial requirement for handwriting recognition research and development. For Latin script, many databases have been developed, especially for the English one like UNIPEN, IR-ONOF, NIST, and more recently the  X  X AMon-Do database X  [ 87 ] which is an online English sentence database acquired from handwritten text on a whiteboard using ebeam technol-ogy. It was used by many interesting recent works as in [ 3 , 4 ] and [ 7 ]. For the Arabic script, many databases have been produced but fewer have become publicly available. In fact, researchers have developed their private databases represent-ing generally small dictionaries with limited lexicon or just isolated forms of letters or/and digits. The number of writers is also usually restricted. In addition, these databases do not include the entire handwritten words or word parts in the Ara-bic language and are specific, more or less small. As a result, until now, there is no robust standard comprehensive data-basedevotedtoonlineorofflineforArabichandwritingscript recognition. This creates an urgent need for developing wide databases for training and testing, although some attempts have been realized and one of the first databases that was publicly available and became the first standard database for Arabic is the IFN/ENIT [ 88 ] which is an offline database for Arabic words including 946 Tunisian town/villages names and postal codes written by 411 people. A Persian version of the IFN/ENIT was recently released the  X  X fn/Farsi-Database X  including Farsi city names handwritten. It consists of 7,271 binary images of 1,080 Iranian province/city names, col-lected from 600 writers. For each image in the database, the ground truth information includes its ZIP code, and sequence of characters and numbers. Another interesting Farsi data-base is  X  X HT X  [ 89 ], an unconstraint Farsi handwritten text database. It contains 1,000 filled forms. It includes totally 106,600 handwritten Farsi words and 230,175 subwords dis-tributed in 8,050 sentences. In average, each filled form com-prises 6.45 text lines, 8.05 sentences, 106.6 words, 230.175 subwords, 406 characters, and 132.1 dots. Each text line con-tains 16.53 words and each word includes 2.16 subwords and 3.81 characters. It was created by 250 writers. Always, in offline context, others databases can be mentioned as the  X  X HTD X  [ 90 ].

The need for advancing Arabic online handwriting recog-nition systems drives the research community to create and collect online Arabic databases such as the ADAB database used in ICDAR 2009 [ 91 ] and ICDAR 2011 [ 92 ] online Ara-bic handwriting recognition competition. It was developed in cooperation between the Institut fur Nachrichtentechnik (IfN) and the Research group on intelligent Machines (RE-GIM). The database consists of 20,575 Arabic words hand-written by more than 165 different writers, most of them selected from the narrower range of the National school of Engineering of Sfax (ENIS). The text written is from 937 Tunisian town/village names [ 93 ]. Following its use in competitions, recent researches [ 10 , 38 , 48 , 63 ]haveusedit to validate their work and this despite the fact that it is a lim-ited lexicon [ 92 ]. However, there are real attempts to create larger databases much more generic and representative of the Arabic language. The first attempt was by Saabni et al. They propose in [ 44 ] to create a synthetic comprehensive database including many shapes for each word while using and imi-tating different handwriting styles. For this, they extracted 300,000 different words combined of 48,000 different word parts. The second attempt was by ATLEC [ 94 ], the Arabic Language Technology Center. It consists of producing a large dataset (1,000 writers and 5,000 pages) for Arabic online handwritten documents which are intended for training and benchmarking large vocabulary systems. This database con-sists of 5,000 pages that include approximately 35,000 lines. Eachlineincludesonesentence.Thewholedatabaseincludes around 175,000 words that consist of approximately 500,000 paws and about 1 million characters. The database is col-lected from 1,000 different writers with average five pages per each writer. The database includes samples of 17,000 unique paws that are the most frequent paws in the Arabic language and represent around 95 % coverage for the Arabic language1. The database includes samples from the com-mon punctuation marks and all the numerals. Another online Arabic database counting sentences is  X  X HASD X  [ 95 ]. It includes 154 paragraphs written by 48 writers. It contains more than 3,800 words and more than 19,400 characters.
Despite the growing size of the databases that are in con-stant expansion, the problem of limited lexicon vocabulary remains unsolved especially in the academic context since latest recent work is still considering increasing the database size rather than applying segmentation techniques for build-ing hierarchical graphs representing different characters or graphemes positions in the world. This is, in a part, due to the fact that most Arabic studies are still working on iso-lated characters or digits. The availability of databases will be important for the research community in order to test new ideas and algorithms and to perform benchmarks and thereby measure progress and general tendencies. 6 Competitions The series of competition for Arabic handwriting recogni-tion systems has shown a positive effect for the improvement of recognition systems. At the first Competition organized on the ICDAR 2005 [ 96 ], only five systems have partici-pated, in the second competition in 2007 [ 97 ] more than 14 systems have participated, and the performances are better. This improvement of the performance of recognition systems motivates the community working on online Arabic hand-writing recognition competition to organize their own com-petition. The first international online Arabic handwriting recognition competition was held in 2009 [ 91 ]. This explains why many referenced works were published in 2009. For comparing the participants system X  X  performance, the ADAB database was used. As part of the competition, seven sys-tems have been benchmarked by independent leading domain experts. Among the tested recognition systems, six were developed in academic context and one was a commercial product. The systems were tested on known data (sets 1 X  3) and on one test dataset which is unknown to all partic-ipants (set 4). The accuracy rate and the recognition speed were measured. With 99 % accuracy rates, Vision Objects MyScript system, the commercial one has the highest rec-ognition rates, almost 4 % higher than the second best sys-tem participating in the competition. Regarding the recogni-tion speed, Vision Objects won over its competitors hands down with an average processing time of 69ms per word: more than 25 times faster than the second fastest system in the competition [ 93 ]. In ICDAR 2011, the second version of the competition was held. Six systems participated, four from academic university and two were submitted by Vision Objects, the winner of the last competition and of the actual one. The results were almost the same as the previous ver-sion.TheHMMtoolkit(HTK)wasusedbythefouracademic systems given a very high accuracy whereas recurrent neural networks were used by the winner. We notice the use of the offline image as an extra source of information [ 92 ].
The competition results show that Arabic handwritten word recognition systems have further made remarkable pro-gress within the last years. Most of the participating systems show a very high accuracy and some also perform at very high speed [ 91 , 92 ]. 7 Future work and conclusion This work presented a survey on online Arabic handwrit-ing recognition. A description of the major approaches men-tioned in the literature is given as well as an overview of the major handwriting problems and different processing steps presented in each referenced paper. In our review of the field that covered basically theoretical aspects, we identified sev-eral mature recognition systems that are being used for non-trivial recognition tasks in academic context. It has revealed that online Arabic handwriting recognition systems made a remarkable further progress. Most of the reviewed systems show a very high accuracy.

According to the literature, quite diverse research direc-tions exist. Most online Arabic script recognition studies, as we have seen, concentrated more on classification algorithms than other recognition aspects. This explains the detailed description of the classification methodologies presented. A summary was given by the end describing for each cited liter-ature reviewed, the methods, and the used database for both trainingandtesting.Manyattemptsforproducingtrueuncon-strained continuous cursive writing and developing real-time algorithms were perceived.

Except for some very successful industrial applications describedpreviously,theproblemsposedbyhandwritingrec-ognition are far from being solved especially in the task of unconstrained recognition. Further investigation is needed especially that results presented in academic context are very promising though much lower than those of industrial com-munity. Consequently, the need to develop business models where handwriting recognition is the technology of choice in applications that consumers find convincing should no more delay. The implementation of Arabic handwriting recogni-tion in real life needs to be improved.
 References
