 Infectious disease transmission has been studied with a network based approach and at an individual level [1]. However, existing studies often assume network structures are given in advance (e.g., a ir travels for the spread of H1N1 [2]), suggesting that it is possible to know which individual could be infected next. In reality, what is possible to observe is only the spatiotemporal surveillance data, containing infection times and locations of reported infectio n cases. This data provides no knowledge of the hidden transmission pathways that denote the routes of disease propagation among geographical locations. This real-world sit-uation directly poses a significant challenge to the policy makers in applying intervention strategies at appropriate times and locations. In this regard, infer-ring disease transmission networks (DTNs) becomes an important and urgent research problem in epidemiological studies, which is our key objective.
The network inference problem has been widely studied in the information diffusion domain and is usually conducted at an individual level. Based on em-pirical time-series data of when people ge t informed, the static network inference is transformed into a combinatorial optimization problem [3]. Formulating it as a MAX-k -COVER problem, Rodriguez et al. have proven that selecting the top k edges that maximize the likelihood of the static information diffusion net-work (IDN) structure is NP-hard. They introduced a greedy algorithm based on the submodularity properties to approximate the optimal solution. Myers and Leskovec formulated a similar problem with heterogeneous edge weights into a convex optimization problem, and proposed a maximum likelihood method to solve it [4]. In addition, having noticed that the structure of a social network is sparse, they introduced penalty functions into the objective function to improve the accuracy. In a recently published study on inferring DTNs at the individual level [5], Teunis and Heijne used a pairwise kernel likelihood function to incor-porate disease related information, and trained and applied the model using a real-world dataset collected from a university hospital.

The above work has provided insights into solving network inference problems at an individual level. However, inferring DTNs is more meaningful and prac-tical at a metapopulation level, where nodes and edges represent patches with subpopulations (e.g., cities) and transmission pathways among them (e.g., trans-portation) rather than individual persons and their pairwise connections (e.g., social contacts). This is due to the considerations of: (i) the appropriateness of simulating disease transmission in both spatial and temporal scales [6], (ii) diffi-culties in simulating complicated human behaviors and collecting a huge amount of personal information [1], and (iii) the practice of controlling disease transmis-sion from the view point of policy makers [7]. However, this treatment leads to two additional challenges: (i) nodes within metapopulation based DTNs can in addition connect to themselves, indica ting susceptible people get infected by infected people within the same subpopulation, and (ii) metapopulation based disease transmission follows Directed Cyclic Graphs (DCGs) rather than Di-rected Acyclic Graphs (DAGs) as in information diffusion or individual based DTNs. Even if a large proportion of a certain subpopulation is infected, the remaining susceptible persons that have not been temporally infected will still have chances of being infected later.

Inferring metapopulation based DTNs is not only desirable but also challeng-ing. As far as we know, there has not been such work done before. In this paper, we will address this problem, and more specifically, make three contributions: (i) to build a generalized linear disease transmission model that considers all possible transmission pathways at the metapopulation level, (ii) to develop an inference method, called NetEpi, that infers hidden DTNs based only on the spa-tiotemporal surveillance data, and (iii) to solve the network inference problem over DCGs rather than DAGs. We believe such work is also practically mean-ingful since it helps computationally predict large-scale infectious disease spread and provide policy makers with insights into optimizing intervention strategies.
The paper is organized as follows. The metapopulation based DTN inference problem is formulated in Section 2. A two-step inference method (NetEpi) is introduced in Section 3. NetEpi is evalu ated by using both synthetic and real-world datasets in Section 4. Finally, we make conclusions in Section 5. A ground-truth DTN is defined as G = &lt;V, E&gt; , where the set of nodes is denoted as V = { v i | i =0 , 1 , 2 , ..., N } . i is the index of a specific node. v 0 represents the external source node for the imported cases that would potentially cause local epidemics [8] (Imported cases are the laboratory-confirmed infection cases where people have traveled to disease e ndemic regions within days before the onset of the disease [8]). v i ( i =1 , 2 , ..., N ) correspond to the rest of nodes within the target region. E = { e i | i =1 , 2 , ..., N } denotes the set of edges with weights W = { w i | i =1 , 2 , ..., N } . e i is the set of incoming links for node i ,and w i is the corresponding weight vector. Source node v 0 has no incoming links. The physical meanings of these edges tha t have non-zero weights describe the generalized transmission pathways that temporally correlate subpopulations in terms of their infection observations. In reality, G cannot be directly obtained. What is often collected is surveillance data, which can be represented as D = { on locations and infection times. v i corresponds to a geographical location (e.g., a city, or a township), ic i is the aggregated number of infection cases, and t i indicates a time step. T is the considered time period of disease transmission.
We refer to the estimated DTN as G  X  , and consider three types of transmis-sion pathways: (i) internal transmission component (ITC), which indicates that infected people, directly (e.g., in the air-borne disease of influenza) or indirectly (e.g., in the vector-borne disease of malaria), infect susceptible people within the same subpopulation, (ii) neighborhood transmission component (NTC), where disease transmits, through physically connected highways, adjacent borders, etc., among several subpopulations (it signifies the interactions happening between infected people in different subpopulations), and (iii) external influence compo-nent (EIC), which represents the source of imported cases from distant endemic regions or countries. In G , it is an external node connected to all the other nodes.
To characterize a disease transmission process over G , we integrate both of the internal transmission component and the external influence component with the neighborhood transmission component. The total number of infection cases can be written as a linear combination of the above three components plus an error term  X  that captures the unpredicted biases, as follows: where itc i t , ntc i t ,and eic i t refer to the numbers of infection cases from ITC, NTC, and EIC to node i ( i =0)attimestep t , respectively. N i is the number of the neighbors of node i . The error term  X  follows a zero-mean normal distribution,  X   X  N (0 , X  ). Eq. 1 characterizes the tempora l dynamics of infection cases at each location. To be noticed, in the real world, once a patient is diagnosed to be infected, treatments and interventions (e.g., medication and isolation) would be taken by the physicians or hospitals. Thus, the infection cases at the current time step would be set to be isolated in the following time steps.
 T } , we intend to infer E of G and their corresponding weights W . The likelihood function for a specific node i basedonEq.1is:
L ( w where N  X  i indicates the number of the estimated neighbors of node i within G  X  .  X  is the variance of the normal distribution for  X  . Therefore, we transform the network inference problem into an optimization problem, which is to find an optimal combination of neighbors with accurate weights for a specific node i . Specifically, to infer network G  X  , we aim to maximize the likelihood function, given as: 3.1 Partial Correlation Network Construction Given D , we first hope to construct an approximate network structure. It will reduce the trivial computations for our second step as well as filter out a propor-tion of false positive edges. Using the pearson correlation to build such networks is intuitive but not workable in the case of disease transmission. As shown in Fig. 1(a), disease transmission may follow a path from i to k ,thento j .Even though i and j are not directly connected, they m ay still be correlated. Therefore, in the approximate network structure, denoted as G p , they may be connected as illustrated in Fig. 1(c). The same problem also exists in the case of Fig. 1(b), where i and j are the children of k considering the disease transmission dynamics.
To avoid such situations, we carry out first-order partial correlation analysis, which measures the dependence between two variables, while removing or fixing a third variable. In this regard, to compute it between nodes i and j ,weremove or fix the impact of another node k ,where k =0 , 1 , 2 , ..., N and k = i, j .Fromthe results, we choose coefficients that indica te strong correlations with significant p-values. It should be mentioned that partial correlation usually does not provide edge directions [10]. Therefore, to infer di rected edges, we analyze the time-series data with a time lag (e.g., one day or one week). Then, the direction is from the node using the previous time-series data to the node using the current one. The partial correlation coefficient between nodes i and j after fixing the variable are the covariances. This method removes many false positive edges as well as generates an approximate partial correlation network (PCN), G p . 3.2 Back-Tracking Bayesian Learning It should be noted that some edges in G p still do not exist in G . A possible solution is to set the weights of these false positive edges with values of zero during the inference process. This is similar to the removal of irrelevant basis components as in basis pursuit for dimensionality reduction [11]. In our proposed inference method, we base our second step on the Sparse Bayesian Learning (SBL) framework [12]. To be noticed, i f two components are similar, SBL only chooses one of them in order to compress the relevant information. However, in our case, even two nodes are similar, we aim to find both of them.
 For node i , we divide preprocessed surveillance dataset D into two subsets: an M  X  1 vector of y = { &lt;v size of output variable y and input variable x . N p represents the indices of the possible neighbors that node i has based on G p . T  X  1 is the previously considered time period of disease transmission. For the sake of presentation, in the following, we omit the index i for y , x , and other parameters. If not specifically stated, all the parameters are formulated for node i . Here, we use a time lag of 1 between y and x . The relationship between y and x can be formulated based on the generalized linear transmission model introduced in Section 2 as follows: where w = { w j | j  X  N p } is a vector indicating all possible incoming links estimated based on G p .  X  is an error term. Under the framework of SBL, both w and  X  follow a zero-mean Gaussian distribution with variances of  X  and  X  , p (  X  )= N (0 , X  ).Becausewehavenopriorknowledgeabout w and  X  ,itisreason-able to set them with non-informative prior distributions (e.g., Gamma distri-bution).  X  and  X  are assumed to have the same hyperparameters for all nodes.
Given the observation data of y and the prior distribution of  X  and  X  ,the posterior distribution of w is: which is a Gaussian distribution N (  X  ,  X  ) with  X  =  X   X  1  X x T y ,  X  =(  X  +  X   X  1 x T x )  X  1 where  X  = diag (  X  maximization combined with a maximum a posteriori probability (MAP) esti-mate transforms the whole problem into that of maximizing the marginal likeli-hood function of: Writing Eq. 6 into a logarithm form L (  X  ), we have: with C =  X I + x  X   X  1 x T . The derivatives with respect to  X  j and  X  are [13]: Setting Eqs. 8 and 9 to zero, the estimations of  X  j and  X  become: The above iterative estimation procedure is solved by using the Expectation-Maximization algorithm. In each iteration, we estimate the contributions to the marginal likelihood function for all nodes in G p . The one with maximum con-tribution is selected as the candidate neighbor. Then, its corresponding weight is computed. As to be noted, in G , we only have positive links. However, the prior distribution may cause w to become negative. To avoid this, a constraint of limiting w to be positive is introduced. To incorporate this constraint, we use a back-tracking technique. During the EM learning procedure, the update of marginal likelihood function and other pa rameters proceeds sequentially. Con-sequently, each time  X  ,  X  ,  X  j ,and  X  are updated, we select those  X  j that fail the constraint, and put their corresponding indices into a blacklist. The program is rolled back to the previous step and p roceeds by selecting nodes that do not exist in the blacklist. The algorithm is shown in Alg. 1.
 Algorithm 1. Back-Tracking Bayesian Learning 3.3 Discussions As stated in [3], it is not trivial nor practical to find all the edges within G , or the exact time required to stop the i nference program. Thus, once the pro-gram iterates to the maximum permitted iteration steps, or the update of the marginal likelihood function converges to a small value, we will stop the learning procedure. To compute the PCN, the time complexity is O ( N 3 ). To speed up this process, we use dynamic programming to recursively compute the first-order par-tial correlation based on the result of zeroth-order partial correlation. As for the back-tracking Bayesian learning, the complexity of Bayesian learning is mainly distributed over the computation of parameters of  X  ,whichrequires O ( N 3 ). An efficient incremental algorithm proposed in [12] can optimize this computation. Besides, the computation based on G p can also reduce this computational time. After integrating the back-tracking algorithm, the time complexity becomes ex-ponential. However, based on our experiments, the algorithm usually converges fast. That is to say, the algorithm seldom tracks back to the nodes that are selected at the very beginning. This is caused by the previous Bayesian learning; it selects those significantly contribut ing nodes at the very beginning, making the marginal likelihood function converge to a near optimum solution without large space to increase, and stable until reaching the stopping criteria. 4.1 Experiments Based on Synthetic Data The synthetic data generation proceeds a s follows: we first use Kronecker Graphs model [14] to generate a basic network structure. Then, we link all the nodes with an external node v 0 , and generate self-connected edges with predefined probabilities. We iteratively run the transmission model, as given in Eq. 1, for a sufficient number of time steps to generate the disease surveillance data. Experimental Setting. We construct 3 types of network structures: (i) core-periphery networks (CPNs), which have a cluster of nodes in the core of the network, (ii) hierarchical community networks (HCNs), where a proportion of the nodes form several small communities, and (iii) random graphs (RGs), which have no obvious pattern. Then, for each structure, we generate networks with different sizes: 64n with 100e, 150e ( X  X  X  X nd  X  X  X  are the abbreviations of  X  X odes X  and  X  X dges X , respectively); 128n with 180e, 200e; 256n with 350e, 400e; 512n with 720e, 800e. For each of them 10 datasets are produced. Specifically within each generation process, we make sure that the transmission process cover all the edges in G . In total, there are 3 types of network topologies  X  8 different sizes  X  10 independent transmission processes = 240 datasets.
 The Baseline Method. To our best knowledge, there have not been much prior work on inferring network structures over DCGs. Therefore, we utilize a probability based baseline method. At two adjacent time steps t = n and t = n + 1, all the nodes that have infection cases at t = n will have connections to those nodes have infection cases at n +1. The edge weight is affected by the number of infection cases and the number of infect ed nodes at the previous time step. We select the top k edges with the highest weights, and form the estimated disease transmission network G  X  accordingly. The mathematical formula to compute the baseline edge weight is w ij = ic i t ic j t +1 / N i =1 ic i t .
 Result Evaluation. To evaluate the inference resu lts, we compute the precision-recall curves as shown in Fig. 2. For the sake of space, we display only part of our experimental results here. The precision and recall are defined as  X  X hat fraction of edges in G  X  is also present in G  X , and  X  X hat fraction of edges of G appears in G  X   X , respectively [3]. For nodes i and j , if both ground-truth edge e ij and inferred edge e  X  ij exist, and the difference between the corresponding weights | w
In our experiments, NetEpi outperf orms the baseline method in all 240 datasets. Specifically, for networks that have the same sizes but different topolo-gies, NetEpi performs the best on th e CPNs. Nodes located in the core re-gion have more connections as compared with those in the periphery region. Therefore, to achieve an optimal soluti on, core-located nodes will have higher probabilities to possess a more number of combinations of neighbors. In other words, the probabilities to find a globally optimal solution for a single node will decrease as the number of its incomi ng edges increases. The accuracies of NetEpi over CPNs are consequently biase d by the tradeoff between core-located and periphery-located nodes. In comparison, for HCNs, there is no longer a single core. In contrast, there are several sub-cores that individually form a sub-community. This structure makes the average number of combinations for each node increase and directly affect the infer ence accuracy. As for RGs, the number of connections for each node does not have a fixed pattern, and NetEpi achieves oscillating results. Here, we use an average out-degree distribution to illustrate the accuracy differences between networks with distinct topologies. It is defined as d avg = N i =1 d i /N where d i is the out degree for node i , d avg is the average degree for the whole network. Our analysis results of the 24 synthetic networks show that the average degrees for CPNs are always smaller than those for HCNs. And, the average degrees for RGs present oscillating patterns (Fig. 2).
For networks with the same topologies but different sizes, NetEpi achieves better results on inferring smaller ones as shown in Fig. 2. During the infer-ence process, the whole Ground-Truth Network (GTN) is treated as a complete network. Even given the approximate structure G p , the complexity quadrati-cally increases as the number of nodes increases. Meanwhile, as the edge number increases, the number of combinations of neighbors for each node to achieve op-timal solutions increases as well, which dir ectly interferes the inference results as in Fig. 3(a). However, the network sizes of metapopulation based DTNs are usu-ally small at the administrative level. For example, for a global epidemic disease, WHO publishes statistical reports at the country level. Therefore, a possible so-lution to infer large-size networks is to perform hierarchical clustering based on geographical information. NetEpi is conducted from the highest level where each node represents a cluster of lower-le vel nodes. Then, within each high-level node, NetEpi is performed again to infer lower-level transmission networks. This process is repeatedly and sequentially conduced in order to get a whole picture of large-size networks. Fig. 3(b) shows an example of the prediction results of NetEpi. It is obvious that the predicted epidemic trend happening in the GTN is well captured by the inferred network . This validates that NetEpi converges to an optimal solution, although this may not be the global one.
 4.2 Experiments Based on a Real-World Dataset Experimental Setting. The real-world dataset was provided by Chinese Cen-ter for Disease Control and Prevention. It contains reported malaria cases in Yunnan province, China. In total, there are 2928 cases reported in 51 townships in 2005. These townships are distributed along the border between China and Myanmar (a high malaria-endemic country) and classified into 5 categories based on the numbers of infection cases: (200 , +  X  ) (red), (150 , 200] (purple), (100 , 150] (green), (50 , 100] (yellow), and (0 , 50] (blue). The dataset is very sparse, with missing data. Moreover, there is no complete information about the sources and identifications of imported cases. Thus, a fixed external node cannot be set up before the inference procedure. Like the periodical pattern of the Internal Transmission Component, the External Influence Component also presents reg-ular pattern because of the frequent human mobility motivated by cross-border trade and business. We consequently merg e EIC with ITC, and represent either of them, or their combination, by self-connected edges. This is reasonable because it has been recorded that most of thes e imported cases were due to working, trading, and/or visiting in/with Myanmar regularly. Therefore, self-connected edges are able to capture these regular patterns. We are informed that there exist imported cases, and expect that the inferred malaria transmission network contain many self-connected edges. It ha s been widely reported that the incuba-tion time for Plasmodium vivax is 12  X  17 days [15]. However, studies have also reported that the incubation time could be longer from several months to sev-eral years [15]. Therefore, we choose 21 days as the time window when inferring the underlying malaria transmission network, so that it compromises both the reported incubation time and the sensitivity analysis that we have conducted previously.
 Result Interpretation. The inferred network contains two classes of nodes. Some of them connect to themselves as we expected, while the others form communities. Self-connected nodes o ccupy 50.98% of the whole network. This caters to our previous expectation. Th ese nodes are located adjacent to the border between China and Myanmar, or co nnected with the border by highways, or situated close to rivers, which provide suitable environments for the vectors of malaria to reproduce. Therefore, the malar ia endemic within these self-connected nodes are possibly caused by EIC, ITC, or their combinations.

As shown in Fig. 4, there is a community found in the inferred network. It contains most nodes that have severe endemic situations. Many townships are distributed along two rivers. Besides providing suitable habitat there, rivers also bring the larva of vectors from the upstream to the downstream. Therefore, the inferred edges of these nodes possibly represent partial influences from rivers, and impact of vectors X  movements. In addition, the severest township 6 has con-nections to all the other second level severity townships (green nodes), indicating that their disease transmission interactions may be the dominant reason for the local malaria endemic in the region. Other townships 16, 28, and 30 are connected with the others by highways (e.g., S231, S233, S317, and S318), indicating that their transmission pathways are possibly caused by transportation.

It can readily be noted from Fig. 4 that some inferred edges are thicker than others, denoting higher transmission influences. For example, e 18  X  6 (the dash in pret this based on Fig. 5 (a) -(f) where reported cases are aggregated on an eight-day basis for clear presentation. As shown, although township 18 (Fig. 5(e)) has fewer reported cases than other example townships and contains many zero-case intervals, its temporal trend does not significantly violate the trend of township 6 (Fig. 5(b)). In comparison, the  X  X ountain-valley-mountain X  pattern of town-ship 6 can only be partially matched with other townships (e.g., townships 4 (Fig. 5(a)), 14 (Fig. 5(d)) and 28 (Fig. 5(f))). The influence from township 6 to 4 is much less than that from the reverse direction. This is because the second highest peak appearing between time st eps 20 to 30 in the trend of township 6 cannot contribute to the valley appearing at the same time interval in the trend of township 4. However, the reverse contri bution is reasonable. Intuitively, the pair of townships 4 and 8 (Fig. 5(c)) and the pair of townships 14 and 28 have similar trends respectively, but NetEpi only finds edges between townships 14 and 28. This is due to that, for townships 4 and 8, their trends before time step 20 seem to be similar, but those after step 20 present a time lag of around 8*8 days.

There are totally 47 rather than 51 townships contained in the inferred net-work. The 4 missing nodes have neither self-connected edges nor neighborhood connected edges. The sum of their infect ion cases is 81, which is a very small proportion of all infection cases. Therefore, we think their disease transmission dynamics are caused by accidentally imported cases. In addition, although some townships are located very close to each other, and in the positions of the up-stream or the downstream of the same river, they are not connected in the inferred network (e.g., townships 10 and 17). We believe this is because their transmission pathways are not significant or their malaria endemic is mainly af-fected by imported cases that overtook t he impact of other factors. To interpret them, currently available information about highways, rivers, and geographical locations may not be fully adequate, because they represent the transmission pathways that are the comprehensive results of all impact factors . In addition, the roads that are locally formed and managed are not displayed in the map, which may also play significant roles in malaria transmission. Missing reports and data sparsity may affect the results as well. However, our method can still detect some hidden connections that may draw the attention of policy makers. In this study, based on the need for real-world disease transmission pattern discovery, we have defined and addressed an inverse network inference prob-lem. Given only the surveillance data, we have proposed a two-step network inference algorithm, called NetEpi. Having highlighted the major differences be-tween the individual based network inference and the metapopulation based network inference problems, we defined a linear disease transmission model over a Directed Cyclic Graph (DCG) containi ng three types of transmission path-ways as often found in the real-world situations, namely, internal transmission component, neighborhood transmission component, and external influence com-ponent. We performed partial correlation analysis to construct an approximate network structure for the underlying disease transmission network, and then con-ducted back-tracking Bayesian learning to iteratively infer edges and estimate their corresponding weights. We have evaluated the proposed method by using synthetic data. The experimental results have shown that NetEpi outperforms a probability based baseline inference method, and performs well over a relatively small-scale network, which is sufficient for metapopulation based disease trans-mission network modeling in practice. Meanwhile, NetEpi achieves a reasonable accuracy over different network topologies. In addition, we have applied NetEpi to a real-world disease transmission da taset and have discov ered certain mean-ingful community patterns as well as transmission pathways. Our future work will focus on inferring disease transmission networks in which there exist various underlying, sometimes dynamically-changing network structures. We will also consider other impact factors that may be disease-dependent. This work will further be applied to the real-world situations for policy makers to develop and implement intervention strategies for controlling disease transmission. Acknowledgement. The authors would like to acknowledge the funding sup-port from Hong Kong Research Grants Council (HKBU211212) and from Na-tional Natural Science Foundation of China (NSFC81273192) for the research work being presented in this paper.

