 1. Introduction
Single-model assembly lines, designed to carry out a single homogenous product, are the most suited production systems for low variety of demand scenarios. But, in some industries (e.g. automobile industry) most of the models have a number of features, and the customer can choose a model based on his/her desires and financial capability. Due to the high cost to build and maintain an assembly line, manufacturers produce one model with different features or several models on a single assembly line (mixed model assembly line). In the relevant literature, balancing problems faced in a mixed model assembly line are classified into two groups, type I and type II mixed model assembly line balancing problems, gravitate to, MMALBP-I and MMALBP-II, respectively. The MMALBP-I (MMALBP-II) consists in assignment of tasks to workstations such that the precedence relations of each models are satisfied and the number of workstations (cycle time) is minimized for a given cycle time (number of workstations) and given M models, the set of tasks associated with each model, the performance times of the tasks, and the set of precedence relations which specify the permissible orderings of the tasks for each model ( Gokcen and Erel, 1997 ). Both versions of the problem are NP-hard ( Bukchin and Rabinowitch, 2006 ). In this study we deal with MMALBP-I.
 ability to provide local optima of high quality. Generally, hybridiza-tion has been considered as an impo rtant efficiency enhancement technique of GA ( Goldberg, 2002 ). It is well-known that although GA excels at gravitating the global minimum, it is not especially fast at finding the minimum when it falls in a locally quadratic region ( Haupt and Haupt, 2004 ). In this paper, we present a new hybrid GA (hGA) in which the RPWT ( Helgeson and Birnie, 1961 ), Kilbridge &amp; Wester Heuristic ( Kilbridge and Wester, 1961 )andPhase-Iof
Moodie &amp; Young Method ( Moodie and Young, 1965 ) are sequentially hybridized with GA. The rational e why we hybridized GA with the three heuristics is to start the search from different points of global search space, hence to drive the search space towards a promising area of the global space and to increase the probability of finding good solutions.

The rest of the study is organized as follows. Formulation of the MMALBP-I is given in Section 2 . In Section 3, we define the proposed hGA. An illustrative example is solved in Section 4.
Comparative study is given in Section 5. The discussions and conclusions are presented in Section 6. 2. Formulation of the MMALBP-I
The zero X  X ne multi-objective mixed integer program ( Vilarinho and Simaria, 2002 ) for MMALBP-I with parallel workstations and zoning constraints is depicted below. Zoning constraints which force (forbid) the assignment of different tasks to the same workstation are called positive (negative) zoning constraints. The mathematical model for the MMALBP-I with parallel workstations has the following characteristics: The planning horizon has a fixed length of P .
 A set of M similar models can be simultaneously assembled.
The forecast demand denoted by D m , over the planning horizon, for model m requires the line to be operated with a cycle time C  X  P = P M m  X  1 D m .

The overall proportion of the number of units of model m being assembled is q m  X  D m = P M p  X  1 D p : There are N tasks to be performed in a set of S workstations.
Each model has its own set of precedence relationships, but there is a subset of tasks common to all models. Hence, the precedence diagrams for all the models can be combined such that the resulting diagram contains the N tasks.
 objective function. Moreover, the objective of smoothing work-load between the workstations is denoted by the second term where S 0 is the actual number of workstations required to meet of replicas of workstation k ), the objective of smoothing workload within each workstation is depicted by the third term where s  X  Constraints of the mathematical model are as follows: Subject to x  X  x bk r 1  X  a , b  X  A ZN , k  X  1 , ... , S  X  5  X  r r m r s km Z 0 k  X  1 , ... , S , m  X  1 , ... , M  X  7a  X  x ik A f 0 , 1 g k  X  1 , ... , S , i  X  1 , ... , N  X  7b  X  r k A f 0 , 1 g k  X  1 , ... , S  X  7c  X 
Equality (2) ensures that each task is assigned to only one workstation. Inequality (3) describes the precedence constraints among the tasks. It ensures that no successor of a task is assigned to an earlier station than that task. Equality (4) is compatibility zoning constraint (positive zoning constraint). Positive zoning constraints are normally related with the use of common equipment or tooling. For example, if two tasks need the same equipment or have similar processing conditions it is desirable to assign these tasks to the same workstation. Equality (5) is incompatibility zoning constraint (negative zoning constraint). These constraints are usually imposed by technological issues such as when it is necessary to have a minimum time between the executions of the tasks or when it is not possible to perform some tasks in the same workstation for safety reasons. (6a) X (6c) ensure that each workstation X  X  time capacity is not exceeded by the task times assigned to each workstation, the maximum number of replicas of a workstation is not exceeded by the tasks which have a task time greater than the cycle time for at least one model, and only the workstations where the processing time of the tasks assigned to it, for at least one model, exceeds a certain proportion ( a %) of the cycle time can be duplicated ( m is a very large positive integer), respectively. Eqs. (7a) X (7c) define domain of the decision variables. 3. Proposed hybrid genetic algorithm for MMALBP-I Flow diagram of the proposed hGA is depicted in Fig. 1 . Initialization of the hGA contains generating the initial population procedure is repeated. Fig. 2 illustrates assignment of tasks to workstations according to a chromosome.

The performance of GA is correlated to directly with its careful selection of parameters, such as the population size, crossover rate, and mutation rate. The values of these parameters greatly determine whether the algorithm will find a near-optimal solution and whether it will find such a solution efficiently.
Choosing the right parameter values, however, is a time-consuming task and considerable effort has gone into developing good heuristics for it (for more information about determining the parameters of a GA see Eiben et al., 1999 ).
 Our proposed hGA differs from the hybrid GA presented by
Noorul Haq et al. (2006) by the following points. They used only modified version of the RPWT to obtain initial solution, and then inserted this solution in the randomly generated initial popula-tion of the genetic algorithm. In the current study, we employ more heuristics to increase the probability of finding good solutions. The randomly generated initial population for GA may contain individuals from the same region of the solution space.
Hence, using more heuristics to obtain initial solutions will give us a chance to start the search from different regions of the solution space, and consequently to find good solutions in a reasonable amount of time. The reason why we prefer these three conventional heuristics to find solutions for inserting in the randomly generated initial population for GA is that they perform well according to average line efficiency and average smoothness index ( Ponnambalam et al., 1999 ). The line efficiency shows the percentage utilization of the line and is computed as the ratio of total station time to the cycle time multiplied by the number of workstations. The smoothness index ( SI ) indicates the relative smoothness of a given assembly line balance and is expressed as
SI  X  q and ST k  X  station time of station k . In the current study, the average line efficiency is employed as a performance criterion while testing the proposed hGA. On the other hand, the fitness lowest predecessor number and maximum average task time were given a priority while assigning operations to the work-stations. Average task times were obtained as the sum of the processing times of each task weighted by the respective production share for each model. The predecessors X  numbers for each task were derived from joint precedence diagram and assignments were made by taking into consideration the task processing times for each model in the mixed-model assembly line. The Moodie &amp; Young Method uses two types of matrixes, P and F , for determining available task to assignment. P and F involve immediate predecessors and immediate successors of each task, respectively. Tasks are assigned to consecutive work-stations on the assembly line by the largest candidate rule (maximum task time rule). In the proposed approach, for mixed model lines, the matrixes P and F were derived from joint precedence diagram. Average task times, obtained as the sum of the processing times of each task weighted by the respective production share for each model, were used while selecting tasks to assign to workstations according to largest candidate rule. Tasks were assigned to workstations by considering processing times for each model. While implementing the three conventional heuristics for mixed-model assembly line with parallel work-stations, if a workstation performs a task with processing time larger than a % of the C , for at least one of the models, its time capacity was set equal to MAXP ( C ), where MAXP  X  a /100. 3.2. Fitness evaluation
Genetic algorithms aim at finding the most fitted chromosome over a set of generations. The fitness function provides a measure of an individual X  X  performance (fitness) in the search space. The proposed hGA employs the objective function given in (1) as the fitness function. When two individuals with the same number of stations are compared, the individual with the most smoothed workstations according to workloads between stations and within stations is preferred to the other. 3.3. Selection
The individuals for mating are selected by roulette wheel selection strategy ( Holland, 1975 ). This strategy scales the fitness values of the members within the population so that the sum of the rescaled fitness values equals to one. To select a parent, first, a uniform random number within the interval [0, 1] is generated (wheel is spun), and then the first member whose cumulative rescaled fitness value is greater than the generated number is selected as parent. The steps of the used roulette wheel selection strategy are summarized as follows: 1. Sum the fitness values of all the population members, and call this F sum . 2. Divide the fitness values of all population members by F sum in order to calculate expected values of each individual in the population. 3. Generate a uniform random number, R s , between 0 and 1. 4. Loop through the individuals in the population, summing the expected values, until the sum is greater than or equal to R s .
The individual whose expected value puts the sum over this limit is the one selected. 3.4. Two point crossover
In the two point crossover, two points, which cut each of the parent into three parts (head (H), middle (M), and tail (T)), are using the procedure explained later. This procedure uses a table, called prohibit table and guarantees the feasibility.

Reconstruction procedure is carried out by removing all references to head tasks in the prohibit table, and then randomly choosing a task among those in the table with no predecessor requirements. This new task is then added to the next locus in the chromosome and is removed from the prohibit table. The process continues until all tasks are assigned.

With scramble mutation only the head of the parent is maintained and the tail is reconstructed randomly in a manner that ensures feasibility. 3.6. New generation
The elitism strategy is used as replacement strategy, which specifies how the next generation is to be created. The elitism strategy determines which individuals will stay in the population and which will be replaced by taking into account the fitness value of the individuals. The individuals of the new generation may be (i) individuals from the current generation, (ii) offspring produced by crossover, or (iii) individuals who underwent mutation. The most commonly used replacement strategy is elitism. The elitism strategy makes survive some number of the best individuals at each generation and hence guarantees that the final population contains the best solution ever found. The elitist replacement strategy employed in the hGA builds 25% of the new generation by surviving the related number of best individuals.
The reason of using 25% in elitism strategy is based on the results of our experiments. We observed that this elitism parameter 1 2 17 5. Performance evaluation of the proposed hGA
In order to evaluate the performance of the proposed hGA, 20 test problems ( Vilarinho and Simaria, 2002 ) are used. Main characteristics of the test problems are exhibited in Table 3 where N , M ,and C denote the number of tasks of the combined precedence diagram, the number of models, and cycle time of the assembly line, respectively. The precedence diagrams used for the problem set are shown in the last column. We classified the test problems as small-size (problems 1 X 4), medium-size (problems 5 X 14), and large-size (problems 15 X 20) according to the number of tasks they include.

GA were chosen experimentally in order to get a satisfactory solution quality in an acceptable time span, and are summarized in Table 5 .

Table 6 exhibits results obtained for the 20 problems by the three heuristics, pure GA, and hGA in terms of the number of workstations used ( S 0 ), the weighted line efficiency ( WE ), and D % (percentage difference between the minimum number of work-stations obtained by the different methods and either the LB pmix , for problems 5 X 20, or the optimal solution for problems 1 X 4). As can be shown in this table, simulated annealing results ( Vilarinho and Simaria, 2002 ) are also provided. Since Vilarinho and Simaria provided the test problems solutions in terms of S 0 , WE , and D %, we used these three measures in the current paper to be able to compare performance of our algorithm with those of others. As mentioned in Section 2 , one of the objectives of the
MMALBP-I considered in this study is to minimize the total Acknowledgements
The authors would gratefully like to extend their appreciation to the anonymous referees whose valuable suggestions lead to an improved organization of this paper.
 References
