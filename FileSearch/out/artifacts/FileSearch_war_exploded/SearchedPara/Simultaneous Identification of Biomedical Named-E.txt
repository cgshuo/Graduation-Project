 Relation extraction from text is a step beyond Named-Entity Recognition (NER) and generally de-mands adequate domain knowledge to build rela-tions among domain-specific concepts. A Biomedi-cal Functional Relation (relation for short) states in-teractions among biomedical substances. In this pa-per we focus on one such relation: Bacterial Protein Localization (BPL), and introduce our approach for identifying BPLs from MEDLINE 1 articles.

BPL is a key functional characteristic of pro-teins. It is essential to the understanding of the func-tion of different proteins and the discovery of suit-able drugs, vaccines and diagnostic targets. We are collaborating with researchers in molecular biology with the goal of automatically extracting BPLs from text with BioNLP techniques, to expand their pro-tein localization database, namely PSORTdb 2 (Rey et al., 2005). Specifically, the task is to produce as output the relation tuple BPL(BACTERIUM, PRO-TEIN, LOCATION) along with source sentence and document references. The task is new to BioNLP in terms of the specific biomedical relation being sought. Therefore, we have to build annotated cor-pus from scratch and we are unable to use existing BioNLP shared task resources in our experiments. In this paper we extract from the text of biomedical articles a relation among: a LOCATION (one of the possible locations shown in Figure 1 for Gram+ and Gram-bacteria); a particular BACTERIUM, e.g. E. Coli , and a PROTEIN name, e.g. OprF . (Nair and Rost, 2002) used the text taken from Swiss-Prot annotations of proteins, and trained a subcellular classifier on this data. (Hoglund et al., 2006) predicted subcellular localizations using an SVM trained on both text and protein sequence data, by assigning each protein name a vector based on terms co-occurring with the localization name for each organism. (Lu and Hunter, 2005) applied a hi-erarchical architecture of SVMs to predict subcel-lular localization by incorporating a semantic hier-archy of localization classes modeled with biolog-ical processing pathways. These approaches either ignore the actual location information in their pre-dicted localization relations, or only focus on a small portion of eukaryotic proteins. The performance of these approaches are not comparable due to different tasks and datasets. During our system X  X  preprocessing phase, sentences are automatically annotated with both syntactic in-formation and domain-specific semantic informa-tion. Syntactic annotations are provided by a statis-tical parser (Charniak and Johnson, 2005). Domain-Figure 1: Illustration of possible locations of pro-teins with respect to the bacterial cell structure. specific semantic information includes annotations on PROTEIN, BACTERIUM and LOCATION NEs by dictionary lookups from UMLS 3 , NCBI Taxon-omy 4 and SwissProt 5 , and two automatic Bio-NE recognizers: MMTx 6 and Lingpipe 7 .

We propose the use of a parser that simultane-ously identifies NEs and extracts the BPL relations from each sentence. We define NEs to be Relevant to each other only if they are arguments of a BPL re-lation, otherwise they are defined to be Irrelevant . A sentence may contain multiple PROTEIN (LO-CATION or ORGANISM) NEs, e.g., there are two PROTEIN NEs in the sentence below but only one, OmpA , is relevant. Our system aims to identify the correct BPL relation among all possible BPL tuples (candidate relations) in the sentence by only recog-nizing relevant NEs. Each input sentence is assumed to have at least one BPL relation.
 Similar to the approach in (Miller et al., 2000) and (Kulick et al., 2004), our parser integrates both syn-tactic and semantic annotations into a single annota-tion as shown in Figure 2. A lexicalized statistical parser (Bikel, 2004) is applied to the parsing task. The parse tree is decorated with two types of seman-tic annotations: 1) Annotations on relevant PROTEIN, BAC-TERIUM and LOCATION NEs. Tags are PRO-TEIN R , BACTERIUM R and LOCATION R respec-tively. 2) Annotations on paths between relevant NEs. The lower-most node that spans both NEs is tagged as
LNK and all nodes along the path to the NEs are tagged as PTR .

Binary relations are apparently much easier to represent on the parse tree, therefore we split the BPL ternary relation into two binary relations: BP (BACTERIUM and PROTEIN) and PL (PROTEIN and LOCATION). After capturing BP and PL rela-tions, we will predict BPL as a fusion of BP and PL, see  X  4.1. In contrast to the global inference done us-ing our generative model, heavily pipelined discrim-inative approaches usually have problems with error propagation. A more serious problem in a pipelined system when using syntactic parses for relation ex-traction is the alignment between the named enti-ties produced by a separate system and the syntac-tic parses produced by the statistical parser. This alignment issue is non-trivial and we could not pro-duce a pipelined system that dealt with this issue satisfactorily for our dataset. As a result, we did not directly compare our generative approach to a pipelined strategy. The training and test sets are derived from a small expert-curated corpus. Table 1 lists numbers of sen-tences and relevant NEs in each BP/PL/BPL set.
Since the parsing results include both NE and path tags (note that we do not use any external NER sys-tem), there are two metrics to produce and evalu-ate PL or BP relations: Name-only and Name-path metrics. The name-only metric only measures Rel-Training set 289 / 605 258 / 595 352 / 852 Table 1: Sizes of training and test sets (number of sentences / number of relevant NEs) evant PROTEIN, BACTERIUM and LOCATION NEs (see Section 2). It does not take path annota-tions into account. The name-only metric is mea-sured in terms of Precision, Recall and F-score, in which True Positive ( TP ) is the number of correctly identified NEs, False Positive ( FP ) is the number of incorrectly identified NEs and False Negative ( FN ) is the number of correct NEs that are not identified.
The name-path measures nodes being annotated as LNK , PTR or R along the path between NEs on the parse tree, therefore it represents confidence of NEs being arguments of the relation. The name-path metric is a macro-average measure, which is the average performance of all sentences in data set. In measurement of the name-path metric, TP is the number of correctly annotated nodes on the path be-tween relevant NEs. FP is the number of incor-rectly annotated nodes on the path and FN is the number of correct nodes that are not identified. 4.1 Fusion of BP and PL The BPL relation can be predicted by a fusion of BP and PL once they are extracted. Specifically, a BP and a PL that are extracted from the same sen-tence are merged into a BPL. The predicted BPL relations are then evaluated by the same name-only and name-path metrics as for binary relations. In the name-path metric, nodes on both PL and BP paths are counted. Note that we do not need a common protein NER to merge the BP and PL relations. E.g., for name-only evaluation, assume true BPL( B 1 , P 1 , L 1 ): if we predict BP( B 1 , ) and PL( P 1 , L 2 ), then TP = 2 due to B 1 , P 1 ; FP = 1 due to L 2 ; and FN = 1 due to P 1 . Baseline: An intuitive method for relation extrac-tion would assume that any sentence containing PROTEIN, ORGANISM and LOCATION NEs has the relation. We employ this method as a baseline system, in which NEs are identified by the auto-matic NE recognizers and dictionary lookups as in-troduced in  X  2. The system is evaluated against the test set in Table 1. Results in Table 2 show low pre-cision for PROTEIN NER and the name-path metric. Extraction using Supervised Parsing: We first ex-periment a fully supervised approach by training the parser on the BP/PL training set and evaluate on the test set (see Table 1). The name-only and name-path evaluation results in Table 2 show poor syntactic parsing annotation quality and low recall on PRO-TEIN NER. The major reason of these problems is the lack of training data.
 Extraction using Semi-supervised Parsing: Ex-periments with purely supervised learning show that our generative model requires a large curated set to minimize the sparse data problem, but domain-specific annotated corpora are always rare and ex-pensive. However, there is a huge source of unla-beled MEDLINE articles available that may meet our needs, by assuming that any sentence contain-ing BACTERIUM, PROTEIN and LOCATION NEs has the BPL relation. We then choose such sentences from a subset of the MEDLINE database as the training data. These sentences, after being parsed and BPL relations inserted, are in fact the very noisy data when used to train the parser, since the assumed relations do not necessarily exist. The reason this noisy data works at all is probably because we can learn a preference for structural relations between entities that are close to each other in the sentence, and thus distinguish between competing relations in the same sentence. In future work, we hope to ex-plore explicit bootstrapping from the labeled data to improve the quality of the noisy data.

Two experiments were carried out corresponding to choices of the training set: 1) noisy data only, 2) noisy data and curated training data. Evaluation re-sults given in Table 2.

Evaluation results on the name-only metric show that, compared to supervised parsing, our semi-supervised method dramatically improves recall for NER. For instance, recall for PROTEIN NER in-creases from 25 . 0% to 81 . 3% ; recall on BAC-TERIUM and LOCATION NERs increases about 30% . As for the name-path metric, the over-all F-score is much higher than our fully super-vised method increasing from 39 . 9% to 74 . 5% . It shows that the inclusion of curated data in the semi-
Semi-supervised P 66.7 95.5 70.6 94.1 80.8 76.2 83.5 79.3
Semi-supervised P 73.9 95.5 76.5 94.1 84.8 77.0 81.1 78.7 supervised method does not improve performance much. Precision of PROTEIN NER increases 6 . 5% on average, while F-score of overall BPL extraction increases only slightly. We experimented with train-ing the semi-supervised method using noisy data alone, and testing on the entire curated set, i.e., 333 and 286 sentences for BP and PL extractions respec-tively. Note that we do not directly train from the training set in this method, so it is still  X  X nseen X  data for this model. The F-scores of path-only and path-name metrics are 75 . 5% and 67 . 1% respectively. In this paper we introduced a statistical parsing-based method to extract biomedical relations from MEDLINE articles. We made use of a large un-labeled data set to train our relation extraction model. Experiments show that the semi-supervised method significantly outperforms the fully super-vised method with F-score increasing from 48 . 4% to 83 . 2% . We have implemented a discriminative model (Liu et al., 2007) which takes as input the ex-amples with gold named entities and identifies BPL relations on them. In future work, we plan to let the discriminative model take the output of our parser and refine our current results further. We also plan to train a graphical model based on all extracted BP, PL and BPL relations to infer relations from multi-ple sentences and documents.

