 The researches on privacy preserving data mining starting from the work of [1] have been popular these years. Randomization is widely used upon the origi-nal datasets to hide sensitive values . In such a way, most of the data records have been  X  X aked X , tuples with real data can not be easily retrieved. The k -anonymization proposed in [2] provides an alternative way to preserve the sen-sitivity, it uses generalization to hide sensitive values while keeping the realness of data.

Most of the k -anonymization researches[2,3,4,5,6,7,8] focus on how to detach the individuals from their corresponding data records. In doing so, the individ-uals are hidden in groups sizing more than k . However, the frequent values in a group can break the defense setup by k -anonymization, which is first addressed in [9]. Furthermore, we find that once matching with the users X  priori knowledge, the frequent patterns can lead to more serious sensitivity leakage.

For example: we derive a 5-anonymity dataset in Figure 1(b) from the original data in Figure 1(a). Statistically, users can only distinguish the right record of an individual with confidence less than 20%. But, without any priori knowledge, if Tom knows that Jennifer belongs to the first generalization group(all-female) in Figure 1(b), then he will get with 80% confidence that Jennifer X  X  salary  X  50 K .
Moreover,when having some priori knowledge: Tom knows Jennifer works in a private company, and this time he ensures with 100% confidence about Jennifer X  X  income and even her marital status. Because the rule  X  X rivate  X  Divorced,  X  50K (100%) X  exists in the group. The type of users X  priori knowledge may either be negative or positive. Similarly, when Tom knows Michael is not married, he will find Michael works in federal government.

In this paper, we model those frequent values and patterns within groups using association and dissociation rules. We also try to lower them during the common anonymization process and hide them using our algorithm with minimal data loss.

This paper is organized as follows. In Section 2, we provide the works related to our topics. Some basic definitions for k -anonymization are presented in Section 3. In Section 4, we model the problem and give out our enhanced anonymization process. Section 5 is our hiding algorithm, and the experimental results are presented in Section 6. Finally, we su mmarize the conclusions of our study in Section 7. k -anonymization proposed in [2] has been a popular direction in protecting the sensitive information. Quite a few systems have been developed for this purpose: the  X  -argus[5], the datafly[2], and the incognito[4] system,. . .
In the research of [3], the problem of optimal k -anonymization was proved to be NP-hard. And, various of strategies have been developed to approach this goal, such as the bottom-up generalization[8], the top-down anonymization[7], and the cell based approach[10], . . .

Recently, the work of [9] first co nsidered the problem of current k -anonymiza-tion methods: the associations between the quasi-identifier and the sensitive attributes will break the anonymity. It proposed the concept of  X  l -diversity X  to measure such associations, and embedded the measurement into k -anonymization algorithm. However, their method is more applicable to handle tables with one sensitive attribute than more sensitive columns which is the practical condition. Tables with highly frequent attribute values are also beyond its competence.
Research [11] focused on implementing personalized anonymity requirements by generalizing both the quasi-identifier and sensitive values, by doing so, it also dissociated the associations mentioned above but only in one sensitive attribute condition.

The direction of association rule hiding has been proposed in [12,13]. And [13] is a summary of the authors X  previous methods: SWA, IGA and DSA. Most of the researches developed heuristic methods to reduce the confidence or support of the sensitive rules by adding and removing rows. Firstly, we inherit several basic definitions for k -anonymization from previous works mentioned in Section 2.
 Definition 1. (Generalization) Given a domain D consists of disjoint partitions {
P process as returning the only partition P i containing v .
 Definition 2. (Quasi-Identifier) Given a table T ( A 1 ,A 2 ,...,A n ) .If  X  exter-can be uniquely located, then we call the set of attributes { A j ,...,A m } aquasi-identifier. ( i, j, m  X  n, A j is not the identifier attribute) Definition 3. ( k -Anonymity) Given a table T ( A 1 ,A 2 ,...,A n ) and its quasi-identifier QI .If  X  subset C  X  QI ,  X  record t i  X  T ,  X  at least k  X  1 other records that have the same values with t i on attribute set C , then we call the Table T satisfies k -anonymity.
 Definition 4. (Anonymity-Group) Given a table T and its quasi-identifier QI . We call an anonymity-group as the set of all records from T with the same values on QI . 4.1 Problem Modeling From the example in Section 1, we notice that the users X  all-positive priori knowl-edge has the same function as the anteced ent of association rules while other inferable sensitive values as the consequ ent part. Similarly, the knowledge con-taining negative part can be represented by dissociation rules. Both types of rules obtained from sensitive data within an anonymity-group actually form the  X  X nference paths X  with respect to its quasi-identifier. These paths improve the attackers X  ability to infer the sensitive values with high confidence in far excess of 1 /k .

We regard the anonymity breaking as two types: without priori knowledge and with priori knowledge. The first ty pe can be represented as the frequent 1-itemsets within an anonymity-group. This is also the case discussed in [9], which checks the measurements of diversity and tries to make all values in each sensitive attribute evenly distributed in every anonymity-group. But it may not be feasible in some datasets with highly frequent itemsets.

We represent the second type of anonymity-breaking as association and disso-ciation rules with high confidence in the anonymity-group. Just as in the previ-ous example, we have  X  X arried-civ-spouse  X  Private(67%) X  and  X   X  Married-civ-spouse  X  Federal-gov(100%) X  in the second anonymity-group. Currently, we only deal with the dissociation rules in the form of  X  A  X  B , more complex forms will be considered in our future work.

In doing so, we are trying to solve the problem of anonymity breaking in a different way. Our main idea is to lower the confidence of those association and dissociation rules, also the support of the frequent 1-itemsets. By developing our own rule hiding strategy, we will achieve this while generalizing the minimum number of sensitive data cells. Therefore, the inference probability can be con-trolled in the preset threshold, and datasets with all kinds of distributions can also be handled.

We combine the two types of anonymity breaking into our formal definition of the  X  X uasi-identifier X - X  X ensitive attribute X (Q-S for short) association: Definition 5. (Q-S Associations) Given an anonymity-group AG , sensitive at-tribute set S and confidence threshold  X  . Denote the 1-itemset as m , associa-tion rule as r , and dissociation rule as dr . We call Q-S associations for AG as { AG ( S ) } .
 We will carry out our anonymization process in two main steps: 1. Enhance the common k -anonymization process by evaluating and lowering 2. After the anonymization, hide the Q-S associations in each k -anonymity
In the first step, we evaluate the change of the Q-S associations brought by the candidate generalizations in each iteration. Combining with the measurements of anonymity and data loss, we use all of them to choose the best generalization in each iteration.

As for the rule discovering, there are works about it. We discover the rules in the way similar with the work of [14]. We treat the anonymity-groups as  X  X artitions X  X 14], looking for rules in every group, and then form the  X  X lobal X  rules based on the local ones. 4.2 Data Structure Each anonymity-group setups the structure  X  X ree of inverted file X . This structure together with the attached records id(outlined with dotted boundary in Figure 2) is indispensable in the  X  X -S association hiding X  step.
 In Figure 2, we give out an example tree structure for the first group in Figure 1(b)(we set support threshold to 25% and confidence threshold to 60%). The tree starts from the longest itemsets, we denote h as the height of the tree. Every node represents an itemset(rectan gle for itemset containing association rules, and rounded rectangle for itemset associating dissociation rules), the l th layer consists of itemsets with length h  X  l + 1, and the leaf layer consists of frequent 1-itemsets. For association rules, the nodes in the subtree are the sub frequent itemsets of the root. Each node also contains the corresponding rules with their confidence(not included in Figure 2). Rather than having every itemset associate all id of the supporting records, we only store them in the root nodes of subtrees, and none of whose parents are supported by the records. As in Figure 2, record T 4 ,T 9 is not stored in any rectangle nodes under layer 2. Rules in child nodes can look up in their parent for all the supporting rows.

As for the dissociation rule dr :  X  A  X  B ,since A, B are also frequent itemsets[15], node of dr will link itemsets A and B as child nodes in the tree structure and records supporting the infrequent itemset { A, B } will be attached. 4.3 Anonymization Metric anonymity-groups AG 1 ,AG 2 going to be merged. Suppose rule t length k (i.e. consist of k attributes) is one of their c ommon Q-S associations. Let conf ( t )rep-resent the confidence of t , antec ( t ) be the antecedent itemset of t , suppN um ( t ) be the number of records supporting t . It X  X  fast in calculating the new con-fidence of t in the merged group without retri eving the dataset before really merge AG 1 ,AG 2 :
If t does not exist in AG 2 ,welookfor t  X  X  antecedent antec ( t ) and other rules sharing the same itemset of t to calculate its new confidence. Furthermore, when AG 2 does not have a rule with the same k -itemset of t ,wesearch AG 2 for the antecedent itemset of t , and have:
We use  X  X ontribution X  to quantify the effect of lowering each Q-S association in the candidate generalization.
 Definition 6. (Contribution) Given a table T , the confidence threshold  X  ,and a candidate generalization G . We denote all anonymity-groups involved in G as {
AG i } . For a single Q-S association t , we denote its number of records still to be and that before G as n bef ore = suppN um AG i ( antec ( t ))  X  ( conf AG i ( t )  X   X  ) . We have 1  X  n af ter n bef ore as G  X  X  contribution to reduce t .
 When evaluating the candidate generalization, we denote the  X  X verage Q-S con-tribution X  as the average of the contributions for all Q-S associations involved.
We will have contribution intervals wh en the specific Q-S association can not be found in all the anonymity-groups involved. We hold these intervals until overlaps exist in the interval comparing. Then, the data record s contained in the corresponding groups will be retrieved in order to calculate the definite value of those contributions. The action of data retrieving will less happen with the growing of the minimum anonymity[8](i.e. the minimum size of the anonymity-groups), as every anonymity-group also maintains the global rules in its tree structure.

Therefore, for each candidate generalization G ,wecalculate A ( G )asthe anonymity increase that G will make (i.e. the increase of the minimum size of the anonymity-groups); DL ( G ) as the data loss after applying G ,whichcan be quantified by entropy increase[8] o r decrease of the distinct values in the taxonomy trees[6]; Con ( G ) for average Q-S contribution. Thus, we evaluate G as: We will choose the generalization with the largest value of Equation 3. More methods of evaluating A ( G ) ,DL ( G ) can also be referenced from the works mentioned in Section 2.
Since the quasi-identifier uniquely identifies the individuals through external databases, the size of the initial anonymity-groups will be small. Thus, the time to start evaluating the Q-S associations has its effect on the balance among computing cost, memory taking, anonymity, and data loss. We choose to track the minimum anonymity[8] during the anonymization, if it reaches the preset c  X  k ( c  X  IR), we bring in the Q-S association evaluation. The first round of Q-S association evaluation will have the most computational cost, as the tree of inverted file will be setup there. Afterwards, the evaluation will be quite fast, because most of the computation will be done without touching the original dataset. We will also prove this in the experiment part. After the anonymization process, the anonymity-groups will have Q-S associa-tions with relatively low confidence. Then we will try to generalize the sensitive values to totally hide the Q-S associations below the threshold.

As mentioned in Section 2, quite a few works about association rule hiding have been presented. However, most of them aim at removing the set of sensitive rules while preserving the remaining rules and introducing fewer new rules, i.e. to achieve less side effects and less artifactual patterns[13].

Although we also aim at hiding rules in the anonymity-groups, we have dif-ferent goals and requirements: 1. Hide both association and dissociation rules. 2. Hide all rules exceeding the confidence threshold. 3. Minimize data loss during the sensitive value generalization. 4. Other than adding or deleting rows in the former studies[12,13], we use
Currently no work meets all the requirements above, while the problem han-dles by IGA [13] is the closest to ours. We will compare with it in the experiment. 5.1 Hiding Metrics Since we use generalization to hide Q-S associations, the interest measure of example, in Figure 1(b), suppose we generalize the marital-status of record T 9 to  X  X ny X , the maximum confidence of the rule  X  X rivate,  X  50 K  X  Divorced X  decreases from 100% to 50%.

In our method, we try to hide all Q-S associations. And in each time, we reduce the confidence of only one Q-S association by choosing a generalization which generalize one attribute of it. We greedily choose the attributes to generalize in order to reduce the largest amount of other Q-S associations.
 Lemma 1. Given an anonymity-Group: AG , its tree of inverted file: T ( AG ) , the sensitive attributes: { S 1 ,S 2 ,...,S m } , and the confidence threshold:  X  .Let NS represent the node of an arbitrary sensitive itemset in T ( AG ) , SR be the set of rules in both NS and the nodes  X  NS  X  X  subtree . Then,  X  generalization G i  X  SR,  X  generalization G ns  X  NS, When generalize a fixed number of records, the contribution of G ns to reduce the Q-S associations is no less than that of G i . Proof. Firstly, we derive the expressions of contribution in different cases. Sup-pose an association rule r in NS : A  X  B ( A  X  B  X  NS &amp; A  X  B =  X  ).
If the candidate generalization G for r is to generalize any attribute in A ,and d records that support r will be affected. Then, the maximum possible number of records supporting A will not change, while the definite number of records that support A  X  B will decrease by d .

We apply the concept of contribution here. And the generalization G con-tributes to the confidence reduction of r as: It is similar when we generalize any attribute in B .

As for the dissociation rule dr :  X  A  X  B which has itemsets A and B as its child nodes. Also, we generalize the itemset A , the maximum possible number of records that support  X  A will increase, and the de finite number of records supporting dr remains the same as before. The contribution will be: When B is to be generalized, we shall only avoid those records attached in dr as they are supporting A  X  B . Generalizing records supporting dr produces the similar contribution as Equation 4.

Child nodes of NS will be affected by the candidate generalization, which leads to the confidence reduction in parts of association and dissociation rules within SR . We sum up all these contributions as the measurement to quantify G  X  X  effect of reducing Q-S associations: Therefore, if G is a candidate generalization for rule r in a child node of NS , which generalize the value in attribute S j ,let G take the same action for r ,then we have wholeContribution G ( r )  X  wholeContribution G ( r ). 5.2 Hiding Algorithm Based on Lemma 1, we develop our Q-S association hiding algorithm as below. Algorithm 1: Q-S association hiding algorithm
The Q-S association hiding a lgorithm proceeds as follo ws. Firstly, as in Section 4.2, we attach every record to the tree nod es. Then, start from the longest rule, we generate the candidate generalizations as generalizing each of its attribute. We test the candidates in the subtree to generate the vector of the  X  X holeCon-tribution X , each of whose dimension corresponds to one candidate. Afterwards, we select the generalization with the highest contribution sum to apply. Also, we notice that a data record may be stored in more than one itemsets which do not contain each other. This will lead to repeated generalization of the same column value in a record. Actually, we will check the status of the attribute and decide whether to generalize it to a higher domain or skip the record, and recompute the confidence of every missing rule (i.e. the rule outside the subtree but supported by the generalizing row).

Our algorithm choose the generalizing attribute through contribution com-paring. Although the contribution calculation is limited to the subtree in the current study, it covers most of the gene ralization effect es pecially when han-dling long itemsets which rapidly reduce all the Q-S associations they contain. Moreover, limiting the range of contribution calculation leads to a small memory requirement for our inverted file tree. Ot herwise, we have to associate every row with all the Q-S associations it contains. Suppose the number of Q-S associa-tions is n , since every rule is generalized afte r a traverse of its subtree, the time complexity of the algorithm is O ( n log n ).

It is also shown in Algorithm 1 that we deal with dissociation rules. When the antecedent node(also is the child node) o f the dissociation rule is affected by a generalization, we also evaluate the effect and compute the contribution to that dissociation rule(as in Lemma 1) by the generalization. In our experiment, we use the  X  X dult Database X  obtained from [16], which has 14 attributes, 48842 instances. The records with missing attribute values  X ? X  are removed. We show in Table 1 the attributes we adopt, the number of the leaf nodes in their hierarchy trees, and the height of the trees. We make dif-ferent combinations of quasi-identifier and sensitive columns to get the average experiment result.

There are 2 steps in our implementation, we test them respectively. Due to the space limit, we can X  X  list all the results of our experiments here.
For rule hiding, we make a comparison between our algorithm and the imple-mentation of IGA[13] strategy using generalization. To be fair, we only choose to hide the association rules from the datasets. The support and confidence thresh-old are set to 20% and 50% respectively, and the hierarchy trees are constructed as height 2. Every time, we choose a diff erent number of attr ibutes, and com-pute the ratio of the cells generalized in our algorithm to that in IGA. We find in Figure 3(a) that under our requirement, our Q-S association hiding algorithm has smaller data loss. This is mainly attributed to that the item with the highest contribution reduce the most amount of Q-S associations.

Then, a comparison is ma de between the common k -anonymization and our enhanced version. The support and confidence threshold are 10% , 50% and k = 250. We implement the strategy in [8] as the common version. And we bring in the Q-S association evaluation to simulate our method at different values of minimum anonymity[8]: 25, 50, 100. . . . In Figure 3(b), we compare the  X  X nforma-tion loss X ,  X  X erformance X  and  X  X iding effi ciency X  of both methods by calculating  X  X ntropy loss in anonymization X ,  X  X xecution time after building the inverted file tree X  and  X  X ata loss in hiding step X , then we calculate their ratios of our method to the common k -anonymization.

As shown in Figure 3(b), our method approaches the optimal result of the  X  X ottom-up X  strategy when the minimum anonymity becomes larger. Currently, the Q-S associations, information loss and anonymity have the same weight in choosing the candidate generalizations. Therefore, when we start to evaluate the Q-S association with a small minimum anonymity, the anonymization will de-viate from the optimal result in an early time. We can make different weights for these 3 metrics to relieve this phenomenon, which will be one of our future research directions. The inflexion on the curve of  X  X nformation loss X  shows the greedy characteristic of  X  X ottom-up X , which sometimes prevent it from getting the global optimal result. We also find in the series of  X  X xecution time com-parison X  that when the Q-S associations is evaluated early in the process, the performance after the tree constructio n decreases due to the increasing dataset accesses. Series of  X  X ata loss in hiding X  shows that smaller number of cells have to be hidden when we bring in the Q-S association evaluation early in the anonymization. In order to have a balance among the performance, optimal k-anonymity result and cells to hide, we find it be better to start evaluating the Q-S associations when the minimum anonymity reaches either 50 or 100. In this paper, we have introduced an enhanced k -anonymization method which detaches the links between quasi-identifie rs and sensitive attributes. We X  X e de-fined such links using frequent 1-itemsets, association and dissociation rules with high confidence within an anonymity-group. We X  X e not only evaluated them in the k -anonymization process, but also removed them using our Q-S association hiding algorithm. In our research, k -anonymization is co mbined with rule hid-ing which is also a direction in privacy preserving data mining. By applying our greedy algorithm, we prevent the anonymity breaking from those  X  X nference paths X  with minimum data loss.
The k -anonymization method is a promising way to protect the sensitive data in data publishing. Although it has limitations, combining it with other tech-niques may accomplish more tasks. We regard our work as an initial step. Further research will include more works on Q-S association modeling and generalization metrics developing.

