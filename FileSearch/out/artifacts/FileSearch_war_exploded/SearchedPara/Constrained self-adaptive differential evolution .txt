 1. Introduction
In practical control engineering, it is crucial to obtain reduced order/fixed structure controllers due to limitations of available computer resource and necessity of on-site controller tuning.
Most of the real systems are vulnerable to external disturbances, measurement noise and model uncertainties. Robust controller designs are quite useful in dealing with the systems under parameter perturbation, model uncertainties and disturbances ( Doyle et al., 1990 ; Zhou et al., 1996 ). There are two approaches for dealing with robust optimal controller design problems. One is the structure-specified controller and the other is the output-feedback controller. However, the conventional output feedback design of optimal control is very complicated and not easily implemented for practical industrial applications as the order of the controller would not be lower than that of the plant. To overcome this difficulty, the structure-specified approach solves the robust optimal control problem from suboptimal perspective ( Chen et al., 1995 ; Chen and Cheng, 1998 ; Kitsios et al., 2001 ; Krohling and Rey, 2001 ; Ho and Lin, 2003 ; Ho et al., 2005 ).
For controllers with a very special structure such as Propor-tional-Integral-Derivative (PID) or lead-lag compensators, various design methods are now available for control engineers ( Astrom and Augglund, 1995 ; Dong Hwa, 2011 ). In particular, in the last few years various innovative techniques for designing controllers satisfying not only stability but also H N specifications have been proposed ( Blanchini et al., 2004 ; Ho, 2003 ; Ho et al., 2004 ).
However, it will be difficult to extend these methods for direct application to fixed-structure controller design problems, as they strongly depend on the specific structure.

As far as conventional H N controller design with fixed-order/ fixed-structure is concerned, most approaches utilize linear matrix inequality (LMI) formulae. Apkarian et al. (2003) consid-ered the design problem as optimization programs with a linear cost subject to LMI constraints along with non-linear equality constraints representing a matrix inversion condition. Further, Saeki (2006a , b ) kept the controller variables directly in LMI to cope with the fixed-structure constraints. However, it is difficult for any of these methods to treat both the controller structure and the multiple specifications simultaneously.

Contrary to the deterministic approaches discussed above a probabilistic method based on randomized algorithms was proposed randomly generated using a finite dimensional parameterization, and proposed a mixed probabilistic/deterministic approach aimed at minimization of co mputation time.

During the past decades, great attention has been paid to the optimization methods for controller design. In modern control theory, a design problem is formulated as an optimization problem with performance measures being the norms of some closed loop properties. The controller design is formulated as a non-linear minimization problem subject to a non-linear con-straint for which no closed form solution can be obtained by conventional optimization techniques. Evolutionary algorithms (EAs) are global, parallel search techniques that emulate natural evolutionary processes. Because EAs simultaneously evaluate many points in the search space, it is more probable that it converges to an optimal solution. Besides, no assumption of a differentiable search space is necessary. Due to the high potential for global optimization, EAs have received great attention in the area of automatic control.

Many researchers have employed evolutionary algorithms for mixed H 2 / H N optimal design strategy for optimal robust PID controller. Chen et al. (1995) proposed the design of simple genetic algorithm (GA) based mixed H 2 / H N controller for SISO system by minimizing Integral Square Error (ISE) ( H 2 norm) subjected to robust stability and disturbance attenuation con-straints. Chen and Cheng (1998 ) adopted GA to design structure specified H N optimal controllers by minimizing the balanced robust performance criteria which combines the robust stability and disturbance attenuation performance measures, for practical applications. But their procedure requires prior domain knowl-edge that is the Routh-Hurwitz criterion for reducing the domain size of each design parameter. Krohling and Rey (2001) suggested design of GA based optimal disturbance rejection PID controller for a servo motor system. Ho and Lin (2003) applied Orthogonal Simulated Annealing algorithm (OSA) to design the optimal robust PID controller for MIMO system by minimizing combined ISE and balanced robust performance criteria. Ho et al. (2005) proposed Intelligent Genetic Algorithm (IGA) for the design of mixed H 2 / H N optimal robust PID controller. As an extension of this line of research, Maruta et al. (2009) proposed the con-strained PSO algorithm for the design method of fixed structure robust controllers satisfying multiple H N norm specifications, namely, the robust stability criteria and load disturbance attenua-tion criteria.

Recently, Differential evolution (DE) ( Storn and Price, 1997 ) has been shown to be a simple yet efficient evolutionary algorithm for many real-parameter optimization problems in real-world applications. Its performance, however, is still quite dependent on the setting of control parameters such as the mutation factor and the crossover probability and trial vector generation strategy. Various methods to adapt the parameters of DE are available ( Tvrd X   X  k, 2009 ). Qin et al. (2009) proposed the Self-adaptive Differential Evolution (SaDE) algorithm which adapts the trial vector generation strategy and the crossover probability as per the needs of the application avoiding the time consuming trial-and-error method. In this paper, SaDE algorithm is applied to the design of fixed structure robust controller considering minimization of maximum value of real part of the poles subject to the robust stability and load disturbance attenua-tion criteria.

The remainder of this paper is organized as follows. Section 2 describes the fixed structure robust controller problem. Section 3 gives the basic DE algorithm. Section 4 presents the SaDE algorithm ( Qin et al., 2009 ) and Self-adaptive Penalty based constraint handling method ( Tessema and Yen, 2006 ). In Section 5, details of the three test problems are given. Section 6 presents the implementation details and the simulation results of SaDE based robust optimal fixed structure controller design. Finally, Section 7 concludes the paper. 2. Robust controller
Let us consider a control system with n i inputs and n o outputs, as shown in Fig. 1 , where P ( s ) is the nominal plant transfer disturbance, and y ( t ) is the output of the system. Without loss of generality, the plant perturbation D P ( s ) is assumed to be bounded by a known stable function matrix W 1 ( s )  X  D P  X  j o  X  X  r s  X  W 1  X  j o  X  X  , 8 o A  X  0 , a  X  X  1  X  where s  X  A  X  denotes the maximum singular value of a matrix A .
If a controller K ( s ) is designed such that the nominal closed loop system D P ( s )  X  0 and dt  X  0 is asymptotically stable, the robust stability performance satisfies the following inequality: f  X  : W 1  X  s  X  T  X  s  X  : 1 o 1  X  2  X  and the disturbance attenuation performance satisfies the follow-ing inequality: f  X  : W 2  X  s  X  S  X  s  X  : 1 o 1  X  3  X  Then the closed loop system is also asymptotically stable with S ( s ) and T ( s )  X  I S ( s ) are the sensitivity and complimentary sensitivity functions of the system, respectively S  X  s  X  X  X  I  X  P  X  s  X  K  X  s  X  X  1  X  4  X  T  X  s  X  X  P  X  s  X  K  X  s  X  X  I  X  P  X  s  X  K  X  s  X  X  1  X  5  X 
Robust stability and disturbance attenuation are often insuffi-cient in the control system design for advancing the system performance. Therefore minimization of real part of the closed loop pole, minimization of balanced criteria, and minimization of closed loop norm are considered.

Let a 1 denote the i th pole of the closed-loop system T ( s ) and max be the pole, whose real part is greater than that of any other pole; i.e. Re  X  a max  X  max i  X  Re a i  X 8 i the minimization of Re  X  also considered. In this paper, the two different objective func-tions considered for the design of robust optimal controller are as follows: min min subject to the multiple constraints given by expressions (2) and (3) simultaneously. 3. Differential evolution
Differential evolution (DE) is an efficient and powerful popula-tion-based stochastic search technique that has been used for global optimization of many real-world problems ( Storn and
Price, 1997 ). The population size (NP) is a user-specified para-meter. The initial population is given by X i , G  X f x 1 i , G i  X  1, y ,NP and D  X  Input Dimension is chosen randomly and should cover the entire parameter space constrained by the prescribed minimum and maximum parameter bounds. 3.1. Mutation operation
At each generation, after initialization DE employs mutation to produce one mutant vector V i , G for each target vector X vector can be generated by using one of the various mutation strategies available. The basic mutation operation is given below v  X  x where r 1, r 2, r 3 are three random indexes between 1 y NP excluding i and F is a scaling factor. 3.2. Crossover operation Crossover operation is applied to each pair of the target vector
X and its corresponding mutant vector V i , G to generate a trial vector U i , G . DE generally employs the binomial crossover defined by u  X  j  X  1 , 2 , ... , D  X  9  X 
The crossover rate is a user-specified constant within the range [0,1), which controls the fraction of parameter values copied from the mutant vector. j rand is a randomly chosen integer in the range [1, D ). The condition j  X  j rand is introduced to ensure that the trial vector will differ from its corresponding target vector by at least one parameter. 3.3. Selection
In the selection phase, each trial vector is compared to the corresponding target vector; the better one will enter the popula-tion of the next generation.

X f ( X ) is the fitness function value of the i th target vector. The loss of the best individuals in the following generation is avoided by this selection mechanism, as the better of each parent X  X ffspring pair survives to next generation. This process continues until the maximum function evaluation is reached. 4. SaDE algorithm
The performance of the original DE algorithm is highly dependent on the strategies and parameter settings. Also, during different evolution stages, different strategies with different parameter settings can be more effective than others. Self-adaptation has been found to be highly beneficial for adjusting control parameters during evolutionary process, especially when done without any user interaction. The SaDE algorithm automa-tically adapts the trial vector generation strategies and the crossover rate parameter CR during evolution. SaDE algorithm is described in the following section. The detailed algorithm is given in Qin et al. (2009 ). 4.1. Initialization
The initial population is generated randomly and it should better cover the entire search space as much as possible by uniformly randomizing individuals within the search space constrained by the prescribed minimum and maximum parameter bounds. 4.2. Trial vector generation strategy adaptation
The mutation operator is applied to each individual or target mutation phase, crossover operation is applied to each pair of the strategy will be chosen according to a probability learnt from its previous experience of generating promising solutions and applied to perform the mutation operation. If one of the strategies performs in the previous generations by generating promising solutions; the probability of that strategy being used in the current generation will increase. The strategy candidate pool consists of the following four strategies as given in Qin et al. (2009 ) 1) DE/rand/1/bin (ST1) u 2) DE/rand-to-best/2/bin (ST2) u where 3) DE/rand-to-best/2/bin (ST3) u 4) DE/current-to-rand/1 (ST4)
U
Stochastic universal selection method is used to select one trial vector generation strategy for each target vector in the current population. The probabilities of the strategies are updated only after an initial learning period (LP) generation which is set by the the equal probability to be chosen. After the initial LP generations, the probabilities of choosing different strategies will be updated at each subsequent generation by p  X  where S k  X  1 , 2 , ...... , K ; G 4 LP next generation generated by k th strategy and nf k , g is the number of trial vectors discarded, generated by k th strategy and e  X  0.01. 4.3. Parameter adaptation
In DE algorithm, the population size (NP) is a user-specified parameter because it highly relies on the complexity of a given problem. Between the other two parameters, CR is usually more sensitive to problems with different characteristics, while F is closely related to the convergence speed. Hence, in SaDE only the CR value is adapted.
 In the SaDE algorithm the population size (NP) is set by the user. The F parameter is approximated by a normal distribution with mean value 0.5 and standard deviation 0.3. A set of values is randomly sampled from such normal distribution and applied to each target with mean CRm k and standard deviation 0.1 with respect to the k th values conforming to the normal distribution is generated and After the initial LP generations, the CRm k value is adapted with median of the successful CR values (that have generated trial vectors successfully entering the next generation) over the past LP genera-tions for every subsequent generation. The control parameter K in the strategy  X  X  X E/current-to-rand/1 X  X  (ST4) is randomly generated within [0,1] so as to eliminate one additional parameter. The detail of parameter adaptation is given in Qin et al. (2009 ). 4.4. Constraint handling method
Real world optimization problems are constrained and an additional method to handle the infeasible solutions needs to be employed. In EAs the presence of constraints reduces the feasible region and complicates the search process. When solving constrained optimization problems, an additional mechanism to handle constraints is required. One of the major issues in constrained optimization is how to deal with the infeasible individuals throughout the search process. Therefore, different techniques have been developed to exploit the information in infeasible individuals. Several constraint handling methods with EAs are available ( Coello Coello, 2002 ).

The simplest and the earliest method of involving infeasible individuals in the search process, even after sufficient number of feasible solutions are obtained, is the static penalty method. But they usually require different parameters to be defined by the user to control the amount of penalty added when multiple constraints are violated. To overcome this difficulty, Self-adaptive Penalty (SP) method was recently suggested where information gathered from the search process is used to control the amount of penalty added to infeasible individuals ( Tessema and Yen, 2006 ). They do not require users to define parameters. Hence, this constraint handling method is employed in SaDE algorithm for the above stated robust controller design problems. This method is explained in the following section. 4.4.1. Self-adaptive Penalty (SP)
This method was proposed by Tessema and Yen (2006) ,inwhich two types of penalties are added to each infeasible individual to identify the best infeasible individual in the current population. The selection of individuals is based on a value determined by the overall constraint violation and objective values. Thus, there is a chance for an individual with lower overall constraint violation and higher fitness to get selected over a feasible individual with lower fitness even when there is sufficient number of feasible solutions to form the parent population. The amount of the added penalties is controlled by the number of feasible individuals currently present in the combined population including both the parent and the amount of penalty is added to infeasible individuals with a higher amount of constraint violation. On the other hand, if there are several feasible individuals, then infeasible individuals with high This algorithm requires no parameter tuning. The final fitness value based on which the population members are ranked in Tessema and Yen (2006 )isgivenbelow F  X  X  X  X  d  X  X  X  X  p  X  X  X  X  16  X  where d ( X )isthedistancevalueand p ( X ) is the penalty value.
The distance value is given by d  X  X  X  X  where r  X  v ( X ) is the overall constraint violation given by  X  w  X  G i  X  X  X  X  = G max i is the maximum violation of constraint G i ( X ). f 00  X  X  X  X   X  X  f  X  X  X  f min  X  =  X  f max f min  X  X  where, f max and f min and minimum values of the objective function f ( X ) in the current combined population.

The penalty value is defined as p  X  X  X  X  X  1 r f  X  M  X  X  X  X  r f N  X  X  X  X  18  X  where, M  X  X  X  X  N  X  X  X  X  F ( X ) in Eq. (16) is used to rank the individuals in the combined population. The top NP individuals form the next generation. 5. Test systems
In order to validate the performa nce of the SaDE algorithm on the design of robust fixed structure opt imal controller, three different systems, namely simple magnetic le vitation system (Test System-I), F-8 aircraft linearized model (Test System-II) and a simple SISO plant (Test system-III) are considered and the details are given below. 5.1. Test System-I
Let us consider the unity feedback system consisting of the linearized model of the experimental magnetic levitation system ( Kim et al., 2008 ; Maruta et al., 2009 ). The linearized model of the magnetic levitation plant about an equilibrium point of y  X  0.018 m is given as P  X  s  X  X  7 : 147
The plant perturbation is unknown in fact, but bounded by the following known stable function.
 W  X  s  X  X  4 : 3867 10 7  X  s  X  0 : 066  X  X  s  X  31 : 4  X  X  s  X  88  X 
To treat the robust H N disturbance attenuation problem, the weighting function is chosen as
W  X  s  X  X  5.2. Test System-II The design problem of a reduced order H N controller for the F-8 aircraft linear model is considered ( Apkarian et al., 2003 ;
Saeki, 2006b ; Calafiore et al., 2000 ). Consider the linear time invariant generalized plant P ( s ) described by _ x z y 2 6 4 3 7 5  X  where x p A R 8 is the state vector, w A R 3 is the exogenous distur-bance vector, u A R 2 is the control input vector, z A R 4 performance variables vector, and y A R 2 is the measured output vector. Refer to Apkarian et al. (2003) for the details of the matrices. 5.3. Test System-III
Let us consider the unity feedback system with following transfer function:
To treat the robust H N disturbance attenuation problem, the weighting function is chosen as W  X  s  X  X  6. Simulation results The SaDE algorithm and test systems are implemented using MATLAB 7.3 on an Intel Core 2 Duo, 1.86 GHz PC with 2 GB RAM.
Owing to the randomness of the evolutionary algorithms, statis-tical performances like the best, the mean and the worst value of objectives obtained in 20 independent runs are taken. For the comparison purposes, reported results of constrained PSO method and following five DE algorithms with different sets of CR and F values are considered. 1. DE/rand/1/bin: F  X  0.9, CR  X  0.1(DE1) 2. DE/rand/1/bin: F  X  0.5, CR  X  0.3(DE2) 3. DE/rand-to-best/1/bin: F  X  0.9, CR  X  0.1(DE3) 4. DE/rand-to-best/1/bin: F  X  0.5, CR  X  0.3(DE4) 5. DE/current-to-rand/1: F  X  0.9(DE5)
DE/rand/1/bin algorithm usually has a slow convergence rate, but has stronger exploration capability. DE/rand-to-best/1/bin algorithm has faster convergence speed, but it is more likely to get stuck in local optimal leading to premature convergence. The
DE/current-to-rand/1 algorithm is a rotation-invariant algorithm mostly used for multimodal problems. All the algorithms are simulated separately with two stopping criteria namely: (i) max-imum number of function evaluations (Stop1) and (ii) convergence criteria based on objective values falling below 1.e 4(Stop2). 6.1. Test System-I results
For magnetic levitation system, the controller structure as given in Eq. (25) is selected
K  X  s  X  X  10 x 1 1  X  1 10 x vector. Therefore, the optimization problem aims at finding x disturbance attenuation H N constraints given in Eqs. (2) and (3). The search space of the design parameter vector is given by x  X  2 , 1 , 1 , 2  X  T r x r  X  4 , 1 , 1 , 3  X  T .

For fair comparison, the same population size (  X  100) and maximum function evaluations (Fevalmax  X  40000) as that of
Constrained PSO are assumed ( Maruta et al., 2009 ). The best optimal robust PID controller K ( s ) and their robust stability and disturbance attenuation criteria obtained using SaDE algorithm, five DE algorithms and reported constrained PSO algorithm for the Test System-I are reported in Table 1 . The best, the worst and mean of real pole locations obtained in 20 runs for SaDE and five DE variants with Stop1 criteria are reported in Table 2 . Only optimal PID controller parameters for constrained PSO algorithm are taken from Maruta et al. (2009) and their corresponding robust stability and disturbance attenuation criteria are calcu-lated. SaDE gives a 100% consistency in getting optimal robust controller. DE3 and DE4 algorithms give only infeasible solutions in all the 20 runs. Even though DE1 and DE2 produce optimal robust controller, the consistency of getting optimal solutions is compara-tively less than SaDE algorithm as can be seen from the standard deviation value. DE5 algorithm produces results almost equivalent to SaDE algorithm but the consistency is slightly less. The Feasible Success Rate (FSR) is calculated as the number of runs with feasible solution divided by the total number of runs. The FSR of SaDE, DE1, DE2 and DE5 are comparatively better than Constrained PSO, DE3 and DE4 algorithms.

The statistical performance for the DE variants and the SaDE algorithm with Stop2 stopping criteria is given in Table 3 .Here,itis observed that DE1 and DE2 algorithms produce solutions closer to the optimal region but they are not able to get the best optimal solution due to premature convergence characteristic. DE3 and DE4 algorithms get only infeasible solutions. DE5 algorithm with Stop2 also performs closer to SaDE algorithm but the mean function evaluation is slightly greater than that of SaDE algorithm. In SaDE algorithm, because of the self-adaptation characteristics of the mutation strategy and the crossover rate, the diversity of the population is maintained throughout the evolutionary process, which aids it to overcome premature convergence problem. The SaDE algorithm converges relatively slower, but with a better optimal solution than the other DE variants and the consistency of getting optimal solutions is better for SaDE algorithm for the Stop2 criteria also. The SaDE algorithm convergences around 14,185 function evaluations using Stop2 criteria to the same optimal solution obtained by Stop1 criteria (Fevalmax  X  40000) saving function evaluations. But the standard deviation is com-paratively higher for Stop2 criteria for all the algorithms.
Disturbance rejection response of the system with SaDE designed in Fig. 2 .Thechangesin CRm and probabilities of four strategies over respectively. From Figs. 3 and 4 , it is clear that SaDE is capable of adapting towards the best mutati on strategy and tuning to the best parameter setting for CRm value. Also, it can be seen that there is an increase in the value of CRm from its initial setting of 0.5 for all the three strategies. ST4 outperforms the other strategies for this problem.

The convergence characteristics of all the DE variants and SaDE algorithm with Stop2 stopping criteria is given in Fig. 5 . As can be seen, initially all the five DE variants and SaDE algorithm oscillate vastly, but as the evolutionary process progresses DE1, DE2, DE5 and SaDE algorithms are able to locate the optimal region. DE1, being a slow converging algorithm, settles only around 130 generations in the optimal region. But, only DE5 and SaDE algorithm settle for the optimal solution around 105 and 95 generations. The performance of the DE5 algorithm with Stop1 stopping criteria is almost equivalent to SaDE algorithm. DE3 and
DE4 algorithms continue to oscillate and they converge prema-turely to the local optima around 150 and 300 generations, respectively. In SaDE algorithm, as stated earlier, ST4 performs better, which is the same strategy as DE5 but with randomly generated F values. 6.2. Test System-II
For F-8 aircraft model, the required controller K ( s ) is the first order one, and is described by x  X  A k x k  X  B k y , u  X  C k x k  X  D k y  X  26  X 
For the above system, the optimization based controller design problem is as follows: minimize 99 T  X  s  X  99 1 of the closed loop system consisting of P ( s ) and K ( s ) subject to the constraint on internal stability. The above mentioned controller design problem is solved by setting the design parameter x  X  ( x 1 , x 2
A
C "#
Its initial search space is taken as x A R 9 ; 5 r x r 5. For fair comparison, the same population size (  X  300) and maximum function evaluations (Fevalmax  X  1,20,000) as that of Constrained
PSO are used ( Maruta et al., 2009 ). The best optimal fixed structure controller and pole locations obtained using SaDE, five
DE algorithms and those obtained using constrained PSO algo-rithm are given in Table 4 . The best, the worst and mean of H performance index obtained in 20 runs for SaDE and five DE variants using Stop1 stopping criteria are reported in Table 5 .
SaDE algorithm produces better consistency in getting optimal solution with even the worst value better than the best value of the other methods. DE1 algorithm is able to locate the optimal region. But, only DE5 algorithm is able to produce similar optimal solution as SaDE algorithm. However, the standard deviation is higher than that of SaDE algorithm.

The statistical performance with Stop2 stopping criteria is given in Table 6 . All the other DE algorithms tend to converge faster leading to premature convergence whereas SaDE algorithm is able to overcome that effect due to multiple strategies and varying CRm values used by the algorithm. The DE5 algorithm which performs better with the Stop1 criteria also suffers from premature convergence. Though SaDE algorithm has a slower convergence, it identifies the best optimal solution with a lesser number of function evaluations. This shows that SaDE algorithm has the capability to escape from premature convergence due to the four strategies employed, which produces diverse population.
Of the 5 DE variants, as expected, DE1 algorithm has a slower convergence and a better optimal solution.

Similar to the Test system-I, the CRm value for Test system-II also increases from the initial 0.5 to around 0.9 for all the three strategies. The self-adaptation characteristic of the strategies with
Stop1 criteria is given in Fig. 6 . It shows that the ST4 outperforms the other three strategies.

The convergence characteristics using Stop1 criteria are given in Fig. 7 . As can be seen in Fig. 7 , SaDE algorithm has a smooth convergence to the optimum value. The other DE variants tend to oscillate vastly before settling to a local optimal solution. Only DE1 algorithm settles in the optimal region. SaDE algorithm converges to the optimal solution around 270 generations. 6.3. Test System-III
The fixed-order controller K ( s ) for SISO plant considered is of the form K  X  s  X  X  y 0  X  a 0  X  y 2 s 2 1  X  m The search space for the variables is taken as x A R 5 ; 5 r x Here, the aim is to find an optimal controller which minimizes Re  X  a max and the disturbance attenuation constraint given in Eq. (3). Also, the pole placement condition of Re  X  a max 0 : 2 should be satisfied. For fair comparison, the same population size (  X  200) and maximum function evaluations (Fevalmax  X  60,000) as that of Constrained PSO are assumed ( Maruta et al., 2009 ). The best controller obtained in 20 runs, corresponding pole locations and load disturbance attenuations obtained using SaDE algorithm, five DE algorithms and reported results of Constrained PSO algorithm are given in Table 7 . The best, the worst and mean of pole locations over twenty independent runs are given in Table 8 . From the results, it is clear that SaDE performs better than the other methods and produces a 100% FSR. Even the worst result produced by SaDE is better than the best value of the other methods. DE1 algorithm is able to produce feasible solution with 80% FSR, whereas the DE2 algorithm produces feasible solution with only 30% success rate. DE3 obtains a 5% FSR. All the other DE variants only produce infeasible solutions.
 Statistical performance with Stop2 criteria is tabulated in Table 9 . Similar to the previous two Test Systems, the SaDE algorithm converges better but more slowly thereby reducing the chances of premature convergence. DE1 and DE3 algorithms with Stop2 criteria produce only 5% FSR, whereas the other DE variants only produce infeasible solutions. SaDE algorithm with Stop2 criteria is able to produce equivalent results with the Stop1 criteria, thus requiring a lesser number of function evaluations.
The disturbance rejection response of the system with opti-mum controller obtained using SaDE algorithm for the distur-bance d  X  t  X  X  1 exp  X  6 t  X  is given in Fig. 8 . Self-adaptation characteristic of CRm with Stop1 criteria are given in Fig. 9 .As with the previous test cases the ST4 strategy performs better than the other three strategies.

The convergence characteristics for the five DE variants and the SaDE algorithm for Test system-III with Stop1 criteria is given in Fig. 10 . As seen, only SaDE algorithm identifies the optimal region, while other DE variants vary vastly but settle for poor solutions even with Stop1 criteria. The SaDE algorithm is able to identify a better feasible solution. With Stop2 criteria it can be shown that SaDE algorithm settles around 180 generations, thus saving function evaluations. The other DE variants converge to one of the local optimal solutions.

The above three examples demonstrate that various DE algo-rithms perform better during various stages of evolution and also depend upon the particular application. Hence, it is not possible to
ST4 strategy of SaDE consistently produces better individuals and thereby the probability of ST4 is improved in all the three Test Systems. Generally, DE1 gives bett er solution than other algorithms for all the three problems with an increase in mean function evaluations. DE3 and DE4 perform poorly as compared to other DE algorithms. DE2 is not able to give consistent performance for all the three problems. The DE5 strategy is able to perform almost equivalent to SaDE algorithm in Test System I and Test System II. But for Test System III the performance is very poor as it is not able to generate even a feasible solution in 20 runs. The better performance of the SaDE algorithm is attributed to the self-adaptation c haracteristics involving four different mutation strategies and a varying CR value. The four strategies along with a better CR value ensure a diverse with Stop1 and avoiding premature convergence with Stop2. 7. Conclusion
This paper discusses the application of SaDE algorithm for designing robust optimal fixed structure controllers for systems with uncertainties and disturbance. Minimization of maximum value of real part of the poles and minimization of closed loop norm are considered as objectives subject to the robust stability and load disturbance attenuation constraints. The performance and validity of SaDE algorithm based fixed structure robust controller is demonstrated with three test systems, namely a linearized magnetic levitation system, F-8 aircraft model and a SISO unity feedback system. For comparing the performance of constrained SaDE algorithm, results of constrained PSO and five DE algorithms with different sets of parameter values and strategies are examined. It is shown experimentally that the performance of the SaDE algorithm is better than the other DE algorithms and the reported Constrained PSO algorithm. Also the time consuming trial-and-error method of identifying the trial vector generation strategy and its associated parameter settings is avoided by employing SaDE.

The better performance of the SaDE algorithm is attributed to the self-adaptation characteristics. Different DE algorithms per-form differently during the evolutionary process. Hence, in most of the applications, a single algorithm will not be able to locate the optimal solution. Due to the improved diversity of the population, SaDE is able to produce optimal solutions consis-tently. Also Stop2 stopping criteria clearly show that only SaDE algorithm is able to overcome the premature convergence. All the other algorithms fail in at least one of the Test Systems. SaDE algorithm with Stop2 criteria produces optimal solutions in all the three Test Systems saving function evaluations. The SaDE algo-rithm consistently succeeds to find an optimal controller. Hence, the SaDE algorithm can be recommended for the design of robust optimal fixed structure controller.
 Acknowledgements Authors thank University Grants Commission (UGC), New Delhi for financially supporting this work under the major project (38-248/2009(SR)) and Thiagarajar College of Engineering for providing necessary facilities for carrying this work. References
