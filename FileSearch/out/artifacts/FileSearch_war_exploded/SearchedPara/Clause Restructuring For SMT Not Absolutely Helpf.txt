 Phrase-based statistical machine translation (PSMT) translates documents from one human language to another by dividing text into contiguous sequences of words ( phrases ), translating each, and finally re-ordering them according to a distortion model .
The PSMT distortion model typically does not consider linguistic information, and as such encoun-ters difficulty in language pairs that require specific long-distance reorderings, such as German X  X nglish.
Collins et al. (2005) address this problem by re-ordering German sentences to more closely paral-lel English word order, prior to translation by a PSMT system. They find that this reordering-as-preprocessing approach results in a significant im-provement in translation performance over the base-line. However, there have been several other systems using the reordering-as-preprocessing approach, and they have met with mixed success.

We systematically explore possible explanations for these contradictory results, and conclude that, while reordering is helpful for some sentences, po-tential improvement can be eroded by many aspects of the PSMT system, independent of the reordering. Reordering-as-preprocessing systems typically in-volve three steps. First, the input sentence is parsed. Second, the parse is used to permute the words ac-cording to some reordering rules, which may be automatically or manually determined. Finally, a phrase-based SMT system is trained and tested us-ing the reordered sentences as input, in place of the original sentences. Many such systems exist, with results being mixed; we review several here.
Xia and McCord (2004) (English-to-French trans-lation, using automatically-extracted reordering rules) train on the Canadian Hansard. On a Hansard test set, an improvement over the baseline was only seen if the translation system X  X  phrase table was re-stricted to phrases of length at most four. On a news test set, the reordered system performed sig-nificantly better than the baseline regardless of the maximum length of phrases. However, this improve-ment was only apparent with monotonic decoding; when using a distortion model, the difference dis-appeared. Xia and McCord attribute the drop-off in performance on the Hansard set to similarity of training and test data.

Collins et al. (2005) (German-to-English) use six hand-crafted reordering rules targeting the place-ment of verbs, subjects, particles and negation. They train and evaluate their system on Europarl text and obtain a BLEU score (Papineni et al., 2002) of 26.8, with the baseline PSMT system achieving 25.2. A human evaluation confirms that reordered transla-tions are generally (but not universally) better.
On Web text, Xu et al. (2009) report significant improvements applying one set of hand-crafted rules to translation from English to each of five SOV lan-guages: Korean, Japanese, Hindi, Urdu and Turkish.
Training on news text, Wang et al. (2007) (Chinese-to-English, hand-crafted rules) report a significant improvement over the baseline system on the NIST 2006 test set, using a distance-based dis-tortion model. Similar results are mentioned in pass-ing for a lexicalised distortion model.

Also on news text, Habash (2007) (automatically-extracted rules, Arabic-to-English) reports a very large improvement when phrases are limited to length 1 and translation is monotonic. However, allowing phrases up to 7 words in length or using a distance-based distortion model causes the differ-ence in performance to disappear. Habash attributes this to parser and alignment performance. He also includes oracle experiments, in which each system outperforms the other on 40 X 50% of sentences, sug-gesting that reordering is useful for many sentences. Zwarts and Dras (2007) implement six rules for Dutch-to-English translation, analogous to those of Collins et al. (2005), as part of an exploration of dependency distance in syntax-augmented PSMT. Considering only their baseline and reordered sys-tems, the improvement is from 20.7 to only 20.8; they attribute their poor result to the parser used.
Howlett and Dras (2010) reimplement the Collins et al. (2005) system for use in lattice-based transla-tion. In addition to their main system, they give re-sults for the baseline and reordered systems, training and testing on Europarl and news text. In strong con-trast to the results of Collins et al. (2005), Howlett and Dras (2010) report 20.04 for the reordered sys-tem, below the baseline at 20.77. They explain their lower absolute scores as a consequence of the differ-ent test set, but do not explore the reversal in conclu-sion. Like Habash (2007), Howlett and Dras (2010) include oracle experiments which demonstrate that the reordering is useful for some sentences.
In this paper, we focus on the Collins et al. (2005) and Howlett and Dras (2010) systems (hereafter CKK and HD ), as they are the most similar but have perhaps the most divergent results. Possible expla-nations for the difference are differences in the re-ordering process, from either parser performance or implementation of the rules, and differences in the translation process, including PSMT system setup and data used. We examine parser performance in  X  3 and the remaining possibilities in  X  4 X 5. We first compare the performance of the two parsers used. CKK uses the Dubey and Keller (2003) parser, which is trained on the Negra corpus (Skut et al., 1997). HD instead uses the Berkeley parser (Petrov et al., 2006), trained on Negra X  X  successor, the larger Tiger corpus (Brants et al., 2002).

Refer to Table 1 for precision and recall for each model. Note that the CKK reordering requires not just category labels (e.g. NP) but also function labels (e.g. SB for subject); parser performance typically goes down when these are learnt, due to sparsity. All models in Table 1 include function labels.
 Dubey and Keller (2003) train and test on the Negra corpus, with 18,602 sentences for training, 1,000 development and 1,000 test, removing sen-tences longer than 40 words.

Petrov and Klein (2008) train and test the Berke-ley parser on part of the Tiger corpus, with 20,894 sentences for training and 2,611 sentences for each of development and test, all at most 40 words long.
The parsing model used by HD is trained on the full Tiger corpus, unrestricted for length, with 38,020 sentences for training and 2,000 sentences for development. The figures reported in Table 1 are the model X  X  performance on this development set. With twice as much data, the increase in per-formance is unsurprising.

From these figures, we conclude that sheer parser grunt is unlikely to be responsible for the discrep-ancy between CKK and HD . It is possible that parser output differs qualitatively in some important way; parser figures alone do not reveal this.

Here, we reuse the HD parsing model, plus five additional models trained by the same method. The first is trained on the same data, lowercased; the next two use only 19,000 training sentences (for one model, lowercased); the fourth uses 9,500 sentences; the fifth only 3,800 sentences. The 50% data models are closer to the amount of data available to CKK , and the 25% and 10% models are to investigate the effects of further reduced parser quality. We conduct a number of experiments with the HD system to attempt to replicate the CKK and HD find-ings. All parts of the system are available online. 1
Each experiment is paired: the reordered system reuses the recasing and language models of its cor-responding baseline system, to eliminate one source of possible variation. Training the parser with less data affects only the reordered systems; for experi-ments using these models, the corresponding base-lines (and thus the shared models) are not retrained.
For each system pair, we also run the HD oracle. 4.1 System Variations CKK uses the PSMT system Pharaoh (Koehn et al., 2003), whereas HD uses its successor Moses (Koehn et al., 2007). In itself, this should not cause a dra-matic difference in performance, as the two systems perform similarly (Hoang and Koehn, 2008).

However, there are a number of other differences between the two systems. Koehn et al. (2003) (and thus presumably CKK ) use an unlexicalised distor-tion model, whereas HD uses a lexicalised model. CKK does not include a tuning (minimum error rate training) phase, unlike HD . Finally, HD uses a 5-gram language model. The CKK language model is unspecified; we assume a 3-gram model would be more likely for the time. We explore combinations of all these choices. 4.2 Data A likely cause of the results difference between HD and CKK is the data used. CKK used Europarl for training and test, while HD used Europarl and news for training, with news for tuning and test.
Our first experiment attempts to replicate CKK as closely as possible, using the CKK training and test data. This data came already tokenized and lower-cased; we thus skip tokenisation in preprocessing, use the lowercased parsing models, and skip tokeni-sation and casing steps in the PSMT system. We try both the full data and 50% data parsing models.
Our next experiments use untokenised and cased text from the Workshop on Statistical Machine Translation. To remain close to CKK , we use data from the 2009 Workshop, 2 which provided Europarl sets for both training and development. We use europarl-v4 for training, test2007 for tun-ing, and test2008 for testing.

We also run the 3-gram systems of this set with each of the reduced parser models.
 Our final experiments start to bridge the gap to HD . We still train on europarl-v4 (diverging from HD ), but substitute one or both of the tuning and test sets with those of HD : news-test2008 and newstest2009 from the 2010 Workshop. 3
For the language model, HD uses both Europarl and news text. To remain close to CKK , we train our language models only on the Europarl training data, and thus use considerably less data than HD here. 4.3 Evaluation All systems are evaluated using case-insensitive BLEU (Papineni et al., 2002). HD used the NIST BLEU scorer, which requires SGML format. The CKK data is plain text, so instead we report scores from the Moses multi-reference BLEU script (multi-bleu), using one reference translation. Comparing the scripts, we found that the NIST scores are always lower than multi-bleu X  X  on test2008 , but higher on newstest2009 , with differences at most 0.23. This partially indicates the noise level in the scores. Results for the first experiments, closely replicat-ing CKK , are given in Table 3. The results are very similar to the those CKK reported (baseline 25.2, re-ordered 26.8). Thus the HD reimplementation is in-deed close to the original CKK system. Any qualita-tive differences in parser output not revealed by  X  3, in the implementation of the rules, or in the PSMT system, are thus producing only a small effect. Results for the remaining experiments are given in Tables 4 and 5, which give results on the test2008 and newstest2009 test sets respectively, and Ta-ble 6, which gives results on the test2008 test set using the reduced parsing models.

We see that the choice of data can have a profound effect, nullifying or even reversing the overall result, even when the reordering system remains the same. Genre differences are an obvious possibility, but we have demonstrated only a dependence on data set.
The other factors tested X  X anguage model order, lexicalisation of the distortion model, and use of a tuning phase X  X an all affect the overall performance gain of the reordered system, but less distinctly. Re-ducing the quality of the parsing model (by training on less data) also has a negative effect, but the drop must be substantial before it outweighs other factors.
In all cases, the oracle outperforms both baseline and reordered systems by a large margin. Its selec-tions show that, in changing test sets, the balance shifts from one system to the other, but both still contribute strongly. This shows that improvements are possible across the board if it is possible to cor-rectly choose which sentences will benefit from re-ordering. Collins et al. (2005) reported that a reordering-as-preprocessing approach improved overall perfor-mance in German-to-English translation. The reim-plementation of this system by Howlett and Dras (2010) came to the opposite conclusion.

We have systematically varied several aspects of the Howlett and Dras (2010) system and reproduced results close to both papers, plus a full range in be-tween. Our results show that choices in the PSMT system can completely erode potential gains of the reordering preprocessing step, with the largest effect due to simple choice of data. We have shown that a lack of overall improvement using reordering-as-preprocessing need not be due to the usual suspects, language pair and reordering process.

Significantly, our oracle experiments show that in all cases the reordering system does produce better translations for some sentences. We conclude that effort is best directed at determining for which sen-tences the improvement will appear.
 Our thanks to Michael Collins for providing the data used in Collins et al. (2005), and to members of the Centre for Language Technology and the anony-mous reviewers for their helpful comments.

