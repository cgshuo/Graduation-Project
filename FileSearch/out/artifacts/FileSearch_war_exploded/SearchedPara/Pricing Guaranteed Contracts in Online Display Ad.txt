 We consider the problem of pricing guaranteed contracts in online display advertising. This problem has two key charac -teristics that when taken together distinguish it from rela ted offline and online pricing problems: (1) the guaranteed con-tracts are sold months in advance, and at various points in time, and (2) the inventory that is sold to guaranteed con-tracts  X  user visits  X  is very high-dimensional, having hun-dreds of possible attributes, and advertisers can potentia lly buy any of the very large number (many trillions) of com-binations of these attributes. Consequently, traditional p ric-ing methods such as real-time or combinatorial auctions, or optimization-based pricing based on self-and cross-elast ic-ities are not directly applicable to this problem. We hence propose a new pricing method, whereby the price of a guar-anteed contract is computed based on the prices of the indi-vidual user visits that the contract is expected to get. The price of each individual user visit is in turn computed using historical sales prices that are negotiated between a sales per-son and an advertiser, and we propose two different variants in this context. Our evaluation using real guaranteed con-tracts shows that the proposed pricing method is accurate in the sense that it can effectively predict the prices of other (out-of-sample) historical contracts.
 H.4.2 [ Information Systems Applications ]: Types of Sys-tems X  Decision Support 9  X  Work done while at Yahoo! Inc Algorithms, Economics Pricing, Display Advertising
We propose a method for pricing guaranteed contracts in online display advertising. In guaranteed display adverti sing, advertisers can buy contracts that specify targeted user vis -its (e.g., Males in California who visit Sports pages), a futu re duration for the contract (e.g., October -December 2010), and the number of user visits they are interested in obtaining (e.g., 100 million), and Web publishers guarantee these con-tracts months in advance of the delivery date. Guaranteed display advertising is a multi-billion dollar industry and thus, intelligent pricing of guaranteed contracts has a direct im pact on publishers X  revenue.

The problem of pricing guaranteed contracts, however, has a few key differentiating factors that require the developmen t of new pricing methods. First, as mentioned above, guaran-teed contracts are sold months in advance of the delivery dat e, and at various points in time during this period. For instanc e, it is not uncommon to sell some guaranteed contracts a year in advance to some advertisers, a few months in advance to some other advertisers, and just a few days in advance to other advertisers. Second, each user visit can be described by hundreds of attribute values, and advertisers can poten-tially target (and hence require the publisher to price) any o f the many trillions of combinations of these attribute value s. For instance, each user visit is typically characterized by th e demographics of the user (age, gender, location, etc.), expl ic-itly stated interests of the user (e.g., travel, sports), im plicitly inferred interests of the user (e.g., planning a vacation), char-acteristics of the Web page being visited (e.g., Sports page, Travel page), characteristics of the system being used by the user (e.g., PC vs. mobile, dial-up vs. broadband, IP address location), and so on. Given these attributes, different ad-vertisers may target different combinations; for instance, one advertiser may target Males in California who visit Sports pages, while another advertiser may target users between 20 and 30 years of age who are planning a vacation.

Due to the above factors, existing pricing methods are not directly applicable to the problem of pricing guaranteed co n-tracts. For instance, let us consider traditional yield opti -mization methods used in the context of industries such as airlines and retail. Such methods typically model the self-and cross-elasticities of demand at various price points, a nd try to optimize for the product prices that maximizes rev-enue [11]. However, these methods are only viable for a rela-tively small number of products (say, 100s of products), and are not applicable for the trillions of overlapping product s as in display advertising, where two contracts rarely have the same targeting combination, and computing cross-elastici ties for such a large number of products is impractical at best. As another example, let us consider one of the primary pricing methods used today in online advertising: real-time auctio ns, which are extensively used in sponsored search [6] and non-guaranteed display advertising [9]. A related pricing meth od is combinatorial auctions [5], whereby different buyers can specify different combinations of inventory of interest (si mi-lar to different targeting combinations), and the problem is to find the yield-maximizing way to allocate the inventory. Since guaranteed contracts are sold well in advance, and at different points in time, they are not amenable to auctions because not all advertisers buy inventory during the same period of time (in this sense, it is analogous to airline tick et pricing, where not all passengers can be forced to buy ticket s during the same period of time). In order to conduct an auc-tion where the bidders arrive at various times, we would have to set appropriate reserve prices; for which we would again have to model elasticities for an impractically large numbe r of overlapping products (see also Section 7).

Finally, another key differentiating aspect of the guaran-teed display advertising market is the following: due to the sheer number and complexity of products offered, the terms of guaranteed contracts are most commonly decided through manual negotiations between a sales person representing th e publisher and a media-buyer representing the advertiser. T he sales person is responsible for offering a combination of the available products that best fits the advertisers needs whil e at the same time extracting the maximum possible value for the sold user visits from the advertiser (e.g., by marking up the price or offering discounts to close a sale, as appropri-ate). Thus, the price generated by any automated pricing system is only used by the sales person as a starting point in the negotiations and is consequently non-binding. However, we also note that since each sales person constantly books contracts with  X  X ew X  targeting combinations that have neve r been booked before, we cannot simply rely on the sales person to negotiate a price without any guidance from a pricing sys-tem, because the sales person needs some guidance as to the starting point of the negotiation. Accordingly, we conside r the objective of an automated pricing system for guaranteed contracts to be one that provides the sales person informatio n regarding the market value of the user visits that the adver-tiser is interested in purchasing, which can then be used as a good starting point for negotiations.
To address the above issues, we propose a new method for pricing guaranteed contracts. This method is based on two key ideas. The first idea is to price each contract based on the value of the individual user visits that are expected to be delivered to the contract. Using individual user visits as the basic unit of pricing has several advantages over looking only at contracts. First, it helps solve the problem of deali ng with the combinatorial explosion of overlapping products; b y mapping each product to (a sample of) the set of user visits that are eligible for the product, we can better model and understand the overlap and intersection between the variou s products. Second, it helps solve the sparsity problem, i.e. , the problem of pricing contracts that have very few or no other contracts with identical targeting combinations. As an example, consider a contract that targets Computer Scien-tists living in Raleigh. Using standard techniques, we could price this contract based on the attributes  X  X omputer Sci-entist X  and  X  X aleigh, X  but unfortunately, even with years o f contracts, the data is likely to be too sparse to be useful. (How many contracts can we expect to see that target either of these attributes?) However, by mapping this contract to user visits, which may be eligible for many other contracts with different targeting attributes, we can solve the sparsi ty problem. Finally, the idea of pricing a contract based on the value of the user visits also provides more transparency in pricing: each advertiser pays for what he/she expects to get.
The second key idea behind the proposed method is to leverage the implicit pricing feedback and correction embe d-ded in the current guaranteed sales process. As we mentioned earlier, guaranteed contracts are sold through negotiatio ns between sales persons and advertisers that results in the fin al price for the contract being higher or lower than the price quoted by the pricing engine. Our key observation is that the final negotiated price implicitly encodes some informa-tion about the market conditions, willingness of advertise rs to pay a given price, etc. Consequently, we can use the final negotiated prices for recent historical contracts to infer the value of user visits.

Of course, the main open question that remains is how to price individual user visits based on historical contracts. W e propose and evaluate two alternative techniques to solve thi s problem  X  WAP and MIN-VAR. WAP, or Weighted Average Pricing, postulates that the value of a user visit should be as close as possible to the final negotiated price of each eligible historical contract (normalized by the proportion taken up by each contract). If we were to mathematically solve for this objective, it turns out that the value of each user visit is the weighted average of the prices (per user visit) of eligi -ble historical contracts (hence the name WAP). For example, suppose there was a user visit corresponding to a Computer Scientist living in Raleigh visiting a Sports page. If there we re two historical contracts interested in the user visit, but 60 % of such user visits were given to the first contract (priced at $1 CPM -Cost per  X  X ille X  or 1000 user visits) while 40% of such user visits were given to the second contract (priced at $ 4 CPM), then WAP would price the user visit as the weighted average price of the contracts. In this case, the price would be 60%  X  1 + 40%  X  4 = $2.2 CPM.

As mentioned above, the second technique for pricing user visits is called MIN-VAR. MIN-VAR postulates that the sum of the values of each eligible user visit should approximately be equal to the total cost of the contract (notice the subtle difference between this postulate and the WAP postulate). Essentially, MIN-VAR treats the total cost of each historic al contract as a soft constraint, and tries to find user visit val-ues that when added up, correspond to the total cost, and hence satisfy the constraints to the maximum extent possi-ble. Since there may be many different assignment of prices to user visits that can result in the best possible satisfacti on of the constraints, MIN-VAR tries to minimize the variance (hence the name MIN-VAR) between the prices of user visits eligible for the same contract, in the absence of any informa -tion to the contrary. MIN-VAR thus ensures that we make as few assumptions as possible on the user visit prices given the historical contract prices.

We have implemented the WAP and MIN-VAR algorithms, and evaluated them using real historical contracts and pric es. Specifically, we use a set of historical contracts before tim e t to train the WAP and MIN-VAR models, use them to price historical contracts after time t , and calculate their fit to the final negotiated booked price (the historical prices wer e computed using a different pricing method than WAP and MIN-VAR, hence the results are not biased towards WAP or MIN-VAR). Our results show that WAP generally out-performs MIN-VAR because WAP is more robust to varia-tions in booked prices. In fact, somewhat surprisingly, WAP actually has a better fit to the final negotiated booked price than the original pricing method, even though the original pricing method was used by the sales team as a starting point for negotiating the final price.

We note that there are two other aspects that are related to the guaranteed pricing problem considered here, but are beyond the scope of this paper. The first aspect is forecastin g a sample of the set of user visits that are eligible for a con-tract that may be booked months in advance. However, this problem has to be (and in reality is) solved in any case for a guaranteed system because a publisher needs a fairly accurat e forecast in order to guarantee a certain number of user visits to contracts and avoid penalties. The second aspect is cor-recting prices for current market conditions, specifically those conditions that are not captured by prices of recently booke d contracts. For instance, prices may need to be dropped (in-creased) at the start (end) of a recession due to a sudden drop (increase) in demand not reflected in recent historical pric es. While there are techniques to address such price corrections based on the amount of inventory sold, etc., these are beyond the scope of this paper.
In summary, the main contributions of this paper are:
We first describe the supply and demand model, before formally stating the pricing problem.
The basic unit of supply is an individual user visit, which is identified by a set of attribute-value pairs that include i n-formation about the user and the context of the visit. Specif-ically, a user-visit may be defined by
Let us suppose that there are k = 1 , . . . , K attributes that specify the user and content information, with the set of al-lowable values for attribute k being denoted by A k . Thus the universe of possible attribute combinations is A 1  X A 2  X  . . .  X  A
The basic unit of demand is a guaranteed contract. A guar-anteed contract is essentially a guarantee that a publisher provides to show an ad from a particular advertiser to a set of users whose attribute-values fall in a subset that is desi r-able to that advertiser. In particular, a typical guaranteed -delivery contract (denoted c ) may specify the following:
Given the above supply and demand models, the problem of pricing guaranteed contracts can be stated as follows. Th e goal is to find an appropriate pricing function Q that maps any allowable combination of targeting predicate, duratio n and impression goal to a corresponding price, i.e.,
Q : 2 A 1  X  ...  X A K  X  [ t, t + T ]  X  [ t, t + T ]  X  R +  X  R
Stated in this fashion, the scale of the pricing problem be-comes evident. A large publisher commonly has many Web pages and offers hundreds of different user attributes that advertisers can target. Consequently, the input to the pric-ing function can be many trillions of pricing combinations. Note that even though advertisers may not purchase all such combinations, it is not known a priori which subset of the combinations they are interested in; consequently, the pric -ing function should be able to dynamically price any one of the combinations.
Pricing guaranteed contracts thus presents a formidable challenge. In the next section, we present an overview of our solution approach to attack this problem.
On the face of it, the guaranteed pricing problem may look similar to the pricing problems faced in other industries th at sell multiple products, such as airlines, hotels, and retai l. In-deed many of these yield management problems have been very well studied for over 30 years [11], and they typically work by estimating the demand curve for a single product (self-elasticity), as well as the interactions between the d e-mand curves of multiple products (cross-elasticity). Howev er, directly applying these techniques to the guaranteed pricing problem is impractical for two reasons.

First, the sheer number of products is many orders of mag-nitudes higher than that considered in other domains, and consequently, there is extreme sparsity in the data to esti-mate self-elasticities (for instance, it is very rare for tw o ad-vertisers to buy exactly the same targeting combinations, le t alone durations). Furthermore, since there are manytrillio ns of products, estimating cross-elasticities at this scale i s im-practical, again due to data sparsity.

The second reason that existing techniques do not directly apply is more subtle: even though the different targeting com -binations can be viewed as different products, they may actu-ally be competing for the same set of user visits. For instance , targeting users whose income is above $100,000 a year in the US may be almost the same as targeting users in the large cities of the US. Understanding and capturing correlations and cross-elasticities between a large number of such overl ap-ping products soon becomes impractical.

In order to address the above issues, we propose a new and alternative way to price guaranteed contracts, as describe d below.
The key idea is to view the price of the contract as the sum of the values of the individual user visits that the contract is expected to get. More formally:
The total cost of a contract is the sum of the values of the expected user visits that will be delivered to that contra ct. In particular, suppose that a contract c will be delivered user visits I c , and the price of each user visit i  X  I c is p total cost Q c of the contract c is given by,
The intuition behind this idea is the following. Although an advertiser pays a single price for a guaranteed contract, not all of the user visits that the advertiser obtains have the same economic value. For instance, an advertiser who target s users visits to Finance Web pages may get some user visits corresponding to users from high-income New York City zip codes, and some impressions from poor rural areas. Even though the advertiser pays for the entire  X  X ackage, X  the eco-nomic value of these impressions for advertisers is likely t o be very different. Thus, from the advertiser X  X  point of view a guaranteed contract is a bundle of heterogeneous objects (a mix of more and less valuable user visits), and hence the the price of a guaranteed contract should reflect the overall val ue of this mix.

Pricing based on expected user visits enables us to address some of the problems that we encountered with traditional yield optimization techniques. For instance, dealing with tr il-lions of seemingly unrelated products that nevertheless ov er-lap can be handled effectively by mapping each product to their corresponding user visits, and using this overlap to gu ide pricing. For instance, it is possible to determine that the s et of eligible user visits for a contract targeting users whose i n-come is above $100,000 a year in the US is almost identical to the set of user visits eligible for a contract targeting use rs in the large cities of the US.

The above idea also enables us to address some of the scal-ability problems of the traditional yield optimization tech -niques when dealing with such a large number of products. Although there are many billions of individual user visits, it is sufficient for the purpose of pricing to work with a sample of user visits for each contract. As we shall experimentally eval -uate in Section 6, a sample of a thousand user visits per con-tract is often sufficient to calculate prices with high-fideli ty, while also capturing the effects of overlap. In a sense, this approach may almost seem paradoxical: there are billions of user visits, but only a few hundreds of thousands of booked guaranteed contracts. Yet, we use the prices of individual user visits to price contracts. The reason we do so, of course, is that the number of possible contracts is of the order of many trillions, and we can work with a small sample of user visits to obtain the prices.

Of course, there is still the open issue of how to determine the prices of individual user visits, which we address next.
In order to price user visits, we leverage the prices of re-cent historical contracts, and some of the feedback and mar-ket correction mechanisms inherent in the current guarante ed contract sales process. Specifically, current guaranteed c on-tracts are typically not sold using a self-serve interface, b ut are sold through sales agents interacting either directly w ith advertisers, or with agencies working on behalf of advertise rs. Consequently, the price produced by the pricing engine is onl y used as a starting point for negotiations, and can be adjuste d upwards or downwards depending on market dynamics, com-petition, advertisers X  willingness to pay, and so on. What th is implies, however, is that the final negotiated prices of hist or-ical contracts is a summary of various exogenous factors that have an impact on prices, and thus our proposal is to use these to price individual user visits.

More formally, the goal is to find a pricing function P that takes in a user visit i , and a set of matching historical con-tracts H i along with their final negotiated prices and other metadata, and outputs the price of the user visit:
In the subsequent sections of this paper, we propose two implementations of this pricing function  X  WAP and MIN-VAR.

At this point, it is important to note that the proposed approach does not aim to come up with a provably revenue optimal final price for a contract. Rather, the goal is to pro-duce a contract price (by producing the appropriate user visi t prices) that provides a good starting point for sales negoti-ations by taking into account recent marketplace correction s that are captured in recently negotiated historical prices . In the following two sections we describe the WAP and MIN-VAR pricing methods for estimating user visit prices based on historical contract prices. We now introduce some notation that will be used in these sections.

In general, we continue to use i as a generic identifier for a user visit and j as a generic identifier for a historical contract. We denote the set of historical contracts used to price user visits by H and as before, we denote the subset of H that matches a user visit i by H i . The final negotiated price per user visit for a contract j  X  H is denoted q j and the price of a user visit i generated by WAP or MIN-VAR is denoted by p .

We denote a future contract to be priced as c and let I c denote the sampled set of user visits that will be delivered to c . Since the user visits in I c have time stamps in the future, in practice we would have to translate these time stamps to the past to find a set of matching historical contracts. Here, for simplicity of notation, we let H i denote the set of historical contracts matching a future user visit i  X  I c with the implicit understanding that the user visit i has been translated back in time to find the matching historical contracts.
The main idea behind WAP pricing is the following: the price of each user visit is as close as possible to the final negotiated price of an eligible historical contract (normaliz ed by the number of impressions) . Of course, a user visit may have multiple eligible historical contracts, and in this ca se, the goal is to make the deviation as small as possible across all these contracts. These aspects are formalized next.
The WAP price for a user visit is obtained by minimizing a weighted least squares objective function, where the price s of historical contracts are the independent variables and t he price of the user visit as the dependent variable. That is, given a user visit i and a set of eligible historical contracts H i  X  H , the price p i is obtained as:
Here, x ij  X  0 is a weight that captures the importance of contract j in determining the price of i , and is used to capture the fact that not all historical contracts have the s ame influence on the price of a user visit. For instance, a narrowly targeted eligible contract that targets a small number of us er visits is likely to have a larger impact on the user visit price than a contract that targets potentially billions of user vis its, some like i and some very different user visits. One way of capturing this weight systematically is to view it as an ad serving probability, i.e., the probability that the ad serve r will serve a user visit such as i to a contract j . We consider an approximation to this interpretation in the experimental section.

We now turn to the issue of efficiently solving for the user visit prices that meet the above objective.
Since the objective function to be minimized on the right hand side of (4) is a simple quadratic function of p , the price p can be written in closed form as since q j , x ij  X  0 for each j  X  H i . Thus, the user visit price p can be simply computed using the above formula. Having calculated the p i for all i  X  I c , the price per user visit for contract c is calculated using (2).
The MIN-VAR algorithm adopts a subtly different approach than WAP, and its main idea is the following: the price of the sum of eligible user visits is as close as possible to the fi-nal negotiated price of a historical contract . Accordingly, the MIN-VAR algorithm solves a linear regression model to infer the prices of individual user visits from the prices of the his-torical contracts. We now describe the model more formally, before describing how it can be solved efficiently.
Let us assume that for each contract j  X  H , we have a sampled set of user visits eligible to be served to j and denote we let  X  i denote the  X  X eight X  of the user visit i in the sample. We can think of  X  i as the number of user visits that are represented by the single user visit i in the sample. As in the case of WAP, we let x ij denote the ad server probability that the user visit i will be served to a contract j . Now, we can define the total number of user visits that will be served to contract j as
Then, the MIN-VAR algorithm solves the following opti-mization problem to determine the price p i of a user visit i (simultaneously finding error terms z j ).
It is easy to see that the objective function is the weighted sum (with W being the relative weight) of two different func-tions. If we ignore the first term in the objective involving the user visit prices p i , we see that what remains is a tradi-tional least squares optimization problem that tries to fit th e user visit prices to add up as close as possible to the negoti-ated contract prices. However, even though we sample only a thousand user visit per contract and there are only a few thousand contracts in H , the total number of user visits in I H is in the millions, which is a few orders of magnitude higher than the number of historical contracts. Thus, there would be multiple sets of user visit prices that would minimize the error in fit to the contract prices.

In order to choose between these optimal solutions we use an approach similar to entropy maximization. In particular, we wish to choose a solution where the variation in the prices of all the user visits that served a particular contract to be a s small as possible (hence the name MIN-VAR). Stated differ-ently, unless there is specific information forcing the pric es of any two user visits to be different we would like their prices to be equal. We achieve this objective by adding the term for each contract j , which is essentially the variance (relative to the contract price) of the individual user visit prices used to serve the contract.
Before we go on to describe how to efficiently compute user visit prices for MIN-VAR, we would like to point out the rela-tionship between the WAP and MIN-VAR algorithms. Con-sider for a moment the objective function in (6) with W = 0. This can be written as min X It is easily seen that for each user visit i , the MIN-VAR ob-jective is exactly the same as the WAP objective. Since for W = 0 the regression portion of the MIN-VAR objective (and hence the constraints) do not play any part, the user visit prices generated by the WAP and MIN-VAR algorithms are identical.
We now turn to the problem of efficiently computing user visit prices that satisfy the MIN-VAR objective. At first glance, a simple solution would be to solve the problem in two stages, i.e., first solve the regression problem and then find the minimum variance solution among the set of optimal solutions to the regression problem. However, we note that underdetermined regression solutions are highly suscepti ble to outliers in the data  X  a contract with an anomalous price could skew the prices of all its eligible user visits. To avoid this problem, we solve for both objectives together with a re l-ative weight W that is tuned based on empirical experiments so as to be resistant to outliers, while at the same time trying to fit user visit prices to the historical contract prices.
Another issue with solving the above objective is that, un-like WAP, the price of a user visit is related to the price of other user visits eligible for the historical contracts, includin g those user visits that may not even be eligible for the new contract being priced. Consequently, the problem needs to be solved for a large set of user visits only indirectly relate d to the contract being priced, and it is typically impractical to solve this problem online to produce a price for the sales agent. Solving and storing the user visit prices offline also has its challenges because we cannot possibly compute user visit prices for every possible sample that might be requested for the trillions of products. So, we are thus faced with a dilemma: computing the prices online is too expensive, but computing the prices offline for every possible user visit that could be sampled for a query is impractical. What do we do?
Our proposed solution works in two steps. In the first step, we solve the optimization problem (6) offline with a sample of user visits relevant to the historical contracts (and not t he new contract to be priced). Based on this solution, we store the optimal dual values [3] (denoted by  X   X  j ) per contract cor-responding to each equality constraint in (6). In the second (online) step, given a set of user visits expected to be served to the contract to be priced, we use the stored  X   X  j values for the historical contracts to rapidly compute the price for ea ch new user visit. As we shall now show, this two step approach pushes most of the heavy-weight computation offline, and still enables us to compute the user visit prices rapidly online.
We now describe how we can quickly compute the user visit prices online using the dual values of the optimal solution ( the  X  j values). From the duality theory for convex optimization problems [3], it can be shown that given an optimal vector  X   X  := (  X   X  j : j  X  H ) of Lagrange multipliers for the equality constraints of (6), any vector p := ( p i : i  X  I H ) such that p  X  0 and vector z := ( z j : i  X  H ) is an optimal set of user visit prices and slacks for (6) if and only if the following complimentary slackness condition holds where for any p , z and  X  the Lagrangian function L ( p,  X  ) is defined as
L ( p, z,  X  ) := X Rearranging the terms of (9) and using (8), we get that min It is easy to see that (10) can be solved in closed form indi-vidually for each p i and z j . Thus, from (10), we see that the optimal user visit prices p i and the slacks z j can be obtained from the optimal  X   X  j values using
Thus, the above equation is used to compute the user visit prices online. Once the user visit prices are computed, the contract price is then computed using (2).
We have implemented the WAP and MIN-VAR algorithms, and benchmarked them against the algorithm currently used to recommend prices to sales persons for a large Web pub-lisher. For the experiments, we used historical guaranteed contracts from the publisher, along with their actual negot i-ated prices.

We begin by motivating the metrics and the design we chose for our evaluation. We then present the details of the system architecture used to implement the tests, and finally presen t our results.
Since WAP and MIN-VAR (like the algorithm currently in use) generate prices that are used as a starting point for negotiations by sales persons, we evaluate the algorithms b y measuring the fit of the generated prices to the actual nego-tiated prices. This evaluation methodology is similar to th at used in [8] for evaluating price recommendations in a relate d but different context (please see Section 7 for more details).
First, we choose a set of contracts that were booked in some time interval in the past say [ t H s , t H e ]. Note that we can retrieve both the final negotiated price and the price recom-mended by the current pricing algorithm for each contract in our test set. We use another set of historical contracts that were active before t H s to price our test contracts us-ing WAP and MIN-VAR. Then, we compare the quality of the prices recommended by each algorithm (WAP, MIN-VAR and the current algorithm) by measuring the fit against the final negotiated prices of our test contracts. To be specific, if { q j : j = 1 , . . . , K } is the set of negotiated prices for our test contracts and {  X  q j , j = 1 , . . . , K } is the set of prices gener-ated by one of the candidate algorithms, we use the following standard metrics to evaluate the fit.
 (MAPE refers to Mean Absolute Percentage Error).

Based on our stated objective to provide a good starting price for negotiations, an ideal pricing algorithm would be one that was able to somehow predict exactly what price the advertiser would be willing to pay and display this as the starting price. In this case, the final negotiated contract p rice would be equal the system suggested price. Consequently, the and the MAPE metric would be 0. Thus, in our experiments, of the WAP and MIN-VAR generated prices as predictors of the final negotiated price of the corresponding contracts.
It is very important to note that the aforementioned test is inherently biased in favor of the algorithm currently used for price recommendations. This bias arises because the pri ce recommended by the current algorithm was in fact, the ba-sis for the negotiations that ended in the final booking price for each test contract. In the extreme case for example, if sales persons performed no negotiations and each advertise r booked contracts at the price recommended by the pricing al-gorithm, the R 2 value for the current pricing algorithm would be 1 (a perfect fit), even though this is not a true reflection of the extent of the fit. Fortunately, in our case, the sales per-sons do perform negotiations, so the bias is somewhat limite d but it is nevertheless present due to strong correlations th at we observed between the overall monthly average booking price and the overall monthly average price recommended by the current algorithm.

We note that it might be possible to address some of the bias issues by performing a live online test, whereby a subse t of the sales persons use our proposed algorithms in the actua l bookings. While such a test is in our plans for future work, it would require significant online experiment design to address the errors inherent in partitioning a relatively small numb er of sales persons; further, it would have to be carried out ove r a long period of time (many months or even a year) given the lead time for booking guaranteed contracts.
Figure 1 shows the system architecture that implements the proposed algorithms.
For each test contract to be priced, the pricing system re-ceives a sample of forecast user visits I c . The sample of fore-cast user visits is obtained from a supply forecasting system used for booking guaranteed contracts.

Both the WAP and MIN-VAR algorithms are implemented with an offline and an online component.
Since we are using the current pricing algorithm (hence-forth, denoted as CURRENT) as a benchmark for the pre-dictive performance of our proposed algorithms, we provide a brief description of this algorithm in this section. The CUR -RENT algorithm sets prices by finding demand elasticities us -ing historical data and then solving a revenue maximization problem for the prices. Of course, the CURRENT algorithm faces the same problems arising from the sparsity of data relative to the number of different but overlapping products offered. However, it overcomes this difficulty by aggregat-ing all products into a few buckets and treating all products within the same bucket as one. Given a contract to be priced, CURRENT first finds a  X  X ase price X  for the contract as the price of the bucket that the corresponding product would fal l in. Then based on each extra attribute set specified in the contract X  X  targeting predicate, CURRENT adds on a percent-age markup to the base price to finally arrive at the price of the contract.
First, in order to test the relative performance of both WAP and MIN-VAR, we chose a set of guaranteed display contracts that had been booked within the span of one month against one particular ad position on the chosen publisher X  X  conten t network. For our historical contract set, we chose contracts booked against the same ad position that had been active in the three months prior to the booking month of our test contract set. We priced our set of test contracts using the WAP algorithm and the MIN-VAR algorithm with 5 differ-ent values of the weight parameter W . Table 1 shows the the MAPE value for the CURRENT algorithm) metrics cal-culated on the prices generated by each of our candidate al-gorithms.

Immediately, we note the surprising fact that the WAP algorithm shows both a higher R 2 and lower MAPE metric compared to the CURRENT algorithm despite the inherent bias towards CURRENT that we described in Section 6.1. This result definitely reinforces our confidence in the user visit based approach to pricing guaranteed contracts. Also, it is clear from both the MAPE and R 2 values in Table 1 that WAP is able to better predict the prices of the contracts in the test set. Also, recalling that WAP produces prices identical to MIN-VAR when W = 0, we note that the performance of the MIN-VAR algorithm steadily decreases as with increasing W . The reason for this becomes clear when we note the connection between the weight W , the variables z in the MIN-VAR model and the impression prices gener-ated by the model. From (11) and (12), we can write the prices generated by MIN-VAR as: Thus, the user visit prices depend directly on the fit of the regression, i.e., whether each historical contract price c an be well represented as the sum of its user visit prices. In this situation, especially for a large value of W it is easy to see that even the presence of a single contract with a price that i s an outlier (compared to the prices of other similar contract s) can lead to dramatically different user visit prices. We be-lieve that it is the presence of such contracts with anomalou s prices in our historical set that causes the prediction perf or-mance of the MIN-VAR algorithm to degrade as the weight W increases.
Based on the results we observed in our initial set of exper-iments, we decided to perform a more extensive set of tests using only the WAP algorithm. For this test, we chose a much larger set of guaranteed delivery contracts booked over the span of 12 months on multiple properties in our publisher X  X  content portfolio (Note that the snapshot of results we show is deliberately incomplete and subject to some anonymizatio n and thus does not necessarily reflect the publisher X  X  portfo lio at any particular time). For each month of test contracts, we used contracts that were active in the previous three months as the historical set.

Having generated a price for each contract in the test set using the WAP algorithm for all our test contracts, we com-pared the R 2 metric for WAP and CURRENT at multiple value (for all properties together) and the normalized R 2 for WAP as a percentage difference from that for CURRENT for selected properties.
 Table 2: Experiment 2 : Overall performance of WAP vs. current algorithm
Again, we see that even over a large data set of test con-tracts booked over a year, WAP performs remarkably well given the bias towards CURRENT. However, it is also clear that the percentage difference of the R 2 values of WAP from the R 2 values for CURRENT are seen to vary quite dramati-cally between specific properties. When we investigated this , we saw that WAP tended to have a better fit to the negoti-ated price on properties where highly targeted contracts we re booked (properties A, D and E). Specifically, for highly tar-geted contracts that had higher negotiated prices relative to the average price for that property, we found that WAP was able to recognize the true value of the user visits that would be delivered to the contract and predict a more accurate pric e for it than CURRENT. Figure 2 shows an example of a typ-ical property where we noticed this. In this figure, which is best viewed electronically or using a color print-out, we hav e Figure 2: Individual test contract prices where R 2 of WAP is greater than R 2 of CURRENT plotted the negotiated price and the WAP and CURRENT prices for each test contract. The test contracts have been arranged from left to right in increasing order of negotiate d price. The red boundary indicates the region where the WAP prices are seen to be closer to the negotiated prices than the CURRENT prices.

On the other hand, we noticed that WAP tended to have a relatively poorer fit with respect to the negotiated price f or properties where a large number of contracts in the test set had been booked at prices very close to that recommended by CURRENT. However, as mentioned in Section 6.1, this is expected because when there is little negotiations performe d by sales persons, the results are significantly biased towar ds CURRENT. Figure 3 shows an example of a typical property where we noticed this phenomenon. As before, in this figure Figure 3: Individual test contract prices where R 2 of WAP is less than R 2 of CURRENT we have plotted contracts from left to right in increasing or -der of negotiated price, and the red boundary indicates the test contracts where the negotiated prices is very close to t he CURRENT recommended price.
 Finally, Figure 4 shows, for a particular property, the mont hly from the corresponding R 2 value for CURRENT; the results are shown for a period of 12 contiguous months (not neces-sarily from January to December). Clearly, the predictive performance of the WAP algorithm drops off from month 1 to month 7 and then improves again in subsequent months. We were able to correlate this reduction in performance of the WAP algorithm to macro-economic changes in the guar-anteed display marketplace that resulted in large changes i n the overall demand and negotiated prices. Since the WAP al-gorithm uses historical contracts to price future contract s, the prices predicted by WAP always lagged the macro-economic changes in the marketplace leading to a reduction in the pre-dictive performance. Accordingly, once the market stabili zed, the performance of WAP was seen to improve. We believe this example demonstrates the need for modeling changes in the market that are not reflected in the historical prices. We are currently working on incorporating features that address th is need into our models.
 Figure 4: Percentage difference between R 2 values for WAP and CURRENT
In summary, the experiments show that WAP is overall a better predictor of final negotiated prices than MIN-VAR, mainly because WAP better handles outliers in the negoti-ated prices. Perhaps most surprisingly, the fit of WAP to the historical negotiated prices often exceeds the fit to CUR-RENT, even though the historical negotiated prices were di-rectly influenced by CURRENT. These results indicate that user visit level pricing is a promising direction to pursue fo r pricing guaranteed contracts.
Pricing problems have been extensively studied in the con-text of many economic environments. Almost any business faces pricing decisions and many concepts of price theory ar e applicable across a wide range of industries. For example, all monopolists who sell non durable goods are conceptu-ally identical regardless of the industry where they operat e. Monopoly profit maximization is a straightforward problem covered in standard economic texts.

The pricing problem becomes very complex when products are differentiated. There is extensive literature that explor es the equilibrium strategy of a firm that has to choose price and product characteristics while facing competition from oth er firms. This problem was first studied in the context of auto industry [2]. A large body of work that followed this paper applied similar techniques to study competition in industri es ranging from consumer electronics [7] to breakfast cereals [ 10]. The ideas from these articles do not transfer to guaranteed display advertising environment because unlike car makers that choose what products to make and are constrained to offer a relatively small number of products, the product that a publisher has to sell are visits from individual users X  thus publishers have a very large set of  X  X roducts X  and no ability to influence product attributes (users are what they are).
The yield optimization problem which considers the ques-tion of how a firm should price perishable inventory in the presence of fluctuating demand, has been well studied in the context of many different industries (airline, hotel, car ren tal, cruise line, retail sales etc.). Talluri and van Ryzin [11] pr o-vides an extensive survey of various approaches to tackle this problem. Boyd and Bilegan [4] also discuss the his-tory of automated yield management and its application to E-Commerce. However, most yield optimization approaches used in industries such as airlines or hotels do not scale wel l to the number of overlapping products typically sold in the guaranteed display market.

Other than for the guaranteed display market, real-time auctions seem to be the pricing method of choice for online advertising. Indeed, sponsored search advertising (based on users searching for particular keywords) is sold exclusively via real-time auctions. We refer the reader to [6] and [12] for a detailed analysis of that market. In fact, there is a relative ly small but growing non-guaranteed display advertising mark et where again user visits are sold via real-time auctions. This has been mainly fueled by the appearance of so-called Ad Exchanges that conduct the real-time auction in exchange for transaction fees. We refer the reader to [1] for more details . Research work related to the design of real-time auctions fo r non-guaranteed display advertising has only recently star ted to appear in literature. We refer the reader to [9] for an overview of open research problems in this area.

A combinatorial auction is another mechanism that is ap-pealing when the seller has a large number of goods and buy-ers show interest in overlapping sets of products. We refer the reader to [5] for a survey of work related to combinato-rial auctions. We note that since guaranteed contracts are sold to advertisers at different points in time, for any aucti on mechanism to be successful, we would need to set appropri-ate reserve prices. However, in order to set reserve prices that maximize the revenue for the publisher, we would need to estimate the revenue that the publisher could make from the future demand for user visits. In order to do this, we would need to either estimate the self-and cross-elasticit ies for all possible product combinations (which is impractica l) or at least, generate an estimate of the market value of the user visits that the current contract is asking for. Clearly, we would need to use an algorithm like WAP or MIN-VAR in order to do the latter. It is also worth noting that even if we are able to set good reserve prices, solving the allocation problem for such a large number of overlapping products is non-trivial. [13] addresses this issue by grouping user visit attributes to reduce the size of the allocation problem whil e minimizing the revenue loss due to the grouping.

Finally, [8] considers the problem of providing bid guid-ance in an online marketplace where advertisers and publish -ers negotiate on the prices of contracts for offline print medi a. However, the methods presented in this article do not direct ly apply to the guaranteed display marketplace for multiple re a-sons. Most significantly, in this article it is the market run-ner who provides guidance to the advertisers on good starting bids in an effort to reduce the information asymmetry present in the market. Thus, the bid guidance here is intended not to maximize the utility for either party, but to make the market-place more efficient. Further, since the targeting capabilit ies of online print media are very limited, the product space is many orders of magnitude smaller than that for online media.
In this paper, we proposed a new approach to pricing guar-anteed display advertising contracts, which is pricing bas ed on the user visits that will be delivered to the contract. We proposed two alternative algorithms  X  WAP and MIN-VAR  X  based on this approach. We also implemented and evalu-ated both these algorithms using historical guaranteed con -tracts booked against the content portfolio a prominent Web content publisher. Our results show that WAP outperforms MIN-VAR due to its increased resilience to outlier prices. Perhaps more surprisingly, our results also show that WAP is often a better predictor of the final negotiated price for his -torical contracts than even the initial historical price, w hich was used as a starting point for the negotiations!
As part of future work, we are exploring the use of online bucket tests to derive metrics that are not inherently biase d towards the current pricing algorithm. Another promising direction for future work is to investigate the use of signal s besides user visits, such as seasonality and macro-economic factors, which might influence the price of a contract. [1] Right media : http://www.rightmedia.com/ . More info [2] S. Berry, J. Leveison, and A. Pakes. Automobile prices [3] D. P. Bertsekas. Nonlinear Programming . Athena [4] A. Boyd and I. Bilegan. Revenue management and [5] P. Cramton, Y. Shoham, and R. Steinberg, editors. [6] B. Edelman, M. Ostrovsky, and M. Schwarz. Internet [7] G. Gowrisankaran and M. Rysman. Dynamics of [8] A. I. Juda, S. Muthukrishnan, and A. Rastogi. Pricing [9] S. Muthukrishnan. Ad exchanges : Research issues (to [10] A. Nevo. Measuring market power in the ready-to-eat [11] K. Talluri and G. van Ryzin. The Theory and Practice [12] H. Varian. Position auctions. International Journal of [13] W. E. Walsh, C. Boutilier, T. Sandholm, R. Shields,
