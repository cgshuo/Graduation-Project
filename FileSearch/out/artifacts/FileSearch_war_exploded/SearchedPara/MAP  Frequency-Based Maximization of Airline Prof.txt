 Though there are numerous traditional models to predict market share and demand along airline routes, the prediction of existing models is not precise enough and, to the best of our knowledge, there is no use of data-mining based forecasting techniques to im-prove airline profitability. We propose the MAP (Maximizing Air-line Profits) architecture designed to help airlines and make two key contributions in airline market share and route demand prediction and prediction-based airline profit optimization . Compared with past methods to forecast market share and demand along airline routes, we introduce a novel Ensemble Forecasting (MAP-EF) ap-proach considering two new classes of features: (i) features derived from clusters of similar routes, and (ii) features based on equilib-rium pricing. We show that MAP-EF achieves much better Pearson Correlation Coefficients (over 0.95 vs. 0.82 for market share, 0.98 vs. 0.77 for demand) and R 2 -values compared with three state-of-the-art works for forecasting market share and demand, while showing much lower variance. Using the results of MAP-EF, we develop MAP-Bilevel Branch and Bound (MAP-BBB) and MAP-Greedy (MAP-G) algorithms to optimally allocate flight frequen-cies over multiple routes, to maximize an airline X  X  profit. Experi-mental results show that airlines can increase profits by a signifi-cant margin. All experiments were conducted with data aggregated from four sources: US Bureau of Transportation Statistics (BTS), US Bureau of Economic Analysis (BEA), the National Transporta-tion Safety Board (NTSB), and the US Census Bureau (CB). Ensemble Prediction; Regression; Airline Demand and Market Share Prediction; Airline Profit Maximization;
Since the deregulation of US airlines in 1978, there has been intense competition amongst airlines for market share and, eventu-ally, profitability. While there is considerable work on predicting market share and demand along airline routes, the prediction of ex-isting models is not precise enough and, to the best of our knowl-edge, there is no use of data-mining based forecasting techniques to improve airline profitability. In this paper, we formally define the MAP problem by allowing airlines to decide the flight frequencies on their flying routes in order to maximize their profits, subject to cost constraints. For instance, if there is a set R of routes in the world, and the airline can fly up to n routes where n  X  |R| , then our MAP problem would capture both route selection (which routes to fly) and frequency 1 .

The first key contribution of this paper is a precise route-specific prediction of both total demand of an origin-destination market and an airline X  X  market share. Existing related works only use simple regression methods and focus on a limited number of variables. Our studies of three major route market share [16, 24, 26] and demand prediction [6, 8, 9] methods show that the Pearson Correlation Co-efficients between the predicted values and the actual values are a max of 0.82 (for one market share method) and 0.77 (for one de-mand model). Other existing models predict much lower numbers. Although one of these regression methods [16] outputs satisfactory prediction results in our experiments, there is still a gap between the prediction and the real value. The relatively  X  X mall X  predic-tion gap can lead to a huge revenue loss if airlines make decisions based on the prediction. Worse still, due to the inflexibility of ex-isting models, the prediction gap can be large for some routes. We propose a new ensemble-based prediction method for forecasting total demand and market share, which uses an extensive number of features and several state-of-the-art clustering and regression algo-rithms that have never been adopted for MAP. The new ensemble method builds upon existing models, but also collects several new features, together with novel clustering and game theoretic meth-ods. We are the first to propose a prediction method, for a broad set of routes (around 700 -past works stopped at 200), which considers the predictions of both total demand (demand generation) of a route and market share (demand allocation) of each airline operating in that route (13 airlines in total).
 The second key contribution is two novel algorithms for solving MAP, which becomes computationally intractable with brute-force search when the number of routes is large. This is because: 1) the solution space is exponential w.r.t. the number of routes, 2) the profit-frequency function, which is generated by our proposed pre-diction method, is neither convex nor concave (and thus not linear). We show in Section 2 that MAP belongs to the hardest subclass of Knapsack Problems (KPs) and Resource Allocation Problems (RAPs), and despite a vast amount of existing works [11, 12, 20, 21] for both KPs and RAPs, all previous algorithms fail to solve it
Because the airline industry is very complex, it is difficult to model all other sources of profit that might be available (e.g., in-flight sales, baggage fees, etc.) to the airline, especially as such data is not freely available. efficiently. Based on predictions made by MAP-EF, we come up with two optimization algorithms to solve the raised profit maxi-mization problem. We present an exact algorithm to solve MAP based on a novel Bilevel-Branch and Bound approach (MAP-BBB) that computes the true optimal solution, as well as a Greedy algo-rithm (MAP-G) that more quickly computes suboptimal solutions.
Third, we conduct extensive experimental evaluations to com-pare MAP X  X  prediction results with those of past works. We show that past prediction models are significantly  X  X eaten X  by MAP, which increases these predictive accuracies to over 0.95, while signifi-cantly reducing the variance in our prediction error compared with past works. We also compare both the optimality and scalability of our proposed profit maximization algorithms with several bench-marks. The result shows that our predictions are far superior to past efforts. Moreover, by using MAP, an airline can averagely increase its profit by at least 55% under mild conditions. 2
The rest of this paper is organized as follows. Section 2 intro-duces related works. Section 3 discusses the data set used in our study. Section 4 shows our proposed prediction framework based on our ensemble method. Section 5 presents our proposed algo-rithms for the profit maximization problem. Section 6 conducts extensive experimental evaluations. For notational convenience, Table 1 summarizes all the notations used in this paper .
Existing airline market share and demand prediction models try to write down math formulas for market share/demand and then use regression to find values of the parameters in these formulas that minimize the sum of the squared errors between the predicted values and the true values. We therefore call these math models to indicate that the structural form of these models is written down a priori without reference to any data and that the parameter values that minimize error are then computed using available data. Airline market share prediction. Most works on airline market share prediction use a multinomial logit (MNL) regression model [16, 24, 26]. For a set A of airlines in a given route, an airline A market share m i is modeled as: Here V i = P k  X  k X ik is the customer X  X  utility for choosing airline A  X  X  service, X ik is the value of the k th variable for airline A and  X  k is its corresponding weight to be learnt from data. Various variables have been studied. In Market1 [16], the authors consider a route X  X  price, frequency, and the number of stops. Based on the prediction, they analyze competition among airlines. Market2 [24] considers an airline X  X  frequency, delay, and safety. Market3 [26] studies the effect of aircraft size and seat availability on market share and considers other variables such as price and frequency. Total demand prediction. For total demand of a route, a multi-plicative [6, 8, 9] regression model is the most frequently adopted. Formally, a route X  X  total demand is represented as: where Y k is a value of the k th variable and  X  k is a parameter to be learnt from data which measures the importance of Y k . Demand1
Like all past models, our analysis of airline profits is only based on publicly available data, so the true number might be smaller. Nevertheless, even a 10% improvement in the real-world would be substantial.
 [6] considers wealth related variables such as price, income and CPI (consumer price index). Demand2 [9] studies the influence of demographic variables such as price, income and population, as well as hub status (i.e., large, medium, small or non-hub) on pas-senger demand. Demand3 [8] focuses on variables such as price, income, population and origin-destination distance.

In this paper, we show that our prediction models build on all of these methods, but use an ensemble approach to achieve not only much higher predictive accuracy, but also much greater robustness. KPs and RAPs. Airline profit maximization through optimal fre-quency allocation over multiple routes, given a certain budget con-straint, belongs to the family of KPs and RAPs, which have been extensively studied ever since the work of Dantzig [13] in 1957. While all variants of KPs are known to be NP-hard , MAP, which has bounded integer variables, and a non-concave (arbitrary) objec-tive function, is notoriously hard [11].

There are some Polynomial Time Approximate Schemes (PTAS) and even Fully-PTAS to solve bounded knapsack problems (BKPs), using greedy algorithms [17], dynamic programming [21] and branch and bound [19]. The first two methods assume linear objective functions, while the last approach uses linear relaxation. Several algorithms have been proposed to solve KPs/RAPs with non-linear objective functions, especially for a concave and non-decreasing Figure 1: Quarterly revenue (dashed lines) and profit (solid lines) in 10 million dollars generated by MAP-EF. Revenue is defined as average ticket price multiplied by the number of passengers. Cost is per flight cost multiplied by frequency. Note that the profit-frequency curve (revenue minus cost) is very irregular even though the revenue-frequency curve is monotonically increasing. The shapes of the curves are quite different. objective function [11]. The common idea is to decompose the original objective function into a set of approximated piecewise lin-ear functions. Unfortunately, none of these works for our problem. This is because the profit-frequency function in our problem is nei-ther concave nor convex (thus not linear), varies from one route to another, and cannot be described by a simple math formula but by a series of clustering, regression, and other types of functions shown in Figure 1 where the x-axis is the frequency and the y-axis is the profit (or revenue), the two graphs are for two routes (SFO-LAX route on the left and JFK-LAX route on the right) and 4 major US airlines. We see that the shapes of the curve on the left (SFO-LAX) is quite different from another on the right (JFK-LAX). In fact, across the 700 routes we studied, there was huge variation in the actual profit/revenue curves. Thus, any method specially de-vised for a certain form of objective functions (e.g., linear, concave or convex) cannot be applied.
 Optimal decision making based on data-mining. Data-mining based optimization has been implemented by many existing KDD papers, including optimal bidding [28, 29], smart pacing [27] and optimal recommendation systems [18]. In the first step of these works, a predicted objective function is learned using regression analysis techniques. Based on the prediction results, an optimiza-tion problem is solved, either analytically [18, 28] or via optimiza-tion algorithms [27, 29]. While our MAP framework follows this general scheme, it differs in many ways, including the fact that the predicted objective function is in a very complicated linear algebra form.
We have created an integrated  X  X AP X  data set by aggregating in-formation from 4 publicly available data sources, viz. the Bureau of Transportation Statistics (BTS) [3], the Bureau of Economic Anal-ysis (BEA) [2], the National Transportation Safety Board (NTSB) [4], and the U.S. Census Bureau (Census) [5]. BTS provides almost all aspects of airline market information such as ticket price quency, number of stops, delay records, aircraft size and available seats. The BEA and the Census release regional income, eco-nomic state, and population information while the NTSB provides all safety and accident related information. The BTS provides a quarterly dataset. A detailed description of the variables we con-sider is presented in Table 2. We plan to publicly release our tools
We will revisit this point after Definition 5.2.
BTS releases a 10% sample of route and airline specific ticket sales logs, from which average ticket price is obtained. Figure 2: Structure of the MAP-EF prediction model. Rectangles mean data and elipses algorithms. Each algorithm is marked with a processing sequence number. Solid lines mean inputs and dashed lines outputs. and data set in 2016. Our training data includes 10 years (40 quar-ters) of data on 13 airlines and 700 routes. Our validation data in-cludes one quarter (all 700 routes and 13 airlines X  market share and profits are predicted, leading to a total 9100 predictions in total). This is consistent with most corporate forecasts where forecasts are made for the next quarter 5 .
 Table 2: Variables used to make predictions by related works
In this section, we design an ensemble-based predictor MAP-EF that produces highly accurate route-specific predictions. Overall architecture. Figure 2 shows the architecture of our en-semble model which runs through 4 major steps.
 Step 1 -Past Models with Regularization. In the first step, we use the MAP-dataset, in conjunction with existing market share mod-els ( Market1 [16], Market2 [24], Market3 [26]) and demand models ( Demand1 [6], Demand2 [9], Demand3 [8]) in order to generate the predictions made by models developed previously in the literature. These predictions are used as additional features. In addition, we augment past models with regularization [10]. 6 Because this step
These predictions exceed that of related work, e.g., [26], which predicted for 10 airlines with a 10 year history for 200 routes.
In past works for market share prediction, the authors minimize sum-squared-error (SSE), i.e. they try to find parameter values for the math models that minimize  X  A i ( m i  X   X  m i ) 2 where m  X  m ) is the true (resp. predicted) market share. In addition to this, regularization minimizes P A is straightforwardly built on top of past works, we do not go into it in further detail.
 Step 2 -Nash Equilibrium. Ticket pricing clearly influences both market share and demand. At the same time, the competitive pric-ing behavior among airlines would have further influence. Thus, we include equilibrium pricing calculated based on past models as an additional feature in MAP-EF . At the end of this step, each route has one feature table for market share prediction and another for demand prediction. Each table 7 includes a set of features collected from the MAP-dataset and from Steps 1 and 2.
 Step 3 -Clustering of Similar Routes. We cluster all routes into groups of similar routes with the features of the quarter we predict. For each group of routes, we concatenate all the individual route tables constructed in Step 2 for all routes in that group. The merged tables are then used for training within MAP-EF . We describe this step in further detail.
 Step 4 -Iterative Gaussian Process Regression (GPR) and Random Sample Consensus (RANSAC). At the end of Step 3, we have a comprehensive MAP Feature Table . We use a combination of the well-known methods of GPR [22] and RANSAC [15]. To make market share/demand predictions for a route R , this step trains only on data about the group that contains route R , removes outliers using RANSAC, and then uses GPR to make the final prediction. Nash equilibrium price feature. In a competitive airline market, the pricing behaviors of airlines are strategic. To capture the com-petitive nature of the market, we include equilibrium price as an additional feature 8 . The rationale behind this is that when an air-line X  X  quoted price is higher/lower than its equilibrium price, the customer might lose/gain utility, which has influence on the cus-tomer X  X  choice and thus further affects an airline X  X  market share. Therefore, we use the gap between equilibrium price and real price as an additional feature. The utility (net income) N ( A line A i w.r.t. a specific route is N ( A i ) = ( p i  X  c p is the ticket price and c psg i is the passenger-related per ticket cost obtained from the BTS dataset. d and m i are a route X  X  total demand and airline A i  X  X  market share as described in Section 2. Recall that Nash equilibrium is an equilibrium situation in a multi-player non-cooperative game, where each player is assumed to know the equi-librium strategies of the other players, and no player has anything to gain by changing only its own strategy. Following this definition, we formulate the computation of Nash equilibrium strategy of each airline A i  X  X  w.r.t. a given route: Eq.(4) specifies the feasible section of price, and Eq.(5) indicates that the total number of passengers cannot exceed its capacity Q vector that consists of parameters  X  k (or  X  k for demand prediction) and || W || is the norm of W . || W || can be defined using either the L 1 or L 2 norm. Thus, we have three options: SSE, SSE+ L 1 larization, and SSE+ L 2 regularization. In order to decide the best model among these, we use grid search and cross-validation. For cross-validation, we predict a quarter of the training data after train-ing with the remaining quarters regardless of temporal sequence, which creates n -fold cross validation, where n is the number of quarters in the training data.
Please refer to the Appendix [1] for detailed examples of the merged table.
Note that when computing the equilibrium price, the market share and total demand is the math formula obtained in Step 1, and the competition is only within a route.

Algorithm 1: ITER
Randomly assign values to p t  X  1 within [ p min i ,p max repeat 3 for A i  X  X  do 4 counter  X  0 5 p i,t  X  Solution of Eqs.(3)-(5) 6 if | p i,t  X  p i,t  X  1 | X   X  then counter + + until counter = n return p t To compute equilibrium price on a route, we propose ITER (Iter-ative meThod for nash EquilibRium computation) in Algorithm 1, where p t  X  1 and p t denote the optimal price vectors of two subse-quent  X  X irtual X  periods. The algorithm starts with an initialization imum and maximum possible prices quoted by airline A i . After this, iteration proceeds. In each repeat loop (Lines 2-9), the algo-rithm updates optimal prices of all the airlines. Within each repeat loop, there is a for loop (Lines 3-7). In the for loop, each airline al-ternately updates its optimal price p i,t based on the previous price vector p  X  i,t  X  1 of the other airlines in the last virtual period. It it-erates until for each airline A i  X  A , the price is not updating in two subsequent virtual periods (i.e., the difference between the two prices is no larger than a small threshold | p i,t  X  p i,t  X  1 means a Nash equilibrium is obtained.

T HEOREM 4.1. If ITER returns a solution, then that solution is the Nash equilibrium price.

Proof sketch. In each repeat loop, ITER finds the best response of all players (airlines) given the strategies of the last virtual pe-riod. When the best response strategies of all players in the current virtual period are equal to the best response strategies of the last virtual period, a Nash equilibrium is found according to the defini-tion of Nash equilibrium.
 Clustering similar routes. Some routes are more similar than oth-ers, e.g., LAX-JFK may show more similar market attributes to SFO-JFK than LAX-SFO because the first two are long-haul routes from west to east and the last one is a short-haul local route, and estimating market share/demand would probably benefit from ex-amining all of similar routes. In order to cluster routes, we use all features gathered in the MAP-dataset, Steps 1 and 2. As we do not know the  X  X round truth X  definition of whether a cluster is correct or not, we evaluate cluster quality via silhouette score 9 silhouette score tends to keep increasing (with some glitches) as the number of clusters increases. The elbow method [25] chooses the optimal number of clusters when silhouette scores stabilize. We tested several clustering methods including K-Means ++ connectivity-based and density-based clustering algorithms such as DBSCAN [14]. Of these, we achieved the best result with K-Means ++ .
 RANSAC/GPR regression. Training with similar routes does not always contribute positively to predictive accuracy. In several cases,
The silhouette score is to calculate the consistency of clusters. As more similar routes are contained by a cluster, its silhouette score is higher. If G is a set of clusters, dis is some distance (dissimilarity) measure, and e is some data item, the silhouette score SS ( e ) = the data items of the cluster it belongs to, and b ( e ) is the minimum average distance between e and the data items of clusters it does not belong to. it incurs additional error. We tested many linear regression algo-rithms such as Ridge, Lasso, and Lars [10]. None of them could produce stable performance across multiple routes. We then tested a specially devised structure that consists of RANSAC and GPR. RANSAC removes outliers from training data and GPR makes the final prediction only with inliers. GPR is known to be robust be-cause it is much less parametric than the others. Intuitively, GPR says that if features of two airlines are similar, their market shares should also be similar. It assumes that priors follow a Gaussian distribution. After that, GPR also calculates posteriors using the famous bayes rule, P ( posterior )  X  P ( likelihood ) P ( prior ) that can be analytically calculated using a covariance matrix fitted to the training data. To predict, GPR, using the learned covariance matrix, calculates similarities between a test case and all training cases, and makes a prediction. The entire process can be described by a very complicated linear algebra form. RANSAC Regression is known to be robust w.r.t. noise. In the first step, RANSAC per-forms regression with a small random subset of training data. In the second step, all training data that does not fit the model con-structed during the first step is classified as outliers and others as inliers. These two processes are iterated over time to refine the set of inliers called the consensus set . Thus, MAP-EF uses RANSAC with GPR as a base estimator. We show prediction results of other regression techniques in the Appendix [1].
 Time Overheads. In comparison with past models, MAP-EF should spend additional time for clustering and more advanced regression methods, which takes cubic time of training data size.
In this section, we suggest how to maximize an airline X  X  profit by optimally allocating quarterly frequencies to routes.

D EFINITION 5.1 (F REQUENCY S TRATEGY ). A frequency strat-egy of an airline A for a given set R = { R 1 ,...,R n } of routes is a vector  X  f i  X  of non-negative integers.
 Intuitively, the i  X  X h element f i of the frequency strategy denotes the number of times the airline should fly route R i in a quarter. For a given airline A , a set R = { R 1 ,...,R n } , per flight cost C each route R i , and total operation budget b , the profit maximiza-tion problem finds the frequency allocation  X  f i  X  of A assuming its competitors X  behaviors are fixed. We also conduct experiments to test the robustness of this approach when competitors change their strategies simultaneously.
 D EFINITION 5.2. The Frequency-based Profit Maximization Problem can be encoded as the optimization problem: N ( f i ) is the profit of route R i given frequency f i , which is ticket revenue r i ( f i ) minus total operation cost C i f i and can be calcu-lated by the market share and total demand predicted by MAP-EF . The ticket revenue is defined as price per ticket multiplied by air-line A  X  X  total passenger demand on route R i . P R the sum of profits for all routes. Because routes (such as the SFO-LAX and JFK-LAX routes shown in Figure 1) can differ dramati-cally in profitability, and as these numbers are basically estimated by our market share and demand prediction algorithms, it follows that the individual terms N i ( f i ) in our objective function can vary dramatically in form from one route to another. This is what makes using a single form of objective function difficult. Constraint (7) specifies the bound of frequency for each route as f max i the frequencies are non-negative integers. The frequency bound f i = min( b b C i c ,f BTS ) , where f BTS is the maximum fre-quency discovered in the BTS dataset, so that we prevent f exceeding the feasible frequency bound. Constraint (8) indicates the budget constraint. As discussed in Section 2, this optimiza-tion problem belongs to the hardest class of KPs and RAPs, mainly due to two reasons: i) the solution space is exponentially large as  X  f max i , and ii) the objective function is neither convex nor con-cave (thus not linear).

Before presenting the complexity analysis and the algorithms to solve MAP, we introduce two important assumptions. First, we as-sume that varying the frequency of a route does not affect other routes X  total demand and market share  X  Independence of Routes . This assumption is valid for most cases where the passenger X  X  trav-eling pattern on one route is independent of the other routes. Sec-ond, we assume revenue (resp. cost) is a monotonically increasing non-linear (resp. linear) function of frequency  X  Monotonicity of Revenue and Cost . As shown in Figure 1, this assumption is intu-itive. Increasing frequency leads to larger market share (thus higher revenue) and higher operation cost. Therefore, the monotonicity of revenue and cost does not imply the monotonicity of profit. This prevents us from applying many well-developed algorithms for KPs and RAPs. We show the computational hardness of the MAP prob-lem with the following theorem.

T HEOREM 5.3. The decision version of MAP (D-MAP) which answers the question  X  X s there a frequency strategy whose profit ex-ceeds a threshold P without violating budget b ? X  is NP-complete.
Proof sketch. We first show that there is a polynomial reduction from the Knapsack problem to D-MAP. In the Knapsack problem, there are n items (each has p i profit and w i cost), budget limit W , a threshold V , and the objective is to find a set of items whose profit is no smaller than V without violating budget W . This a special instance of D-MAP where b = W , P = V , C i = w i and the profit-frequency function of route R i is linear with the slope of p the reduction from the Knapsack problem to profit maximization can be done in polynomial time.
 Next, we show its correctness, i.e., Y is a yes instance of the Knapsack problem  X  X  X  X reduced from Y is a yes instance for D-MAP.  X  X f X  direction. Assume that there exists a solution s for a Knapsack problem instance. We can create a frequency strategy  X  f f is the number of i th item in the solution s . s can achieve a profit of at least V without violating budget W , and so is  X  f i b = W , P = V , C i = w i and the same linear profit function.  X  X nly if X  direction. Assume that a frequency strategy  X  f achieve a profit of at least P without violating budget b . We can create a Knapsack solution s to select f i items for i th valid solution of the Knapsack problem because b = W , P = V , C i = w i and the same linear profit function.

Finally, D-MAP is in NP because the verification process to check whether a frequency strategy X  X  profit exceeds a threshold re-quires |R| oracle queries. Note that each oracle query takes a con-stant time for a given route and airline. Thus, the verification pro-cess takes polynomial time.
Due to the computational complexity, it is intractable to find an optimal solution of the MAP problem by performing brute-force search. As a result, we propose two new approaches: i) MAP-BBB is a bi-level branch and bound method, and ii) MAP-G is a greedy algorithm operating over groups of routes. Section 6 shows that these two algorithms have complementary performance in terms of runtime (scalability) and optimality.
Branch and bound (BB) is a popular search algorithm for com-binatorial optimization to efficiently enumerate the entire solution space and find the optimal solution. The solution space of BB can be represented by a rooted tree and each child of a parent node considers a subset of solution space of its parent node. BB con-sists of a series of repeated branching and bounding processes. In the branching process, the feasible solution space is divided into a number of smaller subsets, while in the bounding process, an upper and a lower bound of the objective (airline profit in this problem) is derived for each subset of solution space. The largest lower bound is updated and, when the upper bound of a certain subset is smaller than the current largest lower bound, that subset is pruned since it does not contain the optimal solution. As we can see, the key of BB lies in finding a tight upper and lower bound for the bound-ing process, especially for upper bound. While most of the BB algorithms for Knapsack problems find upper bounds through lin-ear relaxation [19], the complicated form of our prediction model prevents us from implementing such upper bounds. As a result, we propose a novel Bilevel branch and bound (MAP-BBB) algorithm, which uses another sub-BB search to find an upper bound for the main BB process.

Algorithm 2 shows the MAP-BBB algorithm that builds on clas-sical branch and bound methods. The search for an optimal so-lution explores a tree whose nodes are labeled with n intervals, one for each of the routes R 1 ,...,R n under consideration. Intu-itively, if a node is labeled with the interval [ `,u ] for a particular route R i , it means that we are currently restricting the frequency in the interval [ `,u ] for that route. MAP-BBB also maintains a priority queue Q of all the nodes where the head has the largest upper bound profit. The root node has the full range of [0 ,f for each route R i  X  X  . As we descend the tree, these intervals get smaller. In Figure 3, for example, the parent node n p is divided into two children nodes c l and c r , where the frequency range of the last route of n p is divided into two halves.

For the bounding process of child node c  X  { c l ,c r } , upper and lower bound profits of the optimal strategy that can be defined with the frequency range of c are calculated (to be further described be-low). If its lower bound LB c is larger than the temporary maxi-mum lower bound, denoted as MaxLB in Algorithm 2, and its lower bound cost C c of the optimal strategy does not violate the budget b , then we update MaxLB (line 11). If its upper bound UB larger than MaxLB or its lower bound cost C c violates budget b , we prune this node (line 12). Once we find a node that consists of only non-divisible ranges, i.e., min and max of ranges are all the same, and its cost is within budget b , it is a candidate of the optimal frequency strategy. The optimal strategy is selected among them (line 13). N  X  and  X  f  X  i  X  stand for the obtained optimal profit and optimal frequency strategy, respectively.
 Lower bound profit and lower bound cost. Calculating a lower bound of profit LB c and cost C c of node c is a key to the MAP-BBB algorithm. We choose the min frequency value for each route X  X  range and calculate its lower bound profit and cost with MAP-EF . This is valid because the optimal profit and the associ-ated cost of node c are always no smaller than that.
Frequency section of route 3 is divided into two halves Figure 3: An example branch and bound process for MAP-BBB with three routes. Each blue bar of node represents a frequency range. Lower BB is used to calculate an upper bound profit of a node. c l and c r are two children of the parent node n p
Algorithm 2: MAP-Bilevel Branch and Bound (MAP-BBB)
N  X   X  0 ,  X  f  X  i  X  X  X  0
Create root
MaxLB  X  LB root
PriorityQueue Q  X  X  X 
Q.enque ( root ) while | Q | &gt; 0 do 7 n p  X  Q.poll () 8 if n p is divisible then 9 Create c l ,c r 10 for c  X  X  c l ,c r } do 11 if LB c &gt; MaxLB and C c  X  b then MaxLB  X  LB c 12 if UB c  X  MaxLB and C c  X  b then Q.enque ( c ) 13 else if N  X  &lt; N ( n p ) and C n p  X  b then 15  X  f  X  i  X  X  X  frequency strategy of n p return  X  f  X  i  X  ,N  X  Upper bound. As we cannot employ linear relaxation, upper bound calculation is more challenging. For this, we use another branch and bound process, which is why the proposed algorithm is called a bilevel branch and bound . For each range of R i in node c , we per-form the following sub branch and bound process to find its optimal frequency within the range without a budget constraint . This is good because the optimal profit without budget limit is definitely no smaller than the optimal profit with budget constraint and it is much faster than the upper bound with budget check across multi-ple routes. We omit its pseudo code because it is more or less the same as Algorithm 2 except that the sub branch and bound does not check budget violation. In order to distinguish two branch and bounds, we use different terms sub and main . The sub root node is initialized with the specified range of R i . During the sub branching process, we equally divide a sub node interval into two halves and create two sub children nodes. In the sub bounding process of a sub node, the heuristic for computing a lower bound of the sub branch and bound is defined as r i ( f random )  X  C i f random , where f is a random frequency in the frequency range. This holds since any feasible frequency generates a lower bound of the optimal profit. The heuristic for computing an upper bound of the sub branch and bound is r i ( f max )  X  C i f min , where f max and f min imum and minimum frequency of the sub node, which utilizes the monotonicity of revenue and cost. The sum of maximum profits calculated for each route with the sub branch-and-bound without budget constraint is always no smaller than that with a budget, thus sub branch-and-bound provides an upper bound profit of the main node. With the lower and upper bounds derived above, MAP-BBB eliminates only non-optimal frequency strategies of routes, which proves correctness and optimality of MAP-BBB. We show the best-case complexity analysis of MAP-BBB:
T HEOREM 5.4. The best-case runtime complexity of MAP-BBB is O ((log(max { f max i } )) 2  X  n ) , where n is the number of routes.
Proof sketch. The best-case complexity of the bi-level branch and bound algorithm happens when in each branch and bound process, one of the children nodes is pruned. For each route R i , its max-imum frequency is f max i and it takes log( f max i ) branches until the frequency in this route is nondivisible; for all routes, it takes max { f max i }  X  n time. While for each branch it needs at least O (log(max { f max i } )) time to solve one sub branch and bound. Thus, the total complexity is O ((log(max { f max i } )) 2 The worst-case complexity happens when there is no pruning in each branch and bound process. however, the experimental results in Section 6 show that this never happens and the average runtime of MAP-BBB is promising. As MAP is NP-hard, it is clear that the exact algorithm MAP-BBB may not be scalable. In this section, we propose a greedy al-gorithm to solve MAP more efficiently while sacrificing optimality. A naive greedy algorithm is to increase the frequency of the route with the largest marginal profit/cost ratio (PCR) which is known to work very well for conventional knapsack problems. However, unlike conventional knapsack problems where PCR is fixed (i.e., linear objective function), the PCR in our problem fluctuates as can be seen from the example in Figure 4. According to our experi-ments, this naive greedy approach on average achieves only 0.66 of the optimal profit.
 To address the fluctuating PCRs, we suggest an improved  X  X roup-Greedy X  algorithm (MAP-G). The basic idea of MAP-G is that, instead of greedily raising the frequency of a single route with the largest PCR, MAP-G first divides routes into groups, and then com-pares the PCRs of different groups and raises frequencies of the group of routes with the largest PCR. As shown in Algorithm 3, it randomly divides n routes into b n q c groups (line 2), each consist-ing of q routes 10 . Initially, each group is assigned small budget  X  (line 3) and we independently solve MAP within each group, using exact algorithms such as MAP-BBB as a sub-routine (line 6). We merge all groups X  most recent frequency strategy to create a com-plete frequency strategy of all routes (line 8), and its profit is com-pared with the temporary maximum profit (line 10). The budget of the group that creates the largest marginal profit density is in-creased by  X  (line 9). This process iterates until the sum of groups X  budgets equals to the total budget b . This method is robust w.r.t. the fluctuating PCR because we calculate the optimal strategy for each group in each iteration. On the other hand, calculating op-timal frequency strategy for a group of routes is much faster than that of all routes because the solution space is much smaller. We set  X  = b  X  1 h , where h &gt; 1 is an integer. The quality of the solution increases as q increases  X  if q = n and h = 1 , it finds the optimal
The actual number of routes in a group may slightly vary due to the floor operation.

Algorithm 3: MAP-G
N  X   X  0 ,  X  f  X  i  X  X  X  0
G  X  divide R into b n k c groups b g  X   X ,  X  g  X  X  ; 5 for g  X  X  do 6  X  f  X  g  X  X  X  solve MAP of g with budget b g 7 g  X   X  the best PCR group 8  X  f i  X  X  X  merge ( { X  f  X  g  X  X  g  X  X } ) 10 if N  X  &lt; N (  X  f i  X  ) then  X  f  X  i  X  X  X  X  f i  X  return  X  f  X  i  X  ,N  X  Figure 4: Best Profit-Cost Ratio among all routes in each iteration of the naive greedy Knapsack algorithm. solution. The benefit of a small q is the short runtime, while sac-rificing optimality. By adjusting q , MAP-G can trade-off between runtime and optimality.
In this section, we first compare MAP-EF with several bench-mark methods for both route demand and airline market share pre-diction. We then show the improvement of the optimal profit ob-tained based on MAP-EF prediction compared with that based on traditional methods. Last, we compare both scalability and opti-mality of our proposed algorithms with several benchmarks.
For route-specific predictions, we selected the 700 largest routes in terms of the number of passengers. We predicted market share and total demand for the first quarter of 2015, the most recent pe-riod for which all data are available, after training with 10 years data. We tested 3 pre-existing prediction models for both market share and total demand as described in Section 2, and our proposed method MAP-EF .
 For each route, we evaluated with the following three criteria: i) Correlation Coefficient (CC), ii) R 2 , and iii) Mean Absolute Error (MAE) divided by the maximum market share value of a route or divided by true total demand value. These two metrics are much stricter than pure MAE values. A good predictor will perform well under all three metrics. Market Share. Table 3 (resp. Table 4) summarizes mean val-ues (resp. variances) of the three metrics for all routes (All) and for routes with 4 or more operating airlines ( |A|  X  4 )  X  as the number of airlines increases, predictions become more challeng-ing. Among existing models, Market1 shows the best performance. Its CC of 0.82 is quite reasonable with low variance around 0.18, but its poor R 2 of  X  0 . 84 indicates some issues. Two metrics re-vealing contradictory results indicates that the rise/decline of the predicted values may have high error. Thus, Market1 can tell us which airline has larger market share than another, but its absolute market share value is not reliable. Profit optimization based on the best competitor, Market1 , does not make sense because even a small error in predicting market share may lead to a high loss in profit. As shown in Table 3, MAP-EF shows very stable performance in terms of both mean and variance for all metrics, especially when |A| X  4 .
 Table 3: Mean values of CC, R 2 and MAE/Max for market share predictions.  X  indicates that larger values are preferred and vice versa. The best method is highlighted in yellow.
 Table 4: Variance of CC, R 2 and MAE/Max of Market Share Pre-dictions.
 Total Demand. Whereas route-specific market share prediction is a list (one value for each airline), total demand prediction of a route is a scalar value. Thus, we create two lists, one of true demand and one of predicted demand, and perform CC and R 2 analysis. MAE divided by true demand can be measured for each route and its mean and variance are also summarized in Table 5. Again, MAP-EF shows better performance than all other methods.

All these results indicate that profit maximization should be based on the prediction results of MAP-EF , while  X  X ptimal X  strategies ob-tained with other models are more likely to be far from real optimal strategies. Nevertheless, we note that MAP-EF builds upon other pre-existing prediction models X  findings and hence we build on top of these prior scientists X  work. We performed experiments on a cluster of 64 machines running Linux with 2.4GHz Xeon CPU and 24GB RAMs. We selected six major airlines and calculated the optimal frequency allocation strat-egy for their top K biggest markets (a market means an origin-destination pair, i.e., a route). We retrieved real budget information of routes from the BTS dataset such that budget for a set of routes Table 5: CC, R 2 and MAE divided by true demand of Total De-mand Predictions. Note that the variance of CC and R 2 cannot be defined because it predicts a scalar value for each route. Figure 5: Profit maximization with different prediction methods (relative to MAP-EF ) and 90% confidence interval is shown. is the sum of their real budgets. For the scalability test, we chose compare the proposed MAP-BBB and MAP-G with two bench-mark algorithms, namely N-Greedy (naive greedy algorithm) and DP (dynamic programming). DP is a well-known approach for KPs and RAPS and we refer to Appendix [1] for a detailed description of DP. MAP-BBB is the proposed bilevel branch-and-bound algo-rithm. We used MAP-BBB as subroutine for MAP-G to solve the profit maximization subproblem in each group.
Ground truth is not available for the true maximal profit an airline could possibly make as their actual quarterly profit may not reflect the total profit that they could have maade. In theory, MAP-BBB is guaranteed to produce the maximal profit under the assumptions made in our model . As we see below, MAP-BBB works when the number of markets is relatively small. In order to explore the prof-its obtained using predictions made by pre-existing market share predictors [16, 24, 26], we compare them with the profits obtained using the MAP-EF predictor. We also obtain the optimal frequency allocation strategies using MAP-BBB for K  X  6 based on differ-ent prediction methods, and then calculate the corresponding profit of these strategies using MAP-EF (for larger K , MAP-BBB, as an exact algorithm, takes an inordinate amount of time). As shown in Figure 5, the optimal profit obtained by all existing methods has a gap of around 30% compared with MAP-EF , which is a huge amount considering the scale of profit (typically on the order of millions of dollars per route per quarter).
In this subsection, we first compare several algorithms which are targeted at small K (number of markets) values, such as DP, MAP-BBB, and N-Greedy. Using these algorithms as subroutines, we then tested the performance of MAP-G with large K values. Av-erage optimized profits of airlines and runtime are summarized in Figures 6 and 7.  X  X eal X  stands for the average profit of airlines cal-culated with real frequency strategies in the BTS dataset. Interest-ingly,  X  X eal" shows worse results than even the simple N-Greedy. We see that past market share models can only capture about 75% of the profit generated by MAP-EF . This is a substantial loss in ab-solute dollars.
 Profit and Runtime Analysis for K  X  6 . As we can see from Fig-ure 6 (a), since both DP and MAP-BBB are exact algorithms, their maximum profit values are the same and are the largest. However, DP X  X  runtime, shown in Figure 6 (b), grows exponentially and we could not finish it on time for K  X  4 . N-Greedy cannot achieve a reasonable profit. When K = 2 , it has around 70% of the optimal profit calculated with exact algorithms; as K increases, however, it decreases to only 60%. Before K = 5 , MAP-BBB can find the op-timal profit in a few seconds while DP takes around 10,000 seconds in average. This is due to its pseudo polynomial runtime, which be-haves more like exponential runtime than polynomial time. This in-dicates that MAP-BBB scales really well. The MAP-BBB is more suitable as the subsolver of MAP-G.
 Profit and Runtime Analysis for K  X  5 . Table 6 shows the opti-mality of MAP-G when K = 4 , 5 or 6. The exact maximum profit when K  X  7 cannot be computed as the exact algorithms either run out of memory or take inordinately long. But in cases when K  X  6 , MAP-G achieves 99% of the maximum profit suggesting that it does very well. As expected, MAP-G is robust w.r.t. the problem of fluctuating profit and independent processing of each route from which N-Greedy suffers. Figure 7 (a) shows that MAP-G is consistently better than N-Greedy and N-Greedy obtains only about 70% of MAP-G X  X  profit, suggesting that MAP-G is far supe-rior. We confirm that q = 3 (i.e. groups of similar routes are limited to have 3 routes in them) leads to an increase in profit than when q = 2 for MAP-G  X  in Figure 7 (a), MAP-G with q = 3 is con-sistently better than q = 2  X  which corresponds to our conjecture that optimality will be improved as the size of groups increases. The profit increase from  X  X eal X  to the optimized one is quite Table 6: Profit maximization of MAP-G(BBB) with q = 3 (relative to the optimal profit) when K = 4 , 5 or 6. K is the total number of routes, q is the number of routes allowed in a group. impressive. Airlines can increase their profits by at least 55% by adopting MAP based on our model with available data. But please note that we assume the behaviors of other airlines are fixed, which bustness of MAP, i.e., when the frequency and pricing strategies of other airlines also vary (and not known in advance), how much profit can be achieved by the airline to be optimized.
 Robustness Analysis. In the above experiments, we assume that the frequency allocation and pricing strategies of all other airlines are fixed and known in advance. We now test the robustness of our approach, i.e., we test the airline profits obtained by our ap-proach when the frequency and pricing strategies of other airlines vary. To do this, we randomly varied price (resp. frequency) by a rate in { [  X  20% ,  X  10%) , [  X  10% , 0) , 0 , [0 , 10%) , [10% , 20%] } . We first compute the optimal strategy by assuming that the other airlines X  behaviors are fixed (because they are unknown). We then evaluate this obtained optimal strategy with the prediction model of the changed price and frequency strategies of other airlines. We computed the ratio of the sub-optimal profit (not knowing other air-lines X  price/frequency changes) to the optimal profit (knowing the changed price/frequency strategies of other airlines)  X  in order to calculate the exact optimal profit on time we tested K up to 6. For each frequency and price change rate combination, we generated 30 scenarios with all different random seeds and profits are aver-aged on them. As is shown in Figure 8, this profit ratio is always larger than 0.8, which indicates robustness of our MAP approach even with a 40% fluctuation of both price and frequency. Moreover, it is shown that for a fixed frequency change rate, the profit ratio is almost the same for all price change rates, which means that fre-quency change is more effective in airlines X  competition. Last, the largest ratio happens in the case that competitors increase frequen-cies, which means MAP is more effective at competitive markets. Figure 8: Profits by varying price and frequency of other competi-tors
In this paper, we propose the MAP framework for optimal fre-quency allocation over multiple routes. We make three key con-tributions. i) We design a novel ensemble predictor based on past regression-based work, clustering techniques and game theoretic analysis, which have never been utilized for this purpose; ii) based on the prediction, we design several algorithms to solve the profit maximization problem; iii) we conduct extensive experiments. We show that the prediction performance of MAP-EF is much better than past methods. We also compare runtime and optimality of our proposed optimization algorithms with benchmarks. We also show that MAP increases profitability per route by at least 55% . Even if there are factors we did not consider on the basis of open source data and these numbers are reduced substantially if private airline data was to be used, the increased profitability would still be sub-stantial.

We consider two potential directions for future work. First, our current optimization considers only frequency allocation. In the fu-ture, we may also consider joint-optimization over frequency and pricing. However, the monotonicity property of revenue and cost is not guaranteed with ticket pricing 11 and it is already one of the hardest KPs and RAPs with only frequency being considered. Sec-ond, this paper assumes the behaviors of all other competing air-lines are fixed. When other airlines are also strategic, game theory would be a natural methodology to solve the problem, where in-stead of a single-airline-centric optimization, a Nash equilibrium will be defined.
 This research is supported by the National Research Foundation Singapore under its Interactive Digital Media (IDM) Strategic Re-search Programme. [1] Appendix. http://all-is-well-everyday.weebly.com or [2] Bureau of Economic Analysis. [3] Bureau of Transportation Statistics. [4] National Transportation Safety Board. [5] U.S. Census Bureau. [6] G. Alperovich and Y. Machnes. The role of wealth in the [7] D. Arthur and S. Vassilvitskii. K-Means++: The advantages [8] D. Bhadra and J. Kee. Structure and dynamics of the core us [9] D. Bhadra and M. Wells. Air travel by state its determinants [10] C. M. Bishop. Pattern Recognition and Machine Learning [11] K. M. Bretthauer and B. Shetty. The nonlinear knapsack [12] A. Caprara, H. Kellerer, U. Pferschy, and D. Pisinger.
By decreasing ticket price, market share will increase but revenue may or may not increase due to the change of price. [13] G. B. Dantzig. Discrete-variable extremum problems. [14] M. Ester, H.-P. Kriegel, J. Sander, and X. Xu. A [15] M. A. Fischler and R. C. Bolles. Random sample consensus: [16] M. Hansen. Airline competition in a hub-dominated [17] H. Keller, U. Pferschy, and D. Pisinger. Knapsack problems . [18] W. Lu, S. Ioannidis, S. Bhagat, and L. V. Lakshmanan. [19] S. Martello and P. Toth. Branch-and-bound algorithms for the [20] U. Pferschy. Dynamic programming revisited: Improving [21] D. Pisinger. A minimal algorithm for the bounded knapsack [22] C. Rasmussen and C. Williams. Gaussian Processes for [23] P. J. Rousseeuw. Silhouettes: A graphical aid to the [24] Y. Suzuki. The relationship between on-time performance [25] R. L. Thorndike. Who belongs in the family. Psychometrika , [26] W. Wei and M. Hansen. Impact of aircraft size and seat [27] J. Xu, K.-c. Lee, W. Li, H. Qi, and Q. Lu. Smart pacing for [28] W. Zhang, S. Yuan, and J. Wang. Optimal real-time bidding [29] Y. Zhu, H. Yang, and J. He. Co-clustering based dual
