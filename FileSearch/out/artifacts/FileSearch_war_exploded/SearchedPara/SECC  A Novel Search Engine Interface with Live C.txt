 1 , Jingfei Li 1 , Dawei Song  X  , 1 , 2 Traditional information retrieval systems rank documents according to their relevance to users X  input queries. State of the art commercial search engines (SEs) train ranking mod-els and suggest query refinements by exploiting collective intelligence implicitly using global users X  query logs. How-ever, they do not provide an explicit channel for users to communicate with each other in the search process. By ask-ing or discussing with other users on the fly, a user could find relevant information more conveniently and gain a bet-ter search experience. In this paper, we present a demo of novel Search Engine with a live Chat Channel (SECC). SECC can group users automatically based on their input queries and allow them to communicate with each other in real time through a chat interface.
  X  Information systems  X  Search interfaces;  X  Software and its engineering  X  Software design engineering; Information Retrieval; Search Engine; Collective Intelligence; Chat Channel
Users X  collective intelligence, such as the collective users X  query and interaction history recorded in search logs, has been widely used to support various important features, e.g., query recommendation [1], query completion [3] and web-page ranking [9], etc.

As shown in Figure 1, traditional search engines (TSEs) typically adopt a similar user interface, including a search control, display of search results and related searches. As an example, when a user inputs a query  X  X nformation retrieval X , popular TSEs such as Google, Bing and Baidu, all provide Figure 1: Common functionalities of popular search e ngines. a list of related searches (as query recommendations), illus-trated at the bottom of Figure 1.

The components of query recommendation, query com-pletion and webpage ranking are basic and important func-tionalities provided by the current search engines. These approaches are mostly trained with global query logs, which can be viewed as an implicit form of collective intelligence. Many search applications have utilized query logs to inte-grate the wisdom of other users, but the implicit methods could lead to estimation bias in inferring the user X  X  intent [5].

Current TSEs provide little support to the situations where users want to readily communicate with other people to ask questions, especially when dealing with difficult search tasks. Recent attempts on collaborative search systems such as Co-Fox [4] , CoZapce [6] and SearchTogether [7], tackled this problem to some extent, but most of them focus on the collaboration between small groups of users, e.g., between specific people, colleagues and friends. It can be viewed as a kind of narrow collective intelligence.

In order to exploit global users X  wisdom explicitly, we pro-pose to add a live chat component in search engines to allow a user to request other users X  help conveniently. In this ar-ticle, we present a novel demo Search Engine with dynam-i cally established live Chat Channels (SECC). SECC pro-vides a socialized search function by implementing a user-friendly online chat interface for users who share similar search queries. Compared with TSEs, SECC allows simi-lar users to communicate with each other to discuss about commonly concerned topics or problems. This new function will potentially benefit users X  search experience.
The rest of the paper is organized as follows: In Section 2, we illustrate our motivation. The design and implemen-tation of the demo is introduced in Section 3. Then, we demonstrate the SECC system in Section 4. Finally, Sec-tion 5 concludes the paper and discusses about future work.
In this section, we introduce our motivation from two per-spectives: topology of search engine architecture and usage of collective intelligence. We first summarize the overall dif-ferences of SECC compared with TSE in Table 1.
 Table 1: Comparation between SECC and TSE in t erms of topology and the usage of collective intel-ligence
T ypical user interaction with a TSE can be summarized as follows: after a user submits a query, the SE returns a ranked list of documents to the user. Then, the user clicks on some results without any explicit communication with other people. This is a consequence of the TSE X  X  single-center topology, as shown in Figure 2. In our opinion, TSE has a kind of star-like topology with a single center. All users communicate with the search engine. The feature of star-like topology is that it is easy to add new nodes (new users) into the network, but the failure of the central node will cause a halt of the entire network. If the center fails to provide satisfactory IR services (e.g., query recommenda-tion), the users will be left no other choices to better satisfy their information needs, resulting in a poor user experience.
To address this issue, we propose a novel idea that moves from the single centered structure to a topology with multi-ple centers. To this end, we add a Social Engine to the orig-inal topology. As shown in Figure 3, the multi-center topol-ogy allows users to interact with the system through multiple channels, called chat channels in this paper, through the so-cial engine. As a result, related users can be directly linked and they can instantly communicate with each other during a search session. This would improve the chance that users find desired information when the traditional search engine fails to do so.

In traditional search engines, collective intelligence has already been considered by mining historical and collective user behaviors, e.g., clicking, reading, query changing, etc. For instance, Boldi et al. [1] construct query flow graphs from global query logs to generate query recommendations. Duan et al. [3] propose to correct spelling errors for query completion based on the distribution of queries in the query log. A webpage re-ranking model is developed with the dynamically grouped users X  query log data [9]. These ap-proaches can be viewed as examples of applying implicit collective intelligence in the search process. However, as argued by Clark [2], it is still a challenge for machines to deeply and precisely understand the whole world to answer questions that go beyond the information exactly stated in text. For example, the implicit exploitation of collective in-telligence may fail to solve some special problems, such as a mathematical problem described in Table 2 (an exercise that appeared in [8]). Therefore, there is a limitation for the use of implicit collective intelligence in search engines cover all possible search problems.

T o better exploit collective intelligence in SEs, we pro-pose a practical solution by directly adding an explicit col-lective intelligence component (namely a social engine) into the SECC. The added component provides a live chat chan-nel to a group of users who have similar search tasks. As shown in Figure 3, the dotted lines indicate the links among users. The user grouping should be dynamic with respect to the users X  information need. Users in the same group will be provided a channel to communicate online with each other. When users face difficult problems (e.g., the math-e matical problem presented in Table 2) which can not be solved by TSE, they can explicitly discuss the problems and share experiences through the chat channel. This would lead to a better chance for users to finally complete the search task through explicit collective intelligence, thus leading to a better user experience.
In this section, we design the framework of SECC and introduce its implementation details.
A s shown in Figure 4, our system contains three main engines, i.e., a search engine, a cluster engine and a so-cial engine. The search engine provides traditional functions (e.g., query completion, query suggestion and webpage rank-ing etc.) based on an indexed corpus. The cluster engine groups similar users dynamically based on overlapping of in-put queries. The social engine provides a chat channel for grouped users, which allows them to exploit collective in-telligence. To facilitate these new functions, we designed a new layout of the user interface (Figure 6 (b)). On the left hand side is the chat panel, while the right hand side dis-plays the search engine results page (SERP) returned by the search engine. The chat function is jointly supported by the cluster engine and the social engine.

When a user inputs a query, the search engine will rep-resent the query with a language model, and then return webpages ranked according to estimated probabilities of rel-evance between the query language model and the language models of webpages. Meanwhile, the cluster engine will au-tomatically run in background to dynamically group similar users according to users X  query terms. Each group will cor-respond to a chat channel as shown in Figure 4. If a user is not satisfied with the search results, he/she can post ques-tions on the chat channel, and then the social engine will broadcast the questions to all online users who are in the same channel.

It is worth noting that if a user changes his/her input query, the user X  X  group (and chat channel) will change ac-cordingly. The system detects the changes automatically and assists the user to establish another channel in real time.
As shown in Figure 5, the SECC system consists of five modules, including user interface, web server, search engine, cluster engine and social engine.
 and non-blocking network I/O. A fast full-text indexing and is utilized to develop the search engine module. The chat ally, Ajax is used to request and post information for the chat engine. All modules and related technical information are illustrated in Figure 5.

When a user starts a search task, the search engine re-ceives the input queries and return search results by HTTP request. The social engine, instead, uses long-polling to maintain the connection for users all the way through the search session and provides the users with necessary com-munication services.

In this version of demo, we focus on verifying the feasibil-ity of the proposed framework. Therefore, we do not crawl webpages from the Internet. Instead, we use the TREC AP8889 as test corpus. In the future, we will enlarge the corpus by crawling webpages from the Internet and selected domains to make a more practical system.
We illustrate the demo in Figure 6. Figure 6 (a) shows the start page of our demo, which is in a typical search box style as used in the prominent TSEs. After we input a query into the search box, the system will detect the current user X  X  search interest and cluster a set of users who shares similar search topics. Accordingly, the interface will change to another layout as shown in Figure 6 (b). The chat module is placed in the left side of the main page, while the search results are displayed in the right side (Figure 6 (b) and (c)). The user can communicate with others through live chat, which increases the interactivity among users.
 An illustrative example is shown in Figure 6(b) and (c). Suppose two users, with nicknames  X  X hang X  and  X  X ju X  respec-tively, share the same query words  X  X rime (Lending) Rate Moves X . SECC will cluster them into the same chat chan-nel, in which they can communicate conveniently. Similarly, if they both want to solve the mathematical problem men-tioned in the previous section, they can discuss how to solve it through the chat channel and find the correct answer to-gether. Note that, a user X  X  chat channel will change dy-namically in accordance with the change of the user X  X  query words.
In this paper, we present a novel search engine with a live chat channel, which allows users sharing similar search topics to interact with each other during search sessions and exploit collective intelligence explicitly. The system provides a live communication service besides traditional IR compo-nents.

The current version of the demo is for testing our initial ideas and has a large room for further improvements. Cur-rently, the user cluster engine groups similar users based on overlapping of input queries. This query-based approach is insufficient for understanding the user X  X  intent during a search task (or a session) and would cause too frequent up-dates of users X  chat channels. Thus we will consider grouping users at the session/task level. Secondly, the size of indexed corpus is currently small. We should enlarge the corpus significantly by crawling webpages from the Internet (for se-lected domains) regularly, in order to make the search engine more practical. This will also attract more users to use our system, so as to improve our system by exploiting the collec-tive intelligence explicitly and implicitly. Furthermore, we will investigate effective mechanisms, such as gamification, to promote the users X  incentive to use the chat channels. Fi-nally, we will carry out large scale user task-based evaluation and keep refining our interfaces and algorithms.
The work presented in this paper is sponsored in part by the Chinese National Program on Key Basic Research Project (973 Program, grant No. 2013CB329304, 2014CB744604), the Chinese 863 Program (grant No. 2015AA015403), the Natural Science Foundation of China (grant No. 61402324, 61272265), and the Tianjin Research Program of Applica-tion Foundation and Advanced Technology (grant No. 15JC-QNJC41700).. [1] P. Boldi, F. Bonchi, C. Castillo, D. Donato, A. Gionis, [2] P. Clark. Elementary school science and math tests as a [3] H. Duan and B.-J. P. Hsu. Online spelling correction [4] R. P. Jesus, T. Leelanupab, and J. M. Jose. Cofox: A [5] T. Joachims and F. Radlinski. Search engines that learn [6] H. Kruajirayu, A. Tangsomboon, and T. Leelanupab. [7] M. R. Morris and E. Horvitz. Searchtogether: an [8] W. Rudin. Principles of mathematical analysis , [9] T. T. Vu, D. Song, A. Willis, S. N. Tran, and J. Li.
