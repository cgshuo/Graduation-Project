 1. Introduction
Over the past two decades, digital libraries have been steadily evolving and shaping the way people and institutions
Fox et al., 2012; Lesk, 1997; Marchionini and Maurer, 1995; Witten and Bainbridge, 2003 ). Nowadays, the reach of dig-ital libraries goes far beyond the realm of traditional libraries and also encompasses other kinds of cultural heritage institutions, such as archives and museums. Nevertheless, these institutions are quite different from several points-of-view: they have different internal organizations and traditions; their resources are different in nature, structure, and descriptions; and their users have different information needs which call for different methods for accessing resources.
 of their continued value.

To this end, archives keep the context in which their records have been created and the network of relationships between them in order to preserve their informative content and provide understandable and useful information over time  X  testaments, photographs, and drawings ( International Council on Archives, 1999 ).
 Digital libraries benefit from the existence of sophisticated formal models, such as the Structures, Spaces, Scenarios, describe them and to prove their properties and features. Despite the importance of archives, so far there has been no attempt to develop a dedicated formal model, built around their peculiar constituents, such as the notion of archival and adapted to archives.
 prove that general digital library methods and technologies can be embodied in this field and respect archival practice. Therefore, we propose an innovative formal model for archives built around the notions of archival bond and hierarchy . exploited by the tree ( Aho and Ullman, 1992 ).
 erogeneous contents.

As concrete accounts of this and as substantial examples of their application, we apply NESTOR and the extended 5S mod-tive Protocol for Metadata Harvesting (OAI-PMH) to demonstrate how digital library technologies can be adopted with ar-chives. The second scenario is called  X  X  X nchaining the archives X  X  which shows how archives modeled with NESTOR can form compound digital objects made available as Linked Open Data (LOD) ( Heath and Bizer, 2011 ) on the Web adopting Open Ar-izing the archives X  X  which describes how NESTOR together with the Flexible Annotation Semantic Tool (FAST) ( Agosti and
Ferro, 2008 ) can enhance the role of annotations in archives by helping both archivists and end-users in the description and interpretation of archival resources.

The paper is organized as follows. Section 2 provides an intuitive overview of the principles underlying the two set data models composing NESTOR (i.e. the NS-M and INS-M) and a presentation of the main contributions of this work. In
Section 3 we provide some background on archives, formal models for digital libraries and discuss the related work about nested sets methodologies. In Section 4 we formally present NESTOR along with its properties. Section 5 shows the equivalence between NESTOR and the archival trees. In Section 6 we introduce our extension to the 5S model via
NESTOR and in Sections 7 X 9 we apply NESTOR and this extension to three case studies. We draw conclusions and point to future work in Section 10 .In Appendix A we report all the proofs of the properties and theorems presented in Sec-tions 4 and 5 . 2. NESTOR: overview and contributions 2.1. Intuitive overview of the model sheets, etc. contained one inside the other.

Nested sets are closer to this view of reality than trees are. Indeed, although archival practice commonly considers ar-structure and the elements belonging to the sets represent the content.
 and three series.

As shown in Fig. 1 , the first model composing NESTOR  X  i.e. the Nested Sets Model (NS-M)  X  adopts a bottom-up ap-ent branches of the same archival hierarchy.

As shown in Fig. 2 , the second model composing NESTOR  X  i.e. Inverse Nested Sets Model (INS-M)  X  adopts a top-down into the INS-M by transforming each node into a set, where each parent node becomes a subset of the sets created from its mapped from the root of the tree.

Unfortunately, the representation of the INS-M by means of the Euler-Venn diagrams (adopted for the NS-M) is not very is empty, then these sets have no common circular sector in the inner rings of the DocBall.
From this description we can see that the INS-M can be associated to the top-down descriptive activity and the NS-M to etc.) by construction, analysing the documents one by one. 2.2. Contributions to the field of digital libraries
In the context of Libraries, Archives, and Museums (LAM) unifying a variety of organizational settings and providing more integrated access to their contents is an aspect of utmost importance. Indeed, LAM collect, manage and share digital et al., 2008 ). Although the convergence between libraries, archives and museums has been a topic of much discussion in yet evident in the proposed formal models, developed systems, and education of professionals ( Trant, 2009; Timms and Fall, 2009 ).
 means of the sets and then represent the objects belonging to the sets and formally establish relations between them.
The formalization of NESTOR settles a common ground for dealing with hierarchies open to existing models, solutions and and services. Furthermore, as will also emerge later on, the nested sets models have several advantages over trees while remaining semantically equivalent, and even though they are well known in the field from an intuitive point-of-view, they have not been formalized before.

We exploit the formal basis provided by NESTOR to extend the widely-known 5S Model ( Gon X alves, Fox, et al., 2004 )in tion can be reconstructed. This use case shows how NESTOR can address known problems regarding the state-of-the-art of model has been used for modeling the Open Archives Initiative Protocol for Metadata Harvesting (OAI-PMH) ( Van de Sompel formal definition of NESTOR allows us to exploit the theoretical common ground with the 5S model to extend OAI-PMH and allow it to manage and exchange complex hierarchical data structure in a flexible way, thus overcoming a well-known problem affecting the current archival description standard. The extension of OAI-PMH will make possible the exchange of data belonging to a hierarchy with a variable granularity without losing the relationships between the other data in the hierarchy.
 way with tangible outcomes. Furthermore, archival practice is experiencing a transformation process which promotes the the Open Archives Initiative Object Reuse and Exchange (OAI-ORE). Archives as a meaningful part of digital libraries can take advantage of using the LOD approach instantiated by means of agreed ( Kaplan et al., 2010; Light and Hyry, 2002; Ross, 2007 ) that new approaches, such as the adoption of the OAI-ORE model, should add to, but not undermine, fundamental archival theory.
 by showing how it enables both the preservation of their original order and the definition of new types of relationships. consulting, and understanding archives by means of annotations. This use case shows how NESTOR allows us to transform tasks together with tasks devoted to communication and cooperation ( Kani-Zabihi et al., 2010 ). The main way of reaching the archivists that annotated them.

The archival community has developed  X  X  X ontent and data structure standards X  X  ( Prom et al., 2007 ) to facilitate the description, management and access to the archival resources; however, these standards can be difficult for archivists to opment of variegated annotation systems ( Agosti and Ferro, 2008 ).

This heterogeneity turns into an interoperability problem when we need to access and consult archival metadata man-aged by different digital archive systems and annotations created and handled by different systems. Moreover, annotations under certain conditions as well as archives can be opportunely organized in a hierarchical way. The 5S model extended through NESTOR allows for the formal modeling and managing of multiple hierarchies which are exploited to create a com-mon basis between archives through the NESTOR model and annotations through the FAST formal model ( Agosti and Ferro, 2008; Ferro and Silvello, 2013a ). 3. Related work 3.1. State-of-the-art of archives trace of the provenance and original order in which resources have been collected and filed by archival institutions ( Gilliland-Swetland, 2000 ). This is emphasized by the central concept of fonds , land-Swetland, 2000 ).

Duranti (1998) highlights that maintaining provenance leads archivists to evaluate records on the basis of the importance expresses the relationships and dependency links between the records of the archive by using what is called the archival
Archival description proceeds from the general to the specific as a consequence of the provenance principle and has to reflects the position that they have in the logical and/or the material order of the archive. The principles of ISAD (G) are put into action by the Encoded Archival Description (EAD) standard ( Society of American independent.

EAD is composed of three high-level components: h eadheader i ation. The h frontmatter i supplies publishing information and is an optional element, while the h archival description itself and constitutes the core of EAD. The h of which are repeatable. The most important element is the h as a whole. The h did i element is composed of numerous sub-elements intended for brief, clearly designated statements of information and they are available at every level of description. Finally, the h detailed analysis of the components of a fonds, the h dsc i repeatable recursive element, called h c i or component. A component may be an easily recognizable archival entity such as series, subseries or items. Components are not only nested under the h inside one another. Components usually are indicated with h
EAD reflects the archival structure and holds relationships between entities in an archive. In addition, EAD encourages been embraced by many repositories ( Kiesling, 2001 ).

Nonetheless, EAD allows for several degrees of freedom in tagging practice, which may turn out to be problematic in the the EAD schema rarely requires a standardized description of the level of the materials being described, since the h attribute is required only in the h archdesc i tag, while it is optional in h hierarchy needs to be inferred by navigating the upper components, even as far as up to the h ation the whole hierarchy.

We highlight this fact in Fig. 4 where we present the structure of an EAD file. In this example we can see the top-level components h eadheader i and h archdesc i and the hierarchical part represented by the h attribute is specified only in the h archdesc i component. Therefore, the archival levels described by the components of the h dsc i can be inferred only by navigating the whole hierarchy. Moreover, sharing and searching archival description difficult to reach ( Shreeves et al., 2003 ).
 needed to satisfy her/his information requirements. Another concern is that in some cases EAD makes searches more com-plicated for users ( Yako, 2008 ).

These problems are also enhanced by the lack of a systematic user study about the perception and usefulness of EAD for the end-user. Note that in the recent past few institutions have developed formal evaluations for monitoring the take them into account in the use cases presented in Sections 7 and 9 .

When we need to relate one or more digital objects to their archival descriptions represented as metadata, EAD intro-or implied in EAD  X  X  ( OAC Working Group, 2005 ). To this end EAD provides a h external digital object which is part of the described material (see Fig. 5 a); furthermore, EAD also provides an h specific division. The current solution to this problem exploits third-party components  X  i.e.  X  X  X igital wrappers X  X  example is the Metadata Encoding and Transmission Standard (METS) metadata that is used as an in-between component for
TOR to instantiate an archive as an OAI-ORE instance which exposes archives as compound digital objects in the Web. 3.2. State-of-the-art of digital library models
In order to settle a theoretical common ground where it is possible to establish relationships between NESTOR and the applications in the digital libraries realm.
 formal model which draws upon the broad digital library literature to produce a comprehensive base of support. It was images, and so on; (ii) structures specify the way in which parts of a whole are arranged or organized, e.g. hypertexts, of entities and relationships between them, e.g. humans, hardware and software components, and so on. jects; (iii) a set of services containing at least services for indexing, searching, and browsing; and (iv) a society.
While these broad concepts can also be common to archives, when you look at the specific way in which they are formally extension. We will discuss this in further detail with the presentation of an extension of 5S via NESTOR in Section 6 .
The DELOS Reference Model ( Candela et al, 2007 ) is a high-level conceptual framework that aims at capturing significant
DELOS Reference Model and the 5S model address a similar problem with different approaches; the former does not provide erties, theorems and propositions like in Gon X alves, Watson, et al. (2004), Gon X alves et al. (2008) .
So the DELOS Reference Model is similar to the 5S model in its broader goal, but instead of using a mathematical formal-ware and software components.

These six main domains represent the high level containers that help organize the DELOS Reference Model. For each of the quality domain ( Agosti, Ferro, et al., 2007 ).

It is possible to express the high-level entities and the relationships grasped by NESTOR throughout the concepts defined
Reference Model the constraints that are present in NESTOR. Moreover, the DELOS Reference Model is not a formal model and thus it would not be possible to formally prove the properties of the modeled reality of interest.
We can consider the EDM (Doerr et al., 2011; Europeana, 2011; Europeana, 2012 ) at a different level and without the ambition of modeling the whole digital library universe. The EDM aims at structuring the data managed by Europeana, 2011 ). A common model like EDM can instead be seen as an anchor to which various finer-grained models can be attached, properties as we show in Section 8 .
NESTOR, along with all the models presented here, can be employed by general-purpose digital library architectures, such as Greenstone ( Witten et al., 2009 ), and Fedora Commons,
DELOS reference model, and EDM. 3.3. State-of-the-art on nested sets
The intuitive idea of nested sets was proposed by Knuth (1997) without any formal definition and it has been mainly exploited in the field of relational databases as an alternative approach for implementing some integer encodings to efficiently solve recursive queries in Structured Query Language (SQL) ( Celko, 2000; Kamfonas, 1992; Na and Lee, 2006; Tropashko, 2005 ).
 delimited by more external matching parentheses. The parent X  X hild relationships are retained by the nesting inside the parentheses. The representation of the tree in Fig. 6 c works in the same way by exploiting the idea of indentation .
Ferro and Silvello (2008b) the idea of using a nested organization of subsets has been exploited to allow the exchange of archival metadata between distributed digital libraries. An initial formulation of the first model composing NESTOR which
In Ferro and Silvello (2009) the second model called Inverse Nested Sets Model (INS-M) was introduced and applied to rep-reworked the formal definitions of NESTOR and propose a brand new formalism which also allows us to better express the properties of the model. This work has been reviewed and extended in Agosti et al. (2011) , where a mapping between the lowest common ancestor between two objects in a hierarchy. To the best of our knowledge, the INS-M has not been ad-dressed before in the literature and both models, NS-M and INS-M, are defined here from a formal point of view. 4. NESTOR: the formal model NESTOR defines two set-based data models: The Nested Sets Model (NS-M) and the Inverse Nested Sets Model (INS-M).
INS-M. We will maintain this order in the whole presentation of NESTOR. We define both NS-M and INS-M as a collection of Appendix A .
 intersection of every couple of sets in the NS-C is not the empty-set only if one set is a proper subset of the other. Definition 1. Let A be a set and let C be a collection of subsets of A . Then C is a Nested Sets Collection (NS-C) if: have common elements, thus their intersection is always empty.

Now, we can introduce the Inverse Nested Sets Collection (INS-C) which defines the INS-M. We define an INS-C as a col-
L and K is not the same as the intersection between H and L or H is not a subset of L and vice versa.
Definition 2. Let A be a set and let C be a collection. Then, C is an Inverse Nested Sets Collection (INS-C) if: This definition can be further explained by taking into account the example from Fig. 7 a; let us consider the collection must have in common the same  X  X  X ubfonds X  X  and  X  X  X onds X  X . 4.1. NESTOR separation between structure and content
In the context of information access systems it is important to separate between intensional and extensional aspects of information; for instance, in relational database management systems there exists the distinction between metadata (i.e. intensional level) and data (i.e. extensional level).
 us consider an example based on the NS-M knowing that these considerations are also valid for the INS-M. We can say that tionships between them without taking into account their actual content. the extensional level.
 conditions.

This very example can be described in the context of archives by exploiting the very simple archive modeled by means of to NESTOR.

Example 2. Let us consider the archive represented by the NS-M in Fig. 9 . At the intensional level, the archive can be modeled as follows: C X f fonds ; subfondsA ; subfondsB ; seriesA g serieA # subfondsB , subfondsA subfondsB and subfondsB subfondsA
Then, fonds ={ summary , letterA , letterB , letterC }, subfondsA seriesA ={ letterD } is a valid instance for C ; it describes the extension of the archive.
Both the structural and the content aspects are important for the treatment of the NESTOR model. We exploit the struc-set operations which manipulate the content of the subsets composing the collections.
 and supersets. Let C be a collection of sets and A 2C be a set, we define: S  X  A  X  X f B 2C : A B g to be the collection of proper supersets of A in C ; S  X   X  A  X  X f B 2C : B A g to be the collection of proper subsets of A in C .
 D  X  A  X  X f B 2C :  X  X  A B  X ^ X 9 = E 2Cj A E B  X  X g to be the collection of direct supersets of A in C .
D  X   X  A  X  X f B 2C :  X  X  B A  X ^ X 9 = E 2Cj B E A  X  X g to be the collection of direct subsets of A in C . 4.2. Properties of the Nested Sets Model
Many properties of the NS-M are derived from the straightforward application of set theory as we show in the following example which takes into account the intensional level of the NS-M.
 for all H ; K 2Cj H K ^ K H ) H n K  X  H ^ K n H  X  K .

In this example we see that the sets in a NS-C behave exactly as one would expect under the operations of union, inter-section and set difference. Let us see an example which shows how these operations behave at the extensional level. B ={ c , d , e } and C ={ e }. Then, B [ C ={ c , d , e }= B and B \ C ={ e }= C .
 Let us consider a NS-C C ; the next proposition shows that for all H 2C , H has at most one direct superset.
Proposition 1. Let C be a NS-C. Then, 8 H 2C ; jD  X  H  X j 6 is its direct superset.

Corollary 2. Let C be a NS-C, H 2C be a set, S  X  H  X  be the collection of proper supersets of H and K 2S  X  H  X  where 8 L 2S  X  H  X  ; j K j 6 j L j be the subset with minimum cardinality in S  X  H  X  . Then, D  X  H  X  X  K. Finally, the next proposition proves that the direct subsets of H are always disjoints.
Proposition 3. Let C be a NS-C and H 2C be a set, then 8 K ; L 2D  X   X  H  X  ; K \ L  X ; . 4.3. Properties of the inverse nested sets model
The following proposition shows the behavior of union and set difference in the INS-M under specific conditions. Property 4.6 shows that the difference between two sets in the given INS-C is a set not belonging to the INS-C.
Proposition 4. Let C be an INS-C and f H ; K g2C two sets where H  X  K. Then, Let us consider an INS-C C , then for all H 2C , H has at most one direct subset.

Proposition 5. Let C be an INS-C. Then, 8 H 2C ; jD  X   X  H  X j subsets of H is its direct subset.

Corollary 6. Let C be an INS-C, H 2C be a set, S  X   X  H  X  be the collection of proper subsets of H and K 2S 8 L 2S  X   X  H  X  ; j K j P j L j be the subset with higher cardinality in S  X   X  H  X  . Then, D  X   X  H  X  X  K.
We know that for all H ; K 2C where C is an INS-M, the intersection between them is never empty, otherwise Condition imum cardinality among all of their common subsets.
 Proposition 7. Let C be an INS-C and H ; K ; L 2C be three sets such that H \ K = L, then 8 W 2 X D  X   X  H  X \D  X   X  K  X  X  ;
W  X  L )j L j &gt; j W j . 4.4. Equivalence between the NS-M and INS-M
In the following we prove the equivalence between the two proposed set data models by presenting two functions f and n which allow us to go from a NS-C to an INS-C and vice versa. The possibility of mapping between one model and the other for the needs we may have.
 H 2C there exists K 2E such that: sets, f retains all the elements that exclusively belong to L  X  i.e. L n K 2E such that: to H and to its supersets minus all the elements belonging to the subsets of H itself.
The next theorem shows that NS-M and INS-M have the same expressive power by proving that if we apply the function f to a NS-C we obtain an INS-C as output.
 Theorem 8. Let C be a NS-C then f  X C X   X  E is an INS-C.
 Now, let us see how the n function allows us to map an INS-C into a NS-C.
 Theorem 9. Let C be an INS-C then n  X C X   X  E is a NS-C.

In Fig. 10 we can see the mapping between the two set data models through the f and n functions. 5. Equivalence between the archival tree and NESTOR
Archivists use the tree as the model of an archive because it expresses the multileveled and hierarchical nature of the modeling an archive.

The formal definition of the set data models and their properties we gave in Section 4 prove that the nested sets idea is belonging to the sets.

In this section, we formally prove that modeling an archive by means of a tree is equivalent to modeling it with the set-based approach adopted in NESTOR. To this end, we present two formal mappings from the tree to the NS-M and INS-M models and vice versa, thus verifying their equivalence. 5.1. Equivalence between tree and NS-M
First of all, we present the formal mapping between the tree and the NS-M. The mapping procedure creates a set for each connecting the nodes of the tree. For instance, let T =( V , E ) be a tree; if we consider an edge e two sets J and K corresponding to the nodes { v j , v k } 2 V such that K # J ; indeed, from e cepts we will widely use in the following. We define with C vice versa C ( v i ) is the set of all the ancestors of v
Theorem 10. Let T = (V,E) be a tree and let C be a collection of subsets where " Collection.
 C. In Fig. 11 we show how a tree can be mapped in a family of subsets V
The following theorem shows that a NS-C can be mapped into a tree by creating a node from every set in the NS-C. Two sets J and K in the NS-C correspond to two nodes v j and v is the direct superset of K .

Theorem 11. Let C be a NS-C, V be a set of nodes and E be a set of edges where 8 T = (V,E) is a tree.
 We have formally defined the relationships between a tree with the NS-M; we know that a tree can be mapped into a NS-
C where every node of the tree is mapped into a set of the collection and vice versa. 5.2. Equivalence between tree and INS-M
Now we can present the corresponding theorems for the INS-M which show how a tree can be mapped into an INS-C and , say e j , k , then the set J created from v j is defined as a subset of the set K created from mapped into a set which is a subset of the set created from its child node.

Theorem 12. Let T = (V,E) be a tree and let C be a collection of subsets where " In Fig. 12 we show how a tree can be mapped in a family of subsets V
Now we can see how an INS-M C is mapped into a tree T =( V , E ); the following theorem shows that if we map every couple of sets f A j ; A k g2C into a couple of nodes { v j , v k then the graph defined by the nodes in V connected by the edges in E is a tree.

Theorem 13. Let C be an INS-C, V be a set of nodes and E be a set of edges where 8
T = (V,E) is a tree. 6. Extending the 5S model via NESTOR As discussed in Sections 1 and 3 , the 5S model needs to be extended and adapted to the specific case of archives.  X  or for representing the archive as a whole, as in the case of EAD.
 cannot be properly modeled throughout the 5S model without losing one of its main properties. descriptive metadata to a whole digital object.
 interoperability between digital archives and the possibility of sharing archival metadata with variable granularity.
Our extension to the 5S model is thus organized as follows: ture , as a structure that complies with the constraints of NS-M or INS-M; using the notion of metadata catalog , we introduce the notion of NESTOR metadata catalog , as a metadata catalog that exploits a NESTOR structure to retain the archival bonds; archive , as a digital library where at least one of the metadata catalogs is a NESTOR metadata catalog. set of label values, F is a labeling function, and NS G =( V , E ) is a directed graph where 8 2 E ; 9 ! J ; K 2Cj K # J .
 where L is a set of label values, F is a labeling function, and INS G =( V , E ) is a directed graph where 2 V ; 9 ! J 2C^ 8 e j ; k 2 E ; 9 ! J ; K 2Cj J # K .
 the NS-M, but they can be useful in the context of the 5S and this feature, in turn, may extend the NS-M with semantic possibilities. Similarly, Definition 6 applies Definition 2 and Theorem 13 .
 Definition 7. Given a set A ,a NESTOR structure ( A ) is either a NS-M structure ( A ) or an INS-M structure ( A ). and M a set of descriptive metadata specifications , then a metadata catalog is a function DM : H 2
Definition 8. Let H be a set of handles to digital objects and M a set of descriptive metadata specifications, a metadata catalog DM is a NESTOR metadata catalog if: archival divisions are compliant with the descriptive metadata specifications in M .
 Definition 9. A digital archive  X R ; DM ; Ser v ; Soc  X  is a digital library where
R is a repository; at least one of the metadata catalogs in the set of metadata catalogs DM is a NESTOR metadata catalog; Serv is a set of services containing at least services for indexing, searching, and browsing; Soc is a society.
 consequences. Firstly, more than one NESTOR metadata catalog can be present in the same digital archive, thus making it mix NESTOR and non-NESTOR metadata catalogs which allows for the seamless integration of different visions of the man-odologies and tools available in the digital library field with archives. 6.1. A sample instantiation of the extended 5S model in Section 3.1 , EAD cannot natively handle this case, whereas with NESTOR this is straightforward as we show in the following.
 According to Definition 9 , to model this digital archive throughout the extended 5S we need to define a repository R ,a Fox, et al., 2004[p. 295] ) as a tuple  X R ; get ; store ; del  X  where R 2 this example C do ={ do A , do B , do C , do D 1 , do D 2
A NESTOR metadata catalog DM C do is a set of pairs associating a handle (i.e. h (i.e. md i ) and for which a NESTOR structure exists. So, DM either a NS-M structure or an INS-M structure. In this example we present only a NS-M structure because the INS-M struc-defined as A ={ md A , md B , md C , md D }, B ={ md B }, C ={ md set-based fashion, but by employing Theorem 11 it can be defined in a graph-based fashion (i.e. thus obtaining the graph NS-G) mapping the NS-C into a tree. A NS-M Structure also requires a set L of labels and a function F mapping from the NS-G to L ; so, L  X f fonds ; series ; unit g ; F X  A  X  X f fonds g ; F X  that in this case, each of the presented descriptive metadata specifications (i.e. md for instance, md A describes a fonds, thus it can be represented by the
To complete the definition of the digital archive we need to specify the set of services as they are defined by the 5S (Definition 7 Gon X alves, Fox, et al., 2004[p. 290] ); for an archive a possible set of services can be Serv ={ new archival resource and update the existing resources. The users of the digital archives are defined by the 5S concept of society (Definition 10 Gon X alves, Fox, et al., 2004[p. 292] ), which for an archive can be instantiated as Soc ={ archivist , student , general public , historian }. In Fig. 14 we give a graphical representation of the sample archive of Fig. 13 represented via the extended 5S Model.

The extension of the 5S Model via NESTOR represents an actual bridge between these two formal models which allows for tionalities in the LAM context.

A meaningful example is OAI-PMH which is formally defined in the context of the 5S and can now be employed by archives without changing its internal functioning and broadening its functionalities (see Section 7 ). This theoretical framework is also employed for exposing archives through the LOD paradigm instantiated by OAI-ORE 8 . Lastly, the very methodology adopted for extending the 5S model can be adapted for connecting NESTOR to the FAST formal model in order to enrich archives by means of collaboration tools such as digital annotations as we show in Section 9 . 7. Use case: detaching the archives
Modeling digital archives through the extended 5S model opens-up new ways of representing and handling archival resources. A relevant advancement resides in the possibility of adopting widely-used digital library technologies within archives without changing their inner functioning or modifying them while at the same time retaining all the archival fundamental characteristics  X  e.g. the context of resources and the archival bond.
 2004 ).

OAI-PMH is open from an architectural point-of-view and a low-barrier mechanism for repository interoperability. It is based on Web standards such as HyperText Transfer Protocol (HTTP) ( Fielding et al., 1999 ) and XML, and on two main components, Data Providers and Service Providers , where the former are repositories that export records in response to and provide added-value services built on top of the aggregated harvested metadata.
 records), and permits the harvesting only of records owned by a specified OAI-set. An OAI-set is identified by a which is a mandatory and unique handle for a set within the repository. OAI-set organization may be flat or hierarchical, of the set hierarchy to the respective node. For example, if we define an OAI-set the OAI-PMH is formally described by means of the 5S model. Data and Service providers are represented as (electronic) are Structures ( Gon X alves, Fox, et al., 2004 [p. 283]).

When it comes to archives, as discussed in Section 3 , EAD is the reference standard to be considered. It represents an archive as a monolith and every description is embedded in the archival structure (see Fig. 4 ). This means that content and structure are interlinked in the same XML file and they cannot be handled separately.
Several state-of-the-art mapping initiatives have tackled this problem; for instance, ( Carini and Shepherd, 2004 ) de-scribed the possibility of mapping Machine Readable Cataloging (MARC) metadata into EAD but not vice versa because MARC common solution for exchanging archival metadata in distributed environments is to map EAD into a collection of light-weight metadata  X  i.e. Dublin Core (DC) metadata  X  that can be exchanged and accessed with a variable granularity ( Prom, 2003; Prom and Habing, 2002; Ferros et al., 2008; Bountouri and Manolis, 2009 ). The main problem with these solutions is links to the EAD structure, thus they are not independent from the original EAD file. Several proposals solve the mapping problem from the content point-of-view, but they do not provide a way to retain the archival structure without referring while retaining the archival context ( Combs et al., 2010 ).

There are services providing support for sharing archival metadata, such as the OCLCs ArchiveGrid, findings aids are harvested by agreement between institutions and the ArchiveGrid service, and aggregated together with
HTML-encoded inventories and collection-level descriptions X  X  ( Riley and Shepherd, 2009 ). The main criticism of these access and exchange of them.

Other general-purpose digital library systems do not take into account the possibility of managing and sharing archival because no mapping service is provided. Fedora Commons 10 not provide any solution for mapping or exchanging these files in a distributed environment.
Modeling an archive through a unique EAD file also limits the information access possibilities. Indeed, the unique entry driving the user through the hierarchical structure.

A direct consequence is that in a distributed environment where it is necessary to exchange data between repositories, we are forced to exchange the archive as a whole. Indeed, we cannot share a specific piece of information  X  e.g. the descriptions of the documents belonging to a specific series  X  without extracting it from the EAD file and thereby losing 2002; Yako, 2008 ). This leads to difficulties in fully exploiting OAI-PMH within archives. Indeed, OAI-PMH can be used only to exchange the whole archive as a monolithic unit, thus many of the useful functionalities of the protocol cannot be exploited.

To this end, we exploit NESTOR along with the extended 5S to propose a general solution for modeling archives, thus archives.

Let us consider a family of subsets F I on a NS-C indexed by a set I composed of h ensure that each h setspec i complies with the NS-M constraints, that is i 2 I ={ s such that F j ... F 1 F 0 . Every F j 2F I is an OAI-set identified by a
The setspec values for each F k 2F I are built in such a way to maintain the inclusion order between the sets. If an F no superset its setspec value is composed only of a single value ( h the colon [:] (e.g. h setspec i s a : s b : s h h /setspec i ). Furthermore, let OAI ={ oai oai 2 F j must contain the setspec of F j in its header.
 structure is mapped into an OAI-Set with a proper setSpec spec &gt; 0001 &lt; /setspec &gt;. This set has two subsets that are mapped into two OAI-sets: &lt; and &lt; setspec &gt; 0001:0003 &lt; /setspec &gt; and so on for the other sets.

We can see that the hierarchical relationships and thus the inclusion order between the sets is maintained by the iden-tion is mapped into a metadata belonging to an OAI-set; the membership information is added to the header of these metadata that are seen as OAI-records. In this way each archival description can be encoded by a single metadata without impose any conditions on the archival descriptions, thus allowing the possibility of changing the metadata, updating the information or adding a new metadata format without affecting the structure of the archive and without changing the data model.

An important aspect that has to be highlighted is that this implementation also maintains the horizontal dimension of the the fonds (we named it Sub-fondsA) or of the second series of sub-fonds. This is possible because the OAI not only inclusion order between the OAI-sets but also a partial order between the OAI-sets which are common subsets of another OAI-set.
 In the same way, we can use the INS-M with OAI-PMH. Let G be an INS-C indexed by a set J (i.e. a family of subsets G composed by h setspec i values such that j 2 J ={ s 0 : s
In G J , unlike in F I , the following case may happen: Let f G either G i G k and G k G i . If we consider G J composed only of G and the identifier of G k is &lt; setspec &gt; s k &lt; /setspec &lt; setspec &gt; s k : s w &lt; /setspec &gt; at the same time; this means that in G &lt; setspec &gt; s i : s w &lt; /setspec &gt; and the other identified by &lt; way to get an intersection of two OAI-sets is by enumerating the records. This means that we can know if an OAI-record belongs to two or more sets just by seeing whether there are two or more h
In this case the records belonging to G w will contain two h and &lt; setspec &gt; s k : s w &lt; /setspec &gt;; note that only the &lt; collection of OAI-sets and OAI-records. We obtain four sets from the common subset  X  i.e. the fonds of the sample sets mapped from the children of the root are defined in the same way. The sets related to the series are identified by  X  X 0001 X  X ,  X  X 0002 X  X  and  X  X 0003 X  X . We can see that the OAI-records belonging to the  X  X  X onds X  X  have four OAI-sets.

These instantiations of the set data models have three main relevant features which are also important aspects defining and without any extension.
 metadata thanks to the membership information contained in their header.
 it recursively obtains all the OAI-subsets and items in the subtree rooted in the selected sub-fonds. information which permit the relationships of archival documents to be inferred with the other documents in the archive and with the production and preservation environment.

The choice between a NS-M or INS-M should be made on the basis of the application context. For instance, often the infor-stored in its ancestor nodes and thus its context.

Furthermore, the possibility of going from one set data model to the other by means of the defined mapping functions is by the properties of a single model of choice. 8. Use case: unchaining the archives
Currently, archival practice is moving towards the definition of complex relationships between resources of interest as well as the constitution of compound digital objects. To this end archives can take advantage of using the LOD paradigm which eases access to the resources, enhances interoperability by moving the focus from the systems managing the data libraries, the LOD paradigm can be instantiated by means of Open Archives Initiative Object Reuse and Exchange (OAI-ORE) which has a precise focus in the representation and management of compound digital objects.
In this section we define a formal basis that provides a means for: (i) defining OAI-ORE instances consistent with the models OAI-ORE as a Structure ( Kozievitch and Torres, 2010 ); this very model extended via NESTOR allows us to impose according to archival practice.

The OAI-ORE defines a machine-readable and standard mechanism for defining aggregations of resources on the Web. By units are aggregations of distinct information units that form a logical whole when combined. Some examples ( Van de Som-tools, and video recordings of an experiment; archives can also be seen as aggregations of archival metadata describing archival objects which in turn can have a digital form.
 The OAI-ORE data model is based on three main kinds of resources: Aggregation , Aggregated Resources and Resource
Map . An Aggregation is defined as a resource representing a logical collection of other resources. An Aggregation is a logical construct and thus it has no representation; it is described by a Resource Map which can be seen as a materi-alization of the Aggregation. A Resource Map must describe a single Aggregation and must enumerate the constituent Aggregated Resources; a resource is an  X  X  X ggregated Resource X  X  in an Aggregation only if it is asserted in a Resource Map. Each resource in the OAI-ORE data model is identified by a URI. The OAI-ORE data model is expressed by the
Resource Description Framework (RDF), 12 so its instances are expressed as RDF graphs. An RDF graph is defined by a p are URI references. 13
In order to explain how an archive can be properly modeled as an instance of the OAI-ORE data model and thus be exposed as LOD, we have to consider that the issues of EAD determined by the lack of distinction between structure and content is emphasized when we take into account the digital objects . A single EAD metadata can directly point-to at most EAD has been proposed ( Sugimoto and van Dongen, 2009 ) with the limitations we discussed in Section 3 and depicted in Fig. 5 .

In the previous section a methodology is described for mapping an EAD file into NESTOR which preserves the full infor-mative power of the metadata. In this way, NESTOR can be used as a model to describe an archive from scratch as well as a mapping component that allows us to manipulate and transform the EAD files while respecting archival principles (FerroSilvello2009b). We exploit this very methodology to establish a direct and formal connection between OAI-ORE and
NESTOR. In this use-case we present the mapping towards the NS-M; the mapping towards the INS-M can be derived integration which maps EAD into the CIDOC Conceptual Reference Model (CRM) ontology ( Stasinopoulou et al., 2007 ) in or-der to address heterogeneity between different metadata formats. This methodology does not provide a solution of creating EAD with several digital objects and expose them on the Web is not specifically addressed.
In order to exploit OAI-ORE in the context of archives we provide a compact formal definition of the framework that will be exploited for bridging with NESTOR. We indicate with UA U ={ ua identifying the Aggregations and with g A : UA ? R the restriction of g ( g j the set of URI identifying the Aggregated Resources. 14 We define g of Aggregated Resources. Every rm i 2 RM must describe one and only one a Every ar i 2 AR may be aggregated by more than one a j 2 A .
 OAI-ORE comes with other two important features: Proxy and Nested Aggregations . A Proxy is a resource that indicates an
Aggregated Resource in the context of a specific Aggregation and it is associated with an Aggregated Resource via an with UP U ={ up 1 , ... , up k , ... , up z } the set of URI identifying the Proxies. We define g where P R is the set of Proxies. Proxies allow us to define relationships between Aggregated Resources. We indicate with PAR : P ? AR a function which maps a Proxy to the Aggregated Resource for which it is a Proxy and with u which maps a Proxy to the Aggregation in which it is a Proxy.

The Nested Aggregations feature enables the definition of Aggregations of Aggregations; this is consistent in the OAI-ORE data model because an Aggregation is a Resource which can also be seen as an Aggregated Resource of another Aggregation.
Thanks to this feature, an order exists between Aggregations, call it and only if the Aggregation a i is aggregated by a j . It is important to note that
ORE entities other than Aggregations; in fact, to define an order between Aggregated Resources we must use Proxies. Now, we can summarize the concept of the OAI-ORE Data Model thanks to the next definition.
 Definition 10. Let E X f A ; R ; AR ; P ; UA ; UR ; UAR ; UP g be the collection of OAI-ORE entity sets and U ={ g PAR , u PA } be the set of OAI-ORE functions. We define O X hE ; U i to be an OAI-ORE Data Model.
In order to model an archive by means of OAI-ORE we need a methodology to identify the archival resources and to ex-press the relationships between them. We have seen that we can represent a tree by means of the NS-M and that an archive can be modeled by means of a tree as well as by a NS-C. Therefore, we can model an archive throughout OAI-ORE by starting from its representation in the NS-M. We need to define a mapping between a NS-C C and an OAI-ORE model O X hE ; U i ;in order to do this we have to take into account the two main entities of NESTOR which are: the sets and the elements (i.e. resources) belonging to them.

The intuitive idea is that every set H 2C becomes an Aggregation a to H becomes an aggregated resource ar t 2 AR aggregated by a f H ; K g2C such that H # K , it is possible to create a pair of aggregations { a relation defined above.

Every set in a collection of subsets can be mapped into an Aggregation in the OAI-ORE model; the inclusion order between the sets is maintained by the relation defined between the Nested Aggregations of OAI-ORE. Then, by means of the function RMA a Resource Map is associated with each Aggregation. Every resource belonging to a set H in the NS-C is mapped into Aggregated Resources belonging to the Aggregation mapped from H . Therefore, we can map a NS-C into a corresponding archive and the archival bond of archival resources.

The presented formal basis guarantees that an archive modeled by means of the NS-M can be mapped into an instance of the OAI-ORE Data Model, thus retaining the fundamental archival hierarchy. In this section we show how we can define dif-between the resources within the same archival division. It is worthwhile providing a concrete example of how this formal basis can be applied to a sample archive modeled by the NS-M by describing the mapping methodology step-by-step with the help of some mapping tables.
 the sets. In Table A we can see the mapping of the sets into the OAI-ORE Aggregations and in Table B we can see how the inclusion dependencies are mapped into Nested Aggregations. These two mappings show us how to represent the structure of a sample archive in an instance of the OAI-ORE data model.
 tains two elements: a metadata (i.e m 1 ) and an associated digital object (i.e. do data (i.e. m 2 ), the set  X  X  X eriesA X  X  contains a metadata (i.e m can see how the elements are mapped into Aggregated Resources and in Table D how the Aggregated Resources are associ-ated with the correct Aggregations. We can see that an element belonging to a set  X  e.g. m
Aggregated Resource  X  e.g. ar c  X  aggregated by the Aggregation a
Table F show how we can use Proxies to associate the metadata with the digital objects they describe. OAI-ORE allows us can see that two Proxies p a and p b associated to ar a and ar thus, throughout p a and p b we can say that the Aggregated Resource ar
The relationships between the Aggregated Resources can reflect the order between the archival descriptions within a com-principle. We can see that within this methodology it is quite simple to extend the range of the relationships connecting the Aggregated Resources and to define in this way new semantic associations between the archival resources. represent the Aggregations, the Aggregated Resources and the Proxies associated to a showing the other Proxies and the Resource Maps. This methodology makes it possible to model and describe archives from objects. Archival principles are preserved and still have primary importance for understanding archival resources; at the of new services over archives. This methodology provides a means to define archival compound objects that can be shared with the systems which already employ OAI-ORE and that can be exposed as LOD on the Web. Lastly, in Fig. 18 we can see an more flexibility and expressive power to archives.

Furthermore, this methodology and the described formal basis guarantee the backward compatibility with other archival descriptive standards; for instance, a methodology to map the archival descriptions modeled by OAI-ORE into EAD can be easily defined. Indeed, we know how to map EAD into a NS-C and a NS-C into an instance of the OAI-ORE data model. In the same way, we can map the archival descriptions modeled by OAI-ORE into an EAD file by reversing the presented meth-tees the possibility of going from one model to the other. 9. Use case: socializing the archives
Archives need to take into account the end-user who is going to consult them and who does not have the competencies or the current tendencies in Web 2.0, where available resources can be augmented with user-generated content which then provides alternative access points for searching and browsing resources.

The goal of this use case is to show how NESTOR can be employed as a bridge between archival theory and practice and the model used for annotations. NESTOR is exploited both for the theoretical basis it defines and for the alternative representations of archives it provides. Indeed, from the representation of the INS-M it is possible to generate original the results of a search involving annotations and archival data.

To this purpose we rely on NESTOR and the Flexible Annotation Semantic Tool (FAST) annotation model ( Agosti and Ferro, TOR and OAI-ORE.

Beyond formally modeling what an annotation is, FAST introduces a full range of operators that allow users to either the annotations related to them ( Agosti and Ferro, 2005; Agosti and Ferro, 2006; Ferro, 2009 ). To this end, FAST makes into consideration the hypertext existing between annotations and annotated resources to modify the scores and rank anno-tations and/or annotated resources according to the paths connecting them. All the search operators and modifiers are ex-posed via a simple query language based on Contextual Query Language (CQL) ( OASIS Search Web Services Technical project and suitable to be embedded in HTTP requests and Web services.

For example, it is possible to express queries like the following one. fast.annotation.text =/thread = halfThread  X  X  X lluminated manuscript" and/match = looseMatch fast.annotation.author.identifier =/thread = halfThread ferro which searches for annotations about illuminated manuscripts best match (search engine-like) search clause while the latter is an exact match (database-like) search clause. The two clauses are mixed with a relaxed boolean operator ( looseMatch of them will be retrieved even if ranked lower than annotations matching both of them. Moreover, not only the content of the annotation is taken into account, but also the hypertext of annotations ( result list, meaning that if, for example, an annotation a a resources on the basis of their annotations.

Therefore, here we focus on how to exploit FAST and NESTOR to enhance the user experience when searching for anno-access and visualize annotated archival resources.
 named  X  X  d 1 , d 2 , ...  X  X  for convenience; for the same reasons annotations are indicated as  X  X  a consider an archival tree where the node d 2 , annotated by a
The second scenario shows that a 3 , which is part of an annotation tree annotating d two annotations  X  i.e. a relate-to link between a 3 and a
Suppose now the user has issued a query which retrieves the following resources: a three possible scenarios showing how annotation trees can be attached to an archive and then we show how they can be modeled through the INS-M and represented by means of the DocBall, as shown in Fig. 20 . riched by the relationship of annotation a 3 with the node d call it  X  X  X ocBall B X  X . In order to join these two DocBalls connected by annotation a d scenario 2 by taking the inner sector of DocBall B  X  i.e. d
DocBall A as a superset of the annotation  X  in this case a odology of joining two DocBall can be summarized as follows; let D to section s B of D B . To join D A with D B , the inner section of D ence and possibility of passing from one to the other.

For example, Fig. 21 shows a possible prototype that can be exploited to compare alternative presentation strategies: (a) (c) it exploits the DocBall visualization introduced above to give an overall view of the search results.
The DocBall is in the center of the canvas and when we move the pointer over a circular section a tooltip appears showing we selected section d 2 , the content of which is shown in the right column and the tooltip shows the content of a are documents and those which are annotations. However, the DocBall could become ineffective if there are many sectors that have to be represented. In this case an expand/compress strategy can be adopted in the same way it is used to show the branches of very large trees.
 which tasks, and how these visualizations help the user in keeping the overall context of archival data and annotations. 10. Conclusion and future work heritage and digital libraries are the natural choice for managing and providing access to their assets.
Nevertheless, the foundational models of digital libraries have been built around the most general concepts but without domain.

We think that the archival domain deserves a formal theory as well and that this theory has to be reconciled with the ogies which have been developed over the last two decades in the digital library field.
To this end, we have introduced an original formal model, called NESTOR, which exploits the inclusion relationships  X  X  X nchaining the archives X  X  which shows how archives modeled with NESTOR can form compound digital objects exposed as chives by helping both archivists and end-users in the description and interpretation of archival resources. NESTOR and the study of their properties.
 digital archives.

Moreover, the formal definition of the above mentioned operations will allow us to study their computational complexity, chives, but we will also be able to characterize them from a performance point of view. plete the formal modeling and the extension of the 5S model with experimental data.

Finally, merging this modeling effort with other existing formal models, as we did in the case of annotation, will move digital archives to the next generation, making them not only browsing and consulting tools, but also active means where access and use tasks of different user categories. Moreover, by relying exposing archives as LOD on the Web, as in the et al., 2013 ), currently discussed by the World Wide Web Consortium (W3C), which is easily representable by means of the FAST annotation model as well.
 Acknowledgements and Carlo Meghini for their comments on the main ideas of the model. We would like to thank Fausta Bressani and Andreina tica per il Veneto ) of the Ministry of Cultural Heritage.
 quality of the paper to make its contributions more exploitable in a multi-disciplinary context. versity of Padua. The CULTURA 18 (Contract No. 269973) and the PROMISE network of excellence jects, as part of the 7th Framework Program of the European Commission, have partially supported the reported work. Appendix A. NESTOR properties: proofs This appendix reports the proof of theorems and propositions presented in Section 4 .
 A.1. Properties of the nested sets model The following is the proof of Proposition 1 which proves that every set in a NS-C has at most one direct superset. is not a NS-C (condition (4.2) of Definition 1 ). h NS-C (say H ), the set with minimum cardinality is the direct superset of H .

Proof. We know from Proposition 1 that jD  X  H  X j 6 1. Then, ab absurdo suppose that 8 L 2S  X  H  X  ; j K j W # K )j W j &lt; j K j ;if K # W )j K j &lt; j W j .Soif D  X   X  H  X  X  W )j W j &lt; j K j . h The following is the proof of Proposition 3 which says that the direct subsets of a set in a NS-M are always disjoints. Proof. Ab absurdo suppose that K \ L  X  ;) K \ L  X  W such that j W j P 1 ^ W K ^ W L )C is not a NS-C. h A.2. Properties of the inverse nested sets model
The following is the proof of Proposition 4 showing the behavior of union and set difference in the INS-M under specific conditions. Proof. Let us prove Property 4.5 . ( ) ). Ab absurdo suppose that  X  X  H K  X ^ X  K H  X  X  ) H [ K  X  L 2C . This means that
L \ K  X  K  X  H \ K )C is not an INS-C. ( ). Ab absurdo suppose that H [ K  X  L R C) H # K _ K # H . H # K ) H [ K  X  K 2C^ K # H ) K [ H  X  H 2C . Let us prove Property 4.6 . Ab absurdo suppose that H n K  X  L 2C .
 If  X  H n K  X  L 2C X ^ K # H ) L \ K  X ;^ L \ H  X  L ) X  X  L K  X ^ X  K L  X  X  ) 9 H ; K ; L 2Cj K # H ^ X  X  L K  X ^ X  K L  X  X  ^  X  K \ L  X  L \ H  X )C is not an INS-C.
 If  X  H n K  X  L 2C X ^ X  X  H K  X ^ X  K H  X  X  ) L # H ^ X  X  L K  X ^ X  K L  X  X  ) H \ K  X  ;  X  L \ K  X ;)C is not an INS-C. h The following proof shows that the sets in an INS-C verify the properties defined by Proposition 5 . L K ^ K L because L ; K 2D  X   X  H  X  and L \ K  X  H \ L thus C in not an INS-C because it violates condition (4.4) of Definition 2 . h
The following proves Corollary 6 to the preceding proposition and shows that for all H 2C , the set with maximum car-dinality in the collection of subsets of H is its direct subset.

Proof. We know from Proposition 5 that jD  X   X  H  X j 6 1. Then, ab absurdo suppose that 8 L 2S 9 W 2S  X   X  H  X  such that j W j &lt; j K j^D  X   X  H  X  X  W . This means that W H ^ K H .If j W j &lt; j K j) W K ) W K H )
D  X  H  X   X  W . h
The next proof ( Proposition 7 ) shows that the intersection between H and K is the set with maximum cardinality among all of their common subsets.
  X  L #  X  H \ K  X  X  ) L # W ) H \ K  X  W . h A.3. Equivalence between the NS-M and INS-M
The following proof of Theorem 8 shows that NS-M and INS-M have the same expressive power by proving that if we apply the function f to a NS-C we obtain an INS-C as output.
 Proof. To prove that f  X C X   X  E is an INS-C we have to verify if it satisfies the two conditions of Definition 2 .
Condition (4.3) . By the definition of NS-C we know that 9 ! A 2Cj 8 H 2C ; H # A . We know that S  X  A  X  X ; , that 8 H 2C ; H  X  A ; S  X  H  X   X  ; ; we call B  X  f  X  A  X  X  S  X  A nD 8 K 2E ; B # K .

Condition (4.4) . Let us consider three sets H ; K ; L 2C such that f  X  H  X  X  H
Ab absurdo suppose that 8 H 0 ; K 0 ; L 0 2Ej H 0 # K 0 ( H 0 L 0 ) ^ ( L 0 H 0 ) ) ( L k H ).  X  L 0 \ K 0  X  H 0 \ L V 2Cj L # V ^ K # V ^ H # V )C is not a NS-C. h Let us see an example showing how the f function can be applied to the sample NS-C shown on the left-hand side of Fig. 10 ;in Fig. A.22 we can see each step of this mapping procedure.
 f  X C X   X  E  X  f A 0 ; B 0 ; C 0 ; D 0 ; E 0 g , where: f  X  A  X  X  A 0  X  f  X  B  X  X  B 0  X  f  X  C  X  X  C 0  X  f  X  D  X  X  D 0  X 
Fig. A.22 ). f  X  E  X  X  E 0  X  Fig. A.22 ).
 Now, let us see the proof of Theorem 9 by showing how the n function allows us to map an INS-C into a NS-C.
Proof. Let us prove that E respects Condition (4.1) of Definition 1 . 9 B 2Cj 8 H 2C ; B # H )D  X   X  B  X  X ;^D  X   X  H  X   X  ;^ X  H [S  X  H  X  X  #  X  B [S  X  B  X ) 8 H 2C ; Let us prove that E respects Condition (4.2) . 8 H ; K 2Cj H # K ) X  ^ X  S
If we apply the n function we obtain the following result: n  X  A  X  X  A 0  X  n  X  B  X  X  B 0  X  n  X  C  X  X  C 0  X  n  X  D  X  X  D 0  X  n  X  E  X  X  E 0  X  A.4. Proofs of the equivalence between the archival tree and NESTOR Theorem 10 which shows the equivalence between the tree and the NS-M is proved by the following proof. Proof. Let us consider a bijective family of subsets 20 V and " v i 2 V , V v i  X  C  X   X  v i  X  . Let v r 2 V be the root of the tree then V Definition 1 ).

Now, we prove Condition (4.2) of Definition 1 . Let v h , suppose that C + ( v h ) C + ( v k ) ^ C + ( v k ) C + ( v descendants of v k but they do not belong to the same subtree. This means that 9 tree. h
Example 7. Let T =( V , E ) be a tree where V ={ v 1 , v 2 e { , { }.

Let V V be a collection, where V  X f V v 1 ; V v 2 ; V v ; f that V V is a NS-C.
 The tree T =( V , E ) and the collection V V mapped from it are represented in Fig. 11 .
The following proof verifies Theorem 11 by showing that a NS-C can be mapped into a tree by creating a node from every set in the NS-C.

Proof. We have to prove that $ ! v r 2 V such that j E ( v r ) j =0 ^ " v j 2 V , j  X  r , j E ( v j ) j = 1. Ab absurdo suppose that $ such that j E ( v j ) j &gt;1.If $ v r , v k 2 V such that j E ( that 9 R ; K 2CjS  X  R  X  X  0 ^S  X  K  X  X  0 but by the definition of NS-C we know that there is a set T 2C that is the common superset of all the sets in C , then 9 = J 2Cj J  X  T ^S  X  J  X  X  0.

If $ v j 2 V such that j E ( v j ) j &gt; 1 this means that $ K ^ J # L ) X  L \ K  X  J  X ^ X  L K _ K L  X )C is not a NS-C. h
Now we can prove the corresponding theorems for the INS-M which show how a tree can be mapped into an INS-C and vice versa.

The mapping between a tree and an INS-C reverses the idea described for the mapping of a tree into a NS-C; if a node is a lowing proof proves Theorem 12 .

Proof. Let us consider a family of subsets V V : V !C where the set of nodes V is its index set of the family and "
V v  X  C  X  v i  X  .

Let us prove Condition (4.3) of Definition 2 . Let v f g) 8 v j 2 V ; C  X  v r  X  # C  X  v j  X ) V v r # V v j .

Let us prove Condition (4.4) of Definition 2 . Ab absurdo suppose that 9 V  X  V v
This means that $ v h , v k , v l 2 V j (( C ( v h ) # C (
C ( v h ). $ v j 2 V j v j 2 ( C ( v l ) \ C ( v k )) ^ v j R ( C ( means that v k and v h must belong to the same branch of T ; we know that have v j as a common ancestor and v j R C ( v h ). This means that {
C  X  v l  X  X  X  ) d V  X  v l  X  &gt; 1 ) T is not a tree. h
Example 8. Let T =( V , E ) be a tree where V ={ v 1 , v 2 e ,
Let V V be a family, where V  X f V v 1 ; V v 2 ; V v f f that V V is an INS-C. The tree T = V , E and the family V Now we can prove Theorem 13 by showing how an INS-C C is mapped into a tree T =( V , E ).
Proof. We have to prove that ( $ ! v r 2 V such that j E ( such that, ( j E ( v r ) j =0 ^j E ( v k ) j =0) _ $ v j 2 V such that j E (
If 9 v r ; v k 2 V such that  X  X j E  X  v r  X j  X  0  X ^ X j E  X  v an INS-C.
 References
