 1. Introduction
Current harmonics generated by non-linear loads are causing great concern and have attracted special interests. The harmonics interfere with sensitive electronic equipment causing undesired power losses in electrical equipment. Array of problems are caused by harmonics such as overheating, frequent tripping of circuit breakers, frequent fuse blowing, capacitor failures, exces-sive neutral currents and power-metering inaccuracy. It is pre-requisite to compensate harmonics to avoid unwanted losses and maintain electrical equipments with IEEE: 519 standards. Active power filtering has been an effective way for harmonic compen-sation. It works basically in two steps: Harmonic estimation and elimination.

The harmonic components from the distorted signals are estimated and injected with the same magnitude but opposite phase into the system for its elimination.

To estimate harmonics, Artificial Neural Networks have been used with back propagation algorithm, ( Hartana and Richards, 1990 ). An analog neural method for harmonic isolation was presented by Pecheranin et al. (1994) which basically uses optimization technique and minimizes error. Also Dash et al. (1996) have presented a realization of linear combiner using an 2. Literature review
To date many harmonic estimation techniques have been identified and used. The most effective approaches among these algorithms are Neural Network based algorithms. Many studies were reported on these algorithms and thus, the literature essentially deals with Neural Network algorithms.

Also, the Particle Swarm Optimization algorithm deals with optimizing the results and is the one among recently used effective approaches for optimization. There are also hybrid approaches that combine both Neural and PSO algorithms, which serves more effective than when individually applied. The remaining of this review deals with PSO and hybrid combinations of Neural and PSO. 2.1. Adaptive neural networks (ANN) algorithms
Many algorithms are available to evaluate harmonics, of which the Fast Fourier Transforms (FFT) developed by Cooley and Tukey (1965) is widely used and this forms the basic harmonic estima-tion technique. During the initial stages, harmonic source mon-itoring and identification of harmonics using Neural Networks were described by Hartana and Richards (1990) . Then the process of harmonic detection was simplified and processing speed was improved by Pecheranin et al. (1994) . Dash et al. (1996) presented the adaptive tracking of harmonic components using Linear Adaptive Neuron Adaline model. The learning rule adopted was
Widrow X  X off learning rule. The adaptive neural network algo-rithm for harmonic estimation in active power filters , was proposed by Rukonuzzaman and Nakaoka (2001) . The concept of minimizing the mean square error by Least Mean square (LMS) or Widrow X  X off learning rule and thus moving decision bound-aries as far as possible from training patterns was made possible ( Vazquez and Salmeron, 2003 ). A multi-layer feed forward neural network trained with back propagation was proposed by Villalva et al. (2004) , these networks were able to adjust at each time step based on new input and target vectors. An improved on-line tracking scheme which combines fundamental frequency tracking with an Adaline based harmonic analyzer was introduced by
Shatshat et al. (2004) . The concept of optimizing the weight vector once and using it for online tracking of changes in amplitude and phase of fundamental and harmonic components in presence of noise was proposed by He and Xu (2008) . Recently
Luo et al. (2009) proposed a hybrid active power filter with an adaptive fuzzy dividing frequency control method. More recently
Radzi and Rahim (2009) proposed a two layer neural adaptive filter, which uses Widrow X  X off learning instead of normal single linear neuron model. A model predictive control strategy using neural networks is applied to the engine X  X  air/fuel ratio control in automotive engines with severe non-linear dynamics ( Zhai and
Yu, 2009 ).This model is adapted in an on-line mode to cope up with system uncertainty and time varying effects. An off-line and on-line learning direct adaptive neural controller for an unstable helicopter was proposed by Vijaya kumar et al. (2009) . The neural controller is designed to a track pitch rate command signal generated using the reference model. A constructive learning algorithm was employed to design a nearoptimal one-hidden layer neural network ( Meleiro et al., 2009 ). This model not only determines a proper number of hidden neurons but also the particular shape of the activation function for each node. 2.2. Particles swarm optimization (PSO) algorithms The idea of Particle Swarm Optimization was proposed by
Eberhart and Kennedy (1995) . A comparative analysis of PSO with genetic algorithm was made by Shi and Eberhart (1998) to prove of Adaline with PSO weight factor proposed by Shi and Eberhart (1998) is used for updating the weight vector along with the stable difference error equation. The weight vector is trained till it reaches minimum convergence. Finally harmonic estimation is performed with the final set of weight vector obtained after convergence. 3.1. Adaline algorithm (adaptive neural network algorithm)
The ANN approach adaptively isolates harmonics using Fourier linear combiner. The linear combiner is realized using a linear adaptive neural network called Adaline. Adaline has an input sequence, an output sequence and a desired response-signal. It also has a set of adjustable parameters called weight vector which are random generated initially ( Valluvan and Natarajan, 2008 ).
Weight vector of Adaline generates the Fourier co-efficients of the signal using a non-linear weight adjustment algorithm and a stable difference equation given by Eq. 1 ( Dash et al., 1996 ). The weight updating rule given by Eq. 2 does not incorporate the time factor, which means that the instant of iteration, called the iteration number, is not considered. e  X  k  X  X  y  X  k  X  y 4  X  k  X  X  1  X  parameter (Reduction factor); X ( k ) is input vector at time k .
The weight vector of Adaline is updated using Widrow X  X off delta rule as, w  X  k  X  1  X  X  w  X  k  X  X  a e  X  k  X  X  X  k  X  where, w ( k )  X  [ w 1 ( k ) y w 2 N ( k ) w 2 N  X  1 ( k ) w at time k .

The amplitude of harmonics is calculated further after error convergence, using the final updated weight vector. 3.2. Particle swarm optimization algorithm
In PSO algorithm, each particle keeps track of its own position and velocity in the problem space. The position and velocity of a particle are initially random generated. Then, at each iteration, the new positions and velocities of the particles are updated. The updating rule of PSO is given by Eq. 3 and it incorporates the instant of iteration as a time factor for update. Since its introduc-tion, many researches have been done to improve the original version of PSO.

Initially, Shi and Eberhart (1998) used linearly varying inertia weight over iteration and it is given as w  X  k  X  X  w min  X  iter max iter iter where, iter max is maximum number of iterations; iter is current iteration number; w min is minimum value of the inertia weight vector; w max is maximum value of the inertia weight vector.
This is referred to as Time-Varying Inertia Weight factor PSO (PSO-TVIW).

In the Time-Varying Acceleration Co-efficient PSO (PSO-TVAC) method ( Ko et al., 2009 ) the cognitive parameter and social parameter change according to, c  X  k  X  X  c 1min  X  c  X  k  X  X  c 2max  X 
The weight vector is updated using the combined ANN X  X SO rule and is given as w  X  k  X  1  X  X  w  X  k  X  X  iter max iter iter where, w ( k )  X  [ w 1 ( k ) y w 2 N ( k ) w 2 N  X  1 ( k ) w parameter (Reduction factor); X ( k ) is input vector at time k ; iter max is maximum number of iterations; iter is current iteration number.

After the convergence of tracking error, the harmonic ampli-tudes can be calculated from the final set of updated weight vectors. The amplitude and phase of N th harmonics are given by A  X  and f
N  X  tan 1 f w 0  X  2 N 1  X  = w 0  X  2 N  X g X  15  X  where, w 0 is the weight vector obtained after convergence.
This algorithm is very effective and accurate compared to normal Adaline algorithm. The error value of the stable difference error equation reduces after convergence when compared with original Adaline algorithm. The weight vector converges to the maximum value of adaptation and hence almost traces the harmonics as measured by FFT techniques. The rate of conver-gence is much faster when compared with FFT techniques providing an easier on-line measurement. The proposed algo-rithm thus provides a similar rate of convergence as that of
Adaline but with minimum error value. Hence it proves to be using a current transformer and then discretized into 50 samples at an interval of 400 m s with a complete cycle span of 20 ms. From the discrete data obtained at different sampling instances, the wave form model in Fig. 2 is simulated using Matlab. This non-linear load current serves as the input for adaptation from which harmonics are estimated and Total Harmonic Distortion (THD) is obtained.

To compare the effectiveness of the algorithm, harmonic isolation is done through both Adaline and ANN X  X SO algorithm.
Matlab code is written for both the algorithms and the results are compared. In ANN X  X SO, a training vector of 50 50 samples is formed. The number of rows of the training vector is chosen to be 50, so as to compute up to 25th harmonics order. The number of columns in training vector is chosen to be 50 to accommodate 50 samples taken over one cycle of 50 Hz. Error comparison for various learning rates for the first five error vector values are be 0.02 where minimum error convergence is obtained.
Initially weight vectors are random generated. The input along with the training vector is being trained to minimize error difference of the differential error equation and then to update the weight vector. The training process continues until the convergence of error to its least approximation towards zero.
The convergence graphs of the error vector and weight vector for the learning rate of 0.02 are represented in Figs. 3 and 4 . A similar convergence is obtained for learning rate of 0.04.

To show the improvement of ANN X  X SO over Adaline, compar-ison plots of error vector for learning rates of 0.02 and 0.04 are presented in Figs. 5 and 6 . For a of 0.02, Adaline algorithm starts its convergence at 3rd epoch and attains maximum convergence to a minimum error of 0.0069 by 20th epoch. The error stays thereafter at 0.0069 even up to 5000 epochs and more. Also in -3 -2 -1 0 1 2 3 Load Current (A)
Also in ANN X  X SO algorithm, the convergence starts at 3rd epoch but reaches its convergence to a minimum error of 0.0046 at 30th epoch as shown in Fig. 6 b.

For both the learning rates, an improvement of approximately 56% of error towards its convergence to its minimum is shown.
It can be inferred that ANN X  X SO converges more slowly and smoothly than Adaline which produces some oscillatory conver-gence. The reduction in error value in ANN X  X SO can also be clearly defined.

From the weight vector obtained after final convergence, the harmonics are calculated. Table 3 represents the comparison of estimated harmonics of both the algorithms with PQA from which
ANN X  X SO with a lower error percentage can be inferred. The overall error percentage of ANN X  X SO is 0.6294% whereas in
Adaline it is 0.7624%. This accounts for approximately 15% over-all improvement in the isolation of harmonics with faster and uniform convergence for on-line tracking. To determine the exactness of ANN X  X SO in isolating harmonics, both ANN X  X SO and Adaline algorithms are compared with standard Power
Quality Analyzer measurement of harmonics. The PQA model CA 8332 of Chauvin-Arnoux from which initial data for simulation are obtained adopts FFT technique for harmonic measurement and it is used for comparison. 5. FPGA implementation of ANN X  X SO algorithm
After validating the results through simulation, the algorithm is implemented on a Field Programmable Gate Array (FPGA) in real time. The real time PC loadcurrent wave form acquired from
PQA model CA 8332 of Chauvin-Arnoux used for implementation is shown in Fig. 7 .
 VHSIC Hardware Description Language (VHDL) coding in
ModelSim has been generated for implementation of ANN X  X SO algorithm on Spartan 3E FPGA. VHDL coding for Adaline algorithm is developed, implemented and compared with ANN X  X SO to prove the efficiency of the proposed algorithm. The implementa-tion of the algorithms on Spartan 3E FPGA was initially difficult due to memory constraints. Three modules for error vector, weight vector and amplitude are generated individually for both the algorithms and implemented. Training vector of 50 50 samples of pure sinusoidal wave form is provided.
Weight vectors are random generated initially. Load current waveform is discretized into 50 samples and this serves as an input for the algorithm. Both the algorithms are then trained for convergence. The error and weight vector modules update the error and weight vector after each iteration. The convergence graphs when plotted are similar to that obtained in simulation.
The error vector of both the algorithms obtained after convergence are arrayed and compared as in Table 4 . Adaline converges to a minimum error of 0.0069 at 30th epoch, comparatively ANN X  X SO converges to an error of 0.0030. This improves the error by approximately 56%. On considering the entire error vector, an average error of 0.0070 is obtained in
Adaline and 0.0035 in ANN X  X SO. An improvement of 50% of error on an average is obtained when implemented in real time.
The amplitude module captures the final set of weight vector obtained after convergence and calculates the amplitude of harmonics. To simplify the calculation of Total Harmonic Distor-tion (THD) only squares of amplitudes of harmonics are calcu-lated. The harmonic amplitudes are tabulated and compared with the results of PQA as shown in Table 5 . The overall error percentage of ANN X  X SO when compared with PQA is 15.88% and that of Adaline when compared with PQA is 19.25%. It is evident that, approximately 16.95% improvement is shown in
ANN X  X SO over Adaline in harmonic isolation. The proposed algorithm is thus validated in real time. 6. Conclusion Harmonics need to be effectively estimated for elimination. Only an effective estimation can lead to efficient elimination. References
