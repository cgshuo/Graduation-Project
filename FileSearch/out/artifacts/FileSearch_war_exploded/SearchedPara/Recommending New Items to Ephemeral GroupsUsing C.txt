 Group recommender systems help groups of users in finding appropriate items to be enjoyed together. Lots of activities, like watching TV or going to the restaurant, are intrinsically group-based, thus making the group recommendation prob-lem very relevant. In this paper we study ephemeral groups, i.e., groups where the members might be together for the first time. Recent approaches have tackled this issue intro-ducing complex models to be learned offline, making them unable to deal with new items; on the contrary, we propose a group recommender able to manage new items too. In more detail, our technique determines the preference of a group for an item by combining the individual preferences of the group members on the basis of their contextual influ-ence , where the contextual influence represents the ability of an individual, in a given situation, to direct the group X  X  decision. We conducted an extensive experimental evalua-tion on a TV dataset containing a log of viewings performed by real groups, showing how our approach outperforms the comparable techniques from the literature.
 Group recommendations; influence; context
Recommender systems suggest items to users [1], and are fundamental in all the countless scenarios where people need to be helped in choosing something. For instance, the users may need to choose a movie to watch at the cinema, a TV program, a restaurant for a dinner, or a book to read. In addition, it is clear that lots of such activities are inherently social, generally carried out by groups of users: indeed, peo-ple seldom go to the movies or watch TV on their own, and equally rarely eat out alone. Even the choice of a book may be a group activity, if this book is then to be discussed and analyzed by an (online) community. Last, but not least, touristic activities are often organized for groups, thus group recommendations may provide tour organizers with useful suggestions to compose the daily schedule. Hence the impor-tance of studying group recommender systems [27], taking into account the possibility of having multiple users involved in the item choices.

The literature on group recommender systems deals with two different kinds of groups: persistent and ephemeral [27]. Persistent groups have a significant history of activities to-gether, while ephemeral ones may be constituted by people together for the first time. Since for persistent groups a his-tory of past activities is available, in such a scenario classic recommendation techniques for individual users are employ-able, treating the whole group as one user. When ephemeral groups are considered, on the contrary, no group history is available, and therefore the group preferences must be com-puted on the basis of those known for the individual users composing the group. The aim of this work is tackling the more general scenario of ephemeral groups.

To generate ephemeral group recommendations, most ap-proaches propose aggregation functions deriving the pref-erences of the group by appropriately combining those of the component users, computed exploiting recommendation techniques for individuals. Sometimes this combination is performed using weights based on complex user and item models built from the available feedback provided by the users themselves. The necessity of building these models, however, makes the latter techniques unsuitable for the sce-narios characterized by many items which are new in the system, i.e., not associated with past feedback. Since in this work we want to study an approach applicable also to new items, we concentrate on aggregation functions allowing to take them into account. Note that the ability of dealing with new items is essential in several realms, think for instance of the TV domain: many TV programs, e.g. the movies, are often broadcast once and then not any more for a long time, and therefore cannot be associated with past user feedback.
Another interesting point [38] is that, when aggregating the preferences of the members of a group, not all the users should have the same weight: some users might indeed have a greater influence in determining the final decision. Con-sider for instance a family with parents and children in front of the TV: clearly, the parents may be prone to favor the chil-dren X  X  wishes in deciding the program to be watched, thus making the children more influential in the decision process. However, even the latter consideration may be debatable. Indeed, this behavior is likely in the early afternoon, when most children programs are available, while in the late af-ternoon many other kinds of programs might be chosen and thus the parents should be more influential, in order to ex-clude those programs that are inappropriate for children.
For this reason, in this work we propose a novel aggre-gation function, taking influence into account but consider-ing contextual influence , because influence weights may vary with respect to the situation, i.e., the context, that the group is currently living.

We consider a running example in the TV domain, with users watching TV programs possibly in groups. There are two possible contexts, i.e., daytime and night , and four users, i.e., Alice ( a ), Bob ( b ), Mark ( m ) and Susan ( s ). Alice has a very strong personality, and is willing to watch her fa-vorite programs in any case. On the contrary, Bob is partic-ularly interested in choosing the programs during daytime, but does not like to create problems in the choice during the evening. Finally, Mark and Susan are more permissive.
The paper is structured as follows. Section 2 presents the related work, while Section 3 explains our recommendation technique. Section 4 describes the experimental evaluation and, finally, Section 5 concludes the paper.
The problem of group recommendations has been widely studied in the last years, since the Polylens system [27] was proposed by O X  X onnor et al. in 2001. Recommendation techniques to groups, as mentioned in the introduction, can be divided into two categories: recommendations to persis-tent groups and to ephemeral groups. In the former case it is possible to assume the availability of feedback provided by the group as a whole, while in the latter one group feed-back is not available and the preferences of a group must be computed on the basis of those of its members.

Chen et al. [8] propose a recommendation technique ag-gregating the scores of the group members through a weight-ed average, where the weights are computed exploiting a ge-netic algorithm; the fitness function of the algorithm relies on known group preferences, so it is implementable only for persistent groups. Vildjiounaite et al. [34] in the TV domain consider the families as fixed groups, and build a classifier for each family. Seko et al. [29] compute the scores for the items to be recommended to a group exploiting the similari-ties with the items belonging to the group history. Hu et al. [19] devise a complex model based on restricted Boltzmann machines, learned starting from explicit ratings provided by the groups. We do not consider these approaches, because  X  as stated in the introduction  X  in this paper we set ourselves in the more general scenario of ephemeral groups.

Recommendations to ephemeral groups are performed com-posing the preferences of the group members by using aggre-gation functions, the most famous being average and least misery . The average [24, 36, 31, 4, 30, 6, 26, 7, 2, 12, 21, 17] is the simplest aggregation function: it computes the group preference for an item just as the arithmetic mean of those of the group members. Least misery [27, 24, 4, 30, 6, 26, 33, 18, 7, 12, 21, 17], on the contrary, does not maximize the average satisfaction, but tries to make every-one happy, choosing the items for which the lowest value among the preferences of the group members is the great-est. Other popular aggregation functions are the maximum satisfaction [24, 6, 26, 7, 12, 21], maximizing the greatest preference, and average without misery [24, 32, 12], com-puting an average but neglecting the items whose prefer-ence is below a certain threshold. Works [5, 16, 2] aggregate the group members X  preferences through a weighted average, where the weight represents the expertise, computed on the basis of the amount of activity performed by the user in the system. Amer-Yahia et al. [3] introduce an interesting function which, on the one hand, tries to maximize the sat-isfaction of the group components, but, on the other hand, also tries to minimize the disagreement among them. In the experimental section we carry out comparisons with these techniques. Also the approach of De Campos et al. [11], building a bayesian network and using it to learn both the individual preferences and the aggregation weights, is worth mentioning; this technique, however, needs the construction of a complex model including the items, and therefore can-not be used to recommend new items because these are not part of the model.

The importance of influence in group recommenders has first been noticed by Masthoff and Gatt [25]. They assume the presence of two kinds of influence: emotional contagion is the influence of the affective state of a user on the other group members, while conformity regards the tendency of a user to adapt to the choices of the others. These factors are incorporated in the group preference, and their values are derived from prior knowledge of the relationships among the group members. Quijano-Sanchez et al. [28] consider personality and trust to aggregate individual preferences: the personality factor assigns greater weights to the users with stronger personality, while the trust is used to modify the group members X  preferences towards those of the users in whom they trust. The personality factor is determined on the basis of psychological tests, while the trust requires social network information. Also Kompan and Bielikova [22] propose a group recommender taking into account the per-sonality, this time represented through a weighted graph in-dicating how the users influence each other; in this case the computation of the influence values requires the users to un-dergo psychological tests as well. Christensen and Schiaffino [9] incorporate in their formulas three social factors, named trust , social similarity and social centrality . The first de-pends on the level of acquaintance between the users and must be declared, while the second and the third rely on the activities in social networks. These approaches exploit social factors, but require to have prior knowledge of their values. On the contrary, our methodology computes influences only on the basis of training data.

Some approaches build complex models of users and items employed to compute both the individual preferences and the influence values to be used in the aggregation. Ye et al. [35] propose a probabilistic model learned with an ex-pectation-maximization procedure, while Liu et al. [23] and Yuan et al. [37] found their methodologies on the latent Dirichlet allocation. Finally, Kim and El Saddik [20] build a graph for each group containing users and items, and use random walks with restarts to compute affinities between users and items, and the influence of the users within the groups. These techniques are not suitable for new items, because they cannot be included in the learned model and thus cannot be recommended.

In this work we propose an aggregation function to com-pute group preferences starting from individual ones and exploiting the users X  influences in a way suitable also for new items. In addition, our influence values are computed relying only on training data, without the need of asking information to the users. Finally, to the best of our knowl-edge, this is the first proposal defining the influence in a context-aware manner.
This section describes our proposed group recommenda-tion methodology. The methodology starts with the individ-ual preferences of the users for the items, and provides tech-niques to aggregate them to obtain group preferences. We set ourselves in the more general framework of context-aware recommender systems, and so suppose that the preference of a user for an item may vary according to the context. In addition, we suppose to know also regular, context-unaware preferences of the users for the items. Users X  contextual pref-erences can be computed through an existing context-aware recommender system for individual users, while to compute context-unaware preferences a traditional one may be em-ployed. We also suppose to have a log recording the history of the items chosen in the past by groups of users. To be more general, we assume that the set of the available items may change depending on the time instant in which it is re-quested. This is the case of the TV setting of the running example, but also of other scenarios like event recommenda-tions or recommending movies in theaters now.
 Problem statement . Let U be a set of users, I a set of items, C a set of contexts. Supposing that the following data are known: Then, given a target group G  X   X  ( U ) , a context c  X  C and a time instant t , the problem of group recommendation is defined as recommending a list of K items from those in I which are available at time instant t that users in G may be interested in when in context c .
 Example 1 (Log). Table 1 shows a possible log in our TV running example. Each row indicates the time instant, the context, the composition of the group and the chosen item. Since in our scenario, in a given time instant, only a subset of the items is available, i.e., the programs that are on the air, for convenience each row reports also the items that are available in the corresponding time instant.
The group preference for an item is determined by aggre-gating the individual preferences of the group members on the basis of their influence. The influence of a given user u is derived by comparing the behavior of u when alone repre-sented by his/her individual preferences with his/her behav-ior when in groups represented by the interactions contained in the log L . In more detail, the influence of u evaluates how many times the groups containing u have selected one of his/her favorite items. Let T opK ( u, c, t ) be the list of the K preferred items of user u in context c according to the values of score ctx ( u, i, c ) for the various i  X  I available at instant t ; in the TV domain of our running example, the T opK at a certain time instant must include just programs on the air at that time instant. The contextual influence is defined as follows:
The value of inf l ctx ( u, c ) quantifies the ability of user u to direct the group X  X  decision towards his/her own tastes while in context c .

Example 2 (Contextual influence). Suppose we com-pute the influences using K=1 in Equation (1) , i.e., using top-1 lists, and suppose that at the time instants of Example 1 the programs preferred by the users are the following: The contextual influence computations for users Alice, Bob and Mark are as follows: inf l ctx ( a, daytime ) = 2 / 3 = 0 . 667 inf l ctx ( b, daytime ) = 2 / 2 = 1 inf l ctx ( m, daytime ) = 1 / 3 = 0 . 333 inf l ctx ( a, night ) = 2 / 2 = 1 inf l ctx ( b, night ) = 1 / 3 = 0 . 333 The value of inf l ctx ( m, night ) cannot be computed, because Mark provided no feedback in the context night .

The context-unaware influence of a user can be computed as the context-aware one, but considering the whole log in-stead of the contextual:
Example 3 (Non-contextual influence). The non-contextual influence is a single value for each user, and is computed exploiting the whole log: inf luence no ctx ( a ) = 4 / 5 = 0 . 8 inf luence no ctx ( b ) = 3 / 5 = 0 . 6 inf luence no ctx ( m ) = 1 / 3 = 0 . 333
Given a group G  X   X  ( U ), its preference score ctx ( G, i, c ) for i  X  I in the context c  X  C is computed as the mean of the preferences of its members weighted on the basis of each member X  X  influence in context c :
If the number of contexts is high, it may well happen that some users are not associated with feedback in some contexts. In order to deal with such cases, it is possible to compute also a non-contextual score for the items:
Algorithm 1 summarizes the way we compute the top-K list of items preferred by a certain group G in a context c at time instant t . If all the members of G have provided feedback in context c , then context-aware scores are com-puted using Equation (3); otherwise, a non-contextual score is obtained using Equation (4).

Note that a first alternative to determine the group pref-erences for contexts when some of the group members have not provided feedback was to apply Equation (3) anyway, in-serting non-contextual values of preference and influence just for those users for whom the contextual ones are not known , thus mixing context-aware and context-unaware quantities in the computation. However, this strategy, which  X  X lends X  values measured on different subsets of the log, showed a bad behavior in the experiments. We then did a manual check, sampling users from our dataset and controlling how much their influence varies according to context, and how far these values are from their non-contextual influence. Often, non-contextual influence turned out to be quite distant from the contextual one, thus we explain this somehow unexpected behavior with the fact that putting together contextual and non-contextual influences creates a sort of  X  X nbalanced sit-uation X  among the members of the group, which reflects re-ality worse than keeping the weights uniform.

As a consequence, we decided to adopt the technique de-scribed in Algorithm 1. 1
Example 4 (Score computation). Suppose that at in-stant t 8 , during daytime, a group composed of Bob and Mark is watching TV, and it is needed to recommend one program among the available p 22 , p 23 and p 24 . Note that this group is never recorded in the log: it is the first time that these two users watch TV together without other people. The follow-ing individual preference values are given: score ctx(b, p
Please notice that, in scenarios where efficiency is critical, the online top-K computation, where each item X  X  score is derived aggregating the preferences of the single users, may be executed by using fast algorithms from the literature, like the Threshold Algorithm proposed by Fagin et al. [15]. Such algorithms would derive the top-K by applying Equations (3) and (4) to just a subset of the items.
 Algorithm 1 Top-K computation for a group of users 2: if all users in G provided feedback in context c then 3: USE CONTEXT = true 4: else 5: USE CONTEXT = false 6: end if 7: for all i  X  X  do 8: if USE CONTEXT then 9: score(G, i, c) = score ctx(G, i, c) 10: else 11: score(G, i, c) = score no ctx(G, i) 12: end if 13: end for 14: return the K items i  X  X  with the greatest values of 15: score(G, i, c), among those available at time t 16: end function daytime) = 0.8, score ctx(b, p 23 , daytime) = 0.2, score -ctx(b, p 24 , daytime) = 0.3, score ctx(m, p 22 , daytime) = 0.2, score ctx(m, p 23 , daytime) = 0.5, score ctx(m, p 24 , daytime) = 0.9. The group scores for the three available items are computed as weighted averages. Since both the users have provided feedback in the context daytime Algorithm 1 pre-scribes to employ Equation (3) , where we use the influence values computed in Example 2: Therefore, the system recommends p 22 to the group. Note that the choice is directed by the heavier influence of Bob.
Suppose now that at instant t 9 , in the context night , a group with Alice, Bob and Mark is watching TV and needs one recommendation, choosing among p 25 , p 26 and p 27 . Note that Mark provided no feedback in the context night , and therefore it is not possible to utilize contextual preferences and influences. As described in Algorithm 1, non-contextual preferences and influences are used. The following non-contextual preferences are given: score no ctx(a, p 25 score no ctx(a, p 26 )=0.1, score no ctx(a, p 27 )=0.6, score -no ctx(b, p 25 )=0.2, score no ctx(b, p 26 )= 0.9, score no ctx(b, p 27 )=0.3, score no ctx(m, p 25 )=0.3, score no ctx(m, p 0.7, score no ctx(m, p 27 )=0.5. The group scores for the three available items are computed using Equation (4) and the non-contextual influences of Example 3: Therefore, the system recommends program p 25 to the group.
Our methodology was tested using a dataset in the TV domain, containing implicit feedback and context informa-tion. The TV scenario is actually a perfect setting for our approach: in fact, watching TV is inherently a group activ-ity. Moreover, many kinds of TV programs  X  like the movies  X  are broadcast once and then not anymore for a long time, thus making the new item problem extremely relevant.
We remark that the dataset we employ contains implicit feedback by real groups constituted by people really watch-ing TV together. Several approaches from the literature (e.g., [27, 4]), on the contrary, use datasets containing just individual feedback, like Movielens, and then build groups artificially. We found two publicly available datasets envis-aging feedback by real groups: Meetup, employed in [23], and Plancast, employed in [37]. Unfortunately, both con-tain just group feedback, and this makes them unsuitable to test our methodology. The influence computation, indeed, is based on a comparison between the behavior of the users when alone and when in groups, and therefore does need group feedback but requires individual feedback as well.
The preference functions adopted to determine the con-textual and non-contextual scores of the items for the sin-gle users in the TV dataset are those recently proposed in [10], which represents a state-of-the-art technique to gener-ate TV program recommendations for individual users rely-ing on implicit feedback. The recommendation methodology defined in [10] is content-based, thus allowing to compute users X  preference values also for new items.

Note that, as underlined in the running example, in this special domain all the recommendation lists are generated, rather than as subsets of the whole set of items (i.e., available TV programs), just as subsets of the programs aired at the time instant in which the recommendation is required.
The employed dataset contains TV viewing information related to 7921 users and 119 channels, broadcast both over the air and by satellite. The dataset is composed of an elec-tronic program guide (EPG) containing the description of 21194 distinct programs, and a log containing both individ-ual and group viewings performed by the users. The at-tributes available for each program in the EPG are its genre and the channel on which it is transmitted.

The log spans from December 3rd, 2013 to March 1st, 2014 and contains 4968231 entries, among which we retained just the syntonizations longer than three minutes. 3519167 view-ings are performed by individual users, and are those used to feed the methodology [10] for the computation of the in-dividual preferences of the group members. The remaining 1449064 viewings envisage more than one person. Each log row specifies the identifier of the user and that of the pro-gram he/she watched, along with start time and end time. Start and end times were employed to derive the day of the week and the time slot, which are the context dimensions considered in the experiments; the available values for the time slot are shown in Table 2.

The group viewings were split into a training set, including the syntonizations between December 3rd, 2013 and Febru-ary 15th, 2014 (1210316 entries), and a test set, containing the remaining ones (238748 entries). The former was used as the log L in input to the formulas proposed in this paper, while the latter was employed to assess the quality of the recommendations.
The performance of our recommendation algorithm was evaluated using Recall@K , describing the number of test items included in recommendation lists of length K com-puted at the instant in which the viewing of the test items started and in the context in which they were watched.
More formally, let v be a program view in the test set, v the start time of the view, v G the group of users that watched the program, v i the program watched and v c the context in which the view took place. T opK ( G, c, t ) indicates the set of top-K items for the group G in context c among those on the air at time instant t , determined using the recommenda-tion methodology to be evaluated. Recall@K is computed as follows:
We executed experiments for K=1, K=2 and K=3.
The methodology introduced in this paper, from now on dubbed CtxInfl , was compared with several other techniques, among those presented in Section 2 which allow to recom-mend new items to ephemeral groups:  X  Average (AVG)  X  Least misery (LM)  X  Maximum satisfaction (MS)  X  The approach of [3], taking into account the disagree- X  Weighted average using the expertise, where the exper-
In addition, our methodology was compared with a ver-sion of itself exploiting only non-contextual influences, i.e., computing influences always using Equation (2); this ap-proach is named Infl . Such a comparison is important to verify whether the usage of the context to model the influ-ence may actually provide a performance gain.

Besides the evaluation on the whole the test set, we also executed experiments considering different subsets of the test items on the basis of the group size and heterogeneity. About the group sizes, we measured the recall related to the groups containing two (192378 test items), three (35216 test items), four (9739 test items) and five (1151 test items) members. The heterogeneity of the group was measured using the Spearman X  X  footrule distance with location pa-rameter ` [14] between top-K lists 2 , employing K = 3 and ` = K + 1. The distance was measured between the top-3 lists of favorite items of all the pairs of group members and then averaged. The values of this distance range from 0 if the top-3 lists of the users contain the same items identically ordered, to 12 if the top-3 lists of the users are completely disjoint. We measured the recall related to the groups with average distance h such that h  X  4 (46935 test items), 4 &lt; h  X  8 (99333 test items), and h &gt; 8 (92480 test items).
The Spearman X  X  footrule distance is the L 1 distance be-tween two permutations of the elements of a domain. The Spearman X  X  footrule distance with location parameter ` is a variation allowing to deal with top-K lists, where all the elements of the domain not included in the top-K list are placed by default at position ` .
Finally, in Section 3 we have explained that CtxInfl uses non-contextual preferences and influences for the groups con-taining at least one member whose feedback in the context of interest is unknown. As a consequence, CtxInfl and Infl apply exactly the same formulas on all the test items v such that at least one user in v G provided no feedback in the con-text v c , thus making scarcely significant the comparison of CtxInfl and Infl on these items. Therefore, to better analyze the relevance of the context in influence modeling we com-pared CtxInfl and Infl also on further restrictions of the test sets listed above, containing just the test items v such that all the users in v G provided feedback in the context v c these test items, CtxInfl never executes the ELSE branch at Line 10 of Algorithm 1. The test sets obtained through this further restriction contain about 3/4 test items with respect to the original ones.
In this subsection we present in tabular form the results obtained in the experiments. Tables 3, 4 and 5 show, re-spectively, Recall@1, Recall@2 and Recall@3, expressed in percentage, measured on the whole test set and on the test sets restricted, as explained above, on the basis of the group size and heterogeneity. Table 6, on the other hand, com-pares only CtxInfl and Infl showing Recall@1, Recall@2 and Recall@3 on the test sets further restricted by removing the test items v such that at least one user in v G did not provide feedback in the context v c . The tables report on the rows the test set composition, and on the columns the employed technique. Our algorithm CtxInfl and its variant Infl were run setting K=1 in Equations (1) and (2), since this is the value achieving the best results.
In the following the results reported in the tables are an-alyzed in detail. Subsection 4.5.1 focuses on the comparison of CtxInfl with the competitors from the literature, while Subsection 4.5.2 examines the differences between CtxInfl and its non-contextual variant.
The comparison starts with the whole test set, and then considers those derived on the basis of the group size and the group heterogeneity.

The measured recall values highlight how our strategy (CtxInfl) dominates its competitors for all the experimented lengths of the recommendation list. It is also possible to no-tice that, among the other approaches, the best-performing one is EXP, and this suggests the goodness of the strategies relying on a weighted average with respect to plain average, least misery, maximum satisfaction, and also the approach of [3] taking disagreement into account. Another aspect that can be noticed from the results is that the difference between our methodology and the baselines is larger when recom-mending few items: 2.81% for Recall@1, 2.29% for Recall@2 and 1.81% for Recall@3. This happens because many users watch just a limited number of channels, and therefore even simple strategies are able to identify the proper program in lists containing more items.

In these experiments CtxInfl is also the best one, and its main competitor in most cases remains EXP. It is immedi-ately evident that the advantage obtained by CtxInfl grows when the group size is bigger: considering Recall@1, the dif-ference is 2.43% when the group size is 2, 4.31% when the group size is 3, 4.47% when the group size is 4, and 5.65% when the group size is 5. This result is easily interpreted: when groups are larger social factors are more important.
Once again, CtxInfl is the leading technique and EXP the second one. The first evidence is that lower heterogeneity corresponds to higher recall; therefore, as it is intuitive, rec-ommending to homogeneous groups is a simpler problem. Moreover, the gain brought by CtxInfl with respect to EXP grows with the heterogeneity of the groups: considering Re-call@1, the gain is 1.84% for h  X  4, 2.43% for 4 &lt; h  X  8 and 3.68% for h &gt; 8. Also this outcome is very intuitive: if the group is homogeneous the members have the same tastes, and therefore it is not important who are the most influencing ones.
The results clearly show that adding the context to the influence provides performance improvements, for all the ex-perimented test sets and lengths of the recommendation list. The improvements brought by CtxInfl with respect to Infl are more evident in the results shown in Table 6 than on those shown in Tables 3, 4 and 5, because the former con-sider just the test items on which the two methodologies ap-ply different formulas. In more detail, in Table 6 we observe that the gain seems to be bigger when the recommendation lists are shorter: considering all the test items v such that all the members of v G provided feedback in the context v the benefit provided by the context is 1.68% for Recall@1, 1.48% for Recall@2 and 1.20% for Recall@3. In addition, the performance improvement grows with group heterogeneity: considering Recall@1, the gain is 0.56% for h  X  4, 1.65% for 4 &lt; h  X  8 and 2.26% for h &gt; 8.
To validate the statistical significance of the accuracy im-provement provided by our algorithm, we used McNemar X  X  test [13], comparing CtxInfl with the other experimented algorithms. The statistical test aims at verifying that the performance differences between two approaches are signifi-cant and not just due to chance.

McNemar X  X  test was executed considering the whole test set for Recall@1, Recall@2 and Recall@3. Table 7 shows the values of the McNemar X  X  test statistic obtained by compar-ing CtxInfl with its competitors: the greater the value of the statistic, the more significant the results. The measured values are very high, corresponding to p-values extremely close to 0 and thus providing strong evidence for rejecting the hypothesis of no improvement. Note that a p-value of 0.05 corresponds to a value 3.8415 of the test statistic.
The evaluation assessed the quality of the group recom-mendation technique proposed in this paper using a dataset in the TV domain, a domain particularly suitable to carry the context v c Table 7: Values of the McNemar X  X  test statistic out this evaluation, because we are interested in new items and in such a domain most of the items are new. The exper-iments proved that our algorithm outperforms the existing approaches in terms of recall and, in more detail, the perfor-mance gain grows with the size and the heterogeneity of the group. The experiments showed also the relevance of em-ploying the context in the influence computation. Finally, the significance of the improvements was confirmed through a statistical test.
This paper has studied a group recommendation method-ology for ephemeral groups, able to recommend also items that are new in the system. The proposed approach derives group preferences by aggregating individual ones relying on the contextual influence, that is the ability of a user, in a given situation, to direct the group X  X  decision. The influence values are determined exclusively from log data, without asking information from the users. The effectiveness of the proposed approach has been proven through experiments on a dataset in the TV domain, envisaging real groups.
Interesting developments of the present work regard the analysis of novelty and serendipity problems for group rec-ommendations.
 This research has been partially supported by the IT2Rail project funded by European Union X  X  Horizon 2020 research and innovation program under grant agreement No: 636078, and by the Italian project SHELL CTN01 00128 111357.
