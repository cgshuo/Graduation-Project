 Previous work on Chinese Semantic Role La-beling (SRL) mainly focused on how to imple-ment SRL methods which are successful on En-glish. Similar to English, parsing is a standard pre-processing for Chinese SRL. Many features are extracted to represent constituents in the input parses (Sun and Jurafsky, 2004; Xue, 2008; Ding and Chang, 2008). By using these features, se-mantic classifiers are trained to predict whether a constituent fills a semantic role. Developing fea-tures that capture the right kind of information en-coded in the input parses has been shown crucial to advancing the state-of-the-art. Though there has been some work on feature design in Chinese SRL, information encoded in the syntactic trees is not fully exploited and requires more research ef-fort. In this paper, we propose a set of additional features, some of which are designed to better cap-ture structural information of sub-trees in a given parse. With help of these new features, our sys-tem achieves 93.49 F-measure with hand-crafted parses. Comparison with the best reported results, 92.0 (Xue, 2008), shows that these features yield a significant improvement of the state-of-the-art.
We further analyze the effect of syntactic pars-ing in Chinese SRL. The main effect of parsing in SRL is two-fold. First, grouping words into constituents, parsing helps to find argument candi-dates. Second, parsers provide semantic classifiers plenty of syntactic information, not to only recog-nize arguments from all candidate constituents but also to classify their detailed semantic types. We empirically analyze each effect in turn. We also give some preliminary linguistic explanations for the phenomena. The Chinese PropBank (CPB) is a semantic anno-tation for the syntactic trees of the Chinese Tree-Bank (CTB). The arguments of a predicate are la-beled with a contiguous sequence of integers, in the form of A N ( N is a natural number); the ad-juncts are annotated as such with the label AM followed by a secondary tag that represents the se-mantic classification of the adjunct. The assign-ment of semantic roles is illustrated in Figure 1, where the predicate is the verb  X   X   X  /investigate X . E.g., the NP  X   X   X   X   X  /the cause of the accident X  is labeled as A1 , meaning that it is the Patient .
In previous research, SRL methods that are suc-cessful on English are adopted to resolve Chinese SRL (Sun and Jurafsky, 2004; Xue, 2008; Ding and Chang, 2008, 2009; Sun et al., 2009; Sun, 2010). Xue (2008) produced complete and sys-tematic research on full parsing based methods. Figure 1: An example sentence: The police are thoroughly investigating the cause of the accident . Their method divided SRL into three sub-tasks: 1) pruning with a heuristic rule, 2) Argument Identi-fication (AI) to recognize arguments, and 3) Se-mantic Role Classification (SRC) to predict se-mantic types. The main two sub-tasks, AI and SRC, are formulated as two classification prob-lems. Ding and Chang (2008) divided SRC into two sub-tasks in sequence: Each argument should first be determined whether it is a core argument or an adjunct, and then be classified into fine-grained categories. However, delicately designed features are more important and our experiments suggest that by using rich features, a better SRC solver can be directly trained without using hierarchical architecture. There are also some attempts at re-laxing the necessity of using full syntactic parses, and semantic chunking methods have been intro-duced by (Sun et al., 2009; Sun, 2010; Ding and Chang, 2009). 2.1 Our System We implement a three-stage (i.e. pruning, AI and SRC) SRL system. In the pruning step, our sys-tem keeps all constituents (except punctuations) that c-command 1 current predicate in focus as ar-gument candidates. In the AI step, a lot of syntac-tic features are extracted to distinguish argument and non-argument. In other words, a binary classi-fier is trained to classify each argument candidate as either an argument or not. Finally, a multi-class classifier is trained to label each argument recog-nized in the former stage with a specific semantic role label. In both AI and SRC, the main job is to select strong syntactic features. A majority of features used in our system are a combination of features described in (Xue, 2008; Ding and Chang, 2008) as well as the word for-mation and coarse frame features introduced in (Sun et al., 2009), the c-command thread fea-tures proposed in (Sun et al., 2008). We give a brief description of features used in previous work, but explain new features in details. For more information, readers can refer to relevant papers and our source codes 2 that are well com-mented. To conveniently illustrate, we denote a candidate constituent c k with a fixed context w word of c k , and denote predicate in focus with predicate in focus. 3.1 Baseline Features The following features are introduced in previous Chinese SRL systems. We use them as baseline. Word content of w v , w h , w i , w j and w i + w j ; POS tag of w v , w h . subcategorization frame , verb class of w v ; position , phrase type c k , path from c k to w v (from (Xue, 2008; Ding and Chang, 2008))
First character , last character and word length of w v , first character + length , last character + word length , first character + position , last charac-ter + position , coarse frame , frame + w v , frame + left character , frame + verb class , frame + c k (from (Sun et al., 2009)).

Head word POS , head word of PP phrases, cat-egory of c k  X  X  lift and right siblings, CFG rewrite rule that expands c k and c k  X  X  parent (from (Ding and Chang, 2008)). 3.2 New Word Features We introduce some new features which can be extracted without syntactic structure. We denote them as word features. They include: w Length of c k : how many words are there in c k .
Word before  X  X C X  : If the POS of w j is  X  X C X  (localizer), we use w j  X  1 and its POS tag as two new features.

NT : Does c k contain a word with POS  X  X T X  (temporal noun)?
Combination features : w i  X  X  POS+ w j  X  X  POS, w v + Position 3.3 New Syntactic Features Taking complex syntax trees as inputs, the clas-sifiers should characterize their structural proper-ties. We put forward a number of new features to encode the structural information.

Category of c k  X  X  parent; head word and POS of head word of parent, left sibling and right sibling of c k .

Lexicalized Rewrite rules : Conjuction of rewrite rule and head word of its corresponding RHS. These features of candidate (lrw-c) and its parent (lrw-p) are used. For example, this lrw-c feature of the NP  X   X   X   X   X   X  in Figure 1 is N P  X  N N + N N (  X   X  ) .

Partial Path : Path from the c k or w v to the low-est common ancestor of c k and w v . One path fea-ture, hence, is divided into left path and right path .
Clustered Path : We use the manually created clusters (see (Sun and Sui, 2009)) of categories of all nodes in the path (cpath) and right path .
C-commander thread between c k and w v (cct): (proposed by (Sun et al., 2008)). For example, this feature of the NP  X   X   X   X  in Figure 1 is N P + ADV P + ADV P + V V .

Head Trace : The sequential container of the head down upon the phrase (from (Sun and Sui, 2009)). We design two kinds of traces (htr-p, htr-w): one uses POS of the head word; the other uses the head word word itself. E.g., the head word of  X   X   X   X  is  X   X   X   X  therefore these feature of this NP are NP  X  NN and NP  X   X   X  .

Combination features : verb class + c k , w h + w v , w h + Position , w h + w v + Position , path + w v , w h + right path , w v + left path , frame + w v + w h , and w v +cct. 4.1 Experimental Setting To facilitate comparison with previous work, we use CPB 1.0 and CTB 5.0, the same data set-ting with (Xue, 2008). The data is divided into three parts: files from 081 to 899 are used as training set; files from 041 to 080 as develop-ment set; files from 001 to 040, and 900 to 931 as test set. Nearly all previous research on con-stituency based SRL evaluation use this setting, also including (Ding and Chang, 2008, 2009; Sun et al., 2009; Sun, 2010). All parsing and SRL ex-periments use this data setting. To resolve clas-sification problems, we use a linear SVM classi-fier SVM lin 3 , along with One-Vs-All approach for multi-class classification. To evaluate SRL with automatic parsing, we use a state-of-the-art parser, Bikel parser 4 (Bikel, 2004). We use gold segmen-tation and POS as input to the Bikel parser and use it parsing results as input to our SRL system. The overall LP/LR/F performance of Bikel parser is 79.98%/82.95%/81.43. 4.2 Overall Performance Table 1 summarizes precision, recall and F-measure of AI, SRC and the whole task (AI+SRC) of our system respectively. The forth line is the best published SRC performance reported in (Ding and Chang, 2008), and the sixth line is the best SRL performance reported in (Xue, 2008). Other lines show the performance of our system. These results indicate a significant improvement over previous systems due to the new features. Table 1: SRL performance on the test data with gold standard parses. 4.3 Two-fold Effect of Parsing in SRL The effect of parsing in SRL is two-fold. On the one hand, SRL systems should group words as ar-gument candidates, which are also constituents in a given sentence. Full parsing provides bound-ary information of all constituents. As arguments should c-command the predicate, a full parser can further prune a majority of useless constituents. In other words, parsing can effectively supply SRL with argument candidates. Unfortunately, it is very hard to rightly produce full parses for Chi-nese text. On the other hand, given a constituent, SRL systems should identify whether it is an argu-ment and further predict detailed semantic types if Table 2: Classification perfromance on develop-ment data. In the Feat column, W means word features; W+S means word and syntactic feautres. it is an argument. For the two classification prob-lems, parsing can provide complex syntactic infor-mation such as path features. 4.3.1 The Effect of Parsing in AI In AI, full parsing is very important for both grouping words and classification. Table 2 sum-marizes relative experimental results. Line 2 is the AI performance when gold candidate boundaries and word features are used; Line 3 is the perfor-mance with additional syntactic features. Line 4 shows the performance by using automatic parses generated by Bikel parser. We can see that: 1) word features only cannot train good classifiers to identify arguments; 2) it is very easy to recognize arguments with good enough syntactic parses; 3) there is a severe performance decline when auto-matic parses are used. The third observation is a similar conclusion in English SRL. However this problem in Chinese is much more serious due to the state-of-the-art of Chinese parsing.

Information theoretic criteria are popular cri-teria in variable selection (Guyon and Elisse-eff, 2003). This paper uses empirical mutual information between each variable and the tar-roughly rank the importance of features. Table 3 shows the ten most useful features in AI. We can see that the most important features all based on full parsing information. Nine of these top 10 use-ful features are our new features.
 Table 3: Top 10 useful features for AI.  X  means word features . 4.3.2 The Effect of Parsing in SRC The second block in Table 2 summarizes the SRC performance with gold argument boundaries. Line 5 is the accuracy when word features are used; Line 6 is the accuracy when additional syntactic features are added; The last row is the accuracy when syntactic features used are extracted from automatic parses ( Bikel+Gold ). We can see that different from AI, word features only can train reasonable good semantic classifiers. The com-parison between Line 5 and 7 suggests that with parsing errors, automatic parsed syntactic features cause noise to the semantic role classifiers. 4.4 Why Word Features Are Effective for Table 4 shows the ten most useful features in SRC. We can see that two of these ten features are word features (denoted by  X  ). Namely, word features play a more important role in SRC than in AI. Though the other eight features are based on full parsing, four of them (denoted by  X  ) use the head word which can be well approximated by word features, according to some language spe-cific properties. The head rules described in (Sun and Jurafsky, 2004) are very popular in Chinese parsing research, such as in (Duan et al., 2007; Zhang and Clark, 2008). From these head rules, we can see that head words of most phrases in Chinese are located at the first or the last position. We implement these rules on Chinese Tree Bank and find that 84.12% 5 nodes realize their heads as either their first or last word. Head position sug-gests that boundary words are good approximation of head word features. If head words have good approximation word features, then it is not strange that the four features denoted by  X  can be effec-tively represented by word features. Similar with feature effect in AI, most of most useful features in SRC are our new features. This paper proposes an additional set of features to improve Chinese SRL. These new features yield a significant improvement over the best published performance. We further analyze the effect of parsing in Chinese SRL, and linguistically explain some phenomena. We found that (1) full syntactic information playes an essential role only in AI and that (2) due to the head word position distribution, SRC is easy to resolve in Chinese SRL.
 The author is funded both by German Academic Exchange Service (DAAD) and German Research Center for Artificial Intelligence (DFKI).

The author would like to thank the anonymous reviewers for their helpful comments.
 Daniel M. Bikel. 2004. A distributional analysis of a lexicalized statistical parsing model. In
Dekang Lin and Dekai Wu, editors, Proceed-ings of EMNLP 2004 , pages 182 X 189. Associa-tion for Computational Linguistics, Barcelona, Spain.
 Weiwei Ding and Baobao Chang. 2008. Improv-ing Chinese semantic role classification with hi-erarchical feature selection strategy. In Pro-ceedings of the EMNLP 2008 , pages 324 X  333. Association for Computational Linguis-tics, Honolulu, Hawaii.
 Weiwei Ding and Baobao Chang. 2009. Fast se-mantic role labeling for Chinese based on se-mantic chunking. In ICCPOL  X 09: Proceed-ings of the 22nd International Conference on Computer Processing of Oriental Languages.
Language Technology for the Knowledge-based Economy , pages 79 X 90. Springer-Verlag, Berlin, Heidelberg.
 Xiangyu Duan, Jun Zhao, and Bo Xu. 2007.
Probabilistic models for action-based Chinese dependency parsing. In ECML  X 07: Pro-ceedings of the 18th European conference on Machine Learning , pages 559 X 566. Springer-Verlag, Berlin, Heidelberg.
 Isabelle Guyon and Andr  X  e Elisseeff. 2003. An introduction to variable and feature selec-tion. Journal of Machine Learning Research , 3:1157 X 1182.
 Honglin Sun and Daniel Jurafsky. 2004. Shallow semantc parsing of Chinese. In Daniel Marcu Susan Dumais and Salim Roukos, editors, HLT-NAACL 2004: Main Proceedings .
 Weiwei Sun. 2010. Semantics-driven shallow parsing for Chinese semantic role labeling. In Proceedings of the ACL 2010 .
 Weiwei Sun and Zhifang Sui. 2009. Chinese func-tion tag labeling. In Proceedings of the 23rd
Pacific Asia Conference on Language, Informa-tion and Computation . Hong Kong.
 Weiwei Sun, Zhifang Sui, and Haifeng Wang. 2008. Prediction of maximal projection for se-mantic role labeling. In Proceedings of the 22nd International Conference on Computa-tional Linguistics .
 Weiwei Sun, Zhifang Sui, Meng Wang, and Xin
Wang. 2009. Chinese semantic role labeling with shallow parsing. In Proceedings of the 2009 Conference on Empirical Methods in Nat-ural Language Processing , pages 1475 X 1483.
Association for Computational Linguistics, Sin-gapore.
 Nianwen Xue. 2008. Labeling Chinese predi-cates with semantic roles. Comput. Linguist. , 34(2):225 X 255.
 Yue Zhang and Stephen Clark. 2008. A tale of two parsers: Investigating and combining graph-based and transition-based dependency parsing.
In Proceedings of the 2008 Conference on Em-pirical Methods in Natural Language Process-ing , pages 562 X 571. Association for Computa-tional Linguistics, Honolulu, Hawaii.
