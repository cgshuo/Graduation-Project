 Applications of semantic network and knowledge bases (KB) are often required to organize and manage data (e.g., webpages, musices and images) from a wide variety of sources regarding the knowled ge representation in some specific tax-onomies. Most existing taxonomies are manually created at great deal of time and labor consuming, and it is not always possible to manually maintain these existing taxonomies for rapidly changing or new coming domains. Therefore, such kinds of taxonomies are rarely complete that they fail to satisfy practical applications. Taxonomic relation extraction is a fundamental step toward auto-matic taxonomy construction, which is a practical solution to build a semantic web or knowledge ontology.

In general, taxonomic relation extraction based on an existing taxonomy can be treated as term organization , in which the goal is to posit term can-didates in the existing taxonomy. The research issue in term organization is demonstrated by the following example in the agricultural taxonomic relation extraction.

Suppose that the term candidate  X  X lmond X  is extracted from an existing tax-onomy and the three hypernym relation triplets are extracted from Wikipedia trees &gt; ). From these three relation triplets, the corresponding taxonomic term candidates of the term candidate ( X  X lmond X ) are  X  X lant products X ,  X  X uts X  and  X  X rees X . Here, taxonomic terms are the nodes in the existing taxonomy, term candidates are the nodes which will be posited to the existing taxonomy, and taxonomic term candidates refer to the terms which are the potential parent nodes (hypernyms) for the given term candidate.

Among these three taxonomic term candidates, the best one is  X  X uts X  in the agricultural taxonomy. There are two main issues in term organization. First, generally people construct taxonomies for particular purposes according to spe-cific taxonomic criterions. Most basic concepts are of multiple perspectives, but each taxonomy mainly focuses on one or two [1]. Thus, only  X  X lant products X  and  X  X uts X  are selected as the possible paren t of  X  X lmond X . Second, positing the term candidate  X  X lmond X  in the agricultural taxonomy require the most concrete or specific hypernym of  X  X lmond X . Therefore, only  X  X uts X  is finally selected in this example. Overall, the goal of term organization is to select the best taxonomic term candidate which mush be taxonomy-oriented and most specific.

In terms of term organization, most of previous work proposed complicated inference methods to select the best one among all the taxonomic term can-didates [2][3][4]. In this paper, we propose a ranking-based term organization that attempt to effectively leverage information from Wikipedia and an existing taxonomy for taxonomic relation extraction. Our method is a simple two-stage process: taxonomy-oriented taxonomic term candidate extraction and ranking-based term organization.

Firstly, we implement a taxonomy-ori ented process for taxonomic term can-didate extraction. In other words, our taxonomic term candidate extraction is oriented by the existing taxonomy. Wikipedia-based term extraction has been intensively researched in the recent yea rs, but most of them restrict their work only to Wikipedia and neglect the goal -taxonomic relation extraction in the existing taxonomy. In fact, the existing taxonomy plays an important role in taxonomic relation extraction. For instance, although  X  X lmond X  is a kind of  X  X rees X  in biology and is a kind of  X  X uts X  in agriculture, only  X  X uts X  needs to be extracted for the agricultural taxonom ic relation extraction. Therefore, the taxonomic term candidate extraction should be guided by the focus taxonomy. When taking the existing taxonomy into account, the techniques of taxonomic term candidate extraction become much simple. In this paper, we propose a head-matching method for taxonomic term candidate extraction.

Secondly, after taxonomic term candidate extraction, term organization needs only to focus on selecting the most conc rete or specific taxonomic term candi-dates. First, a modifier-graph based ranking method is used to distinguish the taxonomic term candidates. Second, based on our data analysis, a hybrid ranking method is proposed, which uses different ranking strategies to select the most specific taxonomic term candidate for word-based term candidates (including one and only one token) and phrase-based term candidates (including at least two tokens).

We conduct our method on the agricultural domain, and experimental result indicates that such taxonomic relation extraction method achieves significant improvement. Of course, our method is almost domain independent, and is easy to transfer to other domains.

The rest of the paper is organized as follows. Section 2 describes our taxonomy-oriented taxonomic term candidate extraction and ranking-based term organi-zation. Section 3 introduces our experim ental data and experiment design, and then presents performan ces. Section 4 discusses the related work on term orga-nization. Section 5 draws conclusion. We first introduce terminologies used in this paper. A taxonomy can be treated as a graph where a node is a concept (or an instance) and the edge denotes a semantic relation ( hypernym-hyponym ) between two nodes. In the graph, con-ceptes/instances are non-leaf/leaf nodes. The goal, in this paper, is to extract such semantic relation in order to select a best position for a term candidate in a taxonomy.

There are two main steps in our taxonomic relation extraction system: taxonomy-oriented taxonomic term candidate extraction and ranking-based term organization. In the first step, for each term candidate (i.e., a node) in the existing taxonomy, all corresponding taxonomic term candidates are iden-tified with the help of the information in Wikipedia (including unstructured text, infobox, and category structure). In ranking-based term organization, the best taxonomic term candidate that is the most specific hypernym of the term candidate in the existing taxonomy is selected. 2.1 Taxonomy-Oriented Taxonomic Term Candidate Extraction There are four steps in our taxonomy-oriented taxonomic term candidate ex-traction: 1) selection of target Wikipedia articles, 2) preprocessing, 3) grouping of taxonomic term candidates, and 4) extraction of taxonomic term candidates. Selection of Target Wikipedia Articles: Wikipedia is a comprehensive cor-pus and experiments in this paper are conducted in the agricultural domain, therefore, Wikipedia articles that relev ant to plant according to the infoboxes are selected. These ar ticles are denoted by WA = { wa i ,i =1 , ..., n } . Preprocessing: A series of preprocesses are done for both Wikipedia articles and term candidates. For a Wikipedia article, for the unstructured text, sentence segmentation, tokenization, and stemmer are used. For the infobox names and category names, tokenization and ste mmer are firstly used, and then the head extraction tool [5] is applied to extract the heads.

For the term candidate in the taxonomy, tokenization and stemmer are firstly used. The head extraction [5] is then applied to extract the head and the list of taxonomic head is denoted by TH = { th j ,j =1 , ..., m } .
 Grouping of Taxonomic Term Candidates: For each selected Wikipedia article wa i , any string which matches to any term candidates in the existing taxonomy is extracted and all such strings are grouped into a set of taxonomic term candidates, denoted by ttc i . With this simple grouping strategy, each tax-onomic term candidate can be mapping to a node of the existing taxonomy. All the selected Wikipedia articles are represented as TTCSet = { ttc i ,i =1 , ..., n } and their corresponding Wikipedia articles are WA = { wa i ,i =1 , ..., n } . Extraction of Taxonomic Term Candidates: For each set of taxonomic term candidate ttc i  X  TTCSet (the corresponding Wikipedia article is wa i  X  WA ), the adapted head-matching approach used in the paper [6] is applied to extract its corresponding taxonomic term candidates from the Wikipedia article wa i .
Because Wikipedia articles are directly opened to general users, their expres-sions often prefer to be colloquial tha n be technical. In order to capture the colloquial terms when corre sponding technical terms are missing in Wikipedia, we choose the head-matching method.
 There are three types of taxonomic term candidates ( TTC @ UnText , TTC @ CaName and TTC @ InBox ) which are derived from the unstructured texts, the category names and the infoboxes in the Wikipedia article wa i separately. 1) Taxonomic term candidate from unstructured texts ( TTC @ UnText ): there are four steps to examine whether a term is a taxonomic term candidate based on the unstructured texts in the Wikipedia article. (a) Initialization : Initialize the head set HSet @ UnText to be empty. (b) Taxonomic head extraction : for each taxonomic head th j  X  TH ,ifit occurs in the unstructured texts of the Wikipedia article wa i , there seems a relation between the taxonomic head th j and the taxonomic term candidate ttc i . Thus, the taxonomic head th j and its occurring frequency are incorporated into HSet @ UnText . (c) Taxonomic head selection : since taxonomic heads in HSet @ UnText are noisy, it needs the filtering processing. Firstly, the taxonomic heads in HSet @ UnText are sorted according to their occurring frequencies. Secondly, given a frequency threshold Fq , the taxonomic heads in HSet @ UnText whose occurring frequency is less than Fq are discarded. This is because the unstruc-tured texts of a Wikipedia article often too noisy, only some taxonomic heads remains. (d) Taxonomic term candidate extraction :set TTC @ UnText is the set of terms whose taxonomic heads remained in HSet @ UnText after the step(c). 2) Taxonomic term candidates from category names ( TTC @ CaName ) : Step (a)-(b) of the aforementioned approach is applied to the heads of the category names of the Wikipedia article wa i ,togetthe head set HSet @ CaName . Since there are few category names in the Wikipedia article wa i and filtering processing is not necessary, Step (c) is skipped. Lastly, Step (d) is that TTC @ CaName is the collection of the taxonomic terms whose head in HSet @ CaName . 3) Taxonomic term candidates from infoboxes ( TTC @ InBox ) : The approach for TTC @ CaName is applied to the heads of the infoboxes of the Wikipedia article wa ,andget TTC @ InBox . 2.2 Ranking-Based Term Organization For a given term candidate, we can still obtain hundreds of taxonomic term candidates from TTC @ UnText , TTC @ CaName and TTC @ InBox .Inorderto recognize the most appropriate (or best) taxonomic term candidate, we propose a ranking-based method to further selection.

Our ranking-based method involves two components: graph-based ranking approach and hybrid ranking approach. The graph-based ranking approach at-tempts to distinguish taxonomic term candidates in TTC @ CaName ,andthe hybrid ranking makes a final selection a ccording to that which the given term candidate belongs to, either word-based or phrase-based and that the ranking information in TTC @ UnText , TTC @ CaName and TTC @ InBox .Inwhatfol-lows, we will first illustrate the graph-based ranking approach and then describe the hybrid ranking approach.
 Graph-Based Ranking: Since the taxonomic term candidates in TTC @ CaName often are noisy, we attempt to rank them by using their mod-ifiers. In this paper, we choose a adapted version of the modifier-graph based ranking approach proposed in the paper [2]. In the rest of the section, we first briefly introduce the modifier-graph based ranking approach used in [2] and then adapt the modified graph-based ranking approach for our taxonomic relation ex-traction.

First, for the given term candidate B , the paper [2] constructs a modifier graph, which can examine whether or not a relation &lt; A, is-a ,B &gt; in Wikipedia X  X  category structures is true. There are five main steps shown as follows. (a) construct a modifier graph. It is a directed graph where each node denotes each token inside U ( B,n ), and each edge denotes a co-occurrence as modifier-head relation inside each term of U ( B,n ). Here, U ( B,n ) is defined as the set of upper concepts of B up to n step in Wikipedia X  X  category structures. (b) A adapted version of the HITS algorithm [7] is applied to calculated the score for the nodes in that graph. (c) The score of A for the relation &lt; A, is-a ,B &gt; is calculated as Eq(1). (d) All relations associated with term B are sorted according to their scores. (e) The top k terms are selected as the truly is-a relations for B in Wikipedia X  X  category structures.
 where head is the head of A, and mod ( A ) is the set of modifiers of A (e.g., the phrase  X  X lant product X ,  X  X roduct X  is the head, mod ( product )= { plant } ).
When takeing a close look at the data, we find that there are two main issues for the adaptation of the modifier-graph based ranking approach to our task.
Firstly, although the paper [2] provides theoretical measure for confirming is-a relation for term B , their experimental corpus actually rely on the agree-ments of two annotators. But, we work on taxonomic relation extraction in an existing taxonomy and the existing taxonomy actually involves the specific tax-onomic criteria. Therefore, rather than Wikipedia X  X  category structure, we use the existing taxonomy to get U ( B,n ) (see step (a)).

Secondly, our task if different from the work in [2]. The work [2] attempts to recognize term A which contains the intrinsic (essential) property of term B while our task attempt to recognize the term A which is the most specific hypernym of term B . Therefore, we transform Eq(1) as to Eq(2). The score calculated by Eq(2) actually is th einverseofthescorebyEq(1).
 Hybrid Ranking: The hybrid ranking approach leverages different ranking strategies to select the best taxonomic term candidate according to which the given term candidate belongs to, either word-based or phrase-based. The in-put data are the three kinds of taxonomic term candidates ( TTC @ UnText , TTC @ CaName and TTC @ InBox ) from taxonomic term candidate extraction. 1) Word-based term candidates: There are four steps in the ranking strat-egy which solves the problem of term organization for word-based term candi-dates, illustrated as follows. (a) Initialization: initialize the set BestTTC to be empty. BestTTC is the set of the potential best taxonomic term candidates; (b) Graph-based ranking: the modifier-graph based ranking approach is ap-plied to rank the taxonomic term candidates in TTC @ CameN ,andthenonly top k terms are selected (denoted by TTC @ Graph ); (c) Multi-resource based re-ranking: for any taxonomic term candidate in TTC @ Graph , TTC @ UnText or TTC @ InBox , the final score is defined as Eq(3). Score ( A, @ Graph )is1ifterm A occurs in TTC @ Graph ;Otherwise, it is 0. So does to Score ( A, @ CaName )and Score ( A, @ InBox ). (d) Extraction of the best taxonomic term candidate: firstly, for any taxonomic term candidate in TTC @ Graph , TTC @ UnText or TTC @ InBox ,ifitsnew score (defined as Eq(3)) is greater than 1, add it into BestTTC ; Secondly, if BestTTC is empty, add the top one term of TTC @ Graph into BestTTC . Score ( A )= Score ( A, @ Graph )+ Score ( A, @ UnText )+ Score ( A, @ InBox )(3)
We should note that from the strategy of grouping taxonomic term candidates, as mentioned before, each the taxonomic term candidates can be mapping to a node of the existing taxonomy. This indicates that when the best taxonomic term candidate of a term candidate is successfully extracted, the hynpernym of the term candidate is found, so does the best position of the term candidate. 2) Phrased-based term candidates : According to our data analysis, if the term candidate is phrase-based, the best taxonomic term candidate is usually one of the tokens in the term candidate. However, there is no measure to point out which token is the correct one. For examp le, the best taxonomic term candidate for  X  X lant products X  is  X  X roducts X , while the one for  X  X bies alba X  is  X  X bies X .
In this paper, we use the following strategy for a phrase-based term B : (a) If there are several tokens in term B occurring in HSet @ UnText (see Section 2.1), the top one which is with highest occurring frequency is selected as the best taxonomic term candidate. (b) Else, utilize the ranking strategy for word-based term candidates. In this section, we first introduce the experimental data and the experiment design, and then describe our performance analysis. 3.1 Experimental Data Data Description. There are two types of data in our experiments: AGROVOC 1 and TTCSet (see Section 2.1). AGROVOC , an agricultural tax-onomy provided by Food and Agriculture Organization of the United Nations, contains 31,817 nodes, and the plant TTCSet includes 39,859 terms.
In our experiment, to avoid human annotation (which requires much do-main knowledge and at great cost), we leverage the overlapping terms between AGROVOC and the plant TTCSet as the experimental data, totally 2,132 term candidates. Among them, 500 terms are randomly selected as the development data and the rest serve as the test data in our experiment.
 Data Analysis. In this section, we carry on two series of data analysis to support our design of the taxonomic relation extraction.

Firstly, Table 1 shows the statistics of our experiment data according to word/phrase and instance/concept in AGROVOC . From Table 1, we can ob-serve that the number of the word-based term candidates and of the phrase-based term candidates are comparable (57.70% v.s. 42.30%). Thus, we should design different strategies for these two kinds of term candidates respectively.
Secondly, in our graph-based ranking approach, we choose an existing tax-onomy (i.e., AGROVOC ) instead of Wikipedia X  X  category structure. Here, we compare AGROVOC and Wikipedia X  X  category structure in Table 2. Table 2 shows the statistics of U ( B, 2) (defined in Section 2.2, Graph-based ranking) in these two corpora, where B is a term in the TTCSet .

From Table 2, we find that the two taxonomies are much different. Wikipedia X  X  category structure involves more terms (17.4 v.s. 4.2). This indicates that Wikipedia X  X  category structure is more divergent than our existing taxonomy. The terms in U ( B, 2) of Wikipedia X  X  category structure seems more likely to be phrase (i.e., having modifiers) (3.93 v.s. 0.67). This indicates that the modifier-graph based ranking approach should take more roles in Wikipedia X  X  category structure than in our existing taxonomy. Overall, the graph-based ranking ap-proach used in [2] should not be directly applied to our work. 3.2 Experiment Design During the test, we test only one term candidate at each time. In other words, only the focus term candidate is missing and other terms are still in the tax-onomy. For instance, when testing term candidate B , the input taxonomy is AGROV OC without term B and its edges. Our test data contains 1,632 term candidates, thus our system runs 1,632 times during test. The final performances are the average measures of the 1,632 term candidates.

In the experiments, five approaches used to our taxonomic relation extraction are as follows: TTC @ UnText , TTC @ CaName , TTC @ InBox , TTC @ Graph and HyRank . For the given term candidate, each approach ranks its corre-sponding taxonomic term candidates and selects only the top one as the best taxonomic term candidate. The parameter setting for each approach is learned from the development data. 3.3 Experiment Result Firstly, we show the overall performance for the aforementioned approaches in Table 3. In this paper, the three measures which are used to evaluate the tax-onomic relation extraction are the three traditional metrics, namely precision, recall and F-score.
 From Table 3, we can see that TTC @ UnText , TTC @ CaName and TTC @ InBox perform poor. This indicates that the simple information derived from unstructured texts, category names or infoboxes in Wikipedia cannot com-pletely solve the problem of taxonomic rel ation extraction by itself. That means the information in Wikipedia is much noisy and need more exploration. The graph-based ranking approach ( TTC @ Graph ) achieves improvements, but not much, maybe because these two corpora ( AGROV OC and Wikipedia) are much more different (see Section 3.1, Data Analysis). Finally, our hybrid ranking ap-proach ( HyRank ) achieves significant improvement in all the three metrics. This indicates that taxonomic relation extraction needs some way which can effec-tively combine different information in Wikipedia.
 Secondly, we show the comparison of the performances of TTC @ Graph and HyRank in Table 4. From Table 4, we have following observations.
 1) Compared to TTC @ Graph , HyRank achieves much better performances in both of phrase-based term candidates and word-based term candidates. In terms of word-based term candidates, besides TTC @ Graph , the additional pro-cessing which incorporates other information in Wikipedia (category names and infoboxes) is done in HyRank . The significant differences in performances indicates that the top one term in TTC @ Graph are very noisy, and the ad-ditional information used in HyRank can effectively move the best taxonomic term candidates as top as possible. 2) For HyRank , the performances for phrase-based term candidates are sig-nificantly better than the ones for word-based term candidates. This indicates that the difficulty of taxonomic relation extraction is the insertion of rather ab-stract concepts (word-based term candidates). More efforts should be done for word-based term candidates. Moreover, for phrased-based term candidates, we observe that 95% of them are solved in Step 1 (see Section 2.2, Phrase-based term candidates). This indicates our approach is very effectively for phrase-based term candidates. For taxonomic relation extraction, there has been a variety of studies on taxo-nomic term candidate extraction, and few studies have explored term organiza-tion. We briefly introduce them as follows. 4.1 Taxonomic Term Candidate Extraction Methods for taxonomic term candidate extraction can be grouped into two broad categories according to the format of input text: unstructured and structured.
In terms of unstructured text, taxonomic term candidate extraction mainly leverages pattern-based and clustering-based approaches [1][8][9][10].
Pattern-based approaches : Firstly, Hearst [10] propose to use bootstrapping to discover is-a relation with a list of manual hyponym patterns. From then on, many methodes explore Hearst-style patterns to extract different kinds of semantic relations [3][8][11]. In recent y ears, the pattern-based approaches are applied to unstructured text in Wikipedia [12][13][14]. Although pattern-based approach plays an important role in taxonomic term candidate extraction due to their simplicity and high accuracy, it suffers from the problems of low coverage.
Clustering-based approaches : Usually, context are represented in a vector space which involves different kinds of information (such as contextual feature, syn-tactic dependency, co-occurrence), and clustered depending on similarities of the vectors [3][4]. Clustering-based approaches can disclose implicit relations, but they require large corpora. Moreover, clustering-based approaches can solve only is-a and sibling relations.

In terms of structured text, most previous work on Wikipedia focus on the three kinds of information: infoboxes, category structure and inter-article links. (a) Infoboxes : Suchanek et al. [15][16] applies a set of heuristic rules to Wikipedia X  X  infoboxes to extract the instances of 92 relations for their YAGO taxonomy. KOG system is automatically refined the Wikipedia X  X  infobox struc-ture and then integrated WordNet into Wikipedia X  X  infobox-class schemata [17]. (b) Category structure : Category structure of Wikipedia is a rich online re-source for taxonomic relation extraction. With the help of WordNet, Suchanek et al.[16] construct a taxonomy through combining entities and relations in Wikipedia X  X  category structure. Choi et al. [2] construct a high-quality taxon-omy through examining whether or not a hypernym-hyponym relation in the Wikipedia X  X  structure is true. (c) Inter-article links : Most relations between terms are reliable if there are inter article links between them in Wikipedia [18]. Moreover, taxonomic term candidate extraction depending on Wikipedia X  X  inter-article links can achieve a high accurate performance despite of using little linguistic analysis [18][19][20]. 4.2 Term Organization For term organization, most of previous work explored complicated inference methods [3][4][21]. Snow et al. [3] maximize the conditional probability of hypernym-hyponym relations with certain evid ence. The work in [4] maximizes a metric-based ranking formula which combines heterogeneous features like con-text, co-occurrence, and surface patte rns. The work in [21] maximizes a scoring function for each term network which considers a set of relational constraints. In this paper, we examine the taxonomic relation, and propose a taxonomy-oriented approach for taxonomic term candidate extraction and a ranking-based approach for term organization. Both of two approaches can effectively leverage the two kinds of resources, Wikipedia and an existing taxonomy. We conduct our experiments on the agricultural domain, and achieve significant improvement. We believe that the present research should provide the foundation for future research on taxonomic relation extraction.

