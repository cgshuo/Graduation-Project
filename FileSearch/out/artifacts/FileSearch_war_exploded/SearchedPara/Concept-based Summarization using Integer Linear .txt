 Recent years have witnessed increased interest in global inference methods for extractive summa-rization. These methods formulate summarization as a combinatorial optimization problem, i.e. se-lecting a subset of sentences that maximizes an objective function under a length constraint, and use Integer Linear Programming (ILP) to solve it exactly (McDonald, 2007).

In this work, we focus on the concept-based ILP model for summarization introduced by (Gillick and Favre, 2009). In their model, a summary is generated by assembling the subset of sentences that maximizes a function of the unique concepts it covers. Selecting the optimal subset of sentences is then cast as an instance of the budgeted maxi-
As this problem is NP-hard, pruning low-weight concepts is required for the ILP solver to find opti-mal solutions efficiently (Gillick and Favre, 2009; Qian and Liu, 2013; Li et al., 2013). However, re-ducing the number of concepts in the model has two undesirable consequences. First, it forces the model to only use a limited number of concepts to rank summaries, resulting in lower R OUGE scores. Second, by reducing the number of items from which sentence scores are derived, it allows dif-ferent sentences to have the same score, and ulti-mately leads to multiple optimal summaries.
To our knowledge, no previous work has men-tioned these problems, and only results corre-sponding to the first optimal solution found by the solver are reported. However, as we will show through experiments, these multiple optimal so-lutions cause a substantial amount of variation in R
OUGE scores, which, if not accounted for, could lead to incorrect conclusions. More specifically, the contributions of this work are as follows:  X  We evaluate (Gillick and Favre, 2009) X  X  sum- X  We extend the model to address the prob-2.1 Model definition Gillick and Favre (2009) introduce a concept-based ILP model for summarization that casts sen-tence selection as a maximum coverage problem. The key assumption of their model is that the value of a summary is defined as the sum of the weights of the unique concepts it contains. That way, re-dundancy within the summary is addressed im-plicitly at a sub-sentence level: a summary only benefits from including each concept once.
Formally, let w i be the weight of concept i , c i and s j two binary variables indicating the pres-ence of concept i and sentence j in the summary, Occ ij an indicator of the occurrence of concept i in sentence j , l j the length of sentence j and L the length limit for the summary, the concept-based ILP model is described as:
The constraints formalized in equations 3 and 4 ensure the consistency of the solution: selecting a sentence leads to the selection of all the concepts it contains, and selecting a concept is only possible if it is present in at least one selected sentence.
Choosing a suitable definition for concepts and a method to estimate their weights are the two key factors that affect the performance of this model. Bigrams of words are usually used as a proxy for concepts (Gillick and Favre, 2009; Berg-Kirkpatrick et al., 2011). Concept weights are either estimated by heuristic counting, e.g. docu-ment frequency in (Gillick and Favre, 2009), or obtained by supervised learning (Li et al., 2013). 2.2 Pruning to reduce complexity The concept-level formulation of (Gillick and Favre, 2009) is an instance of the budgeted maxi-mum coverage problem, and solving such a prob-lem is NP-hard (Khuller et al., 1999). Keeping the number of variables and constraints small is then critical to reduce the model complexity.

In previous work, efficient summarization was achieved by pruning concepts. One way to re-duce the number of concepts in the model is to remove those concepts that have a weight below a given threshold (Gillick and Favre, 2009). An-other way is to consider only the top-n highest weighted concepts (Li et al., 2013). Once low-weight concepts are pruned, sentences that do not contain any remaining concepts are removed, fur-ther reducing the number of variables and con-straints in the model. As such, this can be regarded as a way to approximate the problem.

Pruning concepts to reduce complexity also cuts down the number of items from which summary scores are derived. As we will see in Section 3.2, this results in a lower R OUGE scores and leads to the production of multiple optimal summaries.
The concept weighting function also plays an important role in the presence of multiple opti-mal solutions. Limited-range functions, such as frequency-based ones, yield many ties and in-crease the likelihood that different sentences have the same score. Redundancy within the set of input sentences exacerbate this problem, since highly similar sentences are likely to contain the same concepts. 2.3 Summarization parameters For comparison purposes, we use the same system pipeline as in (Gillick et al., 2009), which is de-scribed below.

Step 1 : clean input documents; a set of rules is used to remove bylines and format markup.

Step 2 : split the text into sentences; we use sentence quotations.

Step 3 : compute parameters needed by the model; we extract and weight the concepts.

Step 4 : prune sentences shorter than 10 words, duplicate sentences and those that begin and end with a quotation mark.

Step 5 : map to ILP format and solve; we use an
Step 6 : order selected sentences for inclusion in the summary, first by source and then by position.
Similar to previous work, we use bigrams of words as concepts. Although bigrams are rough approximations of concepts, they are simple to ex-tract and match, and have been shown to perform well at this task. Bigrams of words consisting of more robust matching.

Concepts are weighted using document fre-quency, i.e. the number of source documents where the concept was seen. Document frequency is a simple, yet effective approach to concept weighting (Gillick and Favre, 2009; Woodsend and Lapata, 2012; Qian and Liu, 2013). Reducing the number of concepts in the ILP model is then performed by pruning those concepts that occur in fewer than a given number of documents.
 ILP solvers usually provide only one solution. To generate alternate optimal solutions, we iter-atively add new constraints to the problem that eliminate already found optimal solutions and re-run the solver. We stop the iterations when the value of the objective function returned by the solver changes. 3.1 Datasets and evaluation measures Experiments are conducted on the DUC X 04 and TAC X 08 datasets. For DUC X 04, we use the 50 top-ics from the generic multi-document summariza-tion task (Task 2). For TAC X 08, we focus only on the 48 topics from the non-update summarization task. Each topic contains 10 newswire articles for which the task is to generate a summary no longer than 100 words (whitespace-delimited tokens).
Summaries are evaluated against reference sum-maries using the R OUGE automatic evaluation measures (Lin, 2004). We set the R OUGE param-manual evaluation (Owczarzak et al., 2012), that is, with stemming and stopwords not removed. 3.2 Results Table 1 presents the average number of optimal solutions at different levels of concept pruning. Overall, the average number of optimal solutions increases along with the minimum document fre-quency, reaching 4 . 8 for TAC X 08 at DF = 4 . Prun-ing concepts also greatly reduces the number of variables in the ILP formulation, and consequently improves the run-time for solving the problem.
Interestingly, we note that, even without any pruning, the model produces multiple optimal solutions. The choice of document frequency for weighting concepts is responsible for this as it generates many ties. Finer-grained concept weighting functions such as frequency estima-tion (Li et al., 2013) should therefore be preferred to limit the number of multiple optimal solutions.
The mean R OUGE recall scores of the multiple optimal solutions for different minimal document frequencies are presented in Table 2. Here, the higher the concept pruning threshold, the higher the variability of the generated summaries as in-dicated by the standard deviation. Best R OUGE scores are achieved without concept pruning while the best compromise between effectiveness and run-time is given when DF  X  3 , confirming the findings of (Gillick and Favre, 2009).

To show in a realistic scenario how multiple optimal solutions could lead to different conclu-sions, we compare in Table 3 the R OUGE -1 scores of the summaries generated from the first op-timal solution found by three off-the-shelf ILP pated at TAC X 08. We set the minimum document frequency to 3, which is often used in previous work (Gillick and Favre, 2009; Li et al., 2013), and use a two-sided Wilcoxon signed-rank to com-pute the number of systems that obtain signifi-cantly lower and higher R OUGE -1 recall scores 8 .
Despite being comparable (p-value &gt; 0 . 4 ), the solutions found by the three solvers support differ-ent conclusions. The solution found using GLPK Table 3: R OUGE -1 recall scores for the first opti-mal solution found by different solvers along with the number of systems that obtain significantly lower (  X  ) or higher (  X  ) scores (p-value &lt; 0 . 05 ). indicates that the concept-based model achieves state-of-the-art performance whereas the solutions provided by Gurobi and CPLEX do not do so. The reason for these differences is the use of differ-ent solving strategies, involving heuristics for find-ing feasible solutions more quickly. This exam-ple demonstrates that multiple optimal solutions should be considered during evaluation. 3.3 Solving the multiple solution problem Multiple optimal solutions occur when concepts alone are not sufficient to distinguish between two competing summary candidates. Extending the model so that it provides a single solution can therefore not be done without introducing a sec-ond term in the objective function. Following the observation that the frequency of a non-stop word in a document set is a good predictor of a word ap-pearing in a human summary (Nenkova and Van-derwende, 2005), we extend equation 1 as follows: where f k is the frequency of non-stop word k in the document set, and t k is a binary variable indi-cating the presence of k in the summary. Here, we want to induce a single solution among the multi-ple optimal solutions given by concept weighting, and thus set  X  to a small value ( 10  X  6 ). We add further constraints, similar to equations 3 and 4, to ensure the consistency of the solution.

This extended model succeeds in giving a sin-gle solution that is at least comparable to the mean score of the multiple optimal solutions. How-ever, it requires about twice as much time to solve which makes it impractical for large documents. 3.4 Fast approximation Instead of pruning concepts to reduce complex-ity, one may consider using an approximation if results are found satisfactory. Here, simi-larly to (Takamura and Okumura, 2009; Lin and Bilmes, 2010) we implement the greedy heuristic proposed in (Khuller et al., 1999) that solve the budgeted maximum coverage problem with a per-formance guarantee 1 / 2  X  (1  X  1 / e ) . Table 4 com-pares the performance of the model that achieves the best trade off between effectiveness and run-time, that is when DF  X  3 , with that of the greedy approximation without pruning.

Overall, the approximate solution is over 96% as good as the average optimal solution. Although the ILP solution marks an upper bound on perfor-mance, its solving time is exponential in the num-ber of input sentences. The approximate method is then relevant as it marks an upper bound on speed (less than 0 . 01 seconds to compute) while having performance comparable to the ILP model with concept pruning (p-value &gt; 0 . 3 ). Table 4: R OUGE recall scores of the approxima-tion. The relative difference from the mean score of the multiple optimal solutions is also reported. Multiple optimal solutions are not an issue as long as alternate solutions are equivalent. Unfortu-nately, summaries generated from different sets of sentences are likely to differ. We showed through experiments that concept pruning leads to the pres-ence of multiple optimal solutions, and that the latter cause a substantial amount of variation in R OUGE scores. We proposed an extension of the ILP that obtains unique solutions. If speed is a concern, we showed that a near-optimal approx-imation can be computed without pruning. The implementation of the concept-based summariza-tion model that we use in this study is available at https://github.com/boudinfl/sume .

In future work, we intend to extend our study to compressive summarization. We expect that the number of optimal solutions will increase as mul-tiple compression candidates, which are likely to be similar in content, are added to the set of input sentences.
 This work was partially supported by the GOLEM project (grant of CNRS PEPS FaSciDo 2015, http://boudinfl.github.io/GOLEM/ ).
 We thank the anonymous reviewers and R  X  emi Bois for their insightful comments.

