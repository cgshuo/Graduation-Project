 Online social networks can often be represented as hetero-geneous information networks containing abundant informa-tion about: who, where, when and what. Nowadays, people are usually involved in multiple social networks simultane-ously. The multiple accounts of the same user in di  X  erent networks are mostly isolated from each other without any connection between them. Discovering the correspondence of these accounts across multiple social networks is a crucial prerequisite for many interesting inter-network applications, such as link recommendation and community analysis using information from multiple networks. In this paper, we study the problem of anchor link prediction across multiple hetero-geneous social networks, i.e. , discovering the correspondence among di  X  erent accounts of the same user. Unlike most prior work on link prediction and network alignment, we assume that the anchor links are one-to-one relationships ( i.e. , no two edges share a common endpoint) between the accounts in two social networks, and a small number of anchor links are known beforehand. We propose to extract heterogeneous features from multiple heterogeneous networks for anchor link prediction, including user X  X  social, spatial, temporal and text information. Then we formulate the inference problem for anchor links as a stable matching problem between the two sets of user accounts in two di  X  erent networks. An ef-fective solution, Mna (Multi-Network Anchoring), is derived to infer anchor links w.r.t. the one-to-one constraint. Ex-tensive experiments on two real-world heterogeneous social networks show that our Mna model consistently outperform other commonly-used baselines on anchor link prediction. H.2.8 [ Database Management ]: Database Applications-Data Mining Heterogeneous Social Network, Multi-Network, Anchor Links Online social networks, such as Facebook, Twitter and Foursquare 1 , have become more and more popular in re-cent years. Each social network can often be represented as a heterogeneous network containing abundant information about: who, where, when and what. Nowadays, people are getting involved in more and more di  X  erent kinds of social networks simultaneously. For example, people usually share reviews or tips about di  X  erent locations or places with their friends using Foursquare network. At the same time, they may also share the latest news using Twitter network, and share photos using Facebook network. Thus, each user often has multiple separate accounts in di  X  erent social networks. However, these accounts of the same user are mostly isolated without any connection or correspondence to each other.
Discovering the correspondence between accounts of the same user is a crucial prerequisite for many interesting inter-network applications, such as link recommendation and com-munity analysis using information from multiple networks. For example, in Foursquare network, the social connections and activities of new users can be very sparse. The friend and location recommendations for such users are very hard using only one network. However, if we also know the user X  X  Twitter account, his/her social connections and location data in Twitter network can also be used to improve the recom-mendation performances in the Foursquare network.
Figure 1 shows an example of two heterogeneous social networks (Twitter and Foursquare) with six users. Each user has two accounts in two networks separately. In each network, users are connected with each other through social links. Moreover, each user is also connected with a set of locations, timestamps and text contents through online ac-tivities. Note that the top two users in Figure 1 also have an-other type of link, which connects the same user X  X  accounts in two networks. We call these links as anchor links .Each anchor link indicates a pair of accounts that belong to the same user. The task of anchor link prediction is to discover which pair of accounts, as shown with question marks in Figure 1, belong to the same user in real-world.

The problem of anchor link prediction across multiple het-erogeneous social networks has not been studied in this con-text so far. Unlike most prior work on link prediction [9, 13, 10, 23, 14] and network alignment [3], we assume that an-chor links are one-to-one relationships among the two sets of user accounts ( i.e. , no two edges share a common end-https://foursquare.com and Twitter network. point 2 ) and a small number of anchor links across networks are known beforehand. A detailed comparison between an-chor link prediction problem and other related problems is shown in Table 1.

Despite its value and significance, the anchor link pre-diction task across multiple heterogeneous social network is very challenging due to the specific characteristics of the task. The reasons are listed as follows.
We ignore the case that an individual can have multiple accounts in the same network which is a di  X  erent problem [4].
In this paper, we introduce a novel framework to tackle the above issues. Di  X  erent from existing link prediction meth-ods, our approach, called Mna (Multi-Network Anchoring), can extract heterogeneous features from multiple heteroge-neous networks for anchor link prediction, including user X  X  social, spatial, temporal and text information. We extended some existing social features for link prediction into multi-network settings, based upon the known anchor links. Then we train a binary classifier on the training set for anchor link prediction. In the inference step, we propose to formu-late the anchor link inference problem as a stable matching problem based upon the scores of the binary classifier. Mna method can e  X  ectively infer the anchor links w.r.t. one-to-one constraint. We run extensive experiments on real-world heterogeneous social networks. The results show that our Mna model consistently outperforms other commonly-used baselines.
The rest of the paper is organized as follows. We first introduce the preliminary concepts, give the problem analy-sis in Section 2. In Section 3, we propose the Mna method for anchor link prediction across multiple networks. Then Section 4 reports the experiment results on real-world social networks. In Section 6, we conclude the paper.
In this paper, we focus on studying the anchor link predic-tion problem on two heterogeneous social networks, though the proposed framework can easily be generalized to the set-tings with more than two networks.

Suppose we are given a source network G s and a target network G t , which are both heterogeneous social networks. Formally, we represent each heterogeneous social network as an undirected graph. The source network G s =( V s , E contains di  X  erent types of nodes and links. V s = U s [ L [ T [ W is the set of nodes in the source network, which includes four types of nodes. U s = { u s 1 ,u s 2 ,  X  X  X  ,u s N } is the set of user accounts. L = { ` 1 , ` 2 ,  X  X  X  , ` L } is the set of L di  X  erent locations or places, where users have published their posts at. T = { t 1 ,t 2 ,  X  X  X } represents a set of time slots that users have published posts at. Each time slot can be an hour of a day, or a day in a month. W = { w 1 ,w 2 ,  X  X  X } is the set of words that users have used in their posts. E s  X  V s  X  V is the edges of di  X  erent types in the heterogeneous social network G s . s  X  E s is the set of user pairs that are friends with each other in network G s .

Similarly, we define the target network as G t =( V t , E U t denotes the set of user accounts in the target network. Without loss of generality, we assume the source and target network share the same sets of locations L ,timeslots T and words W .

Anchor Link Prediction : Suppose we have two het-erogeneous social networks G s and G t ,withasmallsetof known anchor links between the users accounts in two net-one-to-one relationships between user accounts in U s and U i.e. , no two anchor links share a same user account. ( u denotes that the two user accounts belong to the same user. The task of anchor link prediction is to predict whether there is an anchor link between a pair of user accounts u s i and u where u s i 2 U s ,u t j 2 U t .

The key issue of anchor link prediction is to learn a one-to-one matching between the user accounts of two heteroge-neous social networks. This problem formulation is di  X  er-ent from existing works on social link prediction [9, 13, 10, 23, 14] mainly in two-folds: First, the target links to pre-dict are one-to-one relationships between two sets of nodes, e.g. , Twitter accounts and Facebook accounts. How can we extract informative features for anchor link prediction task? Existing features for link prediction, such as number of com-mon neighbors and the shortest distance, require that the target links should be many-to-many relationships. Second, the prediction of all anchor links should be considered col-lectively due to the one-to-one constraint. Supervised link prediction methods usually make predictions on a set of links independently, because there is no constraint on the degree of each node in the network.
We design a two-phase approach to address the major challenges of anchor link prediction. The first phase tack-les feature extraction problem, while the second phase takes care of one-to-one constrained anchor link prediction. The phase of feature extraction mainly explore two kinds of ideas on multiple heterogeneous social networks. First, we exploit social links in each network and the labeled anchor links across the two networks to extract social features for an-chor link prediction. Second, we exploit the heterogeneous information in both networks to extract three sets of het-erogeneous features for anchor link prediction, which cor-respond to aggregated patterns of users on Spatial distri-bution, temporal activity distribution and text content dis-tribution separately. We use all the extracted features and the pairs of accounts with known labels to learn a binary SVM for anchor link prediction. Since the label predictions of SVM don X  X  satisfy the one-to-one constraint, we use real-value scores of the SVM as the input for the second phase, and derive the anchor link predictions collectively according to the one-to-one constraint.
Most existing features for link prediction, such as number of common neighbors, focus on single network settings, and the target links are assumed to be many-to-many relation-ships. These features cannot be directly used in anchor link prediction across multiple networks.
Users often have similar social links in di  X  erent social net-works, such as Twitter and Facebook, because such social links usually indicate the user X  X  social ties in real life. We can make use of the social similarity between two user ac-counts from di  X  erent social networks to help locate the same user.

Our goal is to extract discriminative social features for a pair of user accounts in two disjoint social networks. Intu-itively, the social neighbors of each user account can only involve user accounts from the same social network. For example, the neighbors for a Facebook account can only in-volve Facebook accounts instead of Twitter accounts. How-ever, in anchor link prediction problem, we need to extract a set of features about a pair of user accounts in two di  X  erent networks separately. The social neighbors for two user ac-counts are two disjoint sets of user accounts in two separate networks. There can not exist any shared nodes among the neighbours of the pair of user accounts. In the following, we propose to extend several social features to multi-network settings.

Here we extend the definition of some commonly used so-cial features in link prediction, i.e. , X  common neighbors  X ,  X  Jaccard X  X  coe cient  X  and  X  Adamic/Adar measure  X  X 1].  X  Extended Common Neighbors : CN ( u s i ,u t j ) represents the number of  X  X ommon X  neighbors between u s i in the source network and u t j in the target network. We denote the neigh-bors of u s i in the source network as s ( u s i ), and the neighbors of u t j in the target network as t ( u t i ). We define the mea-sure of extended common neighor as the number of known anchor links between s ( u s i ) and t ( u t i ).
CN ( u s i ,u t j )= { ( u s p ,u t q ) 2 A ,u s p 2 s ( u It indicates how many pairs of user accounts belong to a same user.  X  Extended Jaccard X  X  coe cient : We can extend the measure of Jaccard X  X  coe cient to multi-network setting us-ing similar method of extending common neighbor. JC ( u s is a normalized version of common neighbors, i.e. , CN ( u divided by the total number of distinct users in s ( u s i ( u t j ): where  X  Extended Adamic/Adar Measure : Similarly, we also extend the Adamic/Adar Measure into multi-network set-tings, where the common neighbors are weighted by their average degrees in both social networks.
 AA ( u s i ,u t j )=
In addition to the social features mentioned above, hetero-geneous social networks also involve abundant information about: where, when and what. In the following, we propose to exploit the spatial, temporal and text content informa-tion about di  X  erent user accounts to facilitate anchor link prediction.  X  Spatial distribution features: We notice that users in di  X  erent social networks usually publish posts at similar lo-cations in real-life, such as their home, working places, trav-eling spots, etc. We can make use of the similarity between the spatial distributions of two user accounts from di  X  erent social networks to help locate the same user. Each location can be represented as a pair of (latitude, longitude) = ` 2 L . Algorithm 1 Multi-Network Anchoring Input: two heterogeneous social networks, G s and G t . Output: a set of inferred anchor links A 0 1: Construct a training set of user account pairs with 2: For each pair ( u s i ,u t j ), extract four types of features. 3: Training classification model C on the training set. 4: Perform classification using model C on the test set. 5: For each unlabeled user account, sort the ranking scores 6: Initialize all unlabeled u s i in G s and u t j in G t 7: A 0 = ; 8: while 9 free u s i in G s and u s i  X  X  preference list is non-9: Remove the top-ranked account u t j from u s i  X  X  prefer-10: if u t j is free then 11: A 0 = A 0 [ { ( u s i ,u t j ) } 12: Set u s i and u t j as occupied 13: else 14: 9 u s p that u t j is occupied with. 15: if u t j prefers u s i to u s p then 16: A 0 =( A 0 { ( u s p ,u t j ) } ) [ { ( u s i ,u t j ) } 17: Set u s p as free and u s i as occupied 18: end if 19: end if 20: end while We propose to use three measures to evaluate the similar-ity between the spatial distributions of two users accounts: 1) the number of shared locations; 2) the cosine similarity between the two sets of locations; 3) the average distance between the two sets of locations.  X  Temporal distribution features: We also notice that users in di  X  erent social networks usually publish posts at similar time slots in real-life, such as hours after work and weekends, etc. Such temporal distribution indicates the user X  X  online activity patterns. For example, some users may like to send tweets at night, while other users may like to write tweets at commuting time on the bus or train. The temporal distribution of di  X  erent user accounts can also help us find the anchor links between two networks. We extract similar measures about the spatial distributions for two user accounts: 1) the number of shared time slots when publish-ing posts; 2) the cosine similarity between the two vectors of temporal activities.  X  Text content features: The text content of posts by users in di  X  erent social networks can also hint for the anchor links, because di  X  erent users may have di  X  erent choices of words in their posts. We first convert the posts of each user account into a bag-of-words vector weighted by TF-IDF. Then for each pair user accounts, we compute two kinds of similarities as features: 1) the inner product of the two vectors; 2) the cosine similarity of the two vectors.
After extracting all the four types of heterogeneous fea-tures in the previous section, we can train a binary classifier, such as SVM or logistic regression, for anchor link predic-tion. However, in the inference process, the predictions of the binary classifier cannot be directly used as anchor links due to the following issues:
In order to tackle the above issues, we propose an inference process, called Mna (Multi-Network Anchoring), to infer anchor links based upon the ranking scores of the classifier. Our solution is motivated by the stable marriage problem [8] in mathematics.

We first use a toy example in Figure 2 to illustrate the main idea of our solution. Suppose in Figure 2(a) we are given the ranking scores from the classifiers. We can see in Figure 2(b) that link prediction methods with a fixed thresh-old may not be able to predict well, because the predicted links do not satisfy the constraint of one-to-one relationship. Thus one user account in the source network can be linked with multiple accounts in the target network. In Figure 2(c), weighted maximium matching methods can find a set of links with maximum sum of weights. However, it is worth noting that the input scores are uncalibrated, so maximum weight matching may not be a good solution for anchor link predic-tion problems. The input scores only indicate the ranking of di  X  erent user pairs, i.e. , the preference relationship among di  X  erent user pairs.

Here we say  X  X ode x prefers node y over node z  X , if the score of pair ( x,y ) is larger than the score of pair ( x,z ). For example, in Figure 2(c), the weight of pair a , i.e. , Score( a )= 0 . 8, is larger than Score( c )=0 . 6. It shows that user u first user in the source network) prefers u t 1 over u t 2 problem with the prediction result in Figure 2(c) is that, the pair ( u s 1 ,u t 1 ) should be more likely to be an anchor link due to the following reasons: (1) u s 1 prefers u t 1 over u u 1 also prefers u s 1 over u s 2 .
 Definition (Blocking Pair): A pair ( u s i ,u t j ) is a blocking pair i  X  u s i and u t j both prefer each other over their current assignments respectively in the predicted set of anchor links A .
 Definition (Stable Matching): An inferred anchor link set A 0 is stable if there is no blocking pair.

We propose to formulate the anchor link prediction prob-lem as a stable matching problem between user accounts in source network and accounts in target network. Assume that we have two sets of unlabeled user accounts, i.e. , U s = { u in source network and U t = { u t j } j in target network. Each u has a ranking list or preference list P ( u s i ) over all the user accounts in target network ( u t j 2 U t ) based upon the input scores of di  X  erent pairs. For example, in Figure 2(a), the preference list of node u s 1 is P ( u s 1 )=( u t 1 &gt;u that node u t 1 is preferred by u s 1 over u t 2 . The preference list build a preference list for each user account in the target network. In Figure 2(a), P ( u t 1 )= P ( u t 2 )=( u s 1
The proposed Mna method for anchor link prediction is shown in Algorithm 1. In each iteration, we first randomly network (a) input/ranking scores (c) maximize sum of weights (1:1 constrained) Figure 2: An example of anchor link inference by di  X  erent methods. (a) is the input, ranking scores. (b)-(d) are the results of di  X  erent methods for an-chor link inference. select a free user account u s i from the source network. Then we get the most prefered user node u t j by u s i in its preference list P ( u s i ). We then remove u t j from the preference list, i.e. , P ( u s i )= P ( u s i ) u t j .

If u t j is also a free account, we add the pair of accounts ( u i ,u t j ) into the current solution set A 0 . Otherwise, u already occupied with u s p in A 0 . We then examine the pref-pair ( u s i ,u t j ) is a blocking pair. We remove the blocking pair by replacing the pair ( u s p ,u t j ) in the solution set A pair ( u s i ,u t j ). Otherwise, if u t j prefers u s p over u the next iteration to reach out the next free node in the source network. The algorithm stops when all the users in the source network are occupied, or all the preference lists of free accounts in the source network are empty.
In order to evaluate the performance of the proposed ap-proach for anchor link prediction, we tested our algorithm on two real-world social networks as summarized in Table 2. We chose Twitter and Foursquare as our data sources because public tweets and Foursquare tips can be easily collected by their APIs. 1) Foursquare : the first network we crawled is the Foursquare 2) Twitter : The second network we crawled is Twit-In order to conduct experiments, we pre-process these raw data to obtain the ground-truth of users X  anchor links. In Foursquare network, we can collect some users X  Twitter IDs in their account pages. We use these information to build the ground-truth of anchor links between user accounts across the two networks. If a Foursquare user has shown his/her Twitter ID in the website, we treat it as an anchor link between this user X  X  Foursquare account and Twitter account. Table 2: Properties of the Heterogeneous Social Networks
In order to study the e  X  ectiveness of the proposed ap-proach, we compare our method with eight baseline meth-ods, which are commonly used baselines including both su-pervised and unsupervised link prediction approaches. The compared methods are summarized as follows: Figure 3: Performance of inferring anchor links with di  X  erent sets of features.
For fair comparisons, LibSVM [6] of linear kernel with the default parameter is used as the base classifier for all the compared methods.

Evaluation Measures In order to evaluate the perfor-mance of anchor links prediction, we evaluate di  X  erent ap-pairs) proaches in terms of F1-measure (F1), Precision (Prec.), Recall (Rec.), Accuracy (Acc.) and AUROC ( Auc ). The first 4 measures can evaluate the link prediction perfor-mances, while the AUROC evaluates the ranking perfor-mances. Since unsupervised link prediction methods ( i.e. , CN, JC, AA) only predict a real-valued score without a la-bel prediction for each pair of nodes , we only show the AUROC performances of unsupervised methods. Moreover, the only di  X  erence between Mna and Mna no is on the con-straints of label prediction, but they share the same ranking scores, i.e. , the real-value output of SVM. So for AUROC measure, we use Mna to represent both methods.
In our experiments, we partition the users into two groups using 5-fold cross validation: one fold is used as training data, the remaining folds are used as testing data. We report the average results and standard deviations of 5-fold cross validation on the dataset.

In real-world networks, there are only a small number of known/labeled anchor links. In the first group of ex-periment, we study the performance of the proposed Mna method on anchor link prediction with di  X  erent number of labeled anchor links. In each round of the cross validation, we randomly sample 10, 20,  X  X  X  , 80 users from the training fold, and use them as the labeled anchor links. The results of all compared methods are reported in Table 4. The best performances on each of the evaluation criteria are listed in bold. It shows that when there are a small number of anchor links known in the two network, the proposed Multi-Network Anchoring ( Mna ) method consistently outperforms other baseline methods. This result supports the intuition of this paper: Multiple heterogeneous social networks can provide di  X  erent types of information about the users. The anchor link prediction can be greatly improved by exploiting all four types of di  X  erent information simultaneously.
In real-world link prediction problems, the data samples are usually imbalanced. In the second experiment setting, we test the performance of our method with imbalanced datasets. In each round of the cross validation, we sam-ple pairs of user accounts as the data samples according to the performances of each of the models under di  X  erent im-balance ratios.

Moreover, in order to test the contribution of di  X  erent type of features, we also tested the performances of baselines with di  X  erent feature combinations. The result is shown in Figure 3. In Figure 3(a), we can see that when more types of features are used in the model, the better the performances we can get for anchor link prediction. In Figure 3(b), we notice that the performance of Mna is much better than Mna no. It shows that by incorporating the one-to-one con-straint in the inference process can further improve the per-formance of anchor link prediction.
We show a case study to demonstrate the e  X  ectiveness of the proposed method by combining four types of heteroge-neous information from two networks. In Figure 4, we show a case of five real-world users who have both Twitter and Foursquare accounts. These five users are socially connected in both networks, as shown in Figure 4(a). By considering this social information, we can significantly shrink the search space for anchor links if one or some of these users X  accounts in both networks have already been labeled by anchor links. In Figure 4(b), we show the spatial distribution of di  X  erent of labeled anchor links in the training set. users on both networks. We can see that the spatial distri-butions of the same user are pretty similar to each other. Michelle is mainly located in the middle states of America, when sending tweets and foursquare tips. The spatial distri-butions of her foursquare account and twitter accounts are pretty similar. In Figure 4(c), we show the temporal dis-tribution of the users. We can see that Tristan X  X  temporal activities across both Twitter account and Foursquare ac-count are very consistent, and his distribution is very di  X  er-ent from Lisa X  X  temporal activity patterns. In Figure 4(d), we show some frequently used words by the users, where the choices of words of the same user can be pretty consistent. For example, Andrew seems to prefer to use  X  X wsm X  instead of  X  X wesome X  when writing tweets and tips.
Social network analysis [16, 12], especially the link predic-tion problem in social networks, has been intensively stud-ied in recent years [13, 10, 23]. Typically some similarity measures between pair of nodes are used. Upon whether considering the label information, there are two types of ap-proaches: unsupervised and supervised. Liben-Nowell and Kleinberg [13] developed unsupervised link prediction meth-ods based upon several topological features of a co-author network. Many supervised link prediction methods have also been proposed in recent years, [10], where the features used in unsupervised approaches can be directly used to train a binary classification model for link prediction. There are many other recent e  X  orts on link prediction problem in so-cial networks. Lichtenwalter et. al. [14] have a detailed dis-cussion over di  X  erent challenges of link prediction problem. Scellato et. al. [18] proposed to use place features for link prediction in location-based social networks. [2] proposed a supervised random walk method for link predictions in so-cial networks. In addition, another line of research works study the link prediction problems on multiple networks or domains [5, 7, 20, 24, 21].

Network alignment problem has also been studied by many works in recent years, which has many applications bioinfor-matics [11, 19]. Bayati et. al. [3] proposed to use belief propagation to solve sparse network alignment problems. Most network alignment approaches focus on finding ap-proximate isomorphisms between two graphs under unsu-pervised settings. Because the intractability of the problem, existing methods usually rely on practical heuristics to solve the alignment problem.

Our work is also related to other lines of research. Location-based social networks have been researched recent years [18, 25], which mainly focus on single network setting. Previous works have also explored the multi-network problems, such as user identification [22], profile matching [17] and match-ing user footprints[15]. These research works focus mainly on matching social network users based upon user profile in-formation, such as sharing similar user names, sharing email address, etc. . Our approach assumes heterogeneous informa-tion in the networks is available, and focus on using social links, location distribtutions and temporal distributions to infer the account similarity. User profiles ( e.g. username, email) are excluded in our study.
In this paper we have described and studied the prob-lem of inferring anchor links across multiple heterogeneous social networks. We have studied two real-world social net-works, Foursquare and Twitter, finding the correspondence of di  X  erent users accounts. Di  X  erent from previous works in link prediction and network alignment, we assumed that the anchor links is an one-to-one relationships between the user Michelle Jacobson art (65,2), style (16,3) audit (3,2), grill (19,2) Nathan Levinson happy (27,5), enjoy (9,4) week (18,4), shows (6,6) Andrew Nystrom awsm (2,3), kids (20,3) red (61,3), open (11,4) Liza Sperling ask (6,5), co  X  ee (8,3) mochi (1,3), hangout (5,2)
Tristan Walker win (19,4), amazing (55,5) awesome (51,4), please (9,4) accounts in two networks, and we know some existing anchor links before the inference. By explicitly consider the users heterogeneous data within the networks, i.e. , social, spatial, temporal and text information, our method can e  X  ectively predict the anchor links w.r.t. one-to-one constraint across multiple heterogeneous social networks. This work is supported in part by NSF through grants IIS-0905215, CNS-1115234, IIS-0914934, DBI-0960443, and OISE-1129076, and US Department of Army through grant W911NF-12-1-0066. [1] L. Adamic and E. Adar. Friends and neighbors on the [2] L. Backstrom and J. Leskovec. Supervised random [3] M. Bayati, M. Gerritsen, D. Gleich, A. Saberi, and [4] I. Bhattacharya and L. Getoor. Collective entity [5] B. Cao, N. Liu, and Q. Yang. Transfer learning for [6] C.-C. Chang and C.-J. Lin. LIBSVM: a library for [7] Y. Dong, J. Tang, S. Wu, J. Tian, N. Chawla, J. Rao, [8] L. Dubins and D. Freedman. Machiavelli and the [9] L. Getoor and C. Diehl. Link mining: a survey. [10] M. Hasan, V. Chaoji, S. Salem, and M. Zaki. Link [11] G. Klau. A new graph-based method for pairwise [12] J. Leskovec, L. Backstrom, R. Kumar, and [13] D. Liben-Nowell and J. Kleinberg. The link prediction [14] R. Lichtenwlter, J. Lussier, and N. Chawla. New [15] A. Malhotra, L. Totti, W. Meira, P. Kumaraguru, and [16] M. Newman. Clustering and preferential attachments [17] E. Raad, F. Dijon, R. Chbeir, and A. Dipanda. User [18] S. Scellato, A. Noulas, and C. Mascolo. Exploiting [19] R. Singh, J. Xu, and B. Berger. Pairwise global [20] J. Tang, T. Lou, and J. Kleinberg. Inferring social ties [21] J. Tang, S. Wu, J. Sun, and H. Su. Cross-domain [22] J. Vosecky, D. Hong, and V.Y. Shen. User [23] C. Wang, V. Satuluri, and S. Parthasarathy. Local [24] Y. Yang, N. Chawla, Y. Sun, and J. Han. Link [25] M. Ye, D. Shou, W. Lee, P. Yin, and K. Janowicz. On [26] B. Zadrozny and C. Elkan. Transforming classifier
