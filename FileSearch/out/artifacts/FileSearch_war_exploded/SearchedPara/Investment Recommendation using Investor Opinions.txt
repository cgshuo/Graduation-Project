 Investor social media, such as StockTwist, are gaining increasing popularity. These sites allow users to post their investing opinions and suggestions in the form of microblogs. Given the growth of the posted data, a significant and challenging research problem is how to utilize the personal wisdom and different viewpoints in these opinions to help investment. Previous work aggregates sentiments related to stocks and generates buy or hold recommendations for stocks obtaining favorable votes while suggesting sell or short ac-tions for stocks with negative votes. However, considering the fact that there always exist unreasonable or misleading posts, sentiment aggregation should be improved to be robust to noise. In this paper, we improve investment recommendation by modeling and using the quality of each investment opinion. To model the quality of an opinion, we use multiple categories of features generated from the author information, opinion content and the characteristics of stocks to which the opinion refers. Then, we discuss how to per-form investment recommendation (including opinion recommenda-tion and portfolio recommendation) with predicted qualities of in-vestor opinions. Experimental results on real datasets demonstrate effectiveness of our work in recommending high-quality opinions and generating profitable investment decisions.
In the past few years, social-media sites (e.g., Twitter) have e-merged as one of prime platforms where people share their ideas and opinions. Some social media sites attract special categories of users, who exchange specialized information. For instance, Stock-Twits (www.stocktwits.com) is Twitter-like platform for users who share their investing and trading opinions.

Given the availability of platforms such as Twitter or Stocktwits, an interesting question is how to exploit the opinions of investors posted there in order to properly invest in stock markets. Previ-ous work on the subject extracts [7] and aggregates [3, 8, 5, 4] the sentiments of users in the posted messages into a representative investment opinion about a stock. However, few of them explicit-ly consider the problem that there could be posts with misleading opinions either by non-experts or by malicious users. Our work explicitly considers filtering out such noisy posts by evaluating the quality of each single investing opinion. Among previous work, only [1] noticed that different users post opinions of different qual-ity and propose a framework to identify experts by considering the performance of users X  past opinions. The main difference between our work and [1] is that [1] identifies the quality of users rather than that of specific opinions. However it is possible that different posts by the same user may have different quality (e.g., the user is expert only for a subset of the investment products). On the oth-er hand in our work, we explicitly predict the quality of specific opinions and use additional information (e.g., content) for this pur-pose. Moreover, [1] only uses the opinions posted by authors in the past to derive the characteristics of authors, while we consider more features (e.g., social popularity) of authors.

Our work deals with the problem of predicting the quality of investing opinions and employs this knowledge to recommend to users high-quality opinions and portfolios to invest in. We first for-mulate the opinion quality prediction problem. Then, we propose multiple categories of features related to opinion author, opinion content and stocks that the opinion talks about. We also discuss how to construct a prediction function upon the proposed features using regression theory. After that, we show how to perform in-vestment recommendation based on the predicted opinion qualities. Finally, we conduct experiments for evaluating the performance of investment recommendation using our methodology and competi-tor approaches to verify the effectiveness of our work.
Consider a collection of opinions O . For each opinion o  X  O , we denote by a o the author of o , by c o the content of o , and by E o the set of stocks o talks about. Moreover, we formulate a set V o of investment views in o , which consists of ( e,l ) pairs, where e is a stock discussed in o and l is the corresponding sentiment la-bel: bullish (positive) or bearish (negative). For example, Figure 1 shows two investment opinions posted in Stocktwits. The invest-ment views of the first opinion are {(GE, bearish)} and those of the second opinion are {(BBUX, bullish)}.
 Next we define the quality of an investing opinion o , denoted as Q ( o ) . In our work we regard o to be of high-quality if the invest-ment views V o could help readers to perform profitable trading . Specifically, suppose E o bu ( E o be ) includes the stocks corresponding to bullish (bearish) sentiment labels in V o . If o is of high-quality, the prices of stocks in E o bu ( E o be ) should significantly rise (fall) in the future. Then, if a reader of o longs the stocks in E o the stocks in E o bu and sells them in the future) and shorts the stocks in E o be (i.e., borrows the stocks in E be to sell them and buys them back in the future), the reader could obtain high profit. According to the above discussion, Q ( o ) can be defined as where p c ( e ) and p f ( e ) are current price and future price of stock e (in this paper, we set as future price the price after a week). In this formula, p crease) rate of e  X  X  price in the future, which actually equals to the return rate corresponding to the investment view ( e,l ) , where l is bullish (bearish).

The main goal of our work is to correctly predict the qualities of investment opinions and then use them for investment recommen-dation. We focus on two recommendation tasks. One is suggesting a set of high-quality investor opinions to users (i.e., opinion recom-mendation ). The other is recommending a portfolio consisting of a set of stocks to long or short (i.e., portfolio recommendation ).
We start by exploring how well different categories of features capture the quality of investing opinions. We consider features re-lated to the opinion author, opinion content and the stocks the opin-ion talks about. Below we describe each of them in detail.
The author of an opinion is one of the main factors determining its quality; if the author is an expert in the domain, the opinions posted by him/her are more likely to be high quality. The most in-tuitive information reflecting author expertise is the performance of opinions posted by the author in the past. Suppose we are predict-ing the quality of opinion o . We first extract the opinions posted by a o (i.e., the author of o ) in the past. Then, we take the aver-age quality of opinions written by a o in the past as the first feature describing author expertise. This feature is denoted by A_avgqual . Moreover, we also take the percentage of high-quality opinions in all opinions posted by a o in the past as the second feature. Specif-ically, we regard an opinion to be of high-quality if its quality val-ue is larger than a threshold (e.g., 0.1). Then, the percentage of high-quality opinions in O u is used as another feature (denoted by A_perchigh ) in our model. Besides measuring author expertise from his/her past opinions, we also explore additional information. In investor-based social media, a user typically follows other user-s if he/she values their opinions. Thus, we use social popularity of authors (denoted by A_social ) as a third author expertise fea-ture. We model A_social as the PageRank score [2] of the author (i.e., a commonly used measurement for evaluating social popular-ity of users). The fourth feature of author expertise is the number of opinions the author posted in the past (denoted as A_onum ); i.e., we assume that if a user actively posts opinions, he/she has higher expertise.

The content of an opinion is also potentially related to its qual-ity since it may explain why the authors post their particular view. Sentiment strength in an opinion can also be extracted from the content. Thus, we believe content features may play an important role in predicting opinion quality. In our work, we consider word-level content features. Specifically, for a given opinion, we analyze the words it contains. For each word w , we calculate w_avgqual and w_perchigh : the average quality of opinions containing w and the percentage of high-quality opinions in all opinions posted con-taining w , respectively (similar to A_avgqual and A_perchigh ). Let v ( w ) and v p ( w ) be the w_avgqual and w_perchigh values of word w , respectively. Then, assuming that the content of opinion o con-sists of words { w 1 ,w 2 ,  X  X  X  ,w n } , we define two opinion content features C_avgqual and C_perchigh , denoted by E ( v a ) and as the mean of discrete values { v a ( w i ) } n i =1 and { v spectively.

Besides features related to opinion author and content, we also define features for stocks. Similar to C_avgqual and C_perchigh , for a given opinion, we examine the stocks it talks about. For each stock e mentioned in o , e_avgqual and e_perchigh are the aver-age quality of opinions talking about e and the percentage of high-quality opinions in all opinions talking about e , respectively. Then, assuming that o mentions stocks { e 1 ,e 2 ,  X  X  X  ,e n } , we employ the mean of e_avgqual and e_perchigh values of { e i } n i =1 tures (denoted as S_avgqual and S_perchigh ) to describe the stocks mentioned in o . For a new opinion o i , we extract the values of features A_avgqual, A_prechigh, A_social, A_onum, C_avgqual, C_prechigh, S_avgqual, S_prechigh , as defined in Section 3.1. Suppose the features of o are [ x i 1 ,x i 2 ,  X  X  X  ,x i n ] . The predicted quality of o  X  Q ( o i ) ) can be obtained by a function f (i.e.,  X  Q ( o , x n ]) ). We can choose regression models [9] for defining f . For this purpose, we can use as training set all { o j ,  X  Q ( o o is an opinion posted in the past and  X  Q ( o j ) is the real quality of o . After f is trained, we can use it to estimate the quality of o
In our work, we utilize the predicted opinion qualities for t-wo investment-recommendation tasks: recommending high-quality opinions and recommending portfolios. The high-quality opinions are selected as those with the highest predicted qualities. For gener-ating portfolios, we use the predicted qualities of opinions to weigh them and then aggregate the sentiment about stocks in the opinions to generate scores for the stocks. This way, we can create daily investment recommendations based on the posted opinions.
In previous work on constructing portfolios based on investor opinions, stocks are selected according to their aggregate sentiment indexes. One of the most popular aggregate bullish and bearish sentiment indexes [3, 8, 5] are: where  X  bu i (  X  be i ) denotes bullish (bearish) sentiment index for stock of all opinions in O d ( All ), the average quality of O rec S_avgqual , S_prechigh , and the average quality of O rec . e while O be i ( O be i ) is the set of opinions containing bullish (bear-ish) views on e i . In other words, for each o in O investment views V o should contain ( e i ,l i ) and l i is bullish (bear-ish). Obviously, if  X  bu i is larger than  X  be i (i.e., |O we should consider to long e i while if the  X  be i is larger than  X  (i.e., |O be i | &gt; |O bu i | ), we should consider to short e the difference between  X  bu i and  X  be i (i.e., |  X  bu i  X   X  views are more consistent and the rising (if  X  bu i &gt;  X   X  i &gt;  X  bu i ) probability should also be large. Thus, for generating a portfolio, we could sort stocks in decreasing order of |  X  and take the top k 0 ones as the portfolio suggestion. Finally, we long (short) the stocks if their bullish indexes are larger (smaller) than their bearish indexes.

In our work, we attempt to utilize the predicted qualities in port-folio recommendation by giving higher weights to views in high-quality opinions when we aggregate sentiment labels in opinion-s X  investment views. We call this quality-sensitive portfolio rec-ommendation. Note that in Equation (2), |O bu i | actually equals P o  X  X  bu i 1 . Thus, by weighting views in o with sensitive aggregation for sentiment indexes should be  X  i = ln
Now, we discuss in detail how to perform opinion recommen-dation and portfolio recommendation on each tradable day. Thus, our framework recommends a set of high-quality opinions before the stock market opening time, in order for these opinions to help users determine their trading strategy. In addition, we recommend a set of stocks to users to trade. As a test case, in our work, we focus on the stocks traded at New York Stock Exchange (NYSE) and Nasdaq stock markets. The opening time of the stock markets is 9:30 am (Eastern Standard Time). We set the time to generate recommendations at 8:00 am. The recommendation procedure for k opinions and k 0 -stock portfolios is summarized by Algorithm 1 (assuming the recommendation is performed on day d ).
For experiments, we collect all messages posted in 2014 from the investor-based social media StockTwits. StockTwits users post Algorithm 1 Daily Investment Recommendation 3: estimate predicted quality  X  Q ( o i ) = f ([ x i 1 ,x 4: end for 9: end for short messages (limited to 140 characters) that include ideas or opinions on specific investments. Stock symbols in messages are preceded by a  X  X ashTag X  ($) (as Figure 1 shows). Here, we on-ly use of StockTwits messages have at least one CashTag. Finally, the dataset we used contains 1,630,914 messages posted by 29,804 users and related to 5,541 stocks traded at NYSE and Nasdaq. Fi-nally, we used the Yahoo! Finance API to crawl historical prices of stocks, used in Equation (1) and for evaluating effectiveness.
To generate O rec d , we first predict qualities in E d . Specifical-ly, we train a linear regression model [6] with {opinion, quality} pairs corresponding to the opinions posted on other days. After the regression model is trained and the qualities of opinions in E are predicted, O rec d is set as the opinions with the top k predicted qualities.

For each O rec d , we evaluate its performance as the average qual-ity of opinions in it:
Figure 2 presents the average performance of all O rec d s generated on all tradable days in 2014. Besides the results corresponding to our model (multiple features + regression, denoted by Regression , we also show the average quality of all opinions in E d (to see if the average quality of O rec d is larger than it) and the results of using Figure 3: Comparison of recommended portfolios obtained by Baseline and Expert and our method ( Ours ). The y-axis shows the average value of recommended portfolios X  performances (i.e., equation 5). each of the features alone. To test each feature alone, we generate O d as opinions corresponding to k highest values based on each single feature. As Figure 2 shows, each of the proposed features could be used retrieve high-quality opinions to a different extent, since the average quality of opinions in O rec d corresponding to all features are larger than the average quality of all opinions. The best performance is achieved by our model (multiple features + regression).
To generate E rec d , we use conventional sentiment indexes (de-noted as Baseline ) used in previous work [3, 8, 5] (see Equation (2)) and our (quality-sensitive) sentiment indexes (denoted as Ours ) corresponding to Equation (3) to construct portfolios (see Section 4.1 and Algorithm 1 for details). Moreover, as another baseline, we employ the author expertise model proposed in [1] to to generate expert-sensitive sentiment indexes (denoted as Expert , see [1] for details).

For evaluating E rec d , we calculate the return rate obtained if we long the stocks for which opinions in E rec d give bullish recommen-dations and short the stocks for which opinions in E rec d bullish (bearish) ballots from opinions in E rec d . The performance of E rec d can be evaluated as
Figure 3 shows the average performance of all E rec d s generated on all tradable days in 2014. We compare the performances corre-sponding to our method and other competitors (i.e., Baseline and Expert ). The results show that our quality-sensitive method sug-gests the most profitable portfolios.

Besides, we also study the cumulative return obtained if we just trade stocks in portfolios recommended by our method and perform continuous trading from the beginning to the end of 2014. Specif-ically, from the first tradable day in 2014, we repeat the following procedure: Suppose money for trading is available on day d . First-ly, we long stocks in E rec d bu and short stocks in E rec a week passes since day d , we sell stocks in E rec d bu and buy back the borrowed stocks in E rec d be . Thus, money for trading will be available again on day d +7 . In the next iteration of trading, d becomes d +7 and we perform trading again according to E rec d +7 . Figure 4 shows the cumulative gain after 39 such trading sessions. Here, we also include the cumulative return obtained if we trade on Dow Jones Industrial Average (DJIA) index, which simulates a portfolio of 30 significant stocks traded at NYSE and Nasdaq. We can see that, the return rates obtained by our portfolios are much higher than those Figure 4: Cumulative return with recommended portfolios (in 2014). by the DJIA index, proving that our portfolios consisted from s-tocks performing better than average. Also note that the return rate increases and that smaller values of k 0 give higher return. Specifi-cally, for k 0 = 5 , at the end of 2014, we could obtain a revenue of around 30%.
In this paper, we studied the problem of analyzing the qualities of investor opinions posted on social media. Moreover, we explore the use of predicted opinion qualities for opinion recommendation and portfolio recommendation. Experiments on a real-world dataset verify the effectiveness of our work in recommending high-quality investment opinions and profitable portfolios. [1] R. Bar-Haim, E. Dinur, R. Feldman, M. Fresko, and [2] J. Heidemann, M. Klier, and F. Probst. Identifying key users in [3] C. Oh and O. Sheng. Investigating predictive power of stock [4] N. Oliveira, P. Cortez, and N. Areal. On the predictability of [5] T. Rao and S. Srivastava. Analyzing stock market movements [6] G. A. Seber and A. J. Lee. Linear regression analysis , volume [7] W. Tu, D. Cheung, and N. Mamoulis. Improving microblog [8] W. Tu, D. Cheung, and N. Mamoulis. Time-sensitive opinion [9] V. Vapnik. The nature of statistical learning theory . Springer
