 Named entity recognition (NER) is a well-studi ed research in the area of information extraction (IE) aiming to locate and extract significant atomic elements in text into predefined categories. The most common studied categories are  X  X ame of people, organization and location X  [1], [2] and [3],  X  X ate, time and phone X  [4],  X  X ame of person, diploma, organization and research X  [5] and many more entities as of interest of the application intended to be built. 
Andrew e t al. used list of features, lexicon (augment using web search engine) and conditional random fields (CRF), a machine learning probabilistic approach to extract named entities in structured texts of CoNLL03 (name of person, location, organization and miscellaneous) [2]. Einat et al. focused solely in extracting personal names from informal text (email) using CRF and dictionary to enhance the names extraction [6]. The performance results vary among the chosen email corpora due to the free writing style in informal text and insufficient training data to produce good model for NER. Satoshi et al. manually hand-crafted about 1400 rules and 130,000 instances of dictionary to extract 200 categories of named entity covering generally Japanese newspaper domain [7]. In 2010, Laura et al. proposed domain adaptation of rule-based annotator to e nhance domain customization for NER, a domain-independent CoreNER library of 104 features definition were being crafted manually to tailor different application domains need [1]. Public datasets of CoNLL03, Enron and ACE05 were used to train and test the  X  X erson, location and organization X  entities. However, it is still manual and time consuming. 
Character level model [3] used Hidden Markov Model (HMM) and Maximum-entropy Conditional Markov Model to inspect each letter in identifying named entity in ConLL, the character emission model is based on the n -gram proper-name classification engine [8] and state transition chaining is used to identify named entity boundary and classify them into predefined categories. Le et al. studied the use of inductive logic programming to extract named entities (name, diploma, organization, research) in Vietnamese language [5]. 80 Vietnamese homepages of scientist that were tagged manually and a set of features were used to train to generate a set of extraction rules to extract named entities in chosen test corpus. Javier et al. discussed the impact of coverage, reliability and independent number of features in extracting name of person [9]. Machine-learning algorithm, NER and classification were used to studied the mentioned impact, in the case of NER, combination of Stanford NE Recogniser (machine learning) and OAK (rule based English analyzer) were used to detect NE. It generates good performance results if all NE features are being used in the training process when producing trained model for NE recognition. Michael et al. studied further details of breaking down  X  X ame of person X  into sub-categories such as  X  X olitician X  and  X  X ntertainer X , topic signatures and Wordnet are used to enhance the trained model using supervised machine learning [10]. 
All the above mentioned NER techniques are mainly constrained by two major issues as discussed below: (1) Recognition approach : The evolutionary of NER begins with manual effort to semi-automatic, and then to automatic approaches. Manual NER requires excessive amount of time and resources from domain expert and knowledge engineer to hand-coded the rules manually. In such approach, existing text mining resources such as WordNet and dictionaries are always in used to speed up the manual NER process [7]. Knowing that manual construction of NER rules exhibits a promising performance results due to the intentionality of recognizing NE in the domain studied, Laura et al. explored the domain customization using rule-based annotator; a set of universal rules is needed to accommodate investigated domain needs [1]. However, flexibility and scalability is still the main issue to be dissolved in manual NER. Semi-automatic NER begins with seed (manual selection) NE. Often, machine learning is used to train the seed NE to generate a model for NER. The quality of chosen seed data will greatly impact the trained model for NE recognition. Automatic NER implies fully recognition without human intervention. It is not an easy task as each domain exhibits differently in term of context and structural text representation. (2) Nature of the domain : Research domain done in the area of NER can be classified into fiction based and non-fiction based. Fiction implies literary work which is based on imagination and not necessary on facts, e.g. novel and fairy tales, whereas non-fiction denotes representation of a subject which is presented as fact, such as manual, news-wired and tourism website. Most NERs developed are in non-fiction based. Non-fiction based exhibits certain patterns in identifying NE, for instance, name of person may start with designator, capital letter of the first character, naming in a human way. However, fiction based exhibits complexity and uncertainty in locating NER as it represents name of person in a diverse spectrums, ranging from living things (animals, plants, person) to non-living things (vehicle, furniture). Elson et al. employed quoted speech attribution (dialogue and internal monologue) and syntactical approach (adaptation of natura l language tools) to identify character in characters are represented in human alike name. 
In this paper, we propose a fully automated named entity recognition framework to overcome the above mentioned issues. Fiction-based domain is used to test on the proposed framework. We study the predefined category of  X  X ame of person X  but aim to recognize protagonist(s) in fairy tales. Stanford parser and Stanford dependency relation Word(s) that is/are labeled as VERB between two potential NEs will be extracted to form syntactic triplet structure of subject  X  verb  X  object (S-V-O) at a sentence level. WORDNET is then used to substantiate the extracted verb that associates with human action in identifying protagonist. Finally, threshold value is used to filter potential NEs in previous research on ontology construction in fiction-based domain [12]. 
The outline of this paper is as follow: Section 2 discusses the technologies background for this work. Section 3 presents the proposed system framework. Section 4 describes the experiments and the paper is concluded in Section 5. 2.1 Stanford Parser Stanford parser is a probabilistic parser that analyses syntactic structure of natural language sentences. It has the performance of 86.36% of accuracy in parsing [13]. It is implemented in Java by Stanford University X  X  Natural Language Processing Group and it is available in four languages (English, Chinese, Arabic and German). In this project, English is used to run and test on the selected plain text input. formats, including part-of-speech tagged text, phrase structure trees, and a grammatical relations (typed dependency) format. In this work, only phrase structure trees and grammatical relations are used. 2.1.1 Phrase Structure Parse Phrase structure trees utilized unlexicalized probabilistic context free grammar (PCFG) to achieve greater efficiency and accuracy in parsing sentences. Generally, phrase structure tree is a syntactical structure of sentence that segment group of words into phrases to form the subject and object of the verb. 2.1.2 Stanford Dependencies Stanford dependencies of English sentences are brought forth based on rules / patterns and Treebank representation from the generated phrase structure trees. There are forty-eight grammatical relations altogether to form the Stanford dependencies. It is a predicate argument representation with a gra mmatical relation used to bind the right dependencies of two tokens. 
In our work, Stanford dependencies is us ed to identify pair of words that are adjacent to each other based on the index tagged next to it or words that tagged with grammatical relation of  X  nn  X  will be extracted to form a list of term. This is extremely useful to limit the generation of candidate terms from phrase structure trees. 
Our hypotheses for detecting candidate terms are described as follows: (i) Pair of words that are adjacent often partially contributes to entity recognition. (ii) Pair of words that are tagged with  X  nn  X  grammatical relation often denotes 2.2 WordNet Wordnet 1 is the product of a research project at Princeton University which has attempted to model the lexical knowledge of a native speaker of English [14]. A derivationally related form (DRF) is one of the features available in WordNet being used to identify verb that associates with human action. In this work, each extracted verb (V) that formed S-V-O serves as a keyword for retrieving its corresponding senses X  description in derivationally related forms. Each returned description will be examined sentence by sentence. In the presence of either one of the three key phrases of  X  someone  X ,  X  a person  X  or  X  one who  X  in the sentence, the verb is considered to be associated with human action. The system framework for our proposed NER, focused solely in identifying fiction protagonist(s) is depicted in Fig. 1. The prototypical implementation of the automated NER (protagonist(s)) illustrated in Fig. 1 is explained as below: 
The terms used in the framework are: term sd : Terms that are extracted from stanford dependencies based on two criteria; (1) words that are adjacent to each other and (2) words which are tagged with the  X  X n X  grammatical relation term psp : Terms that are tagged with noun phrase (NP) in phrase dependency parse VERB per : Verb that associates with the human action The first four steps of system framework in this work are generally similar to previous work done in ontology construction for fiction-based domain [12]. I nput : Fiction web page S tep 1 : Document cleaning S tep 2 : Pre-linguistic processing S tep 3 : Candidate NE Contextualization S tep 4 : S-V-O (triplet) Extraction S tep 5 : Verb Analysis S tep 6 : Inbound/Outbound NE Link Analysis O utput : Each proportion measured in the previous step is summed up to 4.1 Dataset Eight fairy tales from http://www.kidsgen.com were used to test on our proposed framework and the word count for each fairy tales is presented in the second column which is to identify protagonist(s) in diverse spectrums. Some of the protagonists have a character name while some are just the type of the animal/inserts. 4.2 Results and Discussion The most challenging issue in NER, particularly in the fiction domain of fairy tales lies in its evaluation with gold standard as protagonist name might (1) slightly vary according to the version of the tales or (2) context sensitive to the local flavor. Therefore, a simple survey was conducted on the eight studied fairy tales on 6 primary school students. The third column in Table 1 shows protagonists for each work to measure the performance of our approach and other NER tools. Three evaluation metrics, namely recall, precision and F-measure are used to evaluate the outcome of the extracted protagonist(s). Table 2 shows the protagonists extracted by our method using 2, 3 and 4 variables. The actual protagonist for each fairy tale app ears in bold. 2-variable considered only proportion of inbound link (equation 4) and outbound link (equation 5) that attached to filtered NE candicate . 3-variable is the method we have used in work as shown in Step 6 above while 4-variable is an extension of 3-variable with an additional proportion of links (inbound and outbound link ) that associates with VERB per against all links (inbound and outbound link) of each filtered NE candicate . Normalization is performed on each calculated proportion. The number of extracted protagonist(s) is the same across 2, 3 and 4 variables. However, the pr otagonist that were extracted are slightly different between 2-variable and 3, 4-variab le. 3-variable and 4-variable extract the same list of protagonists. As mentioned in step 6, it is insensib le to naively accept protagonist which the NE candicate has only one inbound and/or outbound link, and the verb is associated with human action. Comparatively, NE candicate that has more than one inbound and/or outbound links will definitely have decreased verb probability associates with human action. In fact, protagonists are the main character(s) that should actively engage in existences of inbound and/or outbound link for each corresponding NE candicate . Finally, filtered NE candicate is produced after eliminating NE candicate that has the value of 0, 1 and  X #DIV/0! X  for its corresponding in and out . The above mentioned scenario reflects the approach applied in 2-variable, high proportional value of inbound and outbound link as approach taken in might not sufficient in identifying protagonist in fairy tales. The additional proportional value in 4-variable does not contribute to protagonist identification as it shows the same result as 3-variable. The engagement of filtered NE candicate in a story is shown explicitly by frequency (total link of inbound and outbound). High proportional value of each variable (3-variable) increases the probability of filtered NE candicate to be chosen as protagonist whereas high frequency with low proportional value of inbound and outbound link may prevent NE candicate to be protagonist. 
Table 3 compares the results between our approach with three freely available tools on the internet, namely AlchemyAPI 4 , General Architecture for Text Engineering not included as none of the tools, including our approach is able to identify any protagonist in the story . AlchemyAPI employs hybrid approach in NER where statistical algorithms are combined with natural language processing technology to analyze and identify hundreds of entity types and  X  X eople X  is one of its types. Contextual cues are used to disambiguate among entity types. For instance, information on a person X  X  career and where they are located are some of the contextual cues used to disambiguate  X  X eople X  entity type. GATE uses predefined gazetteer list (ANNIE) and rule based approach (JAPE) for finding entity types. Various machine learning techniques can also be imposed on GATE to increase the performance of the NER. However, in this paper, the default GATE NER was used. Illinois extracts NE using external knowledge (gazetteers) and machine learning paradigm. Portability, scalability and no training corpus are the main reasons of choosing these three tools for comparison. 
In this work, protagonist can be generally divided into two categories, namely protagonist name (e.g., Snow White and Beauty) and protagonist entity, e.g., insects (ant, grasshopper), and animal (duckling). As can be seen in Table 3, most of the tools perform well on the protagonist name, except for GATE which is constrained by the limited number of name listed in gazetteer. The good performance in this aspect is due to protagonist name is very similar to human name. However, the three tools performed poorly and in fact none of the protagonist entity were identified. Comparatively, our approach is able to perform across the two mentioned categories. In addition to producing comparable performance results with the chosen three tools on the protagonist name, our approach outperforms the rest in identifying protagonist entity, that reduced the weight shown in equation (7) to be below the threshold. The same applies to the fairy tale of  X  Ugly duckling  X  that none of the tools is capable in identifying  X  duckling  X  as its protagonist because the word  X  duckling  X  does not seem to be human related name or appearing in the listed gazetteer. Our approach failed too, owing to the 0 value generated for in (equation 4). There is only one action imposed on  X  duckling  X  and the action is not related to human action. A protagonist should interact actively in story flow and contribute to inbound link (VERB per , action being taken towards protagonist) and outbound link (VERB per , action taken by protagonist). Therefore, both number of actions being taken and imposed on filtered NE candicate , and its relevancy to human action give strong impact during protagonist identification. Lacking of either factor may hamper the effort of protagonist identification. 
File size and activities/events affiliated with protagonist in fairy tale do impact the performance results of protagonist identification. This is due to the Verb per for inbound and outbound link will influence the proportion of NE candicate  X  X  inbound and outbound link. Small file size imposes limited activities or events affiliated with protagonist, which reduces the probability of inbound and outbound link that contain VERB per . This can be seems very clearly for the fairy tales of  X  Ant and grasshopper  X  and  X  Ugly duckling  X  which have 142 and 841 word count respectively. 
Recall, precision and F-measure are interdependent. High recall with low precision and vice versa might yield low F-measure, while high recall and high precision will definitely generate high F-measure. With the existence of one or two protagonists for a fairy tale always incur low precision if the number of identifiable filtered NE candicate likely to improve the performance results of the protagonist identification. Table 4 summarizes the comparative study. Our approach yields better results compared to the other three tools. This paper presents an algorithmic framework for protagonist identification in fiction domain. Comparatively, our proposed method is able to perform consistently. For future work, we intend to improve the protagonist identification by collaborating with VerbNet [15], which is the largest on-line verb lexicon in English that incorporates both semantic and syntactic about its content. 
