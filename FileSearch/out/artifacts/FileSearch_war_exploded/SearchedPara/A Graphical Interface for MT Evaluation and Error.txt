 Evaluation methods are a key ingredient in the de-velopment cycle of machine translation (MT) sys-tems. As illustrated in Figure 1, they are used to identify and analyze the system weak points (error analysis), to introduce new improvements and adjust the internal system parameters (system refinement), and to measure the system performance in compari-son to other systems or previous versions of the same system (evaluation).

We focus here on the processes involved in the error analysis stage in which MT developers need to understand the output of their systems and to assess the improvements introduced.

Automatic detection and classification of the er-rors produced by MT systems is a challenging prob-lem. The cause of such errors may depend not only on the translation paradigm adopted, but also on the language pairs, the availability of enough linguistic resources and the performance of the linguistic pro-cessors, among others. Several past research works studied and defined fine-grained typologies of trans-lation errors according to various criteria (Vilar et al., 2006; Popovi  X  c et al., 2006; Kirchhoff et al., 2007), which helped manual annotation and human analysis of the systems during the MT development cycle. Recently, the task has received increasing at-tention towards the automatic detection, classifica-tion and analysis of these errors, and new tools have been made available to the community. Examples of such tools are AMEANA (Kholy and Habash, 2011), which focuses on morphologically rich lan-guages, and Hjerson (Popovi  X  c, 2011), which ad-dresses automatic error classification at lexical level.
In this work we present an online graphical inter-face to access A SIYA , an existing software designed to evaluate automatic translations using an heteroge-neous set of metrics and meta-metrics. The primary goal of the online interface is to allow MT develop-ers to upload their test beds, obtain a large set of met-ric scores and then, detect and analyze the errors of their systems using just their Internet browsers. Ad-ditionally, the graphical interface of the toolkit may help developers to better understand the strengths and weaknesses of the existing evaluation measures and to support the development of further improve-ments or even totally new evaluation metrics. This information can be gathered both from the experi-ence of A SIYA  X  X  developers and also from the statis-tics given through the interface to the A SIYA  X  X  users.
In the following, Section 2 gives a general overview of the A SIYA toolkit. Section 3 describes the variety of information gathered during the eval-uation process, and Section 4 provides details on the graphical interface developed to display this infor-mation. Finally, Section 5 overviews recent work re-lated to MT error analysis, and Section 6 concludes and reports some ongoing and future work. A
SIYA is an open toolkit designed to assist devel-opers of both MT systems and evaluation measures by offering a rich set of metrics and meta-metrics for assessing MT quality (Gim  X  enez and M ` arquez, 2010a). Although automatic MT evaluation is still far from manual evaluation, it is indeed necessary to avoid the bottleneck introduced by a fully man-ual evaluation in the system development cycle. Re-cently, there has been empirical and theoretical justi-fication that a combination of several metrics scoring different aspects of translation quality should corre-late better with humans than just a single automatic metric (Amig  X  o et al., 2011; Gim  X  enez and M ` arquez, 2010b).
 A SIYA offers more than 500 metric variants for MT evaluation, including the latest versions of the most popular measures. These metrics rely on dif-ferent similarity principles (such as precision, recall and overlap) and operate at different linguistic layers (from lexical to syntactic and semantic). A general classification based on the similarity type is given below along with a brief summary of the informa-tion they use and the names of a few examples 1 . Lexical similarity: n -gram similarity and edit dis-Syntactic similarity: based on part-of-speech tags, Semantic similarity: based on named entities, se-
Such heterogeneous set of metrics allow the user to analyze diverse aspects of translation quality at system , document and sentence levels. As discussed in (Gim  X  enez and M ` arquez, 2008), the widely used lexical-based measures should be considered care-fully at sentence level, as they tend to penalize trans-lations using different lexical selection. The combi-nation with complex metrics, more focused on ad-equacy aspects of the translation (e.g., taking into account also semantic information), should help re-ducing this problem. A
SIYA operates over a fixed set of translation test cases, i.e., a source text, a set of candidate trans-lations and a set of manually produced reference translations. To run A SIYA the user must provide a test case and select the preferred set of metrics (it may depend on the evaluation purpose). Then, A
SIYA outputs complete tables of score values for all the possible combination of metrics, systems, documents and segments. This kind of results is valuable for rapid evaluation and ranking of trans-lations and systems. However, it is unfriendly for MT developers that need to manually analyze and compare specific aspects of their systems.

During the evaluation process, A SIYA generates a number of intermediate analysis containing par-tial work outs of the evaluation measures. These data constitute a priceless source for analysis pur-poses since a close examination of their content al-lows for analyzing the particular characteristics that Table 1: The reference sentence, two candidate translation examples and the O l scores calculation differentiate the score values obtained by each can-didate translation.

Next, we review the type of information used by each family of measures according to their classifi-cation, and how this information can be used for MT error analysis purposes.
 Lexical information. There are several variants un-der this family. For instance, lexical overlap ( O l is an F-measure based metric, which computes sim-ilarity roughly using the Jaccard coefficient. First, the sets of all lexical items that are found in the ref-erence and the candidate sentences are considered. Then, O l is computed as the cardinality of their in-tersection divided by the cardinality of their union. The example in Table 1 shows the counts used to cal-culate O l between the reference and two candidate translations (boldface and underline indicate non-matched items in candidate 1 and 2, respectively). Similarly, metrics in another category measure the edit distance of a translation, i.e., the number of word insertions, deletions and substitutions that are needed to convert a candidate translation into a ref-erence. From the algorithms used to calculate these metrics, these words can be identified in the set of sentences and marked for further processing. On another front, metrics as BLEU or NIST compute a weighted average of matching n -grams. An inter-esting information that can be obtained from these metrics are the weights assigned to each individual matching n -gram. Variations of all of these mea-sures include looking at stems, synonyms and para-phrases, instead of the actual words in the sentences. This information can be obtained from the imple-mentation of the metrics and presented to the user through the graphical interface.
 Syntactic information. A SIYA considers three lev-els of syntactic information: shallow, constituent and dependency parsing. The shallow parsing an-notations, that are obtained from the linguistic pro-cessors, consist of word level part-of-speech, lem-mas and chunk Begin-Inside-Outside labels. Use-ful figures such as the matching rate of a given (sub)category of items are the base of a group of metrics (i.e., the ratio of prepositions between a reference and a candidate). In addition, depen-dency and constituency parse trees allow for captur-ing other aspects of the translations. For instance, DP-HCWM is a specific subset of the dependency measures that consists of retrieving and matching all the head-word chains (or the ones of a given length) from the dependency trees. Similarly, CP-STM, a subset of the constituency parsing family of mea-sures, consists of computing the lexical overlap ac-cording to the phrase constituent of a given type. Then, for error analysis purposes, parse trees com-bine the grammatical relations and the grammati-cal categories of the words in the sentence and dis-play the information they contain. Figure 2 and 3 show, respectively, several annotation levels of the sentences in the example and the constituency trees. Semantic information. A SIYA distinguishes also three levels of semantic information: named enti-ties, semantic roles and discourse representations. The former are post-processed similarly to the lex-ical annotations discussed above; and the semantic predicate-argument trees are post-processed and dis-played in a similar manner to the syntactic trees. Instead, the purpose of the discourse representation analysis is to evaluate candidate translations at doc-ument level. In the nested discourse structures we could identify the lexical choices for each discourse sub-type. Presenting this information to the user re-mains as an important part of the future work. This section presents the web application that makes possible a graphical visualization and interactive ac-cess to A SIYA . The purpose of the interface is twofold. First, it has been designed to facilitate the use of the A SIYA toolkit for rapid evaluation of test beds. And second, we aim at aiding the analysis of the errors produced by the MT systems by creating Figure 2: PoS, chunk and named entity annota-tions on the source, reference and two translation hypotheses Figure 3: Constituency trees for the reference and second translation candidate a significant visualization of the information related to the evaluation metrics.

The online interface consists of a simple web form to supply the data required to run A SIYA , and then, it offers several views that display the results in friendly and flexible ways such as interactive score tables, graphical parsing trees in SVG format and interactive sentences holding the linguistic annota-tions captured during the computation of the met-rics, as described in Section 3. 4.1 Online MT evaluation A
SIYA allows to compute scores at three granular-ity levels: system (entire test corpus), document and sentence (or segment ). The online application ob-tains the measures for all the metrics and levels and generates an interactive table of scores displaying the values for all the measures. Table organiza-Figure 4: The bar charts plot to compare the metric scores for several systems tion can swap among the three levels of granularity, and it can also be transposed with respect to sys-tem and metric information (transposing rows and columns). When the metric basis table is shown, the user can select one or more metric columns in or-der to re-rank the rows accordingly. Moreover, the source, reference and candidate translation are dis-played along with metric scores. The combination of all these functionalities makes it easy to know which are the highest/lowest-scored sentences in a test set.
We have also integrated a graphical library 2 to generate real-time interactive plots to show the met-ric scores graphically. The current version of the in-terface shows interactive bar charts, where different metrics and systems can be combined in the same plot. An example is shown in Figure 4. 4.2 Graphically-aided Error Analysis and Human analysis is crucial in the development cy-cle because humans have the capability to spot er-rors and analyze them subjectively, in relation to the underlying system that is being examined and the scores obtained. Our purpose, as mentioned previ-ously, is to generate a graphical representation of the information related to the source and the trans-lations, enabling a visual analysis of the errors. We have focused on the linguistic measures at the syn-tactic and semantic level, since they are more robust than lexical metrics when comparing systems based on different paradigms. On the one hand, one of the views of the interface allows a user to navigate and inspect the segments of the test set. This view highlights the elements in the sentences that match a given criteria based on the various linguistic annota-tions aforementioned (e.g., PoS prepositions). The interface integrates also the mechanisms to upload word-by-word alignments between the source and any of the candidates. The alignments are also vi-sualized along with the rest of the annotations, and they can be also used to calculate artificial annota-tions projected from the source in such test beds for which there is no linguistic processors available. On the other hand, the web application includes a library for SVG graph generation in order to create the de-pendency and the constituent trees dynamically (as shown in Figure 3). 4.3 Accessing the Demo The online interface is fully functional and accessi-ble at http://nlp.lsi.upc.edu/asiya/ . Al-though the A SIYA toolkit is not difficult to install, some specific technical skills are still needed in or-der to set up all its capabilities (i.e., external com-ponents and resources such as linguistic processors and dictionaries). Instead, the online application re-quires only an up to date browser. The website in-cludes a tarball with sample input data and a video recording, which demonstrates the main functional-ities of the interface and how to use it.

The current web-based interface allows the user to upload up to five candidate translation files, five reference files and one source file (maximum size of 200 K each, which is enough for test bed of about 1 K sentences). Alternatively, the command based version of A SIYA can be used to intensively evaluate a large set of data. In the literature, we can find detailed typologies of the errors produced by MT systems (Vilar et al., 2006; Farr  X  us et al., 2011; Kirchhoff et al., 2007) and graphical interfaces for human classification and an-notation of these errors, such as BLAST (Stymne, 2011). They represent a framework to study the performance of MT systems and develop further re-finements. However, they are defined for a specific pair of languages or domain and they are difficult to generalize. For instance, the study described in (Kirchhoff et al., 2007) focus on measures relying on the characterization of the input documents (source, genre, style, dialect). In contrast, Farr  X  us et al. (2011) classify the errors that arise during Spanish-Catalan translation at several levels: orthographic, morpho-logical, lexical, semantic and syntactic errors.
Works towards the automatic identification and classification of errors have been conducted very re-cently. Examples of these are (Fishel et al., 2011), which focus on the detection and classification of common lexical errors and misplaced words using a specialized alignment algorithm; and (Popovi  X  c and Ney, 2011), which addresses the classifica-tion of inflectional errors, word reordering, missing words, extra words and incorrect lexical choices us-ing a combination of WER, PER, RPER and HPER scores. The AMEANA tool (Kholy and Habash, 2011) uses alignments to produce detailed morpho-logical error diagnosis and generates statistics at dif-ferent linguistic levels. To the best of our knowl-edge, the existing approaches to automatic error classification are centered on the lexical, morpho-logical and shallow syntactic aspects of the transla-tion, i.e., word deletion, insertion and substitution, wrong inflections, wrong lexical choice and part-of-speech. In contrast, we introduce additional lin-guistic information, such as dependency and con-stituent parsing trees, discourse structures and se-mantic roles. Also, there exist very few tools de-voted to visualize the errors produced by the MT systems. Here, instead of dealing with the automatic classification of errors, we deal with the automatic selection and visualization of the information used by the evaluation measures. The main goal of the A SIYA toolkit is to cover the evaluation needs of researchers during the develop-ment cycle of their systems. A SIYA generates a number of linguistic analyses over both the candi-date and the reference translations. However, the current command-line interface returns the results only in text mode and does not allow for fully ex-ploiting this linguistic information. We present a graphical interface showing a visual representation of such data for monitoring the MT development cy-cle. We believe that it would be very helpful for car-rying out tasks such as error analysis, system com-parison and graphical representations.
The application described here is the first release of a web interface to access A SIYA online. So far, it includes the mechanisms to analyze 4 out of 10 categories of metrics: shallow parsing, depen-dency parsing, constituent parsing and named en-tities. Nonetheless, we aim at developing the sys-tem until we cover all the metric categories currently available in A SIYA .

Regarding the analysis of the sentences, we have conducted a small experiment to show the ability of the interface to use word level alignments between the source and the target sentences. In the near fu-ture, we will include the mechanisms to upload also phrase level alignments. This functionality will also give the chance to develop a new family of evalua-tion metrics based on these alignments.

Regarding the interactive aspects of the interface, the grammatical graphs are dynamically generated in SVG format, which proffers a wide range of inter-active functionalities. However their interactivity is still limited. Further development towards improved interaction would provide a more advanced manip-ulation of the content, e.g., selection, expansion and collapse of branches.

Concerning the usability of the interface, we will add an alternative form for text input, which will re-quire users to input the source, reference and candi-date translation directly without formatting them in files, saving a lot of effort when users need to ana-lyze the translation results of one single sentence.
Finally, in order to improve error analysis capa-bilities, we will endow the application with a search engine able to filter the results according to varied user defined criteria. The main goal is to provide the mechanisms to select a case set where, for in-stance, all the sentences are scored above (or below) a threshold for a given metric (or a subset of them). This research has been partially funded by the Span-ish Ministry of Education and Science (OpenMT-2, TIN2009-14675-C03) and the European Commu-nity X  X  Seventh Framework Programme under grant agreement numbers 247762 (FAUST project, FP7-ICT-2009-4-247762) and 247914 (MOLTO project, FP7-ICT-2009-4-247914).

