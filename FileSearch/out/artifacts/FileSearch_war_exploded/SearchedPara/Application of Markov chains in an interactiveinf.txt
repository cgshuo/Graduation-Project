 1. Introduction
The model of most information retrieval systems (IR) is based on matching an information seeker s expression of need (the query) to a document collection s representation of intellectual content and then model has generated useful retrieval systems, but in the end is lacking essentially because it isolates infor-mation seeking behavior of the individual from how the resources are evaluated and applied within a social group, and clouds the user s interpretation of potential resources. While there is a rich literature of brows-ing, searching, and interface design, this paper proposes a Markov model of information retrieval (IR) that uses transition probabilities to guide information seeking behavior and group information seeking history to weight those probabilities. The whole was implemented in a Java application whose user interface reflects the underlying transition matrix. This paper details a Markov chain driven IR model. The motivation for this approach is based on potential weaknesses in traditional IR from the perspective of group awareness, query chains, and interactive visualization. (a) Group awareness. Information seeking is not performed in a vacuum: the individual person looking for 2. Information retrieval as conditional probability 2.1. Related work
In this model of information seeking, there are two agents: the system itself and a group of users, each providing a different perspective of how to react to queries. An IR system considers queries as any number of random inputs from the users, which initiates and adjusts the retrieval set membership, e.g., as in a rel-evance feedback system, which can be considered as the first of n states. As for users, they input any term from a set of terms, which they understand to reflect a concept. With no other considerations, each query has an equal probability of being selected and, regardless of relevance ranking by the IR system, each mem-ber of the retrieval set has an equal chance of being selected. In this light, information retrieval begins to suggest a Markov process ( Anderson, 1991 ; Asmussen, 1987 ; Breiman, 1969 ; Dartmouth, 2002, Chap. 11 ; outcomes, especially emphasizing time as an indicator of search engine effectiveness. One might equally emphasize the successful or failed outcomes of information retrieval, in which case the process is not ergotic. However, in this paper, both are mentioned by way of illustration, but the model detailed below does not focus on absorbing states to stipulate IR as an open-ended, incremental process.

Markov models have become popular focusing on the system, or the user, or their interaction in situa-tions where calculations are based on incomplete input and for decision support. Several researchers apply
Markov models to information retrieval tasks: Zhang and Zhang (2001) for artificial intelligence tasks in uncertain environments, Cassandra (1998) , Rajgopal and Mazumdar (2002) evaluate statistical inference in systems, and Chen and Cooper (2002) for stochastic modeling of use patterns. Some authors focus on the fundamental elements of information storage and retrieval, the linguistic tokens manipulated by an IR system. Miller, Leek, and Schwartz (1999, pp. 214 X 221) and Dani X owicz and Balin  X  ski (2001) examine stand-ard vector/tw  X  idf (term weight  X  inverse document frequency) information retrieval. Other work emphasizes analyzing the language of documents for retrieval, such as Szepesva  X  ri and Littman (1996) who analyzed the language of the document collection. Kaelbling and Littman (1994) combine Markov models and concept-oriented linguistic models of information (such as latent semantic indexing).

Researchers generally acknowledge the potential of Markov chains to clarify semantic issues and to respond to user feedback:  X  X  X f query terms have multiple senses, a mixture of these sense may be present in the expanded model. For semantic smoothing, a more content-dependent model that takes into account the relationship between query terms may be desirable. One way to accomplish this is through a pseudo-feedback mechanism ... In this way the expanded language model may be more semantically coherent, capturing the topic implicit in the set of documents rather than representing words related to the query or concept-level relationships form association states. Such work focuses on retrieval and ranking algo-rithms of documents, not on query randomness and confidence levels.

Users of an IR system often feel uncertain about the potential relevancy of the resources presented by the system and about the suitability of applying the information they find in response to the motivation for information seeking ( Gross, 1999 ). The uncertainty they feel influences their successful interaction and sense of satisfaction ( Kuhlthau, 1991 ) and arguably distorts the information resources. Providing users with establish a picture of reality that they can rely on more fully than occurs with hierarchical lists. An inter-active, graphically-oriented IR session may provide the type of  X  X  X seudo-feedback mechanism X  X  suggested above and contribute to the overall interpretability of the retrieval session and relevancy judgments. As a dynamic participant, the user helps to structure the interaction and his/her informed input shapes the cre-ation of future states ( Jackson &amp; Lefrere, 1998 ).

There is also a very large body of research on browsing and searching interfaces, some of which is related to the present project. This work might be divided into perception, tasks, language, and statistical approaches. Encarnac  X a  X o and Bryson discuss the issues of end-user perception and understanding, empha-sizing the impact on relevance and confidence of individual s  X  X  X erceptual and physiological abilities, cul-ture, and experience, and on the particular task X  X  (1994, p. 68). They accentuate the need to individualize
IR, and extend the notion of improved cooperative work via visualization. Other research focuses on the semantic elements and their display to the user to help task organization and info seeker comprehen-sion. Shipman et al. (2001, p. 260) write  X  X  X hen people share a workspace, they naturally create visual struc-tures which organize resources, communicate interpretations, and coordinate activities. To support this mode of communication and coordination we have built the Visual Knowledge Builder (VKB) ... to sup-systems that are based on statistical models of the text complemented with visual interfaces to help people find relevant items and to personalize IS.
 Even graphic interfaces, though preferred by users, are not without difficulties. Kural, Robertson, and
Jones (2001) note that clustering of the results by the IR system can be misleading. Cluster representations alone may not inform about the contents of the cluster and this  X  X  X s probably more worrying than clusters 598) and, of note for this project,  X  X  X sers own perceptions about document similarities may not be reflected in the grouping provided by the algorithm X  X  (p. 599), which in turn affects the user s confidence in the retrieval set s applicability. The idea that integrating small group IS dynamics and supplementing informa-tion about the items, collectively presented in an interactive IR interface is gaining ground. In a study of bioinformaticians information seeking, Benoit (2004) notes that users preferred hierarchical lists when searching to retrieve specific known items and graphical interfaces when uncertain or when searching for an aspect of a topic not usually a search term.

Finally, some of the literature highlights the intersection of visualization and knowledge-sharing, espe-cially between experts and novices. Van Biljon, de Kock, and Renaud (2002) describe  X  X  X azu X  X , a system for helping novices (college students) plan their curriculum through a graphic interface that recommends pos-sibilities, as if suggested by experts (the experienced academic program counsellor). Shipman et al. sVKB (below) and ending similar to Fig. 1 c.

In the end, such intelligent information-sharing systems do more than retrieve and present resources: they assist the user in organizing them in a way that makes sense and supports the user s understanding of the task at hand in a given situation. This is reminiscent of Berger and Szwillus (1999) conclusion that formal methods need to be articulated to help design tools to support, but do not automate, creative use of the interface. These authors believe there is a need to model an IR system that more openly integrates sit-uational information, related concepts, and graphic IR. 3. Information retrieval as a Markov process
Besides the obvious goal of minimizing user uncertainty, the benefits of this approach is gaining a new view of both (a) the user s decision making and (b) system behavior that can be applied to creating IR with situ-ational intelligence. Data generated about query terms used by human information seekers vary from com-mon retrieval and ranking algorithms, such as inverse document frequency/term weighting (e.g., Baeza-Yates system at any time during the information seeking session and ultimately might want to use the state data to alter system behavior dynamically, such as interrupting the program flow to display an alert window if the user s state vector is outside of a preferred, job-specific range. As part of modeling IR as a Markov process, we consider first (1) the randomness of query terms and (2) modeling their relationship as a Markov process, (3) specifically how data from experienced users can be integrated to weight the transition probabilities between associated concepts, and (4) as a model of an information visualization system for retrieval. 3.1. Randomness of language X  X uery terms
An information seeker knows that several concepts exist related to what he or she needs to know in order to complete some task, say a work task. This set of terms form a bounded space, and the terms used therein have a probability of being selected as well as a measure of similarity between them. It follows that using one term also has a probability of leading the user to consider another term from the bounded space, indeed a chain of related terms in diminishing likely probability. With this in mind, we can consider what happens to these terms during an information seeking session from two perspectives: that of the user and that of the
IR system. 3.1.1. Query terms as a Markov chain
The set of terms an information seeker might use to express his interests is the set of possible query
For illustration purposes, say a concept can be represented by a finite number of possible terms and as a result the information seeking session and the IR system itself has a finite number of possible states and i after one unit of time (e.g., one user feedback).

Quoting Frank (2004) ,  X  X  X  state vector gives the probability of each state i . A transition matrix of query terms Q can be made of the entries that reflect the transition probabilities m with x possible inputs from the user. The state vector would be:
Supposing data had been gathered before use, a transition matrix T ( Asmussen, 1987 ) might be con-structed, such as the below, using Frank s artificial probabilities for discussion s sake:
After a certain number of inputs from the user, the term at m the second column. In an IR system, the items are query terms. This example is revisited below using a chain of candidate terms. In other words, a term which started as a second choice would have state vector
After one response from the user could have state vector
After two responses from the user could have state vector
So, after two inputs from the user, it would have a 40% chance of being the first selection of the user and a 37% change of being the second best choice. If left unadjusted the system would achieve a predictable final state.

More formally, if the potential query terms were numbered from 1 to m , the order of the queries is described by some permutation ( i 1 , i 2 , ... , i m ) where i chooses. Suppose that each term could be chosen with a definite probability of being selected, and then returned to the set of possible queries. Let p k be the probability of choosing the k th term remains unchanged, which happens with probability p i changes to one of the m 1 states of the form ( i k , i 1 , ... ) which happens with probability p other than the first is chosen. For example, if there were two possible terms, m =2, then there are only two possible states, c 1 =(1,2) and c 2 =(2,1). The transition probabilities are p 3.1.2. Creating a  X  X  X est choice X  X 
The information seeker needs to find not just data or information resources, but an optimal choice for his needs within a domain of application, such as a person looking for information at work to do a partic-ular job function correctly. Since there is usually a mode of expression, be it jargon or a house style, argu-ably the terms to express concepts used by people experienced in the job would serve as optimal query terms because terms would most likely appear in the domain-specific (work-related) full-text documents searched.
From the system perspective, given the set of possible terms there is an optimal term to be chosen: let e let e m +1 be the state represented by the best of all m terms that have already been used but not accepted. time at which the optimal term is selected by the seeker; m =0 if the first term turns out to be best.
The entire set of machine states, the information retrieval system s response to the query input, is a set of for n &gt; ~ m .

If we consider user input as a set of random variables defined over the same probability space, and tak-ing values (queries) in a set S , and a parameter representing the time T of user choices (the time range, or here the length of the information seeking session, or another metric such as increased user confidence), a random variable X t can be defined to reflect the user query at a given moment in the IR session. For instance, considering the maximum query types or the preferred concept representation of a given user group leads to a discrete time stochastic process where X query, any term associated with the concept by the user has an equal chance of being selected. The choices
Hermanns (2002, p. 36) : Prob f X t
Therefore, given that in a defined domain of users with a known set of concepts, and a preferred mode of expressing those concepts, along with a preferred method of achieving work goals all combined in an infor-mation visualization interface, it seems possible to shape IR as a concept-driven, interactive session that guides end-users and diminishes uncertainty about the applicability of the retrieved resources. Such a sys-tem would see documents or concepts as associated items and potential user movement about documents as a Markov chain; integrating others decision making weights the chain whose transition probabilities sug-gest to users how to proceed as Fig. 1 c suggests. 4. Model description
This section considers the parallels between IR and Markov processes. 4.1. System-side
In many relevance feedback IR systems, retrieval set membership is recalculated based on terms extracted from documents the user marks as potentially useful. The model here sees IR as the probabilities of term choices that users can make and the resulting change in system state. In any relevance feedback IR system, user queries, retrieval sets, and responses from the user caused by his/her interpretation of the cur-rent state form the information seeking event. The model here assumes that event control is passed between  X  X  X odes X  X  (the document or document clusters returned in response to a query) as a non-stochastic Markov process. The probability p ij that control transfers from node i to another node j is independent of how i was entered. In other words, the user s initial query drawn from the set of group-specific terms reflecting a con-and the advance to the next node is independent of how the first term is selected. In response to a query, there will be n such nodes, where node 1 (defined below also as state-0, s
Typically the goal of IR systems is to minimize the number of iterations necessary for a successful out-come and to avoid a failure state. Rajgopal and Mazumdar (2002) describe a similar Markov process IR system emphasizing success or failure states. In their work, S is a successful terminal node and F as a failed state, with probability p iS and p iF of being entered from state i . p ing S and F as absorption states means this model is non-ergotic. (Given the opportunity for semantic ambiguity and the user s comprehension and relevancy judgments, it is not possible for any IR system
Each node i contains irrelevant documents, and associated with i is a relevance factor, ( r relevant documents when user selects node i )=(1 r i ). As Rajgopal and Mazumdar (2002, p. 360) state, sition matrix Q , where q ij = r i p ij for i =1,2, ... , n and j =1,2, ... , n , S ; q q = q SS =1 X  X .

The result can be demonstrated graphically, adapting the example from Rajgopal and Mazumdar (2002, p. 360) , which work emphasizes the absorption state. The transitional probability relationships between concepts can be expressed graphically ( Fig. 2 ). 4.2. User-side
As stated previously, user interaction begins with an initial query, an identifiable point and progresses through a series of states, modeling both an individual user s, and by extension a group of users , behavior as a Markov chain: the process U t = u ( X t 1 , X t 2 , ... , X transactions. Given that the processes have a limited number of possible states, states can indicated e during an information seeking session. Users from the initial state node (time, t =0) progress, though with uncertainty, to subsequent states. From the initial node e sequent query terms or responses to the system in a random fashion ( t =1,2, ... ). Thus the random variable n consecutive transitions from node to node:
Once the user has entered a query ( t =0), the system is in its initial probability state ( e
At any time during the information seeking event, the user is in a state, represented as a node ( n ) in the interaction. Users provide input at this state ( e i ) and the IR system responds by updating the retrieval the  X  X  X ext best state. X  X  The probability that the system goes to another state e
The Markov chain is the system s states (responses to feedback), that is, the probability that the system will be in state e i after n steps, forms the Markov chain: p k =1,2, ... , the system must be in e k after n 1 steps. { n ( n 1)= e advanced from one state to another establishes a link of nodes, the selected nodes form a set of states.
Given also that some event in the mutually-exclusive set will occur if the user offers input, the probability previous states, times the probability of previously selected states:
When the system is in state node i at time=0, the initial probability is p 0
Subsequent states have the probability
The suite of user decisions (inputs) reflect his/her uncertainty because he or she is unsatisfied and so chooses another node j . The probability of this behavior can be rewritten as:
So on the one hand, we can predict the system s stages given an initial query from a closed set of concept terms. 4.2.1. Turning to user queries Both users and documents can be represented by Markov chains as the earlier listed research shows.
Here the emphasis is on the queries extracted from documents forming a set of terms with equal probability of being selected. We can construct a matrix of the probability of possible user choices during an IR session.
A Q -matrix of the probability of the nodes can be constructed that reflects the system s relevancy ranking assumed that users can move to any node with equal probability.) The documents in the retrieval set are extracted and ranked according to an accepted method, idf  X  tw.
Dani X owicz and Balin  X  ski (2001, pp. 625 X 626) demonstrate the fusion of Markov models and tw  X  idf as a document retrieval and ranking method. They calculate tw  X  idf as transition probabilities being propor-tional to initial similarities between documents to populate the Q -matrix. The transition probabilities is based on a document set ( D ) consisting of documents (or clusters) { d (Example from Dani X owicz and Balin  X  ski, also emphasizing absorption states.)
The transition probabilities p ( d j j d i ) is the interdocument similarity s ( d matrix, so p ij = p ( d j j d i ), and p =[ p 1 , p 2 , ... , p be used to capture individual forms of query expression and cognition (decision making in response to the system feedback) and generate a user profile. 5. Support for user X  X  decision making
Some research into human X  X uman communication (e.g., Ervin-Tripp, 1974 ) suggests that knowledge about the state of the interaction, such as historicity (past, present, and future states), help the speaker/ hearer pairs interpret utterances. In a computerized system such complexity is not yet possible, but forms of declarative knowledge about the interaction is available, in the form of IR relevancy ranking or a sta-tistically-based confidence level that reflects the relationships between states, and a degree of evidence for the state. The application of a graphic user interface is a means of communicating background knowl-transition from one state to the next. From this evidence users will advance with more confidence from state to state because (1) the decision to proceed is reasoned by the user with knowledge of how the group of domain-experienced users would progress, the user works with the system in navigating uncertainty instead of the system controlling the interaction; (2) the system provides a means for the user to investigate further possible states before committing to the action, and through the interface users can regress from a given point to a past state without loss of benefits and (3) finally, user regress and progress can be performed non-linearly. Users can jump to different states or different streams as evidence and their own knowledge suggest new ideas.

As the evidence is calculated for each node, the system essentially is scanning the set of possible states and establishing a strategy for interaction. The strategy is based on which events are selected and their probability strengths as they pertain to the current interaction between a user and system. Based on this strategy of scanning for events, the system itself may offer future paths based on the user s selections and calculated probabilities. These offers are recommendations for action by the user represented as poten-tial states, along with probability heuristics for the user. From these evidences, users may interpret for themselves the cost of accepting the system recommendations or they pursue their own choices.
The combination of automatic system recommendations and user selection gives a richness of dimension to the interaction that rule-based, closed, or linear systems do not. Manual control of events, along with degrees of evidence, and a limited set of actions theoretically minimize some of the user s affective concerns and randomness in the system.

Each node ( e n ) carries with it both the base probability as part of the Markov process and a subjective probability of selection, the aggregate of the behaviors of previous users of the system. The choice of previous users is cast as a weight ( w ) for a given node, ostensibly for end-users seeking the same type of set created, the weights of nodes are added to the base probability: e.g., p
The model of interaction theorized becomes a probability-based heuristic with supporting evidence where choices are made explicitly by the end-user. This approach has several benefits. One is the inferential power of the model. Users are able to infer the progress of states as their own development in the informa-tion retrieval and in interpretation of results. Interaction with the machine moves closer to an interpretive, cognitive event, focused on the data or information need of the user. Depending on the underlying knowl-edge representation, the graphic (screen level) representation of states with supporting evidence lets the user infer the likelihood of success both using the system and in evaluation of resources for the present need.

As the system maintains evidence about its own performance and user input, it provides its own evidence to be integrated into the calculation of node strength. From that the system derives dynamically the state of potential state nodes.

The system, then, learns from its own behavior. In a real-world application, the user may opt to create a personal profile (such as language level, types of resources) to tailor the system s performance. 6. Discussion
This paper, and the project described below, suggest that Markov processes can be integrated into a dynamic information retrieval system where both system and user contribute to the retrieval behavior.
The use of graphic nodes represents a means for end-user interaction to investigate data sources for deter-mining document utility, and to minimize user anxiety of exploring unknown data by creating a graphic porated as weights to update in real-time the probability matrix, which over time makes this system appro-priate for data mining and extracting novel relationships among documents.

Prediction of user transitions in this type of IR system may reveal specifics of end-user decision making respond to potential failure by having the system respond through the interface, with explicit degrees of certainty, what the user should consider in response to his/her information need.

System : Markov chains are used to predict convergence ( P =1) in n transitions. In this model, user choices are used to weight probabilities to create p ij &lt;1 in n transitions. Ultimately, by integrating and adapting to user inputs, it may be possible in the future to train the information retrieval system to achieve p =1 in one transition. However, given that end-user confidence in the system is increased by being able to see both the source documents and the transition probability, it may be useful to develop a graphic user interface approach that lets users advance through states regardless of how they entered the state (which may give them a greater understanding of how their information need is associated with other concepts), and which suggests the strongest probabilities of utility within a given use context. 6.1. How the model can be implemented
A Java application has been written to implement the above ideas and was used in a small pilot test to study end-user confidence. It remains to be tested how this model whether a time-based performance metric is useful. In response to a user s query, an initial retrieval set of documents is created based on a standard tw  X  idf matrix. A small set of the most commonly used terms are extracted from the highest ranked docu-ments; the union of sets of terms (e.g.,  X  X  X udget, payroll, faculty X  X ) from these documents become the ele-ments of the state vector, e.g.: d 1 ={ t 1 , t 2 , t 3 , ... , t n }, d 2 ={ t 1 , t 2 , t
Consider then a query set of three terms. The state vector is the probability of a term being selected first, second, or third by an actual information seeker. The unit of time is one user feedback, specifically the user s selection of a term. Paralleling the example described above, since t ranked in the initial retrieval set s document collection (e.g., the 3rd most highly ranked term), has a 60% chance of becoming the next highest ranked (e.g., 2nd) after one user interaction.

At this point there is no difference between a traditional IR system s hierarchical list. For the second and subsequent inputs, and for terms that have been used as query terms, the data from all previous IS events using that term, are used to create the actual transition probability of terms in the matrix. 6.1.1. Example
Suppose that the user selects three terms ( t 1 , t 2 , t being selected (each term has a 1/ 3probability). During the information seeking session based on some ear-lier evidence of choices: 1. t 1 is selected 85% of the time, but users select t 2 10% and t 2. t 2 is selected 80% on the second pass, but on the second user selection t selected 10% of the time. 3. t 3 is selected 60% on the second pass, but on the second user selection t selected 15% of the time.

If this trend continued, at the end of a group of information seeking sessions, the predicted chain of user terms would be in the transition matrix T :
In this example the values in T reflect the transition probabilities of a user going from one query term, documents from which the terms were extracted (see Figs. 4 and 5 ). By the end of the set of information seeking sessions, each term will have at the end (multiplying by the original vector 1 = 31 = 31 = 3  X  by
T  X  2 = 57 = 20 1 = 4  X  ). So t 1 would be selected by the group 40% of the time, t
However, when considering how the resources will be applied under the approbation of the group of co-workers in the domain of application, it is stipulated that there is a preferred mode of expression and task performance that will influence candidate query terms. For instance, an information seeker starting with t is selecting a term that is not a preferred way of expressing the concept within the domain, evidenced by its 10% probability of selection. Therefore, we can interrupt the regular Markov chain by including domain-and time-specific weighting.

The idea for this weighting is to emulate the preferred choices experienced co-workers would make in by an inexperienced co-worker, then there is no evidence of past choices by experienced users so there is no weight is calculated based on the normalized frequency of that term (from the set of terms associated with the first term input by the user). Through the interactive interface, the IR system suggests to the user (a) which terms to select and (b) a trajectory to follow if the first term is rejected. For instance, as suggested above, t 1 would be selected 85% of the time, and users select t the weighting factor adjusts the original vector from 1/ 3for each term to 1/ 3+weight for the preferred term, e.g., 1 = 21 = 41 = 4  X  .
 Table 1 presents a q -matrix whose elements represent document sets of a retrieval group ( Fig. 3 ).
Although not a very sophisticated implementation, the following figure ( Fig. 4 ) shows the user interface: users are guided to select document clusters based on a  X  X  X trongly recommended X  X ,  X  X  X uggested X  X , and  X  X  X ot recommended X  X  keys. These labels are determined by the candidate terms rankings based on the user s query. The edges between the nodes are also recommendations: the heavier the line between nodes the pair of terms taken from the transition matrix.

Fig. 5 shows the interface when a user has selected a document to read. In addition, there is a dialog box (the slider) that user s employ to give feedback to the system about the document s applicability. It is this feedback that is used as an input to the weighting scheme.

The user interaction continues as nodes are calculated and presented. The system tracks domain-expe-rienced user decisions based on the document or term properties that underlay the node. These decisions are included in creating the weight factors for the Markov process. Subsequent users inherit the projected prob-abilities for queries, when the query terms are similar to the previously successful searches.
In this model the term-document matrix is replaced by an object-oriented approach. The class-relation-ship definition offers greater granularity and more precise semantic expression. Combining the class-rela-tionship approach with the weighted Markov process suggests that missing data in the object definition could be compensated ( Asmussen, 2000 ). Additionally the distribution of state nodes, which at the moment is linearly assigned by the program, to emphasize the time-dependent transitions states from query to con-Spencer, 2000 ). Future tests can compare predicted system performance ( R References
