 The purpose of data mining is to extract hypotheses that explain a database. An association rule is one of the most famous forms of hypotheses in data mining or association rule mining [1, 2, 6]. In order to extract association rules from a transaction database, the algorithm APRIORI, introduced by Agrawal et al. [1, 2], first enumerates frequent itemsets as sets of items satisfying the minimum support . Then, by dividing items in each frequent itemset into a premise and a consequence of an association rule, we can extract the association rules satisfying both the minimum support and the minimum confidence .
 that explain a database nearly overall , because it just reflects the items with very high frequency, which are not interesting in general. Furthermore, when we deal with a reconstructed transaction database by paying our attention to the specified attribute value v , it is natural to extract an association rule X  X  v with the consequence v rather than a standard association rule X  X  Y  X  Y ( Y  X  X ) from a frequent itemset X of the database.
 in the above case, by regarding an itemset as a monotone term and by extending it to a monotone DNF formula as a disjunction of monotone terms (or itemsets). We say that a monotone DNF formula f = X 1  X  X  X  X  X  X m is frequent if each X i is a frequent itemset under  X  ,thatis, supp ( X i )  X   X  ,and supp ( f )  X   X  , where supp ( f ) denotes the support of f . We call such  X  and  X  the minimum support and the minimum term support , respectively.
 we have introduced the overlap ol ( f ) of a monotone DNF formula f , and dealt with a frequent monotone DNF formula f satisfying that ol ( f )  X   X  . We call such a  X  the maximum overlap .Byusing  X  ,  X  and  X  , we have designed the algorithms dnf cover [7] and cdnf cover [12] to extract frequent and frequent closed monotone DNF formulas under  X  ,  X  and  X  from a transaction database. itemsets as the researches to introduce a disjunction into itemsets. The difference between their works and this paper (and our previous works [7, 12]) is that their disjunction has been introduced into the conclusion in association rules, whereas our disjunction is into the premise . Furthermore, the main purpose of their works is to formulate the concise or condensed representations .
 first pruning . The algorithm dnf cover ( resp. , cdnf cover ) first not only extracts itemsets satisfying  X  by APRIORI [1, 2] ( resp. , CHARM [16]), but also stores itemsets not satisfying  X  but satisfying  X  ( resp. , and that are closed) to a seed . Next, it constructs monotone DNF formulas by connecting each element of a seed to a disjunction  X  until satisfying  X  and  X  . Note that dnf cover and cdnf cover do not store all itemsets not satisfying  X  but satisfying  X  to a seed. They store just itemsets satisfying  X  when not satisfying  X  by APRIORI and CHARM. transaction database with another pruning. We pay our attention to a natural assumption that  X &lt; X  . If not, then it is possible to extract a monotone DNF formula f containing a redundant itemset X such that  X   X  supp ( X )  X   X  . We call a monotone DNF formula satisfying that  X &lt; X  and ol ( f )  X   X  few-overlapped . monotone DNF formulas under  X  ,  X  and  X  . The algorithm ffo dnf first enumer-ates all of the maximal frequent itemsets [3, 11] under  X  , and secondly connects the extracted itemsets by a disjunction  X  until satisfying  X  and  X  . monotone DNF formula f is always incomparable under a subset relation, that is, neither X  X  Y nor Y  X  X for each X, Y  X  f such that X = Y . Hence, ffo dnf first enumerates all maximal frequent itemsets but not all frequent itemsets. We call this pruning a depth-first pruning . Furthermore, we show that the extracted formulas by ffo dnf are representative .
 data, which are full version of data in [13, 14, 15] and have given the empiri-cal results in [7, 12]. We use 5 kinds of data, which are reconstructed data of which detected bacterium are MRSA (methicillin-resistant Staphylococcus au-reus), Bacteroides, Fusobacterium, Prevotella and Streptococcus, respectively. The last 4 data are spices of Anaerobes. The number of records in them is 118, 498, 154, 157 and 155, respectively. In particular, we also use all data consist-ing of 118 MRSA data and 4886 MSSA (methicillin-suspectible Staphylococcus aureus) and initial data from a patient consisting of 35 MRSA data and 1613 MSSA data. Then, we verify the extracted formulas from MRSA data to MSSA data.
 ties of overlaps and introduce frequent few-overlapped monotone DNF formulas. In Section 3, we design the algorithm ffo dnf to extract frequent few-overlapped monotone DNF formulas under  X  ,  X  and  X  with depth-first pruning, and show that the extracted formulas are representative. In Section 4, we give some em-pirical results by applying the algorithm ffo dnf to bacterial culture data. Let X and I be finite sets. We call an element of X an item and I a transaction id ( tid , for short). Also we call X  X  X  an itemset and I  X  X  a tidset .We call { x  X  X | ( i, x )  X  X } X  X  a transaction of a tid i . Then, D X  X  X X is a transaction database . For a tidset I  X  X  and an itemset X  X  X  , we define the following function tid :2 X  X  2 I . Then, the frequency and the support of X in D are defined as freq D ( X )= | tid D ( X ) | and supp D ( X )= freq D ( X ) / |D| , respectively. In the remainder of this paper, we omit the phrases  X  X f X  X  and  X  X n D , X  and the subscript D . Definition 1 (Agrawal et al. [1, 2]). We say that an itemset X is frequent if supp ( X )  X   X  . Here, we call the threshold  X  (0  X   X   X  1) the minimum support . Definition 2 (Pasquier et al. [3, 11]). We say that a frequent itemset X  X  Freq  X  is maximal if there exists no frequent itemset Y  X  Freq  X  such that Y  X  X . X as a monotone term over X , that is, a conjunction of variables. Then, we extend a monotone term over X to a monotone DNF formula X 1  X  X  X  X  X  X m (or { X 1 ,...,X m } )over X as a disjunction of monotone terms X 1 ,...,X m . function tid as tid ( f )= tid ( X 1 )  X  X  X  X  X  tid ( X m ). The frequency of f in D and Definition 3. We say that a monotone DNF formula f = X 1  X  X  X  X  X  X m is frequent if supp ( f )  X   X  and supp ( X i )  X   X  for each i (1  X  i  X  m ). Here, we call the minimum support  X  (0  X   X   X  1) for each X i the minimum term support . Here, the condition  X &gt; X  is meaningless, so we implicitly assume that  X   X   X  . of itemsets X and Y in D and the overlap set ol D ( f ) of a monotone DNF formula f = X 1  X  X  X  X  X  X m in D are defined in the following way. omit the subscript D .
 Theorem 1 (Hirata et al. [7]). The overlap is monotonic , that is, it holds that ol ( f )  X  ol ( f  X  g ) for monotone DNF formulas f and g .
 Theorem 2 (Hirata et al. [7]). For a monotone DNF formula f and an item-set X , it holds that ols ( f  X  X )= ols ( f )  X  Y  X  f ols ( Y, X ) . Theorem 3. For a monotone DNF formula f and an itemset X , it holds that Proof. The first statement is obvious by the definition of tid . By Theorem 2, the following equation holds for a monotone DNF formula f = X 1  X  X  X  X  X  X m . Hence, the second statement holds.
 Theorem 4. Let X 1 ,...,X m and Y 1 ,...,Y m be sequences of itemsets such that X i  X  X j  X  Y i  X  Y j for each i and j (1  X  i, j  X  m ) and f a monotone DNF formula. Then, it holds that supp ( f  X  X 1  X  X  X  X  X  X m )  X  supp ( f  X  Y 1  X  X  X  X  X  Y m ) and ol ( f  X  X 1  X  X  X  X  X  X m )  X  ol ( f  X  Y 1  X  X  X  X  X  Y m ) .
 Proof. Since X i  X  Y i (just the case that j = i ), it holds that tid ( X i )  X  tid ( Y i ), so tid ( X 1  X  X  X  X  X  X m )  X  tid ( Y 1  X  X  X  X  X  Y m ). Hence, the first statement holds. that X 1  X  Y 1 ,so tid ( X 1 )  X  tid ( Y 1 ). Theorem 2 implies that ols ( f  X  X 1 )= ols ( f )  X  Z  X  f ols ( Z, X 1 )  X  ols ( f )  X  Z  X  f ols ( Z, Y 1 ) = ols ( f  X  Y 1 ). Y m  X  1 , respectively. Suppose that ols ( g )  X  ols ( h ). By Theorem 2, the following equations hold. Since X i  X  Y i , it holds that ols ( Z, X i )  X  ols ( Z, Y i )foreach Z  X  f and 1  X  i  X  m  X  1. Furthermore, since X i  X  X m  X  Y i  X  Y m ,itholdsthat ols ( X i ,X m )  X  ols ( X i ,Y m ) for each 1  X  i  X  m  X  1. By induction hypothesis, it holds that ols ( g )  X  ols ( h ). Hence, it holds that ols ( g  X  X m )  X  ols ( h  X  Y m ). Definition 4. We say that a monotone DNF formula f = X 1  X  X  X  X  X  X m sat-isfying  X  is few-overlapped under  X  if  X &lt; X  and ol ( f )  X   X  . Here, we call the threshold  X  (0  X   X   X  1) the maximum overlap .
 possible to extract a monotone DNF formula f containing a redundant itemset X such that  X   X  supp ( X )  X   X  . In the remainder of this paper, we deal with a frequent few-overlapped monotone DNF formula under  X  ,  X  and  X  , that is, a monotone DNF formula f = X 1  X  X  X  X  X  X m such that supp ( f )  X   X  , supp ( X i )  X   X  for each i (1  X  i  X  m ), ol ( f )  X   X  and  X &lt; X  . In this section, we design the algorithm ffo dnf to extract frequent few-overlapped monotone DNF formulas under  X  ,  X  and  X  described as Fig. 1. In the algo-rithm ffo dnf , the set FFO of frequent few-overlapped monotone DNF formu-las is constructed by a simple depth-first search on the overlap, which follows from the monotonicity of the overlap (Theorem 1). Here, for an itemset X , we set ols ( X )=  X  and ol ( X ) = 0, and, for a set M = { X 1 ,...,X m } ,weset M [ i ]= { X i ,...,X m } (1  X  i  X  m )and M [ m +1]=  X  .
 of ordered pairs ( X, tid ( X )) for a maximal itemset X , so we enumerate MaxFreq  X  by the improvement of the algorithm CHARM [16], because it deals with directly such an ordered pair. Here, we add the check whether or not an itemset of each leaf in the search tree under  X  is maximal to CHARM. Then, we maintain an ordered triple ( f, tid ( f ) , ols ( f )) to construct a monotone DNF formula f in ffo search . By Theorem 3, we can obtain ( f  X  X, tid ( f  X  X ) , ols ( f  X  X )) from ( f, tid ( f ) , ols ( f )) and ( X, tid ( X )).
 depth-first pruning . On the other hand, a breadth-first pruning in the algorithm dnf cover [7] checks whether or not X  X  X  x } X  Freq  X  for just an itemset X  X  X  x } such that X  X  Freq  X  but X  X  X  x }  X  Freq  X  , instead of searching for Freq  X  .Also a breadth-first pruning in the algorithm cdnf cover [12] checks whether or not X  X  X  x } X  FreqClosed  X  for just an itemset X  X  X  x } such that X  X  FreqClosed  X  but X  X  X  x }  X  FreqClosed  X  , instead of searching for FreqClosed  X  . Here, FreqClosed  X  is the set of all frequent closed itemsets under  X  [11, 16].
 satisfying  X  , while the algorithms dnf cover and cdnf cover with breadth-first pruning searches for just itemsets satisfying  X  .
 Theorem 5. Let X and Y be itemsets such that supp ( X )  X   X  and supp ( Y )  X   X  and f a monotone DNF formula such that X  X  f .Ifeither X  X  Y or Y  X  X , then it holds that ol ( f  X  Y ) &gt; X  .
 Proof. If X  X  Y , then tid ( Y )  X  tid ( X ), so it holds that ol ( f  X  Y )  X  ol ( X  X  Y )= | holds that ol ( f  X  Y )  X  ol ( X  X  Y )= | tid ( X )  X  tid ( Y ) | = | tid ( X ) | X   X &gt; X  . Theorem 5 claims that every pair of itemsets in a few-overlapped monotone DNF formula f is always incomparable under a subset relation, that is, neither X  X  Y nor Y  X  X for each X, Y  X  f ( X = Y ). Hence, one of the reasons why we adopt a depth-first pruning is that every maximal frequent itemset is incomparable. Theorem 6. For every few-overlapped monotone DNF formula f , there exists a few-overlapped monotone DNF formula g such that for every X  X  f , there exists an itemset Y  X  g such that X  X  Y and Y is maximal under  X  .
 Proof. Let f be a few-overlapped monotone DNF formula X 1  X  X  X  X  X  X m .For l  X  m ,let p be a mapping { 1 ,...,m } X  X  1 ,...,l } such that X i  X  Y p ( i ) and Y p ( i ) is maximal, and g a monotone DNF formula Y 1  X  X  X  X  X  Y l . Since tid ( X i )  X  tid ( Y p ( i ) ),  X  , it holds that ol ( g )  X   X  . Hence, g is few-overlapped.
 Theorem 6 claims that every few-overlapped monotone DNF formula f has a cor-responding few-overlapped monotone DNF formula g such that each itemset in g is maximal under  X  . Hence, the extracted formulas by ffo dnf are representative . monotone DNF formulas under  X  ,  X  and  X  that are representative. In this section, we give the empirical results obtained by applying the algorithm ffo dnf to bacterial culture data, which are full version in [15] and have given the empirical results in [7, 12]. The computer environment is that CPU and RAM are Pentium 4 2.8 GHz and 2 GB, respectively.
 Bacteroides ( Bact ), Fusobacterium ( Fuso ), Prevotella ( Prev ) and Streptococcus ( Stre ) data. The number of records in them is 118, 498, 154, 157 and 155, respectively. The last 4 data are a part of Anaerobes data corresponding to 4 species of Anaerobes.
 MRSA data and 4886 MSSA (methicillin-suspectible Staphylococcus aureus) and initial data from a patient consisting of 35 MRSA data and 1613 MSSA data. Here, we use the MSSA data to verify the extracted formulas from MRSA data. We refer all data and initial data for MRSA ( resp. , MSSA) to a MRSA ( resp. , a MSSA )and i MRSA ( resp. , i MSSA ).
 attributes, containing 17 antibiotics for benzilpenicillin ( PcB ), synthetic peni-cillins ( PcS ), augmentin ( Aug ), anti-pseudomonas penicillin ( PcAP ), 1st genera-tion cephems ( Cep1 ), 2nd generation cephems ( Cep2 ), 3rd generation cephems ( Cep3 ), 4th generation cephems ( Cep4 ), anti-pseudomonas cephems ( CepAP ), aminoglycosides ( AG ), macrolides ( ML ), tetracyclines ( TC ), lincomycins ( LCM ), chloramphenicols ( CP ), carbapenems ( CBP ), vancomycin ( VCM ) and RFP/FOM ( RFPFOM ). Here, the above antibiotics have the value of resistant ( R ), intermediate ( I )or suspectible ( S ).
 mulas extracted by ffo dnf . Here,  X  is fixed to 25%. # Max and # DNF denote the number of maximal itemsets and frequent few-overlapped monotone DNF formulas. Note that # DNF is not always increasing when # Max is increasing. in the frequent few-overlapped monotone DNF formulas extracted by ffo dnf under (  X ,  X ,  X  ) = (70 , 25 , 20). Note that Fig. 3 contains more information of the resistant for Anaerobes than the result in our previous work [12], and such information extracted by just ffo dnf is pruned by cdnf cover [12].
 under (  X ,  X ,  X  ) = (70 , 25 , 20) except from Stre have the following characteriza-tion, which is the similar characterization by cdnf cover [12]. 1. The extracted formulas always contains the items with information in 17 2. The extracted formulas are always non-redundant , that is, they contain no under (  X ,  X ,  X  ) = (70 , 25 , 20), not found in our previous works [7, 12]. 1. From a MRSA and i MRSA , items for samples that spl=1 (catheter) and spl=5 2. From Bact , items that a  X  -lactamese is either 1 or 3 are extracted. Note that 3. From Fuso , for 6 extracted formulas, 3 formulas contain the resistant for 4. From Prev , the formula containing PcB=S also contains PcB=R in another 5. From Stre , there are formulas not containing the items with the information support in a MSSA ( resp. , i MSSA ) is smaller than others. Here, items dis=7 , dis=17 and dis=33 denote that the disease is a tumor, respiratory and postop-erative, respectively. Note that the items for samples appear in a MRSA , while the items for ages and years appear in i MRSA .
 supp a MSSA ( X )=5 . 65%, supp i MSSA ( X )=4 . 97%, supp a MRSA ( X )=26 . 27% and supp i MRSA ( X )=33 . 33%. On the other hand, for a term Y =( ML = R  X  dis = 7 ) appearing in i MRSA but not in a MRSA , supp i MRSA ( Y )=30 . 30%, supp i MSSA ( Y )= 2 . 81%, supp a MRSA ( Y )=24 . 58% and supp a MSSA ( Y )=3 . 32%. Hence, the reason why X appears in both a MRSA and i MRSA but Y appears in just i MRSA is to extract few-overlapped formulas. In this paper, we have introduced frequent few-overlapped monotone DNF formu-las and designed the algorithm ffo dnf to extract the formulas that are represen-tative . We have adopted a depth-first pruning in the algorithm ffo dnf , different from a breadth-first pruning adopted in dnf cover [7] and cdnf cover [12]. Finally, we have applied it to bacterial culture data, the MRSA data and the 4 species of Anaerobes data, and evaluated the extracted formulas.
 ffo dnf .Let f be a monotone DNF formula X 1  X  X  X  X  X  X m such that ol ( f )  X   X  and X i  X  MaxFreq  X  . Such an f can be extracted as FO by adding the statement  X  FO  X  FO  X  X  f  X  X i } ; X  between  X  if ol ( f  X  X i )  X   X  then  X  and  X  if supp ( f  X  X i )  X   X  then  X  X n ffo dnf . By Theorem 6, we can enumerate all of the frequent few-overlapped monotone DNF formulas as f X =( f  X  X  Y  X  f | X  X  Y } )  X  X for every f and X . It is a future work to efficiently enumerate all of the frequent few-overlapped monotone DNF formulas without pruning .

