 The quantity of data stored in computers is growing rapidly. Many of these data, par-ticularly collected automatically by sensing or monitoring applications, are time series data. Thus time series data are of gr owing importance in many new database applica-tions, such as data warehouse and data mining etc. A time series is a real-valued se-include stock prices and currency exchange rates, biomedical measurements, weather Similarity is defined in terms of a distance metric, most often Euclidean distance. For different applications, there are also other distance metrics to define the similarity of dimensionality of most time series, the direct indexing and searching of time series is method for overcoming this problem. 
Wavelet Transform (WT) or Discrete Wavelet Transform (DWT) [3] has been [6~10], approximate query processing over massive relational tables [11~13], and clustering in very large databases [14], etc. Discrete Fourier Transform (DFT) in query performance. Paper [7] gives another type search. In paper [8], they present a detail performance study using different wavelets upper and lower bounds on the estimation distance using wavelet transform. The experiments have shown that we can further reduce the number of original time series to process and improve filter efficiency. upper and lower tight bounds on the estimation distance using wavelet transform and give a new range query algorithm based on the tight bounds. Our experimental results are reported and discussed to show its superiority to traditional methods in section 4. Finally, section 5 contains conclusions and the direction of future work. usually used in time series similarity search. The first definition is the Euclidean dis-tance between two time series X and Y . to be Euclidean distance similar if 
A shortcoming of definition 1 demonstrated in figure 1 is that it does not consider they will be considered not similar by definition 1 because errors are accumulated at to be v-shift similar if series with similar trends running at two completely different levels. 
Because Haar wavelet transform allows good approximation with a subset of coef-ficients and it can be computed quickly and easily, it has been used as a research tool in many database fields, including time series similarity search. erations on a discrete time function. We first give the normalized Haar wavelet defini-tion as following and the detail description can be found in [4]. 
An example to find the normalized Haar wavelet transform of a time series f ( x ) = (5, 3, 8, 6) is shown in table 1. The wavelet transform discussed in this paper all refers to normalized Haar wavelet transform. 3) and (8, 6) divided by 2 respectively. This process is recursively continued until (5+3-8-6)/( 2  X  2 ), (5-3)/ 2 , (8-6) / 2 ) = (11,-3, 2 , 2 ) is obtained. approximation with a subset of coefficients. We can use these coefficients as synopses transform is orthonormal, there is the following lemma [4]: || X || 2 =|| R || 2 , which means: According to lemma 1, we can deduce lemma 2: Lemma 2. R and S are the wavelet transform of time series X and Y , there is: Above two lemmas show that Haar wavelet transform can keep the original time se-series data is also preserved after wavelet transform. 
For the general similarity search methods based on wavelet transform for time se-ries database, they first transform the time series using wavelet, and then keep the first k wavelet coefficients as synopses, and search in wavelet domain. If the two wavelet synopses X  distance is less than a predefined threshold  X  , the methods use original time series to remove all false alarms. Otherwise, it is known that they are not similar. The algorithms use wavelet as a filter and no false dismissal will occur, which is guaran-number of time series to process in original time domain. In order to present this paper X  X  main contribution, we first give another lemma. them satisfying the following inequality: 
This lemma is easy to understand. P , Q and P-Q can be seen as three edges of a tri-inequality. 
Depending on analysis to the wavelets transform and above lemmas, we present the following theorem: Y , there is: S || RangeQuery() Input: query time series Y ( y 0 ... y n-1 ), query radius  X  { the corresponding S T ; tabase*/ theorem 1, X p and Y are not similar; finish this loop and continue next loop */ in theorem 1, X p and Y are similar; finish this loop and continue next loop */ judge whether their distance is less than  X  ; } and the number of time series in database is m . The corresponding wavelet sequences ficients k , we can compute R T1 ... R Tm , where R Tp 2 =  X  shows the pseudo code for range query based on upper and lower bounds in theorem 1. 
In order to compare the difference between our new algorithm and traditional algo-rithm, we give a description about traditional method using wavelet in figure 3. TraditionalRangeQuery() Input: query time series Y ( y 0 ... y n-1 ), query radius  X  { judge whether their distance is less than  X  ; } 
Now we give further explanations about above algorithms. Because the original using synopses. Compared to original time domain, the cost of computing in wavelet domain is relative low. The aim of using wavelet is to reduce the computation amount efficiency. As shown in figure 3, the traditional method only uses  X   X   X  as the filter criterion in wavelet domain. Our algorithm X  X  step (1)  X   X   X  ( R in figure 2, which can directly judge whether two time series are similar. We can see that  X   X   X  algorithm. Our algorithm proposes strict er upper and lower distance bounds between more unmatched time series than traditional method. And according to the upper bound, we can directly judge whether two time series are similar, then further reduce the number of original time series to compare in time domain. Therefore compared to traditional methods, our method can significantly reduce the number of original time series to process in time domain and improve query efficiency. method. There are 3 time series in database: X 1 (1+1/ 2 ,1-1/ 2 ,0,0), X 2 (1,1, 2 ,-2 ), X 3 (1+1/ 2 ,1-1/ 2 ,1/ 2 ,-1/ 2 ). The corresponding wavelet sequences in the original time domain, which means that step (3) needs not to execute one time. But for traditional method in figure 3, it can not judge which time series is similar or dissimilar to the query time series in wavelet domain. Now it has to compute the ac-tual distances in the original time domain three times. type is 100K. We use the same method to create query time series. All experimental results given in this section are the average of 10 trials. first three wavelet coefficients as synopses. We will compare the filter efficiency and know that the aim of using wavelet is to reduce the number of original time series to process, namely try to avoid the execution of step (3) of the range query algorithm in figure 2. In order to compare our new method and traditional method, we define filter efficiency as: traditional method can not judge which time series in database is similar or dissimilar to query time series only using wavelet synopses, so its filter efficiency is 0. But our filter efficiency is relative high, the number of time series needed to process in origi-nal time domain is less, therefore the query time is reduced. 
Figure 4 and 5 give the filter efficiency and running time comparison between tra-ditional algorithm and our new algorithm given in section 3. They use computer gen-erated random walk data and Euclidean distance. Figure 4 shows the filter efficiency comparison as the query radius increases. This figure illustrate that our new algorithm And with the query radius increasing, the filter efficiency of new algorithm is further better than that of traditional algorithm. Figure 5 shows the running time comparison. method when query radius is relative short, as query radius increases new algorithm X  X  running time is better than that of traditional method at most situations. algorithm as the query radius increases. It also shows that new algorithm is better than conclusion. tional algorithm. Figure 10 and 11 give the comparisons of filter efficiency and running time using algorithm. 
Observed from above figures, the filter efficiency of traditional algorithm gradually reduces when the query radius increases. This is because that the traditional algorithm only uses lower bound as filter criterion. When the query radius  X  increases, the filter effect of  X   X   X  the query radius increases, the filter efficiency first reduces, and then increases, which is especially obvious in figure 10. This is because that the new algorithm uses upper and lower bounds as filter criterion. When the query radius increases, the filter effect of lower bound reduces similar to traditional algorithm, but the power of upper bound is gradually strengthened. Since the running time is approximately proportional to the filter efficiency, the comparisons for running time have the similar trend as the filter efficiency. 
In a summary, for different data sets, distance functions and query radiuses, the fil-ter efficiency and running time of new algorithm is better than that of traditional algo-rithm at most situations. And sometimes the filter efficiency and running time of new algorithm significantly outperform traditional method. similarity search for time series, and propose a new range query algorithm based on it. Using it we can get better filter efficiency and running time than traditional method. Experimental results on synthetic and real-world data confirm our conclusion. dexes such as R-tree to further improve the query efficiency. Acknowledgement. We thank Prof. Jian Pei (Simon Fraser University, Canada) and Haixun Wang (IBM T. J. Watson Research Center) for discussing some issues about this paper. 
