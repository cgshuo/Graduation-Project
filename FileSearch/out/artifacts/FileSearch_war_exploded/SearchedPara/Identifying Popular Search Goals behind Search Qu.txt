 However, conventional search engines usually relied on classic IR techniques like keyword matching mechanisms, and they only considered that search queries are driven by informational need. In fact, many users' search goals behind the queries are not always viewpoints of Broder [1]. The definitions of search goal types are given as follows:  X  Informational goal is that users want to learn/know something about the query  X  Navigational goal is that users want to go to specific websites that users already  X  Transactional goal is that users want to obtain a resource available on web pages In recent years, some researchers have studied for the research area of identifying user search goal. Kang and Kim [3] try to classify the search queries based on search goals informational and navigational goal. The above two works only consider automatic classification of the two broad categories, navigational and informational goal. In this paper, we propose a novel Popular-Search-Goal-based Search Model to identify a variety of search goals behind search queries based on features extracted from search-result snippets and click-through data. 
A few researchers [5,6] argued that accurate understanding and modeling of user improving the web search ranking, thus we proposed a Search-Goal-based Ranking experimental result shows our proposed model can effectively identify the search goals behind a search query and enhance the search result ranking. 
There are three main contributions in this paper. First, we addressed the problem of search-result snippet classification for th ree search-goal categories. Second, we proposed a generative framework to identify the search goals behind a search query. Finally, we further re-rank search results based on identified search goals. The following sections consist of our idea and observation (in Section 2), the main method (in Section 3), experimental results (in Section 4), and the conclusion (in Section 5). their searching behaviors before submitting qu eries to a search engine. Therefore, we assume that such searching behaviors can be implicitly expressed in users X  minds with certain natural sentences like  X  X  want to do something ... X  Generally, a typical sentence in Chinese/English consists of a subject, a verb, and an object (SVO syntactic structure). Obviously, the subject of the implicit sentences in the user X  X  mind used to represent the user X  X  search goal. 
Figure 1 shows an example, if a user submits a query  X  X oogle Map X  to a search engine, he/she may have a certain search goal among the goal-categories including informational, navigational, and transactional. For informational goal example (Figure 1a), the user wants to learn how to use Google Map API, and thus has an informational goal  X   X  X  X  X  X  X  X  (refer to source code) X . For navigational goal example (Figure 1b), users want to visit Google Map official web sites, and thus has a navigational goal  X   X  X  X  X  X  X  (go to home page) X . For transactional goal example goal  X   X  X  X  X  X  X  X  X  X  (download offline map) X . Figure 2 shows the framework of our proposed Popular-Search-Goal-based Search Model (PSGSM), which is proposed to automatically identify user search goals from collect a set S of search-result snippets returned by search engines and then separate generated from search-result snippets, and then we identify each type of search goals based on features from search-result snippet and click-through data. Finally, the identified search goals are used in re-r anking the original search result snippets. 3.1 Search-Result Snippet Classification classifying search-result snippets into three types including transactional, informational, and navigational. Classifying search-result snippets can effectively increase the precision of identifying each type of popular search goals. Considering computational cost, we use a simple but efficient approach to classifying search-result snippets. 
First, for navigational snippets, we observed that the URL of navigational snippets first level directory) of the website. Moreover, we also observed that it is a good clue to determine a navigational snippet if the query terms usually appear in the title of the Computer website. Therefore, a page X  X  title and URL are considered as useful features to determine whether a snippet belongs to navigational category. The scoring function Navig_Snippet ( s ) for navigational snippets is given as follows: navigational snippets, and leave the remaining snippets in further classification. 
Second, to identify transactional snippets, we find some verbs occurred in search queries are usually refer to the transactional goals, like  X  X  X  (download),  X  X  X   X  X  X  X  X  X  X _ X  X  X  X  X   X   X   X  for transactional snippets is given as follows: transactional snippets. 
Finally, for informational category, it is hard to choose any unique feature to contents in the web. Fortunately, the above two categories of identification have we simply treat the remaining snippets as informational snippets. 
To efficiently classify search-result snippets, we develop an algorithm which is the output labels representing categories of informational, navigational, and transactional, transactional snippet. Otherwise, the snippet is considered as a informational snippet. To and t t according to the percentage of snippets per category.
 Algorithm 1: Search_Result_Snippet_Classification(  X , X , X   X  ) Input: search-result snippet s , search query q , and hint verb vocabulary set H v . 
Output: search-goal category N,T X , X  X  X c 1. Compute navigational snippet score ns of s based on Equation (1). 2. If ns is greater than threshold t n then return  X  X  X  3. Compute transactional snippet score ts of s based on Equation (2). 4. If ts is greater than threshold t t then return  X  X  X  5. Return  X  X  X  3.2 Search Goal Candidate Generation To extract popular search goals from the classified search-result snippets, we need to generate goal candidates. We extract all verb-noun combinations (i.e., VO-pairs) from each search-result snippet (where nouns include unigram and bigram). We only adopt the VO-pairs whose verb-noun distance is less than w terms (the window size w is set to 3 in this work). In this paper, we only select three types of verb and three types of 92.1%. The types of noun include common noun, proper noun, and location noun. verb and three types of noun from search-result. 3.3 Popular Search Goal Validation Once goal candidates are generated, then we need to determine which goal candidates relevant to the query, but also should be semantically suitable. To automatically goals and incorrect search goals. 3.3.1 The Features Used in Popular Search Goal Model search-result snippets and click-through data for identifying the correctness of search goal candidates. In the following, we will introduce several effective features, and the usage of features for different search-goal categories is described in Section 3.3.2. (1) Search-Result Snippet Features Noun Phrase Length: According to our preliminary experiments, we found that some noun phrases can describe the complete meaning of the objects. For example,  X   X  X  X  X  X  X  X  X  (download cellphone game) X  is more clear than  X   X  X  X  X  X  (download cellphone) X  or  X   X  X  X  X  X  X  (download game). X  To deal with noun phrase extraction and assume that longer noun phrases are probably more meaningful than shorter nouns. where Length ( g n ) is the number of terms in g n , and g =( g v , g n ). VO-Distance: In general, a smaller distance between verb and noun indicates its VO combination is more semantically suitable. We found that the probability of distance d approximately obey normal distribution. Therefore, we employ normal distribution model as follows: the standard deviation of distance. weighting mechanism Term Frequency-Inverted Document Frequency. number of search-result snippets in set S . Intuitively, more frequent terms are more likely to be better candidates of search goals; while terms with higher document frequency might be less informative. Search-Result Snippet Rank: For some search engines, top ranked-search result snippets would possibly contain popular search goals. We employ a power-law distribution to estimate the snippet rank feature function. parameter. Title: If a search goal occurred in the title of a snippet, it would have more attraction for users to click the snippet. Thus, the title feature function is URL: For navigational search goals, we assume users intend to browse a specific web Here is the URL feature function (2) Click-through Data Features Hint Verb and Hint Noun: According to our observations, we found some verbs and goals. The feature function is given as follows: where g v and g n are the verb or noun parts in the VO-pair g =( g v , g n ). contain their search goals. We assume that the more early a user clicks a snippet, the more probable the snippet contains search goals. Thus we exploit a power-law distribution to estimate the user-click-order feature function. parameter. Snippet Click Count: A snippet which has been clicked many times is probably count of popular web site. where  X  X  X  X  X  X  X  X  X  is the click count of the snippets which contains the search goal g . 3.3.2 Search Goal Classifiers Originally, our goal is to identify correct search goals G from search goal candidates G , in fact the above problem we addressed can be simplified to classify search goal goal. That is, each search goal candidate belongs to one of two categories  X  X  X  of snippets are different, we select differe nt feature sets for each search-goal category. Snippet Click Count are used in three search-goal categories. For informational snippets, VO-Distance can improve the semantic correctness of identified search navigational goal, URL &amp; Title are the most important features used in this category. category, and using TF (Term Frequency) to favor high-frequency terms occurred in search-result snippets. Informational Goals Navigational Goals URL Transactional Goals 
To deal with the problem of binary classification, we employ three different classifiers including log-linear model, support vector machine, and adaptive boost, and compare their performance among the three classifiers. Support Vector Machine well-known implementation of SVM naming LIBSVM is adopted in this paper. We use the radial basis function as the kernel function where the capacity constant and  X  are set to 0.03 and 0.125 respectively. Log-Linear Model Log-linear model is a far-reaching extension of logistic regression [Christensen, 1997], which maps each of features into a feature function and is modeled by conditional probability  X  X  X  X  X  X  as follows: can be estimated by the feature functions mentioned in Section 3.3.1 when given the category c . AdaBoost AdaBoost (short for Adaptive Boosting) is a machine learning algorithm formulated by Freund and Schapire [1995]. AdaBoost can deal with the binary classification task by adapting in the sense that subsequent classifiers built are tweaked in favor of those instances misclassified by previous classifiers. Although, AdaBoost is sensitive to paper, we use decision stumps as the weak learners. The simple algorithm is as follows: feature functions mentioned in Section 3.3.1). (2) Multiplies by learned confidence value  X   X  . (3) Sums over  X  rounds. (4) Compares sum to zero (return the disc rete classification value +1 or -1). Thus the decision function is given as follows: 3.4 Search-Goal-Based Ranking Model One of most important application of detec ting search goal is to improve the search-result snippet ranking. We propose a Search -Goal-based Ranking Model (SGRM) to rank the search-result snippet s for a given query q as follows: q. category c . The equation is given as follows: where | X  X  is the count of search-result snippets we crawled from search engines with and  X   X   X  X  . returned search results given a query q with a user goal g . It is estimated as follows. where  X  X , X  X  X  X  X  X  X  X  is the occurrence count of the search goal g in the search result snippet s . To realize the performance of our proposed Search Goal Detection Model, we different search goal types. Finally, we compared our Search-Goal-based Ranking Model with the Query-Expansion-based Ranking Model. 4.1 Experimental Setup 4.1.1 Dataset We selected 1200 top-frequency queries (named top-1200 query set) from the one-month query log (which contains 21,422,773 records and 3,167,170 distinct queries) of Sogou search engine in 2006. For each query, we crawl top 100 snippets from Sogou search engine, and generate about 200-300 search goal candidates for each query in average. We employed three judges to label  X  X RUE X  or  X  X ALSE X  for each search goal candidate. For each judge, only the queries and search goal candidates are observable, and they label the search goal candidate based on the guideline  X  X abel a search goal candidate with  X  X RUE X  only when the search goal is relevant to the query and semantically suitable. X  For example, given the query  X  X outube, X  a judge labeled search goals with  X  X RUE X  such as  X   X  X  X  X  (watch video). X  On the other hand, a judge labeled search goals with  X  X ALSE X  such as  X   X  X  X  X  X  (buy mobile phone) X  semantically suitable). We only consider a s earch goal candidate as a  X  X orrect search goal X  only if that there are at least two judges label the search goal with  X  X RUE X . In average, there are 23.2 correct search goals for each query. 4.1.2 Evaluation Metrics We use overall precision, recall, and F1 as the metrics to evaluate the performance of three compared classifiers. Recall evaluation is very difficult in this work since we do not really understand the total number of relevant search goals behind a search query. Therefore, we consider all correct search goals occurred in crawled search-result compared search result ranking models, we employ the metrics of top-t NDCG, precision, and recall. 4.2 Experimental Result 4.2.1 Performance of Snippet Classification To determine the effectiveness of search-result snippet classification, we employed experiment, we use 5000 search-result snippets returned by 50 queries which were classified to a certain category by our proposed algorithm (see Figure 4). The overall accuracy is 0.94 ((2543+1322+837)/5000), which is adequate to be exploited in the following experiments. 4.2.2 Performance of Popular Search Goal Validation correctness of our extracted search goal ca ndidates. We compare the performance of Support Vector Machine (SVM), Log-Linear Model (LLM), and AdaBoost (AB). Table 3 shows the performance comparison of identified popular search goals of three classifiers over three different search goal categories. The SVM achieved best F1 measure of 0.74 in average, but LLM achieved best recall of 0.654 in average. Therefore, we use the SVM classifier to de tect correct search goals for Search-Goal-based Ranking Model in next experiment. Info. 0.927 0.613 0.734 0.901 0.611 0.728 0.865 0.607 0.713 Navi. 0.832 0.667 0.736 0.808 0.668 0.731 0.782 0.581 0.667 Tran. 0.847 0.674 0.749 0.831 0.682 0.749 0.812 0.623 0.705 
Aver. 0.865 0.648 0.740 0.847 0.654 0.736 0.820 0.604 0.695 4.2.3 Performance of Search-Goal-Based Ranking Model In order to evaluate the performance of our Search-Goal-based Ranking Model (SGRM), we employ a pseudo-relevance feedback ranking method based on Okapi BM25 Query Expansion (QE) as the baseline. We selected top 10 search result snippets as "relevant snippets", and utilized top 2 expanded terms with original query as a new expanded query to re-rank the original search results. Table 4 shows the top-k NDCG and precision of SGRM and QE. Obviously, SGRM outperforms QE. The reason is that, although they are both based on non-explicit relevance feedback approach, the SGRM adopts more useful keywords (i.e., expansion based weighting. We have presented a novel approach to effectively extract popular search goals based on features of search-result snippet features and click-through data features. The experimental results show that our proposed approach is effective for suitable search goal identification and further improve the search-result ranking.
