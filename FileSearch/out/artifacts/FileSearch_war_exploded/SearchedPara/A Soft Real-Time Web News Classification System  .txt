 The amount of online text data has grown greatly in recent years because of the increase in popularity of the World Wide Web. As a result, there is a need to provide efficient fetches, classifies and indexes the web information. Usually, a full-fledged search en-gine includes a front-end search subsystem and a back-end data processing subsystem. The front-end follows the html links and fetches the web pages, while the back-end is in responsible for classification and indexing. In this paper, we consider the problem of how to design a soft real-time classification subsystem for a web news search system. The bulk of the research on text classification (TC) system has focused on improve-ments to "precision" or "recall", and is no t concerned with how long it takes to com-plete the tasks. Our contribution is to take the time constraints into consideration, and propose a general framework to design a text classification system with soft real-time guarantee. 
Real-time systems are computing systems that must react within precise time con-straints to events in the environment. As a consequence, the correct behavior of these systems depends not only on the value of the computation but also on the time at which the results are produced. The time before which a task should be completed to avoid damage to the system is called deadline. Real-time system should try its best to guar-antee all running tasks to finish before their respective deadlines. A system is said to be soft real-time if deadline missing decreases the Qos of the system, but does not jeop-ardize the system's correct behavior. With the rapid growth of textual information available on the Internet, the search engine front-end is already able to fetch more and more web pages in a given time. In order to keep up with the high-speed of the real-time service. 
However, very limited research work has been done in this direction, and the need a formal mathematical model for the system, and the classification system is such a nonlinear and time-varying system that is difficult to be formalized inherently. Without an analyzable mathematical model, it is impossible to apply real-time theory to the system design. How to provide real-time guarantee without relying on over-provisioning of system resource becomes a great challenge. 
After this introduction, section two introduces the related work. Section three ex-plains our system design method in theory. Section four gives the experiments result. Section five makes the conclusion. Since the design of real-time TC system requires the knowledge of information re-trieval, real-time system and control theory. This section introduces the related work in all these fields. Current TC algorithms include Naive Bayes, k-Nearest Neighbor (KNN), Linear Least Squares Fit (LLSF), Neural Network, Boosting, Support Vector Machine (SVM) and so on [1]. Based on these algorithms, great effort has been made by research community to reduce the computational complexity and hence increase the running speed. Yang provides a formal analysis of the computational complexities of five popular TC algorithms [2]. Grossman introduce some techniques to improve the run-time performance of information retrieval system with inverted index and signature Paper [4,5,6] presents various methods to reduce the runtime complexity, for example, density-based method, pruning method, and discriminating power method. However, all these methods rely on powerful hardware or algorithm complexity reduction. If the test document set is a static set, the results of aforementioned methods are acceptable. While facing the large amount of textual information from Internet, the requirement is quite different. How to integrate these clas sification methods into a practical real-time system is not investigated by previous researches. 
Real-time Task Model is the core concept of real-time scheduling systems. The most famous scheduling algorithms for real-time tasks are RM and EDF, which is firstly these researches, a real-time system is modeled as a set of independent tasks. = denotes a task set containing n tasks. A real-time task performance is average response time: Average response time consistently longer than the desired relative deadline is unac-ceptable to the users. Average response time consistently shorter indicates over-provisioning of resource that could have been used for other users and applica-tions. 
Imprecise computation is a useful technique in real-time system. In an imprecise computation system, every task is decompos ed to a mandatory subtask and an optional subtask. The mandatory subtask is the portion of the computation that must be done in order to produce a result of acceptable quality, whereas the optional subtask refines this result [10]. Web news classification system is suitable for imprecise computation refers to assigning of one or more suitable categories from a hierarchical category space to a document. Web news classification system adopts a top-down level-based method that can classify news to both leaf and internal categories in the category tree. Our hi-erarchical category space contains ten major categories, and each major category contains several minor categories. For example, "sport" is a major category while omit the minor categories and only classifies news according to major categories. The result is trading off computation accuracy with temporal requirements. Imprecise computation model dose not change the essence of the classification algorithms, so most of the current TC algorithms are able to support this model inherently. The real-time framework in this paper dose not target for one specific classification algo-rithm. Choosing what classification algorithm depends on the system implementers. 
Feedback control is a powerful concept that has played a pivotal role in the devel-opment of many areas of engineering. It has several advantages. Using feedback, it is possible to create linear behavior out of non-linear components and to modify the dy-namic behavior of a system. The advantage of using feedback in conjunction with feature is especially desirable for TC system, because TC system runs in an unpre-dictable environment, where the execution time of a task varies greatly from one in-stance to another. However, feedback control theory has been mostly applied in me-system, the modeling and implementation face significant research challenges. This paper tries to answer some of these challenges. The dominant approach adopted by TC systems is based on machine learning tech-niques: a general inductive process automatically builds a classifier by learning, from a set of pre-classified documents, the characteristics of the categories [1]. A classifier is a program devoted to the classification work. We can speedup the TC system by running sume more computing resources, which is undesirable. So, we now raise two questions. 1) How many classifiers are suitable for th e current workload? 2) How to accurately develop a linear feedback model to overcome the transient overload due to stochastic environment? These two questions lead to the following system components. 
As shown in Fig. 1, the incoming documents are put into a document queue. The system assigns a desired relative deadline L ref for all documents in the queue. From the user's viewpoint, L ref is the maximum allowable delay between the document's arrival and leaving. In order to provide timely service, the system contains two control loops: feed forward control loop and feedback control loop. In the feed forward control loop, classical results from queuing theory are used for computing the number of classifiers necessary to achieve the specified deadlin e requirement given the current observed average document arrival rate  X  . In the feedback control loop, the average response time R(k) is observed by the Monitor, and compared to L ref by the Controller. And then, Classifier Manager adjusts those classifiers according to the imprecise computation model. The feed forward and feedback components operate concurrently in a com-plementary manner. 3.1 Feed Forward Loop The feed forward loop is relatively simple and easy to design. Its central idea is using an M/M/N queuing model [12,13]. Let the document arrival process is a Poisson process with arrival rate  X  , and the average service rate of one classifier is  X  . According to M/M/N queuing model, the average delay of a document in the system is If  X  and  X  are known, we can compute the lower bound of classifier number N by 
In Fig. 1, queuing model predictor completes the above computation work. There are three points to be explained for the queuing model predictor: 1) The average arrival rate  X  is monitored by queuing model predictor over an 2) Compared to parameter  X  , average service rate  X  is relatively stable because 3) Queuing model predictor adjusts the classi fier number according to formula 4. If 
The feed forward loop can figure out the suitable classifier number by queuing model. However, that is not enough for the real-time guarantee because the transitional change of the workload cannot be observed by queuing model predictor. The feedback control loop is designed to resolve this problem. 3.2 Feedback Loop The feedback loop adjusts the system in an incremental manner. First of all, it is nec-essary to decide the following variables in terms of control theory. Readers can refer to [14,15,16] for the basic knowledge of control theory. Controlled variable represents the performance metric controlled by the real-time TC system. In our model, the variable "average response time" R(k) is used as con-trolled variable, which is defined over a time window { (k-1)W, kW }, where W is the sampling period and k is called the sampling instant. ference between L ref and the current value of the controlled variable is called an error. The "average response time error" E(k) = L ref  X  R(K) . 
Manipulated variable is the system attribute that can be dynamically changed to affect the value of the controlled variable. In our system, the manipulated variable is "classification speed" S(k) . The classification speed S(k) at the k th sampling instant is defined as rate of one classifier that performs imprecise computation, N is the current number of putation. The classifiers performing imprecise computation throw away the optional part of the task, so their service rate is higher than the normal classifiers.  X  +  X  can also be measured from the actual system like  X  . 
Fig. 1 illustrates the feedback control loop. The monitor measures the controlled variable R(k) and feeds the samples back to the co ntroller. The controller compares the cally changes the classification speed at each sampling instant k according to the con-trol input D(k) by adjusting the number of classifiers that perform imprecise computa-computation in next time window can be calculated by 
With the aforementioned definitions, it is possible to establish an analyzable model to approximate the feedback loop in the TC system. Although it is difficult to precisely model a nonlinear and time-varying system, we can approximate such a system with a linear model for the purpose of control design because of the robustness of feedback control with regard to system variations. Starting from the control input, the classifier manager changes the classification speed at every sampling instant: 
R(k) usually decreases nonlinearly with the classification speed S(k) . The relation-ship between R(k) and S(k) needs to be linearized by taking the derivative at the vicinity of the performance reference L ref , as the "response time factor" R N : In practice, the response time factor R N can be estimated experimentally by plotting a R(k) curve as a function of S(k) based on experimental data if the classifier number N is known. Given the response time factor, we have the following linearized formula for the purpose of control design, 
Based on Equations (7) and (9), the analyzable model for the average response time output is as 
We now convert this model to z-domain transfer function that is suitable to control theory analysis. Let Y(z) be the z-transform of the output variable R(k) , and X(z) be the z-transform of the input variable D(k) . A linear system can be represented by a transfer function H(z) = Y(z)/X(z) . For our system, formula (10) can be converted into z-domain as so the transfer function in open loop is 
At each sampling instant k , the controller computes a control input D(k) based on the average response time error E(k) . We choose a simple P (proportional) control function to compute the control input: implementors can choose suitable value of K for their own systems. The hardware platform of our experiments is a cluster of four PCs with CPU800MHz and memory 256M. In a single CPU system, when the number of classifier increases, the efficiency cannot increase linearly. The reason is that those classifiers run concur-rently, rather than parallelly. In our experiment, multiple computers work together to run multiple classifiers in order to alleviate the hardware bottleneck of the single CPU system. This test system adopts KNN algorithm (the system dose not depend on one specific classification algorithm), and the category space contains ten major categories. The front-end search subsystem provides about 15000 web pages per hour to the TC subsystem on average. The size of these web pages is about 25k bytes on average, in-cluding the HTML tags. If the HTML tags are filtered out, the size of the text inside each web page is about 2k-5K. In this test system, L ref chooses the value of 5 minutes. Fig. 2 records the relationship between average service rate  X  and classifier number N . The values presented in Fig. 2 are average values of hundreds of tests. value of N . Fig. 3 shows the experiment results of R(k) based on S(k) when N equals to 8, 12, and 16. The relationship when N equals to other values is not drawn here because tangent slope is 
Figure 4 records the system performance in 100 successive time windows during stable state. Each time window is 2 minutes. While the disturbance exists, the variation range of R(k) is within  X  3% to L ref . 
Fig. 5 records the change of classifier number during the same time segment. With the soft real-time guarantee, the number of the classifiers are dynamically increased or decreased to save the computation resource, which is one of the advantages of our system. Since R(s) is stabilized at the point of L ref , the soft real-time guarantee is ob-tained without relying on over-provisioning of system resource. This paper proposes a design method for soft real-time TC system. A mathematical model of TC system is established. And the control theory is applied to prove the sys-tem performance guarantee. Experiment results further prove the effectiveness of our integrate the multiple different classification algorithms into one real-time framework. 
