 As a collaborative project, online encyclopedi a Wikipedia receives contribution from social news and knowledge. Guided by the fundamental principle of  X  X eutral Point of content expanding and fact updating. Users can choose to edit on an existing revision revisions, while the trajectories how such collaboration appears in Wikipedia articles in terms of revisions are valuable for group dynamics and social media research [4]. Also, research exploiting revision history for term weighting [1] requires clean history without astray, which can be accomplished by such trajectories. 
Wikipedia and other Wiki systems generally keep all revisions X  texts for each article and make the edit history publicly available. The meta-data of the edit history, such as timestamps, contributors, and edit comments are also recorded. We propose WikiReviz to model the arti cle evolution process as revision graph . Here ReViz a derivation relationship from the origin node to the destination node [6]. Users create a new revision by editing either the current revision, or one of past revisions. Also, a completely new input may replace the current revision. Most existing research the relationship, but few of them concern about the accuracy. WikiReviz takes the original XML file of edit history dump as an input, and automatically generates the revision graph with edit summaries in the GraphML word separation. WikiReviz is implemented in Java and currently consists of two functional parts: the Revision Graph Extraction [6] Unit, which reconstructs the graph structure from original edit history; and Edit Summarization [7] Unit, where we generate supergram summaries on revision graph. 2.1 Revision Graph Extraction (RGE) previous revisions, which involves comparison between those revisions. The best Wikipedia editing. In WikiReviz, revisions are split into supergrams, which are After comparing with others X  supergrams, supergram diff score can be computed for each revision pair in the comparison scope. The whole process is shown in Fig. 1. 
The output of the RGE part is a GraphML file illustrating the revision graph, which can be viewed by existing software such as yEd graph editor. Fig. 2 shows a part of the graph of article  X  X hpBB X  about an Internet forum package written in the PHP scripting language [8], where each node X  X  id represents a revision number. Since the whole revision graph is too large, we only cap ture a close look at a small portion of it. 2.2 Edit Summarization contents during a specified edit period in the revision graph of a Wikipedia article, into a graph. From the supergram generated in previous RGE part, two supergram selection algorithms, TF-IDF and Extended LDA ranking are developed to pick up representative supergrams. 
The scopes upon which summaries would be applied are determined based on the type of topics. In a revision graph, one revision usually contains multiple topics, and the amount of topics will increase over time. We classify these topics based on which context in the revision graph the topics represent: 1. Popular topic is a topic that is most prominent among all the revisions in a view. 
We can discover such topics by LDA from the revision graph. 2. Surviving topic is a topic that appears at a revision, and continues to appear until mainstream. After a period of edits, certain topics become stable and survive to the latest. 3. Extinct topic is a topic that is not surviving to the current revision. The definition of surviving topics is relative to the current revision, so if there are large amount of can be changed to extinct. article  X  X azi Germany X , where scopes are divided by orange nodes. The blue nodes represent revisions that contain the surviving topics and the grey nodes are for extinct topics. In this demo, we describe the motivation and features of our edit history visualization system WikiReviz, with visualization of revision graphs representing evolution processes of Wikipedia articles. 
