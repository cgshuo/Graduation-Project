 The Deep Web usually means the databases available through the HTML pages in the traversal of hyperlinks. Data mining in Deep Web sources has aroused a lot of inter-and classifying Deep Web sources [1-3]. 
As an important technique of data mining, document clustering is the operation of clearly different from each other. There have been a lot of researches focused on clus-tering algorithm, such as K-Means algorithm [4], Particle Swarm Optimization (PSO) and hybrid PSO approaches [5-9]. Compared with common data clustering, Deep designers X  model that is not possible to assume certain standard form field names and structures [10-11]. 
Given a large scale of searchable forms of Deep Web databases, in order to group together forms that correspond to similar databases, pre-query and post-query ap-proaches can be used [12]. Post-query techniques issue query probing and the approaches, visible features are represented as vectors and cosine similarity is used as between two vectors d i and d j is as follows: representation of document as vector of bags of words suffers from well-known limi-tations: its inability to represent semantics. The main reason is that VSM is based on lexicographic term matching. Two terms can be semantically similar although they are lexicographically different. Therefore, su ch lexicographic term matching results is inability to exploit semantic similarity between two Deep Web features, which affects the quality of clustering at last. 
Ontology is a specification of a conceptualization of a knowledge domain, which is formal way, and has a grammar for using the concepts to express something meaning-grate domain ontology as background knowledge into document clustering process and shown that ontology could improve document clustering performance [15-18]. In these measures, the basic idea is to re-weight terms and assign more weight to terms document similarity. However, these term re-weighting approaches that ignore some of terms might cause serious information loss. Zhang X  X  experiments showed that term ment are distinguish core terms [19]. 
Facing the above problems, in this paper we firstly present a fuzzy semantic meas-ure, which integrates semantics of ontology and fuzzy set theory to compute similarity between visible features of Deep Web forms. Then we present a hybrid PSO algo-rithm for Deep Web clustering. Main contributions of this paper are: 
The organization of this paper is as follows: After giving an approach of building domain ontology in Sec. 2, a fuzzy semantic similarity measure with respect to ontol-applied in Deep Web databases clustering with hybrid PSO. In Sec. 5, the efficacy of our approach is demonstrated through relevant experiments. Conclusions are given in Sec.6. A frame system for the core ontology is given in [20]: Definition 1 (Core Ontology). An core ontology is a sign system O:=(L;F;C; ( ) C C H  X   X  . C c c  X   X  concept ROOT  X  C . For all c  X  C it holds H(c, ROOT) . Based on the frame system of above core ontology, a semi-automatic approach to features of the Deep Web forms are parsed. The OntoBuilder project supports the extraction of attributes from web search forms and saves as XML format [21]. From these XML files concepts and instances of co ncepts are then extracted, with which we can build domain ontology. Fig. 1 and fig. 2 are extracted form attributes and its XML file of a search form, respectively. 
Our building process has the following components: (1) Concepts: e.g.  X  X epar-ture_city X ,  X  X estination_city X  are concepts of airfares domain. (2) Instances of con-cept: e.g. and are instances of the concept  X  X eparture_city X . (3) such as  X  X acation from X   X   X  X eparture X   X   X  X epart X   X   X  X eave from X   X   X  X rigin X   X   X  X eaving departure_city X . (4) Concepts relationships: A-Kind-Of relation . (5) Slot and facet. 
The main characteristics of a domain ontology based on query forms are: firstly, it orients to a domain, such as books, airfares, movies etc.; secondly, its semantic rela-tion is very simple, only exists A-Kind-Of semantic relation; thirdly, the depth of the vertices and edges represent concepts and semantic relations respectively. All con-ontology. Prot X g X  is a free, open source ontology editor and knowledge base framework [22]. graph of airfares ontology. 3.1 Similarity Matrix of Concepts Conceptual similarity in ontology plays an important role in mining semantics among concepts. To represent the role of semantic relations, weights are assigned to edges. In order to make the implicit membership relations explicit, we represent the graph structure by means of adjacency matrices an d apply a number of operations to them. Adjacency matrix T , which is symmetry, is used to express the immediate weight between two concepts. Assuming that  X  express immediate weight of semantic rela-tion, adjacency semantic matrix T is defined as: 
In order to represent transitivity of semantic relations, we define matrix composi-transitivity, so the transitivity closure of T , denoted Note that the computation of the closure are bounded by maximum depth of the ontology. 3.2 Fuzzy Set to Represent a Concept Unlike the case of a classic crisp set, an element may belong partially to a fuzzy set. from X to [0, 1] that denotes the degree to which x belongs to A with each element x of X . 
In our work, a set of concepts in domain ontology is regarded as domain X . Fuzzy set, which is more generally used to represent a concept in ontology whose border is not strictly delimited, can be used to define the granularity of a concept by associating a degree with every candidate value in domain. Semantic similarity matrix in Sec. 3.1 can be generalized to a fuzzy measure if the weights for the relation links are replaced by membership degrees indicating the strength of the relationships between the parent and the child concepts. With similarity matrix into a concept. Suppose Fig. 4 is a domain ontology graph. as:  X  0.51/c 13 , 0.8/c 14 , 0.16 /c 15 , 0.41/c 16 , 1/c 17 }. from 3.3 Fuzzy Set to Represen t a Vector of Concepts Fuzzy set can also be used to define the gr anularity of a documents X  conceptual vector by associating a degree with every candidate value in ontology. In order to explore the underlying semantics, a concep tual vector with respect to a document can be endowed standard min-max system proposed by Zadeh [23]: Example 2. With domain ontology in Fig.4, if the conceptual vector CV of document A is represented as CV =(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1), it is described to be a fuzzy set with fuzzy set operations (equation (6)):  X  =  X  14  X  17 ={ 0.51/c 0 ,0.41/c 1 ,0.41/c 2 ,0.64/c 3 ,0.33/c 4 ,0.33/c 5 , /c From above discussion, a conceptual vector with respect to a document can be de-scribed as a fuzzy set. 3.4 Fuzzy Similarity Measure between Documents Necessity degree of matching is used in fuzzy pattern matching to evaluate fuzzy semantic similarity between two fuzzy sets [24-25]: Definition 3. Let A and B be two fuzzy sets defined on a domain X : patible with B , and is defined by: lowing: Firstly, according to the computing in Sec. 3.3, the fuzzy sets of document A and document B are described as below:  X  0.26/c 10 , 0.26/c 11 , 0.26/c 12 , 0.64/c 13 , 1/c 14 , 0.16 /c 15 , 0.51/c 16 , 1/c 17 }  X  0.26/c 10 , 0.26/c 11 , 0.26/c 12 , 1/c 13 , 0.64/c 14 , 0.21 /c 15 , 0.8/c 16 , 0.51/c 17 } With equation (7), the necessity degree of matching is N (A; B)= 0.49. But with cosine co-occur lexicographic terms in document A and B . Clustering problem is to find the partition C * that has optimal objective function with NP-hard problem [26]. PSO is a population-based stochastic search algorithm, where algorithm of document clustering, the whole document collection can be represented one dimension and each dot re presents a document. One particle in the swarm repre-ters. When a particle moves to a new location, a different clustering solution is gener-ated. Therefore, a swarm represents a number of candidate clustering solutions for the When a particle takes all the population as its topological neighbors, the best value is particle adjusts its velocity vector, basing on its momentum and the influence of both new point to examine. The basic PSO document-clustering algorithm is: (1) Initialize locations and velocities: here each particle randomly chooses k dif-(2) For each particle: (3) Compare fitness evaluation with the population's overall previous best. If (4) Modify velocities and position with equation (8) and (9); (5) Repeat Step (2)-Step (5) until the aver age change in centroid vectors is less The particle updates its velocity and positions with following equation (8) and (9): Where  X  denotes the inertia weight factor that controls the convergence of the parti-around the optimal solution. 
In this paper we use similarity measure between documents to compute fitness value ( document function ). The fitness value, whose goal is to attaining high intra-cluster similarity and low inter-cluster similarity, is measured by the equa-tion below: m and k stands for the number of clusters. The larger a fitness value is, the better qual-ity of clustering is. 
PSO can conduct a globalized searching for the optimal clustering, but requires more iteration numbers than K-Means algorithm. However the K-Means algorithm tends to converge faster than the PSO algorithm, but usually can be trapped in a local optimal area. The hybrid algorithm combines the ability of globalized searching of the PSO algorithm and the fast convergence of the K-means algorithm and avoids the drawbacks of both algorithms. In this paper our hybrid algorithm firstly executes the PSO process until the maximum number iterations are exceeded, and inherits cluster-ing result from PSO as the initial centroid vectors of K-Means module, then starts K-Means process until maximum number of iterations is reached. TEL-8 Query Forms [27] are used as knowledge acquisition database to build 8 do-main ontologies. These 8 domains are airfares, automobiles, books, car rentals, hotels, jobs, movies and music records. We also gather 431 form pages of above 8 categories help of domain ontology. Table 1 is statistical data about number of attributive terms and concepts in 8 categories. 
After mapping attributive terms to concepts , a conceptual vector can be represented similarity between two fuzzy sets. Hybrid PSO clustering algorithm in Sec. 4 is used to perform Deep Web resources clustering. 
In our experiment, our emphasis is to compare the clustering X  X  performance of the fuzzy semantic similarity and cosine similarity with K-means, PSO and hybrid PSO clustering approaches. The fitness equation ( 10) is used not only in the PSO algorithm cates the value of the average similarity of document to the cluster centroid (ASDC). 
For an easy comparison, the K-means and PSO approaches run 50 iterations in each experiment. Parameter k in K-means is set to 8. Because the attribute features of forms are not a high dimensional problem space, particle number in PSO is set to 20. In the PSO algorithm, the inertia weight w is initially set to 0.7 and the accelera-at each generation to ensure good convergence. Table 2, Table 3 and Table 4 demon-strate the experimental results by using the K-Means, PSO, hybrid PSO respectively. Ten simulations are performed for each algorithm. criterion that evaluates how well the clustering matches a set of gold standard classes [4]. We can view clustering as a series of decisions, one for each of the N(N X 1)/2 pairs of documents in the collection. We want to assign two documents to the same cluster if Rand Index (RI) measures the percentage of RI decisions that are correct. 
Figure 5 is a comparing graph of RI value about hybrid PSO clustering with cosine similarity and fuzzy semantic similarity. 
From the experiment, we can conclude: (1) Dimension reduces in feature space with ontological mapping approach (See ta-(3) As shown in table 2~4, the hybrid PSO approach generates the clustering results (4) As shown in fig. 3, fuzzy semantic similarity performs higher RI value than co-Facing the problem of how to organize large amount of Deep Web databases, we propose a semantic clustering approach of Deep Web databases. Firstly domain on-tology is built semi-automatically. Then the database form is represented by fuzzy set with the semantic help of domain ontology. And necessity degree of matching is used to compute fuzzy semantic similarity between two forms. A hybrid PSO is provided for Deep Web databases clustering. Finally experiments were carried out to evaluate clustering results based on fuzzy semantic similarity have higher ASDC values and higher RI values than those based on cosine similarity . The reason is that cosine simi-fuzzy similarity measure couldn X  X  be 0 if there exist conceptual semantics. It reflects the conclusion that the fuzzy semantic similarity approach can explore latent semantics.

