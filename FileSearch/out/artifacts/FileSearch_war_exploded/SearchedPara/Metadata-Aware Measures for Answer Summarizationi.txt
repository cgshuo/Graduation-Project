 Community Question Answering (cQA) portals are an example of Social Media where the infor-mation need of a user is expressed in the form of a question for which a best answer is picked among the ones generated by other users. cQA websites are becoming an increasingly popular complement to search engines: overnight, a user can expect a human-crafted, natural language answer tailored to her specific needs. We have to be aware, though, that User Generated Content (UGC) is often re-dundant, noisy and untrustworthy (Jeon et al., 2006; Wang et al., 2009b; Suryanto et al., 2009). Interestingly, a great amount of information is em-bedded in the metadata generated as a byprod-uct of users X  action and interaction on Social Me-dia. Much valuable information is contained in an-swers other than the chosen best one (Liu et al., 2008). Our work aims to show that such informa-tion can be successfully extracted and made avail-able by exploiting metadata to distill cQA content. To this end, we casted the problem to an instance of the query-biased multi-document summariza-tion task, where the question was seen as a query and the available answers as documents to be sum-marized. We mapped each characteristic that an ideal answer should present to a measurable prop-erty that we wished the final summary could ex-hibit:  X  Quality to assess trustfulness in the source,  X  Coverage to ensure completeness of the in- X  Relevance to keep focused on the user X  X  in- X  Novelty to avoid redundancy.
 Quality of the information was assessed via Ma-chine Learning (ML) techniques under best an-swer supervision in a vector space consisting of linguistic and statistical features about the answers and their authors. Coverage was estimated by se-mantic comparison with the knowledge space of a corpus of answers to similar questions which had been retrieved through the Yahoo! Answers API 1 . Relevance was computed as information overlap between an answer and its question, while Novelty was calculated as inverse overlap with all other answers to the same question. A score was as-signed to each concept in an answer according to the above properties. A score-maximizing sum-mary under a maximum coverage model was then computed by solving an associated Integer Linear Programming problem (Gillick and Favre, 2009; McDonald, 2007). We chose to express concepts in the form of Basic Elements (BE), a semantic unit developed at ISI 2 and modeled semantic over-lap as intersection in the equivalence classes of two concepts (formal definitions will be given in section 2.3).

The objective of our work was to present what we believe is a valuable conceptual framework; more advance machine learning and summariza-tion techniques would most likely improve the per-formances.

The remaining of this paper is organized as fol-lows. In the next section Quality, Coverage, Rel-evance and Novelty measures are presented; we explain how they were calculated and combined to generate a final summary of all answers to a question. Experiments are illustrated in Section 3, where we give evidence of the effectiveness of our method. We list related work in Section 5, dis-cuss possible alternative approaches in Section 4 and provide our conclusions in Section 6. 2.1 Quality as a ranking problem Quality assessing of information available on So-cial Media had been studied before mainly as a binary classification problem with the objective of detecting low quality content. We, on the other hand, treated it as a ranking problem and made use of quality estimates with the novel intent of successfully combining information from sources with different levels of trustfulness and writing ability. This is crucial when manipulating UGC, which is known to be subject to particularly great variance in credibility (Jeon et al., 2006; Wang et al., 2009b; Suryanto et al., 2009) and may be poorly written.

An answer a was given along with information about the user u that authored it, the set TA q (To-tal Answers) of all answers to the same question q and the set TA u of all answers by the same user. Making use of results available in the literature (Agichtein et al., 2008) 3 , we designed a Quality feature space to capture the following syntactic, behavioral and statistical properties:  X   X  , length of answer a  X   X  , number of non-stopwords in a with a cor- X  $ , points awarded to user u according to the  X  % , ratio of best answers posted by user u The features mentioned above determined a space  X  ; An answer a , in such feature space, assumed the vectorial form: Following the intuition that chosen best answers ( a ? ) carry high quality information, we used su-pervised ML techniques to predict the probability of a to have been selected as a best answer a ? . We trained a Linear Regression classifier to learn the weight vector W = ( w 1 , w 2 , w 3 , w 4 ) that would combine the above feature. Supervision was given in the form of a training set Tr Q of labeled pairs defined as: isbest a was a boolean label indicating whether a was an a ? answer; the training set size was de-termined experimentally and will be discussed in Section 3.2. Although the value of isbest a was known for all answers, the output of the classifier offered us a real-valued prediction that could be interpreted as a quality score Q ( X  a ) : The Quality measure for an answer a was approx-imated by the probability of such answer to be a best answer ( isbest a = 1 ) with respect to its au-thor u and the sets TA u and TA q . It was calcu-lated as dot product between the learned weight vector W and the feature vector for answer  X  a .
Our decision to proceed in an unsupervised di-rection came from the consideration that any use of external human annotation would have made it impracticable to build an actual system on larger scale. An alternative, completely unsupervised ap-proach to quality detection that has not undergone experimental analysis is discussed in Section 4. 2.2 Bag-of-BEs and semantic overlap The properties that remain to be discussed, namely Coverage, Relevance and Novelty, are measures of semantic overlap between concepts; a concept is the smallest unit of meaning in a portion of written text. To represent sentences and answers we adopted an alternative approach to classical n-grams that could be defined bag-of-BEs. a BE is  X  X  head | modifier | relation triple representation of a document developed at ISI X  (Zhou et al., 2006). BEs are a strong theoretical instrument to tackle the ambiguity inherent in natural language that find successful practical applications in real-world query-based summarization systems. Dif-ferent from n-grams, they are variant in length and depend on parsing techniques, named entity de-tection, part-of-speech tagging and resolution of syntactic forms such as hyponyms, pronouns, per-tainyms, abbreviation and synonyms. To each BE is associated a class of semantically equivalent BEs as result of what is called a transformation of the original BE; the mentioned class uniquely defines the concept. What seemed to us most re-markable is that this makes the concept context-dependent. A sentence is defined as a set of con-cepts and an answer is defined as the union be-tween the sets that represent its sentences.
The rest of this section gives formal definition of our model of concept representation and seman-tic overlap. From a set-theoretical point of view, each concepts c was uniquely associated with a set E c = { c 1 ,c 2 ...c m } such that: In our model, the  X   X   X  relation indicated syntac-tic equivalence (exact pattern matching), while the  X   X  L  X  relation represented semantic equivalence under the convention of some language L (two concepts having the same meaning). E c was de-fined as the set of semantically equivalent concepts to c , called its equivalence class; each concept c i in E c carried the same meaning (  X  L ) of concept c without being syntactically identical (  X  ); further-more, no two concepts i and j in the same equiva-lence class were identical. Given two concepts c and k : We defined semantic overlap as occurring between c and k if they were syntactically identical or if their equivalence classes E c and E k had at least one element in common. In fact, given the above definition of equivalence class and the transitivity of  X   X   X  relation, we have that if the equivalence classes of two concepts are not disjoint, then they must bare the same meaning under the convention of some language L ; in that case we said that c semantically overlapped k . It is worth noting that relation  X  ./  X  is symmetric, transitive and reflexive; as a consequence all concepts with the same mean-ing are part of a same equivalence class. BE and equivalence class extraction were performed by modifying the behavior of the BEwT-E-0.3 frame-work 4 . The framework itself is responsible for the operative definition of the  X   X  L  X  relation and the creation of the equivalence classes. 2.3 Coverage via concept importance In the scenario we proposed, the user X  X  informa-tion need is addressed in the form of a unique, summarized answer; information that is left out of the final summary will simply be unavailable. This raises the concern of completeness: besides ensur-ing that the information provided could be trusted, we wanted to guarantee that the posed question was being answered thoroughly. We adopted the general definition of Coverage as the portion of relevant information about a certain subject that is contained in a document (Swaminathan et al., 2009). We proceeded by treating each answer to a question q as a separate document and we retrieved through the Yahoo! Answers API a set TK q (Total Knowledge) of 50 answers 5 to ques-tions similar to q : the knowledge space of TK q was chosen to approximate the entire knowledge space related to the queried question q . We cal-culated Coverage as a function of the portion of answers in TK q that presented semantic overlap with a . The Coverage measure for an answer a was cal-culated as the sum of term frequency tf ( c i ,a ) for concepts in the answer itself, weighted by a con-cept importance function,  X  ( c i ) , for concepts in the total knowledge space TK q .  X  ( c ) was defined as follows: where TK q,c = { d  X  TK q :  X  k  X  d, k ./ c } The function  X  ( c ) of concept c was calculated as a function of the cardinality of set TK q and set TK q,c , which was the subset of all those answers d that contained at least one concept k which pre-sented semantical overlap with c itself. A similar idea of knowledge space coverage is addressed by Swaminathan et al. (2009), from which formulas (2) and (3) were derived.

A sensible alternative would be to estimate Cov-erage at the sentence level. 2.4 Relevance and Novelty via ./ relation To this point, we have addressed matters of trust-fulness and completeness. Another widely shared concern for Information Retrieval systems is Rel-evance to the query. We calculated relevance by computing the semantic overlap between concepts in the answers and the question. Intuitively, we re-ward concepts that express meaning that could be found in the question to be answered.
 where q c = { k  X  q : k ./ c } The Relevance measure R ( c,q ) of a concept c with respect to a question q was calculated as the ratio of the cardinality of set q c (containing all concepts in q that semantically overlapped with c ) normalized by the total number of concepts in q .
Another property we found desirable, was to minimize redundancy of information in the final summary. Since all elements in TA q (the set of all answers to q ) would be used for the final sum-mary, we positively rewarded concepts that were expressing novel meanings.
 where TA q,c = { d  X  TA q :  X  k  X  d, k ./ c } The Novelty measure N ( c,q ) of a concept c with respect to a question q was calculated as the ratio of the cardinality of set TA q,c over the cardinality of set TA q ; TA q,c was the subset of all those an-swers d in TA q that contained at least one concept k which presented semantical overlap with c . 2.5 The concept scoring functions We have now determined how to calculate the scores for each property in formulas (1), (2), (4) and (5); under the assumption that the Quality and Coverage of a concept are the same of its answer, every concept c part of an answer a to some ques-tion q , could be assigned a score vector as follows: What we needed at this point was a function S of the above vector which would assign a higher score to concepts most worthy of being included in the final summary. Our intuition was that since Quality, Coverage, Novelty and Relevance were all virtues properties, S needed to be monoton-ically increasing with respect to all its dimen-sions. We designed two such functions. Func-tion (6), which multiplied the scores, was based on the probabilistic interpretation of each score as an independent event. Further empirical consid-erations, brought us to later introduce a logarith-mic component that would discourage inclusion of sentences shorter then a threshold t (a reasonable choice for this parameter is a value around 20). The score for concept c appearing in sentence s c was calculated as: A second approach that made use of human annotation to learn a vector of weights V = ( v 1 , v 2 , v 3 , v 4 ) that linearly combined the scores was investigated. Analogously to what had been done with scoring function (6), the  X  space was augmented with a dimension representing the length of the answer.
 In order to learn the weight vector V that would combine the above scores, we asked three human annotators to generate question-biased extractive summaries based on all answers available for a certain question. We trained a Linear Regression classifier with a set Tr S of labeled pairs defined as: include c was a boolean label that indicated whether s c , the sentence containing c , had been included in the human-generated summary; length ( s c ) indicated the length of sentence s c . Questions and relative answers for the generation of human summaries were taken from the  X  X iltered dataset X  described in Section 3.1.

The concept score for the same BE in two sep-arate answers is very likely to be different be-cause it belongs to answers with their own Quality and Coverage values: this only makes the scoring function context-dependent and does not interfere with the calculation the Coverage, Relevance and Novelty measures, which are based on information overlap and will regard two BEs with overlapping equivalence classes as being the same, regardless of their score being different. 2.6 Quality constrained summarization The previous sections showed how we quantita-tively determined which concepts were more wor-thy of becoming part of the final machine sum-mary M . The final step was to generate the sum-mary itself by automatically selecting sentences under a length constraint. Choosing this constraint carefully demonstrated to be of crucial importance during the experimental phase. We again opted for a metadata-driven approach and designed the length constraint as a function of the lengths of all answers to q ( TA q ) weighted by the respective Quality measures: The intuition was that the longer and the more trustworthy answers to a question were, the more space was reasonable to allocate for information in the final, machine summarized answer M .
M was generated so as to maximize the scores of the concepts it included. This was done under a maximum coverage model by solving the follow-ing Integer Linear Programming problem: maximize: X subject to: X In the above program, M is the set of selected sen-tences: M = { s j : y j = 1 ,  X  j } . The integer variables x i and y j were equals to one if the corre-sponding concept c i and sentence s j were included in M . Similarly occ ij was equal to one if concept c was contained in sentence s j . We maximized the sum of scores S ( c i ) (for S equals to S  X  or S  X  ) for each concept c i in the final summary M . We did so under the constraint that the total length of all sentences s j included in M must be less than the total expected length of the summary itself. In addition, we imposed a consistency constraint: if a concept c i was included in M , then at least one sentence s j that contained the concept must also be selected (constraint (10)). The described opti-mization problem was solved using lp solve 6 .
We conclude with an empirical side note: since solving the above can be computationally very de-manding for large number of concepts, we found performance-wise very fruitful to skim about one fourth of the concepts with lowest scores. 3.1 Datasets and filters The initial dataset was composed of 216,563 ques-tions and 1,982,006 answers written by 171,676 user in 100 categories from the Yahoo! Answers portal 7 . We will refer to this dataset as the  X  X n-filtered version X . The metadata described in sec-tion 2.1 was extracted and normalized; quality experiments (Section 3.2) were then conducted. The unfiltered version was later reduced to 89,814 question-answer pairs that showed statistical and linguistic properties which made them particularly adequate for our purpose. In particular, trivial, fac-toid and encyclopedia-answerable questions were removed by applying a series of patterns for the identification of complex questions. The work by Liu et al. (2008) indicates some categories of ques-tions that are particularly suitable for summariza-tion, but due to the lack of high-performing ques-tion classifiers we resorted to human-crafted ques-tion patterns. Some pattern examples are the fol-lowing:  X  { Why,What is the reason } [...]  X  How { to,do,does,did } [...]  X  How { is,are,were,was,will } [...]  X  How { could,can,would,should } [...] We also removed questions that showed statistical values outside of convenient ranges: the number of answers, length of the longest answer and length of the sum of all answers (both absolute and nor-malized) were taken in consideration. In particular we discarded questions with the following charac-teristics:  X  the longest answer was over 400 words  X  the sum of the length of all answers outside  X  the average length of answers was outside of At this point a second version of the dataset was created to evaluate the summarization perfor-mance under scoring function (6) and (7); it was generated by manually selecting questions that arouse subjective, human interest from the pre-vious 89,814 question-answer pairs. The dataset size was thus reduced to 358 answers to 100 ques-tions that were manually summarized (refer to Section 3.3). From now on we will refer to this second version of the dataset as the  X  X iltered ver-sion X . 3.2 Quality assessing In Section 2.1 we claimed to be able to identify high quality content. To demonstrate it, we con-ducted a set of experiments on the original unfil-tered dataset to establish whether the feature space  X  was powerful enough to capture the quality of answers; our specific objective was to estimate the amount of training examples needed to success-fully train a classifier for the quality assessing task. The Linear Regression 9 method was chosen to de-termine the probability Q ( X  a ) of a to be a best an-swer to q ; as explained in Section 2.1, those prob-abilities were interpreted as quality estimates. The evaluation of the classifier X  X  output was based on the observation that given the set of all answers TA q relative to q and the best answer a ? , a suc-cessfully trained classifier should be able to rank a ? ahead of all other answers to the same question. More precisely, we defined Precision as follows: |{ q  X  Tr Q :  X  a  X  TA q , Q ( X  a ? ) &gt; Q ( X  a ) }| where the numerator was the number of questions for which the classifier was able to correctly rank a ? by giving it the highest quality estimate in TA q and the denominator was the total number of ex-amples in the training set Tr Q . Figure 1 shows the precision values (Y-axis) in identifying best an-swers as the size of Tr Q increases (X-axis). The experiment started from a training set of size 100 and was repeated adding 300 examples at a time until precision started decreasing. With each in-crease in training set size, the experiment was re-peated ten times and average precision values were calculated. In all runs, training examples were picked randomly from the unfiltered dataset de-scribed in Section 3.1; for details on Tr Q see Sec-tion 2.1. A training set of 12,000 examples was chosen for the summarization experiments. 3.3 Evaluating answer summaries The objective of our work was to summarize an-swers from cQA portals. Two systems were de-signed: Table 1 shows the performances using function S  X  (see equation (7)), and function S  X  (see equation (6)). The chosen best answer a ? was used as a baseline. We calculated ROUGE-1 and ROUGE-2 scores 10 against human annotation on the filtered version of the dataset presented in Section 3.1. The filtered dataset consisted of 358 answers to 100 questions. For each questions q , three annotators were asked to produce an extrac-tive summary of the information contained in TA q by selecting sentences subject to a fixed length limit of 250 words. The annotation resulted in 300 summaries (larger-scale annotation is still ongo-ing). For the S  X  system, 200 of the 300 generated summaries were used for training and the remain-ing were used for testing (see the definition of Tr S Section 2.5). Cross-validation was conducted. For the S  X  system, which required no training, all of the 300 summaries were used as the test set.
S  X  outperformed the baseline in Recall (R) but not in Precision (P); nevertheless, the combined F-1 score (F) was sensibly higher (around 5 points percentile). On the other hand, our S  X  system showed very consistent improvements of an order of 10 to 15 points percentile over the baseline on all measures; we would like to draw attention on the fact that even if Precision scores are higher, it is on Recall scores that greater improvements were achieved. This, together with the results ob-tained by S  X  , suggest performances could benefit from the enforcement of a more stringent length constraint than the one proposed in (8). Further potential improvements on S  X  could be obtained by choosing a classifier able to learn a more ex-pressive underlying function.

In order to determine what influence the single measures had on the overall performance, we con-ducted a final experiment on the filtered dataset to evaluate (the S  X  scoring function was used). The evaluation was conducted in terms of F-1 scores of ROUGE-L, ROUGE-1 and ROUGE-2. First only Relevance was tested (R) and subsequently Qual-ity was added (RQ); then, in turn, Coverage (RQC) and Novelty (RQN); Finally the complete system taking all measures in consideration (RQNC). Re-sults are shown in Figure 2. In general perfor-mances increase smoothly with the exception of ROUGE-2 score, which seems to be particularly sensitive to Novelty: no matter what combination of measures is used (R alone, RQ, RQC), changes in ROUGE-2 score remain under one point per-centile. Once Novelty is added, performances rise abruptly to the system X  X  highest. A summary ex-ample, along with the question and the best an-swer, is presented in Table 2. We conclude by discussing a few alternatives to the approaches we presented. The length M con-straint for the final summary (Section 2.6), could have been determined by making use of external knowledge such as TK q : since TK q represents the total knowledge available about q , a coverage estimate of the final answers against it would have been ideal. Unfortunately the lack of metadata about those answers prevented us from proceeding in that direction. This consideration suggests the idea of building TK q using similar answers in the dataset itself, for which metadata is indeed avail-able. Furthermore, similar questions in the dataset could have been used to augment the set of an-swers used to generate the final summary with an-swers coming from similar questions. Wang et al. (2009a) presents a method to retrieve similar ques-tions that could be worth taking in consideration for the task. We suggest that the retrieval method could be made Quality-aware. A Quality feature space for questions is presented by Agichtein et al. (2008) and could be used to rank the quality of questions in a way similar to how we ranked the quality of answers.

The Quality assessing component itself could be built as a module that can be adjusted to the kind of Social Media in use; the creation of cus-tomized Quality feature spaces would make it possible to handle different sources of UGC (fo-rums, collaborative authoring websites such as Wikipedia, blogs etc.). A great obstacle is the lack of systematically available high quality training examples: a tentative solution could be to make use of clustering algorithms in the feature space; high and low quality clusters could then be labeled by comparison with examples of virtuous behav-ior (such as Wikipedia X  X  Featured Articles). The quality of a document could then be estimated as a function of distance from the centroid of the clus-ter it belongs to. More careful estimates could take the position of other clusters and the concentration of nearby documents in consideration.
 Finally, in addition to the chosen best answer, a DUC-styled query-focused multi-document sum-mary could be used as a baseline against which the performances of the system can be checked. A work with a similar objective to our own is that of Liu et al. (2008), where standard multi-document summarization techniques are em-ployed along with taxonomic information about questions. Our approach differs in two fundamen-tal aspects: it took in consideration the peculiari-ties of the data in input by exploiting the nature of UGC and available metadata; additionally, along with relevance, we addressed challenges that are specific to Question Answering, such as Cover-age and Novelty. For an investigation of Coverage in the context of Search Engines, refer to Swami-nathan et al. (2009).

At the core of our work laid information trust-fulness, summarization techniques and alternative concept representation. A general approach to the broad problem of evaluating information cred-ibility on the Internet is presented by Akamine et al. (2009) with a system that makes use of semantic-aware Natural Language Preprocessing techniques. With analogous goals, but a focus on UGC, are the papers of Stvilia et al. (2005), Mcguinness et al. (2006), Hu et al. (2007) and Zeng et al. (2006), which present a thorough inves-tigation of Quality and trust in Wikipedia. In the cQA domain, Jeon et al. (2006) presents a frame-work to use Maximum Entropy for answer quality estimation through non-textual features; with the same purpose, more recent methods based on the expertise of answerers are proposed by Suryanto et al. (2009), while Wang et al. (2009b) introduce the idea of ranking answers taking their relation to questions in consideration. The paper that we re-gard as most authoritative on the matter is the work by Agichtein et al. (2008) which inspired us in the design of the Quality feature space presented in Section 2.1.

Our approach merged trustfulness estimation and summarization techniques: we adapted the au-tomatic concept-level model presented by Gillick and Favre (2009) to our needs; related work in multi-document summarization has been carried out by Wang et al. (2008) and McDonald (2007). A relevant selection of approaches that instead make use of ML techniques for query-biased sum-marization is the following: Wang et al. (2007), Metzler and Kanungo (2008) and Li et al. (2009). An aspect worth investigating is the use of par-tially labeled or totally unlabeled data for sum-marization in the work of Wong et al. (2008) and Amini and Gallinari (2002).
 Our final contribution was to explore the use of Basic Elements document representation instead of the widely used n-gram paradigm: in this re-gard, we suggest the paper by Zhou et al. (2006). We presented a framework to generate trust-ful, complete, relevant and succinct answers to questions posted by users in cQA portals. We made use of intrinsically available metadata along with concept-level multi-document summariza-tion techniques. Furthermore, we proposed an original use for the BE representation of concepts and tested two concept-scoring functions to com-bine Quality, Coverage, Relevance and Novelty measures. Evaluation results on human annotated data showed that our summarized answers consti-tute a solid complement to best answers voted by the cQA users.

We are in the process of building a system that performs on-line summarization of large sets of questions and answers from Yahoo! Answers. Larger-scale evaluation of results against other state-of-the-art summarization systems is ongoing. This work was partly supported by the Chi-nese Natural Science Foundation under grant No. 60803075, and was carried out with the aid of a grant from the International Development Re-search Center, Ottawa, Canada. We would like to thank Prof. Xiaoyan Zhu, Mr. Yang Tang and Mr. Guillermo Rodriguez for the valuable discussions and comments and for their support. We would also like to thank Dr. Chin-yew Lin and Dr. Eu-gene Agichtein from Emory University for sharing their data.

