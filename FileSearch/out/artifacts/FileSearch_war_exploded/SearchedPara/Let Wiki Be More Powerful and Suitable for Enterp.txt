 Intelpedia, which has grown to tens of thousands of users and over 8000 pages in the six months since its launch [2]. 
Wiki provides a very collaborative, effi cient and concise web environment to en-terprises. However, with the rapid growth of pages in wikis, lots of useful information may be hidden in them and difficult to be grasped. If a wiki has some functional mod-and suitable for enterprises. In this paper, comparing to other ways, we present a use of external program to meet this need. The external program can help wiki have some computational capabilities, monitoring mechanism and better collaboration by distill-ing, processing and centralizing the wiki information. possible scenarios which are suitable for using external program. Section 4, 5 describe implementation and conclusion. We think wiki should have some more functional modules which are computational capabilities, monitoring mechanism and better collaboration. These works are origi-nally done by artificial way which waste a lot of work and time and may have some blind spot of management. If we do something to meet this need, no matter they are internal or external, will make the wiki more powerful and suitable for enterprise and will benefit the enterprises a lot. 2.1 How to Do? and edited using a common web browser. It is usually implemented as an application and logical layer. The content is stored in a file system, and changes to the content are stored in a relational database management system. one is obviously better than the other two. Method 1 is to rewrite the wiki source and rebuild the wiki. way, but also has some problems. Firstly, it demands the developers to go down to the wiki's source to understand its architecture and relevant functions before modifying. The management system to an integrated multi-functional content management system? It may disobey the wiki's original intention. Method 2 is to write background programs which run at server side. 
This method aims to use programs to extract the needed information from file sys-tem and database of the wiki and do some further work. We think it is possible but not lots of changes saved in the database. Method 3 is to write external programs which run at client side. 
We think this method is obviously the best and most lightweight way to deal with analyzed. Secondly, external program fetches the information directly from the client Thirdly, it is impossible to affect running of the wiki server and hardly do harm to the system. Fourthly, the people who use the program have the same permission rights as HTML pattern differences between the two wikis. At last, it maintains wiki's feature of being a content management system and divides the function more clearly. 
So we apply this method for the following work. 2.2 What to Do? External programs X  critical steps are distilling, processing and centralizing. wiki to benefit enterprises. As we described before, computational capabilities, moni-means we could distill the data of which needs automatic calculation, of which helps the different levels' managers do the supervision well, of which can go a step further to coordinate the time and event better. ess. It includes finding the target wiki pages, fetching the HTML code of these pages, and removing the useless information such as HTML tags and some junk information. the Processing step. In this Section, we will provide three possible scenarios can be well done by external program: data calculation, daily reports checking and activity coordination which stand for computational capabilities, monitoring mechanism and better collaboration mentioned before. 3.1 Data Calculation: Let Wiki Have More Computational Capabilities the table on the web pages (including wiki pages) is hard to be converted into an Of-fice Excel sheet, it is troublesome to calculate them by hand or by copying-and-pasting for a lot of times. If we have an external program, we can extract the numbers from the wiki and process them by the way we want. 
There is much data written in the wiki pages needed to be calculated, and because its fixed format, it X  X  easy for external programs to analyze. This case takes place es-built by wiki technology. 3.2 Daily Reports Checking: Let Wiki Have Monitoring Mechanism Some manager in enterprise always asks their employees to write something about their work on their own wiki page daily. It is too much work for the manager or his ployees' performance. The work can be well done by an external program. be accessed by using http://wiki'sURL/${name}/DailyReport. So by using a list of the one file by day which shows as Fig. 2. programs after making rules to employees on how to write wiki pages with a pre-defined structure. It is without question a powerful enhancement on management. 3.3 Activity Coordination: Let Wiki Have Better Collaboration Wiki is known as a collaborative tool, but we think it can be more collaborative with the help of external programs. 
We take activity coordination as an example. Arranging meetings, especially tele-the more difficulty to coordinate everyone's time. With wiki, the manager can estab-fill the meeting schedule at least twice. 
Considering some companies may ask employees to maintain a personal schedule with the same pattern, as Fig. 3 shows, it is effective to use external program to proc-ess all the personal schedule of the people who are on the meeting list. There will be a result calculated by the program telling the proper time to hold the meeting. The three cases mentioned in Section 3 have already implemented in the Wiki of Web works well. The wiki is built with MoinMoin [3]. We implement the external program idea with a web application, as Fig. 4 shows. extract the useful data of the target page X  X  htmlscript. Based on the data we distill, we can do some further work as needed. Though the method is simple, it can let the pro-gram be really strong and can help the enterprise a lot. prises. If a wiki has some functional modules to catch and take a good use of the in-implement it. It can empirically help wiki have some computational capabilities, monitoring mechanism and better collaboration by distilling, processing and centraliz-ing the wiki information. This work is supported by the Key Technologies R&amp;D Program of China under Grant No. 2006BAH02A12, and the National High-tech R&amp;D Program of China under Grant No.2006AA010101. 
