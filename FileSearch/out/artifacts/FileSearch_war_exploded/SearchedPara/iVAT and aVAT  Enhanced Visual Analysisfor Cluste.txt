 A general question in the pattern recognition and data mining community is how to organize observed data into meaningful structures or taxonomies. As such, cluster analysis aims at grouping objects of a similar kind into their respective categories. Given a data set O comprising n objects { o 1 ,o 2 ,  X  X  X  ,o n } ,(crisp) clustering partitions the data into c groups C 1 ,C 2 ,  X  X  X  ,C c ,sothat C i  X  C j =  X  , if i = j and C 1  X  C 2  X  X  X  X  X  C c = O . There have been a large number of clustering algorithms reported in the recen t literature [1]. In g eneral, clustering of unlabeled data poses three major problems: (1) assessing cluster tendency, i.e. , how many groups to seek or what is the value of c ? (2) partitioning the data into c groups; and (3) validating the c clusters discovered. Given a pairwise dissimilarity matrix D  X  X  n  X  n of O , this paper addresses the problem of determining the number of clusters prior to clustering.

Most clustering algorithms require the number of clusters c as an input, so the quality of the resulting clusters is largely dependent on the estimation of c .Vari-ous attempts have been made to estimate c . However, most existing methods are post-clustering measures of cluster validity [2,1,3,4,5,6,7]. In contrast, tendency assessment attempts to estimate c before clustering occurs. Visual methods for cluster tendency assessment [8,9,10,11,12, 13,14,15] generally represent pairwise dissimilarity information about a set of n objectsasan n  X  n image, where the objects are reordered so that the resulting image is able to highlight potential cluster structure in the data. A  X  X seful  X  reordered dissim ilarity image (RDI) highlights potential clusters as a set of  X  X ark blocks X  along the diagonal of the image, and can be viewed as a visual aid to tendency assessment.

Our work is built upon one method for generating reordered dissimilarity images, namely VAT (V isual A ssessment of cluster T endency) of Bezdek and Hathaway [8]. Several algorithms extend VAT for related assessment problems. For example, bigVAT [13] and sVAT [11] offer different ways to approximate the VAT reordered dissimilarity image for very large data sets. CCE [16] and DBE [17] use different schemes to automatically estimate the number of clusters in the VAT images. In addition, Havens et al . [18] perform data clustering in or-dered dissimilarity images, and coVAT [10] extends the VAT idea to rectangular dissimilarity data. Naturally, the performance of these VAT-based methods is greatly dependent of the quality of the VAT images. However, while VAT has been widely used for cluster analysis, it is usually only effective at highlighting cluster tendency in data sets that contain compact well-separated clusters. Many practical applications involve data sets with highly irregular structure, which in-validate this assumption. In this paper, we propose an improved VAT (iVAT) approach to generating RDIs that combines VAT with a path-based distance transform. The resulting iVAT images can clearly show the number of clusters and their approximate sizes for data sets with highly complex cluster structures. We also propose a new strategy for automated determination of the number of clusters c from RDIs, by detecting and counting dark blocks along the main di-agonal of the image. Experimental results on both synthetic and real-world data sets validate our methods.

The remainder of the paper is organized as follows: Section 2 briefly reviews the VAT algorithm. Section 3 illustrates our iVAT algorithm. Section 4 presents our strategy for automatically determining the number of clusters c .Theexperi-mental results on both synthetic and real-world data sets are given and analyzed in Section 5, prior to conclusion in Section 6. Let O = { o 1 ,o 2 ,  X  X  X  ,o n } denote n objects in the data and D a pairwise matrix of dissimilarities between ob jects, each element of which d ij = d ( o i ,o j )isthe dissimilarity between objects o i and o j , and generally, satisfies 1  X  d ij  X  0; d ij = d be the permutation matrix with p ij =1if j =  X  ( i ) and 0 otherwise, then the matrix  X  D for the reordered list is a similarity transform of D by P , i.e. , The reordering idea is to find P so that  X  D is as close to a block diagonal form as possible. The VAT algorithm [8] reorders the row and columns of D with a modified version of Prim X  X  minimal spanning tree algorithm, and displays a reordered dissimilarity matrix  X  D as a gray-scale image. If an object is a member of a cluster, then it should be part of a sub-matrix with low dissimilarity values, which appears as one of the dark blocks along the diagonal of the VAT image I(  X  D ), each of which corresponds to one potential cluster.

Figure 1(a) is a scatter plot of 2000 data points in R 2 . The 5 visually apparent clusters are reflected by the 5 distinct dark blocks along the main diagonal in Figure 1(c), which is the VAT image of the data. Given the image of D in the original input order in Figure 1(b), reordering is necessary to reveal the under-lying cluster structure of the data. VAT reordering produces neither a partition nor a hierarchy of clusters. It merely reorders the data to (possibly) reveal its hidden structure, which can be viewed as an illustrative data visualization for estimating c . Sometimes, hierarchical structu re can be detected by the presence of diagonal sub-blocks within larger diagonal blocks. At a glance, a viewer can estimate the number of clusters c from a VAT image by counting the number of dark blocks along the diagonal if these dark blocks possess visual clarity. However, this is n ot always possible. Note that a dark block appears only when a compact group exists in the data. For complex-shaped data sets where the boundaries between clusters become less distinct due to either significant overlap or irregular geometries, the resulting VAT images may fail to produce dark blocks even when cluster structure is clearly present. See Figures 4(b) and 5(a) for examples. Different viewers may deduce different numbers of clusters from such poor-quality images, or worse, not be able to estimate c at all. This raises the question of whether we can transform D intoanewform D so that the VAT image of D is clearer and more informative about the cluster structure.
In [12], SpecVAT combines VAT with graph embedding [19,20] to solve this problem. SpecVAT first embeds the data into a k -dimensional subspace spanned by the eigenvectors of the normalized Laplacian matrix and then re-computes a new pairwise dissimilarity matrix in the embedding subspace as the input of the VAT algorithm. However, this method depends on two main parameters, one of which is r for the r -th nearest neighbor based local scale computation when constructing the affinity matrix from D [21] (for deriving the Laplacian matrix), and the other is k , the number of eigenvectors used. In particular, k largely depends on the number of clusters c . Figure 2 gives an example of SpecVAT images with respect to different values of k .Since c is unknown, a range of k values need to be used for generating a series of SpecVAT images to find the  X  X est X  SpecVAT image that is truly informative of the real structure in the data ( e.g. , k = 3 in this case). In contrast, this work adopts a parameter-free method (called iVAT) by combining VAT with a path-based distance transform.

The path-based dissimilarity measure was introduced in [22]. The intuitive idea is that if two objects o i ,o j are very far from each other (reflected by a large distance value d ij ), but there is a path connecting them consisting of other objects such that the distances between any two successive objects are small, then d ij should be adjusted to a smaller val ue to reflect this connection. The adjustment of d ij reflects the idea that no matter how far the distance between two objects may be, they should be considered as coming from one cluster if they are connected by a set of successive objects forming dense regions. This reflects the characteristic of elongated clusters.

Let us treat D as a fully connected graph G , where each vertex corresponds to an object and the edge weight between vertices i and j is the distance d ij . Suppose that P ij is the set of all possible paths from o i to o j ,thenforeach path p  X  P ij , the effective dissimilarity between objects o i and o j along p is the maximum of all edge weights belonging to this path. The path-based distance d ij is defined as where p [ h ] denotes the object at the h -thpositioninpath p and | p | denotes the length of path p . After obtaining D =[ d ij ], we reorder it using the VAT algorithm to obtain the iVAT image (see examples in Figures 4(c) and 5(b)). The iVAT images are almost always clearer and more informative than the original VAT images in revealing the data structure. A viewer can simply estimate the number of clusters c ( i.e. ,countthenumber of dark blocks along the diagonal of a RDI image if these dark blocks possess visual clarity). However, as the boundaries between different clusters become less distinct, the RDI image will degrade considerably with confusing bound-aries between potential dark blocks. A ccordingly, different viewers may deduce different numbers of clusters from such poor-quality images. Can we automati-cally determine the number of clusters c , as suggested by I(  X  D ), in an objective manner, without viewing the visual display ? To answer this interesting question, two methods have been developed, i.e. , DBE [17] and CCE [16] (see the algo-rithm details and comparison in Section 5.3). Here we propose an alternative method, called aVAT, using some image processing techniques. The process of aVAT is illustrated in Figure 3. The individual steps are all well known in the field of image processing, so we do not describe their underlying theories.
Since information about possible cluster structure in the data is embodied in the square dark blocks along the diagonal of a RDI, we propose to detect and count them using shape-based Chamfer matching [23]. As a preprocessing step, the RDI is firstly binarized to extract regions of interest (Figure 3(d)). Otsu X  X  method [24] is used to automatically choose a global threshold. To make within-cluster distances smaller and be tween-cluster distances larger ( i.e. ,increasing contrast) to obtain a more reliable threshold, we transform the image intensities using a  X  X onotonic X  function where t xy denotes the intensity value of the image pixel on the location ( x, y ), and  X  is empirically set as the mean value of all pixel intensities.
Chamfer matching was first proposed by Barrow et al . [25]. Assume that two The symmetric chamfer distance can be obtained by adding d cham ( V , U ). The chamfer distance between two shapes can be efficiently computed using a dis-tance transform (DT, Figure 3(f)), which takes a binary image as input, and assigns to each pixel in the image the distance to its nearest feature. We use Canny edges as image feature points (Figure 3(e)) and the Euclidean distance for DT, and the model points are the projected contours of a 2D (rigid) square template. The distance between the template and the edge map can then be computed as the mean of the DT values at the template point coordinates.
In general, matching consists of translating, rotating and scaling the template shape at various locations of the distance image. Fortunately, in the RDI, we just need to search for squares along the diagonal axis and scale the template to different sizes to adapt to various cluster sizes. There is no need for template rotation, because there are no orientation changes in VAT RDIs. This greatly reduces the complexity of common shape detection using Chamfer matching. The exact matching cost is ideally 0, but in practice the edges in an image are slightly displaced from their ideal locations. Thus in our experiments, when the matching cost lies below a certain threshold  X  , the target shape is considered to have been detected (Figure 3(g)). In order to evaluate our methods, we have carried out a number of experiments on 6 artificially generated data sets, as well as 6 real-world data sets. Unless oth-erwise mentioned, in the following experiments the (Euclidean) distance matrix D was computed in the attribute space (if the object vectorial representation is available). All experiments were implemented in a Matlab 7.2 environment on a PC with an Intel 2.4GHz CPU and 2GB memory running Windows XP. 5.1 Test Datasets Six synthetic data sets were used in our experiments, whose scatter plots are shown in Figure 4(a). These data sets involve irregular data structures, in which an obvious cluster centroid f or each group is not necessa rily available. Six real-world data sets were also considered to evaluate our algorithms, 3 of which were taken from the UCI Machine Learning Repository, i.e., Iris, Vote and Multiple Features. The Face data set [26] contains 1755 images of 3 individuals, each of which was down-sampled to 30  X  40 pixels. The Gene data set [27] is a 194  X  194 matrix consisting of pairwise dissimilarities of a set of gene products from 3 protein families. The Iris data set contains 3 types of iris plants, 50 instances each. The Vote data set consists of 435 vote records (267 democrats and 168 republicans). Votes were numerically encoded as 0.5 for  X  X ea X , -0.5 for  X  X ay X  and 0 for  X  X nknown disposition X . The Action data set [28] is an 198  X  198 pairwise dissimilarity matrix derived from 198 human action clips. The Multiple-Features (MF) data set consists of binary image features of 10 handwritten numerals, 200 patterns per class. The chara cteristics of these synth etic and real data sets are summarized in Table 1. 5.2 Results and Analysis For each of the data sets, we first applied the VAT algorithm. The VAT im-ages are shown in Figure 4(b) for synthetic data and Figure 5(a) for real data, respectively. It can be seen that the clu ster structure of the data in the VAT images is not necessarily clea rly highlighted, especially for complex-shaped data. Accordingly, viewers have difficulties in giving a consistent result about the num-ber of clusters, and different viewe rs may deduce different estimates of c .Next we carried out our iVAT algorithm for each of the data sets used. The resulting iVAT images are shown in Figure 4(c) for synthetic data and Figure 5(b) for real data, respectively. In cont rast to the original VAT images, the iVAT images have generally clearer displays in terms of block structure, thus better highlighting the hidden cluster structure.

Table 1 summarizes the number of clust ers determined from iVAT images automatically, along with the results estimated from the VAT and iVAT images using manual inspection by the authors for comparison. From Table 1, we can see that 1. The results estimated from the iVAT im ages by manual inspection are clearly 2. The results of cluster number estimation from the iVAT images for all syn-3. For real-world data sets, some estimates deviate slightly from the number of Overall, these results highlig ht the benefits of converting D to D by the path-based distance transform for obtaining a good estimation of c (whether auto-matically or manually). We would like to note several points: 1. Though some estimates are imperfect for the real data, the aVAT algorithm 2. We could use a  X  X quare size X  threshol d to filter some detected very  X  X mall X  3. As a side product, for  X  X erfect X  iVAT images (such as those of the 6 synthetic 5.3 Algorithm Comparison We compared our aVAT algorithm with CCE [16] and DBE [17] in terms of es-timating the number of clusters. Note that we did not compare aVAT to index-based methods for post-clustering assess ment of cluster validity, as our interest is in estimating the number of clusters before clustering. The major steps for CCE are summarized as follows: 1) Threshold the VAT image with Otsu X  X  al-gorithm; 2) Apply the FFT to the segmented VAT and a correlation filter of size s and multiply the transformed image with the complex conjugate of the transformed filter; 3) Compute the inverse FFT for the filtered image; 4) Take the q -th off-diagonal pixel values of the back-transformed image and compute its histogram; and 5) Cut the histogram at a horizontal line y = b , and count the number of spikes. The major steps of DBE are summarized as follows: 1) Perform intensity transform and segmentation of the VAT image, followed by directional morphological filtering with size of  X n ; 2) Apply a distance transform to the filtered image and project the pixel values onto the main diagonal axis to form a projection signal; 3) Smooth the projection signal by an average filter with a length of 2  X n , compute its first-order derivative, and then detect the number of major peaks by ignoring minor ones using a filter with size of 2  X n .
As suggested in [16,17], we used s = 20, q =1and b = 0 for CCE and  X  = 0 . 03 for DBE. We used both VAT and iVAT images to make our comparisons, and the results are summarized in Table 1, in which we used bold figures to show that the estimate is equal to the number of real physical classes c p and italic figures to show results that are relatively closer to c p . AAE and ARE represent average absolute error and av erage relative error between the number of estimated clusters and the number of rea l physical classes, respectively. From Table 1, it can be seen that: 1. For synthetic data sets, all of these three methods give correct results when 2. For real-world data sets plus the use of VAT images, DBE performs best, 3. Specifically, when using iVAT images, aVAT, CCE and DBE yield the same Overall, these three methods are compar able to each other and there is no clear winner (at least based on the results on these data sets used currently). However, we can see that the positions of peaks and valleys in the projection signal in DBE implicitly correspond to centers and ranges of sub-blocks (or clusters). It is hard to see a similar phenomena from the CCE histograms. In contrast, aVAT is better in this aspect because it explicitly shows the number of clusters, positions and ranges of each block (or clusters) within the image itself, in a more intuitive manner. This paper has presented a new visual technique for cluster tendency assess-ment. Our contributions include: 1) The VAT algorithm was enhanced by using a path-based distance transform. The iVAT algorithm can better reveal the hid-den cluster structure, especially for c omplex-shaped data sets. 2) Based on the iVAT image, the cluster structure in the data can be reliably estimated by vi-sual inspection. As well, the aVAT algorithm was proposed for automatically determining the number of clusters c . 3) We performed a series of primary and comparative experiments on 6 synthetic data sets and 6 real-world data sets, and our methods obtained encouraging results.

In addition to further performance evaluation on more data sets with various structures, future work will mainly focus on increasing the robustness of our algorithms, e.g. , exploring more sophisticated image thresholding methods [29] and robust path-based distance computation [30].

