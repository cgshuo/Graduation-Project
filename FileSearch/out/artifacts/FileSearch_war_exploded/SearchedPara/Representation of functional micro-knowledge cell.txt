 1. Introduction
Conceptual design lies at the very beginning of the whole design process and has been considered as the most important stage in the whole product development cycle. During the process of design, a lot of knowledge is evolved, which has long been adopted by designers, consciously or sub-consciously. The im-portance of this kind of knowledge usage among the engineers and designers has been widely recognized in knowledge-based engineering and has already been studied in many literatures. Szykman et al. (1999, 2001) proposed an approach of classification to present the knowledge. The National Institute of Standards and Technology (NIST) design repository project is aimed at developing a computational framework for creating design repositories (Szykman et al., 1998, 2001 ). This research proposes a generic model for product information which is depicted by a formalized function-flow representation scheme. The role of knowledge and the interoperability of the information model are emphasized.
On the other hand, because design can be considered as a process that maps from a specified requirement at the functional level into a set of attribute values of concrete things, and as functionality contains a lot of such knowledge, functional knowl-edge plays a crucial role in the conceptual design of engineering existing design to understand its functional structure in order to
Chandrasekaran et al., 1993). In order to understand and represent this kind of knowledge and the entity well, a designer often functional decomposition ( Pahl and Beitz, 1996). The function the knowledge representation for the design process.
Consequently, different approaches of functional knowledge representation have been widely studied. Stone and Wood (2000) proposed a function basis approach for product design. They developed a formalized function representation by using flows, functions, and taxonomies as well. Van Wie et al. (2005) defined an FBR model, for function-based representations, which can be used across various design methodologies and for a variety of design tasks throughout all stages of the design process.
However, in modern engineering design domain, knowledge modeling is often multidisciplinary. To date, approaches propos-ing a consistent language to represent knowledge for conceptual design still remains an interesting problem. Some researches adopted ontology in order to reveal the inherent mechanism of functions. Chandrasekaran and Josephson (2000) presented an analysis of the notion of function in engineering, and presented a representational framework for it. A simple ontology for repre-the ontology they had used for modeling the world was quite simple, the enriched ontology should be further discussed.
Kitamura proposed a more formal functional concept ontology and an approach by using micro-function to construct functional models of artifacts ( Kitamura and Mizoguchi, 1999, 2003 ;
Kitamura et al., 2002 ), with which, he solved the problem of functional understanding. Nevertheless, whether the represented knowledge cover the other knowledge becomes the problem in the process of knowledge representation. In order to reuse the knowledge in a consistent way, a unified particle size of knowl-edge representation separation into its constituent parts, called the resolution of knowledge representation, is needed.
Considerable effort is required to overcome the difficulties in understanding the intentions of designers, especially for knowl-edge acquisition automatically. To sum up, the following two vital factors is recognized, which we focus on in our research: 1. describing a knowledge representation model consistently and avoiding the knowledge representation to be restricted to some specific models. And the knowledge representation model can also be applied to multidiscipline. 2. the knowledge model should be unified in the same resolution of knowledge representation, which guarantees the model to be reusable and robust.
 The first factor is vital because different frameworks for conceptual design are used when people try to represent knowl-edge in different domains. Thus, we need fundamental concepts for capturing target entities from a functional viewpoint, namely, a widely proper framework is required for function decomposi-tion. In our research, we adopted the concept of functional basis (Stone and Wood, 2000 ) to construct a vocabulary of functional verbs and adopt functional ontology ( Kitamura and Mizoguchi, 1998) to integrate the functional knowledge cell.

Matrix-based product modeling methods represent the pro-duct architecture, shown as a matrix. Design (or dependency) structure matrix (DSM) is a popular modeling and analysis tool, especially for purposes of decomposition and integration. Pimmler and Eppinger (1994) used DSM to identify the architecture of of design process, and Sosa et al. (2003) used DSM to identify the decomposition of the projects into different teams. Dong and Whitney (2001) and Dong (2002) proposed a method to obtain a
DSM that is useful to forecast system interactions before the detailed design phase and to manage system design iterations. stages to predetermine cohesive modules and integrative ele-ments and to simulate domain architectures. The transformation matrix is very similar and is applied in the functional knowledge decomposition theory. By transformation matrix, the mapping relationship between the function layer and the structure layer is formed. This process provides a unified representation scheme for design knowledge modeling.

The second factor is also crucial because there are several functional concepts without clear definitions, which lead to diversified resolution of knowledge representation, so that the reusability of the knowledge model is jeopardized. To unify the resolution, we analyze the transformation matrix, which is similar to the Independence Axiom ( Suh, 2001 ). By decomposing functional knowledge to get an uncoupled or decoupled matrix, the functional micro-knowledge cell (FMKC) can thus be inte-grated. FMKC unify the resolution of knowledge representation, which is also the basis for design reuse and knowledge fusion in our further work.

During conceptual design process, a lot of knowledge is evolved. In order to represent that knowledge in a consistent way, which can facilitate the usage of knowledge in multi-discipline for conceptual design, the purpose of this work is to present an FMKC model that will serve as a foundation for an underlying knowledge framework to support the development of objectives of this work are as follows: 1. to define the structure of FMKC, including function layer and structure layer, the mapping process; 2. to define the function decomposition theory to form a FMKC, which unifies the representation resolution; and 3. to present examples on how to construct the FMKC.
In this article, we firstly provide an overview of the general framework of the functional knowledge representation model for conceptual design. In Section 2, we propose the process of our approach. We discuss the structure of FMKC in detail in Section 3, including the definition of FMKC, the construction of the function layer and the structure layer of FMKC, the ontology applied in
FMKC, and how to construct the mapping relations. Section 4 describes the function decomposition theory to obtain FMKC, a unified resolution of knowledge representation. We propose an example to demonstrate how to integrate the FMKC and doing some analyses of the approach in Section 5. Section 6 discusses issues arising out of our study. Furthermore, conclusion and looking forward are also included in this article. 2. The proposed approach 2.1. Modeling the function micro-knowledge cell (FMKC)
The aim of modeling the function micro-knowledge cell (FMKC) is to construct a knowledge representation model for conceptual design, which can be applied to multidiscipline. The
FMKC ensures the knowledge model is unified in the same resolution of knowledge representation, which guarantees the model is reusable and robust.

We adapt the concept to case-based reasoning (CBR) to model and use FMKC. Before applying the FMKC to the conceptual design, it is necessary to form a knowledge base by studying the existing cases. Fig. 1 shows our approach for modeling function micro-knowledge cell (FMKC). This process can be divided into three function layer analysis stage, and (3) FMKC integrating stage. structure layer in the FMKC model. Studying the work presented earlier, a common perception is needed to represent function, behavior, and structure ( Umeda et al., 1990 ; Chandrasekaran and Josephson, 2000 ; Brown, 2003 ). Gero and Kannengiesser (2004) the more formal methods of dealing with the mappings between ontology ( Kitamura and Mizoguchi, 1998). If we disregard the mapping scheme, the primary significance of functionality is its functional models is to facilitate the freedom in reasoning about domain ( Pahl and Wallace, 2002).

Accordingly, we simplify the FBS model and adopt the concept of functional ontology ( Kitamura et al., 2002 ) to construct FMKC ontology, for the sake of expatiating the function knowledge to construct the function layer. The function layer of FMKC is constructed by connecting input and output flows with a transitive verb to represent the function knowledge, which represents the teleology of the object and represents the attributes exchanges as well. In other words, the simplified model synthesizes behavior into function. Unlike the FBS model, the modeling of FMKC is by studying the physical domain to obtain the knowledge of the teleology. And, in conceptual design process, by searching the function knowledge domain, the feasible physical solutions can be thus retrieved.

A transformation matrix is applied to construct the mapping relationship between the function layer and the structure layer. unified representation scheme is the aim of our approach.
Stage 2 is the most important stage for this process. By analyzing the structure of the transformation matrix, we under-stand whether the function decomposition has ended. If the transformation matrix is uncoupled or decoupled, it signals the end of the decomposition process. Those obtained functions remain to form the function layer of the FMKC. If the transforma-tion matrix is coupled, the function needs to be further decom-posed. Go back to Stage 1, and the mapping relationship between the function layer and the structure layer is reconstructed. And move forward to Stage 2 to reanalyze the transformation matrix to decide whether the decomposition process ends or not, till all the lowest levels of functions are obtained. The functional knowledge decomposition theory will be discussed in Section 4.
In stage 3, the elements of the str ucture layer and the function integrate FMKCs. These FMKCs are the smallest scale of knowledge in the functional knowledge representation scheme, which means 2.2. The usage of FMKC
Fig. 2 shows the usage of FMKC process cycle for conceptual design. Those integrated FMKCs are stored into a FMKC library, which is like a database to reposite those FMKCs. When required function is proposed, a corresponding design solution (structure) is needed. By searching the FMKC library, several feasible results be applied in the system that is intended to design, the structure fused to a new one, which can also be applied in the design system to achieve the goal. The newly formed function can be retained into the FMKC library.

The usage of FMKC process is dynamic and the FMKC library is constantly extended. With this concept, the usage of FMKC is also a process of modeling new ones. The FMKC has several advantages, such as it is structural, and the representation scale is unified. Thus the knowledge representation model with FMKC is robust from the angle of function.

The knowledge representation process can be used in every process when design knowledge is involved. The aim of FMKC design. Because conceptual design involves different kinds of knowledge, which is not easy to arrange and use, we apply knowledge representation to provide the designers guides or hints when designing.

The FMKCs are those functional knowledge cells (FKCs) that remain in the lowest abstraction level of the knowledge representation by decomposition process, which guarantee the consistent resolution of the knowledge representation. FMKC will be discussed in detail in the following section. 3. The structure of functional micro-knowledge cell (FMKC)
This section overviews the structure of FMKC and the framework as shown in Fig. 3 . The goal of developing the FMKC model is to establish the information of knowledge representation relevant to
FMKC and the relationship among them. There are three main parts ontology, which integrates both layers into a complete FMKC. 3.1. The definition of FMKC
In order to understand functional micro-knowledge cell (FMKC) well, we firstly propose the definition of functional knowledge cell (FKC).

FKC is formally represented by two main parts, namely, the considered as basic concepts in any design problem. It is the flow of these three concepts that concerns the designer. Matter is better represented as material. Information is more concretely expressed as a signal. Signals, actually, are either flows of material or energy, but receive a special classification because their function is to carry information ( Stone and Wood, 1997 ).
We adopt these three concepts that concerns designers as the input/output flow for our Function Block model. Thus the transitive verb ( T v ), which connects the input/output flows. In addition to the relations with sub-functions, all of them constitutes the function layer of a functional knowledge cell K
On the other hand, the structure layer is constituted by several attributes that can represent the structure knowledge, namely, the component feature, the relations with structures of sub-compo-nents, and the annotation, which details the structure knowledge of the component as the form of document. The function layer and the structure layer will be discussed in detail later.
Obviously, the functional knowledge cell (FKC) is integrated by the function domain knowledge and the structure domain knowledge as follows:
K  X  F i S i  X  1  X 
Eq. (1) states that functional knowledge cell can be integrated (indicated by ) by the function block and the structure block, where F i is the function layer and S i is the structure layer.
Furthermore, input/output flows and transitive verb can the function of a component. The function block ( F ) can be regarded as a black box, whose input flow and output flow are connected by a transitive verb:
F  X  I i Tv i O i  X  2  X 
O E [ M [ S .
 Functional micro-knowledge cell (FMKC) is a kind of FKC, but
By decomposing the function knowledge, FKC can be further decomposed into FMKC.

FMKCs can be integrated with each other to form an FMKC library. The FMKC library is represented as a functional knowl-edge set, which is a synthesis of these elements:
K  X f K 1 ; ... ; K n g X  3  X  where n is the total number of K  X  X . 3.2. Structure layer
The structure of an object is defined as its components and most objects can be described in terms of geometry, topology, and material. The model at the structure layer is objective without intention of designers.

Structure knowledge ( Fig. 3 ) is the most tangible concept with various approaches to partition structure into meaningful elements such as features ( Brown, 2003 ), which can be further depicted by  X  X  X ype X  X ,  X  X  X aterial X  X , and  X  X  X eometry X  X , in addition to widely used assemblies and components. It consists of the individual variables that characterize the system and their interactions; it is derived from the components of the physical device and their physical connections ( Kuipers, 1984 ).
Studying the device at first and then decomposing the whole device into several single components is like disassembling the mechanism into pieces. Each of those disassembled single components has structure knowledge, which is used to construct structure knowledge in FMKC is as follows: Structure knowledge: Name String Component_feature Type String Material String Geometry String Sub-component {[Structure]} Sub-component_of {[Structure]}
Annotation String 3.3. Function layer
The function of an object is defined as its teleology ( X  X  X hat the object is for X  X ), which is largely domain dependent. In the FMKC scheme, function knowledge is mainly represented by the function block including three components and two relationships (Fig. 4 ). The components are as follows: (1) an input flow ( I ), (2) a transitive verb ( T v ), and (3) an output flow ( O ).

The relationships connect: (1) the input and the transitive verb ( O  X  T v ) and (2) the transitive verb and the output ( Tv  X  O ).

The relationships between the three components of a process are usually unidirectional from the input flow to the transitive verb and from the transitive verb to the output flow. In other words, the transitive verb connects the input and output flows to represent the function concept.

The input and the output flows represent properties of other role of the transitive verb. For example, the process of  X  X  X ove X  X  input and output flows contain the same variables, such a process can be characterized as homogenous. In contrast, heterogeneous processes use disparate variables as input and output flows. For
The function layer involves function description on a micro-Block, while the macro-level structure deals with the overall block is described as follows:
According to the Stone and Wood (2000) functional basis, we adopt 8 functions as function classes ( Fig. 5 b), i.e., Branch,
Channel, Connect, Control Magnitude, Convert, Provide, Signal and Support, which can represent functional knowledge for conceptual design comprehensively. These 8 function classes are extended to basic functions, which are applied according to the usage of the input/output flow. This vocabulary consisted of 32 basic function verbs and primarily 85 synonyms for the basic functions. These are terms that commonly appear in function structures and aid in transforming a function structure. The 85 synonyms are not fixed. On the contrary, they are dynamic and can be expanded with the process of FMKC modeling, say, we can revise synonyms in the vocabulary library, and we can also construct their ontological relations.
 The transitive verb vocabulary used in the FMKC is given in
Table 1 . The first column lists the eight function classes. These classes are extended to basic functions in the second column. The third column lists primary synonyms for the basic functions.
These are terms that commonly appear in functional knowledge representation and aid in construction of a function layer.
As essential components of a function block is the input/output flow used in the FMKC. Stone and Wood (1997) has proposed a formal definition of flows. All design problems deal with these three flow classes, namely, material, signal, and energy.
Within each flow class, flows are broken into basic and sub-basic flows. We adopt these definitions to standardize the input/output flows of the ontology in FMKC. The flow vocabulary is shown in Table 2 .
 result of the function decomposition. Each of the Function Blocks can be fulfilled by a single, basic solution principle. Such a function block as a part of FMKC can be further used to integrate an FMKC. Complex product knowledge is usually decomposed in Transfer the view of Function Blocks. And several FMKCs can thus be integrated accordingly.

The brief structure of the function knowledge representation in FMKC is as follows: Function knowledge: Name String Function_block Transitive_verb String Input_flow {[Flow]} Output_flow {[Flow]} Sub-function {[Function]} Sub-function_of {[Function]}
A primary issue for the composition of elements in the function layer is the concept of resolutio n of knowledge representation. A single component has one or more functions, and with the rising together may have one or more functions. In order to retrieve all into lower-level functions can last until further decomposition no edge decomposition theory to decide whether the decomposition 1998, 2001 ), which will be detailed in Section 4. 3.4. Functional ontology
The functional ontology is designed to provide a rich and comprehensive vocabulary for both human and knowledge-based system. Because the function domain is where the representation starts from, the functional ontology is an important part of the ontology for FMKC. 3.4.1. Functional vocabulary library
In specifying the conceptualization, the ontology determines the ontology it is possible to make an ontological commitment, which
Gruber (1995) explains as an agreement  X  X  X o use a vocabulary (i.e. complete) with respect to the theory specified by an ontology X  X .
The functional ontology is implementation-independent. It is used as a conceptual vocabulary in the functional space to limit the reasoning space and to describe functional knowledge such as the functional decomposition patterns. A functional ontology is ontological functional concepts in a specific target domain.
In order to specify the functional space, ideally, all functional concepts recognized by humans in the target domain should be defined. In FMKC, as is discussed in Section 3.3, a comprehensive and dynamic vocabulary library is established to represent the functional knowledge for conceptual design. The functional ontology consists of four spaces as shown in Fig. 5 . The basic unit representing knowledge in the function layer is the verb of which grammatical objects are the input and output flows.
As an important part of a Function Block, the representation of flows carries critical physical information about a product X  X  technical system. Thus we identified three categories of flow matter flow, and information flow ( Fig. 5 a).

According to the classification of functions, the 8 function classes are shown in Fig. 5 b. The function class can be decomposed to basic functions ( Fig. 5 c). In order to represent the function knowledge more specifically, the basic functions are decomposed further into synonyms.

The function knowledge can be organized into a hierarchical structure according to the relations which represent that a macro-some ways for representing the  X  X  X ressure usage X  X . For example, the pressure can be channeled to other usage, or can be converted to other forms of energy. If we take a hydraulic cylinder as an example, the hydraulic energy flow is converted to the mechan-ical energy flow. This kind of functional knowledge can be represented as a Function Block, which consists of input/output flows and a transitive verb.

According to the general requirements for ontology, the functional ontology for FMKC can fulfill: (1) comprehensive articulation of function; (2) definition in terms of mapping process, which help mapping from structural layer to functional layer; and (3) independence of implementation. 3.4.2. The ontology for FMKC
Ontologies are used to capture knowledge about some domain of interest. Ontology describes the concepts in the domain and also the relationships that hold between those concepts. Different ontology languages provide different facilities. The most recent development in standard ontology languages is WOL from the World Wide Web Consortium (W3C). Complex concepts can be built up in definitions out of simper concepts. Furthermore, the logical model allows the use of a reasoned, which can check whether or not all of the statement sand definitions in the ontology are mutually consistent and can also recognize which concepts fit under which definitions.
 knowledge decompositi ontheory.AsisdefinedtheFKCisintegrated verb X  X  can be derived from the class of  X  X  X erb_vocabulary X  X . As is mentioning that the verbs in  X  X  X ynonyms X  X  class can be expanded, which makes the representation scheme dynamic.  X  X  X hing X  X  is part of the OWL vocabulary. The class  X  X  X wl: Thing X  X  classes are sub-classes of Thing.

According to our FMKC modeling approach, Fig. 6 shows the mapping with FMKC ontology modeled by Prote  X  ge  X  (Noy et al., 2000). We compose the ontology for the framework of FMKC in
OWL language, which is proposed in the appendix. 3.4.3. Roles of functional ontology
The functional ontology specifies the space of function knowledge and structure knowledge. It enables us to map function knowledge with structure knowledge and to identify plausible functional hierarchy from a given physical model. Although the ontological approach may reduce the freedom of functional representation in comparison with hand-written functional models, it enables us to of functional knowledge in terms of the functional ontology. 3.5. Mapping process and FMKC integration
Because the search space of functional concepts is huge, it is critical that we appropriately limit the mapping relations between the structure level and the function level to a reasonable size. By mapping process the various ways of interpretations of a number of candidates of functional concepts in the functional space from a given component model.

The structure X  X unction layer mapping process generates all possible functional interpretations of structure of each component from the given structural component models. The functional
This mapping process constitutes a mapping process between the functional knowledge and physical (structural) knowledge domains, as shown in Fig. 3 .

By viewing the mapping of functions to a set of design parameters, i.e., structure layer, as a matrix transformation, a matrix transformation is expressed as
FL fg X  A  X  SL fg  X  4  X  where [A] is the  X  X  X ransformation matrix X  X  that defines the relationships between the structure parameters and the function representations. The structure of [A] determines whether or not the functional representation maintains the independence of the individual structure parameter.

Now that the function layer and the structure layer have been constructed, and the relationship between the function layer and the structure layer is also interpreted by the transformation matrix, all those knowledge can be integrated to FMKC as a whole, according to the definition of the FMKC we defined in Section 3.1.
Moreover, it should be noted that the generated functions are limited by the given structure model. The structure model should support all possible functions. 4. Functional knowledge decomposition theory
Formulation of the function structure can involve various levels of abstraction since the designer X  X  objective is to resolve complex, higher-level functional requirements into simpler, low-er-level functions and their relationships. These lower-level functions are called partial functions ( Hubka and Eder, 1982, 1988) or sub-functions ( Pahl and Beitz, 1996).

In order to depict the knowledge model more specifically, the function class is decomposed into several basic functions. And sometimes it is necessary to decompose the function layer deeper to detail down the function representation by using sub-functions to further describe the knowledge model. In the FMKC model, all functions have to be retrieved by functional knowledge decom-position. We propose a functional knowledge decomposition theory to determine whether all functions are retrieved.
The structure configurations of the objects are objective, so based on different contexts. Thus, it is reasonable to study the case from the view of the structure layer, and then map the knowledge from the function layer to the structure layer.
Similar to the independence axiom, we use a transformation matrix mapping between the function and the structure layer. By analyzing the mode of the transformation matrix, it can be determined whether the function layer reaches the end of its decomposition.

After the mapping is constructed, the relationship between
The function decomposition theory is based on analyzing the structure of the transformation matrix [A].

Definition. Function decomposition is to ensure the mapping between the FL and SL is one-to-one or one-to-many correspon-dence, i.e., each structure block can be satisfied by the corre-sponding function without affecting any other structure blocks, which is the signal of the end of the function decomposition.
If we analyze the transformation matrix [A], there are 3 situations existing if this matrix is square, which can be: (1) (1) If [A] is a diagonal matrix (a square matrix whose non-diagonal entries are zero),
FL
FL
FL 8 &gt; &gt; &gt; &lt; &gt; &gt; &gt; : the functional representation is uncoupled because each function one correspondence situation. In other words, the function layer cannot be decomposed any further. (2) When [A] is a triangular matrix (all entries either above or below the main diagonal are zero),
FL
FL
FL 8 &gt; &gt; &gt; &lt; &gt; &gt; &gt; : the representation is called to be decoupled. A decoupled representation is also the signal of the end of the function decomposition, because the independence of the individual structure parameter can be maintained by defining the SL sina specific sequence. (3) When the transformation matrix [A] consists of mostly nonzero entries, the design is termed as a coupled functional representation:
FL
FL
FL 8 &gt; &gt; &gt; &lt; &gt; &gt; &gt; :
Consider the following two-dimension case where [A] is fully populated:
FL
FL ()
Any change in function layer FL 1 or FL 2 cannot be satisfied by rely on the convergence of an iterative strategy. The physical functional knowledge is need ed to be further decomposed.
But, on most occasions, the number of the function knowledge does not always equal to the number of the structure knowledge, which causes the transformation matrix to be a rectangular one.
In addition to uncoupled and decoupled designs, another situation single structure block can have multiple function knowledge, when thereismorefunctionknowledgethanstructureknowledgeand each structure block can be repr esented by varying one or more because changes in either SL will not affect the other one:
FL
FL
FL 8 &gt; &lt; &gt; : 9 &gt; = &gt; ;
A key aspect of this situation is the fact that its transformation matrix can be converted to an uncoupled or decoupled form through manipulation of the redundant FL variables. For example, combining FL 1 and FL 3 into a dimensionless group reduces the number of FL s in Eq. (9) to two, and the reduced design matrix is uncoupled, expressing a one-to-one mapping between the vectors another approach for reducing Eq. (9) to an uncoupled matrix.
In short, the functional decomposition theory is by analyzing the structure of the transformation matrix, to decide whether the Axiomatic Design, the functional knowledge decomposition theory the designers the signal of the end of the decomposition process. 5. Example and analysis 5.1. Example of FMKC modeling: hydraulic cylinder
We construct the FMKC library for manipulator shown on the work-pieces. For the sake of simplicity, we choose the hydraulic cylinder ( Fig. 7 ) as an example to show how to decompose functions to model the FMKC by our approach.

The knowledge of a hydraulic cylinder can be simply represented by mechanism and control domain. To this end, there are two FMKCs in this example, which can constitute the FMKC library as K  X  K m ; K c  X  10  X  where K m and K c represents the mechanism and control domain knowledge, respectively.

In mechanism domain, hydraulic cylinders get their power from barrel,inwhichapistonconnect ed to a piston rod moves back and called the cap end) and by the cylinder head where the piston rod chamber (cap end) and the piston r od side chamber (rod end). The Flanges, trunnions, and/or clevisses are mounted to the cylinder body. The piston rod also has mount ing attachments to connect the cylinder to the object or machine component that it is pushing. 5.1.1. Function layer modeling the hydraulic cylinder, to move the piston rod upwards. The piston moves instead downwards if oil is pumped into the piston rod side without pressure. In a word, a hydraulic cylinder is a device that converts pressure into force. With first-order predicate logic,
FL  X  convert  X  pressure ; force  X  5.1.2. Mapping process
After studying the structure of the device, we extract the function knowledge. By decomposing the structure, several single components of hydraulic cylinder is obtained: SL 1 =cylinder barrel SL 2 =cylinder bottom SL 3 =cylinder head SL 4 =piston head SL 5 =piston rod SL 6 =rod gland SL 7 =seals SL 8 =cushions The mapping process is as follows: FL  X   X  xxxxxxxx 5.1.3. Analysis by functional knowledge decomposition theory
After observing the transformation matrix, obviously, this function knowledge needs to be decomposed further.

The barrel, cylinder bottom, and cylinder head together form a motion. The rod gland supports the weight of the piston rod and vibration, caused by the back and forth motion of the piston. Accordingly, the function l ayer will be represented as FL 1 =contain (hydraulic cylinder, oil) FL 2 =convert (pressure, force) FL 3 =support (rod gland, piston rod) FL 4 =guide (rod gland, piston rod) FL 5 =prevent (seals, leakage) FL 6 =decrease (cushions, vibration)
Thus, the mapping process between the function layer and the structure layer is as follows: FL 1 FL 2 FL 3 FL 4 FL 5
FL 6 2 6 6 6 6 6 6 6 6 6 4
As the transformation matrix is coupled, we have to continue the decomposition process. The cylinder head and bottom is fitted with seals to prevent the pressurized oil from leaking. The piston head transports the oil pressure to the piston, and the piston rod
FL 11 =contain (cylinder, oil)
FL 12 =prevent (cylinder bottom, oil leakage)
FL 13 =prevent (cylinder head, oil leakage)
FL 21 =transport (piston head, pressure)
FL 22 =transport (piston rod, force) And the mapping process is now as follows:
FL
FL
FL
FL
FL FL FL FL FL 2 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 4
If we rearrange the SL s sequence, the matrix is decoupled. Until now, the decomposition process reaches to an end. Those FL s and SL s can be used to construct the FMKC.

Till now, according to Eq. (13), the mechanism domain FMKC can be represented as
K  X  2 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 4
From the view of control domain, we consider the patent claim for the control system for a hydraulic cylinder and method (US
Patent 5,666,806). 5.1.4. Function layer modeling
The hydraulic cylinder control system works as the following steps: 1. Receiving an input command signal associated with the desired position for the hydraulic cylinder. 2. Sensing a plurality of system conditions and producing a plurality of system condition signals according to a plurality of system conditions. 3. Determining an initial pump displacement output value and an of system condition signals, the initial pump displacement output value and the initial spool displacement output value being derived from a plurality of feedback linearization control laws. 4. Producing a pump displacement output signal and a spool displacement output signal as a function of the initial pump displacement output value and the input command signal, the pump displacement output signal and the spool displacement output signal being derived from at least one linear control law.
According to the work process, function domain knowledge of the hydraulic cylinder control syst em can be represented as follows:
FL 1 =determine (control valve, displacement output value)
FL 2 =produce (hydraulic pump, oil pressure)
FL 3 =receive (sensors, input command signal)
FL 4 =sense (sensors, system conditions)
FL 5 =produce (sensors, system condition signals) 5.1.5. Mapping process
A hydraulic cylinder control system comprises a control valve adapted to regulate the flow of pressurized hydraulic fluid to the hydraulic cylinder, a hydraulic pump adapted to provide pressur-ized hydraulic fluid through the control valve to the hydraulic cylinder, a plurality of sensors for sensing a plurality of system conditions and producing a plurality of system condition signals. Then the structure knowledge is easily to be decomposed to:
SL 1 =control valve
SL 2 =hydraulic pump
SL 3 =sensors Thus, the mapping process is as follows:
FL
FL
FL
FL
FL 2 6 6 6 6 6 6 4 3 7 7 7 7 7 7 5 5.1.6. Analysis by functional knowledge decomposition theory
According to the function decomposition theory, the decom-control knowledge FMKC can be represented as
K  X  2 6 4
Till now, the mechanism and control domain knowledge of hydraulic cylinder have been successfully represented. Fig. 8 shows the illustration of the hydraulic cylinder knowledge representation scheme. Fig. 9 shows FKC/FMKC retrieving process. Each FKC/FMKC is constructed by the ontology proposed in Section 3.4. 5.2. Qualitative analysis for the example
Firstly, the knowledge in FMKC can be retrieved from the structure layer. However the mapping process between the function layer and the structure layer needs to be defined under the designer X  X  intention manually. Although it is hard to describe models completely independent of context, it is much easier to describe possible structure configurations, which are objective, than possible teleological interpretations depending on many contexts. So, on most occasions, we can firstly decompose the structure layer, and then map the function layer to the structure layer. By applying the function decomposition theory, we can retrieve all the mapping relations in the end.

Secondly, the ontology constructed in FMKC shown in the example is defined. As discussed in Section 3, we adopted Stone and Wood X  X  (2000) function classes as our functional verb vocabulary. Although we cannot claim that this vocabulary can fully represent all kinds of functions in conceptual design, the verb vocabulary we choose is enough for representing function knowledge to hydraulic cylinder shown in the example. In addition, because the vocabulary is dynamic, new verbs can be added to it and it needs to be further studied and consummated.
Lastly, as shown in the example, by using the functional decomposition theory, the FMKCs of hydraulic cylinder are success-fully decomposed to an end in mechanism domain. Although the decomposition theory has not been perfect yet and needs to be further developed, it does provide a way to estimate whether the function has been decomposed to an end. 6. Discussion 6.1. The vocabulary in ontology
Stone and Wood (2000) proposes a functional basis that provides a common design language that can be used to model a functional modeling for human analysis and communications.
The design process is executed in a systematic and repeatable manner. Different kinds of design knowledge are evolved and similar knowledge is used repeatedly. The adoption of the functional basis will allow different designers to share informa-tion at the same level of detail, to generate repeatable function structures, and to compare functionality of different products for idea generation purposes.

Our research adapts Stone X  X  function basis as the primary one of our vocabulary. According to the vocabulary definitions, the func-tional representation can be defined by experts. Although a limit to obtain a consistent way of knowledge representation. Further-more,suchdefinitionsofflowsandfunctionbasisastheprimary is dynamic and can be expanded with the process of FMKC modeling. mapping need to be consummated in further work.

Because of different input/output flows and physical structures, the knowledge representation varies. And it is possible that the same function happens in different domains. The FMKCs having similar function terms means they have functional similarity, which can be clustered, modified, or fused. The knowledge fusion is in progress. The vocabulary library of our ontology included in this paper covers a large engineering field from small to medium scale, across a variety of industries. 6.2. Functional knowledge decomposition theory
The functional knowledge decomposition theory proposed in (Suh, 1995 ): the independence axiom. Axiomatic Design presents two axioms to tell a good design from a bad one. The first axiom, the independence axiom, guides designers to maintain the independence of functional requirements (FRs), defined as a minimum set of independent requirements that completely characterizes the functional needs of the product (or software,
Unlike the Axiomatic Design, the functional knowledge decomposition theory does not aim to judge whether the design is good or not. It is used to judge whether the function knowledge has been decomposed to the lowest level.

The decomposition theory also ensures strongly coupled system to be decomposed, because according to the definition of function decomposition theory, each structure mapping to certain function form a one-to-one or one-to-many correspon-dence. If we decompose the structure enough, the transformation matrix is possibly to be decomposed.

However, whether the decomposition process skips some knowledge cannot be identified by this decomposition theory. The knowledge might not be fully retrieved in one case, but this drawback can be suppressed by abundant case studies. 6.3. The usage of FMKC
The usage of FMKC is similar to CBR cycle. Case-based reasoning has been formalized for purposes of computer reason-ing as a four-step process ( Aamodt and Plaza, 1994 ): retrieve, reuse, revise, and retain, while the usage process in our research concludes: retrieve, reuse, fusion, revise, and retain. Compared with CBR there is a knowledge fusion process in the usage cycle. Knowledge fusion is more purposeful. By knowledge fusion, we can cluster the similar functions and proliferate new functions. The research of knowledge fusion has been carried on in many different domains such as merging information, i.e., Hunter and Summerton X  X  (2006) weather reporting system. However, little attention is paid to application of this kind of research to conceptual design, which will be our further work.

The proposition of FMKC is to represent the design knowledge in the view of function domain. It is possible that some cases are integral or have some interdependent subsystems. They may be identified with coupled matrix at first. By using ontology, the design knowledge with the function and structure level is modeled. By the functional knowledge decomposition theory, it be thus decomposed to FMKC, which is domain independent. Furthermore the integral component can still be retained as FKC in the knowledge database, which can be also reused or provide designers related knowledge in conceptual design. 6.4. Application to knowledge reuse and knowledge fusion
The FMKC has been applied to model the manipulator. The example of the hydraulic cylinder shown in Fig. 7 mainly focuses on the mechanical domain and the control domain. Our ontology assumes the existence of something flowing among components that carry knowledge, such as energy, material, and signal on the basis of functional ontology. As shown in the example, this ontology covers functions in simple mechanical and control domain.

The modeling of FMKC aims to be a part of an intelligent redesign support system. Here, we provide an overview of the goals and effects of the system. The main goal is not to redesign the target systems automatically but to provide human designers with various kinds of functional knowledge across domains, which can hint at possible alternatives for redesign. In order to the function and the structure knowledge of the original design is needed. However, the requirements for a redesign are usually
Therefore the redesign system has to bridge the gap between the given structure level and the functional level for reasoning. Thus knowledge representation is needed as the first step of the redesign process.

Such knowledge representation contributes to innovative redesign by humans. Given an existing artifact and a new requirement, change of some parts of functional knowledge enables us to propose new functional hierarchy satisfying the requirement. For example, in Section 5, the main function  X  X  X o change the pressure into the linear force X  X  is achieved by the hydraulic cylinder. This function hierarchy can be reused in other new design to form new functional hierarchy.

Thus, in redesign support system, the reusability of the existing function and structure relationships is an important issue to utilize the knowledge without having to reconfigure the system each time. The FMKC process cycle shows our approach by extracting this kind of knowledge to provide the possibility of reuse.

From the structure layer angle, the design solution is more obvious ( Suh, 1998 ). For example, if function is  X  X  X onvert the pressure to the force X  X , we can identify several known design constitute a structure knowledge database.

From the function layer angle, the reusability is in the form of a knowledge database ( Gebala and Suh, 1992). Given a piece of function knowledge, we have to find a feasible structure that can satisfy the function from the knowledge database such as FL G f  X  SL 1 ; SL 2 ; ... ; SL n  X  17  X 
Eq. (17) states that FL can be represented (indicated by G )by any one of the SL s listed. By using ontology to represent this knowledge, the relationship between FL and SL s is formed. Such a making it possible to reuse the database.

When there is more than one FL , we have to select an SL set right set of SL s. For frequently used sets of multiple FL design problems, a database or a library of software modules may be created, which relates { FL s} to { SL s} as follows: FL s fg X  f  X  SL s fg a ; SL s fg b ; ... ; SL s fg z  X  18  X 
The knowledge database represented by Eqs. (17) and (18) is reusable when a design solution for the identical of FL s set is needed.

Such modification enables drastic improvement. Because many inventions are based on techniques well known in different domains ( Sushkov et al.,1995 ), if designers can consult a wide range of such functional knowledge in different domains, that will facilitate innovative design. With the knowledge base, in redesign process, we can make some changes on existing design solutions; in order to satisfy the required function, we can extract the knowledge we need from the knowledge database and/or fuse them to a new one. The knowledge database should be accordingly dynamic, which can be expanded by adding new
FMKCs into it. Those newly constructed FMKCs can be reused to support the following design. 7. Conclusion
The contribution of this research can be summarized as a framework of systematization of conceptual design. The concept of functional micro-knowledge cell (FMKC) is proposed to establish a consistent functional knowledge representation model for conceptual design. We demonstrate the process of function decomposition and the approach of FMKC integration.

The key point of this research is to propose a framework of functional micro-knowledge cell (FMKC), which supports the conceptual design. Such FMKC establishes a functional knowledge representation model for conceptual design, which can be applied in multidiscipline and is consistent in resolution of knowledge representation. The following list summarizes the crucial parts in
FMKC: 1. The definition of FMKC (see Section 3.1). 2. The structure of FMKC: 3. The functional decomposition theory (see Section 4). This paper proposes a consistent knowledge representation method by using FMKC to study the existing case. How to model the FMKC is discussed. Because much knowledge is evolved in conceptual design, it is meaningful to arrange the knowledge related to the design. Usage of FMKC aims to represent that knowledge and provide the design hints to the designers in the process of conceptual design.

In order to guarantee the consistent resolution of the knowl-edge representation, i.e., obtain the FMKC, the functional knowl-edge decomposition theory is proposed, which will help to estimate whether the decomposition process reaches the lowest level and whether all functional knowledge are retrieved.
Furthermore, FMKC can be reused and fused. Because much similar knowledge and repeating work occur in the conceptual design, by using FMKC, it is possible to represent and store that knowledge and apply it in the new conceptual design. Knowledge fusion is an interesting topic in our further work. Those FMKCs that have similar attributes can be clustered and fused to a new functional knowledge cell. Knowledge fusion provides a huge potential to design innovation.

We demonstrate the operation of FMKC. It is the basis of our further research. Although the knowledge cell we propose is still simple, it can present the major functional knowledge in design and fulfill the functional decomposition theory. The approach of functional knowledge representation can be adopted in design reuse and knowledge fusion, which is ongoing in our further study. Acknowledgements This research is supported by the National Natural
Science Foundation of China (Nos. 50775140, 50575142, 60304015, 50821003), National High Technology Research and Development Program of China (No. 2008AA04Z113), Shanghai
Committee of Science and Technology (Nos. 08JC1412000, 09DZ1121400, 07XD14016), Research Fund for the Doctoral Program of Higher Education (No. 200802480036), Program for New Century Excellent Talents in University (NCET-08-0361) and
National Basic Research Program of China (Nos. 2005CB724302, 2006CB705400).
 Appendix. FMKC ontology framework in OWL language References
