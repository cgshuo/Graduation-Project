 Uni versality , the property of the Web that mak es it the lar gest data and information source in the world, is also the property behind the lack of a uniform organization scheme that would allo w easy access to data and information. A semantic web, wherein dif ferent applications and Web sites can exchange in-formation and hence exploit Web data and information to their full potential, requires the information abou t Web resources to be represented in a detailed and structured manne r. Resource Description Frame work (RDF), an effort in this direction sup-ported by the World Wide Web Consortium, pro vides a means for the description of metadata which is a necessity for the next generation of interoperab le Web applications. The suc-cess of RDF and the semantic web will depen d on (1) the de-velopmen t of applications that pro ve the applicability of the concep t, (2) the availability of application interf aces which en-able the develop ment of such applications, and (3) databases and inference systems that exploit RDF to identify and locate most rele vant Web resources. In addition, man y practical is-sues, such as security , ease of use, and comp atibility , will be crucial in the success of RDF . This surv ey aims at pro viding a glimpse at the past, present, and future of this upcomin g tech-nology and highlights why we belie ve that the next generation of the Web will be more organized, informati ve, searchab le, accessible, and, most importantly , useful. It is expected that kno wledg e disco very and data mining can benefit from RDF and the Semantic Web.
 Resource Description Frame work (RDF), Metadata, XML, Web, Semantic Web Although the World Wide Web has revolutionized the means of data availability , with its current structure, it falls short of being a reliable and efficient tool for global information ac-cess. While users can access an unprece dented amount of data on the Web, the y increasingly find it dif ficult to retrie ve rel-evant information. Search tools on the Web pro vide inde xes to help users. Ho we ver, sorting through ever-increasing data and identifying what may be rele vant for a particular user is not trivial. In order to mak e this task easier , current search engine technologies work mostly at the page-le vel: given a query , a search engine returns pages each of which alone an-swers the query . Unfortuna tely , the returned list of pages may miss some rele vant information or may contain man y irrel-evant pages. Conseque ntly , the user has to manually filter the result list and/or change the query to re-search for rele-vant pages. Therefore, the Web X  s current information retrie val model mak es it extremely dif ficult for users to find and use rele vant information.
 Uni versality , the property of the Web that mak es it the lar gest data and information source in the world, is also the property behind these challenges. Data available on the Web covers diverse structures, formats, as well as content. Ho we ver, the Web lacks a uniform organization scheme that would allo w easy access to data and information. Clearly , a frame work that would help search engines and other information access and inte gration tools to organize the data available on the Web would be as revolutionary as the creation of the Web itself. Such a frame work would render the Web managea ble, retrie v-able, and uniform, while not taking anything away from its uni versality . Hence, such a frame work can also facilitate tasks, such as data mining [20; 13] and web mining [54; 32]. To mak e information access easier , such a frame work would SIGKDD Explorations. Volume 3, Issue 1 -page 6 need to state, explicitly , what a Web page (or any other data resource on the Web) actually contains. In other words, such a frame work would need to be based on metadata (data abou t data) that describes conten t of Web resources. In fact, key-word inde xes used by search engines are nothing but sim-ple data structures for metadata that describe the textual con-tent of pages. Since tools and mechanisms that will allo w page creators to describe the semantic metadata are not widely available, search engines have to rely on the keyw ord conten t or human experts to inde x pages. Although some keyw ord-based classification, such as latent semantic inde xing [18; 3], and link structure based ranking technique s, such as PageR-ank [46; 11], are used to increase the quality of the results, search engines are far from understan ding and using actual se-mantic conten t of web resources for answering user requests. Since the heuristics used in the search process are not perfect, search engine s and other information access tools cannot pro-vide highly efficient access to information on the Web. If authors could easily associate metadata with each Web re-source (that can be represented with a uniform resource iden-tifier or URI) the y create, then this metadata could be used by information access and inte gration engines to increase their efficienc y and precision. In order to enable this, the meta-data format used by dif ferent authors must be compatible with each other . In addition, in order to enable the developmen t of future applications with dif ferent data and information needs, the format must be generic and the metadata schemas must be extensible.
 Substantial efforts have been tak en in this direction, and a number of frame work s have evolv ed over the years. The most promising of these is the Resource Description Frame work (RDF). RDF pro vide s application develop ers with a solid foun-dation for the description of metadata for the next generation of interoperable Web applications . The RDF Model and Syn-tax Specification (REC-rdf-syntax) is currently a W3C 1 rec-ommenda tion [35], and the RDF Schema Specification (PR-rdf-schema) is a propose d recommenda tion [10].
 The long-term goal of RDF is to link dif ferent applications and Web resources into a new global netw ork, the Semantic Web [6]. The Semantic Web is envision ed to be the next gen-eration of the current Web, wherein the information about Web
The World Wide Web Consortium (W3C) is an international consortium of companies involv ed with the Internet and the Web. The W3C was founded in 1994 by Tim Berners-Lee, the original architect of the WWW . Its purpose is to develop open standards so that the Web evolv es in a single direction rather than being splintered among compe ting factions [38]. resources is represen ted in a detailed and structured manner , using RDF . Ontologies 2 , which describe the conte xt in which metadata is applied, are used to link, compare, and dif feren-tiate information pro vided by various Web resources. Once all Web resources are described in a uniform way, the infor -mation exchan ge between indi vidu als and applications will be possible to a much greater extent [6].
 This paper is a surv ey of current RDF status. The paper mo-tivates the need for metadata of data on the Web in Section 1. Section 2 thro ws light on the backgrou nd of RDF . Section 3 illustrates the RDF model and RDF compone nts. Section 4 revie ws some available RDF Tools for metadata generation, Application Program Interf aces and RDF database s. Section 5 discusses RDF real-w orld applications and its relationship to the Semantic Web. Section 6 conc ludes the paper with future work and challenges. At the present stage of the Web X  s evolution, most traf fic on the Internet is between human consume rs using Web bro wsers and content pro viders using Web serv ers. This means that to find and retrie ve data, human interv ention is often required. As businesses mo ve more of their daily operations online, computer -to-computer peer services are gro wing [24]. Therefore the need is increasing for develop ing a model which will bring structures to descriptions of the Web content, thus creating an environmen t where the tasks such as searching the Web could be automated.
 Man y proposals were made to the World Wide Web Consor -tium (W3C) for representation of Web-related metadata. Ini-tial solutions were based on the &lt;META&gt; tag of the HTML. Later on, with the adv ent of XML 3 , more descripti ve content tags have been introduced . Currently , man y compan ies, such as Microsoft, IBM, Motorola, Netscape, Nokia, OCLC, are ac-tively participating in the field of metadata frame work devel-opments. Here is a brief look at the development of metadata frame works.
 The first solution to be develop ed was naturally the HTML metadata tag, &lt;META&gt; , which resides within the &lt;HEAD&gt; el-ement. &lt;META&gt; has two attrib utes, NAME and CONTENT , which can be used to store the metadata schema. Due to its
An ontology is a docu ment or file that formally defines the relations among terms. The most typical kind of ontology for the Web has a taxon omy and a set of inference rules.
Extensible Markup Languag e, XML, is a W3C-endorsed standard for docum ent markup [24].
 SIGKDD Explorations. Volume 3, Issue 1 -page 7 very simplicity , this solution cannot be used for describing comple x properties.
 The adv ent of XML, the Extensible Markup Language, en-abled a stronger functional scheme. XML defines a gene ric syntax used to mark up data with simple, human readable tags. It pro vide s a standard format for compu ter docu ments. XML tags can be used for describing arbitrary properties of Web resources. Although this pro vides flexibility and expressi ve power to the metadata description frame work, it also compli-cates the handling of metadata as dif ferent frame works could have dif ferent sets of rules and properties to represent data. In fact, the resulting incompatibility turned out a major hurdle in XML-based frame work s. Namespace was proposed to over-come the problem .
 Companies lik e Microsoft and Netscape were acti vely involv ed in the metadata frame work developm ent. Channel Definition Frame work (CDF) is the industry X  s first channel frame work on the Web and is Microsoft X  s major contrib ution to the metadata initiati ve. It introduce s and describes chann els at high level us-ing HTML for primary content description. Each &lt;CHANNEL &gt; is compo sed of multiple &lt;ITEM&gt; elements, which describe HTML pages.
 In 1997 , along the line of the Web collections idea, Netscape submitted a new proposal, titled  X  X eta Content Frame work X , to W3C [23]. The two principles on which the meta conten t frame work (MCF) is based are as follo ws: MCF is based on a system of objects, property types, and prop-erties. This frame work offers a common data model and vo-cab ulary , making it possible to query and manage metadata, without having to fully understan d the semantics or vocab u-lary behind it.
 The culmination of all these various frame work s was the cre-ation of the RDF in 1997 [34]. RDF has dra wn influence from several dif ferent sources. The main influences have come from the Web standardization commun ity itself in the form of HTML metadata, the library community , the structured docu-ment commu nity in the form of SGML (Standard Generalized Markup Language ) and more importantly XML, and also the kno wledg e representation commu nity . Other areas of techno l-ogy also contrib uted to the RDF design such as object-oriented programming and modeling languag es, as well as databases. RDF is still evolving.
 Note, finally , that the first principle of MCF , described ear -lier , raises an important question:  X  X f there is no distinction between the representation needs of data and metadata and if we are using XML to represent data, why do we need RDF? X  The answer to this question is hidden in the meaning of  X  X ep-resentation X . As described abo ve, XML simply is a markup language for formatting textual docum ents in a human read-able format. Ho we ver, the hierarchical structure pro vide d by XML as well as the fact that arbitrary references are allo wed within XML allo wed it to be used to capture certain types of data models as well. Ho we ver, RDF pro vides a richer data model where entities and relationships can be described. Un-lik e traditional object-oriented data models and XML, the re-lationships in RDF frame work are first class objects, which means that relationships between objects may be arbitrarily created and be stored separately from the two objects. This nature of RDF is very suitable for dyna mically changing , dis-trib uted, shared nature of the Web. In other words, RDF pro-vides a more suitable data model than XML and its rich mod-eling tools, such as XML Schemas [55]. Also, there is more to RDF than the underlying modeling tool: It is designed to pro-vide a frame work that ensures interoperability between meta-data frame works. Hence, it allo ws applications to exchang e machine understan dable information on the Web, promoting unilateral organization of Web resources by their suppliers. In the next section, we will focus on the modeling capabilities of RDF . The Resource Description Frame work (RDF) is an XML-based language [52] for describing information contained in a Web resource. A resource can be a Web page, an entire Web site, or any item on the Web that contains information in some form [25]. RDF enab les the encod ing, exchan ge, and reuse of structured metadata [43]. It allo ws for metadata interoper -ability through the design of mechanisms that support com-mon con ventions of semantics, syntax, and structure. RDF mak es no assumption about a particular application domain, nor defines the semantics of any particular application domain. The definition of the mechanism is domain neutral, yet the mechanism is suitable for describing information about any domain [35]. RDF can be used in a variety of application ar-SIGKDD Explorations. Volume 3, Issue 1 -page 8 eas including [27]: An RDF model consists of schemas , compon ents, statements, containers, statements abou t RDF statements, as well as XML namespac es. We illustrate these elements of an RDF model in the follo wing.
 RDF Schemas To facilitate the definition of metadata, RDF has a class system much lik e man y object-oriented programming and modeling systems. A collection of classes is called a schema. Through shareability of schemas, RDF suppo rts reusability of metadata definitions. Due to RDF X  s incremental extensibility , agents 4 processing metadata will be able to trace the origin of schemas the y wer e unfamiliar with bac k to known schemas and perform meaningful actions on metadata the y wer e not originally de-signed to process . The shareab ility and extensibility of RDF also allo ws metadata authors to use multiple inheritance to mix definitions and pro vide multiple vie ws to their data. In addi-tion, RDF allo ws creation of instance data based on multiple schemas from multiple sources . Each RDF application will use a schema to restrict its use of RDF to a deliberately lim-ited langua ge [35].
 RDF Components RDF is a syntax indepen dent model for represen ting resources and their correspond ing description s [34; 43]. It pro vide s a model for describing Web resources; i.e., objects that are uniquely identifiable by uniform resource identifiers (URIs). The re-sources are described using prope rty names, which express the relationships of values associated with resources [25]. Val-ues may be atomic or may be other resources, which in turn may have their own properties. A collection of these prop-
Agents are softw are programs that perform some information-gathering or -processing task in the back-ground. Typically , an agent is given a small and well-defined task. Agents have become more prominent with the recent gro wth of the Web.
 SIGKDD Explorations. Volume 3, Issue 1 -page 9 erties that refer to the same resource is called a description (Figure 1) [43]. Therefore, the RDF model consists of three major compon ents [35]: Let us consider the page http://www .asu.edu (home page of the Arizona State Uni versity -ASU) as an example. We can see that this resource can be described using various page related content-base d metadata, such as title of the page and keywords in the page , as well as ASU related seman-tic metadata, such as the president of ASU and its cam-puses . If we consider another related resource , http://www .eas.asu.edu/ , (Colle ge of Engineering and Applied Sciences Web page at ASU), we can see that although it also can be described using similar metadata, there are some dif-ferences. For instance, this resource has additiona l prope rties, such as a dean and a list of courses . On the other hand, it lacks the information about campuses .
 RDF Statements Let us consider the follo wing statement about the Web re-source http://www .asu.edu/ and see how we would use RDF to describe it).

Statement 1.  X  X he owner of the Web site http://www .asu.edu Figure 2 sho ws how we can use RDF to express this state-ment using (1) a resource or subject (http://www .asu.edu), (2) a property name or predica te (owner), and (3) an atomic value or object (Arizona State Uni versity).
 If we kno w more about the Arizona State Uni versity that we would lik e to include in our description, we could replace the atomic value (Arizona State Uni versity) by a resource (Uni ver-sity 1) which can be further described using approp riate prop-erty names and values as sho wn in Figure 3.
 Note in this example that some metadata (such as property names) used to describe resources are generally application SIGKDD Explorations. Volume 3, Issue 1 -page 10 1 &lt;?xml version = "1.0"?&gt; 2 &lt;rdf:RDF 3 xmlns:rdf= "http://www. w3.org/1999/ 02/22-rdf-sy ntax-ns#" 4 xmlns:my=" http://mymet adata.org/sc hema/"&gt; 5 &lt;rdf:Descr iption about="http ://www.asu.e du/namespace /"&gt; 6 &lt;my:Titl e&gt;NamespaceF AQ&lt;/my:Title &gt; 7 &lt;my:Desc ription&gt; 8 This is the page of FAQ for ASU namespace. 9 &lt;/my:Des cription&gt; 10 &lt;my:Date &gt;2001-06-14T 09:46&lt;/my:Da te&gt; 11 &lt;/rdf:Desc ription&gt; 12 &lt;/rdf:RDF&gt; depend ent, and must be associated with RDF schemas. This, howe ver, can cause dif ficulties when RDF descriptions need to be shared across application domain s. For example, the prop-erty location can be defined in some other application domain as addr ess . Although, the semantics of both property names are the same, syntactically the y are dif ferent. On the other ex-treme, a property name may deno te dif ferent things in dif ferent application domains. In general, a property name may have a broader or narro wer meaning depend ing upon the needs of par -ticular application domains. In order to pre vent such conflicts and ambiguities, the terminology used by each application do-main must be clearly identified. This can be achie ved by using standard metadata, such as the Dublin Core 5 [19], or by using namespa ces .
 Namespaces in RDF RDF uniqu ely identifies property names by using the XML namespa ce mechanism [43]. A namesp ace can be thought of as a conte xt or a setting that gives a specific meaning to what might otherwise be a general term [27]. The XML namespace pro vides a method for unambiguo usly identifying the seman-tics and con vention s govern ing the particular use of property names by uniquely identifying the governing authority of the vocab ulary . As human s, we do this type of namesp ace or con-text mapping quite automatically . Thus, using namespace s, RDF pro vides ability to define and exchang e semantics among communities. With the abo ve kno wledg e, we pro vide, in Fig-ure 4, an example of some RDF description of a document.
The Dublin Core, http://purl.or g/dc/, is a standard set of ten information items with specified semantics that reflect the sort of data lik ely to be found in a card catalog or annotated bibli-ography .
 In Figure 4, Line 1 specifies the version of XML to which the documen t conforms. Lines 2-4 define the root element rdf:RDF . Here, the two namespac e prefix es rdf and my are declared. These namespac es are applicable to the RDF de-scription in lines 5-11. The URIs associated with the names-pace declarations reference the correspond ing schemas. Line 5 uses element rdf:Descrip tion (the element  X  X escrip-tion X  in the conte xt of the rdf namespace ) to describe the resource -the correspon ding URI: http:// www.asu.edu/ namespace/ -specified in at-trib ute about . Line 6 uses element my:Title (the ele-ment  X  X  itle X  in the conte xt of the my namespac e) to mark up a property with name my:Title and value  X  X amespaceF AQ X . Lines 7-10 use other metadata elements to pro vide more infor -mation about the resource.
 RDF Containers Frequently it is necessary to refer to a collection of resources: for example, to list of courses taught in the Computer Science Department,or to state that a paper is written by several au-thors. To represent such groups, RDF pro vides containers [35] to hold lists of resources or literals. RDF defines three types of container objects to facilitate dif ferent grouping s: Statement 2.  X  X he CSE departmen t (cse.asu.edu) offers course s: SIGKDD Explorations. Volume 3, Issue 1 -page 11 &lt;rdf:RDF &gt; &lt;/rdf:RD F&gt; To represent this statement, we can use a bag description as sho wn in Figure 5.
 Statements about RDF Statements In addition to making statements abou t a Web resource, RDF can also be used for making statements about other RDF state-ments :
Statement 3.  X  X ccording to the ASU catalog, the CSE de-In this statement, we say nothing abou t the courses offered in the CSE department; instead, we express a fact stated in the ASU catalog. In order to express this fact using RDF , one has to model the original statement as a resource with four properties: subject, predicate , object , plus type whose value describes the type of the new resource. For instance, in or-der to model the example statement, we need to attach another property (e.g.,  X  X ttrib utedT o X ) with an approp riate value (here,  X  X SU catalog X ). The correspon ding RDF graph is sho wn in Figure 6. In effect, these higher order statements treat RDF statements as uniquely identifiable resources. This process is called reification [35] and the statement is called a reified state-ment. All reified statements are instances of RDF:Stat ement . Other RDF Constructs The RDF model does not need a special construct for descrip-tions since descriptions really are collections of statements. A Bag containe r is used to indicate that a set of statements came from the same description, thus reifying each statement of the particular description and making each reified statement a member of the Bag container [35]. RDF model intrinsically supports binary relations (a statement specifies a relation be-tween two Web resources ). Higher arity relations have to be represented using binary relations [35]. Intuiti vely , tools are SIGKDD Explorations. Volume 3, Issue 1 -page 12 necessary to extract metadata from a given Web source. Ex-amples of RDF tools are discussed in Section 4. RDF is an evolving technology for develop ing information rich applications [27]. Its wide-spread adoption by the Web community , on the other hand, depends both on the expressi ve power it will pro vide for description of metadata and the avail-ability of tools that will mak e RDF an easy-to-use frame work . Such tools range from those that create and store metadata in RDF format to graphical user interf aces for editing RDF mod-els. In this section, we revie w some existing RDF tools under three cate gories: automated metadata generation tools, appli-cation program interf aces , and RDF databases .
 Automated Metadata Generation Tools Metadata generation tools extract metadata from Web resources and store it in RDF for later use. Here, we pro vide some ex-amples of metadata generation tools [49].
 Re ggie [50] is a tool capable of extracting metadata from given Web sources (W eb pages). The user can select any existing schema file or can create his/her own schema files. Re ggie extracts the MET A tags from a given URL and attempts to add them to the most appropriate fields of the chosen schema. It also allo ws users to create their own metadata schema files. Once the user decides the schema file to be used to retrie ve the metadata, Re ggie reads in the details of all the elements, their characteristics, and descriptions. Note, howe ver, that Re ggie is not limited to describing Web resources only . In fact, it can handle variou s forms of metadata, including Dublin Core. DC-DO T [16] is another metadata extract tool. In contrast to Re ggie where the user pro vides the schema file, DC-DO T specifically uses the Dublin Core schema, a metadata element set for description of electronic resources, to extract metadata from a given Web resource. DC-DO T uses the information contained in the MET A tags of a Web source to generate the RDF model.
 Lik e DC-DO T, an automatic classifier is described in [29] which identifies docu ment related metadata, such as docu ment title, keyw ords, abstract, and word coun t. The resulting metadata is represented using an RDF schema specifically created for this purpo se. Given a Web resource, an approp riate metadata element set, Wolv erhampton Core, is identified based on the keyw ords extracted from the resource. An appropriate RDF data model and a schema are proposed in [29] to represent the element set commonly used for retrie ving documen ts. Note that there are only a handful of automatic metadata ex-SIGKDD Explorations. Volume 3, Issue 1 -page 13 traction tools, and most of the available ones are fine-tuned for metadata extraction using well defined schemas, such as the Dublin Core schema. The lack of such tools points to the dif fi-culty of understandin g the semantics of web resources and au-tomating the resource description process. Standard metadata schemas, such as Dublin Core, alle viate this dif ficulty con-siderable. Ho we ver, generic metadata extraction tools, such as Re ggie, which allo ws extraction of metadata based on user -specified schemas , are essential for scaling the use of metadata to multiple applications, each with its own needs.
 Application Pr ogram Interfaces For RDF to achie ve widespread acceptan ce, it is necessary for application developers to have an easy-to-us e interf ace to the RDF models [15; 41]. Application program interf aces (APIs) can help users to edit, upda te, and create new RDF models. RADIX [15] is a propos al to W3C that contains a collection of requirements an API for RDF should fulfill. Some important requirements in this propo sal are that an RDF API should (1) be indepen dent of dif ferent means of data storage (that is, it should supp ort diverse storage mechanisms); (2) suppo rt dif-ferent front-end parsers; (3) pro vide easy manipulation of the nodes and arcs in an RDF graph; (4) support queries about the nodes and arcs; and (5) support and pro vide metadata for RDF models. There are a few APIs that support RDF . The degree of adoption of the abo ve requirements change from API to API. Redland [4] is a library that pro vides a high level object-oriented interf ace for RDF . Redland implements each RDF concep t in its own class. The modular , object-oriented nature of Red-land enables the end-user to plug-in dif ferent parsers and stor -age mechanisms as suitable. Redland pro vides interf aces for the C langua ge. Jena [28], on the other hand , is a java API for RDF being develop ed by HP . It suppo rts both statement-and resource-cen tric vie ws of RDF . Hence, it is possible to treat RDF models both as sets of triples and as sets of re-sources/prop erties, respecti vely . Jena also supports multiple implementations.
 The Generic Interoperability Frame work, GINF [39], uses RDF as a generic representation for protocols, languages, data, and interf aces. It uses an RDF interf ace which not only allo ws creation and manipulation of RDF models, but also access to these models through a SQL lik e query interf ace. To certain degree, this interf ace formed the basis of the W3C RDF In-terest Group X  s RDF API proposal to the W3C RDF Interest Group [40].
 Other RDF APIs include CARA [31] develo ped as part of the CARMEN project and Mozilla API [48], develop ed as part of the Mozilla open-so urce web bro wser . More recently , an-other open-sou rce frame work, RDF .NE T, capable of parsing and processin g RDF models for Microsoft X  s .NET platform has been proposed [47].
 The multitude of APIs for RDF points to the need and the in-terest in the community for frame works capable of manipulat-ing RDF models. Although the W3C standard ization acti vities and emer gence of efforts, lik e RDF .NET , which aim to pro-vide compreh ensi ve APIs, initiated discussion s on con verging dif ferent API implementations into a uniform frame work, the lar gely varying needs of the end-users do not lend themselv es to such a uniform API.
 RDF Databases One of the most important functionalities of an RDF API is to enable access to RDF models and the rele vant Web data. Con-sequently , man y of the APIs described abo ve, such as Red-land, pro vide mechanisms for storage and retrie val of RDF data. This brings forth the necessity of having an appropriate database technolog ies as well as easy and efficient query and inference mechanisms. Belo w, we discuss some developm ents in this direction.
 As we have discusse d earlier , RDF pro vide s a rich data mode l, capable of describing both web entities and the relationships between them as first class objects. Therefore, a storage and retrie val system for RDF has to address two major challenges: (1) develop ing appropriate query mechanisms for RDF mod-els, and (2) mer ging together distrib uted , independ ently-created, dynamic RDF models. rdfDB [22] aims pro viding a solution to the first challenge: it aims to be a database system capable of suppo rting a graph oriented API via a textual query languag e. It aims to be scal-able to millions of nodes and triples, to suppo rt RDF schemas, and to pro vide basic forms of inference. The query languag e used by rdfDB is similar to SQL; hence most existing database users can adopt rdfDB easily .
 In rdfDB, a collection of RDF triples forms a database . The basic database operation s remain essentially the same, but are modified to accommod ate the RDF model. The normal databas e commands for insertion, deletion, and querying are done in rdfDB in the follo wing ways: SIGKDD Explorations. Volume 3, Issue 1 -page 14 As discussed earlier , RDF vocab ularies may come from dif-ferent namespac es. rdfDB creates URIs by concaten ating the namespac e URI with  X # X  and the element name. The query command s are also similar to those in SQL. For example, con-sider the myrdf database described abo ve. If the user wants to retrie ve the resource where the author is  X  X ohn X . The query is written using the follo wing SQL-lik e statement:  X  X elect ?p from myrdf where (author ?p John) X .
 Ho we ver, without a richer inference mechanism, rdfDB does not extend beyo nd being a simple SQL-based query language that can be implemented on top of a simple relational data model. In fact, RDF queryin g and storage mechanisms are not necessarily tied to each other: Irrespecti ve of the query languag e used for accessing RDF data, RDF models can be stored using other more established data models and mecha-nisms. For instance, Inkling [44] translates RDF queries de-scribed in SquishQL [45] into SQL queries that can be exe-cuted on any relational database. Various other systems also built RDF query engines on top of relational databases. The actual strate gy to be used to map the RDF triples onto tables in a relational database varies depen ding on the und erlying im-plementation [42].
 Although using relational approache s pro vides a simple solu-tion to storage and retrie val of RDF models, the second chal-lenge (i.e., mer ging together indepe ndently-created RDF data that pro vides a unified model enabling us to identify rele vant web objects) can be explored only if we have a query mecha-nism that can dra w further inference from the available meta-data [17; 5]. Algae [1] query language, for instance, is built on top of the Algernon, a rule compiler . Rich, rule-based sys-tems can pro vide better access to full potential of the rich RDF model. Because of reification, RDF compo nents have implied properties. Hence while designing a query system or query languag e for RDF , we have to consider the RDF model com-ple xities and also the implicit representation . We may also want the query system to be capable of query ing not only RDF data but also the RDF schemas. As a result, the query issue becomes comple x and the query languag e to be used should be able to tackle comple x semantic queries. Thus the tradi-tional query techniques are not suf ficient for full fledged use of RDF . Logical inference service [53; 37] is a necessary part of the query services to be pro vided . For example given an RDF statement  X  X ohn has an ASU email ID X  and a constraint  X  X nly uni versity students have an email accoun t at uni versity X  s serv er X , the inference system should be able to infer  X  X ohn is a studen t at ASU X  and answer related queries according ly. The main purpos e of the developme nt of frame works or mod-els for metadata is to enable the developme nt of a global Se-mantic Web, wherein dif ferent applications and Web sites can exchange information and hence exploit Web data to its full potential [53]. The current developm ent of the Semantic Web is based on three compleme ntary technolog ies: 1. XML allo ws users to define and use their own tags, thus 2. The semantics of the metadata is expressed using RDF . 3. Ontologies, or namespac es, are necessa ry to link the In this section, we will discuss current RDF applications and see how the y use these three technolog ies to impro ve the se-mantic content on the Web.
 Or ganizing the Web content and linking them based on content across dif ferent applications is the main idea behind Netscape X  s commercial product Aurora [8; 2]. Aurora is mainly an in-formation manage ment shell -a control place for managin g information. On a traditional desktop, various resources are presented and accessed based on a protoco l that does not con-sider the actual contents of the resources. Aurora tries to solv e this shortcomin g by pro viding a way of navigating various sources of data, such as FTP , local hard dri ve, and mailbox hierarchies, based on content. For example, a user can create a workspace called  X  X aseball X  under which there can be some local files, baseb all-related portions of sites lik e  X  X  ahoo X  and  X  X BSSports X , some live search queries, and some emails, all related to baseba ll . Thus the data is stored on the basis of con-tent and not on the basis of a content-neutral protoco l. In other SIGKDD Explorations. Volume 3, Issue 1 -page 15 words, Aurora pro vide s the user with a way to person alize data organization.
 Smart Browser [9; 14] tak es this idea a step forw ard. Unlik e a traditional bro wser , Smart Bro wser not only displays the re-quested information, but also pro vides additional related infor -mation, so that the user can access related data without much searching and bro wsing . The Bro wser creates its recommen-dations based on users X  preferences and acti vities on the Web. For example if a user is looking at some tennis player X  s Web-site, the Bro wser may pro vide the user with details related to all Grand Slam tennis tournamen ts. The funda mental dif fer -ence to the user is that access to data is no longer a bilateral relationship between the user and the content pro vider . It is a multilateral relation between the user , the content pro vider , and one or more third parties who are participating in the data access acti vely .
 An RDF schema for pro viding a non-v isual description of pho-tos is defined in [33]. The proposed schema is expressed in three dif ferent parts: In addition to describing the content of Web pages in a struc-tured way, RDF can also be used for representing the linkages between the Web pages, or for describing metadata about the current state and chan ges in documen ts on an entire Web site. RDF has been used to create an extensible frame work specify-ing user preferences and device capabilities [51]. Serv ers and content pro vide rs can use this information to describe user X  s preferences to customize the service or the content pro vided . For example, using computer hardw are parameters, such as CPU and modem speed, the proper version of a Web page can be selected and presented to the user . Therefore, a gene ral frame work for content negotiation requires means for describ-ing metadata, such as attrib utes and preferences of the user , at-trib utes of the content, and rules for adapting content to the ca-pabilities of the system and preferences of the user . Compos-ite Capability/Preference Profile (CC/P P) [30], for example, is constructed as a two-le vel hierarchy of compon ents (hardw are and softw are platforms, and applications) and their attrib utes. Each compo nent is described as a subtree whose branches are the capabilities or preference s associated with that compo nent. A capability is described using CC/PP attrib utes, each having simple, atomic values.
 The anticipation of a global Semantic Web also brings forth automated Web agents, which when assigned a particular task on the Web, will bro wse and search the complete Web and get the rele vant information without any huma n interruption. Web agents will search for the various services available on the Web and using these services, will perform the tasks assigned by the user [6]. There are already a number of automated services available on the Web [6; 26], but there is no common languag e to describe a service in a way that lets agents unde rstand the available function and tak e adv antag e of it. RDF can mak e this kind of service disco very process possible.
 One of the ongo ing projects to develop a Semantic Web aims at building an information managemen t system on the present RDF mode [7]. In this project, the Web information is man-aged in two parts. Or ganizational information manag ement, which includes the W3C Web information managemen t frame-work [53], handles resource managemen t and Web site access control. Personal information managem ent, on the other hand, deals with indi vidual docu ments and online information, and pro vides conten t-and conte xt-based retrie val. Another proposal toward develop ing a Semantic Web is Met-alo g [37], which pro vides a logical vie w of metadata present on the Web. Metalog allo ws users to write metadata, inference rules, and queries in simple English lik e languag e. The system further represents the reasonin g rules both as RDF descriptions and as logic formulas. The success of a global semantic frame work depen ds on our success in solving man y practical challenges. Although these challenges are, from a technical point, mostly orthogo nal to metadata description, storage, and retrie val problems , the y will play an important role in the commercial success of the frame-work. Hence, the y have to be considered with equal impor -tance. Some of the challenges are listed belo w.
 SIGKDD Explorations. Volume 3, Issue 1 -page 16 Security , for instance, presents itself as an important challenge when we consider about agents mo ving aroun d the Web. As described earlier Web agents could bro wse the Web and get the required information and present it to the users. So a major is-sue is how trustw orthy these Web agents are and what security constraints the y have to follo w. In some RDF applications, such as Smart Bro wsers, the user is conce rned abou t how se-cure a third party is. The data obtained by the third party can be mishandled causing security and pri vacy problems. This be-comes an especially serious conce rn when RDF used in elec-tronic commerce or other business applications [21]. One type of security can be achie ved by using digital signa-tures and certificates . Digital signatures pro vide authen tica-tion of the agent or the Web site pro viding the information. Lik e a written signature, the purpose of a digital signature is to guaran tee that the indi vidual (a user , an agent or a Web site) pro viding information really is who the indi vidual claims to be. An RDF schema can be develope d to hold security data. Whene ver any access is made to the RDF model of an ap-plication, appro priate conditions could be validated with this security schema, before the access is granted.
 Another practical challenge is to mak e RDF schemas easily available to describe various Web resource s [12]. Currently , a number of resource s are not well represented in RDF . One of the examples is email, which currently is one of the most im-portant means of data exchan ge. Hence storing the metadata for emails can be useful for sorting out emails based on dif fer -ent criteria. Some of the property names that can be used in an RDF schema for email are sende r, date , subject, receiver , at-tac hments , and mail format . Once an RDF schema is available to describe a lar ge number of property names in (at least) most common resources, RDF will achie ve more widespread use. For example, RDF schemas shou ld be implemented for repre-senting non-te xtu al files lik e image, audio, and video files. At present, littl e work has been done to handle the RDF represen-tation of audio properties of a file. Similar to the photo man-agement project [33] described earlier , technical schemas can be develo ped for audio and video files. This will help in repre-senting audio files in a structured and uniform frame work and will further help in querying and retrie ving information from these files.
 The basic purpo se of developin g a metadata description frame-work, lik e RDF , is to develop a global Semantic Web. At present, RDF is gaining its momentu m and its applications are being developed and commercially validated. It opens up a new structured outlook toward the Web data, the organization of the Web data, and importance of metadata. If the Semantic Web is realized, it will have a major impact on how kno wl-edge and information managed . But, both RDF and Semantic Web have long ways to go. At this stage, as this surv ey sho ws, most of the work are at their initial phases. Solutions to practi-cal issues, such as security , ease of use, compatibility , will be crucial in the success of RDF . The conclusion dra wn from the abo ve is that the future of RDF is bright, its research and devel-opment opportun ities are abunda nt, with RDF and XML, the next generation of the Web will be more organized, informa-tive, searchab le, accessible, and useful. We anticipate that the work and research of RDF and Semantic Web can significantly help in resource cate gorization, search and retrie val, data se-lection and reduction [36], therefore will ine vitably impact on data mining and web mining, as well as on e-commerce and e-b usiness. [1] Algae Ho wto. http://www .w3.or g/1999/02 /26-[2] Netscape, the Ne xt Generation  X  X urora X  Ov ervie w. [3] R. Baeza-Y ates and B. Ribeiro-Neto. Mor den Informa-[4] D. Beck ett. The design and implementation of the red-[5] T. Berners-Lee. The semantics toolbox: [6] T. Berners-Lee, J. Hendler , and O. Lassila. The Semantic [7] T. Berners-Lee, D. Kerger , L. Andrea-[8] D. Brickle y. Netscape, RDF: Aurora, 1999. [9] D. Brickle y. Rdf: Related links SIGKDD Explorations. Volume 3, Issue 1 -page 17 [10] D. Brickle y and R. Guha. Resource Description [11] S. Brin and L. Page. The anatomy of a lar ge-scale [12] J. Broekstra, M. Klein, S. Deck er, D. Fensen, F. Hame-[13] S. Chakrab arti. Data mining for hyperte x: A tuto-[14] M. Curtin and D. Ellison, G. ad Mon roe. What X  s [15] R. Daniel. A propo sal for an RDF API, 1999 . [16] Dublin Core Metadata Editor (DCDO T), 2000 . [17] S. Deck er, D. Brickle y, J. Saarela, and J. An-[18] S. Deerwester , S. Dumais, G. Furnas, T. Landauer , and [19] Dublin Core Initiati ve And Metada ta Element Set. [20] U. Fayyad, G. Piatetsk y-Shapiro, and P. Smyth. From [21] K. Forsber g and L. Dannstedt. Extensible use of RDF in [22] R. Guha. rdfDB: An RDF database. [23] R. Guha and T. Bray . Meta content frame work using [24] E. Harold and W. Means. XML in A Nutshell . O X  X eilly , [25] R. Heery . What is RDF. Ariadne Ma ga zine , March, [26] J. Hendler . Agents and semantic Web . IEEE Computer , [27] R. Hoque. XML for Real Programmer s . Moo rgan Kauf-[28] Jena -A Java API for RDF. http://www-[29] C. Jenkins, M. Jackson, J. Burden, and J. Wallis. Auto-[30] G. Klyne, F. Re ynolds, C. Woodro w, and H. Ohto. [31] S. Kokk elink. CARA Perl RDF-AP I-free softw are [32] R. Kosala and H. Block eel. Web mining research: [33] Y. Lafon and B. Bos. Describing and Retrie ving Photos [34] O. Lassila. Introduction to RDF metadata. W3C NO TE [35] O. Lassila and R. Swick. Resource Description Frame-[36] H. Liu and H. Motoda. Data reduction via instance selec-SIGKDD Explorations. Volume 3, Issue 1 -page 18 [37] M. Marchiori and J. Saarela. Towards the Seman-[38] P. Mar golis. Computer &amp; Internet Dictionary . Random [39] S. Melnik. Generic Interoperability Frame work (GINF) [40] S. Melnik. RDF API Draft. http://www-[41] S. Melnik. RDF API 1.0 draft, 2000 . http://www-[42] S. Melnik. Storing RDF in relational database, 2000 . [43] E. Miller . An Introduction to the Resource Description [44] L. Miller . Inkling architectural overvie w, 2001 . [45] L. Miller . Inkling: RDF query using SquishQL, 2001 . [46] L. Page, S. Brin, R. Motw ani, and W. T. The PageRank [47] RDF .NE T. http://injektilo.or g/rdf/rdf.net.html. [48] RDF technical overvie w. [49] UK OLN, Web-focus RDF [50] Resource disco very unit of DSTC, Re ggie the metadata [51] F. Re ynolds, J. Hjelm, S. Da wkins, and S. Singhal. [52] L. Seligman and A. Rosenthal. XML X  s impact on [53] Web design issues: What a semantic Web can represen t. [54] J. Sri vasta va, R. Coole y, M. Deshpand e, and P.-N. Tan. [55] XML Schemas, 2001. http://www .w3.or g/XML/S chema.
