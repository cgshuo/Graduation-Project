 Many systems in nature and human society take the form of networks with community structures. In this paper, we de-scribe a simple algorithm COCD ( C lique-based O verlapping C ommunity D etection) to efficiently mine the overlapping communities in large-scale networks, which is useful for us to have a better understanding of the nested sub-structures embedded in the whole network.
 Categories and Subject Descriptors: H.3.3 General Terms: Algorithms, Experimentation, Performance, Theory Keywords: Complex Networks, Community Detection, So-cial Network Analysis.
In recent years, a wide range of successful algorithms[5] from various disciplines were developed to discover the com-munity structures[6] that vertices within the communities have higher density of edges than the vertices among them. These methods assume that communities are separated, plac-ing each vertex in only one cluster. However, as mentioned in [7], most real networks are made of overlapping and nested community structures. As a result, most existing algorithms can not detect them directly. Only a few methods[4][8][7] can uncover the overlapping community structures, yet for [4] and [8], they are generally not efficient enough and have the resolution limit[2] problem in real networks; for [7], it uses its own, specific definition of the community structure, and the set of all the discovered communities usually can not cover all the vertices of the whole network. Therefore, to overcome these shortages, we design a simple but efficient algorithm by a local optimization strategy, which does not suffer from the resolution problem, and does not require any priori knowledge about the communities X  number or other related thresholds to assess the community structures.  X 
This work is supported by the National Science Foundation of China under grant numb er 60402011, an d the National Eleventh Five-Years Science and Technology Support Plans under Grant No .2006BAH03B05. It is al so supported by IBM China Research Laboratory, the Specialized Research Fund for the Joint Laboratory between Beijing University of Posts and Telecommunications, and IBM China Research Laboratory(Project No.JTP20071002-4,JTP200806014-3)
Instead of dividing a network into its most loosely con-nected parts, COCD identifies the communities based on the most densely connected parts, namely, the cliques [1][3]. We treat each group of highly overlapping maximal cliques as a clustering core. Surrounding each core, we build up the communities until each vertex in the network belongs to at least one community.

In this paper, we consider simple graphs only, i.e., the graphs without self-loops and multi-edges. Given graph G , V ( G )and E ( G ) denote the set of its vertices and edges E ( G ) } ,wecall N ( v ) the neighbor set of v .Givenset S V ( G ) ,N | S = bors of S .For  X  v i , C i  X  C is the set of all maximal cliques containing v i . C i is thus called the social cycle of v is the center of C i . G i and G j are the subgraphs induced on C i and C j respectively. We use E bet ( G i ,G j )todenote the set of edges between them, and I ij to represent the set of the common vertices shared among them.

Then, the influence that G i puts on G j is formulated |
V ( G i ) | / | V ( G j ) | ,if | V ( G i ) | &gt; | V ( G  X  is the weighted parameter which considers the influence tices of G i usually could have much more connections with the vertices of G j , which will put more  X  X ravitation X  on G A Closeness Function is then defined as isClose ( G i ,G j as C j &lt;C i ); otherwise, they are independent of each other. The set of all the cores is denoted as Core . Algorithm 1 de-scribes the process to find the cores. Once all the cores have been detected, we carry out a clustering process to associate the left vertices to their closest cores that they have the most connections with. Since that any vertex v i might have the same number of connections with more than one core, v i can thus be assigned to multiple cores simultaneously. The clustering continues until all the vertices are covered.
We use an efficient algorithm Peamc [3] which is optimized particularly on large sparse graphs ( | V ( G ) | X  X  E ( G ) the maximal cliques. It costs O ( X   X  M C  X  Tri 2 )intheworst case on a single processor, where  X  is the maximal degree of G , M C is the size of the maximum clique and Tri is the number of all triangles in G . For the core formation, we need to traverse all the elements of C whose size is larger than 2, which will cost O (max( | V ( G C i ) | )  X | C | 2 E ( G ) | Overlap Vad Time(s) Communities |C| Algorithm 1 CoreF ormation ( C ) 1: Core  X  X  X  2: sort C by the descending order of | C i | ,C i  X  C 3: { center stores the centers of the filtered out cores } 4: center  X  X  X  5: for C i  X  C do 6: contained  X  C j ,j = i, C j &lt;C i 7: independent  X  k, k = i, C k  X  C i 8: delete C i from C 9: C  X  C  X  contained 10: for s  X  C i do 11: if s  X  ( independent  X  center ) =  X  then 12: delete s from C i 13: end if 14: end for 15: if C i =  X  then 16: put C i to Core 17: end if 18: put v i to center 19: end for 20: return Core the left vertices to the cores, where I is is the average times to repeat until all vertices are covered. On small-world net-works, I  X  6. Because real networks are often sparse graphs, we have | V ( G ) | X  X  E ( G ) | , | C | &lt; | V ( G ) | | V ( G ) | &lt;Tri 2 | V ( G ) | 2 ,and X   X  M C &lt; max( | C k  X  Core .Let C M denote the maximum size of the dis-covered communities. COCD will cost O ( C M  X  Tri 2 )inthe worst case. COCD is evaluated on real-world networks[9] shown in Table 1. For the separated community structures, the qual-ity of a community is usually assessed by the modularity measure[6]. However, there is no widely accepted alterna-tive measure for use with overlapping communities, but a promising candidate is the vad (vertex average degree)[4] of a set of communities C defined as Another useful measure is the overlap of a set of communities C : the sum of the cluster sizes divided by the size of the union of all clusters. We use Peamc [3] to enumerate the maximal cliques on large sparse graphs. On the dense E-PRINT CITATION NETWORK, we use an improved BK algorithm[1] to find the maximal cliques. All experiments are done on a single PC (3.0GHz processor with 2Gbytes of main memory on Linux AS3 OS). The execution time of COCD includes both of the clique finding time and the community detection time .

We can observe an interesting phenomena that the Overlap values of CELLPHONE NETWORK, WORD ASSOCIA-TION NETWORK, and E-PRINT CITATION NETWORK are much higher than those of the other networks. One rea-son we believe is that it results from the different types of the links in the network. For CELLPHONE NETWORK, people can contact with each other due to various reasons, so single link can represent the family relationship, student relationship, colleague relationship, etc. Therefore, an in-dividual tends to belonging to multiple communities. Simi-larly, in WORD ASSOCIATION NETWORK, it is common for a word to have many meanings, each of which may cor-responds to one community. For the E-PRINT CITATION NETWORK, one article may be cited by other articles com-ing from different fields because of the interdisciplinary col-laborations. Each community may represent one possible research filed, so each paper is probably involved in multiple communities. As for the other networks of Table 1, vertices in these networks often interact with each other for only one simple relationship, so their Overlap values are much lower.
