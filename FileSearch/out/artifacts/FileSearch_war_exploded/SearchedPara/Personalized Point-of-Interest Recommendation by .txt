 Location-based social networks (LBSNs) offer researchers rich data to study people X  X  online activities and mobility patterns. One important application of such studies is to provide personalized point-of-interest (POI) recommenda-tions to enhance user experience in LBSNs. Previous so-lutions directly predict users X  preference on locations but fail to provide insights about users X  preference transitions among locations. In this work, we propose a novel category-aware POI recommendation model, which exploits the tran-sition patterns of users X  preference over location categories to improve location recommendation accuracy. Our approach consists of two stages: (1) preference transition (over lo-cation categories) prediction, and (2) category-aware POI recommendation. Matrix factorization is employed to pre-dict a user X  X  preference transitions over categories and then her preference on locations in the corresponding categories. Real data based experiments demonstrate that our approach outperforms the state-of-the-art POI recommendation mod-els by at least 39 . 75% in terms of recall.
 H.3.3 [ Information Search and Retrieval ]: Information filtering Algorithms, Performance Location-Based Social Networks, Point-of-Interest, Recom-mendation, User Preference By aggregating the check-in data of millions of users, the LBSN has become a promising platform for studying users X  online activities and mobility patterns. A lot of applications can be built on the basis of such studies (e.g., monitoring disease spread and traffic congestion), among which recom-mending personalized POIs to individual users is of par-ticular interest, and has recently received a lot of research attention. For example, Ye et al. [10] and Cheng et al. [1] employed collaborative filtering to recommend POIs, taking into account geographical and social influence.

However, most existing approaches directly predict a user X  X  preference on a location but fail to deeply investigate the essence of transitions of a user X  X  preference on locations (e.g., why a user checks-in at a restaurant after work on Monday but checks-in at a stadium on Friday? Do such preference transitions have any predictable patterns? What factors in-fluence a preference transition?). Failing to handle this im-portant issue leads to inaccurate POI recommendation, since it is very challenging to accurately predict the next location from a huge candidate pool, and in particular, when input information is sparse, which is very common in LBSNs.
In order to improve the accuracy of POI recommenda-tion, we investigate the patterns of users X  preference tran-sitions over location categories. In LBSNs, POIs are typi-cally organized by a hierarchical category tree. For instance, Foursquare offers a 3-level category hierarchy where top level consists of night life , food , etc., and lower level consists of bar , pub , Japanese food , coffee , etc. Intuitively, such cat-egory information indicates the semantic meaning of a lo-cation, so a user X  X  check-in at a given location reflects her preference on the corresponding category. Following previ-ous work [4], we assume users X  next check-in locations de-pend on their current locations. By studying patterns of users X  preference transitions over location categories, we are able to infer the categories of their next check-in locations. And since bounded to specific categories, POI recommenda-tions can be more accurate compared to traditional solutions where no category information is considered.

Theoretically, if a user has sufficient historical check-in data, her preference transitions can be reliably predicted [2, 7]. However, in a real world LBSN, users X  check-in data is of-ten sparse. Furthermore, even if a user has enough check-in data, she often presented new preference transitions. Such issues make traditional solutions (e.g., Markov model) in-effective for preference transition prediction. Therefore, we apply collaborative filtering to learn a user X  X  transition pat-terns by leveraging other similar users X  transition patterns. Similar users are clustered based on their check-in frequency in different categories, taking into account temporal effects. For each cluster, matrix factorization (MF) is used to predict a user X  X  preference transitions.

Once the top-K 1 most likely categories of a user X  X  next check-in are predicted, we apply another matrix factoriza-tion to predict a user X  X  preference on locations in the K categories. By studying check-in data from a real LBSN, we found that the displacement from a user X  current location to the next one follows power-law distribution. We thus combine such geographical influence and users X  preference on locations to make the top-K 2 POI recommendations in each category, producing top-( K 1  X  K 2 ) POIs for a target user given her current check-in information.

The contributions of this work are as follows: (1) To have a better understanding of a user X  X  preference transitions, we propose the concept of story to structure her check-in activi-ties. In a story, two consecutive check-in activities happened within a predefined time interval, thus are better correlated with each other. (2) Due to data sparsity of individual users, we propose to cluster similar users for accurate POI recom-mendation, taking into account both category information and temporal effects. (3) For each user cluster, we apply MF to predict the possible categories of a user X  X  next check-in location, given the category of her current location. (4) Once the possible categories of next check-in locations are inferred, we again apply MF to predict a user X  X  preference on the locations in the corresponding categories, consider-ing geographical influence. (5) We evaluate the performance of the proposed POI recommendation method on real data collected from Gowalla. Experimental results show that our approach significantly outperforms the state-of-the-art solu-tions by at least 39.75% in terms of recall.
Motivated by its success in traditional recommendation scenarios (e.g., movie recommendation), collaborative filter-ing has been widely applied to POI recommendation. In [10], the geographical influence was captured by assuming a power-law distribution of a user X  X  check-ins. A fused rec-ommendation framework was proposed to incorporate the user preference, geographical and social influence into one recommendation process. Moreover, the work [1] studied users X  multi-center check-in behavior and proposed a Multi-center Gaussian Model (MGM) to capture the geographi-cal influence. Then, a matrix factorization model was fused with social and geographical influence for POI recommenda-tion. Additionally, POI recommendation has also been col-lectively studied with other recommendation tasks (e.g., ac-tivity recommendation). For instance, Zheng et al. [11] pro-posed three collective tensor and matrix factorization models to provide personalized POI and activity recommendation.
Modeling users X  mobility using Markov model is another popular method for POI recommendation. In [7], an hybrid method for predicting users X  mobility using Hidden Markov Models (HMMs) was proposed. Users X  location histories were clustered according to their characteristics, and for each cluster, a HMM was trained, treating location char-acteristics as unobservable parameters. In [2], a mobility Markov chain was built for individual users to keep track of a set of previous locations visited. Each state corresponds to a frequent POI (ranked by decreasing order of importance). The next location was predicted based on observations of a user X  X  mobility behavior over certain time periods and the recent locations that she has visited.

Most existing Markov model based approaches are evalu-ated using GPS datasets which are typically of small sizes, but are very dense. On the other hand, LBSNs have mil-lions of users but most users X  X  location data is sparse. So Markov model based approaches may not produce accurate POI recommendation in LBSNs (as demonstrated in Section 4). Although our approach also assumes Markov property, we apply matrix factorization to handle large-scale POI rec-ommendation with sparse input data.

Besides collaborative filtering and markov model, other machine learning techniques are also applied to recommend POI. In [8], the authors identified a set of relevant features from three aspects: (1) user mobility features, including his-torical visits, social influence, etc.; (2) global mobility fea-tures, including total number of check-ins at a location, ge-ographical distance, etc.; (3) temporal features, including the number of check-ins at a location of certain category in a given hour, etc. Linear ridge regression and M5 decision trees, were applied to generate POI recommendation.
We denote a set of LBSN users by U = { u 1 , u 2 , ... } , a set of locations by L = { l 1 , l 2 , ... } . C denotes the category tree, C l denotes the vector of categories at level l , and c l i denotes the i th category at level l (see Fig. 1 as an example).
In order to better understand users X  preference transition patterns, different from previous work (e.g., [4]) that stud-ied users X  check-in behavior in a whole day, we split a user X  X  check-in history into several non-overlapping sequences ac-cording to the time interval between two consecutive check-ins. Specifically, if two consecutive check-in activities hap-pened within a time interval  X  t (e.g., 6 hours 1 ), they are assigned to the same sequence, which is defined as a story . Note that  X  t is used to determine if two consecutive check-ins are clustered, but is not used to constrain the length of a story, i.e., the time difference between the first and last check-in may be longer than  X  t . Fig. 2 shows an exam-ple of a user X  X  stories. It is believable that the consecu-tive check-in activities in a story are better correlated with each other (semantically meaningful) than those in differ-ent stories. For instance, a check-in at pub often follows a check-in at restaurant in the evening. On the other hand, a check-in at bus stop in the early morning and a check-in 1 The parameter  X  t is application-dependent and can be cho-sen by analyzing user X  X  behavior. In our experiments, 6-hour is a suitable value to achieve accurate recommendation. at gym in the late afternoon, although are consecutive, are less correlated. In our approach, we focus on studying pref-erence transitions happened within stories, by which users X  preference transitions over location categories can be more meaningfully predicted, thus increasing the accuracy of POI recommendation.
By leveraging other similar users X  preference transition patterns, collaborative filtering is a promising method to improve the accuracy of preference transition prediction. Therefore, it is important to cluster users based on the sim-ilarity of their check-in behavior (preference), so as to make collaborative filtering based predictions more accurate [6].
Firstly, we identify a set of features to describe a user X  X  check-in behavior from the temporal distribution of her check-in frequency in each location category. The temporal infor-mation is considered from two aspects: the hours of the day and the days of the week. Specifically, we partition a day (24 hours) into working hours (from 08:00am to 17:59pm) and leisure time (from 18:00pm to 7:59am of the next day), and divide one week (7 days) into weekdays (from Mondays to Fridays) and weekends (Saturdays and Sundays). For each temporal period, we derive a user X  X  check-in frequency in each location category. If there are | C l | ( l indicates the level of category) categories, we finally have 4  X | C l | check-in frequency, which can be used as features to characterize her check-in behavior.

Secondly, we apply k -means clustering algorithm to clus-ter users into G groups {U g } G g =1 . The k -means clustering algorithm is applied due to its simplicity (i.e., suitable for large-scale LBSN with millions of users). More sophisticated clustering algorithms (e.g., expectation-maximization algo-rithm) can also be applied, but the discussion on the tradeoff between the improved clustering quality and the increased computational complexity is beyond the scope of this work.
For each user cluster U g  X  U , we apply matrix factoriza-tion, the state-of-the-art collaborative filtering technique for recommendation [3, 5], to predict the probability that a user would follow a given preference transition, based on the cate-gory of current POI. The input data to matrix factorization is a transition probability matrix P  X  R |U g | X | C l | 2 represents the probabilities of users X  preference transitions, where | C l | denotes the number of categories at category level l . These probabilities are derived from users X  past check-in activities in corresponding location categories. By applying matrix factorization, the transition probability matrix P is factorized into one user specific matrix U  X  R k  X |U g | and one preference transition specific matrix V  X  R k  X | C l | 2 , where k is the dimensionality of the latent factor vector (each col-umn of U or V ) that characterizes the corresponding user or preference transition:
For a user u , her latent factor vector (i.e., U u ) measures the extent of u  X  X  preference on transitions which have high values on the corresponding latent factors; for a preference transition v (e.g., c l a  X  c l b ), its latent factor vector (i.e., V measures the correlation between v and the corresponding latent factors. Therefore, the resulting U T u V v captures the correlation between user u and preference transition v (i.e., the predicted probability of u  X  X  preference on transition v ). In order to accurately approximate the probabilities that users would follow certain preference transitions, the objec-tive function of matrix factorization is defined as follows: min where I uv is 1 if user u has preference transition v , and 0 otherwise.  X  ( k U k 2 F + k V k 2 F ) is a regularization term to avoid overfitting. k . k 2 F denotes the Frobenius norm.
Once the MF model is built, given the target user u and her current POI X  X  category c l a , we predict the probability that she will check-in at a POI with category c l b as: where v denotes the preference transition c l a  X  c l b . | C dictions are obtained and we rank these location categories in descending order based on the predicted probabilities. We choose top-K 1 most likely categories for personalized POI recommendation that will be elaborated in the next section.
In order to recommend a list of POIs that are likely to interest users, we consider two factors that influence users X  check-in behavior. The first one is users X  preference on POIs. By inferring possible categories of the next check-in POI, the prediction of a user X  X  preference becomes more focused (i.e., only POIs in the corresponding categories are consid-ered), which means the preference can be more reliably pre-dicted. The second one is geographical influence. For in-stance, although a user often visits a Japanese restaurant, if her current location is far away from that restaurant, she may choose a nearby restaurant instead.

Previous study about users X  check-in behavior in LBSNs has demonstrated that a considerable fraction of users X  check-ins are generated at POIs which were never visited before [9]. Similar to the preference transition prediction, we again apply matrix factorization to predict a user X  X  preference on a given POI, taking into account other similar users X  pref-erence. The input matrix P 0  X  R |U g | X |L| represents users X  preference on POIs where the preference is derived as the corresponding user X  X  normalized check-in frequency (  X  [0 , 1]) at a certain POI. Eq. 2 can be reused to factorize P 0 into one user specific matrix e U  X  R k  X |U g | and one POI specific matrix O  X  R k  X |L| , such that P 0  X  e U T O , where k is the dimensionality of the latent factor vectors that characterize users and POIs. The probability that the target user u likes a given POI o is determined by: where e U u  X  R k  X  1 and O o  X  R k  X  1 are the latent factor vectors of the target user u and the target POI o respectively.
By studying the real check-in data, we found users X  dis-placements (distance between two consecutive check-in loca-ing nearby venues but traveling to farther POIs is also likely. Based on this observation, we model a user X  X  check-in prob-abilities to displacements using a power-law distribution: where p d is the probability that the user will check-in at a POI, and D is the displacement between the user X  X  current POI and that POI. a (a normalizing constant) and b (a decay exponent) are power-law distribution parameters. In prac-tice, a lower bound D min is needed such that values larger than D min follow power-law property. After calculating the normalizing constant, Eq. 5 can be rewritten as:
By applying maximum likelihood method, the decay ex-ponent b can be estimated as follows: where D i (  X  D min ) are observed displacements of the user.
By inferring users X  preference on POIs and their person-alized mobility patterns (with power-law property), we fuse these two factors to derive the probability that the target user u will check-in at a POI o : where p p uo is calculated by Eq. 4 and p d uo is calculated by Eq. 6. Note that only POIs in the corresponding categories (predicted in Section 3.2) are considered.

In preference transition prediction stage, we chose top-K possible categories of the next check-in POI. For each cat-egory, we sort relevant POIs according to the probabilities that they will be visited (by Eq. 8). We then choose top-K 2 POIs with the highest probabilities for each category to construct a recommendation list of totally K 1  X  K 2 POIs for the target user.
The experimental data prepared for this study was col-lected from Gowalla, a popular LBSN, which has more than 600,000 users since November 2010 and was acquired by Facebook in December 2011. We collected users X  check-in data (longitude, latitude, timestamp, categories, etc.) gen-erated before June 1, 2011 in the following cities: Austin, Chicago, Houston, Los Angeles and San Francisco. The statistics of the data are summarized in Table 1, in which N u denotes the number of users, N l denotes the number of locations, N c denotes the number of check-ins, e N u denotes the average number of visited users for a location, and e used to denote the average number of visited locations for a user. Moreover, we have also collected the category of each observed location. Locations in Gowalla are grouped into 7 main categories, i.e., Community, Entertainment, Food, Nightlife, Outdoors, Shopping and Travel. In each main category, the locations are classified into different subcate-gories (there are totally 134 categories at the second level). Chicago 13,845 37,050 486,558 7.53 20.16 Houston 11,138 29,383 512,977 9.89 26.08
For each user, we sort her check-ins in chronological order and select the first 70% of check-ins to construct the train-ing data to predict the remaining 30% check-ins. For each algorithm in comparison, we run ten times and report the average results.

We compare our approach with the following state-of-the-art recommendation models: (1) BasicMF . To start with, we use a basic MF model as the baseline (prediction us-ing Eq. 1). This model only considers the user preference for POI recommendation, without taking into account other auxiliary information (e.g., geographical, social, and tem-poral information). (2) GeoCF . In this approach [10], the geographical influence is considered (by assuming a power-law distribution) and integrated with a user-based collabo-rative filtering algorithm. A unified POI recommendation framework is proposed to linearly combine the user prefer-ence and geographical influence. (3) MGMMF . This ap-proach [1] applies Multi-center Gaussian Model (MGM) to study users X  multi-center check-in behavior. This is based on the observations that users tend to check-in around several centers, where the check-in probability follows a Gaussian distribution at each center. A fusion framework is proposed to fuse the user preference and MGM based check-in proba-bility to recommend POIs. (4) Markov . In [2], by applying mobility Markov chain (each state corresponds to a frequent POI), a user X  X  next location is predicted based on the obser-vations of her mobility behavior over certain temporal period and the recent locations that she has visited. (5) ML . This approach [8] identifies a set of features (e.g., user mobility features, global mobility features, temporal features) to de-scribe users X  check-in behavior. M5 decision tree is applied to predict the next POIs of a user.

To measure the accuracy of POI recommendation, we use two standard metrics: Precision@ K and Recall@ K [10, 1]. Specifically, we say a POI is successfully predicted if it is in the recommendation list. Precision@ K defines the ratio of successfully predicted POIs to the K recommendations, and Recall@ K defines the ratio of successfully predicted POIs to the number of POIs to be predicted (i.e., the size of test set). We will demonstrate how the performance of recom-mendation models varies with different values of K .
We first study how the precision and recall of our prefer-ence transition prediction varies with different sizes of the recommendation list (i.e., top-K 1 ). From Fig. 3 we observe the larger the recommendation list size, the higher the recall is. This is because larger recommendation list size increases the probability that a user X  X  next check-in is hit by one of the recommended POIs. For example, the recall reaches 0 . 9 (even higher) at level 1 categories, when K 1 is set to 5. At level 2 categories, the lowest recall is still higher than 0 . 4 (c) Recall (level 2). in San Francisco data, and in Houston data, it is as high as 0.6. This demonstrates that users X  preference transition can be accurately predicted, which prepares a good basis for the personalized POI recommendation at the next stage. Table 2: Performance of different components (top-2 categories, top-3 POIs) U Preference 0.1907 0.0318 0.2320 0.0387 Geo Influence 0.0719 0.0120 0.0892 0.0149 Both factors 0.2354 0.0392 0.2955 0.0492
Once possible categories of the next POI are predicted, a list of POIs (in the corresponding categories) are recom-mended by considering two factors: user preference and geo-graphical influence. In Tab. 2, we report the accuracy of our approach with respect to (1) considering only the user pref-erence, (2) considering only the geographical influence, and (3) considering both the user preference and geographical influence. Note that we select top-2 most likely categories (preference transition prediction) and for each category we recommend top-3 most likely POIs. Obviously, combining the two factors achieves the best performance. When only one factor is considered, we observe that the user preference plays a more important role: with respect to the scenario where only the geographical influence is used, the precision and recall is improved by around 165% at category level 1 and around 160% at category level 2.

Finally, we study the impacts of recommendation list size on both preference transition prediction (top-K 1 categories) and category-aware POI recommendation (top-K 2 POIs). We choose the values of K 1 and K 2 from 1 to 5, and form 5*5 combinations in total. Fig. 4 shows the recall and pre-cision with respect to different combinations of K 1 and K at both category level 1 and level 2. As expected, the gen-eral trend is that the larger the value of K 1  X  K 2 , the higher the recall and precision are. We observe that the advantage of considering a certain category level for POI recommenda-tion varies with different K 1  X  K 2 combinations. For instance, when K 1 = 3 and K 2 = 3 are applied, POI recommendation at category level 2 is more accurate (higher recall) than that at category level 1; while when K 1 = 3 and K 2 = 5, POI recommendation at category level 1 is more accurate. We also observe when the value of K 1  X  K 2 is fixed, different values of K 1 and K 2 (e.g., 3*5 versus 5*3) generates slightly different performance. So in the following experiments, we choose the optimal settings of the category level and K 1 combination to maximize the recommendation accuracy.
Tab. 3 summarizes the performance of all recommenda-tion models in individual cities. Top-6 POIs are recom-mended by each model. In particular, for our approach, category level 2 is considered; K 1 and K 2 are set to 2 and 3 respectively. Surprisingly, although it is one of the most accurate algorithms for recommendation tasks, BasicMF in-curs the lowest recall and precision. This is because MF is effective when users provide explicit ratings (e.g., on 5-point likert scale), but for POI recommendation, only check-in fre-quency is provided, which cannot accurately reflect a user X  X  real interests in locations. The Markov model achieves bet-ter performance than BasicMF, but it is still much less accu-rate than other methods. The reason is that Markov models are typically designed for the mobile scenario where individ-ual X  X  mobility data is dense (e.g., GPS location data), such that a reliable Markov predictive model can be built. How-ever, in LBSNs, users X  location data is very sparse, thus greatly degrading the accuracy of Markov model. In con-trast, GeoCF, MGMMF and ML are particularly designed for LBSNs. By integrating the geographical influence into collaborative filtering, GeoCF and MGMMF outperform ML, demonstrating the benefits of combining the geographical information and user preference for POI recommendation. Although ML also considers the geographical influence, it is used as a single feature, and is combined with other fea-tures using supervised learning algorithms, without deeply exploiting the correlation with other factors. In all cities, our approach consistently and significantly outperforms all other models, demonstrating the advantage of our two-stage ap-proach. We also observe that the accuracy of recommenda-tion in different cities varies a lot. For example, the recall@6 in Chicago data is 85 . 55% higher than that in Austin data. This is probably due to the different user populations and check-in behavior patterns in different cities.
Finally, we show the performance of all recommendation models with varying recommendation list size in Fig. 5. Note that the results are averaged across all cities. Ob-viously, for all models, larger recommendation list size in-creases the recall but decreases the precision, which is con-sistent with previous experimental results (see Fig. 3 and 4). The maximum recommendation list size is set to 20, as larger size may affects the effective interactions between a user and the LBSN via mobile devices. Again our ap-proach outperforms all other recommendation models when different list sizes are applied. In summary, our approach outperforms GeoCF, MGMMF, Markov and ML by 39 . 75%, 54 . 40%, 119 . 16%, and 78 . 72% respectively, in terms of recall.
In this work, we decompose the process of POI recom-mendation into two stages: (1) we predict a user X  X  prefer-ence transition (over POI categories) based on her check-in behavior. (2) Once possible categories of the next POI are predicted, a set of POIs in the predicted categories are rec-ommended, taking into account both the user preference and geographical influence. Our two-stage POI recommendation approach improves the accuracy of POI recommendation via deeply understanding users X  preference transition patterns and shrinking the POI candidate list size. Extensive exper-iments on real data demonstrate that our approach signifi-cantly outperforms other state-of-the-art POI recommenda-tion models in different settings. As for the future work, we plan to incorporate users X  textual comments (e.g., tips in Foursquare) to further improve the prediction accuracy of users X  preference on POIs.
This work was partially supported by (1) the grant Recon-cile: Robust Online Credibility Evaluation of Web Content from Switzerland through the Swiss Contribution to the en-larged European Union, and (2) the Interactive and Digi-tal Media Programme Office (IDMPO), National Research Foundation (NRF) hosted at Media Development Authority (MDA) under Grant No.: MDA/IDM/2012/8/8-2 VOL 01. [1] C. Cheng, H. Yang, I. King, and M. R. Lyu. Fused [2] S. Gambs, M.-O. Killijian, and M. N. n. del [3] Y. Koren, R. Bell, and C. Volinsky. Matrix [4] W. Li, C. Eickhoff, and A. P. de Vries. Want a coffee?: [5] X. Liu and K. Aberer. Soco: A social network aided [6] H. Ma, H. Cao, Q. Yang, E. Chen, and J. Tian. A [7] W. Mathew, R. Raposo, and B. Martins. Predicting [8] A. Noulas, S. Scellato, N. Lathia, and C. Mascolo. [9] A. Noulas, S. Scellato, N. Lathia, and C. Mascolo. A [10] M. Ye, P. Yin, W.-C. Lee, and D.-L. Lee. Exploiting [11] V. W. Zheng, Y. Zheng, X. Xie, and Q. Yang.

