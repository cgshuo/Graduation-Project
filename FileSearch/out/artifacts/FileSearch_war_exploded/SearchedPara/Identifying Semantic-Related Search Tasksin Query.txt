 Detecting user intents in queries is cru cial for search engines to better satisfy users X  information need. Usually users m ay issue multiple related queries to ac-complish one search task [7], e.g. multiple queries  X  X agnolia junior high X  and  X  X hino high school X  may belong to the same search task for looking for  X  X chools in the City of Chino X . Identifying search tasks could help search engines to bet-ter understand user intents. Many works have been proposed to identify search tasks, but long-term and semantic-related search task identification has not been well studied. Search tasks are often intertwined [11], and may span from seconds to days [2]. For example, the search task  X  X rip planning X  can span many days. During this period the user may issue many queries of other search tasks. To our best knowledge, existing technologies do not work well to identify such long-term search tasks [3,9,8]. Because of the sparsity of clicks and lexical features of query log, queries triggered by the same semantic-related search task may share few common terms or clicked documents. Ident ifying long-term and semantic-related search tasks is difficult. Firstly, it is not straightforward how to exploit semantic information. It is also difficult to combine properly both semantic and lexical features between pair-wise queries. Secondly, search tasks may span widely, so annotators have to check all the queries issued by the same user, in order to la-bel sufficient semantic-related queries fo r learning a distance function. Labeling large-scale queries is expensive, therefor e the distance function between pair-wise queries has to be learned from a small set of labeled data. It is prone to suffer the over-fitting problem.

To address the above challenges, this paper exploits semantic information properly and learns an optimal distance function between pair-wise queries. Firstly, this paper extends respectively named entities and their contexts in user queries with semantic information. I n most cases, queries containing named entities of the same category tend to belong to the same search task, this paper exploits the category of named entities to regularize the learning of the dis-tance function. Semantic-related search tasks, i.e. query clusters, are identified by the hierarchical agglomerative clustering algorithm with the learned distance function.

The rest of the paper is structured as follows. Related work is discussed in Section 2. Then we formalize basic concepts of identifying semantic-related search tasks in Section 3. In Section 4, we introduce our approach to identify-ing semantic-related search tasks. In S ection 5, we present our experiments on commercial search log. Finally, we conclude our work in Section 6. The related work can be organized into the following two categories:
Query intent analysis has attracted substantial attention. User queries are often classified into three high-level intents: navigational, informational and transactional intents [4]. Recently, many works [6,12] attempted to exploit named entities to better understand user intent. Guo et al. [6] exploited the category of named entities to classify user queries. Yin et al. [12] built a hierarchical taxonomy of the generic se arch intents based on named entities. Recently the research on query intent of multiple queries such as query refinements [10] and search tasks [9] have also attracted much attention [5,1,8,2].

Search tasks identification was proposed by Jones et al. [9] in the setting of queries sessions d etection [3]. Jones et al. [9] determined the boundary of search tasks between chronologica l queries with a decision tree. Donato et al. [5] determined whether pairs of chronologically issued queries targeting the same search task. This approach could not deal with intertwined search tasks well. Aiello et al. [1] clustered the identified search tasks of different users into more general topics by the approach proposed in [5]. But this paper aims to discover more semantic-related search tasks a ccomplished by the same user. Lucchese et al. [8] clustered user queries in a time-sp lit session. They exploited both content features and semantic features in a straightforward way. The different impor-tance of terms and dependency among terms in queries is ignored. The semantic of queries might deform. Sadikov et al. [10] clustered refinements of a query ac-cording to different user intents. But th e intertwined search tasks could not be effectively identified. Boldi et al. [3] introduced the query-flow graph to represent query log. This model was used to separate the chronological queries into sets of related queries, named query chain, w ith three categories of features. Kotov et al. [2] modeled the user behaviors of cross-sessions search tasks. This work also showed the importance of identifying long-term search tasks. This section introduces the distance functi on and semantic-related features used for search task identification. 3.1 Distance Function Q denotes all the queries issued by a user. Search task T is a subset of Q . E de-notes the named entities set collected fr om collaborative knowledge bases, such as Wikipedia. Cat denotes the categories set of named entities. The category of a named entity could be denoted as cat ( e ). A user query q i  X  Q can be formal-any pairs of queries issued by a user. The function f : Q  X  Q  X  [0 , 1] denotes semantic-related distance between pair -wise queries. Given labeled semantic-related user query pairs, finding out the distance function f becomes the follow-ing optimal problem: where V is the loss function over the labeled data, such as squared loss for Reg-ularized Least Squares, H k is an Reproducing Kernel Hilbert space of functions with kernel function K , l is the size of labeled queries pairs, and  X  is the coef-ficient of regularization on the ambient space. This paper defines the distance function as a linear function about feature vector x  X  q between pair-wise queries. The solution of the minimization problem will be discussed in Section 4. 3.2 Entity Feature The features between pair-wise queries ca n be split into two parts: entity features and context features. The entity features used in the distance function are: Semantic Relevance of Named Entity. To get the semantic relevance feature between pair-wise named entities, it is n ecessary to use some external semantic sources, such as Wikipedia. Therefore we crawled and indexed the web pages from Wikipedia, built a search engine. The relevance between a named entity and all indexed documents constitutes the semantic feature vector for that entity. The semantic relevance between pair-wis e named entities is cosine similarity between the semantic feature vectors.
 Context Cluster Relevance of Named Entity. Named entities occurring in analogous contexts tend to t arget relevant tasks. But considering spelling errors in user queries, directly using context s of named entities will make the feature vector space very sparse. So the contexts o f entities are clustered. Each element of a context cluster feature vector for each named entity is P ( clu i | e ). The context clusters relevance between pair-wise named entities is cosine similarity of context cluster feature vector of each named entity. 3.3 Context Feature The context of a query is the remaining part of the query except the named entity. The semantic and lexical features of context are introduced as follows: Context Semantic Relevance. This paper also uses the vector model to build semantic feature vector for each context. Different with [8], this paper submits each context as a whole to the search engine. The semantic relevance between pair-wise contexts is cosine similarity between the semantic feature vectors. Context Lexical Distance. As illustrated in [9,8], the queries containing com-mon terms may target relevant search tas ks. This paper uses both Jaccard index on tri-grams and normalized Levenstein distance to represent lexical distance between pair-wise contexts respectiv ely, as suggested by the works [9,3]. This section introduces ou r approach for long-term S emantic-related search T asks I dentification ( STI ). The STI approach consists of two major steps: 1) Learning Distance Function: In the first step, STI learns an optimal dis-tance function. The distance function will be used to measure similarity between pair-wise queries when clustering user queries in the second step. 2) Clustering Semantic-Related Queries: At the second step, STI uses the hierarchical agglomerative clustering algorithm with the learned distance function to cluster user queries. The result ing query clusters are semantic-related search tasks. 4.1 Learning Distance Function As discussed in Section 3, learning a distance function can be transformed into solving an optimal problem (Eq. 1). Because it is difficult to label large scale search tasks, learning the distance function will suffer the over-fitting problem. Therefore, the entity category regularization is proposed. Entity Category Regularization. In most cases, queries issued by a user containing named entities of the same categories tend to be in the same search task, such as queries  X  X oyota radios X  and  X  X ord parts X  probably constitute the search task for maintaining a car. So regularizing a distance function with cat-egories of named entities does make sense. That is to say the semantic distance between pair-wise queries containing named entities of the same category may be close. The regularization of categor ies of named entities can be formalized as follows: where g (  X  q ) denotes whether the named entities contained in the query pair  X  q belong to the same category. N is the number of pair-wise queries.
 Distance Function Optimization. When minimizing the objection function (Eq. 1), the constraint of Eq. 2 must be satisfied. By leveraging the Lagrange multiplier and using sum of squared loss as the loss function, the object function can be reformulated as follows: where l is the number of labeled pair-wise queries, N is the total number of pair-wise queries, y i denotes the labeled value of semantic-related distance function,  X  is the coefficient of regularization in ambient space, and is the coefficient of same categories regularization. As above mentioned, the distance function is a linear combination of different features. So Eq. 1 can be reformulated as follows: where w is the parameters of the distance function.  X  X is a N  X  D matrix, the i -th row of  X  X denotes the feature vector between i -th pair-wise queries which containing named entities of the same category. D is the dimension of feature vector between pair-wise queries. Se tting the gradient of Eq. 4 to zero gives where X is a l  X  D matrix, which is usually named as design matrix. The i -th row of X is the feature vector between the i -th labeled pair-wise user queries. I is the identity matrix. Solving the Eq. 5 will get the optimal w  X  . 4.2 Clustering Semantic-Related Queries The hierarchical agglomerative clustering algorithm is used to cluster semantic-related queries with the leaned distance function. As illustrated in [10], the complete-link similarity of two sets of queries works best in query clustering setting. Therefore this paper uses the complete link similarity to merge different query clusters. The algorithm works by p icking each pair of query sets that have the highest value of complete-link similarity. If the similarity is greater than  X  , then merges the selected query sets. Th is proceeds until no more similar query sets are left. The resulting query clust ers are semantic-related search tasks. 5.1 Experiment Setup This section discusses our experiment data set, two extended state-of-the-art approaches to be compared with our approach STI and evaluation measures. Data Set. The 2006 AOL query log is used for experiment, in order to compared with related approaches tested by the same log. This query log consists of about 20 million of web queries issued by more than 650,000 users over 3 months. In order to learn the distance function, 200 pairs of queries random selected are labeled as semantic-related and 200 pair s of queries random selected are labeled as not-semantic-related. Named entiti es are collected from Wikipedia with the  X  X ist of * X  query such as  X  X ist of states in U.S. X .
 Extended State-of-the-Art Approa ches. 1) Query Chain Identifica-tion Boldi et al. [3] proposed an approach to identify the chains of queries, which are similar to search tasks. They used the logistic regression to learn the distance function between pair-wise queries. To compare with STI , we modify the approach, named as mQCI . 2) Search Task Discovery in Sessions The approach proposed in [8] was used to address task-based session discovery prob-lem ( TSDP ) in time-split sessions. It can not be used to identify long-term and semantic-related search tasks directly. Therefore we modified the approach to enable that all the queries issued by the same user will be included in for search tasks identification, named as mTSDP .
 Search Task Analysis. To compare different approaches, we use User Anno-tation and three measures (Time Span, Cohesion and Coverage) for evaluation. 5.2 Evaluation The user annotation results are presented in Table 1. Each evaluator is required to rate each identified search task as 1(P oor), 2(Bad), 3(Acceptable), 4(Good) or 5(Perfect) and indicates optionally whether an identified search task is under clustered or over clustered. According t o the result of user rating score, the differences among the three approached are statistically significant, and STI performs the best. The column of the ratio of under clustered search tasks shows that STI yields the least one. As showed by Fig. 1, the coverage of identified search tasks by STI is much higher than both mQCI and mTSDP .Thecolumn of the ratio of over clustered search tasks shows that STI yields the largest one. We now look at the reason that is likely to underlie the observed results. Both mTSDP and mQCI perform better to aggregate the misspelling queries, such as  X 800flowers X  and  X 1-800flower X  .But STI tends to yield long-term and more semantic-related search tasks than others, such as  X  X agnolia junior high X  and  X  X hino high school X  , which are not in the results of both mQCI and mTSDP . This is consistent with what Fig.1 and Fig. 2 shows.
 Method Average Under Over
STI 4.4 7% 10% mQCI 2.6 18.9% 5% mTSDP 3.8 17% 7%
Fig. 3 shows the impact of the entity category regularization, which has been discussed in Section 4.1. When learned the distance function with entity category regularization, the balance point of coverage and cohesion curves is 50% higher than that of without regularization. With regularization, the coverage of the identified search tasks is always higher. And when  X &gt; 0 . 6, the coverage and cohesion of identified search tasks with regularization are both higher than those of without regularization. The category regularization helps to overcome the over-fitting problem and reinforces that the queries containing named entities of the same category probably belong to the same search task.
 In this paper, we propose an approach to identifying long-term and semantic-related search tasks in query log. A distance function between pair-wise queries from the semantic-related point of view is learned with the entity category reg-ularization. Then, the hierarchical agglomerative algorithm is used to cluster semantic-related queries with the learned function. We compared our approach with two state-of-the-art ones. The result shows our approach outperforms the others significantly.

Our work can be further studied in two aspects. Firstly, how to represent a search task is important. A better repre sentation is very helpful for users to understand the search task. Secondly, how to use the identified search tasks to improve user search experience can also be studied, e.g. to recommend more semantic-related queries to the user.
 Acknowledgment. This work was supported by Foundation for Innovative Re-search Groups of the NSFC(Grant No. 60921002) and the National Key Tech-nology R&amp;D Program(Grant No. 2011BAH11B02).

