 People often use more than one query when searching for information. They revisit search results to re-find information and build an understanding of their search need through iterative explorations of query formula tion. These tasks are not well-supported by search interfaces and web browsers. We designed and built SearchPanel, a Chrome browser extension that supports people in their ongoing informati on seeking. This extension combines document and process metadata into an interactive representation of the retrieved doc uments that can be used for sense-making, navigation, and re-finding documents. In a real-world deployment spanning over tw o months, results show that SearchPanel appears to have been primarily used for complex information needs, in search se ssions with long durations and high numbers of queries. When proce ss metadata was present in the UI , searchers in explorative search sessions submitted more and longer queries and interacted more with the SERP . These results indicate that the process metadata features in SearchPanel seem to be of particular importan ce for exploratory search. H.5.m. Information interfaces and presentation (e.g., HCI): Miscellaneous. Search User Interfaces; Exploratory Search; Search Results Visualization; Log Analysis Although knowledge of users X  different search needs when performing web searches has expa nded over the years, relatively little support is available for more complex informational search, such as exploratory search [7], [22] or re-finding search tasks [30]. Search engines such as Google, Yahoo! Search, or Bing offer simple and efficient interfaces for navigational and transactional searches, as defined by Broder [10]. But complex informational search is not unimportant: Teevan et al. [30] reported that 39% of queries are re-finding queries. Furt hermore, 20-30% of searches address open-ended explorator y informational needs [27]. Qvarfordt et al. [25] found query overlap rates of 50-60% in exploratory search, and suggested that awareness of this overlap may be useful in supporting more efficient searching behavior. Thus, we decided to explore ways in which searchers X  interactions with search engines could be enhanced to support these more complex information-seeking tasks. We created a web browser extension, SearchPanel, which enriches common web search engine interfaces and addresses important deficits with respect to open-e nded exploratory search and re-finding. Our extension visualizes search results and metadata to help users find the right document or documents. Following Golovchinsky et al. [18], we distinguish document metadata from process metadata . Document metadata (titles, dates of publication, hosting websites, etc.) are basic characteristics of documents that are independent of the means by which these documents were retr ieved. Process metadata, on the other hand, characterize aspects of documents in relation to the searcher X  X  activity: how many times a document was retrieved, whether it was viewed before, etc. Today, browsers display only one type of process metadata by changing the color of links that have been visited by the user. We believe that process metadata can play an important role duri ng searchers X  information seeking process, in that it can help searchers to remember, understand, and plan their search processes to a la rger extent than is done today. The SearchPanel browser plugin enha nces searchers X  ability to use process metadata to understand their search results and plan subsequent activities by displayi ng surrogates for the current set of retrieved documents. It presen ts the process metadata in an integrated overview appearing to the side of the browser window and includes prior retrieval stat e, whether a document had been opened, and whether it was bookmarked. SearchPanel also makes it possible to examine multiple documents without returning to the search results. In a two month real-world deployment, we studied the effects of supplying the users with visualizations of process metadata on re-finding and exploratory search activities. Complex informational needs are not easily expressed in single queries. Instead, exploratory search and re-finding searches involve multiple queries with many retrieved documents potentially spanning multiple search sessions [7], [30]. To manage the information load that complex search tasks generate, searchers tend to make heavy use of bookmarking, re-searching to locate previously seen content, and printing, emailing and saving pages [4], [16]. A number of features ex ist within experimental search systems to support complex search tasks, although studies have shown that these features are rarely found in the wild [11]. Early experimental systems such as Ariadne [31] made it possible to review a search session after the fact to get a retrospective sense of the distribution of activities between top-level menu selections, search commands, and the examination of specific search results. This was accomplished through captured screenshots that facilitated review, but without the ability to interact with the earlier states of the system. C-TORI [20] made it possible to keep track of and share queries in a search session, but did not allow sense-making of the retrieved documents. Ahn et al. [3] integrated cues from group use of documents into the display of search results, show ing that aggregations of prior document use could be useful. Th is system relied on aggregating long-term user behavior; this is quite different from aggregating results over successive queries in the same session, independent of any document X  X  retrieval outside the given search task. SearchPad [6] and SearchBar [24] keep track of users X  queries, URLs visited, and documents sa ved, but do not help assess or manage the overlap in results among the various queries run during a session. Session Highlights is an example of a bookmarking tool that saved URL s [17] to a repository to help re-visitation, but it did not provide any specific awareness of the structure of search activity. Yahoo! search pad [13] automatically detects when queries are related and summarizes search results based on user behavior. Information overload due to large numbers of results is a common problem in information seeking [5]. This problem has been explored by providing various visualizations of search results. MetaSpider [12] uses a 2D map to display and classify retrieved documents. Grokker [19] uses nested circular and rectangular shapes to present results and also shows them grouped in a hierarchical way. Sparkler [26] uses a star plot for the result presentation, where every star represents a document. As more information and visua lizations get added to a user interface, it becomes more complex and risks introducing usability problems. Complex interfaces allow powerful controls, but simple interfaces allow a broader spectrum of users to use them. This tradeoff is difficult to manage; standard Internet search interfaces tend to be quite simple. For re-finding activities, Teevan [29] explored rearrangements of th e results list to make re-found documents more prominent, rath er than building a dedicated UI . However, re-arranging the result list for one particular purpose may decrease the efficiency for a different search activity. Supporting the searcher X  X  decision making process can be crucial for effective search performance for complex information needs. This support can take the form of enhanced representations of documents. Document metadata (author, date, images of the document, etc.) is often us ed for this purpose. Even et al . [15] has shown that the decision making process can be improved by adding process metadata (in our case information related to the search process) to the user interface. Other research has shown that presenting simple tasks in a slightly different way may help users understand how their search is performing and what can be done to gain better results [32]. Qvarfordt et al. [25] implemented a preview control that allowed searchers to estimate how many new, previously retrieved, and previously visited documents a new query will retrieve before submitting it. With the preview control, users retrieved a more diverse result set. This result illustrates how simple glance-able visualization can promote a more efficient search process. Subtle changes in the user interfaces can impact query formulation as well, as shown by Agapie et al. [2]. Spoerri [28] showed that users be nefit from different or additional visualizations of web search results. However, none of the techniques above have been integrated into the primary interface of any major search engine. In some cases, extension developers have used ideas from research literature to enhance the user experience of web search. The SearchPreview extension [21] for both Chrome and Firefox fetches sc reen shots of the result pages and shows them next to each search result. This extension is similar to page previews explored by Dziadosz and Charandrasekar [14]. BetterSearch [1] is a Firefox extension that performs a similar task, but also enriches the results page with more features and links, such as allowing users to open a search result in a new tab. We created a browser extension, SearchPanel, to compensate for deficiencies in traditional search result pages ( SERP s) with regard to re-finding and exploratory search activities (Figure 1). SearchPanel combines document and process metadata in a visual representation of search results that helps people manage their information seeking over longer search sessions. When designing SearchPanel, we aimed to create a light-weight method for presenting both kinds of data to the user throughout the search process, not only during query form ulation. Rather than building a dedicated system, we built a tool that can be used with any of the major search engines (Bing, Googl e, and, Yahoo), and is inserted into the search results page and any links the user follows from it. This allows us to leverage high performance engines, while providing needed support for complex search tasks. Users need not switch to a new search engine because support is incorporated into their regular search page. Figure 1. SearchPanel with its parts: 1. search engine selector, with current search engine highlighted; 2. favicon from site of retrieved page; 3. bar color represents a page X  X  retrieval and visited status; 4. current-selected page; 5. length of bars to We chose the browser extension approach rather than creating a proxy for several reasons. A browser extension has some advantages for enabling parsing and for augmenting both SERP s and document pages. It scales bette r with respect to storing user history data, since storage is on the user X  X  machine. It ensures a higher level of data privacy, since search data that could potentially reveal user interests (query keywords, selected URL s, etc.) can be logged as non-human-readable hashed values. Finally, a browser extension has access to bookmarks and local browsing history for creating process metadata. In complex search tasks with an evolving information need, search user interfaces need to support us ers X  full range of activities. We break the design space into three categories: search activity, navigation activity, and organization activity. We consider the different search and sense-making activities in light of the kinds of information required to satisfy them. Table 1 summarizes possible features supporting the three ac tivities involved in a search process, and if the feature provides document and process metadata. Next, we discuss how th ese features can be manifested in a search user interface. Historically, web UI support for the search process is focused on query formulation and understandi ng the current query. However, web browsers offer limited support for comparing the current result set with earlier search activity. During complex search tasks, the searcher often needs to build an understanding of which results were returned by previous queries so they can adjust future queries to better align with their search need. Current user interfaces represent this by changing link colors of explored results. However, this process information is distributed over the page, making it hard to get an easy overview for quick comparison of search tasks. Process metadata can affect how searchers interact with a retrieved result. One such repres entation is the number of visits and the previous retrieval status for a particular search result. In a re-finding search task, for example, searchers wish to ignore newly-found documents or pages that were not opened and may wish instead get a strong visual indication of which results are frequently visited and thus probably more relevant to the searchers X  current task. However, in an exploratory search task the newly-found and not-yet-visited docum ents may be the searcher X  X  primary focus. When engaged with a web search task, users need to shift their attention between a search results page and the actual documents retrieved. In some cases, the desi red information is not present in a document retrieved by a query, but in a document linked to it. It is not uncommon that users need to navigate through hyperlinks to reach the desired information. This navigation activity can be an important part of the information seeking process and may need better support than the browser X  X  back button. When searchers find useful web pages, they may save those documents for future access. This functionality is most often supported only by the browser X  X  bookmarking capability. Some search systems such as Hunter Gatherer [23] and Querium [18] have developed dedicated tools for supporting note-taking and bookmarking capabilities. Since the purpose of SearchPanel is to complement the SERP and provide persistent metadata as the user digs into the search results by following links, we wanted the design to convey critical information in a minimalistic way. The design of SearchPanel should not interfere with examin ing search results or reading documents retrieved. Some feat ures listed in Table 1 are too complex for our current purpose, such as organization of bookmarks. Others may appear insignificant, such as favicons. However, simple graphics can serve as a memory support of retrieved documents and assi st navigation in a minimal UI . Another consideration is that users may actively create process metadata, by for instance annotati ng documents, or whether users X  actions are monitored to create process metadata. We choose a monitoring, or implicit, approach to minimize users X  distractions from their information seeking process. SearchPanel is designed to vi sualize process and document metadata to allow the user a quick overview of the search results. SearchPanel displays immediately after a search has been performed on a supported web search engine (currently, Google, Google Scholar, Yahoo, Bing, and Mi crosoft Academic Search). It remains visible when a searcher follows links from retrieved documents. If a searcher chooses to open a link in a new browser window, SearchPanel will be copied with the same information that is displayed on the SERP . SearchPanel also provides a shortcut to return directly to the original SERP , or to re-run the query on a different search engine. SearchPanel is automatically displayed on the right side of the browser window after a search (Figur e 1). This side of the content page was chosen because this location is often free from relevant document content. In cases of overlap, SearchPanel X  X  vertical position can be adjusted manually to accommodate page content that may be occluded. The vertical orientation of SearchPanel was chosen as a direct representation of how SERP s are organized. SearchPanel displays several ki nds of document metadata. Bars representing each document are arranged in an order corresponding to the search result list; clicking on a bar is equivalent to clicking on a link on the SERP . Almost all websites have icons (favicons) to help re -identify the web page quickly. SearchPanel parses the retrieved documents to collect and display the icons. These icons are shown to the right of the bar (Figure 1.2). A tooltip with the document title is displayed when the mouse is over a bar. Other documen t metadata, such as such as document MIME type, could be added. However, there is a need to balance the information richness of the display with its ability to provide a highly glance-able tool for assessing search progress. Process metadata is also incorpor ated into SearchPanel. First, icons representing available search engines can be found in the top bar, where the search engine that was used for the search is highlighted (Figure 1.1). Clicking an icon re-runs the query with the selected search engine. The search engines are grouped into two categories (web search and academic research); only the relevant engines are shown depe nding on which type of search engine that was first used after the browser, or browser tab, was opened. If users click on the highlighted search engine, they will be taken back to the SERP . Each bar can have one of three colors, depending on retrieval and visited status of the document (Figure 1.3). If a document has never been retrieved before, its bar is teal. Bars for results retrieved by a prior query, but not vi sited, are blue. Bars of visited documents are violet. The colors were chosen to mimic the commonly used link colors on web pages. The local browser history is examined to retrieve the document status. This also allows us to incorporate page views that occurred before SearchPanel was installed. Each bar X  X  length reflects the retrieval frequency of its corresponding page. The more frequently a document has been retrieved, the shorter the bar (Figure 1.5). The choice to make the bars shorter was made to show less frequently retrieved results more prominently than more frequently retrieved. The retrieval history is stored locally in the browser for privacy reasons and can be deleted through SearchPanel X  X  options. In SearchPanel, the bookmarking i ndicator (Figure 1.6) shows the bookmark status of documents (unfilled or yellow star for bookmarked document) and allo ws the user to bookmark a document by clicking on its associated star. This allows quicker re-finding of web pages, as users do not need to navigate to a document to know if they ha ve previously bookmarked it. The selection indicator (Figure 1.4) indicates the current document after navigating from the SERP . If a link in a result document is clicked, the selection indicator will stay on the last retrieved document to indicate where the navigation started. 
Figure 2. Snippet highlighting on the SERP when the mouse is 
Figure 3. When off the SERP , SearchPanel shows the SERP Hovering over a result bar highli ghts the bar and its corresponding snippet in the SERP (Figure 2). The SERP is scrolled as the mouse moves up and down the bars to bring the associated snippet into view. Similarly, when the mouse is over a snippet, the related bar jiggles left to right, reinforci ng the connection between them. When the user navigates off the SERP to a found document, SearchPanel remains active. If the user opens a found document in a new browser window or tab, Sear chPanel remains active as well. Clicking on any bar navigates the user to its retrieved document, bypassing the SERP . To fully support this shortcut, the relevant SERP snippet is shown when th e mouse hovers over a bar in SearchPanel. This can be seen in Figure 3, where a preview of a Wikipedia page snippet is shown. These features enable it easier and more efficient to navigate the search results. We took an iterative approach to designing SearchPanel. Figure 4 illustrates how SearchPanel evol ved through our iterations until we were satisfied with the U I X  X  balance of unobtrusiveness and saliency. Some versions of Sear chPanel were deployed in our research lab to collect feedback during the design process. In the first iteration, SearchPanel cons isted only of colored bars in varying lengths, intruding into the right side of the SERP . However, this implementation was too hard for users to discover and could not contain all the information that we wanted to provide to searchers. In later iterations, a background was added to increase the discoverability of SearchPanel. Since the first iteration, the bars have remained the main feature of SearchPanel. As the design e volved a simple  X  X ack to results X  button was added. This eventually became the current design X  X  search engine selector (Figure 1.1). We based our current bookmark indicator (Figure 1.6) on the standard bookmark icon in the Chrome interface. To provide users with an indication of the source of each result, we added favicons (two last iterations, Figure 4). We chose favicons over text because they are quite small and easy to recognize. To study the effects of introducing process metadata to support re-finding and exploratory search activities, SearchPanel was deployed in two versions, called complex and simple , to separate groups of users. Figure 5 shows the simple version, while the complex version is shown in Figure 1. The complex version had all the process metadata and navi gation support features discussed in Section 3. Table 2 summarizes the features present in both the complex and simple versions of SearchPanel. In the simple version, most of the features re lated to process metadata were removed, but visited and retrie val status of documents was retained. Showing the visited and retrieval status is analogous to browsers displaying the visite d links status. However, no indication was given of the numbe rs of visits, or the bookmarked status of documents in the simple version. Another difference was that the SERP snippets were not show n when moving the mouse over the simple SearchPanel when off the SERP . Instead, a tool-tip with document title was shown. 
Figure 5. The simple version of 
SearchPanel Our primary research focus is to investigate effects of communicating process metadata during complex information seeking activities, such as exploratory search and re-finding. Specifically, for this deployment we were interested in how users incorporated SearchPanel into their search practices. What were the characteristics of the search sessions when SearchPanel was used and when it is not used, in terms of search session duration, number of queries, or actions? Would SearchPanel be used differently during exploratory search and re-finding search? SearchPanel was deployed through the Chrome Web Store on June 12, 2013. The data collec tion ran until Sept 3, 2013. The deployment was advertised through social media. Users were randomly assigned one of the two SearchPanel versions at installation. A short tutorial page was displayed after installation, which was also available through the options menu. Users could also disable logging, or delete the recorded search history from this menu. A total of 150 users installed S earchPanel and allowed logging, and queries were recorded from 120 users. Of these, 62 had the complex version and 58 had the si mple version. The amount of time SearchPanel was installed vari ed greatly, but 58% of all users had it for more than two days. The distribution of active users for the two versions remained equal over the data collection period. In total, 4,582 valid queries were recorded: 2,593 queries from the complex and 1,989 from the simple ve rsion. Note that a query is valid when the user inte racted with either the SERP or Search-Panel. Since it was not possible to distinguish between the search page being reloaded and a query submitted from the logs, we choose to not to include queries with no actions recorded. Moving the mouse over a snippet in the SERP was considered an action. SearchPanel was instrumented with a logging mechanism to capture searchers X  information-seeking behaviors. The following activities were logged: submitting a query, turning SearchPanel off, mouse clicks on the SERP or SearchPanel, mouse movements over snippets on the SERP or over on bars in SearchPanel, and repositioning of the SearchPanel. All activities were logged with a unique anonymous user id and timestamp. URL s and query strings were logged as hashed strings fo r query events and mouse clicks on links to guarantee reasonable privacy and anonymity for the participants. This procedure allows us to identify recurrent queries without being able to read the content of the query, and to identify documents previously retrieved by another query. We classified search sessions into three categories: exploratory search, re-finding and single query searches. Our classification was by necessity simplistic. Since the queries were hashed, query terms could not be used for classifying search sessions. Exploratory search is characterized by an evolving information need. Queries submitted during an exploratory search session will have some results overlap since s earchers continually refine their query formulation [25]. We classi fied search sessions as explora-tory when some of the URL s of top ten results of consecutive queries had overlap. This is by n ecessity a crude definition, since SearchPanel only parsed the SERP shown to the user. However, only one example of exploratory search was needed for the whole session to be classified as exploratory search. The purpose of a re-finding search activity is to find a document previously retrieved and viewed. In this work, search sessions are classified as re-finding when the last document viewed in a search session was a document that had been previously viewed. A previ-ously viewed document is a document that has been recorded in a user X  X  search history. This de finition is limited to sessions where users have accessed documents from the SERP or SearchPanel. Single query searches have a  X  X ook-up X  character. Even when a search session consists of multiple queries, the queries are likely unrelated. Any search session that cannot be categorized as either a re-finding or an exploratory sear ch session is defined as a single query search for the purpose of this study. For the data analysis, the logs were parsed and single queries were merged into search sessions. For queries to be grouped together, the time separating a query X  X  last event and the next query X  X  first event could at most be 1,124 s econds long (18 min 44 seconds). This was the 70 th percentile of durations of inactivity between actions of the last query and a new query. After the search sessions were identified, each session was classi-fied as a re-finding session, expl oratory search session or single query session. The search sessions were first tested as a re-finding search session, next as an exploratory search session. If the search session failed to be classified as either re-finding or exploratory search, it was classified as single search session. All queries within a search session were assigned the same classification. For each search session, the number of user actions was measured. User actions were any action perfo rmed during a session, such as submitting queries, following links, adding/removing bookmarks and moving the mouse over SERP snippets or the SearchPanel. Before any data was analyzed, outliers were removed. Any search sessions with duration above thr ee standard deviations from the mean were considered outliers. S earch sessions that did not have any duration or actions were also removed. The total number of remaining search sessions were 2,118. For all analysis, except as noted, we used a three way ANOVA with the factors: SearchPanel vers ion, session type and interaction interacted with both the SearchPanel and the SERP during a search session. We first present results from looking at how SearchPanel X  X  usage changed over time, before diving into what characterized the search sessions that contained user interactions with SearchPanel. Finally, we discuss how SearchPane l was used in exploratory and re-finding search sessions. To get a sense of how the usage of SearchPanel evolved over time, we investigated the numbe r of search sessions found during our data collection period. On average, the number of search sessions per user did not differ significantly ( t (141.803) = 0.170) between the complex (mean = 12.3, SD = 23.37) and simple versions (mean = 11.8, SD = 17.11). When examining the patterns of sessions over time (Figure 6), we could see that the simple version had a higher number of search sessions during early usage compared to the complex version (day 1 to about day 15), while the complex version had fewer search sessions early on, but slowly overtook the simple versi on as time went on. Time was normalized over the users X  usage, meaning that day 1 is the day SearchPanel was installed for each participant. 
Figure 6. Total number of search sessions over time. Day 1 To compare how the number of search sessions changed over time, we divided the available time (max 83 days) into two equally large groups, i.e. days before the 42 nd day and days after. When comparing the number of search sessions for the two SearchPanel versions and the tw o time levels using a two-way ANOVA , we found an interaction between the number of search sessions for the two SearchPanel ve rsions before and after day 42 ( F (1, 960)=10.03, p &lt;0.01). Furthermore, there were main effects on SearchPanel version ( F (1, 960)=24.00, p &lt;0.001) and on early vs. late usage ( F (1, 960)=24.89, p &lt;0.001). 
Figure 7. Avg. number of search sessions per user per day for days 1 through 42, and days 43 through 83 using the complex As Figure 7 shows, during days 1-42 the simple version had more search sessions per user than the complex version (Tukey HSD post hoc, p &lt; 0.001). But after day 43, we found that the complex version had more search sessions pe r user than the simple version (Tukey HSD post hoc test, p &lt; 0.001). In addition, the simple version decreased the number of search sessions per user after Day 42 (Tukey HSD post hoc, p &lt; 0.001), while in the complex version the number of search se ssions per day had not changed after Day 42 (Tukey HSD post hoc, p = 0.515). These results illustrate that usage of the complex version of SearchPanel appears to slowly in crease over time compared to the simple version where usage declined. However, these results were not expected. Since the users were randomly assigned to one of the two conditions, we had anticipat ed that users would have the same information need over tim e and hence perform the same number of search sessions using both versions. However, if the users experienced that one version of SearchPanel supported the search task better they may have been more inclined to use it. The SearchPanel users were free to use SearchPanel when they felt it could assist them in their search need. To further investigate when users turned to SearchPanel during a search session, we investigated the characteristics of the search sessions when SearchPanel was used and when it was not used. Using this information, we explored how search sessions where SearchPanel was used differed from search sessions where the user only interacted with the SERP . Table 3 summarizes the various dependent variables analyzed: the duration, number of queries and number of user actions for search sessions classified as exploratory search and re-finding search. As Table 3 shows, there are so me striking differences between search sessions where users interacted with SearchPanel compared to when they did not. In sessions where SearchPanel was used, the numbers of queries were on av erage 190% higher, the session durations were 307% higher and th e number of actions performed on the SERP was 243% higher than in search sessions where SearchPanel was not used. All these differences were significant. 
Table 3. Variables describing search session characteristics We also compared the query duration X  X  proportion of the total search session duration. This meas ure gives an indication of how much of the search session duration was spend on search formula-tion versus examining search re sults. We found that when users interacted with the SERP only, the query duration portion of the search session was 45% ( SD = 44.8), while when also interacting with SearchPanel the portion was significantly higher at 71% ( SD = 36.4). These results appear to indicate that the users had more complex search needs when interacting with SearchPanel than when only interacting with the SERP . The users formulated more queries with less time between queries, and interacted more with the SERP . However, no differences in numbe r of query terms were found. One possible alternative interpretation is that interacting with SearchPanel took time away from the search task hence resulting in longer durations. However, this in terpretation is unlikely since for each action on SearchPanel the user interacted on average 3.6 times ( SD = 8.75) with the SERP . Also, we could not find any correlation between the number of actions on SearchPanel and the search session duration (r = 0.056, n = 323, p = 0.309), but we found significant correlations between both search session duration and actions on SERP (r = 0.337, n = 323, p &lt; 0.001) and search session search session where users interacted with SearchPanel. In addition to the results above, we found that users of the complex version of SearchPanel used SearchPanel in their search sessions to of the simple version. Of all search sessions recorded by the complex version, 21% percent ha d actions on SearchPanel, while users of the simple SearchPanel, interacted with SearchPanel in 11% of the search sessions. This result shows that the complex SearchPanel got more use than th e simple version, presumably indicating that the complex version met the needs of the users to a higher extent than the simple version. We also found that the search session type significantly changed the likelihood that users would inte ract with the SearchPanel (  X  (2) = 18.206, p &lt; 0.001). In 19% of the exploratory search sessions, users interacted with SearchPanel, while users interacted with SearchPanel in only 14% of re-finding search sessions and in 12% of single search sessions. In the next section, we will investigate further how the si mple and complex version of SearchPanel influenced users X  behavior. SearchPanel was designed to suppor t exploratory search and re-finding search tasks in particular. We now turn our attention to how users used SearchPanel duri ng these two types of search sessions and contrast them with single search sessions. Table 4 shows summary statistics for sear ch session duration, number of queries per search session, number of SERP actions per search session, and number of terms per query for the two SearchPanel versions and the three session types. The results from each of these dependent variables will be presented first followed by a discussion of the implications of th e results for the two versions of SearchPanel in particular for re-finding and exploratory search. 
Table 4. Average duration (min.), number of queries, actions per search session, and number of search terms per query for Of all 986 search sessions performed with the complex SearchPanel, 35% were explorator y search sessions, 11% were re-find search sessions, and the remaining 54% of the search sessions were in single query search sessions. In comparison, of all 1132 search sessions collected with the simple SearchPanel, 8% were re-finding and 38% were explor atory search sessions. This difference in distribution between the two SearchPanel versions was significant (  X  2 (2) = 7.658, p &lt; 0.05). Most of the dependent variables in Table 4 show similar pattern. The complex SearchPanel resulted in longer search sessions ( F (1, 2106) = 22.097, p &lt; 0.01), queries with more search terms ( F (1, 9927) = 48.260, p &lt; 0.001) and more interactions with the SERP during the search sessions ( F (1, 1611) = 9.932, p &lt; 0.01). We did not find any difference in the number of actions on SearchPanel based on the SearchPanel version ( F (1, 317) = 2.74, p = 0.10) and the search session type ( F (1, 317) = 0.784). One interesting result was that the number of search terms per query was significantly affected by the SearchPanel version ( F (1, 4570) = 5.156, p &lt; 0.05). Generally, more search terms are regarded to result in better queries during exploratory search [8], [9]. Hence, if the complex version of SearchPanel encourages users to add more search terms to their queries, it could result in better search performance using SearchPanel, which possibly could explain why users of the complex SearchPanel used it more often than users of the simple version did. Given that the complex SearchPanel provided more information to the user than the simple SearchPanel, our hope was it would provide faster search sessions w ith fewer actions. However, since our results show that the complex SearchPanel was more used in in the long term than the simple S earchPanel, as we see in Section 5.1, the interpretation of the results are likely more complex than to claim that the simple Search Panel supports the users X  need better than the complex SearchPanel, since we got lower search session duration during this condition. The users had the choice of using SearchPanel, and they used the complex version more than the simple version in the long run. SearchPanel was designed with e xploratory search and re-finding search tasks in mind. The results above show that there are some differences in how the two versions of SearchPanel were used. Next, we will look into how user s used SearchPanel during each specific search session type. When investigating the search session duration, we did not find any significant interaction between SearchPanel version and search session type. However, we noticed that during exploratory search sessions, users of the complex SearchPanel spent a longer time searching, an average difference of 4 min, than users of the simple version, see Figure 8. Post-hoc analysis showed that the exploratory search sessions we re significantly longer (Tukey HSD , p &lt;0.05). The number of queries per search session and the number of actions on the SERP both showed significant interaction between SearchPanel version and search session type (# Queries: F (2, 2106) = 5.114, p &lt; 0.01, # Actions on SERP : F (2, 2106) = 4.565, p &lt; 0.01). Figure 9 and 10 illustrate these interactions. During exploratory search, the complex SearchPanel had significantly more queries per search session (Tukey HSD , p &lt; 0.05) and significantly more actions on the SERP (Tukey HSD , p &lt; 0.01) than the simple version. There were no significant differences betw een the SearchPanel versions for the two other search session types. The number of search terms per query was significantly affected by the search session type ( F (2, 4570) = 20.199, p &lt; 0.001). There was also a significant interaction between SearchPanel version and Figure 11. The post-hoc analysis show ed that the exploratory search sessions had significantly higher num ber of search terms per query compared to the re-finding sessions (Tukey HSD , p &lt; 0.001) and the single query sessions (Tukey HSD , p &lt; 0.001). There was no significant difference in number of search terms between the re-finding search sessions and the single query search sessions. Also, the complex SearchPanel had signifi cantly more terms per query in exploratory search sessions (Tukey HSD , p &lt; 0.01), but for re-finding and single query sessions th ere was no significant difference in number of search terms per query. These results indicate that the users behaved differently during the three different types of search sessions. Single query and re-finding search sessions displayed similar patterns, with little difference in terms of duration, number of queries and number of search terms per query. Exploratory search sessions, however, presented a quite different pattern; these search sessions had longer durations, although not significant, more queries per search session with longer queries, and more actions on the SERP . In particular, we noticed that the usage of the complex SearchPanel during exploratory search sessions stood out. Figure 9. Average number of queries per search session for the two SearchPanel versions and the three search session types 
Figure 10. Average number of actions on the SERP per search session for the two SearchPanel versions and the three search 
Figure 11. Average number of search terms per query for the two SearchPanel versions and the three search session types Comparing the two versions of S earchPanel, reveals distinctive patterns. One is that the comple x SearchPanel had better long term viability; as time went on the number of search sessions slowly increased. By voting with their feet, the users chose the complex version of SearchPanel over the simple version. Another pattern is that the search sessions in which users interacted with SearchPanel had different characteristics from those sessions in which they did not interact with it. SearchPanel appears to have been used primarily in sessions with longer durations, more queries and more actions on the SERP . These characteristics can be seen as signs of a more complex search need that is not easily solved with a single query. The fact that SearchPanel was used in these circumstances can be seen as evidence that it supported th e searchers X  activities. For the re-finding search activity, SearchPanel provided feedback to the user by changing the colors of the bars (both versions) and the length of the bars (complex version only) to reflect the retrieval and visited status of documents. Also, the complex version indicated whether a retrieved document had previously been bookmarked. Based on the results above, there appears to be little difference in the way the tw o SearchPanel versions were used in re-finding search sessions. The added features, such as the bookmark indicator and signaling the frequency of visits seem to make only a limited contribution to re-finding search. We draw the conclusion that the two versions support re-finding search activities equally well. Both versions appear indicate if a document has been visited before . In the complex version, the visited status of a document is amplified by also indicating number of views. However, for re -finding search tasks, we do not find any evidence that this extra process metadata feature made a significant difference in users X  re-finding search processes. When engaged with an exploratory search session, users have a need to keep track of previous ly explored documents to more easily focus on new documents the present query retrieves. Both SearchPanel versions indicate doc uments X  visited and retrieval status, but the complex version also indicates how often a document has been visited. The complex version provides extra navigational support, which could be an important feature during exploratory search since it would allow easy access and quick overview when exploring the search results. There were differences in user behavior between the two versions of SearchPanel during exploratory search. The search sessions with the complex version had more queries and more actions, but also longer session duration. These results suggest that users of the complex version made more effective use of SearchPanel during their exploratory search than users of the simple version. The process metadata visualization appears to allow a faster review of the search results, wh ich in turn can result in more queries. Although the precise eff ect of process metadata on explorative search still needs to be further investigated, this work indicates the usefulness of process metadata during exploratory search. That users of the complex version of SearchPanel used more search terms in their queries is particularly noteworthy. Longer queries are generally associated with better performance during exploratory search [8][9]. Previous research has shown that subtle hints during query formulation can affect how many search terms a user enters [2]. In the case of SearchPanel, it is possible that the visualization of the metadata allows users to build an understanding of how query formul ation corresponds to retrieval of documents. This understanding in turn, may nudge users to put more thought into their query formulation. Our aim when creating SearchPanel was to support complex information needs by means of a light-weight tool integrated with common search engines. If the users had need for it, the tool would be there supplying important information for the task at way and not interfering. In our r eal-world deployment study, we show that this light-weight appro ach appears to work. In cases in which the information need is easily satisfied, the searchers do not tend to use SearchPanel. However, when the information need is more complex, searchers turned to SearchPanel. We see that SearchPanel is used in search sessions with more queries and longer duration than when users exclusively interact with the search result page. In particular, exploratory search sessions attract more interactions with SearchPanel. SearchPanel was deployed in two versions, a simple version focused on visualizing document metadata, and a complex version providing visualizations of both document and process metadata. In re-finding search activities, we can see little impact of the added process metadata the complex version provides. The visited and retrieval status information appears to support the users sufficiently well. By contrast, process metadata a ppears particularly useful for exploratory search. In these search sessions, we can see that users submit more queries with more search terms and interaction in search sessions with longer duration. This intriguing result suggests that the users of the complex version were able to use the visualization of the process metadata to inform their information seeking process. With appropriate visualization, users can quickly scan the results list for documen ts relevant to their current information needs. Future research is needed for deeper understanding of how process metadata influences the search process, but the results presented here are promising. Our study shows that these simple visualizations have potential long-term viability. The features in SearchPanel are flexible enough to provide support for both exploratory search and re-find search activities, although these activities have different search processes. Simple, well designed ex tensions to traditional search result pages, especially when they permit searchers to use familiar search engines, can provide a powerful boost to complex search activities such as exploratory search. This was the last project we had the pleasure of working on with Gene. All of us at FXPAL were saddened by the passing of our brilliant colleague and good friend; our sense of loss has made us all the more determined to complete this project. We appreciate the opportunity to publish this work at SIGIR, a conference particularly meaningful to Gene. We are grateful to Gene X  X  widow, Jill Berman, for her encouragement and support. Special thanks to Thea Turner for her comments on the early drafts of this paper. [1] A BAKUS. BetterSearch a Firefox add-on for enhancing search [2] Agapie, Elena, Gene Golovchinsky, and Pernilla Qvarfordt. [3] Ahn, J.-W., Brusilovsky, P., and Fa rzan, R. Investigating users X  [4] Aula, A., Jhaveri, N., and K X ki, M. Information search and re-[5] Baeza-Yates, R., Ribeiro-Neto, B., Modern information retrieval , [6] Bharat, K. SearchPad: explicit capture of search context to support [7] Bates, Marcia J. The design of browsing and berrypicking [8] Belkin, N.J., Cool, C., Kelly, D., Kim, G., Kim, J.-Y., Lee, H.-J., [9] Belkin, N.J., Cool, C., Jeng, J., Keller, A., Kelly, D. Kim, J., Lee, [10] Broder, A., A taxonomy of web search. SIGIR Forum 36, 2 (Sept. [11] Capra, R., Marchionini, G., Velasco-Martin, J., and Muller, K. [12] Chen, H., Fan, H., Chau, M., and Zeng, D., Metaspider: Meta-[13] Donato, Debora, Francesco Bonchi , Tom Chi, and Yoelle Maarek. [14] Dziadosz, S. and Chandrasekar, R. Do thumbnail previews help [15] Even, A., Shankaranarayanan, G., and Watts, S. Enhancing [16] Jones, W., Bruce, H., and Duma is, S. Keeping found things found [17] Jhaveri, N., and R X ih X , K. The advantages of a cross-session web [18] Golovchinsky, G., Diriye, A., and Dunnigan, T. The future is in [19] Hong-li, Q. A novel visual search engines: Grokker. Journal of [20] Hoppe, H.U. and Zhao, J. (1994). C-TORI: an interface for [21] SearchPreview, the browser extension previously known as [22] Marchionini, Gary. Explorat ory search: from finding to [23] schraefel, m.c., Zhu, Yuxiang, David Modjeska, Daniel Wigdor, [24] Morris, D., Morris, M., R., and Venolia, G. SearchBar: a search-[25] Qvarfordt, P., Golovchinsky, G ., Dunnigan, T., and Agapie, E. [26] Roberts, J., Boukhelifa, N., and Rodgers, P. Multiform glyph [27] Rose, D. E., and Levinson, D. Understanding user goals in web [28] Spoerri, A. How visual query t ools can support users searching the [29] Teevan. J. The re:search engine: simultaneous support for finding [30] Teevan, J ., Adar , E., Jones, R., and Potts, M. A. S. Information re-[31] Twidale, M., and Nichols, D. M. Designing interfaces to support [32] Wang, T. D., Deshpande, A., and Shneiderman, B. A temporal 
