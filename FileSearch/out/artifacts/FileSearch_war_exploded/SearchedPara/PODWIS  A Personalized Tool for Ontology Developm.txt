 When WIS is applied in a particular domain, it becomes domain specific, such as ERP expected goals [2] . 
Some rough ideas borrowed from ontology for building information system can be development are as following: 
However, there are few works about ontology on WIS yet, the complexity of WIS leads special difficulties in WIS ontology building: [4] z Extracting the various relationships from resources is a challenging task. z Manually constructing WIS ontology is time-consuming, labor-intensive and 
To solve these problems, we propose and implement a tool named Personalized tool with following features: 
The rest of the paper is organized as follows: Section 2 presents the background and the conclusion. Reference [5] gives a definition of Information System ontology: The IS ontology is investigation. There is no standard language for IS ontology description yet. The World Wide Web ontology description language. However, as the WIS ontology is a combination of the languages do not fit for WIS ontology. To precisely define the conceptions in domain and explicitly specify the hierarchy of WIS, we implement a new ontology description language X  Web Information System Ontology Markup Language (WISO-ML) based on XML. 
Researchers have proposed many ontology generating tools. The AIFB have manners is plagued with several challenges and problems such as: z It is not easy to reuse the data and operations of WIS by these methods. Our WIS ontology is featured with the idea partially borrowed from reference [11]: z Top-level ontology describes very general concepts. z Domain ontology describes the vocabulary related to a generic domain. z Application ontology describes concepts depending on both a particular domain and conveniently by other tools through XML interface. Science and Technology of Peking University. contains two parts: Patient Information and Admission Information, which is composed of WIS are very complex, so we define WIS ontology step by step. mapping of the items from web page to database. such as size, color and location. component.
Note that, components in WIS should be distinguished by names, Elements reflects style of the components. 
The above definition shows that a component could be applied to represent a whole Component or Child Component .
 Example 2. Figure 2 illustrates the hierarchy of page component  X  X dmission X  which pedigree-tree whose root is component X  X  name, the elements of the component become leaf-nodes. WIS ontology can be represented by a forest of component-tree. Observations: Observation 1. WIS ontology usually contains hundreds of Page Components, which are dozens of components, they bears resemblance to each other on contents, layouts, operations, etc. 
As figure 3 shows, there are 335 page components of WIS ontology in WHRP, the child component  X  X atient Information X  appears in nearly 200 pages and the child component  X  X octor Information X  appears in over 120 pages. Observation 2. Beyond the similarity of components is a deep level knowledge of simple relations. binary relation {Node, subNode}. this paper. 
In this paper, relationship is a multi-predication. It denotes the connections among (ComName, PartName) means the item or component distinguished by PartName is a part of the component distinguished by ComName. Formally, we have: P is said to be a part-of relation.
 built by these binary relations. 
As mentioned in Assumption 1, there are many frequent child components in WIS ontology. Constructing them one by one is a time-consuming and err-prone work. If we of page components and learn to auto-generate the often-repeated child components. existing component B satisfying Partof( B,C ), the count(part of( B,C ))&lt; t; Specification is called the Max Frequent Child Component (MFCC). The procedure to mine Max Frequent Child Component (MFCC) is a continuous work through the whole ontology building process. PODWIS provides 3 editor panels and a submit preliminary works, PODWIS starts a module based on data-mining to learn the defined threshold. While starting PODWIS the next time, users can find MFCC in the component palette and build ontology in personalized style under their guidance. 4.1 The Resource Content and Re lationship Extrac tion Algorithm The resources of our WIS ontology are stored in the format of WIS Ontology Markup Language (WISO-ML), which is an extension of XML as shown in the figure 2. 
By Assumption 2 and 3, user X  X  actions in building WIS ontology can be stored in a shown as Figure 4: field  X  X requency X  in the view. In fact the main time-consuming work is counting the design an online algorithm to meet these emergent needs. 
The idea of Offline Resource Relationship Extraction Algorithm (ORREA) is scanning WIS ontology while keeping mark in stack. The detail is as following: Algorithm 1. The Offline Resource Relationship Extraction Algorithm (ORREA): 1  X  Initialize the stack; 2  X  For each line of the file PageCom, do 3  X  { if the line contains  X &lt; X  then Push the current XML element in stack; 4  X  if the line contains  X &lt;/ X  then 5  X  {Pop stack top to variable Part; 6  X  Create a new record in UserBehaviorData; 7 8  X  Set the record X  X  field  X  X ser X  to the current user X  X  name; 9  X  Set the record X  X  field  X  X ateTime X  to the current date and time; 10  X  Read the top element of the stack to variable Part; 11  X  Set the record X  X  field  X  X omName X  to Part.name;} 12  X  } Return UserBehaviorData; Algorithm 1 is O(n). O(n); than that on general XML files.  X  X omName X ,  X  X artName X  ,  X  X artType X  and  X  X ser X , the algorithm is as following: Algorithm 2. oFfline Frequency Mining (FFM) Proposition 2. Let n be the size of the behavior dataset, O(n 2 ). thus the total time complexity can be evaluated by n*log(n). relationship from WIS ontology, the algorithm is a mixture of the above 2. We do not present the algorithm X  X  detail here because of the page limitation. behavior dataset, limitation. it is better to choose offline policy. 4.2 MFCC (the Max Frequent Child Component) Generation Algorithm is the time to mine the MFCC of a specified user as following: Algorithm 4. MFCC Generating: The three procedures are explained in the following: Procedure 1. Get_Valid_Dataset Procedure 2. Get_names_of_MFCC name}={ComName}-{PartName}; Procedure 3. Generate_MFCC 
Procedure 3 generates MFCC files by their names. For each MFCC, PODWIS searches their elements are constructed. At last, the MFCC is built from bottom to top. the valid user behavior dataset, the complexity of Algorithm 4 is O(m*log(m)). Proof. Procedure 1 scans the original dataset once, so the time complexity is O(n); O(log m ). Thus procedure 3 needs O( m* log( m )) time. Mostly, m and n has the same magnitude, so time complexity of Algorithm 4 is O( m* log( m) ). 
The proposition 3 shows that the speed of WIS ontology personalization algorithm is acceptable. As PODWIS is a new exploration on WIS ontology generation, there is seldom similar acceptable speed. 
The Department of Intelligence Science and Technology of Peking University has WISE (Web Information System Environment) [13][14] ,the key points are: in Figure 5. 5.1 Ontology Building The non-professional user can use the tool easily to personalize WIS ontology. 5.2 User Interaction Pages Generati on and Operation Code Processing be totally automatic, because WIS ontology does not contain much information about like SELECT, INSERT, UPDATE, DELETE, can be mapped to concrete operations on data sources. The operation mapping method can be used as a part of an automatic WIS code module. The details of these techniques are presented in reference [13]. 5.3 Application in WHRP PODWIS and WISE currently are used in developing a web-based hospital information HTML pages in WHRP, which are all generated from the corresponding page components in WHRP X  X  ontology, and the system was required to provide multi-views and support multi-formats. Using PODWIS and WISE solved the following problems: z Acquire the requirements: The doctors used PDOMIS to construct the ontology of z Multi-view output: WHRP need to output a page component in many formats such z Shorten developing period: Use WISE to generate the user interfaces and operations Automatic developing WIS based on ontology is a new approach in WIS engineering. System (PODWIS), the main contributions include: z Four Algorithm for WIS ontology personalization, namely, the Offline Resource z Four propositions about the algorithms. z Auto-generating the domain specific web information system (includes user z Demonstrating the feasibility of this technique via practical application. beginning, there is much more work to be done, such as the control of different user support of dynamic ontology refinements, etc. Dongqing (Peking University), XUE Ming (IBM China), YAN Bo (CAS), TAN Yongsheng (PKU Third Hospital), YING Ying, LI Meimei, etc. We would like to thank for their helpful discussions, and 3 anonymous reviewers for their comments. 
