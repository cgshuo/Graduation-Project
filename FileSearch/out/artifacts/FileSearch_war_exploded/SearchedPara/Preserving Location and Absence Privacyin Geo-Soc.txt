 Online social networks often involve very large numbers of users who share very large volumes of content. This content is increasingly being tagged with geo-spatial and temporal coordinates that may then be used in services. For example, a service may retrieve photos taken in a certain region. The resulting geo-aware social networks (GeoSNs) pose privacy threats beyond those found in location-based services. Con-tent published in a GeoSN is often associated with references to multiple users, without the publisher being aware of the privacy preferences of those users. Moreover, this content is often accessible to multiple users. This renders it difficult for GeoSN users to control which information about them is available and to whom it is available. This paper addresses two privacy threats that occur in GeoSNs: location privacy and absence privacy . The former concerns the availability of information about the presence of users in specific locations at given times, while the latter concerns the availability of information about the absence of an individual from spe-cific locations during given periods of time. The challenge addressed is that of supporting privacy while still enabling useful services. We believe this is the first paper to formal-ize these two notions of privacy and to propose techniques for enforcing them. The techniques offer privacy guarantees, and the paper reports on empirical performance studies of the techniques.
 H.2.8 [ Database Management ]: Database Applications X  Spatial databases and GIS ; K.4.1 [ Computers and Soci-ety ]: Public Policy Issues X  Privacy Algorithms Social networks, Location privacy, Absence privacy
Geo-aware social networks (GeoSNs) are enabled by the availability of social network services, mobile devices with Internet connectivity, and geo-location capabilities. GeoSN users generate and share very large volumes of content, or resources, tagged with geo-location. Thus, resources such as status messages, photos, and  X  X heck-ins X  are tagged with the location in which they were generated. Further, resources may reference other users X  X or example, this occurs when a user tags a photo with the people in the photo.

A variety of services exist and can be envisioned that ex-ploit GeoSN resources. For example, the Google Picasa ser-vice lets users share and search photos that are both geo-tagged and tagged with other users. Dozens of other such commercial applications exist, including Brightkite, Flickr, Foursquare, Google Buzz, Google Latitude, Gowalla, Loopt, Twitter, and Whrrl. Indications are that geo-tagging is also coming to Facebook 1 . In addition, some GeoSN services enable third-party services that exploit GeoSN resources.
Privacy in social network services has become a hot topic, and reports indicate that users are leaving social network services due to privacy concerns. In GeoSNs, it is possi-ble for exact locations of users to be exposed to untrusted entities that may in turn utilize these to infer sensitive infor-mation about the users. For example, the presence of a user in certain locations, e.g., a hospital or a night club, may reveal sensitive information about the user. And because GeoSN resources are easily spread among users in real time, additional threats such as stalking or assault are possible. In addition, the instant publishing of GeoSN resources can en-able an adversary to infer how far users are from their homes (or other locations) and hence how long these are possibly unattended. This information represents an absence privacy violation and may be used to plan a burglary 2 .

It may be argued that users should be aware of the privacy implications of making resources available and should simply behave responsibly, and thus should not publish resources that may cause privacy concerns. However, this arrange-ment is undesirable for two main reasons. First, GeoSN service providers are generally interested in as much content as possible being available, as this attracts users and thus increases advertising revenue. Second, in most GeoSN ser-vices, users can reference other users in resources; and it is
See www.facebook.com/policy.php ; tcrn.ch/99VSSN
See PleaseRobMe.com generally not possible for a user to control the resources pub-lished by another user. For instance, imagine that Alice and Bob are having a drink together in a pub. Alice updates her GeoSN status, writing  X  X aving a beer with Bob X  and tagging the post with 10:05 p.m., Manhattan. A bit later, Bob sees his friend Charlie and invites him to join them at the table. Charlie then updates his status, writing  X  X ust met Bob at a pub! X  and tagging the post with 10:10 p.m., 24 West 35th Street. A user with access to both posts (e.g., a friend of Bob) can infer that Alice is at a pub with Charlie as well as the exact address of the pub, although Alice used a coarser location in her tag.

For these reasons, techniques that enable users to specify their privacy preferences and then enforce these preferences are desirable for service providers and users alike. The ob-jective of this paper is to provide such techniques.
The algorithms proposed combine meta-data generaliza-tion over spatio-temporal granularities with an analysis of dynamic constraints on inter-dependent resources, also tak-ing into account constraints on the maximum velocity of user movement. Absence privacy is enforced by computing appropriate temporal delays in resource publication based on the above analysis.

Although privacy has been studied extensively in location-based services and social networks, we are not aware of any studies that consider location and absence privacy in the GeoSN setting.

Research on privacy in social networks focuses on profile information, which differs from dynamic geo-spatial infor-mation such as a user X  X  current location. In the GeoSN set-ting, specifically in relation to friend-finder services, privacy preserving proximity computation has been studied [6 X 8], since friend-finders are typical GeoSN services. However, the solutions proposed do not apply to resource publication.
Research on privacy in location-based services (LBSs) is also not directly applicable to the GeoSN setting. Many techniques proposed for LBSs assume that users are anony-mous and offer anonymity by extending the principle of k -anonymity to the geo-spatial setting, thus avoiding user re-identification through location data [4,5]. These techniques are not suitable for our problem, since the assumption of user anonymity is not realistic for most existing social net-works.

Other techniques for LBSs assume that the identities of the users are known and offer location privacy by obfuscat-ing the users X  locations [3]. We adopt this location privacy model that is also the reference model for privacy-preserving proximity services. Among the LBS solutions adopting this model, the proposals by Ghinita et al. [2] are arguably the most related since they also consider dynamic privacy at-tacks based on the maximum velocity of the users. However, like other LBS proposals, these proposals do not take into account resources related to multiple users at the same time as in GeoSNs, and they do not consider temporal uncertainty and absence as privacy preferences. Finally, some existing GeoSN services offer some form of control of the geo-tags of resources, e.g., by enabling tags at coarse granularities such as the city level (e.g., Google Latitude), but much finer con-trols are necessary to avoid the privacy threats considered in this paper.

The contributions of the paper are the following:
The rest of the paper is organized as follows. Section 2 for-mally characterizes the privacy problems in GeoSN resource publication and also covers how users can specify their pri-vacy preferences; Section 3 describes the architecture of the proposed GeoSN privacy preservation technique; Section 4 reports the technical details of the algorithms that compose our technique; Section 5 describes experimental results, and Section 6 concludes the paper.
We formally describe the assumed GeoSN service setting and the privacy threats we address. We then define means for the users to express their privacy preferences, the adver-sary model, and sufficient conditions for satisfying a user X  X  privacy preferences.
A GeoSN service allows its users to publish a resource (e.g., a picture, a text message, a check-in) tagged with the current location and time, as well as a set of users related to the resource. A resource is either tagged automatically (e.g. an integrated GPS can provide location and time), or tagged manually. Since resources and their tags become available to other users as well as to service providers, we are concerned with the privacy violations that the publication can lead to.
Formally, a resource r is a tuple: where the first two elements are meta-data tags with r. Udata being a set of identifiers of users, r. STdata being a spatio-temporal tag and r. Content being the resource itself. In the following, when referring to a resource r , we also denote with r. Sdata and r. Tdata the spatial and temporal components, respectively, of r. STdata . We assume that all the users in r. Udata are in the location r. Sdata at the time r. Tdata .
As an example, recall the user Charlie performing a sta-tus update informing his friends about his presence in the pub together with Alice and Bob. In our formalization, the update is a resource with Alice, Bob, and Charlie as r. Udata , and the location of the pub with the current time as r. STdata .

We consider techniques for privacy preservation based on the generalization of resources before publication. In partic-ular, we consider generalization functions that generalize the spatio-temporal tag of a resource. Formally, STdata for an original resource is a point in the spatio-temporal domain, while STdata for a generalized resource is a 3D volume in the spatio-temporal domain that contains the point of the corresponding original resource. 3 In case of generalized re-sources r 0 , we denote by r 0 .T max and r 0 .T min the maximum and minimum time instant of r 0 . Tdata , respectively.
Definition 1. Given the domain OR of all possible origi-nal resources and the domain GR of all possible generalized
We assume that location and time of the original resource are recorded at the finest available resolution and is approx-imated by a point. resources, a partial function g : OR  X  GR is a general-ization function if, for each r  X  OR such that g ( r ) is de-fined, r. Udata = g ( r ) . Udata , r. Content = g ( r ) . Content and r. STdata  X  g ( r ) . STdata .

The generalization function g ( r ) will take into account the privacy preferences of the users involved in r , as well as all the generalizations of the original resources submitted before r . To avoid the case of two original resources being submitted at the same time, we assume a total ordering among the submission times of original resources.
When an adversary associates a user X  X  identity with user X  X  private information, a privacy violation has occured. When it is not possible to exclude that the user X  X  identity can be obtained by the adversary (as it is often the case in social networks), privacy must be preserved by obfuscating the pri-vate information. We consider location and time as private information (in the following we will for brevity often use  X  X ocation X  to refer to a spatio-temporal location), and we consider two privacy notions: location privacy and absence privacy .

A location privacy concern exists when uncontrolled dis-closure of the geographic position of a user at specific times can occur. Most of the currently available GeoSNs suffer from this privacy concern. A typical example is a user who elects to not let people know that he attended a religious ceremony or a political meeting.

An absence privacy concern exists when uncontrolled dis-closure of the absence of a user from a geographic position at specific times can occur. This concern is conceptually different from location privacy and requires different protec-tion techniques. A typical example is a user not wishing to let people know that he will not be at home for an extended period of time.

These privacy concerns can be addressed by offering the users means of controlling the location information to be dis-closed. These means include different kinds of preferences the users can express: (a) for certain regions, the user X  X  lo-cation and time should be revealed only at a  X  X ufficiently coarse X  granularity, (b) for certain regions, the user X  X  ab-sence should not be revealed. Hence, preferences for loca-tion privacy should specify the minimum uncertainty that an adversary should have about the location of the user upon publication of a resource (possibly considering the resource publication history). In contrast, preferences for absence privacy should specify regions and time intervals such that an adversary cannot exclude any point of the region as the user X  X  location during the associated interval, independently of the publication of resources during the interval.
For both type of preferences, we introduce the notion of minimal uncertainty region (MUR) as a spatio-temporal re-gion for which an adversary cannot exclude any internal point as the location of the user. In the solution we pro-pose, each user can express location privacy preferences by specifying a partition of the spatio-temporal domain that define the desired MURs. For example, Alice specifies that any resource in which she is tagged should not report the specific campus building where she was at 10:30 a.m. today; in this case, one solution is to define the combination of the entire campus region and the time period  X  X his morning X  as one of the MURs. In other words, when defining a MUR, a user accepts that the adversary learns that she is located in that MUR, but requires that no location within the MUR can be excluded as a possible location.

The MURs for a user can be captured formally with the notion of spatio-temporal granularity . Intuitively, a spatial (temporal) granularity is a partitioning of the spatial (tem-poral) domain into a discrete set of non-overlapping gran-ules [1]. Each granule is associated with an index i , and the i -th granule of a granularity G is denoted as G ( i ).
For clarity, we consider spatio-temporal granularities where the granules are products of granules of spatial and tempo-ral granularities. Thus, we assume that a user u specifies a spatial granularity G S u and a temporal granularity G T u vacy preferences. The spatio-temporal granularity G u that represents the user X  X  privacy preference is then derived from G u and G T u as follows: for each index j of G S u and each index of indexes of G u is a set of pairs of numbers, and each gran-ule of G u (  X  j, k  X  ) is the temporal extension of G S u time interval defined by G T u ( k ). When no confusion arises, we denote the granules of G u with a single index i =  X  j, k  X  . Since the granularities partition the spatial and temporal domains, for each spatio-temporal point p , there exists a granule of the granularity G u that contains p . We denote this granule with G u [ p ]. Definition 2 formally states when a location privacy preference is enforced.

Definition 2. Let u be a user and r be an original resource with u  X  r. Udata . The location privacy preference of u , expressed as the spatio-temporal granularity G u , is enforced if the adversary cannot exclude any point of G u [ r. STdata ] as the possible location of u .

Next, a user can express an absence privacy preference in terms of a set of granules of a spatio-temporal granularity, and we call each granule an Absence Privacy Region (APR). The intuitive semantics is the following: no location infor-mation should ever be disclosed about the user such that, for any point p in an APR, p can be excluded as a possible location of the user. Note that the difference with respect to location privacy is that the user requires that, indepen-dently of the previous or current publication of resources in locations outside or inside the APR, no point of an APR can be excluded as a possible location of the user. Defini-tion 3 formally states when an absence privacy preference is enforced.

Definition 3. Let u be a user and A be the set of APRs chosen by u . The absence privacy requirement of u is en-forced if, for every point p of each APR in A , the adver-sary, when considering all published resources, cannot ex-clude that user u is located at p .
We assume that the adversary has access to all the re-sources published by all the users. This is a conservative approach, and in some cases, it would be possible to ex-ploit Access Control (AC) techniques to identify classes of adversaries that can only access a subset of the resources published by the users. The above assumption accounts for the case of collusion among adversaries in different classes.
We assume that the adversary knows the technique used to generalize resources before publication. Also, since we do not assume that the users X  privacy preferences are kept se-cret, we conservatively assume that the adversary can obtain the privacy preferences. In general, we assume that the ad-versary has the knowledge to compute g ( r ) for each r  X  OR . We also assume that the adversary knows, for each user, the maximum velocity v at which that user can move. While users can have different maximum velocities, we assume for simplicity that a single velocity v applies to all users.
As opposed to adversary models that assume a uniform distribution of user locations, our defense techniques also allow adversaries having a non-uniform a-priori probabilis-tic distribution function P that gives for each user u the probability that at a given time instant t , the user is in a certain spatial location s . Since we assume that a user can publish a resource any time and from any location the user is at, the same probability distribution applies to the pub-lication of resources: for each potential original resource r , P [ r. STdata = p ] denotes the a-priori probability that r is issued from a spatio-temporal point p . Note that if the ad-versary knows from the a-priori knowledge that a user has zero probability of being located in a certain location at a given time (and hence no resource tagging him can be pub-lished from there) then it is not possible to guarantee the location privacy of that user. Hence, for each potential orig-inal resource r and each spatio-temporal point p , we assume P [ r. STdata = p ] &gt; 0.

To summarize, we assume that the adversary has exactly the following knowledge:
Finally, we note that how to infer spatio-temporal infor-mation from the content of a resource, e.g., a photo, is an orthogonal research topic. If such information is made ex-plicit, it can be treated as a tag and thus handled by the paper X  X  proposal.
A necessary condition to guarantee location privacy is that each original resource r is generalized into a resource r that, for each user u tagged in the resource, the MUR of u that contains r. STdata must be contained in r 0 . STdata . Formally: When Equation 1 holds, we say that r 0 covers its users X  MURs .

As an intuition for this necessary condition, consider Fig-ure 1(a) that, for the sake of simplicity, shows a one-dimen-sional spatial domain. The attribute r. STdata is generalized into a spatio-temporal region r 0 . STdata that only partially covers the granule representing the MUR required by the user u that is tagged in r . Consequently, the adversary can exclude u from the dark gray region, hence violating the location privacy requirement of u .
 The fact that a generalized resource r 0 covers its users X  MURs is a necessary but insufficient condition to guaran-tee location privacy. Consider the example in Figure 1(b) that shows two generalized resources r 1 and r 2 . User u tagged in both resources, while user u 2 is tagged in r 1 Resource r 1 and r 2 is generalized into r 0 1 and r 0 2 tively. It is easily seen that each generalized resource covers its users X  MURs. However, location privacy of neither u nor u 2 is enforced if we take into account the maximum velocity v . First, the adversary knows that during time pe-is issued from the bottom left corner of r 0 1 . STdata , it is im-possible for user u 1 to reach, with the maximum velocity v , the dark gray region of r 0 2 . STdata . In other words, not all points of r 0 2 . STdata are reachable from r 0 1 . STdata , and hence some points can be excluded as possible locations of u . A similar attack can be performed to exclude some parts of r 0 1 . STdata . Indeed, no point of r 0 2 . STdata can be reached from any point of the dark gray region in r 0 1 . STdata . Since the adversary knows that at the time of r 1 the two users are in the same location, the adversary can exclude u 2 from the dark gray region of r 0 1 , hence violating the location privacy of u 2 .

The above example shows that two resources can be de-pendent if they have at least one user in common and if their temporal distance is small when compared with the spatial distance. In order to capture this intuition formally, we first define the notion of reachability and then the notion of independence of resources.

Definition 4. Given a velocity v and two spatio-temporal regions str 1 and str 2 , we say that str 1 is reachable from str if  X  p 1  X  str 1 (  X  p 2  X  str 2 ( d s ( p 1 , p 2 )  X  v  X  d where d s and d t denotes the spatial and temporal distance between two points, respectively.
 In the following, we say that a resource r 1 is reachable from a resource r 2 if r 1 . STdata is reachable from r 2 . STdata . The transitivity property applies to reachability in case resources are totally ordered as defined in Property 1.

Property 1. (Transitivity) Let r 1 , r 2 , and r 3 be gener-alized resources such that: r 1 .T max  X  r 2 .T min and r r .T min . Then, (a) if r 3 is reachable from r 2 and r 2 is reachable from r then r 3 is reachable from r 1 ; (b) if r 1 is reachable from r 2 and r 2 is reachable from r then r 1 is reachable from r 3 .
 We can now define independent resources as follows.

Definition 5. Two resources r 1 and r 2 are independent if at least one of the following conditions hold: a) r 1 . Udata  X  r 2 . Udata =  X  ; b) r 1 is reachable from r 2 , and r 2 is reachable from r Intuitively, Definition 5 states that two resources having at least one user in common are independent if they are reach-able from each other.
One last necessary condition to guarantee location pri-vacy is related to the generalization function g (). Consider the following example, in which we exploit the fact that the adversary can compute g ( r ) for each potential original re-source r  X  OR . Let r 0 be a published generalized resource, p a point in r 0 . STdata , and r a potential original resource that is identical to r 0 except r. STdata = p . Also assume that g ( r ) . STdata 6 = r 0 . STdata . The adversary can exclude p as a possible location of the users in r 0 . Udata since if the users posted the resource from p then it would be general-ized to something different from r 0 . Clearly, this can violate the location privacy requirement.

In order to guard against this kind of attack, the gen-eralization function must have the property known in the literature as  X  X on-invertibility X  or  X  X eciprocal X  [4, 5]. This property is stated in Definition 6.

Definition 6. A generalization function g () is non-invert-ible if for each pair of original resources r 1 and r 2 such that r . Udata = r 1 . Udata , r 2 . Content = r 1 . Content , and r . STdata  X  g ( r 1 ) . STdata , it holds that g ( r 1 ) . STdata = g ( r 2 ) . STdata .

We can now define a set of conditions that are sufficient to guarantee location privacy.

Theorem 1. Let R 0 = { g ( r ) | r  X  R and g ( r ) is defined } be the set of all published resources, where R is the set of corresponding original resources, and g () is a generalization function. If all the following conditions hold then the lo-cation privacy of all the users tagged in these resources is enforced: (a) for each r 0 in R 0 , r 0 covers its users X  MURs (b) each pair of distinct resources r 0 1 and r 0 2 in R 0 pendent (c) g () is non-invertible If this is satisfied, we say that R 0 is a safe set.
The proofs of Theorem 1 and two following theorems are omitted due to space limitations.
We consider the class of absence privacy preferences that model the following situation: at each time instant, a user wants to prevent the adversary from learning, that, at that time , the user is not in the APRs. This protects from the problem of unattended locations (like a user X  X  home) that arises in the case of instant publishing of resources.
In our model, this privacy preference can be specified eas-ily. Intuitively, the user defines a spatial region s . Then, at each time instant t , the APR corresponding to s is the spatio-temporal region formed by s at time t . This can be easily extended to a set S of spatial regions, and we denote by S u the set of spatial regions specified by user u to protect absence privacy.

We now define a set of conditions that are sufficient to guarantee that absence privacy is enforced. Intuitively, if all the published resources are such that location privacy is enforced then by definition, for each resource r 0 in which a user u is tagged, no location in r 0 . STdata can be excluded as a possible location of u . Then, in order to guarantee that absence privacy is enforced, we postpone the publication of the resources until each APR of u is reachable from the STdata of each resource in which u is tagged. Theorem 2 captures this intuition.

Theorem 2. Let R 0 be the set of published resources and u be a user. Then absence privacy is enforced if the following two condition hold: (a) R 0 is such that location privacy is enforced (b) the publication time t of each r 0  X  R 0 is such that  X  s  X  S , the spatio-temporal region given by s  X  t is reachable from r . STdata
Figure 2 shows the architecture of the privacy enforcing system, including the interaction of the users with the sys-tem. We assume the presence of a centralized trusted en-tity that is in charge of processing the original resource and publishing it to the GeoSN after the generalization process described in the following.

When a user wants to publish a resource r , possibly re-lated to multiple users, the user sends the resource to the trusted system. A pre-processing module retrieves the pri-vacy preferences of the involved users and computes the gen-eralization srg that covers its users X  MURs.

The cloaking module checks whether the disclosure of srg introduces privacy violations when related to other resources previously processed. If so, the module applies a general-ization algorithm in an attempt to produce a more general resource that eliminates the violation. We show in Section 4 that there are cases in which such generalization will not be possible, and hence the publication should be denied. In all the other cases, the cloaking module finds a safe generaliza-tion r 0 and sends it to the Publisher module.

The Publisher module checks whether the users X  absence privacy preferences are violated by the immediate publica-tion of the resource and computes a publication time after which it is safe to publish the resource. The final resource is then stored in the local database, since it must be used to check new resources for possible violations. After the publication time has passed, the resource is published. The privacy-enforcing trusted system needs to know the Udata and STdata of each resource to be processed, but it does not rely fundamentally on the content of a resource. Thus, a variant of the system can return instructions to a user for how to safely publish a resource when simply given the Udata and STdata of the resource. This variant is at-tractive if the user does not want to reveal the content of a resource, e.g., a photo, to the system.

This also makes it possible to implement our techniques as a third-party application for existing GeoSNs. Indeed, many existing GeoSNs allow third-party applications to have limited access to the users X  data and to post resources on behalf of the users upon being authorized to do so.
This section presents Wyse (Watch Your Social stEp), our proposed privacy-preservation technique.
The general idea is the following. Given a resource r to be published and a stored, safe set R 0 of generalized resources, the technique produces a generalized resource r 0 such that { r } X  R 0 remains safe. As will be explained, it may hap-pen that it is impossible to find a proper r 0 . In this case, publication is denied.
 Figure 3 presents the different steps of the technique. First, the resource is generalized to a resource covering its users X  MURs. This step is performed by the Single Resource Generalization (SRG) module. Then the resource is sent to a cloaking module, where an additional spatial or temporal generalization is applied, if necessary. Finally, the resource passes through the absence module, where the publication time of the resource is defined so that absence privacy is enforced. We proceed to cover these steps in detail.
The SRG module performs a generalization of the origi-nal resource r according to the privacy preferences of each user associated with the resource and produce as output a generalized resource srg that covers its users X  MURs.
To obtain this result, a granularity G r is computed such that each granule of G r is the union of a set of granules of G u for each u in r. Udata . Then, the resource srg is produced such that srg . STdata = G r [ r. STdata ].

In order to guarantee that a proper granularity G r exists for each possible set r. Udata , we limit the possible spatial and temporal granularities each user can choose as location privacy preferences. In brief, we assume that each user u can choose a spatial granularity G S u in a set of granularities that are totally ordered. If a granularity G 1 precedes G respect to this order then every granule of G 2 is equal to the union of some granules of G 1 . The same applies for tempo-ral granularities. With these assumptions, the granularity G r exists and is obtained as the combination of the coarser spatial granularity G S u for each user u  X  r. Udata and the coarser temporal granularity G T u for each user u  X  r. Udata , denoted in the following with G S r and G T r , respectively. As srg . STdata is the granule G r [ r. STdata ], for simplicity we refer to this as the granule of srg , and we denote it as G [ srg . STdata ].
As observed in Section 2, privacy violations occur when resources are not independent. The aim of the cloaking mod-ule is to find a generalized resource, derived from srg and G , that does not cause a privacy violation when combined with resources in R 0 . The resulting generalized region is equivalent to or larger than srg . STdata . We propose two different cloaking algorithms, called CountryCloakWyse and ClockWyse , that apply a generalization only on the spatial or temporal dimensions, respectively.

In order to reduce the number of resources belonging to R that need to be considered during the generalization process, both algorithms exploit the transitivity property of reach-ability (Property 1). Indeed, to obtain the independence with respect to all resources, it is sufficient to identify a set of relevant resources and to enforce independence with re-spect to the resources in this set. To formally define the rel-evant resource, we need the following notation: resource r  X  X recedes X  resource r 2 if r 1 .T max  X  r 2 .T min and resource r  X  X ucceeds X  resource r 4 if r 3 .T min  X  r 4 .T max . The set of rele-vant resources can then be defined as the union, for each user u  X  r. Udata , of the resources r i  X  R 0 such that u  X  r and one of the following conditions holds: In addition, in order to efficiently compute the independence of the relevant resources, we exploit Property 2 that reduces the problem of evaluating reachability to the computation of a single inequality.

Property 2. Given a velocity v and two resources r 1 and r , r 1 is reachable from r 2 if and only if the following con-dition holds: h s ( r 1 . STdata , r 2 . STdata )  X  where | r 2 . Tdata | = r 2 .T max  X  r 2 .T min and h s and h direct spatial and temporal Hausdorff distances, respectively. The direct spatial (temporal) Hausdorff distance between r . STdata and r 2 . STdata is the maximum distance between any point in r 1 . Sdata ( Tdata ) to its closest point in r ( Tdata ). The spatial Hausdorff distance has been exploited in literature to describe attacks based on the knowledge of maximum velocity [2]. Property 2 is an extension for spatio-temporal regions that also considers the direct tem-poral Hausdorff distance.

The next two sections illustrate our two proposed gener-alization algorithms.
CountryCloakWyse generalizes Sdata with respect to the srg while preserving Tdata . This kind of generalization is thus suitable for services in which a high time accuracy is desirable, such as microblogging services.

The pseudocode can be found in Algorithm 1. Overall, the idea of the algorithm is the following. First, from the relevant resources, two sets of granules of G r are identified, among the set G srg . Tdata of the granules obtained as the product of each spatial granule of G S r with G T r [ srg . Tdata ], The set S safe contains granules such that if the granule of srg Algorithm 1 CountryCloakWyse Input : The resource srg , the granularity G r and a safe set of resources R 0 .
 Output : A resource r 0 such that R 0  X  X  r 0 } is a safe set. 3: R R = { set of resources in R 0 that are relevant to srg } 4: for each r R  X  R R do 6: SI safe = { g  X  G srg . Tdata : g is independent from r 9: end for 11: if ( G r [ srg . STdata ] 6 X  S gener  X  S safe ) or ( S 12: return null { Deny the publication } 13: end if 14: cg = NN of srg in S safe 15: r 0 . Sdata = S { RNN of cg in S gener } 16: r 0 . Sdata = r 0 . Sdata  X  cg 17:  X  r 0 . Tdata , r 0 . Content  X  X  X  X  srg . Tdata , srg . Content  X  is one of these granules then it would not require any gen-eralization. The set S gener contains the granules such that if the granule of srg is one of these granules then a general-ization is required to guarantee independence (lines 2 X 10). If the granule of srg is neither in S gener nor S gener , or if S safe is empty, then the publication of the resource is denied (lines 11 X 12). Otherwise, due to Property 3, if srg . STdata is a granule of S gener , then, to guarantee the independence of the resource, it is sufficient to generalize srg . STdata so that a granule of S safe is included. In order to achieve this with a non-invertible algorithm, the following is performed: the granule cg is computed as the granule in S safe that is the nearest neighbor (NN) of srg . STdata (this can be srg . STdata itself, if it is a granule in S safe ). Then the generalization is computed as the union of cg with the set of granules of S gener that considers cg as the closest granule in S safe . This is computed with a reverse nearest neighbor (RNN) query (lines 14 X 15). Both the NN and the RNN queries are com-puted considering the centers of the granules as source and targets.

Property 3. Let A , B , and C be spatio-temporal regions such that A is reachable from C and A is not reachable from B . Then A is reachable from B  X  C .
 An example of the algorithm is illustrated in Figure 4. The figure represents the safe and generalizable granules for srg and a related resource r R , the closest safe granule to srg and the resulting generalization. In general, the generaliz-able granules are partitioned with respect to their closer safe granule, and all the granules that belong to a partition are retrieved as the output of the generalization.
ClockWyse performs temporal generalization technique and is suitable for services in which it is desirable to preserve the accuracy of the spatial location, like in check-ins, rather than maintaining an accurate temporal interval. In this case, a generalization is computed considering the set G srg . Sdata of the granules obtained as the product of each temporal granule of G T r with G S r [ srg . Sdata ].

The pseudocode is shown in Algorithm 2. The idea of the algorithm is the following: as in CountryCloakWyse , the two set of granules S safe and S gener are computed from the relevant resources. However, in this case, since the gener-alization is performed on a single dimension (the temporal dimension) S safe and S gener are intervals of time granules and hence can be specified in terms of the intervals X  boundaries. Another difference with respect to CountryCloakWyse is that to compute the two sets, it is necessary to consider the three cases in which a relevant resource is preceding, succeeding, or concurrent wrt. srg (lines 3 X 16).
 Figure 5: Temporal generalization (one-dimensional space)
We explain the algorithm for the case in which a relevant resource r R precedes srg ; the other cases are analogous. See Figure 5 that shows, for the sake of simplicity, a single spatial dimension. If g 1 is the granule of srg then srg . STdata is not reachable from r R . Hence, even if srg is generalized, it is still unreachable from r R , and the publication of the resource has to be denied (lines 17 X 18). All of the granules to the right of g are reachable from r R . However r R is not reachable from all of them. Indeed, r R is not reachable from the granules to the left of s fut . According to Property 3, these granules can be generalized together with a granule in S safe to enforce location privacy. The solution adopted to achieve this with a non-invertible algorithm is the following: if the granule of srg is s fut or in S gener then the temporal domain is generalized to the  X  X eneralization X  box, i.e., the union of s fut and all the granules in S gener (lines 19 X 20). Otherwise, if the granule of srg is in S safe , but is not s fut , no temporal generalization is applied (line 23 X 24).

A numerical example showing a two-dimensional space can be seen in Figure 6. The striped lines centered in each resource r 0 with radius t = x enclose, for a user who is inside r and can travel at a maximum velocity of v , the possible locations after x time instants. Graphically, these regions Algorithm 2 ClockWyse Input : The resource srg , the granularity G r and a safe set of resources R 0 .
 Output : A resource r 0 such that R 0  X  X  r 0 } is a safe set. 2: R R = { set of resources in R 0 that are relevant to srg } 3: for all r R  X  R R do 4: if ( srg is concurrent with r R ) or 5: s past , s fut  X  past/future safety boundaries 6: ge fut  X  future generalization boundary 7: ge past  X  Previous granule of ge fut  X  1 8: else if srg .T min  X  r R .T max then 9: ge fut  X  future generalizable boundary 10: s fut  X  future safety boundary 11: else 12: ge past ,  X  past generalizable boundary 13: s past  X  past safety boundary 14: end if 15: Update generalizable and safety boundaries 16: end for 17: if ( Ge past &lt; srg &lt; Ge fut ) or ( S fut &gt; S 18: return null { Deny the publication } 19: else if Ge fut  X  srg  X  S fut then 21: else if S past  X  g  X  Ge past then 23: else 24: r 0 . Tdata = srg . Tdata { No generalization } 25: end if 26:  X  r 0 . Sdata , r 0 . Content  X  X  X  X  srg . Sdata , srg . Content  X  correspond to the Minkowski sum of r 0 . Sdata and a circular region having radius v  X  x (to simplify the notation, in the figure we write t = x to refer to t = v  X  x ).
 Figure 6: Example of temporal generalization (two-dimensional space)
The figure shows the Minkowski sum of r R . Sdata and a circular region having radius t = 4, which is the time dif-ference between srg . Tdata and r R . Tdata . As this region contains srg , it means that it is possible to travel from r to any point of srg in 4 time instances. Therefore, srg is reachable from r R and the resource can be generalized by our technique (if this first condition does not hold, our al-gorithm denies publication). However, as can be observed in the figure, the opposite does not hold: it is not possi-ble to reach, from srg , all the points in r R in 4 time in-stants. Thus, r R is not reachable from srg . Intuitively, if srg is published, there is a part of r R that could be dis-carded as the origin of the resource r R (a user must have been in the light gray region of r R in order to be able to reach srg by time t = 5). Therefore, a generalization tech-nique must be applied. Our temporal generalization obtains the following values: (a) Ge fut = 3 + 1, which intuitively corresponds to the minimum radius of a circular region such that the Minkowski sum of r R . Sdata and that circular region fully covers srg , plus r R . Tdata , and (b) S fut = 6 + 1, which intuitively corresponds to the minimum radius of a circu-lar region such that the Minkowski sum of srg . Sdata and that circular region fully covers r R , plus r R . Tdata . Then, srg . Tdata is generalized to the interval [ Ge fut , S fut A resource r 0 generalized by CountryCloakWyse or ClockWyse is guaranteed to be independent from every other existing resource, but this does not offer any guaran-tees with respect to the absence privacy preferences S u of the users (see Section 2.5). To enforce absence privacy, the publication time of the resource must be computed in a way such that every spatial region in the S u of the users in Udata is reachable from r 0 at that time. Algorithm 3 computes the publication time of a resource r 0 considering absence privacy preferences.
 Algorithm 3 MinimumPublicationTime Input : A resource r 0 generalized by the cloaking module Output : The minimum publication time for r 0 1: delay = 0 2: for all u  X  r 0 . Udata do 3: S u = the set of spatial regions chosen by u in the 4: for all apr  X  S u do 6: end for 7: end for 8: return delay + r 0 .T min
To determine the publication time of the resource, the maximum value between r 0 .T max and the value of Mini-mumPublicationTime is first stored in a temporary attribute r . pTime . The resource is then stored in the database of generalized resources, and the Publisher component is re-sponsible for releasing the generalized resource to the GeoSN once the time instant r 0 . pTime is reached. This guarantees that (a) it is not possible to exclude any of the points of r . Tdata as possible Tdata of the original resource, and (b) after pTime has passed, each user in Udata can be located in any of the spatial regions indicated by the absence privacy preference.

However, if another resource r 00 relevant to r 0 is submitted, processed and published before r 0 . pTime , in some particular cases, an adversary may detect, by looking at r 00 , that there is a resource waiting to be published in the system. In the worst case, the adversary can obtain accurate information about STdata and Udata of r 0 , and this could enable the adversary to determine that a user in Udata can not be lo-cated in one of the spatial regions indicated in the absence privacy preference. To ensure that this attack cannot be performed, we modify our cloaking algorithms so that, dur-ing the generalization of a resource r 0 , the maximum pTime of the resources that were considered for the generalization is stored in a variable called rel pT ime . The final publica-tion time of r 0 then becomes the maximum among rel pT ime MinimumPublicationTime( r 0 ), and r 0 .T max .
The Wyse algorithm enforces privacy because it guaran-tees the sufficient properties of Theorems 1 and 2. This is formally stated in Theorem 3.

Theorem 3. The Wyse algorithm enforces location and absence privacy.
 The correctness of the theorem follows from the following reasoning. To offer location privacy, the SRG module gener-alizes each resource so that it covers its users X  MURs (con-dition (a) of Theorem 1). Also, the cloaking module guar-antees that each resource is independent with respect to its relevant resources which, according to Property 1, means that the resource is independent of all the other resources (condition (b) of Theorem 1). As a result, the Wyse gorithm is not invertible (condition (c) of Theorem 1). In-tuitively, this holds because the Wyse algorithm implicitly computes a partition of the spatio-temporal domain. Then, the spatio-temporal attribute of each generalized resource g ( r ) is computed as the block containing r. STdata .
According to Theorem 2, it is sufficient to guarantee two conditions in order to enforce absence privacy. The first, which concerns the location privacy of the published re-sources, follows from the above reasoning. The second, which relates to the publication time, is guaranteed by the Absence module that delays the publication of resources according to user X  X  preferences. We conducted experiments to measure the impact of the Wyse technique on the quality of service, comparing the ClockWyse and CountryCloakWyse variants.
The experimental evaluation was performed on a survey-driven synthetic dataset of user movements, which was ob-tained using the MilanoByNight simulation 4 . We carefully tuned the simulator in order to reflect a typical deployment scenario of a GeoSN: 100,000 potential users moving between their homes and one or more entertainment places in the city of Milan during a weekend night. Locations are sampled ev-ery minute. The total size of the map is 215 km 2 , and the average density is 465 users/km 2 . The simulation also mod-els the time spent at the entertainment places, i.e., when no movement occurs, following probability distributions ex-tracted from user surveys. The observed maximum velocity is 55.05 km/h, which is used as the velocity parameter for the generalization techniques.

We extended the simulation by specifying how often the resources are generated by users. When a resource is gener-ated by a user, the other users that are located in the same place are associated with the resource, and the resource is submitted. However, as it is unlikely that all the users in the same place are associated with each resource generated in that place, we limit the number of users that can be as-sociated with the same resource. See everywarelab.dico.unimi.it/lbs-datasim
The experiments use regular granularities, i.e., all the granules of a granularity have the same size and shape. Each temporal granularity is identified by the duration of time covered by one single granule. Each spatial granularity is identified by the size of the edge of one cell of a grid. The conversions from a spatio-temporal location to the respec-tive spatial and temporal granules are performed in constant time.

For absence privacy, we assume that each user X  X  home is sensitive. For simplicity, we assume that each user se-lects randomly, at the beginning of the simulation, a spatio-temporal granularity among the ones we consider. To ob-serve the impact of the preferences, we limit the minimum granularity that a user can choose. The parameters used in the experiments are shown in Table 1, with default values in bold. We implemented our algorithms using the Java lan-guage, and the studies were performed on a computer with a 2.5 GHz Intel Xeon processor and 32GB of shared RAM, running 64-bit RedHat Enterprise Linux 5 and using 1GB of allocated memory for the JVM.

Figure 7(a) shows the percentage of times a technique fails to find a safe generalized resource, considering differ-ent resource posting frequencies. In order to observe when the cloaking techniques actually avoid a resource from be-ing dropped, we developed a technique that consists only of the Single Resource Generalization step (SRG) and that drops the resource when the resulting generalization violates privacy. As can be observed, the percentage of dropped resources grows when the resources become more frequent. This is because it then becomes more likely that the relevant resources are close in time and the privacy condition is not satisfied. We can also observe that both the ClockWyse and CountryCloakWyse techniques can often produce a safe generalized resource even when the resource generated by SRG is unsafe. In particular, with our default values, the CountryCloakWyse and ClockWyse algorithms drop about one half of the resources dropped by SRG, and the drop ratio of ClockWyse grows much more slowly than those of the other techniques.

To observe the generalizations applied to the resources, we analyzed the average spatial area, the average temporal duration (i.e., the length of the temporal interval T data ), and the average publication delay.

Figure 7(b) shows the average area using different val-ues for the minimum G s chosen by users. As it can be observed, the area grows linearly with the edge length of the spatial granules. In addition, the CountryCloakWyse generates, on average, regions having areas larger than the ones generated by SRG. This is expected because the Coun-tryCloakWyse attempts to extend the spatial region to avoid privacy violations and/or dropping.

In Figure 7(c), we measure the average time duration of the generalized resource considering different minimum val-ues of G T u . With our default parameters and using both algorithms, the average time duration is around 40 minutes, (c) Time interval with ClockWyse and CountryCloakWyse performing similarly. However, ClockWyse may produce a time inter-val that is significantly longer than the average. The verti-cal bars show the maximum time durations observed in the experiments. For this reason, it is suggested to use Coun-tryCloakWyse for those services that perform better with a more accurate time duration.

Figure 7(d) shows the average publication delay of the re-sources generated by our techniques for varying maximum values of Udata . The delay can be caused by both the time generalization due to location privacy enforcement and the delay due to absence privacy enforcement. The results indi-cate that the larger the number of users in Udata , the more delay is added to the resource. This happens mainly be-cause having more users in Udata increases the probability that some user has stricter (i.e., coarser) location privacy preferences and also results in more absence privacy prefer-ences that need to be satisfied.
We measured the runtime required by each algorithm to process a resource. With our default values, the average computation time for ClockWyse is 23.24 ms, while it is 39.13 ms for CountryCloakWyse . These results suggest that our prototype can support a mid-scale resource publish-ing service. This is without any optimizations to the code. We believe that the cost of some operations (e.g., the NN and the RNN operations) can be significantly reduced by optimizations, including the use of spatio-temporal indexes.
As social networking services continue to proliferate, there is an increasing need for means of affording users privacy. This paper proposes such means for a setting in which so-cial network users can publish resources that have spatio-temporal tags and that reference other users X  X  prototypi-cal example is a photo with location and time and a listing of who appears in the photo.

This paper addresses two privacy threats in this setting, namely location privacy and absence privacy. The former concerns the availability of information about the presence of users in specific locations at given times, while the latter concerns the availability of information about the absence of an individual from specific locations during given periods of time. The paper is the first to address these threats in this setting.

The paper formalizes the setting, provides a foundation for easily defining privacy preferences, and provides tech-niques that generalize the tags of resources so that these remain useful while ensuring that the privacy preferences are enforced. These techniques exploit spatial and temporal generalization, and they utilize publication delays. An em-pirical study characterizes the impact of the proposal on the quality of service, considering the number of resources that are dropped, the extents of the spatio-temporal generaliza-tions, and the publication delays, suggesting that these are relatively modest. Further, the runtime of the techniques is low.

In future research, it is relevant to study how to best en-able users to specify their location and absence privacy pref-erences as supported by the paper X  X  proposal. Next, it may be of interest to consider more general privacy preferences. Finally, it is of interest to consider integration with access control mechanisms.
 This work was partially supported by Italian MIUR un-der grants PRIN-2007F9437X and FIRB-RBFR081L58 002, and by the NSF under grant CNS-0716567. The research was performed when C. S. Jensen was with Aalborg Univer-sity. C. S. Jensen is an adjunct professor at University of Agder, Norway.
