 ANDREW H. SUNG and MENGYU QIAO ,NewMexicoTech Steganography is the secret embedding of information into digital objects such as images, audios, videos, documents, network packets, etc. The innocuous digital media or files are called carriers or covers, the covers embedded with hidden data are called steganograms. As there is little or no perceptible difference between the cover and the steganogram, the potential of exploiting steganography for covert dissemination of malicious software, mobile code, illegal material or protected information is great. Recent media reports 1 and court documents released by the U.S. Justice Department have revealed the first confirmed use of steganography for espionage. Therefore, there is a heightened need for implementing effective countermeasures for steganography, and developing steganalysis techniques with improved efficiency and reliability will be crucial.

Image steganography can roughly be divided into two types: space-hiding directly embeds data in pixel values, for instance, LSB matching [Sharp 2001], improved LSB matching steganography [Mielikainen 2006], and highly undetectable steganography [Pevny et al. 2010]; transform-hiding hides data in the transform coefficients, such as compressed DCT compressed domain [Westfeld 2001; Chang et al. 2007]. Some other information hiding techniques include spread spectrum steganography [Marvel et al. 1999], statistical steganography, distortion, and cover generation steganography [Katzenbeisser and Petitcolas 2000], etc.

Seganalysis generally employs techniques of signal processing, feature mining, and pattern recognition, and aims at detecting the existence of hidden material. To this date, a few popular steganographic systems such as LSB embedding, LSB matching, spread spectrum steganography, etc., have been successfully steganalyzed [Harmsen and Pearlman 2003; Ker 2005; Lyu and Farid 2005; Liu and Sung 2007; Liu et al. 2008a, 2008b, 2008c, 2009a, 2009b, 2010a, 2010b].

JPEG image is one of the most popular media and several steganographic systems for hiding data in JPEG images are available on the Internet, including commercial hiding software CryptoBola, well-known hiding algorithms/tools Outguess [Provos 2001], F5 [Westfeld 2001], steghide [Hetzl and Mutzel 2005], YASS [Solanki et al. 2007], and the improved versions [Sarkar et al. 2008a, 2008b], minimal distortion steganography by using modified matrix encoding (MME) [Kim et al. 2006] and the improved version based on BCH syndrome coding [Sachnev et al. 2009], etc.

To detect the information-hiding in JPEG images using the steganographic algorithm F5, Fridrich et al. [2002] designed a method to estimate the cover-image histogram from the steganogram. To break the recently designed JPEG steganography YASS, Li et al. [2009] proposed a method by extracting the statistical features from locations that are possible to hold embedding host blocks. Yu and Babguchi [2008] performed the detection via pixel and DCT coefficient analysis; Kodovsky et al. [2010] conducted the study by using different feature sets. To design a universal steganal-ysis method, Harmsen and Pearlman [2004] implemented a detection scheme using only the indices of the quantized DCT coefficients in JPEG images. Fridrich [2004] pre-sented a feature-based steganalytic method for JPEG images. Shi et al. [2007] applied a DCT intra-block-based Markov approach to effectively attacking JPEG steganography, which demonstrated a remarkable advantage over the prior methods. Inspired by Shi et al. X  X  [2007] work, Pevny and Fridrich [2007] merged the DCT features and calibrated Markov transition probabilities to improve the detection performance. Recently, based on the method in Shi et al. [2007], Chen and Shi [2008] and Liu et al. [2008c] indi-vidually expanded the original intra-block Markov approach to inter-block approach. The experimental results demonstrate that the approach integrating intra-block and inter-block Markov transition features outperforms other popular methods [Chen and Shi 2008].

Unfortunately, Chen and Shi [2008] and Liu et al. [2008c] have not elaborated on the reason why the approach is successful. To study this issue, we explored the statis-tical property of DCT coefficients and found that, most JPEG steganographic systems modify the DCT coefficients and hence change the correlation of neighboring DCT coefficients. Specifically, embedding of the secret information changes the neighbor-ing joint distribution and, therefore, Markov transition probabilities are affected. Our study also shows that, that Markov approach does not completely represent the neigh-boring joint relation, that is, it falls short of fully exploring the modification caused by information-hiding [Liu et al. 2009c].

In this article, we present an approach based on the neighboring joint probabilities of the DCT coefficients on intra-block and inter-block. A support vector machine is em-ployed for pattern analysis. Additionally, an evolving neural-fuzzy inference system is used to predict the hiding amount in JPEG steganograms. Experimental results show that, in detecting several JPEG-based steganographic systems, our method promi-nently outperforms the well-known Markov-process based approach. Meanwhile, our method also obtains good prediction of the hiding amount in the steganograms.
The remainder of the paper is organized as follows: Section 2 studies the neigh-boring joint statistical model on the DCT coefficients and the modification caused by information-hiding. Section 3 describes our method of feature extraction and an intro-duction of feature selection method of SVMRFE. Section 4 presents our experiments and analysis, followed by conclusions in Section 5. Generalized Gaussian distribution (GGD) is widely used in modeling probability density function (PDF) of a multimedia signal. It is very often applied to transform coefficients such as discrete cosine transform (DCT) or wavelet ones [Ohm 2004]. Ex-periments show that adaptively varying two parameters of the generalized Gaussian distribution (GGD) [Sharifi and Leon-Garcia 1995] can achieve a good probability dis-tribution function (PDF) approximation, for the marginal density of transform coeffi-cients. The GGD model is described as where ( z ) =  X  0 e  X  t t z  X  1 dt , z &gt; 0 is the Gamma function, scale parameter width of the PDF peak, and shape parameter  X  models the shape of the distribution.
Although there does not appear to exist a generally agreed upon multivariate ex-tension of the univariate generalized Gaussian distribution, some researchers define a parametric multivariate generalized Gaussian distribution (MGGD) model that closely fits the actual distribution of wavelet coefficients in clean natural images, exploit the dependency between the estimated wavelet coefficients and their neighbors or other coefficients in different subbands based on the extended GGD model, and achieve good image denoising [Cho and Bui 2005]. The MDDG model is given by where  X  indicates a normalized constant defined by  X  and  X  matrix and  X  is the expectation vector.

To exploit the dependency between the compressed DCT coefficients and their neigh-bors, we study the neighboring joint density of the DCT coefficients, and postulate that information hiding will modify the neighboring joint density. Let the left (or upper) adjacent DCT coefficient be denoted by random vector X 1 and the right (or lower) adjacent DCT coefficient be denoted by random vector X 2 ;let X data are embedded in the compressed DCT domain in JPEG images by using one of the several JPEG steganographic algorithms/tools, the DCT neighboring joint probability density is affected, and the change hence leaves a track for steganalysis. An example of the modification of the joint density is illustrated by Figure 1. Figures 1(a) and (d) show a JPEG cover and the compressed DCT neighboring joint density probability, respec-tively. Figures 1(b) and (e) give the F5 steganogram carrying some hidden data and the neighboring joint density distribution. Figures 1(c) and (f) are the steghide steganogram and the joint density, respectively. Although the three images look identical, the neigh-boring joint densities are different. The differences are given in Figures 1(g) and (h), indicating that information hiding modifies the neighboring joint density. Figures 1(c), (d), and (e) also demonstrate that the neighboring joint density is approximately sym-metric about the origin. Considering this property, we anticipate that the neighboring joint density of the absolute values of the DCT coefficient array will be changed, by the information hiding, which is validated by Figures 1(l) and (m). Figures 1(i), (j), and (k) exhibit the neighboring joint densities of the absolute values of the DCT coefficient arrays. In our detection algorithm, the neighboring joint features are extracted on intra-block and inter-block from the DCT coefficient array and the absolute array, respectively, described as follows. 3.1.1. Neighboring Joint Density on Intra-Block. Let F denote the compressed DCT co-efficient array of a JPEG image, consisting of M  X  NblocksF j = 1 , 2 ,..., N). Each block has a size of 8  X  8. The intra-block neighboring joint density matrix on horizontal direction NJ 1 h and the matrix on vertical direction NJ are constructed as follows: where c ijmn stands for the compressed DCT coefficient located at the m th row and the n th column in the block F ij ;  X  = 1 if its arguments are satisfied, otherwise, and y are integers. For computational efficiency, we define NJ density features on intra-block, calculated as follows:
Based on the modification of the neighboring joint density caused by information hiding, shown in Figure 1, in our experiment, the values of x and y are in the range of [  X  6, + 6], so NJ 1 has 169 features.

It is worth noting that if the ranges of x and y increase, the number of features will increase greatly. As shown by Figure 1, the modification caused by information hiding is negligible while the values of x and y are away from the origin; in such case, the feature extraction and classification take more time but the detection may not be better. On the contrary, if the ranges of x and y are too small, say, in the range of [ features will be unable to completely reflect the modification caused by information hiding. 3.1.2. Neighboring Joint Density on Inter-Block. The inter-block neighboring joint density matrix on horizontal direction NJ 2 h and the matrix on vertical direction NJ constructed as follows:
We define NJ 2 as the neighboring joint density features on inter-block, calculated as follows:
Similarly, the values of x and y are in the range of [  X  6, 3.2.1. Neighboring Joint Density on Intra-Block. Let F denote the compressed DCT coeffi-cient array as before. The intra-block neighboring joint density matrix on horizontal direction absNJ 1 h and the matrix on vertical direction absNJ where c ijmn is the DCT coefficient located at the m th row and the n th column in the block F ij ;  X  = 1 if its arguments are satisfied, otherwise computational efficiency, we define absNJ 1 as the neighboring joint density features on intra-block, calculated as follows:
In our algorithm, the values of x and y are in the range of [0, 5], so absNJ of 36 features. 3.2.2. Neighboring Joint Density on Inter-Block. The inter-block neighboring joint density matrix on horizontal direction absNJ 2 h and the matrix on vertical direction absNJ are constructed as follows:
We define absNJ 2 as the neighboring joint density features on inter-block, calculated as follows: Similarly, the values of x and y are in [0, 5] and absNJ 2 The 5000 original TIFF raw format digital images used in the experiments are 24-bit, 640  X  480 pixels, lossless true color and never compressed. In accordance with the method of Lyu and Farid [2005], Liu and Sung [2007], and Liu et al. [2008a, 2008b], we cropped these original images into 256  X  256 pixels in order to eliminate the low-complexity parts and converted the cropped images into JPEG format with the default quality. The following six types of steganograms are generated by hiding different data into the 5000 JPEG images with different hiding ratios.
 (1) CryptoBola. CryptoBola is a commercial information-hiding software that deter-mines the parts (bits) of the JPEG-encoded data that play the least significant role in the reproduction of the image, and it replaces those bits with the bits of the secret message. CryptoBola JPEG is available at http://www.cryptobola.com/. (2) JPHS ( JPHIDE and JPSEEK ). The design objective of JPHS was not sim-ply to hide a file but rather to do this in such a way that it is impossible to prove that the host file contains a hidden file. JPHS for Windows (JPWIN) is available at: http://digitalforensics.champlain.edu/download/jphs 05.zip/. (3) Steghide. Hetzl and Mutzel [2005] designed a graph-theoretic approach for information-hiding based on the idea of exchanging rather than overwriting pixels. Their approach preserves first-order statistics, and the detection on the first order doesn X  X  work. (4) F5 . Westfeld [2001] proposed the algorithm F5 that withstands visual and statis-tical attacks, yet it still offers a large steganographic capacity. (5) and (6) Model Based Steganography without Deblocking ( MB1 ) and with De-blocking ( MB2 ). Sallee [2004] presented an information-theoretic method for perform-ing steganography. Using the model-based methodology, an example steganography method is proposed for JPEG images that achieves a higher embedding efficiency and message capacity than previous methods while remaining secure against first-order statistical attacks.

Some steganogram created by using these steganographic systems and cover exam-ples are shown in Figure 2. Chen and Shi [2008] designed an expanded Markov transition probability based fea-ture set, and their study shows that the feature set outperforms other popular feature sets. Specifically, the method applies Markov approach to the differential neighboring coefficients on intra-block and inter-block. In this article, the Markov approach based feature set, DCT coefficient array based neighboring joint density feature sets, defined by Eqs. (5) and (8), and DCT coefficient absolute array-based neighboring density fea-ture sets, defined by Eqs. (11) and (14), are compared with respect to their performance in detecting JPEG steganography. Our approaches are abbreviated as NJ and absNJ, respectively. Table I lists the feature sets in our experiments.

SVM light is an implementation of Vapnik X  X  Support Vector Machine [Vapnik 1998] for the problem of pattern recognition, for the problem of regression, and for the prob-lem of learning a ranking function. The optimization algorithms used in SVM described in Joachims [1999, 2000, 2002]. The algorithm has scalable memory require-ments and can handle problems with many thousands of support vectors efficiently. In our experiments, we apply SVM light with Radial Basis Function (RBF) kernel as the learning classifier to the features for classification, the kernel parameter is 0.01. In detection of each type of stego-images, three types of feature sets are compared: intra-block, inter-block and both. 100 experiments are performed on each type of fea-ture set. In each experiment, 30% samples are randomly chosen for training and other 70% samples are used for testing. The testing results consist of true positive (TP), false positive (FP), false negative (FN), and true negative (TN). The detection performance is evaluated by the classification accuracy, w  X  TP/(TP + TN), where w is a weighting factor in the range of [0, 1]. Without losing generality, w has been set to 0.5 in our experiments. The mean values over the 100 testing are shown in Table II.

In this article, the ratio of the number of modified DCT coefficients to the total number of non-zero DCT coefficients is used to measure the embedding strength; the ratio of the number of modified DCT coefficients to the total number of DCT coefficients is used as modification ratio. With the same amount of hidden data embedded into different JPEG images, the embedding ratio will likely be different since different JPEG images have different number of non-zero DCT coefficients. The average embedding strengths shown in Table II were used for experiments to demonstrate the detection performance under different embedding strength. In comparison of the three types of features, the best result is highlighted in bold. The results show that neighboring joint density based approaches outperform the Markov process based approach; some improvements are as high as over 20%.

Figure 3 demonstrates ROC curves in detecting the six types of steganograms by using absNJ, NJ, and Markov intra-and inter-block features. These results show that the advantage of the neighboring joint density based approaches over the Markov approach is significant and quite noticeable. As shown by our previous work on steganalysis of LSB matching steganography, even when the same amount of hidden data was embedded in images with the same spatial size, the detection performances under different image complexities will be different. To study the detection performance under different image complexities for image ste-ganalysis, we previously adopted the shape parameter  X  of the GGD to measure the image complexity and found that image complexity is a significant factor in the eval-uation of detection performance. To decrease the computational cost in measuring the image complexity, here we simply take the ratio of the number of non-zero DCT co-efficients to the number of total DCT coefficients, including non-zero and zero DCT coefficients, to measure the image complexity. Additionally, we roughly represent the amount of covert message by the ratio of the number of modified DCT coefficients to the total number of DCT coefficients. Due to different hiding methods and different hiding capacity associated with different image complexity, in addition to investigating the relation between detection performance and image complexity, it would be more com-prehensive and rigorous to explore the relation among detection performance, image complexity, and amount of hidden message.

In machine learning, the Matthews Correlation Coefficient (MCC), which can be calculated by (TP  X  TN  X  FP  X  FN) / sqrt((TP + FP)  X  (TP + (TN + FN)), is generally used as a balanced measure even if the classes are of very different sizes regarding the quality of binary classification. In Figure 4, the figures on the left demonstrate the MCC values in our detection by using Support Vector Machine; the figures in the middle column show the hiding statistics of the average modification ratio of the DCT coefficients in the steganograms and the covers under different image complexities; the figures on the right exhibit the prediction error of the modification ratio with the use of Dynamic Evolving Neural-Fuzzy Inference System (DENFIS) that was presented in the reference [Kasabov and Song 2002].

It is clear that neighboring joint density based approaches are generally superior to the Markov approach. The results in Figure 4 also demonstrate the relation among detection performance, image complexity, and the modification ratio. At low-image complexity, as the modification ratio apparently increases with the increasing of im-age complexity, the detection performance measured by MCC values increases, which shows that information hiding strength is the significant factor for the evaluation of detection performance. At middle image complexity, as the modification ratio increases (steghide, MB1, and MB2) with the increasing of image complexity, there is no no-ticeable increasing of the MCC values, some detection performance even drops, which shows that image complexity is an significant factor for the detection evaluation. At high-image complexity, when the modification ratio increases as the image complexity increases, the detection performance deteriorates, and image complexity is a crucial factor for the detection evaluation.

Regardless of the specifics of information hiding ratio and image complexity, Table III lists the means of the MCC values and Table IV gives the absolute values of the prediction errors on the modification ratio, wherein the mean values corresponding to the best detection are highlighted in bold. The results show that absNJ approach performs the best, followed by the NJ approach. Both neighboring joint-density-based approaches are superior to the Markov approach in most cases. For applications requiring speedy or real-time steganalysis, the task of processing large amounts of JPEG images can be extremely demanding. In such case, the number of features is an important issue since the real-time performance will be negatively af-fected if the number of features is too large. In our experiments, the performing time by using NJ and Markov approaches is much higher than the computational cost of absNJ approach due to the large number of features of these two approaches. Therefore, we analyze the relation between the detection performance and the number of features that are selected by using the feature selection method, SVMRFE, proposed by Guyon et al. [2002], an application of recursive feature elimination using the support vector weight magnitude as ranking criterion. Figure 5 demonstrates the average detection performance over fifty experiments under different image complexities (here the im-age complexity is measured by the GGD shape parameter  X  of the DCT coefficients). Compared to the results in Table II, the comparable detection accuracy is obtained by using even much fewer features.
 In steganalysis, the Markov process based approach originally proposed by Shi et al. [2007] is highly referenced due to its promising detection accuracy. It has been widely applied, adopted or modified with additional features by several researchers in the field. However, the authors did not elaborate on the reason for the success of the Markov transition probability features. Following their idea, we further explore the modifica-tion of the statistical property of the DCT coefficients caused by the information hiding. We found that the neighboring joint density of the DCT coefficients has been modified in several JPEG-based steganographic systems. It is the modification of the neigh-boring joint density that results in the modification of Markov transition probability; however, the change of the Markov transition probability cannot completely reflect the modification of the neighboring joint density. Therefore, the neighboring joint density features should be generally superior to Markov transition probability features with regard to detection accuracy, which has been verified by our experiments.
For practical applications, the detection time  X  in addition to detection accuracy another major performance issue due to the high-volume of JPEG images; in such case, it is preferable to have a smaller number of features. The two types of neighboring joint density features have the advantage of less processing time compared to the Markov approach  X  especially for the feature set extracted from the absolute DCT array, where the construction time of the classification model and the detection time are much shorter. Therefore, the two neighboring joint density features possess a great advantage in terms of both detection accuracy and processing time, and they provide an attractive solution to the problem of having to steganalyze large numbers of images with fast processing time and satisfactory detection accuracy.

Besides information-hiding ratio, or embedding strength, image complexity is a crit-ical parameter in the evaluation of detection performance. The detection at high-image complexity is not as reliable as the detection at low image complexity. It should be noted that the neighboring joint density features are also good to detect JPEG double compression, resized JPEG images and spliced images [Liu and Sung 2009]. In this article, we present neighboring joint density-based JPEG steganalysis from the DCT coefficient array and the absolute DCT coefficient array, respectively. Compared to the well-known Markov process based approach, our proposed method remarkably improves the steganalysis performance.

In terms of the two types of neighboring joint density-based approaches, the features extracted from the absolute DCT coefficient array has the advantage of achieving comparable or better detection accuracy with much fewer number of features and less detection time.

For most real-world steganalysis applications, the ability to identify a small or min-imal feature set that achieves satisfactory detection performance is a most important evaluation criteria for steganalysis algorithms, this is because of the extremely large number of media files that must be routinely steganalyzed and the fact that feature ex-traction usually constitutes the most time-consuming step in running the steganalysis algorithm. The results of this article demonstrate that, with judicious and sophisticated feature mining, it is possible to simultaneously achieve smaller feature set, faster de-tection time, and higher detection performance for JPEG image steganography.
