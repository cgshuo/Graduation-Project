 This paper addresses the challenges of providing customized collaboration support to teams of experts. Current group-ware systems only provide support for workflow-based col-laboration, avoiding new forms of collaboration such as emergent col-laboration. Therefore this paper proposes a elastic collabo-ration approach and its implementation in a groupware sys-tem.
 H.5.3 [ Information Interfaces and Presentation ]: Group and Organization Interfaces -Computer-Supported Cooperative Work.
 Design, Human Factors elastic collaboration; emergent collaboration; workflow-based collaboration; adaptive systems
The goal of this paper is to introduce the concept of elastic collaboration support and its implementation in groupware systems.

Elastic collaboration support represents a flexible type of collaboration, customized to users. The collaboration sup-port is elastic because comprises a continuum of collabora-tion support, ranging from traditional workflow-based col-laboration to new emerging forms of collaboration.
The term elastic collaboration is based on the dictionary entry 1 for elastic. According to one of the entry descriptions, this term refers to something that is  X  X apable of ready change http://www.merriam-webster.com/dictionary/elastic Figure 1: Collaboration components arranged ac-cordingtoaworkflowlayout. or easy expansion or contraction: not rigid or constricted X  . This description reflects the concept of elastic collaboration because the type of collaboration is ready to rapidly change within the continuum of collaboration: from workflow-based to emergent collaboration and the other way around.
In this paper, the next two sections describe the workflow-based collaboration and the emergent collaboration. The section three describes the elastic collaboration, a new ap-proach that customizes collaboration support. Finally, the section four describes the elastic collaboration applied to a machine diagnosis scenario.
Workflow management systems represent a class of sys-tems that separates the process logic from application func-tionalities [1]. Applying this class of systems to collabora-tion implies describing a process as a collaborative work-flow, which represents a sequence of collaborative activities to accomplish a task. Each activity is supported by an ap-plication functionality [6] [4]. The goal of these systems is to transfer the coordination task of the team to the system. The idea is that collaboration experts model their exper-tise as a collaborative workflow, such as described by Kolf-schoten [7], which is interpreted and provided by a system toateam.

A groupware system that supports workflow-based col-laboration is illustrated in the Figure 1. In this Figure, a workflow contains three steps, each of them representing at least one collaboration technique. In turn, each collabora-tion technique represents at least one collaboration compo-nent. In this approach, the system controls the execution of Figure 2: Collaboration components arranged ac-cordingtoadashboardlayout. the workflow and presents to the team the components that should be used at a certain point in time.

The advantage in this approach is that a team does not need to manage its coordination. A system assumes its co-ordination role and provides the team the suitable collabo-ration components for every step of the workflow. However this approach lacks flexibility for the team, especially for experienced engineers. Engineers are often experienced in their intrinsic tasks, such as machine diagnosis. Due to this fact, it is unlikely that they need guidance and coordination from the system.
In emergent collaboration, users coordinate themselves to accomplish a certain task instead of the system. Whereas in the previous approach the workflow is designed in advance, in emergent collaboration, interaction between users is not pre-defined.

Emergent collaboration is a similar concept such as, self-organizing distributed software systems, defined by Seru-gendo [2]. The authors observe that self-organization of a software is a process in which a system adapts its internal structure, according to the changes in its goals and the envi-ronment, without an explicit external control, enabling the system to develop an emergent behaviour.

A groupware system provides collaboration components as displayed in the Figure 2 to support emergent collaboration.
Dashboards are software platforms that integrate user in-terfaces of various systems, presenting and organizing infor-mation for easy interpretation [3]. In the context of this paper, a dashboard displays and executes various applica-tions (collaboration components) simultaneously. This ap-proach is associated to emergent collaboration because users are in control of collaboration and they can choose the set of components that suit them better.

The advantage of this approach is the flexibility of the team to decide on preferred collaboration components and on their coordination to accomplish the goals of, for exam-ple, a machine diagnosis process. A system intervenes as little as possible during collaboration: assuming the role of an observer , learning from team behaviour.
This paper proposes the combination of both collabora-tion types, calling it Elastic Collaboration . In this approach, participants of a team may shift from one type of collabora-tion to the other as in a continuum of collaboration.
A groupware system that implements elastic collaboration is called as a elastic groupware system . These systems sup-port workflow-based layout, the dashboard layout and the smooth transition between both collaboration types. During collaboration, participants of the team use various collabo-ration components that generate data, independent of the collaboration type. A transition between these implies the change of layouts and components. However, the transition should keep the state of collaboration components and the data generated by them during a collaboration type.
Another characteristic of elastic groupware system is the ability to recognize collaboration transitions. These systems constantly monitor a team to recognize their collaboration needs and propose an appropriate form of collaboration. To this purpose, the system controls the activities of users dur-ing collaboration. The main decision upon a collaboration type depends on the skills and experience of team mem-bers. Each team participant is characterized by a set of skills and an experience degree . Depending on the config-uration of team skills, team experience, number of partic-ipants and time, a system can recommend a collaboration type and adapt itself to it. For example, a system recom-mends a workflow-based collaboration for a team in which the majority are novice engineers and face a short deadline for a machine diagnosis problem. As most of the engineers are not experienced in machine diagnosis and they have a time constraint, they need the support of the system to co-ordinate the collaboration.
Engineers often perform maintenance activities, diagnos-ing machines used by the construction industry to increase their availability. These machines, e.g. wheel loaders, are connected through a remote infrastructure that monitors their performance data. If the machine issues degrading signals, a diagnosis team is allocated to investigate it and a deadline is set to avoid a machine breakdown. This situation forces engineers, from different specializations (e.g. mechan-ical engineering, stress engineering and fluid engineering) to collaborate, formulating a diagnosis and preparing action plans [5]. This situation is illustrated in Figure 3.
Workflow-based support is the current collaboration form to support the team, represented by the bottom part of the Figure 3. Whenever the remote infrastructure detects a ma-chine degrading signal, it triggers the elastic groupware sys-tem. This system, in turn, configure itself to the workflow-based profile. It assumes the coordination task, selects a collaborative diagnosis process, which fits the breakdown deadline, and guides the team of experts through the pro-cess. This type of collaboration may not be suitable for a team that in their majority are experienced engineers. As these engineers are experienced in diagnosis processes and the use of collaboration components, it is likely that they can coordinate themselves and do not need this type of system support. Therefore, the elastic groupware system recom-mends the emergent collaboration support, represented by the top part of the Figure 3. The system reconfigures itself, in a adaptation process, stopping the workflow-based sup-port and making the most suitable components involved in diagnosis processes available to the team. As the team is not coordinated by the system, they do not receive guidance on the usage of collaboration components. However, the team relies on their experience to define a strategy, using compo-nents, to formulate a diagnosis.

Elastic collaboration support is promising because it cus-tomizes collaboration support to the specific needs of team constellations rather than forcing a team to follow a specific collaboration type. However, this approach also introduces challenges in collaboration, such as the accurate recognition of situations that demand intervention and the acceptance of users in considering the interventions. This work has been partially supported by the FP7 EU Large-scale Integrating Project SMART VORTEX (Scalable Semantic Product Data Stream Management for Collabora-tion and Decision Making in Engineering) co-financed by the European Union. For more details, visit http://www.smartvortex.eu/ [1] A. L. Delbecq and A. H. Van de Ven. A group process [2] G. Di Marzo Serugendo, M.-P. Gleizes, and [3] W.W.Eckerson. Performance Dashboards Measuring, [4] C. A. Ellis, P. Barthelmess, J. Chen, and J. Wainer. [5] J. Janeiro, S. W. Knoll, S. G. Lukosch, G. L. [6] S. Knoll, M. Horning, and G. Horton. Applying a [7] G. L. Kolfschoten and G.-J. De Vreede. The
