 Since the data explosion era, analysis of data stream in real time is crucial in many data mining tasks including classification, clustering, anomaly detection, and pattern discovery. Generally, these tasks require a subsequence matching algorithm as an impo rtant subroutine. Recently, SP RING [1], a breakthrough subsequence matching algorithm for data stream under Dynamic Time Warping (DTW) distance [2] has been proposed. SPRING can report an optimal subse-quence in linear time. More specifically, SPRING incrementally updates DTW distance, for each new streaming data point, only in time complexity of the query sequence X  X  length. After the proposal of SPRING, many authors [3,4] have intro-duced fast algorithms to improve the subsequence matching. We claim that all of those past research works [1,3,4] are meaningless because the query sequence and candidate sequences from the data stream are not normalized. Normaliza-tion [5] is essential to achieve accurate and meaningful distance calculation, as it normalizes the data to have similar offset and distribution, regardless of the distance measure used, especially for DTW distance measure. Unfortunately, as we have mentioned above, current subsequence matching algorithms concern mostly about speed enhancement, no t on accuracy nor meaningfulness.
In this work, we introduce a novel subsequence matching algorithm called MSM ( M eaningful S ubsequence M atching) for data stream under DTW distance. MSM consists of two new ideas, i.e., LB_GUN ( L ower-B ounding distance function un-der G lobal constraint, U niform scaling, and N ormalization) and SSM ( S caling S ubsequence M atrix). LB_GUN is a new lower-bounding distance function which is extended from the well-known lower-bounding function LB_Keogh [6]. The dis-tances for every scaled query sequence a re stored in SSM, and then MSM algorithm monitors SSM to report the optimal range query or the optimal top-k query when a new streaming data point is received. From these two ideas, MSM can monitor data stream nearly in linear time, and it also achieves much higher accuracy than existing algorithms as we expect.

The remainder of this paper is organized as follows. We provide some essential background in Section 2, and state the problem definitions in Section 3. MSM, our proposed method, is described in Sectio n 4. Experimental results are reported in Section 5, and our work is concluded in Section 6. In this section, we provide essential background knowledge of Dynamic Time Warping distance measure, global constraint, lower-bounding function for DTW distance, uniform scaling, and normalization.
 Dynamic Time Warping Distance Measure. Dynamic Time Warping (DTW) distance measure [2] is a well-known shape-based similarity measure for time series data. It uses a dynamic programming technique to find an op-timal warping path between two time series. Suppose we have two time series sequences, a sequence X of length n and a sequence Y of length m . The distance is calculated by the following equations.
 where D ( X 1 ...n ,  X  )= D (  X  ,Y 1 ...m )=  X  , D (  X  ,  X  )=0 ,and X isanempty sequence. Any distance metrics can be used for d ( x i ,y j ) , including L 1 -norm, i.e., d ( x i ,y j )= | x i  X  y j | .
 Global Constraint. Global constraint efficiently limits the optimal path to give a more suitable alignment. Recently, an R-K band [7], a general model of global constraints, has been proposed. R-K band represents a global constraint by a one-dimensional array R , i.e., R = r 1 ,r 2 ,...,r i ,...,r n ,where n is the length of time series, and r i is the height above the diagonal in y -axis and the width to the right of the diagonal in x -axis. Each r i value is arbitrary; therefore, R-K band is also an arbitrary-shaped global constraint.
 Lower-bounding Function for DTW Distance. Although DTW outper-forms many other distance measures, it is known to consume huge computational cost. LB_Keogh has then been proposed to speed up similarity search. LB Keogh ( Q, C ) between the query sequence Q and a candidate sequence C = c 1 ,...,c i ,...,c n can be computed by the following equation.
 elements calculated from a global constraint R = r 1 ,...,r i ,...,r n . Uniform Scaling. Many research works [8,9] have been shown that when the uniform scaling technique is applied, perfor mance, especially th e accuracy, signif-icantly increases. More specifically, uniform scaling technique shinks/ stretches a time series sequence X = x 1 ,...x i ,...,x n to a new time series sequence Y = y 1 ,...y j ,...,y m ,where y j = x j  X  n/m .Wealsodefineascalingfactor f ,aratio between length m of new time series Y and length n of original time series X or f and maximum scaling factors which give lengths n min and n max , respectively. Normalization. The two time series sequences ar e compared using any similar-ity measure, all the data should first be normalized. Z-normalization [5] has been proposed and widely used in time series data mining community, making mean and standard deviation values of the new time series sequence to be zero and one, respectively. Suppose we normalize time series sequence X = x 1 ,...x i ,...,x n to sequence Y = y 1 ,...y i ,...,y n , we can simply formulate transformation func-series sequence X , respectively. In this paper, we focus on two main query problems, i.e., optimal range query and optimal top-k query. The objective of the optimal range query is to find non-overlapping normalized subsequences fr om a data stream, whose distance between a candidate sequence and a query sequence must be less than a threshold ,where the query sequence is scaled and normalized under uniform scaling between scal-ing range [ f min , f max ]. On the other hand, optimal top-k query reports top-k non-overlapping normalized subsequences. N evertheless, the scaled query sequences and all subsequences in the data strea m must be normalized in order to return meaningful results. A na X ve method to monitor a data stream first initializes a set of normalized scaled query sequences, a nd then candidate sequ ences are extracted from the data stream using sliding-window model. After normalization, distance calculation is performed and optimal results are reported (if any).However, this na X ve method requires a complexity as high as O ( n 3 ) for each new incoming streaming data point. Since the na X ve method consumes too large time complexity, we propose a novel approach for subsequence matching which gives meaningful result and gives the optimal result nearly in linear time. We call our proposed method as an MSM algorithm ( M eaningful S ubsequence M atching), which contains two new ideas, i.e., LB_GUN ( L ower-B ounding function under G lobal constraint, U niform scaling, and N ormalization) and SSM ( S caling S ubsequence M atrix). LB_GUN is a lower-bounding function of DTW distance which incrementally calculates lower-bounding distances under global constraint, uniform scaling, and normal-ization in linear time while guaranteeing no false dismissals. Three following subsections of LB_GUN, SSM, and MSM algorithm are precisely described. 4.1 Lower-Bounding Distance under Global Constraint, Uniform LB_GUN ( L ower-B ounding distance under G lobal constraint, U niform scaling, and N ormalization) is a lower-bounding function of DTW distance extended from LB_Keogh [6] whose distance calculation can be done in linear time. Be-fore calculation, LB_GUN first creates an envelope E from scaled and nor-malized envelopes. More speci fically, three sequence sets are generated, i.e., sets of
Q , R ,and E . The scaled query set Q = Q generated by scaling and normalizing a query sequence Q to every normalized scaled query sequence Q k = q 1 ,...,q j ,...,q k , and the scaled global constraint R = R straint set R with all possible scaling lengths from n min to n max .Anenvelope E k of a normalized scaled query sequence Q k and a scaled global constraint R k for sequence length k is created as in LB_Keogh, and is stored in the envelope set E = { E in the set E together, where E = u 1 ,l 1 ,..., u i ,l i ,..., u n max ,l n max find lower-bounding distance between a query sequence Q and a candidate se-quence C under global constraint, uniform scaling, and normalization, an enve-lope E of a query sequence Q is generated as mention above. LB GUN ( Q, C, n ) is shown in Equation 3.
 where  X  i =  X  scaling lengths, and n min  X  n  X  n max .
 4.2 Scaling Subsequence Matrix SSM ( S caling S ubsequence M atrix) is another important component in MSM algorithm. It stores lower-bounding distances determined by LB_GUN for each new incoming streaming data point s t at time t from data stream S . Suppose we have a query sequence Q ;eachelement t, j of the matrix contains five values, in matrix element t, j can be incrementally updated from the matrix element t  X  1 ,j  X  1 according to the following equations. enveloped E generated from a query sequence Q , 1  X  j  X  n max , n min  X  j  X  n max ,and lb t,j is a lower-bounding distance LB_GUN for an element t, j . 4.3 Meaningful Subsequence Matching Since SSM is updated at every arrival of new streaming data point s t ,ourMSM algorithm can monitor both optimal range query and optimal top-k query. More specifically, for optimal range query, MSM first calculates and updates values including lower-bounding distances in SSM, and then checks whether best-so-far distance d best is smaller than threshold . If so, MSM reports an optimal subsequence when there is no overlappi ng subsequence or when lower-bounding distance is larger than d best for all elements, and MSM resets d best and values in SSM. For all lower-bounding distance which is smaller than d best in range from n min to n max , DTW distance is computed to update d best and the optimal subsequence X  X  position. Additionally, MSM uses only two columns of SSM that are values in time t and values in time t  X  1 . The MSM algorithm for optimal range query is described in Table 1.

MSM algorithm for optimal top-k query is implemented based on the optimal range query. With a priority queue, MSM stores the k -best non-overlapping sub-sequence with DTW distance from the result of MSMOptimalRangeQuery . First, we initialize a threshold to positive infinity. Then, for every new stream-ingdatapoint s t , the queue is updated, and the threshold is set to the largest DTW distance in the queue. The MSM algorithm for optimal top-k query is described in Table 2. Since none of the current subsequence matching algorithms under DTW distance can handle the changes of data distribution, offset, and scaling, we compare our proposed method with na X ve approach in terms of computational time only since our proposed method and the na X ve method will both achieve the same accuracy. On the other hand, we compare our accuracy with SPRING, the best existing subsequence matching under DTW distance. Note that we do not compare our running time with that of SPRING; while SPRING will have smaller running time, its results are inaccurate without normalization, and therefore is not a reasonable comparison.

Streaming datasets are generated by combining training data sequences be-tween UCR classification/clustering datasets [10] and synthesized random walk sequences. A stream is initialized wi th a random walk sequence, and then a training data sequence is appended to the stream. To smooth the stream, before concatenation, each sequence is off set by the last value of the stream.
In the first experiment, we compare our MSM algorithm with na X ve method in terms of computational cost by measuring the number of distance calculations. As expected, MSM is much faster than the na X ve method by a large margin as shown in Figure 1. Additionally, in MSM, LB_GUN is efficiently used to filter out several candidate sequences while guar anteeing no false dismissal in linear time; therefore, MSM algorithm requires only a small number of DTW distance calculations comparing with the na X ve method.

Then, we compare our MSM algorithm with SPRING to measure perfor-mance in terms of accuracy, both Accura cy-on-Retrieval (AoR) and Accuracy-on-Detection (AoD). AoR reflects quality of an algorithm that is able to find the patterns in data stream; on the o ther hand, AoD reflects quality of the returned results. Suppose we have data stream S , a set of expected pattern sequences E , and a set of retrieved sequences R . We first define an overlap-ping subsequence. Let S [ t s : t e ] be the subsequence starting at t s and ending at t e . Overlapping subsequence O X,Y ,where X = S [ a : b ] and Y = S [ c : d ] , and overlap percentage P X,Y are defined as O X,Y = S [max { a, c } :min { b, d } ] fined over overlapping subsequence O X,Y and overlapping percentage P X,Y as tively, where p is a threshold of P X,Y that defines a sequence in R as a found sequence. The results, shown in Table 3, illustrate that MSM produces more meaningful result since SPRING does not support global constraint, uniform scaling, nor normalization.
 This paper proposes a novel and meaningful subsequence matching algorithm, so called MSM ( M eaningful S ubsequence M atching), under global constraint, uniform scaling, and normalization. Two ideas have been introduced in MSM al-gorithm, i.e., a lower-bounding distance (LB_GUN) and a scaling subsequence matrix (SSM). LB_GUN can update lower-bounding distance incrementally un-der normalization, while guaranteeing no false dismissals in linear time. The val-ues of calculation are then stored in SSM for each candidate sequence. With these two ideas, MSM algorithm can efficiently monitor data stream and can answer both optimal range query and optimal top-k query problems. Since none of the current algorithm produces meaningful result, we evaluate our proposed method comparing with the naive method in terms of time consumption and SPRING, the best existing subsequence matching under DTW distance, in terms of ac-curacies. As we have expected, our MS M algorithm is much faster and more accurate by a very large margin.
 This research is partially supported by the Thailand Research Fund given through the Royal Golden Jubilee Ph.D. Program (PHD/0141/2549 to V. Niennattrakul) and the Thailand Research Fund (Grant No. MRG5080246).

