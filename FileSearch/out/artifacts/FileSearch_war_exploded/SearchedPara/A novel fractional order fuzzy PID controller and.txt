 1. Introduction
So far the focus of the engineering community had been primarily on expressing systems with integer order differential equations and using a multitude of analytical and numerical solutions to optimize the formulation and analysis procedure.
However recent developments in hardware implementation ( Das, 2008 ; Podlubny et al., 2002 ; Charef, 2006 ) of fractional order elements have brought a renewed wave in the modeling and analysis of new class of fractional order systems, which look at natural phenomenon from a whole new perspective. The theory for fractional order systems have existed for the last 300 years ( Das, 2008 ). These extend our common notion of integer order (IO) differential equations to include fractional powers in the derivative and integral terms and have been shown to model natural processes more accurately than IO differential equations.
However the mathematical analysis behind these kinds of FO systems is naturally more involved than IO systems.

From classical control engineering perspective the stress has always been to obtain linearized model of a process and the controller as the control theory for these types of systems are already well formulated. With the advent of fuzzy set-theory there is perhaps some more flexibility in designing systems and expressing the observations in a more easy to follow linguistic notation. The fuzzy logic controller in a closed loop control system is basically a static non-linearity between its inputs and outputs, which can be tuned easily to match the desired perfor-mance of the control system in a more heuristic manner without delving into the exact mathematical description of the modeled non-linearity. Traditional PID controllers work on the basis of the inputs of error, the derivative and the integral of error. An attempt can be made to justify the logic of incorporating a fractional rate of error as an input to a controller instead of a pure derivative term. Assuming that a human operator replaces the automatic controller in the closed loop feedback system, the human opera-tor would rely on his intuition, experience and practice to formulate a control strategy and he would not do the differentia-tion and integration in a mathematical sense. However the controller output generated as a result of his actions may be approximated by appropriate mathematical operations, which have the required compensation characteristics. Herein lies the applicability of FO derivatives or integrals over their IO counter-parts as better approximation of such type of control signals, since it gives additional flexibility to the design. The rationale behind incorporating fractional order operators in the FLC input and output can be visualized like an heuristic reasoning for an observation of a particular rate of change in error (not in mathematical sense) by a human operator and the corresponding actions he takes over time, which is not static in nature since the fractional differ-integration involves the past history of the integrand and as if the integrand is continuously changing over time ( Das, 2008 ). Since the human brain does not observe the rate of change of a variable and its time evolution as pure numerical differentiation and integration, the fractional orders of differ-integration perhaps put some extra flexibility to map information in a more easily decipherable form. Our present day X  X  mathema-tical modeling techniques, motivated by integer order differ-integrals do not give this flexibility and fails to describe it adequately. It is investigated in the present study that the fractional rate of error perhaps is capable of providing extra flexibility in the design of conventional FLC based PID controllers ( Mudi and Pal, 1999 ) which works with error and its rate in a pure mathematical sense (IO). It is logical that the fractional rate of error introduces some extra degree of flexibility in the input variables of FLC and can be tuned also like the input X  X utput scaling factors as the FLC gain and shape of the membership functions (MF) to get enhanced closed loop performance. The present study investigates the effectiveness of the proposed fuzzy
FOPID controller at producing better performance compared to classical PID, fuzzy PID and even PI l D m controllers due to higher degrees of freedom for tuning. However, the objectives to be fulfilled by different controller structures must be chosen judiciously.

In this paper, the parameters of this new kind of fractional order fuzzy logic controller are optimally tuned with GA to handle a delayed nonlinear process and an open loop unstable process with time delay. Time domain performances of other controller structures viz. PID, fuzzy PID and PI l D m using Integral of Squared Control Signal (ISCO) along with various integral error indices like
Integral of Time multiplied Absolute Error (ITAE), Integral of Time multiplied Squared Error (ITSE), Integral of Squared Time multi-plied Error whole Squared (ISTES) and Integral of Squared Time multiplied Squared Error (ISTSE) are compared and the effective-ness of the different controllers are evaluated therein. Optimal tuning of FLC based PID can be found in few literatures. Hu et al. (1999 ) tuned the FLC MFs along with the input X  X utput SFs using GA to minimize a weighted summation of Integral of Squared
Error (ISE) normalized by maximum error, maximum percentage of overshoot and settling time normalized by simulation time.
Woo et al. (2000 ) have shown that tuning of MFs have lesser effect on the closed loop performance than the input X  X utput SFs of a fuzzy PID controller. Their relative impact can be viewed like changing the universe of discourse for fuzzy inference by the input SFs and amplifying the defuzzified control law by output SFs while acting as the conventional PID controller gains. Also,
Pan et al. (2011a ) designed an optimal fuzzy PID controller by minimizing the ITAE and ISCO to handle the effect of random delays in networked control systems (NCS). The present study assumes fixed MFs and rule base for the FLC as in its IO counter-part ( Woo et al., 2000 ) and then tunes the fractional rate of error, fractional order integration of FLC output along with the input X  output SFs to achieve optimum performance in time domain i.e. low control signal and error index.

The rest of the paper is organized as follows. Section 2 gives a brief review of the existing intelligent techniques for designing fractional order controllers and introduces the novelty of the proposition in the present study. Section 3 describes the structure of the fractional order fuzzy PID controller with the details of the rule base and the membership functions. The objective functions (time domain performance indices) along with genetic algorithm that has been used for the optimization are introduced in this section. Section 4 gives a comparison of the simulation results for two different classes of processes. The paper ends with the conclusions in Section 5 , followed by the references. 2. Review of the existing intelligent tuning techniques of FO controllers
Classical notion of PID controllers has been extended to a more flexible structure PI l D m by Podlubny (1999 ) with the fractional differ-integrals as the design variables along with the controller gains. Several intelligent techniques have been proposed for efficient tuning of such fractional order PI l D m controllers. Domi-nant pole placement based optimization problems have been attempted to design PI l D m controllers using Differential Evolution in Maiti et al. (2008) , Biswas et al. (2009) and Invasive Weed Optimization with Stochastic Selection (IWOSS) in Kundu et al. (2009) . Maiti et al. (2008) also tuned a FOPID controller for stable minimum phase systems by minimizing ITAE criteria with Parti-cle Swarm Optimization (PSO). A similar approach has been adopted for optimization of a weighted sum of Integral of Absolute Error (IAE) and ISCO to find out the controller para-meters with GA by Cao et al. (2005 ) and with PSO by Cao and Cao (2006 ). Cai et al. (2009 ) tuned a PI l D m controller by minimizing the ITAE criteria using multi-parent crossover evolutionary algo-rithm. Luo and Li (2009 ) tuned a similar ITAE based PI l controller with Bacterial Foraging oriented by Particle Swarm Optimization (BF-PSO). Meng and Xue (2009 ) designed a PI controller using a multi-objective GA, which minimizes the infinity-norm of the sensitivity (load disturbance suppression), and complementary sensitivity function (high frequency mea-surement noise rejection), rise time ( t r ) and percentage of max-imum overshoot ( M p ) and additionally meets the specified gain crossover frequency ( o gc ), phase margin ( f m ) and iso-damping property rather than minimizing these as a single objective with a weighted summation like Zamani et al. (2009) . Dorcak et al. (2007) proposed a frequency domain robust PI l D m controller tuning methodology using Self-Organizing Migrating Algorithm (SOMA), which is an extension of that proposed by Monje et al. (2008) using constrained Nelder X  X ead Simplex algorithm. Zhao et al. (2009) tuned a PI l D m controller for inter-area oscillations in power systems by minimizing a weighted sum of the M p , settling time ( t s ) and error signal ( e ) using a GAPSO algorithm. Kadiyala et al. (2009 ) designed PSO based optimization problem for minimizing a weighted sum of t r , M p , t s , steady-state error ( e to design a PI l D m controller for aerofin control system. A PSO based similar approach can be found in Sadati et al. (2007 ) for SISO and MIMO systems. Sadati et al. (2008 ) designed a Neural Network based FOPID controller by minimizing the Mean Square Error (MSE) of the closed loop system while weights of the Neural Network and fractional orders are determined in the learning phase and the controller gains are adapted with change in the error. Ou et al. (2010 ) designed a FOPID controller for First Order Plus Time Delay (FOPTD) systems using Radial Basis Function (RBF) neural network where the controller gains and differ-integrals can be determined from the time constant and delay of the process after the neural network is trained with a large set of FOPID parameters and system parameters with available frequency domain robust tuning methods. Weighted sum of several time-domain and frequency-domain criteria based opti-mization approach has been used to tune a FOPID controller with PSO for an automatic voltage regulator by Karimi-Ghartemani et al. (2007) and Zamani et al. (2009 , 2007) . The approach in Zamani et al. (2007 ) also proposes an H N -optimal FOPID con-troller by putting the infinity norm of the weighted sensitivity and complementary sensitivity functions as an inequality constraint to the objective function as in Zamani et al. (2009 ). Lee and Chang (2010 ) and Chang and Lee (2008 ) used Improved
ElectroMagnetism with Genetic Algorithm (IEMGA) to minimize the Integral of Squared Error (ISE) while searching for optimal
PI
D m parameters. Pan et al. (2011b) used evolutionary algorithms for time domain tuning of PI l D m controllers to cope with the network induced packet drops and stochastic delays in NCS applications.

Recent advent of few non-PID type intelligent fractional order controllers have been shown to be more effective over the existing technologies. Efe (2008 ) used fractional order integration while designing an Adaptive Neuro-Fuzzy Inference System (ANFIS) based sliding mode control. Delavari et al. (2010) pro-posed a fuzzy fractional sliding mode controller and tuned its parameters with GA. Barbosa et al. (2010) incorporated fuzzy reasoning in fractional order PD controllers. Arena et al. (2000 , 1998) introduced a new Cellular Neural Network (CNN) with FO cells and studied existence of chaos in it. Valerio and da Costa (2011 ) studied fuzzy logic based approximation of variable com-plex and real order derivatives with and without memory.
In the present study, the tuning of a new fuzzy FOPID controller has been attempted with GA and the closed loop performances are compared with an optimal PI l D m controller.
The input X  X utput SFs and differ-integrals of the FO fuzzy PID controller are tuned while minimizing weighted sum of various error indices and control signal similar to that in Cao et al. (2005 ) and Cao and Cao (2006 ) with a simple ISE criteria. While Efe (2008) and Delavari et al. (2010 ) focus on fractional order fuzzy sliding mode controllers, the present work is concerned with the fuzzy analogue of the conventional PID controller which is widely used in the process control industry. In Barbosa et al. (2010) , the fractional fuzzy PD controller is investigated in terms of digital implementation and robustness. However the tuning methodol-ogy is complex and might not always ensure optimal time domain performance. The performance improvement is even more for complicated and ill behaved systems, which have been enforced to obey a set of desired control objectives with GA in the present formulation. 3. New fractional order fuzzy PID controller and its time domain optimal tuning 3.1. Structure of fractional order fuzzy PID controller
The structure of the fuzzy PID used here is inherited from a combination of fuzzy PI and fuzzy PD controllers ( Mudi and Pal, 1999 ) with K e and K d as the input SFs and a and b as output SFs as described by Woo et al. (2000 ) and Yesil et al. (2004 ). Typical advantage of this particular controller structure over other avail-able FLC based PIDs are described in a detailed manner by Pan et al. (2011a) . However, in the original IO fuzzy PID controller the inputs were the error and the derivative of error and the FLC output was multiplied by a and its integral multiplied with b and then summed to give the total controller output. But in the present case the integer order rate of the error at the input to the FLC is replaced by its fractional order counterpart ( m ). Also the order of the integral is replaced by a fractional order ( l ) at the output of the FLC representing a FO summation (integration) of the FLC outputs. The values of these orders f l , m g along with f K , K d , a , b g are the optimization variables in genetic algorithm.
For performance comparison a FOPID controller is also con-sidered, which has the transfer function in non-interacting or parallel structure: C The other controller structures like conventional integer order
FLC and PID controller, used in the simulations can be obtained by simply setting the values of f l , m g X  1in Fig. 1 and Eq. (1), respectively. In Figs. 2 and 3 , the fuzzy linguistic variables NL, NM, NS, ZR, PS, PM, PL represent Negative Large, Negative
Medium, Negative Small, Zero, Positive Small, Positive Medium and Positive Large, respectively. The FLC output ( u FLC ) is deter-mined using the centre of gravity method by defuzzification.
The membership functions ( Fig. 3 ) and rule bases ( Fig. 2 ) are similar to that in Woo et al. (2000 ) and Yesil et al. (2004 ) for integer order FLC based PID controllers. For fuzzy controllers it is well known ( Mudi and Pal, 1999 ) that change in output scaling factor, for example, has more effect on the controller performance than changes in the shape of the membership functions. Thus all the tuning parameters are not equally potent in affecting the overall performance of the controller. The focus of the present paper is to investigate the effect of tuning the fractional rate of error ( m ), while keeping the rule base and shape of membership functions unchanged to enhance the overall closed loop perfor-mance of a control system. From the point of applicability and ease of use for the practicing engineer, this approach is better since the performance of the control system can be drastically affected by tuning these two additional parameters appropriately instead of the membership functions and other fuzzy inferencing variables. Fig. 4 shows the nonlinear surface plot for the rule base of the fuzzy logic controller. The proposed FLC based FOPID controller uses a two dimensional linear rule base ( Fig. 2 ) for the error, fractional rate of error and the FLC output with standard triangular membership functions and Mamdani type inferencing.
In the present work the fuzzy rule base is derived using intuitive logic as in Mudi and Pal (1999 ). The set of rules can be divided into the following five groups to understand the logic of incor-porating the rule base as in Fig. 2 , as detailed in Driankov et al. (1993 ).

Group 0: In this group of rules the error ( e ) and its fractional derivative  X  d m e = dt m  X  have very small positive or negative values or are equal to zero. This implies that the process output has strayed off slightly from the set point but is still close to it. Hence small values of control signals are required to correct these small deviations and these rules mainly relate to the steady state behaviour of the process.

Group 1: In this group the error is negative large or medium, implying that the process output is significantly above the setpoint. Also the fractional derivative of the error is positive implying that the process output is moving towards the set point. Thus the controller applies a signal to speed up or slow down the approach towards the set point.

Group 2: In this group the error is either close to the set point (NS, ZR, PS) or is significantly below it (PM, PL). Also since the fractional rate of error is positive, the process output is moving away from the set point. Hence different levels of positive control signal is required for different combinations of e and  X  d reverse the course of the process output and make it tend towards the set point.

Group 3: For this group e is positive medium or big, suggesting that the process output is far below the set point. Simultaneously, since  X  d m e = dt m  X  is negative, the process output is moving towards the set point. Hence the controller applies an appropriate signal, to speed up or slow down the approach towards the set point.
Group 4: In this group the error is either close to the set point (NS, ZR, PS) or is significantly above it (NM, NL). Also since  X  d e = dt m  X  is negative, the process output variable is moving away from the set point. Hence a negative control signal reverses this trend and tries to make the process output change move towards the set point.

Also in this case only 7 linguistic variables have been used resulting in 49 rules in the table. Since the linguistic variables dictate the granularity of the control action, more number of them could be used for better control resolution. But in these cases the rule base increases in the order of n 2 (where n is the number of linguistic variables) and hence would be difficult to implement in real time hardware.

Looking from the perspectives of computational efficiency, good memory usage and performance analysis requirements, a uniform representation of the membership function is sought after. Generally triangular, trapezoidal and bell shaped functions are preferred since their functional description can be easily obtained, they can be stored with minimal usage of memory and can be manipulated efficiently by the inference engine to meet the hard limits of real time requirements. Since the para-metric, functional description of the triangular membership function is the most economic among these ( Driankov et al., 1993 ), it is widely adopted in controller design for real time applications and has been chosen in the present study over the other kinds like Gaussian, Trapezoidal, Bell-shaped, p -shaped, etc. ( Woo et al., 2000 ; Pan et al., 2011a ; Yesil et al., 2004 ; Driankov et al., 1993 ).

Also, there are several continuous and discrete time rational approximation methods available for fractional order elements ( Das, 2008 ; Podlubny et al., 2002 ; Charef, 2006 ; Aoun et al., 2004 ; Chen et al., 2004 ; Krishna, 2011 ). In the present simulation study, each guess value of the fractional order differ-integrals f l , m g within the optimization process are continuously rationalized with Oustaloup X  X  5th order rational approximation ( Oustaloup et al., 2000 ).

The fractional order differ-integrals are basically infinite dimensional linear filters. However, band-limited realizations of fractional order controllers are necessary for their hardware implementation. In the present simulation study each fractional order element has been rationalized with Oustaloup X  X  recursive filter ( Oustaloup et al., 2000 ) given by the following Eqs. (2) and (3). If it be assumed that the expected fitting range or frequency range of controller operation is  X  o b , o h  X  , then the higher order filter which approximates the FO element s g can be written as
G  X  s  X  X  s g  X  K where the poles, zeros, and gain of the filter can be evaluated as  X  o 0  X 
In Eqs. (2) and (3), g is the order of the differ-integration and  X  2 N  X  1  X  is the order of the filter. Present study considers a 5th order Oustaloup X  X  rational approximation ( Oustaloup et al., 2000 )forthe
FO elements within the frequency range o A f 10 2 , 10 2 g rad = s, whichismostcommoninprocesscontrolapplications. 3.2. Formulation of the objective functions for time domain optimal controller tuning Various time domain integral performance indices like ITAE,
ITSE, ISTES and ISTSE are considered in the problem similar to that in Dwyer (2006 ). Tavazoei (2010 ) studied finiteness of such integral performance indices for fractional order systems with unit step set-point and load-disturbance excitation. Zhuang and
Atherton (1993 ) first proposed optimization of such integral performance indices for time domain tuning of PID controllers, which is extended for PI l D m controllers by Cao et al. (2005 ) and
Cao and Cao (2006 ) and further for FO fuzzy PID controllers in the present paper.

Every integral performance index has certain advantages in control system design. The ITAE criterion tries to minimize time multiplied absolute error of the control system. The time multi-plication term penalizes the error more at the later stages than at the beginning and hence effectively reduces the settling time ( t which cannot be achieved with IAE or ISE based tuning ( Hu et al., 1999 ; Cao et al., 2005 ; Cao and Cao, 2006 ; Lee and Chang, 2010 ; Chang and Lee, 2008 ). Since the absolute error is included in the
ITAE criterion, the maximum percentage of overshoot ( M p minimized. The ITSE criterion penalizes the error more than the
ITAE and due to the time multiplication term, the oscillation damps out faster. However for a sudden change in set-point the ITSE based controller produces larger controller output than the
ITAE based controllers, which is not desirable from actuator design point of view. Other integral performance indices like ISTES and ISTSE both have higher powers of time and error terms.
These result in faster rise time and settling time while also ensuring the minimization of the peak overshoot. These however might lead to very high value of control signal and are only used in acute cases where the time domain performance is of critical importance and not a large control signal.

To avoid large control signal, which may saturate the actuator and cause integral wind-up, it is also minimized as a part of the objective function with GA. The objective functions used for controller tuning has been taken as the weighted sum of several performance indices along with the controller outputs as shown below. The weights f w 1 , w 2 g in the control objective (4) X (7) give extra flexibility to the designer, depending on the nature of application and relative importance of low error index and low control signal. The four objectives, used in the present simulation study are presented in Eqs. (4) X (7).

J  X 
J  X 
J  X 
J  X 
Optimization is carried out to obtain controller parameters, considering equal weights for integral error indices and integral of control signal i.e. w 1  X  w 2 . Now, minimization of the control objectives (4) X (7), gives optimal parameters for the FLC based
FOPID and the PI l D m controller. Optimal parameters for much simpler controllers i.e. fuzzy PID and PID are also searched by putting the FO differ-integrals as unity. A large penalty function has been incorporated in the optimization process for very large value of J to avoid parameter search with unstable closed loop response as suggested by Zamani et al. (2009) .
 From control system designer X  X  point of view, the ISE based
PID controller designs are popular since using Parseval X  X  theorem, this typical time domain performance index represents the H norm of the closed loop system in frequency domain. It is well known that analytical stability study with the error model using
ISE ( H 2 -norm) criteria is possible only for linear system. In the present framework, the only method to cope with the nonlinea-rities due to the process model itself as well as the fuzzy inference to ensure well behaved control performance is to optimize time domain error indices involving time along with the associated cost of control. However, the frequency domain analysis is difficult with higher powers of error and time (like ITSE, ISTES,
ISTSE) for the integral performance index and even more with the addition of a linear/nonlinear control law with the error index.
The proposed family of time domain integral performance indices based tuning technique is especially needed for processes, gov-erned by highly nonlinear differential equations and not mere linear systems with actuator nonlinearities, commonly encoun-tered in process controls. 3.3. Optimization algorithm used for the tuning of optimal controllers
Gradient based classical optimization algorithms for minimi-zation of the objective function often get trapped in the local minimas. This can be overcome by any stochastic algorithms like
Genetic algorithm, which has been used here to find the optimum set of values for the controller parameters. The variables that constitute the search space for the fractional fuzzy PID controller variables are f K e , K d , a , b g A  X  0 , 100 and f l , are encoded as real values in the algorithm.

Genetic algorithm is a stochastic optimization process inspired by natural evolution. During the initialization phase, a random population of solution vectors with uniform distribution is cre-ated over the whole solution domain. The population is encoded as a double vector and the bit string representation is not used. A feasible population set which would always give stable controller outputs was not chosen since the linear or nonlinear constraints for stability is difficult to derive analytically in the present case with process and controller nonlinearities in the loop. This implies that some of the controller parameters may produce unstable closed loop response and terminate the code due to this ill-conditioning. Thus to overcome this problem, whenever the time evolution of the objective function shows instability, a large value of the objective function is assigned (10,000 for this case) without simulating it for the entire time horizon. This automati-cally assigns a bad fitness rank to the solution and the unstable modes are eliminated over successive generations. Each solution vector in the present population undergoes reproduction, cross-over and mutation stochastically, in each generation, to produce a better population of solution vectors (in terms of fitness values) in the next generation. A scaling function converts the raw fitness scores in a form that is suitable for the selection function. Various scaling functions like rank, proportional, top, shift linear scaling may be used. In this case rank fitness scaling is used which scales the raw scores on the basis of its position in the sorted score list. This removes the effect of the spread of the raw scores.
The process where solution vectors with higher fitness values can produce more copies of themselves in the next generation is known as reproduction. The number of fittest individuals (solu-tion vectors) that will definitely be self replicated into the next generation is denoted in the algorithm by a parameter called the elite count. Increasing the elite count may result in domination of the fitter individuals obtained earlier in the simulation process.
This will result in less effective solutions as the exploration of the search space would be limited. Thus, the parameter is generally a small fraction of the total population size. In this case, the population size is considered to be 20 and elite count as 2.
Crossover is the process in which two randomly selected vectors from the current generation of the gene pool, undergo an information exchange of probabilistic nature, to give rise to better individuals in the next generation. The crossover function may be scattered, single point, two point, heuristic, arithmetic, etc., which are basically different mathematical operations in which the child can be created from the parent genes. In this case a scattered crossover function is used which creates a random binary vector and selects the genes where the vector has a value of 1 from the first parent, and the genes where the vector has a value of 0 from the second parent, and combines the genes to form the child. A user specified cross over fraction determines what percentage of the population (other than the elite) evolves through crossover. The remaining fraction, evolve through muta-tion. In mutation a small randomly chosen part of a solution vector is probabilistically altered to give rise to the child in the next generation. The mutation operation can be implemented with various mutation functions like Gaussian, uniform, adaptive feasible etc. which like the crossover function, are a set of mathematical operations that dictates how the mutated child will be formed from the parents. For mutation, in this case, the
Gaussian function is used which adds a random number to each vector entry of an individual. This random number is taken from a
Gaussian distribution centred around zero. The algorithm refines the solutions in this way iteratively until the change in the objective function is less than a pre-specified tolerance level or the maximum number of iterations is exceeded. If the crossover fraction is set to unity, there is no mutation and the algorithm stagnates after forming the best individual from the available gene pool. The best individual is successively replicated and carried forward through the generations without any improve-ment due to lack of mutation. Also if the crossover is set to zero and the population evolves purely through mutation, then this strategy improves the fitness of other individuals, but since these are never combined with the genes of the best individual due to lack of crossover, the best fitness levels off after sometime and the programme terminates when the maximum number of iterations is exceeded. Hence, a judicious choice of the crossover and mutation fraction needs to be used. In the present optimization framework, a crossover fraction of 0.8 and mutation fraction of 0.2 has been used which gives satisfactory results for a wide variety of problems ( Global Optimization Toolbox: User X  X  Guide, 2010 ). The other parameters of GA like population size, scaling function, selection function, elite count, mutation function, cross-over function, which are used in the simulations, are also chosen in the lines of the previous argument ( Global Optimization Toolbox: User X  X  Guide, 2010 ). The selection function chooses the vectors which act as parents of the next generation based on the inputs from the fitness scaling function. Here a stochastic uniform function is used.

Here, GA progressively minimizes the objective functions (4) X (7) over the iterations while finding optimal set of parameters for the FO fuzzy PID controller. The programme terminates if the value of the objective function does not change appreciably over consecutive iterations (i.e. the change is less than the pre-specified tolerance level) or the maximum number of iterations are exceeded. The maximum number of iterations is kept as 100 and the tolerance level is kept as 10 6 . 4. Simulations and results 4.1. Nonlinear process with time delay
The optimal tuning of the proposed FO fuzzy PID and other three controllers viz. PI l D m , fuzzy PID and PID controllers are now carried out for a nonlinear process ( P 1 ) as studied by Mudi and Pal (1999 ) d y
The objective functions (4) X (7) are minimized for each of the fuzzy enhanced and the nominal controllers with the correspond-ing controller parameters reported in Tables 1 and 2 , respectively. As discussed earlier the adopted search range for the FO fuzzy PID controller parameters are restricted to f K e , K d , a , b g and f l , m g A  X  0 , 2 and for the FOPID controller the search range is f K controller is desired to keep the control signal and the actuator size small since control signals are directly proportional with output scaling factors. Restricting the input scaling factors to unity is to ensure that the fuzzy inference is always between the designed universe of discourse. Differ-integral orders greater than 1 leads to improper transfer function upon rational approxima-tion and thus has been divided in two parts for simulation as suggested in Das et al. (2011) . Restricting the order of integral to 2, is due to the fact that double integrating open loop systems are inherently unstable.

Now, with the four objective functions (4) X (7) and the four set of optimal controllers, the time response curves and the control signals are compared to show the relative potential of each of the controllers and the integral performance indices as well. Fig. 5 shows the time response of nonlinear plant P 1 with ITAE based tuning for unit change in set point and load disturbance. The capability of set point tracking for IO and FO fuzzy PID controllers are better than the corresponding non-fuzzy controllers. But fuzzy PID gives slightly better results than all the others in this case for load disturbance suppression. It is closely followed by the FO fuzzy PID controller. Also, the PID controller and the FOPID controller have a poor load disturbance characteristic. Fig. 6 shows the controller output for this plant based on the ITAE tuning. The FOPID controllers have a larger initial controller output, while the controller outputs for the fuzzy PID and the fractional fuzzy PID are better.

Fig. 7 . shows the output with the load disturbance of plant P with ITSE based tuning. The overshoot is lesser than the ITAE based tuning as ITSE puts larger penalty on the error signal in the optimization process. The fuzzy FOPID shows a good load dis-turbance rejection in this case and also good set-point tracking.
Fig. 8 shows the control signal of the different controllers. The fuzzy PID controllers have a higher value of initial control signal.
The controller output of the PID and FOPID controllers are smaller. It is logical that ITSE based tuning gives better time response ( Fig. 7 ) for the most flexible controller structures but at the cost of increased control signal ( Fig. 8 ), since the penalties on large errors increase for ITSE criteria.

Fig. 9 shows the unit step response of plant P 1 along with the load disturbance for ISTES criterion. The fuzzy PID and fuzzy
FOPID both give a lower peak overshoot and a better load disturbance response. Fig. 10 shows the control signal for the ISTES criterion. The FOPID controller has a very large initial value which might result in actuator saturation. The fuzzy PID and fuzzy FOPID controllers have a relatively lower controller output.

Fig. 11 shows the unit step response of plant P 1 along with the load disturbance for ISTSE criterion. The rise time is very sharp for all the controllers due to higher penalty on both time and error in the minimization criterion. The fuzzy FOPID gives the best load disturbance response closely followed by the fuzzy PID controller. Fig. 12 shows the control signal output for this case. Both the fuzzy PID and FO fuzzy PID have lower value of initial control signal whereas it is higher for FOPID and PID. 4.2. Unstable process with time delay
The next plant considered for performance study of the optimal controllers is that of an open loop unstable process with time delay as studied by Visioli (2001) .

P  X  s  X  X 
Tables 3 and 4 give the optimal values of the controller parameters for the four different controllers, with four set of integral performance indices.

Fig. 13 shows the unit step response of the plant P 2 along with the load disturbance for ITAE criterion. Both the fuzzy FOPID and the fuzzy PID controllers have almost no overshoot. The load disturbance suppression of the fuzzy PID is also better than the fuzzy FOPID controller. But the PID controller gives the best load disturbance rejection. As is evident, the PID and FOPID controllers give high overshoot for delayed unstable processes. The time responses for such a delayed unstable plant are much better with
FLC based FOPID controller than that in the original work ( Visioli, 2001 ). Fig. 14 shows the controller output for plant P 2 with the ITAE criterion. The initial controller output of the PID and FOPID controllers is much higher than their fuzzy counterparts.
Fig. 15 shows the unit step response of the plant P 2 along with the load disturbance for ITSE criterion. Both the PID and FOPID have higher overshoot but have a considerably faster settling time. The output of the fuzzy FOPID is very sluggish in this case and the load disturbance suppression is also not very good. Fig. 16 shows the controller output for plant P 2 optimized with the ITSE criterion.
The initial output of the PID and FOPID controllers is much higher than their fuzzy counterparts.

Fig. 17 shows the unit step response of the same plant along with the load disturbance for the ISTES criterion. The PID and
FOPID have a larger peak overshoot. However the load disturbance suppression is better for the PID controller. The fuzzy PID controller has a faster rise time compared to the fuzzy FOPID controller and there is almost no overshoot in both the cases. The load disturbance rejection is better for the PID and FOPID con-trollers. Fig. 18 shows the controller output for plant P with the ISTES criterion. The initial output of the PID and FOPID controllers is much higher than their fuzzy counterparts. Thus the fuzzy controllers would require a smaller actuator size than their
PID and FOPID counterparts. Fig. 19 shows the unit step response of plant P 2 along with the load disturbance for the ISTSE criterion.
The PID and FOPID controller have a higher overshoot than the fuzzy PID and fuzzy FOPID controllers. The load disturbance rejection for the fuzzy FOPID controller is better than the fuzzy
PID controller. Fig. 20 shows the controller output for plant P optimized with the ISTSE criterion. The initial control signal of the
PID and FOPID controllers is much higher than the fuzzy PID and fuzzy FOPID, which might result in actuator saturation. 4.3. Comparative performance analysis of the different controllers and few discussions
Table 5 lists the best found controller structure from the simulations in a tabular form. It is evident that the proposed
Fuzzy FOPID controller outperforms the others for almost all the performance indices for set-point tracking task. However when compared with respect to small magnitude of control signal, the fuzzy PID controller in some cases and fuzzy FOPID in most cases gives better results. Also since the load disturbance attenuation level is not optimized (as the maximum sensitivity specification for linear systems and controllers) by including it in the perfor-mance criterion, different controllers give better results in differ-ent cases. Fuzzy controllers are typical nonlinear systems which do not give flexibility to give incorporate sensitivity specification in the design stage unlike linear controllers controlling linear systems and the situation becomes more difficult when the process is inherently nonlinear like the present case.
Also, 30 independent runs (with different seeds for random number generation) were carried out to show the consistency of the GA based controller tuning algorithm. Table 6 reports the mean and standard deviation of the two processes with four controllers each with four different performance indices.
It is to be noted that the time domain optimality of the fuzzy inferencing process is enforced by the Genetic Algorithm, which tunes the various parameters having a higher influence (i.e. the input X  X utput SFs and not the MFs/ru le base as discussed earlier) to meet the control performance objectives. Also, it is well known that the PID or FOPID control can be efficiently applied in a control system if the process dynamics is accurately known. Conventional fuzzy logic controller does not rely on the process model since a heuristic control law can be derived from the error and its rate of change. Fuzzy controller gives better performance than conventional
PID in the presence of parametric uncertainties, measurement noise and process nonlinearities. Incor porating fuzzy inferencing based
PID controller has the both advantages of these two philosophies and has thus been used in the present study to show the control performance enhancement for a delayed nonlinear and an open loop unstable process. Also, the focu s of the present paper was on time domain optimal controller tuning since the plant considered for the purpose is a nonlinear one and frequency domain tuning techniques for these types of plants are only available if they are linearized about a certain operating point like ( Saha et al., 2010 ). Thus time domain tuning is the preferred method for the tuning of such controllers which works well for a wide variety of processes. 5. Conclusion
Genetic algorithm based optimal time domain tuning of a novel fractional order fuzzy PID controller is attempted in this paper while minimizing a weighted sum of various integral performance indices and the control signal. Small magnitude of control signal is a necessity in some typical safety critical process control applications like ( Saha et al., 2010 ) where the chance of actuator saturation and its undesirable results like integral wind-up is highly detrimental and also increases the cost involved for large actuator size as a preventive measure. In the present study four different integral performance indices ( Dwyer, 2006 ; Das et al., 2011 ) have been studied while designing the proposed fuzzy FOPID along with its simpler versions like fuzzy PID, PI fuzzy PID and PID satisfying the same set of optimality criteria. It is observed that the controller performance depends on the type of process to be controlled and also on the choice of integral performance indices. More degrees of freedom in the controller parameters do not necessarily imply better performance in all cases if the performance index is not chosen judiciously. Also for fuzzy enhanced PID controllers it is well known ( Mudi and Pal, 1999 ) that change in output scaling factor for example has more effect on the controller performance than changes in the member-ship functions or fuzzification X  X nferencing X  X efuzzification mechanism. Thus all the tuning parameters of fuzzy PID con-troller are not equally potent in affecting the overall performance of the control loop. Our present approach gives additional design parameters viz. the differ-integral orders of a nominal FLC-PID to the designer which can have significant effect on the performance and hence make the applicability of these types of controllers to meet various control objectives.

Also the performance indices are optimized for set-point change and not for load disturbance in the GA based optimization process. Hence, the optimized controller values are good at set-point tracking, but do not show very good load disturbance rejection response. The comparative study of load disturbance suppression was done for set-point based tuning of optimal controllers ( Das et al., 2011 ; Visioli, 2001 ). More stringent multi-objective optimization criteria may be imposed on the controller tuning algorithm to achieve effective results under different circumstances as a scope of future work.
 Acknowledgement
This work has been supported by the Department of Science and Technology (DST), Govt. of India, under the PURSE programme. References
