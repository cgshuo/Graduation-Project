 Online social networking sites have attracted a large number of internet users. Among many existing Online Social Networks (OSNs), Facebook and Twitter are the most popular social networking sites with over 800 million and 100 mil-lion active users, respectively. However, due to this popularity and existence of a rich set of potential users, malicious third parties have also diverted their at-tention towards exploiting various features of these social networking platforms. Though, the exploitation methodologies vary according to the features provided by the social networking platforms, malware infections, spam, and phishing are the most common security concerns for a ll of these platforms. In addition, a number of social botnets have emerged that utilize social networking features to spreading infections as command and control channels [1], [2], [3]. The root cause of all these security concerns is the socia l network sybils or fake accounts created by malicious users to increase the effica cy of their attacks that are commonly known as sybil attacks [4]. Generally, an attacker uses multiple fake identities to unfairly increase its ranking or influence in a target community. Moreover, sev-eral underground communities exist, which trade sybil accounts with users and organizations looking for online publicit y [5], [6]. Recent studies have shown that with the increase in the popularity of social media, sybil attacks are becoming more widespread [7]. Several sybil communities have been reported so far that forward spam and malwares on Facebook [8] network. In online social networks, third-party nodes are most vulnerable to sybil attacks, where the third-party nodes are communities and groups on OSN platforms which bring together users from different real-world communities on the basis of their interests. In case of Facebook, a third-party node can be defined as a Facebook community page which is used to connect two users from entirely different regions. Sybil accounts hired for carrying out spam campaigns target such vulnerable nodes. Recently, the rapid increase in the number of spam on popular online social networking sites has attracted the attention of researchers from security and related fields.
Though a significant amount of research works has been reported for the detection and characterization of spam on Facebook and Twitter networks [9], [10], [11], [12], [13], the existing techniques do not focus on the detection of coordinated spam campaigns carried out by the communities of sybil accounts. Similarly, several techniques have been pr esented for the identification of sybil communities [4], [14], [15],[16], [17], but all of them focus on the decentralized detection of sybil accounts. Moreover, the existing techniques are based on two common assumptions about the behavior of sybil nodes. Firstly, sybil nodes can form edges between them in a social graph and secondly, the number of edges connecting sybil and normal nodes is le ss as compared to the number of edges connecting either only normal nodes or only sybil nodes. These assumptions were based on the intuitio n that normal users do not r eadily accept friendship requests from seemingly unknown users. Although empirical studies from [17] showed existence of such sybil communiti es in the Tuenti social network, another study of Renren social network [7] showed that sybil nodes rarely created edges between themselves. This implies that the community behavior of sybil nodes in a social graph is mercurial and the assumption that sybil nodes form communities cannot be generalized [18].

In this work, the authors utilize the rich corpus of prior research works on spam detection and sybil community identification as a basis and present a hybrid approach to identify coordinated spam or malware attacks carried out using sybil accounts. The proposed approach is independent of the assumptions discussed above by the previous researchers. Although the proposed approach is generic in nature, this paper focuses on the sybil accounts pr esent on Facebook social network for experiment and evaluation purposes. The contributions of this paper can be summarized as follows:  X  An online social network data collection methodology is introduced which  X  A new social graph generation mecha nism is presented, in which a node  X  Each group of related profiles is modeled as a social graph and analyzed  X  A statistical approach is applied on the obtained communities from each The rest of the paper is organized as follo ws. After a brief review of the existing state-of-the-art techniques for spam identification in online social networks in Section 2, Section 3 presents a data collection methodology from Facebook social network. Section 4 presents the profile grouping methodology to generate various groups of similar profiles in the original social network dataset. This Section also presents the experimental r esults obtained from a real dataset and their analyses. Finally, Section 5 pres ents conclusions. A significant number of research works has been reported in last few years for spam detection on online social networks. In [19], the authors proposed a real time URL-spam detection scheme for Twi tter. They proposed a browser moni-toring approach, which takes into account a number of details including HTTP redirects, web domains contacted while constructing a page, HTML content be-ing loaded, HTTP headers, and invocation of JavaScript plug-ins. In [11], the authors created honey-profiles representing different age, nationality, and so on. Their study is based on a dataset collect ed from the profiles of several regions, including USA, Middle-East, and Europe. They logged all types of requests, wall posts, status updates, and private messages on Facebook. Based on the users X  activities over social networking sites, they distinguished spam and nor-mal profiles. The authors in [12] utilized the concept of social honeypot to lure content polluters on Twitter. The harvest ed users are analyzed to identify a set of features for classification purpose. The technique is evaluated on a dataset of Twitter spammers collected using the @spam mention to flag spammers. In [8], the authors analyzed a large dataset of wall posts on Facebook user profiles to detect spam accounts. They built wall posts similarity graph for the detection of malicious wall posts. Similarly, in [13] the authors presented a thorough analysis of profile-based and content-based evasion tactics employed by Twitter spam-mers. The authors proposed a set of 24 features consisting of graph-, neighbor-, automation-, and timing-based features that are evaluated using different ma-chine learning techniques. In [20] and [10], the authors proposed combination of content-based and user-based features for the detection of spam profiles on Twit-ter. In order to evaluate the importance of these features, the collected dataset is fed into traditional classifiers.

Similar to spam detection on online soc ial networks that has received a lot of attention from researchers, a signifi cant effort have been diverted towards the detection of sybil accounts. Initial st udies [4], [14], [15], [16], [7] focus on detecting sybil users. However, individual users do not pose a great threat to normal users of OSNs. The situation becomes alarming when a large number of sybil accounts generate a coordinated attack. Several techniques have been presented to detect groups of accounts coordinating with each other [4], [14], [15],[16], [17]. All these techniques focus on the decentralized detection of sybil accounts. Moreover, they are based on two common assumptions: i) sybil nodes can form edges between them in a socia l graph, and ii) the number of edges connecting sybil and normal nodes is le ss as compared to the number of edges connecting either only normal nodes or on ly sybil nodes. However, later studies have shown that these assumptions cannot be applied in general [7]. Despite the presence of rich amount of works for spam and sybil detection, there has been little attention towards the identification of sybil accounts that are particularly responsible for spam proliferation. Ther efore, this paper focuses on the detection of coordinated spam campaigns that are carried out by sybil accounts under the control of a single user. Based on the analyses reported in [21], it is found that a significant amount of spam posts on Facebook are directed towards those Facebook pages that are publicly accessible and any user in the network can post on them. Spammers generally utilize such openly accessible public pages to spread spam in the net-work. This type of spam spreading mechanism not only relieves the spammers from their dependence on friendship requests, but also increases the number of target users. Once a spam post is visible on a page X  X  wall, it can be visible to every user who likes that page. In addition, users X  page-like information can help spammers to spread context-aware spam through Facebook pages in normal user communities. Recently, there has been an increasing number of evidence about the existence of underground communities trading groups of accounts that carry spam campaigns [18]. Therefore, a group of accounts bought by a party could be used for a single purpose, resulting in a high correlation in their behavior.
This work exploits the intuition that a spam targeting a community is most likely the spam generated by a community. A dataset [21] containing Facebook spam profiles is analyzed to identify Facebook pages that have been mostly targeted by spammers. As a result, a to tal number of 14 Facebook pages is found that are heavily spammed by the spam profiles identified in [21]. All these pages are accessed to identify active users and to group profiles based on the number of their common pages-likes. Figure 1 shows a graph in which each node represents a Facebook page and the weight associated to an edge represents the number of users commonly shared by the connected pair of nodes. The weights of the edges can be used to divide the users into various groups based on their interests in the network. In Figure 1, there are six groups of pages that are close to each other in terms of their commo n interests, and each group i s treated separately for detection of profiles that are under the control of a single spammer and generate context-aware spam towards a community of normal users. Table 1 shows the various groups and the number of users belonging to each of them. The names of the groups in Table 1 has been derived from the node levels used in Figure 1. The next Section explains the methodol ogy used to identify the groups of sybil accounts.
 To detect communities of sybil accounts generating context-aware spam, the rich amount of textual information contained in each profile is used to generate an undirected-weighted social graph, in which a node represents a profile and an edge connecting a pair of nodes represen ts a link between them. The connections initiated through a friendship request are independent of the links created in the actual social graph. A total number of three important features has been used to determine the weight of an edge in the social graph. For each group of profiles identified in Section 3, a so cial graph is generated as G =( V n ,E,W ), where n represent the group id, V n is the set of profiles in group n , E  X  V  X  V is the set of edges, and W  X  is the set of weights assigned to edges. For each node v  X  V and URLs shared is generated, which is then used to calculate the weight of an edge e ij =( v i ,v j ). Further details about the features and weight calculation process are presented in the following Subsections. 4.1 Social Graph Generation To generate social graph, a set of featur es has been identified to determine the weight of an edge highlighting the degree of similarity of the connected profiles. The following paragraphs present a detailed discussion on the identified features and edge X  X  weight calculation mechanism.
 Profile Similarity: The profile similarity of a pair o f connected users represents the degree of match in their posts. This is calculated as a similarity index, I s , for each edge e ij =( v i ,v j ) that connects a pair of nodes. The similarity index uses vector-space model to represent users X  posts and applies cosine function to measure their degree of similarity. The first criteria for two profiles to be similar is the number of times a profile has posted on its own wall. For example, a profile v with a large number of posts as compared to a profile v j with a small number of posts on their own walls is clearly dissimilar. In this elimination process, the posts from other profiles on the subject pr ofile X  X  wall are not considered. For two profiles v i and v j containing x and y number of posts, respectively, a squareness measure , as shown in Equation 1, is used to determine the eligibility of the two profiles to be considered for fur ther comparison. In Equation 1, S ij is the squareness measure of nodes v i and v j , which must be greater than or equal to 4 before considering them for similarity index calculation.
 For the nodes v i and v j that fulfil the squareness measure criterion, the similarity index is calculated as follows. Considering x and y as the number of posts of v i and v j on their own walls, respectively, a cosine similarity matrix C of dimensions x  X  y iscreatedinsuchawaythateachpostof v of v j . For cosine similarity, each post is converted into a tf -idf feature vector, where tf -idf of a term t is calculated using Equations 2 and 3. In these equations, d is the post under consideration, D is the set of posts present in nodes v i and v ,and tf ( t, d ) is calculated as the number of times t appears in d . For any two posts a and b with their corresponding tf -idf feature vectors A and B , the value of an element c ij of the matrix C is calculated as a cosine similarity using Equation 4, where l is the length of feature vectors. Finally, after smoothing the values of the matrix C using Equation 5, the simi-larity index for the edge e ij =( v i ,v j ) is calculated as the normalized cardinality of the set of non-zero elements in C , as shown in Equation 6. Page-Likes : This feature is similar to the feature considered in [21]. However, in this work, the value of this feature is normalized along the lines of the similarity index normalization process. This feature captures the page-likes behavior of the users in a social network. For an edge e ij =( v i ,v j ), the common page-likes of v and v j , P ij , is calculated as a fraction of the page-likes commonly shared by them, as given in Equation 7. In this equation, P i and P j represent the set of page-likes by nodes v i and v j , respectively.
 URL Sharing: Like page-likes feature, the value of URL sharing feature of nodes v i and v j is calculated as the fraction o f the URLs commonly shared by them, as shown in Equation 8. In this equation, U i and U j represent the set of URLs shared by nodes v i and v j , respectively.
 Based on the values of the features discussed above, the final weight of edge e ij =( v i ,v j ),  X  ( e ij ), is calculated using Equation 9, where  X  1 ,  X  2 ,and  X  3 are constants such that each  X  i &gt; 0and  X  1 +  X  2 +  X  3 =1. 4.2 Community Detection To identify the communities in a social graph, the proposed approach uses the Louvain algorithm, which has been implemented as a part of an open source social network analysis tool Gephi 0.8.1 [22]. It has been widely used for social network analysis [23]. The algorithm supports community detection in various types of graphs and provides the flexibility to identify communities at different levels of granularity. It implements a greedy approach for optimizing modular-ity of a network divisions. The modularity measures the strength/ability of a network to be divided into groups or communities. Initially, the algorithm op-timizes the modularity of smaller individual communities, then nodes from the same communities are added to form a new network in which each node repre-sents a community. This process is repeated until maximum possible modularity is obtained. The result is a hierarchy of communities present in the underlying social graph.

Figure 2 shows a subgraph of the FEM group present in the dataset. The graph shows 4 major communities out of total 14 communities obtained through Louvain algorithm. In the experiment, the default resolution values of Louvain X  X  implementation in Gephi has been used. In Figure 2, the legend describes the percentage of nodes in each community. It can be observed in Figure 2 that nodes with modularity class 2 are dispersed, whereas nodes of classes 1 , 3and4 are more closely related. In Section 4.3, the analysis has been further extended to classify the identified communities as sybils or normal. Table 2 shows details about the percentage of nodes in communities along with the highest modularity in each group of the dataset. 4.3 Sybil Community Identification Once the communities are identified, pro files of each community with the highest closeness-centrality have been processed s eparately to classify them either as ma-licious or benign. Table 3 provides the details about the nodes with highest values of closeness-centrality. A set of featur es and JRip rules identified from a locally crawled dataset have been used to cla ssify the nodes with highest closeness-centrality as malicious or benign. Table 4 shows the final results obtained after identifying communities as normal or malicious on the basis of the nodes X  close-ness centrality values. After having a clos e look at the closeness centrality values and the final results, it can be found that, in most of the cases, the nodes of a normal user communities have low closeness centrality values. This mainly hap-pens because the weights assigned to the edges are according to the degree of similarity among the nodes. A higher similarity between a pair of nodes produces a higher weight for the edge connecting them in the social graph. Therefore, in the generated social graph, nodes with high closeness centrality values are similar to the majority of the nodes in the set, and as a result, a higher weight is as-signed to all the edges connecting the sim ilar nodes. Moreover, because the sybil accounts are controlled by a single spammer, they have high similarity among them as compared to normal users. Hence, nodes belonging to sybil communities have higher closeness centrality val ues in comparison to normal users. Along the lines of the previous research works, this paper has presented a hybrid approach to detect communities of sybil accounts that are under the control of spammers and generate context-aware spam towards normal user communities. The proposed approach is independent of the assumptions made by the previous efforts and identifies six different pro files groups in the dataset based on the users X  interests on Facebook network . The users with most common page-likes have been grouped together for further analysis. Three different types of features have been identified and used to model each group as a social graph in which profiles are represented as nodes and their links as edges. The weight of a link is calculated as a function of the degree of similarity of the nodes. Louvain commu-nity detection algorithm is applied on the social graphs to identify communities embedded within them. Thereafter, based on the class (malicious or benign) of the nodes with high closeness-centrality values, the underlying community is marked either as malicious or benign. The obtained results highlight that gener-ally nodes with high closeness-centrality values are malicious and belong to sybil communities, whereas nodes with low closeness-centrality values are benign and constitute normal user communities.
 Acknowledgment. The authors would like to thank King Abdulaziz City for Science and Technology (KACST) and King Saud University for their sup-port. This work has been funded by KACST under the NPST project number 11-INF1594-02 .

