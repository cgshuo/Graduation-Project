 Recent studies suggest that by using additional user or item rela-tionship information when building hybrid recommender systems, the recommendation quality can be largely improved. However, most such studies only consider a single type of relationship, e.g. , social network. Notice that in many applications, the recommenda-tion problem exists in an attribute-rich heterogeneous information network environment. In this paper, we study the entity recom-mendation problem in heterogeneous information networks. We propose to combine various relationship information from the net-work with user feedback to provide high quality recommendation results.

The major challenge of building recommender systems in hetero-geneous information networks is to systematically define features to represent the different types of relationships between entities, and learn the importance of each relationship type. In the proposed framework, we first use meta-path-based latent features to repre-sent the connectivity between users and items along different paths in the related information network. We then define a recommen-dation model with such latent features and use Bayesian ranking optimization techniques to estimate the model. Empirical studies show that our approach outperforms several widely employed im-plicit feedback entity recommendation techniques.
 H.3.3 [ Information Search and Retrieval ]: Information Filtering Hybrid Recommender System, Information Network
Recommender systems, which provide users with recommenda-tions for products or services (generally referred as items ), have
T he work was supported in part by the Army Research Laboratory under Cooperative Agreement Number W911NF-09-2-0053 (NS-CTA), the U.S. Army Research Office W911NF-13-1-0193, NSF CNS-0931975, IIS-1017362, DTRA, and DHS.
 seen widespread implementation in various domains, e.g. , e-commerce, video streaming websites, dating services as well as social network services. Existing recommendation approaches utilize the user-item interaction information and / or content information associated with users and items.

Among different recommendation techniques, hybrid approaches build recommendation models by combining user feedback data with additional information, e.g. , user or item attributes and rela-tionships. Previous works show that by utilizing additional user or item relationship, the quality of the recommendation models can be improved. Our proposed method falls in the category of such hybrid recommendation systems. The difference between our work and other relationship based hybrid methods is that most previous works only utilize a single type of relationship, e.g. , trust relation-ship [4], friend relationship [6], and user membership [10]. In many real world applications, the entity recommendation problem exists in a heterogeneous environment with different types of informa-tion, entity and link attributes and various relationships between users and items. In this paper, we adopt attribute-rich heteroge-neous information networks to represent such heterogeneous entity recommendation environment, and propose to study the well estab-lished implicit feedback recommendation problem with such data model.

To take advantage of the heterogeneity of the information net-work, we first diffuse the observed user preferences along different meta-paths to generate possible recommendation candidates under various user interest semantic assumptions. We then employ matrix factorization techniques on the diffused user preferences to cal-culate the latent representations for users and items accordingly. Each set of latent features represent one recommendation factor with a specific semantic. We then define a recommendation model by combining these recommendation factors and adopt a Bayesian ranking optimization technique to estimate the model accordingly.
The major contributions of this paper are summarized as follows:
The remaining of this paper is organized as follows: We discuss the background and preliminaries of this paper in Section 2. We introduce the user preference diffusion based latent features and the global recommendation model in Section 3 and 4. Experiments and F igure 1: Information network schemas: circles represent en-tity types while rectangles represent attribute types results are presented in Section 5. Conclusions and future works are presented at the end of the paper.
In this section, we present the background and preliminaries of this study.
With m users U = { u 1 , ..., u m } and n items I = { e 1 we define the binary user feedback matrix R  X  R m  X  n as follows:
Some previous studies have additional assumptions about the im-plicit feedback dataset, e.g. , user-item interaction frequency. Not to digress from the purpose of this study, we use binary user feedback in its original form as defined above.
We use the definition of heterogeneous information network (HIN) in [9] and [8], denoted by G . To be consistent with recommender system terminology, we refer entities in the information network being recommended as items .

Similar to an entity-relation diagram in a relational database, we use an abstract graph, i.e., network schema , to represent the entity and relation type restrictions in HIN, denoted by G T = ( A , R ) . Examples of heterogeneous information networks and their net-work schemas can be found in Figure 1. In a network schema of HIN, two entity types can be connected via different paths, repre-senting relations of different semantic meanings.We use meta-paths to represent path types as defined in [8]. [8] and [5] proposed link-based similarity functions to quantify the similarities along different meta-paths in HIN. Given two items e and e j and a meta-path P , such functions can return a similar-ity scores in [0 , 1] to indicate how similar they are under certain similarity semantic (defined by meta-path). By measuring the sim-ilarity of all item pairs with one meta-path, we can generate a sym-metric similarity matrix, denoted as S  X  R n  X  n . With L different meta-paths, we can calculate L different similarity matrices with different semantics accordingly, denoted as S (1) , S (2)
In empirical study, to further utilize the heterogeneity of the net-work, besides meta-path based item similarity, we also use attribute-based entity similarities, e.g. , geographical similarity.
We define the recommendation problem which we study in this paper as follows: Figure 2: User preference diffusion with meta-path based ite m similarity matrix (solid red links are observed user preferences while dash links represent diffused preferences)
D EFINITION 1 (P ROBLEM D EFINITION ). Given a binary rat-ing matrix R , and a related heterogeneous information network G , for a user u i  X  U , we aim to recommend a ranked list of items I i  X  I that are of interests to this user.
In this section, aiming to alleviate the data sparsity challenge faced by traditional collaborative filtering techniques and utilize the rich yet under-discovered information network, we propose a recommendation approach which combines user feedback and var-ious entity relationship (represented by similarity matrices) derived from the network. We first present a user preference diffusion based feature generation method, and then define a recommendation func-tion with these features. We discuss the recommendation learning algorithm in Section 4.

With the implicit user feedback and item similarity matrices de-fined in Section 2, we first introduce the diffusion of user prefer-ences based on similarity matrices defined by different meta-paths. Implicit feedback indirectly indicates user preference towards items. Intuitively, if we can find similar items to the ones that the target user was interested in under certain similarity semantic, recommen-dations to this user could be made by returning the similar items.
More specifically, given a binary user feedback matrix R  X  R and an item similarity matrix S ( q )  X  R n  X  n , we can diffuse the preference of u i towards e j by calculating  X  R ( q ) ij which can be rewrite in matrix form for all users as follows: where  X  R ( q ) denotes the diffused user preference matrix. This pro-cess propagates user preference along different meta-paths in the item-related HIN and thus is able to find more items a user might be interested in.

We demonstrate the user preference diffusion process with a toy example in Figure 2. In this example, 2 users ( u 1 and u ( e , e 2 and e 3 ), and 5 actors form a small information network. Assume that we observed that u 1 is interested in e 2 and u terested in e 3 from their previous user log. Under the assumption that users choose movies following meta-path movie-actor-movie, we can claim that u 1 could also be interested in e 1 and e these two movies are similar to e 2 since they share actors, and u could be interested in e 2 for the same reason. The similarity score between movies along the meta-path movie-actor-movie is calcu-lated with PathSim [8].

With low-rank matrix factorization technique, we derive the low-rank user and item latent features from the diffused matrix follows: (  X 
U
We apply NMF to solve Equation (2), although more advanced f actorization techniques can be used instead. By repeating the above process for all L similarity matrices, we can now generate L pairs of representations of users and items (  X  U (1) ,  X  V (1) Each low-rank pair represent users and items under a specific simi-larity semantics due to the user preference diffusion process. Con-sidering that different similarity semantics could have different im-portance when making recommendations, we define the recom-mendation model as follows: where  X  q is the weight for the q -th user and item low-rank repre-sentation pair. Based on the meaning and non-negative property of the features, we add  X  q  X  0 as a constraint.
We discuss the learning process for the recommendation model proposed in Section 3 with user implicit feedback data in this sec-tion. Implicit feedback data are often noisy and only contain posi-tive instances. The 0 values in user feedback matrix R are a mix-ture of negative observations and missing values. The common and traditional approach of parameter estimation is to adopt a classifi-cation or learning-to-rank objective function and treats all 1 values in R as positives and 0 s as negatives. Theoretically, this approach is incorrect and our empirical study in Section 5 also verifies this claim.

Motivated by [7], we employ a different learning approach by considering the correct item pair orders. We define an objective function aiming to generate the correct order of each item pair in R for each user. The assumption behind this approach is that users are more interested in the items with 1 values in R than the rest of the items, which is a weaker and more plausible assumption compared with the traditional approach.

We use p ( e a &gt; e b ; u i |  X  ) to denote the probability that user u prefers e a over e b . The Bayesian formulation of the optimization criterion is to maximize the posterior probability as follows: where  X  = {  X  1 , ...,  X  L } represents the model parameters, and p ( R |  X ) represent the probability that all item pairs can be ranked correctly for all users according to R , i.e. , for each user, items with feedback 1 should be ranked before items with feedback 0 .
With the assumption that both user preferences and ordering of item pairs are independent, we can expand the likelihood function p ( R |  X ) as follows: where ( e a &gt; e b )  X  R i represent all item pairs with the correct order in the feedback of u i .

We define p ( e a &gt; e b ; u i |  X  ) as: where  X  is the logistic sigmoid function  X  ( x ) = 1 1+ e
W ith probability and likelihood definitions above, we can derive the objective function as follows min where  X  2 k  X  k 2 2 i s the L 2 regularization term.

Notice that Equation (7) is differentiable. We can utilize gra-dient descent based optimization methods or the popular BFGS-B method [2] to learn the parameters. The gradient of Equation (7) with respect to  X  can be found as follows:  X  X   X   X  where  X  r i,ab =  X  r ( u i , e a )  X   X  r ( u i , e b ) .
With the above gradient, we employed stochastic gradient de-scent (SGD) method [1] to estimate the parameters in our empirical studies. The time complexity of this proposed learning process is O ( mn 2 ) where m is the number of users and n is the number of items. In large dataset this can be overwhelming. With SGD, we only need to sample a small number of training instances (around 10  X  5 ) and we can still get good results as reported in Section 5.
We implemented the proposed recommendation model along with several popularly deployed or state-of-the-art implicit feedback tech-niques in this section. We apply these methods on two real-world datasets to demonstrate the effectiveness of the proposed approach. We present experimental results with discussion in this section.
The first dataset is built by combining the popular MovieLens-100K dataset and the corresponding IMDb dataset. We name this dataset IMDb-MovieLens-100K (IM100K). If a user reviewed a certain movie, we set this feedback as 1 , otherwise it would be 0 . When building this dataset, we mapped two datasets using titles and release date of the movies, which could be erroneous on cer-tain movies so the results we presented below are lower-bound of the actual performance.

The second dataset is the Yelp dataset. When user wrote a review for a restaurant, we set the feedback as 1 , otherwise it would be set to 0 . Notice that this dataset is much sparser than the IM100K dataset, so the performances of all methods decline accordingly. We summarize these two datasets in Table 3(a). The schema of these two datasets can be found in Figure 1. The distributions of the user feedback can be found in Figure 3.
 Both datasets have timestamps with each user item interaction. We split the feedback matrix R of both datasets for each user into training and test based on timestamps, i.e. , we use 80% of the  X  X ast X  feedback to predict 20% of  X  X uture X  feedback. In Yelp dataset, we filtered out users who have at most 2 reviews since we can not create training and test data for this user.
We implement several widely deployed recommendation models as follows: Popularity R ecommend the most popular items to users; Co-Click Estimate conditional probabilities between items and rec-NMF Non-negative matrix factorization on R ; Hybrid-SVM Use SVM based objective function [3] to learn the We use HeteRec to denote the proposed recommendation model. We utilize 9 different item relationships with different similarity se-mantics in each dataset, e.g. , movie-actor-movie, movie-key-movie, biz-user-biz, and biz geographical similarity. Additionally, we add identity matrix as a similarity matrix as well, i.e. , items are only similar to themselves. We apply the same feature set in Hybrid-SVM.

For explicit feedback recommendation evaluation, measures like root mean square error (RMSE) are the standard evaluation metric. However, these metrics do not suit the definition of implicit feed-back problem. In this study, we test all methods as ranking mod-els and use the well-studied information retrieval metrics includ-ing precision-at-position and top-10 mean reciprocal rank (MRR, Equation (8)) to evaluate and compare the performance of these methods. The MRR metric we used can be found as follows:
The performance of of all 5 methods in the two datasets can be found in Table 1.

Based on Figure 3, user feedback data follow power law distri-butions, i.e. , a very small number of items have interaction with a large number of users. Due to this property, recommending the popular items to users has a decent performance (MRR= 0 . 1923 in IM100K). Co-click method, as one of the most widely deployed technique, achieves MRR = 0 . 2041 in IM100K and has a similar performance as the NMF method in Yelp (MRR= 0 . 0371 ).
We implemented the NMF as the CF baseline. We set the di-mensionality of the low-rank representations d = 20 in IMD100K and d = 60 in Yelp. We use the same method and setting when generating features for the proposed approach with Equation (2). With parameter tuning and additional information, NMF may per-formance better than the results we present in Table 1. However, the same performance improvement can be achieved in our meth-ods accordingly by replacing the NMF solver in Equation (2) with a more advanced technique. As presented in Table 1, NMF outper-forms other baselines methods in terms of precision and MRR.
Hybrid-SVM method is a hybrid recommendation approach which uses the same amount of information as our proposed methods. However, if we simply treat all 1 feedback as positive training data and 0 as negative instead of using the objective function proposed in Section 4, the quality of the learned ranking model can be com-promised (the overall performance is worse than NMF).

Our proposed HeteRec recommendation model, which takes ad-vantage of both user feedback and the related information network, beats all baseline methods in both datasets. This proves our as-sumption that adding information network as external knowledge with the proposed approach can alleviate the data sparsity issue and improve the recommendation quality. Moreover, the MRR gain of HeteRec compared with NMF in the relatively dense IM100K dataset is 6 . 1% while it becomes 10 . 4% in the sparer Yelp dataset. This observation also fits our intuition that when feedback dataset is sparser, the informative knowledge network can improve the per-formance even more. When training, we employ a uniform sample rate 10  X  5 in SGD and we apply the same rate to all supervised ap-proaches in this experiment. As discussed in Section 4, although the proposed learning method has a high time complexity, if we evaluate the model with a good sampling rate, we can achieve a good balance of effectiveness and efficiency. In this paper, we study entity recommendation problem in HIN. We propose a recommendation model for implicit feedback by tak-ing advantage of different item similarity semantics in the network. We compared the proposed approaches with several widely em-ployed implicit feedback recommendation techniques, and demon-strate the effectiveness of our methods. Interesting future works in-clude personalized recommendation models, similarity feature se-lection and on-line recommendation model update.
