 Search engine users often have clear search tasks hidden behind their queries. Inspired by this, the modern search engines are providing an increasing number of services to help users simplify their key tasks. However, the problem of what are the major user search tasks with high traffic for which search engines should design special services is still underexplored. In this paper, we propose a novel Multi-view Random Walk ( MRW ) algorithm to measure the search task oriented similarity between queries, and then group search queries with similar tasks so that the major search tasks of users can be identified from search engine click-through log. The proposed MRW , which is a general framework to combine knowledge from different views in a random walk process, allows the random surfer to walk across different views to integrate information for search task discovery. Experiment al results on click-through log of a commonly used commercial search engine show that our proposed MRW algorithm can effectively discover user search tasks. H.3.3 [ Programming Languages]: Information Search and Retrieval Algorithm, Experimentation Search task, Query clustering, Multi-view random walk During search process, users often have different search intentions and tasks, which are hidden behind search queries. For example, if a user issues a query  X  X eattle weather X , the search task is to check the weather of a city. Recently, many commercial search engines are providing various services to simplify users X  search tasks . For example, after one issues the query  X  X eattle weather X  to some commercial search engines, several of them will directly provide the weather information on top of the search results as shown in Figure 1, which requires no user effort to browse the long list of search results. This emerging trend requires that the search engine has to  X  X mart and intelligent X  to be able to accurately capture users X  search tasks and then route the queries to the ir corresponding online services. Though there are some existing work [1 , 5, 9, 10] trying to address the identification of user search tasks, these studies either target different stage of the search process or explore only single aspect of the query, such as word similarity. To address this problem , we aim to discover the high traffic user search tasks from real user s X  search behaviors, which are logged in the search engine click-through log . To achieve this goal, in this paper, we aim to measure the task oriented similarity between queries, and then cluster queries according to their possible search tasks. Thus, the clusters with high traffic in search engine click-through log are recognized as the query clusters to reflect the major user search tasks. However, it is a challenging problem to group queries according to their tasks since the tasks are generally hidden behind short search queries. For some queries, such as  X  X ell inspiration price X  and  X  X ell laptop price X , the fact that they share the same search task can be observed from the query contents. However, for many other queries, whether they have the same task cannot be directly observed. For example, queries  X  X omputer price X  and  X  X aptop amazon X  share the same task since they usually share the same group of clicked Web pages but they have no term level overlap. Indeed, different information sources, such as query content, query document click-through and search session information all can provide some knowledge of the underlying search task. However, how to integrate and combine them to better estimate the search task oriented similarity between queries is still an open problem. In this paper, we propose a novel Multi-view Random Walk ( MRW ) algorithm, which measures similarity between queries according to their search tasks by integrating information from differen t views . Here, each information source is represented as a single view. Theoretically , MRW offers a powerful framework to combine multiple heterogeneou s information sources, which generalizes the existing classical linear combination methods [2] . Meanwhile, this framework enables us to better combine different information sources by assigning cross-view transition probabilities properly for different queries with respect to view characteristics and mining tasks. The rest of th is paper is organized as follows. In Section 2, we formally introduce multi-view random walk algorithm . In Section 3, we implement MRW model. After that in Section 4, we study the experimental results. Then, we summarize the related works and draw conclusion in Section 5 and Section 6 respectively. In this paper, we aim to grouping queries according to their search tasks so that identifying the high traffic user search tasks from the search engine click-through log. To do this, the key challenge we are facing is how to measure the similarities between queries such that they can reflect users X  hidden intention and search tasks. Specifically, in this work, we consider heterogeneous information sources such as query content, query document click-through, search session information, etc. as different views, i.e. different spaces, and integrate them to better measure the search task oriented similarity between queries. Mathematically, we use Q and V to represent the set of queries and the set of different views (information sources) respectively. Then the query search task discovery problem we aim to solve is formulated as follows. Problem Formulation . Given Q and V , we measure the task oriented similarity between queries and from the multiple views V . Then we group queries in Q into query clusters based on , in which the high traffic query clusters are served as major search tasks of users. Th e intuition of our multi-view random walk ( MRW ) model contains two aspects. First, if we model each view v as a graph G in which queries are represented by nodes and the relationships between queries from view v are represented by edges wi th weights, G v has a natural interpretation as Markov model , with the edges describing the transitions between queries. Here, G denoted as query transition graph for view v and the overall graph which contains all query transition graphs for each view is denoted as multi-view graph. Given this, the random walk can be used to measure the similarity between queries even when they are not directly linked. Secondly, by allowing the transitions across views, relationships from multiple views can also be integrated in the random walk process; consequently, by assigning cross-view transitions appropriately for different queries , we can get a similarity metric which better reflects whether two queries share the similar search task. Based on the above intuition, the multi-view random walk can be illustrated in the multi-view graph (three views) in Figure 2 . Imagin ing there is a random surfer who transits from to in Figure 2 . The walk consists of two parts. First, the random surfer will transit across views. For example, the random surfer may transit from to with certain probability which is called cross-view probability and denoted as . Next, after the across-view transition, the random surfer exploits the relationships between queries in the corresponding views to walk to . Here, the transition between queries in the same view is called intra-view probability and can be calculated by Equation (1), in which is the edge weight between queries of relationships between queries in each individual view. We will detail their calculation in the next section . To sum, the multi-view random walk is combined by applying these two types of transition in an alternating fashion. Transition Probabilities Computation for MRW : W e now present the method to compute the transition probability between queries for MRW . Key notations are given in Table 1. Symbol Meaning The first part of MRW is that the random surfer transits across views . To represent such transition, we use a matrix M to store the cross-view transition probabilities for query , in which is . Then the cross-view transition probabilities for all queries can be stored in a diagonal transition matrix M in which the k th diagonal element The second part is that the random surfer performs random walk inside the individual view after each across-view transition. Here, we use a dimension row vector to denote the intra-view transition probabilities in all the views from to , in which the i th element is defined by Equation (1). Then, the intra-view transition probabilities for all queries can be stored in a matrix P with Combining the two parts, the transition matrix , which records the transition probabilities for all query pairs after ( ) step random walks in multi-view graph, is computed by Equation (2), in which is a dimension row vector calculated by Equation (3) that records the transition probability from to after step random walk. In equation (3 ), random surfer has transited to from after step random walk; meanwhile, the operator corresponds to the transition in the same views after cross-view transitions. Here, the operat or defined in Table 1 is the product of two row vectors. 
Figure 3 . (a) cross -views transition matrix. (b). Intra -views transition matrix. As a starting point in Equation (2), we set as a diagonal matrix with each element being a uniform dimensional row vector in which each element is . Therefore, is also a dimensional row vector which records how the random surfer walks from to from different views after step walks. Therefore, to measure the transition probability after random walk across all the views, we need to sum up the transition from to in each view by Equation (4). In Equation (4), is a diagonal matrix with each diagonal element is a dimensional column vector in which every element is equal to 1. Then, all the transitions between queries after n step multi-view random walks will be stored in a matrix . In this subsection, we discuss the relation between MRW with three existing models SVRW , VIRW and LCV ; and then show they are all special cases of MRW . SVRW stands Single View Random Walk model, in which there is only on information source; so it is clearly that SVRW is the special case when for MRW . For VIRW , it denotes View Independent Random Walk , which means first applies random walks in each view independently and then combines the random walk results linearly. Mathematically, we can prove that the VIRW is a special case of MRW when the cross-view transition probability for any query is zero. Lastly, for LCV , which presents Liner Combination of Views , it first linearly combines the transition between views by Equation (5) with the constraint , and then applies random walk based on a transition matrix in which each element is defined by Equation (5). In this situation, we can prove the LCV is also a special case when is proportional to for any query q transits from any view to . In this subsection, we formally define the search task oriented similarity between queries based on MRW model by Equation (6) which is the weighted sum of transition probabilities in different steps in multi-view random walk. In Equation (6), is the t -step transition matrix calculated by Equation (4) and is a decay factor in the range (0, 1). Equation (6) is motivated by the work of [ 15] in which the transition probabilities at different steps will be weighted by to accumulate up to , making the longer step transitions have less contribution to . Then, we define the similarity between queries by Equation (7), which is an average value of the transition probability from to and from to . Theorem 1. The similarity defined by Equation (7) will converge. Proof . The correctness of Theorem 1 could be observed as follows. Firstly, it is easy to see that , + [ , ]2 and , + [ , ]2  X  , so that , is upper bounded by ; Secondly , we can see for any t . Therefore, based on the monotone convergence theorem [27], will converge when . We consider the following three views for search task discovery. Query Term View : This view corresponds to the fact that the search tasks of many queries can be observed from their terms. To evaluate the relationship of the two queries in this view, each query q will be represented by a term vector in the term space of all queries, in which each element is the value of the i th term in query q . Then, the weight associated with edge ( , ) between two queries in this view is measured by cosine similarity of their term vector s: . Document Click View : This view corresponds to the fact that queries are likely to share the same search task if users tend to click the same Web documents after they issued these queries . More specifically, assume the Web document set is D ; then the query can be represented by a vector in which the i th element is the number of times users clicked the Web document view, the weight for edge ( , ) between queries in this view is calculated by . Search Session View : The intuition behind this view is that queries are likely to share the same search task if they tend to appear in same search sessions. The relationship of the two queries in this view can be measured straightforward ly by the probability that they co-occur in the same search sessions: search sessions which contain the query . After measuring the relationship between queries, we can build and compute intra-vi ew transition probabilities by Equation (1 ). The key of applying MRW model is to properly assign cross-view transitions for each individual query. To tackle this problem, w e develop a method to evaluate the ability that the view captures the search task of a given query; so that the more possible a view indicates the search task of a query, the higher probability the cross-view transitions should be. We evaluate the ability that a view v represents the search task of query through analyzing the characteristic of . In detail, we collect 1.08 million queries about computer (collecting method will be given in Section 6) and use 3 month query log to build for each view. Figure 4 shows the node degree distribution for document click view in log-log scale. The x -axis represents the node degree ordered by ascending order and the y -axis represents the number of query nodes which ha ve corresponding degree. The distribution can be modeled well by power law distribution [3] . The transition graphs for other two views also exhibit similar degree distribution as the document click view. In Figure 4, the head (  X   X  ) of the power law distribution corresponds to queries with few neighbors in the view. In other words, the relationships in the view for these queries are too sparse to find queries with similar search task . On the other hand, the relationships for queries with very big degree  X   X  are too general and consequently not distinctive enough to measure the similarity with other queries , make many queries with different search tasks become similar when measuring similarity for these queries in this view. Based on the observation, we can see the relationship which is too sparse or too general lacks the ability to identify the search task behind query. Therefore, we define the quality of view v for a query by Equation (8), where is the degree of query q in and serve as a moderate node degree in v . Therefore, only queries with neither too small nor too big degree can get a high quality score by Equation (8 ). Based on the view quality defined by Equation (8), we expect the view of higher quality contributes more towards identifying the query search task. Therefore, we define the cross-view transition for query q by Equation (9) in which is proportional to  X   X  to transit to the same view . Therefore, the parameter controls the degree that the random surfer is more likely to retain in the same view or transit across views. In this section, we evaluate the effectiveness of MRW by mining the search tasks for eight types of queries Table 2 lists the query types in which the domain column gives the query types. Each domain is identified by a group of instances known as name entities (entity for short). For example, for computer domain, example name entities may be  X  X p X ,  X  X bm thinkpad X . Such entities could be easily discovered using proposed methods from web resources. The number of entities we collect for each domain is given in column 2. Then, the domain of a query can be judged easily based on the entity it contains. For example, for query such as  X  X ell laptop price X , it will be classified into computer domain. Although this method is very simple, it is yet effective because more than 70% queries contain entities [4]. We then use a one-week log of Bing search from 2010-02 -01 to 2010-02 -07. For query which appears at least 20 times in the query log, we judge whether it belongs to any of the 8 domains and the number of queries of each domain is also given in Table 2. We implement MRW for each domain to measure the search task oriented similarity between queries. As we introduced above, we build query transition graphs for three views. For document click view, the relationship between queries can be predicted directly from query log because the query log also records the clicked documents after a user issued a query. For search session view, the search session is defined as a logical unit of time-ordered user search behaviors [5]. Then, the relationship between queries of this view can be computed. Lastly, for query term view, we first remove stop words from query. In this paper, the entity names also serve as stop words because we aim to mine the specific search tasks under the domain. Then, each query term is stemmed before measuring the relationship between queries in this view. After building query transition graphs for each view, we get the search task based similarity between queries by implementing MRW in which we set in Equation (9). Then, we cluster queries for each domain based on their similarities. In this paper, we choose agglomerate hierarchy based clustering ( HAC ) [ 16] to group queries . We use Avg-Link [ 16] to measure the distance between two clusters and choose the clustering result which has the biggest Silhouette Coefficient as the final clustering result. For details, please refer to work [7]. Therefore, the number of clusters will be determined automatically. Table 3 . Some High Traffic Search Tasks for some domains Table 3 illustrates some high traffic clusters (tasks) for each domain (Due to limited space, we only show the results of two domains). The traffic of a cluster is the sum of traffic of queries in this cluster, and the query traffic is the number of times the query appears in the query log.  X  TR  X  means traffic rate, the percentage of the cluster traffic in the total traffic of the domain . From Table 3, we can see after clustering queries based on similarities computed by MRW , many interesting search tasks are captured for these domains. The names of search tasks in Table 3 are the most frequent query terms of corresponding clusters. We can see that for city domain, the top high traffic clusters correspond to check the  X  X ottery X ,  X  X ducation X ,  X  X ews X ,  X  X ob X  and  X  X eather X  of a city, which all have traffic more than 1%. These clusters describe the main information need when users issue queries about city. For computer domain, we can see that there are two search tasks  X  X river maintain X  and  X  X eview computer X  which account for a very high traffic rate. This reveals two major search tasks of computer domain are  X  X eview computer X  before buying a computer and  X  X river maintain X  after owning a computer. Some other interesting search tasks of computer domain are  X  X emory maintain X ,  X  X uy computer X  and  X  X omputer Accessory X . Parameter Turning As we mentioned in the above section, MRW depends on a parameter , which is the extra possibility a random surfer retains in the same view when transiting between views. We select to achieve best performance by manually studying search tasks of some domains. Specifically, we manually study the high traffic search tasks for three domains as shown in Table 4, in which the column represents the domain name, search task names and number of queries annotated for these search tasks. Domain Search Tasks # of queries
City Map, News, Real estate, Rental, Tax, Law, Weather...
Computer Driver, review, Battery, Memory, Motherboard, Buy...
Car Part, Car Recall, Sale, Payment service, Dealer, Forum... Then, we evaluate the effectiveness of MRW by the average domains, in which is defined by Equation (10). In Equation (10), and are the average similarity between queries into the same cluster and across clusters respectively. For detail, please see [ 17]. Based on , in Figure 5, we plot the SimQuality of MRW for different values of with SimQuality being normalized into [0, 1). From Figure 5, we can see when , the SimQuality doesn X  X  change too much. SimQuality achieves the highest when , which corresponds to that the random surfer has about equal possibility to retain in the same view or transit between views. Meanwhile, we can see the best situation is 3% higher than the situation when . This result demonstrates that although involving extra possibility to retain in the same view when transiting acro ss views, the improvement is not so significant. On the other hand, we can see when , the SimQuality decreases sharply. This phenomenon demonstrates that MRW tends to get high quality similarity when using big transitions across views, which just proves that the view quality is reasonable measure to guide the walking process. Comparison In Section 2.3 we have prove the SVRW , VIRW and LCV are all special cases of MRW . W e compare MRW with these models via SimQuality coefficient. The result is given in Table 5 . In Table 5 , QTV , DCV and SSV are all SVRW models which only use query term view, document click view and search session view respectively. The SimQuality of other models are normalized by the SimQuality of MRW . For LCV , we enumerate the parameters to get the best performance. From Table 5, we can see that the MRW gets the highest SimQuality comparing with the other five algorithms. Table 5 also indicates that the combination of information from different views greatly helps improve the performance for search task discovery. For example, the best situation for single-view random walk is DCV , but DCV is about 19% percent lower than the situation of VIRW, the worst one among algorithms combining the three views. On the other hand, MRW has about 15% improvement over LCV, which demonstrates that compared with combining the relationship globally for different queries; MRW which assigns different cross-view transitions for different queries can actually improve the results. The work of this paper focuses on discovering query search task, which has been studied by several previous works. Early efforts of query search task discovery classified the user search goal into given categories [6][8][9][10] which was also known as query classification. Recent query classification works [11][12] tend to leverage the external knowledge of WordNet or Wikipedia respectively to classify queries. Compared with these works, in this work, we develop a data-driven way to mine search tasks from query log in which the search tasks are not needed to be defined manually as previous works do. Recently, there are more works focusing on understanding the specific information need behind query by analyzing the query log, such as [1][5][13]. Different from these works which focus on understanding the search task of a single query or simply combine relationships from different views, in this paper, we develop a general framework MRW to measure the relationships between queries from multi-sources, in which different information aspects, such as query content, query document click-through and search session, etc, can easily be integrated under MRW framework to better identify the query search task. From this aspect, our work is also related to multi-source learning such as [14], in which multi-view spectral clustering is proposed to extend classic single-view normalized cut. Different from [14], our focus in this paper is clustering queries according to their search tasks, in which the size of query clusters need not be normalized. Further correlations between our work and other multi-source learning researches is our ongoing study issues, in which more detailed comparisons and learnings will be conducted in future works. In this paper, we address the problem of discovering the high traffic search tasks from web search queries. Because the query search task may be reflected from different views. We develop a random walk algorithm MRW, which combines the relationships between queries from different views in a random walk process. The experiment results demonstrate that MRW is effective to discover query search tasks. The MRW algorithm provides us a general way to combine information from different sources. Therefore, the future works could focus on developing better ways to assigning the inter-view transitions for different queries. For example, if we can collect a large number of training data, such inter-view transitions could be learnt appropriately as [2] do. The work was supported in part by the National Nature Science Foundation of China under Grant No. 70871068 and 70890083 and HGJ project 2010ZX01042-002-002-03 . [1] Sadikov, E., Madhavan, J., Wang, L., and Halevy, A. 2010. [2] Sandler, T., Ungar, L. and Crammer K. Resolving Identity [3] Reed, W-J. The Pareto, Zipf and other power laws. [4] Xu, G., Yang, S., and Li, H. 2009. Named entity mining from [5] Cheng, Z., Gao, B., and Liu, T. 2010. Actively predicting [6] White, R. W., Bilenko, M., and Cucerzan, S. 2007. Studying [7] Cui, J., Liu, H., He, J., Li, P., Du, X-Y and Wang, P. [8] A. Broder : A taxonomy of web search. SIGIR Forum 2002. [9] Lee, U., Liu, Z., and Cho, J. 2005. Automatic identification [10] Rose, D. E. and Levinson, D. 2004. Understanding user goals [11] Shen, D., Sun, J., Yang, Q., and Chen, Z. 2006. Building [12] Hu, J., Wang, G., Lochovsky, F., Sun, J., and Chen, Z. 2009 . [13] Yin, X. and Shah, S. 2010. Building taxonomy of web search [14] Zhou. D., Burges, CJ. C. 2007 . Spectral clustering and [15] Minkov, E. and Cohen, W. W. 2008. Learning graph walk [16] Chuang, S-L., Chien, L-F. 2002. Towards automatic [17] Ilaria Bordino, Carlos Castillo, Debora Donato, and Aristides 
