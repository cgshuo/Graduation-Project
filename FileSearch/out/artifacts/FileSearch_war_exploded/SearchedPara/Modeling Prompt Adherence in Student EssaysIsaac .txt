 Automated essay scoring, the task of employing computer technology to evaluate and score writ-ten text, is one of the most important educational applications of natural language processing (NLP) (see Shermis and Burstein (2003) and Shermis et al. (2010) for an overview of the state of the art in this task). A major weakness of many ex-isting scoring engines such as the Intelligent Es-adopt a holistic scoring scheme, which summa-rizes the quality of an essay with a single score and thus provides very limited feedback to the writer. In particular, it is not clear which dimension of an essay (e.g., style, coherence, relevance) a score should be attributed to. Recent work addresses this problem by scoring a particular dimension of es-say quality such as coherence (Miltsakaki and Ku-kich, 2004), technical errors, organization (Pers-ing et al., 2010), and thesis clarity (Persing and Ng, 2013). Essay grading software that provides feedback along multiple dimensions of essay qual-ity such as E-rater /Criterion (Attali and Burstein, 2006) has also begun to emerge.

Our goal in this paper is to develop a com-putational model for scoring an essay along an under-investigated dimension  X  prompt adher-ence . Prompt adherence refers to how related an essay X  X  content is to the prompt for which it was written. An essay with a high prompt adherence score consistently remains on the topic introduced by the prompt and is free of irrelevant digressions.
To our knowledge, little work has been done on scoring the prompt adherence of student essays since Higgins et al. (2004). Nevertheless, there are major differences between Higgins et al. X  X  work and our work with respect to both the way the task is formulated and the approach. Regarding task formulation, while Higgins et al. focus on classi-fying each sentence as having either good or bad adherence to the prompt, we focus on assigning a prompt adherence score to the entire essay , al-lowing the score to range from one to four points at half-point increments. As far as the approach is concerned, Higgins et al. adopt a knowledge-lean approach to the task, where almost all of the features they employ are computed based on a word-based semantic similarity measure known as Random Indexing (Kanerva et al., 2000). On the other hand, we employ a large variety of fea-tures, including lexical and knowledge-based fea-tures that encode how well the concepts in an es-say match those in the prompt, LDA-based fea-tures that provide semantic generalizations of lex-ical features, and  X  X rror type X  features that encode different types of errors the writer made that are related to prompt adherence.

In sum, our contributions in this paper are two-fold. First, we develop a scoring model for the prompt adherence dimension on student essays us-ing a feature-rich approach. Second, in order to stimulate further research on this task, we make our data set consisting of prompt adherence an-notations of 830 essays publicly available. Since progress in prompt adherence modeling is hin-dered in part by the lack of a publicly annotated corpus, we believe that our data set will be a valu-able resource to the NLP community. We use as our corpus the 4.5 million word Interna-tional Corpus of Learner English (ICLE) (Granger et al., 2009), which consists of more than 6000 es-says written by university undergraduates from 16 countries and 16 native languages who are learn-ers of English as a Foreign Language. 91% of the ICLE texts are argumentative. We select a subset consisting of 830 argumentative essays from the ICLE to annotate for training and testing of our essay prompt adherence scoring system. Table 1 shows three of the 13 topics selected for annota-tion. Fifteen native languages are represented in the set of annotated essays. We ask human annotators to score each of the 830 argumentative essays along the prompt adherence dimension. Our annotators were selected from over 30 applicants who were familiarized with the scoring rubric and given sample essays to score. The six who were most consistent with the ex-pected scores were given additional essays to an-notate. Annotators evaluated how well each es-say adheres to its prompt using a numerical score from one to four at half-point increments (see Ta-ble 2 for a description of each score). This con-trasts with previous work on prompt adherence es-say scoring, where the corpus is annotated with a binary decision (i.e., good or bad ) (e.g., Higgins et al. (2004; 2006), Louis and Higgins (2010)). Hence, our annotation scheme not only provides
Table 2: Descriptions of the meaning of scores. a finer-grained distinction of prompt adherence (which can be important in practice), but also makes the prediction task more challenging.
To ensure consistency in annotation, we ran-domly select 707 essays to have graded by mul-tiple annotators. Analysis reveals that the Pear-son X  X  correlation coefficient computed over these doubly annotated essays is 0.243. Though annota-tors exactly agree on the prompt adherence score of an essay only 38% of the time, the scores they apply fall within 0.5 points in 66% of essays and within 1.0 point in 89% of essays. For the sake of our experiments, whenever annotators disagree on an essay X  X  prompt adherence score, we assign the essay the average of all annotations rounded to the nearest half point. Table 3 shows the number of essays that receive each of the seven scores for prompt adherence. Table 3: Distribution of prompt adherence scores. In this section, we describe in detail our system for predicting essays X  prompt adherence scores. 4.1 Model Training and Application We cast the problem of predicting an essay X  X  prompt adherence score as 13 regression prob-lems, one for each prompt. Each essay is repre-sented as an instance whose label is the essay X  X  true score (one of the values shown in Table 3) with up to seven types of features including base-line (Section 4.2) and six other feature types pro-posed by us (Section 4.3). Our regressors may as-sign an essay any score in the range of 1.0  X  4.0.
Using regression captures the fact that some pairs of scores are more similar than others (e.g., an essay with a prompt adherence score of 3.5 is more similar to an essay with a score of 4.0 than it is to one with a score of 1.0). A classification sys-tem, by contrast, may sometimes believe that the scores 1.0 and 4.0 are most likely for a particu-lar essay, even though these scores are at opposite ends of the score range.

Using a different regressor for each prompt cap-tures the fact that it may be easier for an essay to adhere to some prompts than to others, and com-mon problems students have writing essays for one prompt may not apply to essays written in re-sponse to another prompt. For example, in essays written in response to the prompt  X  X arx once said that religion was the opium of the masses. If he was alive at the end of the 20th century, he would replace religion with television, X  students some-times write essays about all the evils of television, forgetting that their essay is only supposed to be about whether it is  X  X he opium of the masses X . Stu-dents are less likely to make an analogous mistake when writing for the prompt  X  X rime does not pay. X 
After creating training instances for prompt p i , we train a linear regressor, r i , with regularization parameter c i for scoring test essays written in re-sponse to p i using the linear SVM regressor imple-mented in the LIBSVM software package (Chang and Lin, 2001). All SVM-specific learning param-eters are set to their default values except c i , which we tune to maximize performance on held-out val-idation data.

After training the classifiers, we use them to classify the test set essays. The test instances are created in the same way as the training instances. 4.2 Baseline Features Our baseline system for score prediction employs various features based on Random Indexing. 1. Random Indexing Random Indexing (RI) is  X  X n efficient, scalable and incremental alterna-tive X  (Sahlgren, 2005) to Latent Semantic Index-ing (Deerwester et al., 1990; Landauer and Dut-nais, 1997) which allows us to automatically gen-erate a semantic similarity measure between any two words. We train our RI model on over 30 mil-lion words of the English Gigaword corpus (Parker et al., 2009) using the S-Space package (Jurgens and Stevens, 2010). We expect that features based on RI will be useful for prompt adherence scor-ing because they may help us find text related to the prompt even if some of its concepts have have been rephrased (e.g., an essay may talk about  X  X ail X  rather than  X  X rison X , which is mentioned in one of the prompts), and because they have al-ready proven useful for the related task of deter-mining which sentences in an essay are related to the prompt (Higgins et al., 2004).

For each essay, we therefore attempt to adapt the RI features used by Higgins et al. (2004) to our problem of prompt adherence scoring. We do this by generating one feature encoding the entire essay X  X  similarity to the prompt, another encoding the essay X  X  highest individual sentence X  X  similarity to the prompt, a third encoding the highest entire essay similarity to one of the prompt sentences, another encoding the highest individual sentence similarity to an individual prompt sentence, and fi-nally one encoding the entire essay X  X  similarity to a manually rewritten version of the prompt that ex-cludes extraneous material (such as  X  X n his novel Animal Farm, George Orwell wrote, X  which is in-troductory material from the third prompt in Ta-ble 1). Our RI feature set necessarily excludes those features from Higgins et al. that are not easily translatable to our problem since we are concerned with an entire essay X  X  adherence to its prompt rather than with each of its sentences X  re-latedness to the prompt. Since RI does not pro-vide a straightforward way to measure similar-ity between groups of words such as sentences or essays, we use Higgins and Burstein X  X  (2007) method to generate these features. 4.3 Novel Features Next, we introduce six types of novel features. 2. N-grams As our first novel feature, we use the 10,000 most important lemmatized unigram, bigram, and trigram features that occur in the es-say. N-grams can be useful for prompt adherence scoring because they can capture useful words and phrases related to a prompt. For example, words and phrases like  X  X niversity degree X ,  X  X tudent X , and  X  X eal world X  are relevant to the first prompt in Table 1, so it is more likely that an essay adheres to the prompt if they appear in the essay.

We determine the  X  X ost important X  n-gram fea-tures using information gain computed over the training data (Yang and Pedersen, 1997). Since the essays vary greatly in length, we normalize each essay X  X  set of n-gram features to unit length. 3. Thesis Clarity Keywords Our next set of fea-tures consists of the keyword features we intro-duced in our previous work on essay thesis clarity scoring (Persing and Ng, 2013). Below we give an overview of these keyword features and motivate why they are potentially useful for prompt adher-ence scoring.

The keyword features were formed by first ex-amining the 13 essay prompts, splitting each into its component pieces. As an example of what is meant by a  X  X omponent piece X , consider the first prompt in Table 1. The components of this prompt would be  X  X ost university degrees are theoreti-cal X ,  X  X ost university degrees do not prepare stu-dents for the real world X , and  X  X ost university de-grees are of very little value. X 
Then the most important (primary) and second most important (secondary) words were selected from each prompt component, where a word was considered  X  X mportant X  if it would be a good word for a student to use when stating her thesis about the prompt. So since the lemmatized version of the third component of the second prompt in Table 1 is  X  X t should rehabilitate they X ,  X  X ehabilitate X  was selected as a primary keyword and  X  X ociety X  as a secondary keyword.

Features are then computed based on these key-words. For instance, one thesis clarity keyword feature is computed as follows. The RI similarity measure is first taken between the essay and each group of the prompt X  X  primary keywords. The fea-ture then gets assigned the lowest of these values. If this feature has a low value, that suggests that the student ignored the prompt component from which the value came when writing the essay.
To compute another of the thesis clarity key-word features, the numbers of combined primary and secondary keywords the essay contains from each component of its prompt are counted. These numbers are then divided by the total count of pri-mary and secondary features in their respective components. The greatest of the fractions gener-ated in this way is encoded as a feature because if it has a low value, that indicates the essay X  X  thesis 4. Prompt Adherence Keywords The thesis clarity keyword features described above were in-tended for the task of determining how clear an essay X  X  thesis is, but since our goal is instead to de-termine how well an essay adheres to its prompt, it makes sense to adapt keyword features to our task rather than to adopt keyword features ex-actly as they have been used before. For this reason, we construct a new list of keywords for each prompt component, though since prompt ad-herence is more concerned with what the student says about the topics than it is with whether or not what she says about them is stated clearly, our keyword lists look a little different than the ones discussed above. For an example, we ear-lier alluded to the problem of students merely dis-cussing all the evils of television for the prompt  X  X arx once said that religion was the opium of the masses. If he was alive at the end of the 20th cen-tury, he would replace religion with television. X  Since the question suggests that students discuss whether television is analogous to religion in this way, our set of prompt adherence keywords for this prompt contains the word  X  X eligion X  while the previously discussed keyword sets do not. This is because a thesis like  X  X elevision is bad X  can be stated very clearly without making any reference to religion at all, and so an essay with a thesis like this can potentially have a very high thesis clarity score. It should not, however, have a very high prompt adherence score, as the prompt asked the student to discuss whether television is like reli-gion in a particular way, so religion should be at least briefly addressed for an essay to be awarded a high prompt adherence score.

Additionally, our prompt adherence keyword sets do not adopt the notions of primary and sec-ondary groups of keywords for each prompt com-ponent, instead collecting all the keywords for a component into one set because  X  X econdary X  key-words tend to be things that are important when we are concerned with what a student is saying about the topic rather than just how clearly she said it.
We form two types of features from prompt ad-herence keywords. While both types of features measure how much each prompt component was discussed in an essay, they differ in how they en-code the information. To obtain feature values of the first type, we take the RI similarities between the whole essay and each set of prompt adherence keywords from the prompt X  X  components. This results in one to three features, as some prompts have one component while others have up to three.
We obtain feature values of the second type as follows. For each component, we count the num-ber of prompt adherence keywords the essay con-tains. We divide this number by the number of prompt adherence keywords we identified from the component. This results in one to three fea-tures since a prompt has one to three components. 5. LDA Topics A problem with the features we have introduced up to this point is that they have trouble identifying topics that are not mentioned in the prompt, but are nevertheless related to the prompt. These topics should not diminish the es-say X  X  prompt adherence score because they are at least related to prompt concepts. For example, consider the prompt  X  X ll armies should consist en-tirely of professional soldiers: there is no value in a system of military service. X  An essay contain-ing words like  X  X eace X ,  X  X atriotism X , or  X  X raining X  are probably not digressions from the prompt, and therefore should not be penalized for discussing these topics. But the various measures of keyword similarities described above will at best not notice that anything related to the prompt is being dis-cussed, and at worst, this might have effects like lowering some of the RI similarity scores, thereby probably lowering the prompt adherence score the regressor assigns to the essay. While n-gram fea-tures do not have exactly the same problem, they would still only notice that these example words are related to the prompt if multiple essays use the same words to discuss these concepts. For this reason, we introduce Latent Dirichlet Allocation (LDA) (Blei et al., 2003) features.

In order to construct our LDA features, we first collect all essays written in response to each prompt into its own set. Note that this feature type exploits unlabeled data: it includes all essays in the ICLE responding to our prompts, not just those in our smaller annotated 830 essay dataset. We then use the MALLET (McCallum, 2002) imple-mentation of LDA to build a topic model of 1,000 topics around each of these sets of essays. This results in what we can think of as a soft clustering of words into 1,000 sets for each prompt, where each set of words represents one of the topics LDA identified being discussed in the essays for that prompt. So for example, the five most impor-tant words in the most frequently discussed topic for the military prompt we mentioned above are  X  X an X ,  X  X ilitary X ,  X  X ervice X ,  X  X ay X , and  X  X ar X .
We also use the MALLET-generated topic model to tell us how much of each essay is spent discussing each of the 1,000 topics. The model might tell us, for example, that a particular essay written on the military prompt spends 35% of the time discussing the  X  X an X ,  X  X ilitary X ,  X  X ervice X ,  X  X ay X , and  X  X ar X  topic and 65% of the time dis-cussing a topic whose most important words are  X  X ully X ,  X  X ount X ,  X  X rdinary X ,  X  X zech X , and  X  X ay X . Since the latter topic is discussed so much in the essay and does not appear to have much to do with the military prompt, this essay should probably get a bad prompt adherence score. We construct 1,000 features from this topic model, one for each topic. Each feature X  X  value is obtained by using the topic model to tell us how much of the essay was spent discussing the feature X  X  corresponding topic. From these features, our regressor should be able to learn which topics are important to a good prompt adherent essay. 6. Manually Annotated LDA Topics A weak-ness of the LDA topics feature type is that it may result in a regressor that has trouble distinguishing between an infrequent topic that is adherent to the prompt and one that just represents an irrelevant digression. This is because an infrequent topic may not appear in the training set often enough for the regressor to make this judgment. We introduce the manually annotated LDA topics feature type to address this problem.

In order to construct manually annotated LDA topic features, we first build 13 topic models, one for each prompt, just as described in the section on LDA topic features. Rather than requesting models of 1,000 topics, however, we request mod-13 lists of 100 topics as represented by their top ten words, manually annotating each topic with a number from 0 to 5 representing how likely it is that the topic is adherent to the prompt. A topic labeled 5 is very likely to be related to the prompt, where a topic labeled 0 appears totally unrelated.
Using these annotations alongside the topic dis-tribution for each essay that the topic models pro-vide us, we construct ten features. The first five features encode the sum of the contributions to an essay of topics annotated with a number  X  1 , the sum of the contributions to an essay of topics an-notated with a number  X  2 , and so on up to 5.
The next five features are similar to the last, with one feature taking on the sum of the contri-butions to an essay of topics annotated with the number 0, another feature taking on the sum of the contributions to an essay of topics annotated with the number 1, and so on up to 4. We do not include a feature for topics annotated with the number 5 because it would always have the same value as the feature for topics  X  5 .

Features like these should give the regressor a better idea how much of an essay is composed of prompt-related arguments and discussion and how much of it is irrelevant to the prompt, even if some of the topics occurring in it are too infrequent to judge just from training data. 7. Predicted Thesis Clarity Errors In our pre-vious work on essay thesis clarity scoring (Persing and Ng, 2013), we identified five classes of errors that detract from the clarity of an essay X  X  thesis: Confusing Phrasing. The thesis is phrased oddly, making it hard to understand the writer X  X  point. Incomplete Prompt Response. The thesis leaves some part of a multi-part prompt unaddressed. Relevance to Prompt. The apparent thesis X  X  weak relation to the prompt causes confusion.
 Missing Details. The thesis leaves out an impor-tant detail needed to understand the writer X  X  point. Writer Position. The thesis describes a position on the topic without making it clear that this is the position the writer supports.

We hypothesize that these errors, though orig-inally intended for thesis clarity scoring, could be useful for prompt adherence scoring as well. For instance, an essay that has a Relevance to Prompt error or an Incomplete Prompt Response error should intuitively receive a low prompt ad-herence score. For this reason, we introduce fea-tures based on these errors to our feature set for
While each of the essays in our data set was pre-viously annotated with these thesis clarity errors, in a realistic setting a prompt adherence scoring system will not have access to these manual error labels. As a result, we first need to predict which of these errors is present in each essay. To do this, we train five maximum entropy classifiers for each prompt, one for each of the five thesis clarity er-rors, using MALLET X  X  (McCallum, 2002) imple-mentation of maximum entropy classification. In-stances are presented to classifier for prompt p for error e in the following way. If a training essay is written in response to p , it will be used to gen-erate a training instance whose label is 1 if e was annotated for it or 0 otherwise. Since error pre-diction and prompt adherence scoring are related problems, the features we associate with this in-stance are features 1  X  6 which we have described earlier in this section. The classifier is then used to generate probabilities telling us how likely it is that each test essay has error e .

Then, when training our regressor for prompt adherence scoring, we add the following features to our instances. We add a binary feature indicat-ing the presence or absence of each error. Or in the case of test essays, the feature takes on a real value from 0 to 1 indicating how likely the classi-fier thought it was that the essay had each of the errors. This results in five additional features, one for each error. In this section, we evaluate our system for prompt adherence scoring. All the results we report are obtained via five-fold cross-validation exper-iments. In each experiment, we use 3 beled essays for model training, another 1 rameter tuning, and the final 1 5.1 Experimental Setup 5.1.1 Scoring Metrics We employ four evaluation metrics. As we will see below, S 1 , S 2 , and S 3 are error metrics, so lower scores imply better performance. In contrast, PC is a correlation metric, so higher correlation im-plies better performance.

The simplest metric, S 1 , measures the fre-quency at which a system predicts the wrong score out of the seven possible scores. Hence, a system that predicts the right score only 25% of the time would receive an S 1 score of 0.75.

The S 2 metric measures the average distance between a system X  X  score and the actual score. This metric reflects the idea that a system that pre-dicts scores close to the annotator-assigned scores should be preferred over a system whose predic-tions are further off, even if both systems estimate the correct score at the same frequency.

The S 3 metric measures the average square of the distance between a system X  X  score predic-tions and the annotator-assigned scores. The in-tuition behind this system is that not only should we prefer a system whose predictions are close to the annotator scores, but we should also prefer one whose predictions are not too frequently very far away from the annotator scores. These three scores are given by: 1 N where A j , E j , and E  X  j are the annotator assigned, system predicted, and rounded system predicted scores 4 respectively for essay j , and N is the num-ber of essays.

The last metric, PC , computes Pearson X  X  cor-relation coefficient between a system X  X  predicted scores and the annotator-assigned scores. PC ranges from  X  1 to 1. A positive (negative) PC implies that the two sets of predictions are posi-tively (negatively) correlated. 5.1.2 Parameter Tuning As mentioned earlier, for each prompt p i , we train a linear regressor r i using LIBSVM with regular-ization parameter c i . To optimize our system X  X  performance on the three error measures described previously, we use held-out validation data to in-dependently tune each of the c i values 5 . Note that each of the c i values can be tuned independently because a c i value that is optimal for predicting scores for p i essays with respect to any of the error performance measures is necessarily also the opti-mal c i when measuring that error on essays from all prompts. However, this is not case with Pear-son X  X  correlation coefficient, as the PC value for essays from all 13 prompts cannot be simplified as a weighted sum of the PC values obtained on each individual prompt. In order to obtain an optimal result as measured by PC , we jointly tune the c i parameters to optimize the PC value achieved by our system on the same held-out validation data. However, an exact solution to this optimization problem is computationally expensive, as there are too many ( 7 13 ) possible combinations of c values to exhaustively search. Consequently, we find a local maximum by employing the simulated an-Table 4: Five-fold cross-validation results for prompt adherence scoring. nealing algorithm (Kirkpatrick et al., 1983), alter-ing one c i value at a time to optimize PC while holding the remaining parameters fixed. 5.2 Results and Discussion Five-fold cross-validation results on prompt ad-herence score prediction are shown in Table 4. On the first line, this table shows that our baseline sys-tem, which recall uses only various RI features, predicts the wrong score 51.7% of the time. Its predictions are off by an average of .368 points, and the average squared distance between its pre-dicted score and the actual score is .234. In addi-tion, its predicted scores and the actual scores have a Pearson correlation coefficient of 0.233.
The results from our system, which uses all seven feature types described in Section 4, are shown in row 2 of the table. Our system obtains S 1 , S 2 , S 3 , and PC scores of .488, .348, .197, and .360 respectively, yielding a significant im-provement over the baseline with respect to S 2 , S 3 , and PC with p&lt; 0.05, p&lt; 0.01, and p&lt; 0.06 ments by all four measures, its improvement over the baseline S 1 score is not significant. These re-sults mean that the greatest improvements our sys-tem makes are that it ensures that our score pre-dictions are not too often very far away from an essay X  X  actual score, as making such predictions would tend to drive up S 3 , yielding a relative er-ror reduction in S 3 of 15.8%, and it also ensures a better correlation between predicted and actual scores, thus yielding the 16.6% improvement in PC . 7 It also gives more modest improvements in how frequently exactly the right score is predicted ( S 1 ) and is better at predicting scores closer to the actual scores ( S 2 ). 5.3 Feature Ablation To gain insight into how much impact each of the feature types has on our system, we perform fea-ture ablation experiments in which we remove the feature types from our system one-by-one.

Results of the ablation experiments when per-formed using the four scoring metrics are shown in Table 5. The top line of each subtable shows what our system X  X  score would be if we removed just one of the feature types from our system. So to see how our system performs by the S 1 metric if we remove only predicted thesis clarity error features, we would look at the first row of results of Ta-ble 5(a) under the column headed by the number 7 since predicted thesis clarity errors are the seventh feature type introduced in Section 4. The number here tells us that our system X  X  S 1 score without this feature type is .502. Since Table 4 shows that when our system includes this feature type (along with all the other feature types), it obtains an S 1 score of .488, this feature type X  X  removal costs our system .014 S 1 points, and thus its inclusion has a beneficial effect on the S 1 score.

From row 1 of Table 5(a), we can see that re-moving feature 4 yields a system with the best S 1 score in the presence of the other feature types in this row. For this reason, we permanently remove feature 4 from the system before we generate the results on line 2. Thus, we can see what happens when we remove both feature 4 and feature 5 by looking at the second entry in row 2. And since removing feature 6 harms performance least in the presence of row 2 X  X  other feature types, we perma-nently remove both 4 and 6 from our feature set when we generate the third row of results. We it-eratively remove the feature type that yields a sys-tem with the best performance in this way until we get to the last line, where only one feature type is used to generate each result.

Since the feature type whose removal yields the best system is always the rightmost entry in a line, the order of column headings indicates the rela-tive importance of the feature types, with the left-most feature types being most important to per-formance and the rightmost feature types being least important in the presence of the other fea-ture types. This being the case, it is interesting to note that while the relative importance of differ-ent feature types does not remain exactly the same if we measure performance in different ways, we can see that some feature types tend to be more im-portant than others in a majority of the four scor-ing metrics. Features 2 (n-grams), 3 (thesis clarity keywords), and 6 (manually annotated LDA top-Table 5: Feature ablation results. In each subtable, ics) tend to be the most important feature types, as they tend to be the last feature types removed in the ablation subtables. Features 1 (RI) and 5 (LDA topics) are of middling importance, with neither ever being removed first or last, and each tending to have a moderate effect on performance. Finally, while features 4 (prompt adherence key-words) and 7 (predicted thesis clarity errors) may by themselves provide useful information to our system, in the presence of the other feature types they tend to be the least important to performance as they are often the first feature types removed.
While there is a tendency for some feature types to always be important (or unimportant) regardless of which scoring metric is used to measure per-formance, the relative importance of different fea-ture types does not always remain consistent if we measure performance in different ways. For ex-ample, while we identified feature 3 (thesis clar-ity keywords) as one of the most important fea-ture types generally due to its tendency to have a large beneficial impact on performance, when we are measuring performance using S 3 , it is the least useful feature type. Furthermore, its removal in-creases the S 3 score by a small amount, meaning that its inclusion actually makes our system per-form worse with respect to S 3 . Though feature 3 is an extreme example, all feature types fluctuate in importance, as we see when we compare their or-ders of removal among the four ablation subtables. Hence, it is important to know how performance is measured when building a system for scoring prompt adherence.

Feature 3 is not the only feature type whose re-moval sometimes has a beneficial impact on per-formance. As we can see in Table 5(b), the re-moval of features 4, 5, and 7 improves our sys-tem X  X  S 2 score by .001 points. The same effect occurs in Table 5(c) when we remove features 4, 7, and 3. These examples illustrate that under some scoring metrics, the inclusion of some fea-ture types is actively harmful to performance. For-tunately, this effect does not occur in any other cases than the two listed above, as most feature types usually have a beneficial or at least neutral impact on our system X  X  performance.

For those feature types whose effect on perfor-mance is neutral in the first lines of ablation results (feature 4 in S 1 , features 3, 5, and 7 in S 2 , and fea-tures 1, 4, 5, and 7 in S 3 ), it is important to note that their neutrality does not mean that they are unimportant. It merely means that they do not im-prove performance in the presence of other feature types. We can see this is the case by noting that they are not all the least important feature types in their respective subtables as indicated by column order. For example, by the time feature 1 gets per-manently removed in Table 5(c), its removal harms performance by .002 S 3 points. 5.4 Analysis of Predicted Scores To more closely examine the behavior of our sys-tem, in Table 6 we chart the distributions of scores it predicts for essays having each gold standard score. As an example of how to read this table, consider the number 3.06 appearing in row 2.0 in the .25 column of the S 3 region. This means that 25% of the time, when our system with parameters tuned for optimizing S 3 is presented with a test es-say having a gold standard score of 2.0, it predicts that the essay has a score less than or equal to 3.06.
From this table, we see that our system has a strong bias toward predicting more frequent scores as there are no numbers less than 3.0 in the table, and about 93.7% of all essays have gold standard scores of 3.0 or above. Nevertheless, our system does not rely entirely on bias, as evidenced by the fact that each column in the table has a tendency for its scores to ascend as the gold standard score increases, implying that our system has some suc-cess at predicting lower scores for essays with lower gold standard prompt adherence scores.
Another interesting point to note about this ta-ble is that the difference in error weighting be-tween the S 2 and S 3 scoring metrics appears to be having its desired effect, as every entry in the S 3 subtable is less than its corresponding entry in the S 2 subtable due to the greater penalty the S 3 met-ric imposes for predictions that are very far away from the gold standard scores. We proposed a feature-rich approach to the under-investigated problem of predicting essay-level prompt adherence scores on student essays. In an evaluation on 830 argumentative essays selected from the ICLE corpus, our system significantly outperformed a Random Indexing based baseline by several evaluation metrics. To stimulate further research on this task, we make all our annotations, including our prompt adherence scores, the LDA topic annotations, and the error annotations pub-licly available.
