 The participants of social networks are not only allowed to share Web documents but also to annotate, to evaluate and to comment them [19]. Social tagging data, known as folksonomies , create social association between the users and the Web pages through the social annotations [20]. Social annotation is a set of tags (keywords) freely assigned by a user to describe the content of a Web document. To this end, annotations are widely cons idered as an effective means of enriching content with meta-data. Folksonomies can be considered as a fairly accurate source to discover user interests [18]. In th is context, Social Information Retrieval (SIR), defined as the incorporation of information related to social networks and relationships into the information retrieval process [8], attempts to extend classical IR by taking into consideration the user X  X  ISC within his social network. Indeed, social networks users may be seeking different informations expressed by the same queries. Thus, SIR systems can exploit the user X  X  ISC to refine the user X  X  retrieval. Hence, one aim of SIR consists in adapting usual IR models and systems in order to deal with this user X  X  social data (user X  X  annotations and social relationships). We propose a SIR model, called BM 25 F S , which integrates user X  X  ISC during the indexing step. More specifically, the user X  X  ISC is generated out of his annotations. Then, we benefit from social relationships of the user, that we call neighborhood, to enrich the user X  X  ISC with the annotations of his neighborhood. Once the user X  X  ISC gener ated, we investigate the way to integrate this social information into the SIR model.

This paper is organized as follows: we discuss some related works in Section 2 and we explain the motivations of our work in Section 3. In Section 4, we present our methodological framework by describing the approach that we used to gener-ate the user X  X  ISC and we detail the main contribution of our work which consists in integrating the user X  X  ISC in the documents indexing step in order to build a personalized documents index. Further, we present some results of experiments done on a test collection generated from the collaborative bookmarking network Delicious 1 in Section 5, and we conclude with some perspectives. Social networks provide valuable additional information which have been used to improve the results of recommendation systems [6], collaborative filtering [5], or information retrieval [7]. Much related works use social informations for query expansion and disambiguation [15],[9],[4].

In this paper, we focus on the use of these social annotations and relation-ships in the SIR models for IR personalization. For example, with the aim to improve Web search, Bao et al. [2] propose two methods: SocialSimRank and SocialPageRank. The former allows to find the latent semantic association be-tween queries and annotations, while the latter takes into account the popularity of web pages [2].

The first step of the IR personalization aims at modeling the user X  X  profile and social context [1],[3],[18],[20],[17]. Indeed, several studies have proven that user X  X  ISC can be effectively harvested from the s ocial bookmarking systems [1],[17]. These works assume that the documents and the tags posted by users depend highly on their interests and provide rich information for building user profiles [3],[18],[20].

The second step aims at integrating the user X  X  ISC into the SIR model by combining different weighting function. Authors in [3],[18],[20],[11], propose to personalize the user X  X  search by ranking the resource based on, a matching be-tween the user X  X  interests and the documents X  topics [20], or between the user X  X  profile and the resource X  X  profile [18],[3]. Rather than considering the resource X  X  content, authors in [3],[18],[11] propose to build a resource X  X  profile through the resource X  X  annotations and compute a matching function between this resource X  X  profile and the query terms, on the one h and and between the resource X  X  profile and the user X  X  profile, on the other hand.

Unlike in [3],[18] and [11], Xu et al., consider to match the document X  X  content instead of matching only the document X  X  profile over the query terms and the user X  X  profile. The success they achieve d is a strong support for our work [20]. Although, Cai et al., [3] discuss the limits of the weighting functions used in the previous cited works [18][20],[11] as for a case study based only on a set of tags for resource recommendation, they p ropose a normalized term frequency to indicate the preference degree of a tag for the user and the representative degree of a tag for the resource [3]. We note that the user X  X  profile generated in these works is based only on the user X  X  annotations without exploring his relationships.
In our approach, we assume that the document content is useful for IR. Thus, using only the document profile is not enough. We assume also that it is impor-tant to exploit the social annotations of the user X  X  relationships (neighborhood) in addition to his own social annotations. As Stoyanovich et al. [16] show, the predicted relevance of documents may be enhanced by exploiting the user neigh-bors X  tagging actions [16]. Finally, we think that combining the document content with this ISC requires IR techniques that are able to handle large textual docu-ments. This led us to introduce an original approach presented in the following sections. 3.1 Ambiguous Queries Almost all test collections, in IR resea rch, assume that queries have a single interpretation representing the information need expressed by one user, which is implicitly defined in his relevance judgments [14]. However, in practice this is not necessary the case. For this reason, in this paper we propose a framework for personalized information retrieval based on folksonomies. Such a system should be able to handle ambiguous queries, i.e. queries having potentially several in-terpretations representing d ifferent information needs.

For example, suppose that two users u 1 and u 2 have the same query q =  X  X martphone android X  (cf. Table 1). We consider two documents d 1 and d 2 ;each document contains one query term, but smartphone is more important than an-droid in the first document since d 1 contains only smartphone ,and android is more important than smartphone in the second one since d 2 contains only an-droid . Assuming that the two query terms ha ve the same importance, a classical IR system should estimate that d 1 is equally relevant as d 2 for the query  X  smart-phone android  X . However, depending on the user and his personal interests, the information need behind this query may focus either on the term smartphone or on the term android . The user u 1 is mainly interested in smartphone devices, then his information need is probably centered around smartphones with an opening on Android, and thus the query term smartphone should be more im-portant than the query term android . On the other hand, the user u 2 is mainly interested by the Android operating syst em, consequently his information need is probably centered around Android, and thus the query term android should be more important than the query term smartphone .
 3.2 Personalized Information Retrieval A personalized information r etrieval system should be ab le to identify the user X  X  personal interests, in order to better interpret the information need behind his queries, and returns lists of relevant documents to the users depending on their personal interests. In our example, a personalized IR system should consider d 1 as more relevant than d 2 for u 1 , and the opposite for u 2 . 3.3 Folksonomies and User X  X  Informational Social Context (ISC) We assume that folksonomies may be exploited in order to build the informa-tional social context of the user that coul d represent the user X  X  interests and that could help the system to handle ambiguous queries return personalized results to the user.

As pointed out in related literature, the user X  X  profile can be inferred from his social annotations ([1],[17]). The neighborhood X  X  profile is defined by the anno-tations of his neighborhood. We assume that the user X  X  profile can be enriched by the annotations of his neighbors to build the user X  X  ISC. 3.4 Integrating User X  X  ISC within the IR Model Since we exploit the social information about the user and his neighborhood to generate his ISC, we assume that the important terms representing the user X  X  in-terests should appear in this ISC. Thus, reweighting such important terms when they are found within the document, should improve the document relevance score and allows to return the personalized relevant documents. We think that the integration of the user X  X  ISC within the IR model is an important part of the personalization. One aim of this work is to handle textual documents con-taining thousands of terms, unlike most related work which only handle small sets of tags describing the document. Combining the user X  X  ISC with this kind of textual data raises different issues than combining two sets of tags, like for instance in the work of Cai et al. [3]. Our work attempts to deal with this issue. We present a SIR model, called BM 25 F S , that takes into account the user X  X  ISC, to better describe the documents with respect to the user viewpoint. 4.1 Notations tuple &lt;U,Rel,T,D,A&gt; ,where:  X  U = { u 1 ,u 2 , ..., u x , ..., u | U | } is a set of social network users.  X  Rel  X  U  X  U is a set of relationships between pairs of users, such that  X  T = { t 1 ,t 2 , ..., t j , ..., t | T | } is a set of index terms.  X  A = { a 1 ,a 2 , ..., a z , ..., a | A | } is a set of social annotations, i.e., We define also: 4.2 Information Retrieval Model: BM25 We choose as baseline the IR weighting function BM25 [13], which is one of the most used indexation models in the IR research benchmarks such as INEX 2 , TREC 3 , etc. In this IR weighting function, the weight of a term t j within a document d i is computed according to the formula (1): where:  X  dl i is the document length of d i and avgdl is the average documents length.  X  tf ij is the term frequency of t j within the document d i .  X  k 1 is the saturation parameter of tf ij .  X  b is the length normalization factor.  X  N is the total number of documents in the corpus.  X  df j is the number of documents containing the term t j .

In the BM 25 model, the global score of a document d i for a query q l is computed as follows: 4.3 User Informational Social Context (ISC) The user X  X  informational social context may contain different information types (annotations, comments, citations, social relationships, etc.). In this work we generate the user X  X  ISC from the terms in his annotations and those of his neigh-bors. We present two variants of the user X  X  ISC: ISC u ( u x ), called  X  X he user X  X  profile X  and ISC n ( u x ), called  X  X he neighborhood X  X  profile X :
The user X  X  profile ISC u ( u x ) is the set of terms which occur within the social annotations of the user.
 where: A u x is the set of social annotations of u x .

The user X  X  profile may contain sever al occurrences of the same term. Thus we can compute the term frequency tfu xj for a given term t j that has been used by u x to annotate the documents. In the example provided in Table 1, the user profiles with the tfu xj associated are represented as follows: ISC u ( u 1 )= u 1 and (1,2) for u 2 .

The neighborhood X  X  profile ISC n ( u x ) is the set of terms which occur within the user neighborhood X  X  annotations.

Like previously, the neighborhood X  X  profile may also contain several occur-rences of the same term t j , and we can compute the term frequency tfn xj for agiventerm t j that has been used by the neighborhood of u x to annotate the documents. In our example, the neighborhood ( u 1 )iscomposedof u 3 and the we can compute the neighborhood X  X  profiles for u 1 and u 2 , given in Table 1. 4.4 Personalized Index Now, our aim is to take into account the user X  X  ISC during the indexing step, in order to personalize the documents index.
We combine the content of the document d i , represented by a vector of term frequencies tf ij , with the user X  X  ISC, composed of two vectors of term frequencies tfu xj and tfn xj . Each document is indexed by a vector of weights ws xij , with ws xij the weight of the term t j in the document d i for the user u x .Theterm weight ws xij is a personalized version of w ij for the user u x .

We propose to combine the document X  X  content and the user X  X  ISC as three different fields of information (i.e. 3 vectors). As it has been shown more coherent than combining the score of each vector computed independently, in [12]. Thus, we built a personalized documents i ndex based on these three fields:  X  the content of d i , represented by a vector of field term frequencies ftf xij is  X  the user X  X  profile ISC u ( u x ), represented by a vector of field term frequencies  X  the neighborhood X  X  profile ISC n ( u x ), represented by a vector of field term
The BM25F weighting function has been proposed by [12] in order to in-dex structured documents composed of several fields (e.g. title , abstract , body , etc.). BM 25 F seems to be suitable for indexing our three fields-documents. This function was extended by [21] in order to optimize the length normalization field-by-field. We chose to use this latter BM25F variant. Then, like Zaragoza et al., the first step of the BM25F function norm alizes the term frequencies of each field by the field length [21]: where:  X  b d , b ux and b nx are some field-dependent parameters, similar to b (in BM25),  X  ul and nl are the length of the user X  X  profile field and the length of the  X  avgul and avgnl are the average length of the user X  X  profile field over the
Then, following Zaragoza X  X  BM25F [21], we compute the term weight ws xij for t j within the document d i for the user u x using the weighting function in formula 11: where:  X  ctf xij is the combined term frequency of the three fields:  X  w d , w ux and w nx are three field-dependent parameters used to tune the
Finally, the personalized relevance score of a document d i for the query q l and the user u x is given by equation 13:
Table 3 shows the field term frequencies for the example given in Table 1 and the relevance scores obtained using BM 25 and BM 25 F S . These scores have been computed using the formula 11, with usual BM25 parameters values: b d = b ux = b nx =0 . 75 and k =1 . 2.

The document relevance score increas es when the frequencies of the user X  X  profile terms are combined to those of the document terms. Furthermore, for two different user X  X  ISCs with the same query terms, the ranking of the documents could vary according to the ISC of each u ser. For instance, when the user X  X  ISC is considered, the document d 1 is more relevant than d 2 for u 1 (1.983 vs 1.898), whereas d 2 is more relevant than d 1 for u 2 . Experiments have been carried out to eva luate the SIR model that considers the user X  X  ISC compared to the classical IR m odel. Using the social test collection ( Del SIR ) described bellow, and the evaluation measures MAP (Mean Average Precision) and P[0.1] (the precision at 10% of recall) [10], we evaluated the rankings produced:  X  by a classical IR model with two kinds of data: the first one is composed of 79  X  by our SIR model ( BM 25 F S ) with only user-centered data ( Q UC and 5.1 Social Test Collection To the best of our knowledge, no SIR test co llection exists providing a list of rele-vant documents for each user. S o, we built a test collection Del SIR based on Web documents and user annotations extracted from the social collaborative book-marking network Delicious . We collected 30,224 documents annotated by 370 users with 21,284 terms. To complete the social dataset with the user-centered data composed of pairs ( query, user ) and user-centered relevance judgments, we created automatically 79 queries. Ea ch query is composed by 2 terms occuring frequently together 4 in the annotations collected from Delicious. Then we gen-erated 4,685 global relevance judgments and user-centered relevance judgments. A document is globally relevant if it has been annotated by any user with the 2 query terms in the same annotation. A do cument is user-relevant if it has been annotated by the user with the 2 query terms in the same annotation.
We kept only the pairs ( query, user ) with at least 10 relevant documents ( | qrels l,x | X  10) so that we obtained 244 pairs ( q l ,u x )intheset Q UC .Thisled to a reduction of the number of users (70 users left). 5.2 Evaluation Results with the Classical IR Model BM 25 For each given query, the classical IR model returns the same relevant documents whoever the user is. The results quality obtained with the BM 25 decreases for both the MAP (0.0308 vs 0.1012) and the P [0 . 1] (0.0521 vs 0.1775) when the user-centered relevance judgments Qrels UC are considered. This confirms our expectations that the classical IR system has to adapt its models in order to deal with the user-centered data ( Q UC and Qrels UC ). 5.3 Evaluation Results with the SIR Model BM 25 F S In our experiments we have tuned in the same way as in [21], using the grid-based 2D optimization, the b and k parameters for BM25 and for each field of BM 25 F S . Table 4 shows results obtained with two fields-weight settings:  X  BM 25 F S , settings 1 : w d =1, w ux  X  ]0 .. 1] and w nx =0  X  BM 25 F S , settings 2 : w d =1, w ux  X  ]0 .. 1] and w nx  X  ]0 .. 1]
We selected the users having at least 5 queries and obtaining with classical IR a MAP result between 0.5% and 50%. We obtain a set of 10 users, corresponding to a set of 60 pairs (query, user) The results of our SIR model BM 25 F S compared to the baseline BM 25 are shown in Table 4.

Considering the precision at 10% of recall (P[0.1]), the SIR model provides less good results than the baseline. While, using the Mean Average Precision measures (MAP), the SIR model BM 25 F S results (MAP = 0.0297 and MAP = 0.0293) are statistically better than the baseline (MAP = 0.0257). The signifi-cance has been checked by using statis tical tests based on Wilcoxon matched-pairs signed-rank test at the 0.05 level, i.e. the improvement is significant when for the 10 users in Table 4, confirm that a SIR model which takes into account the user X  X  ISC, with or without neighborhood, enhance the relevance score results using the MAP measure which is considered as a global evaluation metric. We presented an approach that integrates the user X  X  ISC into the documents. The user X  X  ISC has been built using the user X  X  annotations and those of his relationships. The aim is to personalize the user X  X  search by considering his preferences and interests . Our approach allows to highlight and reweight the important terms of the user X  X  ISC when they are found in the document content. As we consider textual documents containing thousands of terms, we proposed to combine the user X  X  ISC with textual content, in the weighting function. The SIR model, that considers the user X  X  ISC, allows to better find the relevant documents for the user query than the IR model which does not consider the user X  X  ISC. As future works, we plan to extend the user X  X  ISC with further social data including the neighborhood of neighborhood X  X  (friends of friends) annotations and build a bigger social test collection from Delicious  X  bookmarks. We would also like to study different parameters with further experiments to evaluate our SIR model.
