 A Wireless Sensor Network(WSN) consi sts of considerable amount of sensor nodes with sensing, computing and communication abilities. The nodes cooper-ate to acquire environmental information in a multi-hop, self-organized way [1], and then send it to the terminal users. WSN has a wide application future, such as wearable sensors [2]. Some WSNs are deployed in unattended and of-ten adversarial environments such as a b attlefield. Some strategies have been proposed to solve the inherent insecurity of mobile wireless communication [3]. However, providing routing security to WSN is particularly challenging, due to its restricted energy amount, computing ability and storage capacity.
Security mechanisms in WSN are required to provide confidentiality, authen-tication, integrity, freshness and authentication for broadcast. Cryptography has already been intensively studied [4], in which the key distribution is a critical point. Though many key distribution schemes have been proposed, one solution that fits in with a particular WSN architecture may not be suitable for another due to the different communication patterns. In general, two types of WSN archi-tectures are widely accepted: flat and hierar chical (cluster-based). The latter one usually aggregates the local messages before sending them to the upper nodes, which is quite suitable for applications such as data query process [5] [6].
In cluster-based WSN, nodes are typically organized into clusters. With clus-ter heads(CHs) playing the role of aggregating messages and relaying messages from non-CHs to a Base Station(BS). With rotating CHs (like LEACH [7]), cluster-based WSNs have both advantages and disadvantages in security. The CHs, which have more priorities in the network communications than ordinary nodes, are more prominent to become targets for adversaries; while rotating from one node to another periodically makes it harder for an adversary to identify the routing elements and corrupt them. Therefore, it is challenging to provide such protocols with secure strategies when dynamic and periodic rearranging of the network X  X  clustering is considered.

In this paper, we focus on presenting a secure routing protocol to provide intrusion detection for cluster-based WSNs without any participation of the BS. Our protocol is based on pre-distribut ed random keys, and with limited message exchanges it is able to recognize the Malicious Cluster Heads(MCH). We give a detailed description of our protocol first, followed by the security analysis, and we finally evaluate the protocol implementation. Our main idea is that nodes in WSN detect MCHs in a distributed way, which is totally independent on BS. Through setting various parameter va lues, we trade off between connectivity, energy consumption and security levels.

The rest of this paper is organized as follows. In section 2, we analyze clustered routing protocols and their vulnerabilities. Several security clustered routing protocols are also discussed here.In sect ion 3, we present the detailed description and security analysis of our protocol. In section 4 we evaluate the performance of our protocol. We give our concluding remarks in section 5. Hierarchical routing protocols have advantages over flat routing protocols in security as mentioned above, for instan ce, the attacks often cause cluster inval-idation. However, they are vulnerable to a number of attacks as well, including Sink-hole attack, Selective forwarding, Sy bil attack [8], etc. Due to its clustered feature, the communications in the network fundamentally rely on the CHs. As a result, it will cause damaging in the worst case if the target of intruders is CHs. For example, the intruding node pretends to be a CH and sends advertisement message ( adv ) in a tremendous sending power. Then all nodes may join this cluster, which will lead to a global invalidation. Once the intruders manage to become CHs, Sink-hole and Selective for warding at-tack can be carried out. Of course, the intruders or corrupted nodes can broadcast bogus data throughout the whole network. They can also perform eavesdropping.

LEACH (Low Energy Adaptive Clustering Hierarchy) [7], a classical clustered routing protocol, was first proposed to leverage the energy consumption among nodes in WSN. In this section, we introduce LEACH and analyze its vulnerabil-ities. Afterwards, two existent secure clustered routing protocols F-LEACH and SecLEACH are discussed. 2.1 LEACH and Its Security Vulnerabilities LEACH works in rounds(a predetermined duration lasting from the cluster for-mation to the end of cluster communication). Each round is divided into two phases: a setup phase and a steady-state phase. The setup phase consists of three steps, namely CHs selection, cluster formation and scheduling. The details of each step are described below. 1) CHs selection: nodes probabilistically decide whether to become the CHs in current round or not. There X  X e two ways for the nodes to make the decision: one depends on whether a node has already become a CH recently, with the energy even assumption; the other lies on nodes  X  rest energy level, without the above assumption. Those self-elected CHs then broadcast their advertisements( adv )to all nodes in the network, while non-CHs merely wait. 2) Cluster formation: each non-CH chooses a cluster to join in based on the received signal strength by se nding a join require message ( join req ). When the CH receives all its join requirements, it comes to the next step. 3) Scheduling: each CH broadcasts the TDMS schedule including a slot time for each cluster member. Once the clusters are set up, the steady-state phase starts. Cluster members send their sens ing reports to CH strictly according to its slot time. The CHs receive all the da ta from their members, perform data aggregation and send the results back to the BS. The steady-state operation is often broken into frames.

Essentially, LEACH doesn X  X  include any security mechanism. The communi-cations between BS and CHs in LEACH a re in single hop way, which prevent intruders from performing some kinds of relay attacks. However, a MCH may broadcast its adv message with a large power, which leads to non-CHs X  confu-sion. Non-CHs will select the MCH as the only CH in this WSN. Under this condition, the whole network is seized. 2.2 F-LEACH and SecLEACH Because of the hierarchical routing protocols X  extraordinary performance on energy-saving and applications, people start to pay more attention to providing them with security mechanisms. Cryptogra phic protection for clustered networks has been studied intensively by researche rs. A.C. Ferreira et al. [9] proposed F-LEACH. Using two keys for each node,a unique key shared with BS and the last key of the one-way key chain gener ated by BS. The secure mechanism pro-vided by F-LEACH is that each self-elected CH broadcasts its adv message as well as a Message Authentication Code (MAC) which is calculated using the unique key shared with BS. BS collects all the adv messages, validates the MAC field, and then broadcasts the list of legitimate CHs using  X  TESLA [10]. Ordi-nary nodes then choose their CHs according to the list.

Leonardo B. Oliveira et al. proposed SecLEACH [11], which uses pre-distributed random key. In SecLEACH, each node have two kinds of keys: one is unique shared with the BS, the other is a ring of pre-distributed keys with ids drawn randomly from the key pool. Each ordinary node only chooses CH which shares at least one common key with it to join in. The algorithm is almost the same as LEACH, ex-cept that the messages sent from ordinar y nodes are protected by MAC which is produced by the common key they share. The communications between BS and CHs are also protected by MAC calculated by the unique shared key.
F-LEACH achieves secure communication in clustered routing protocol based on BS X  X  participation.It is tolerant to the most typical attack staged to hier-archical routing protocols in which the intruders pretend to be CHs. However, F-LEACH doesn X  X  provide a complete and efficient solution for node-to-CH au-thentication. Furthermore, F-LEACH over relys on the BS, and makes the ex-pansibility of WSN impossible.

SecLEACH implemented the secure node-to-node communications in clus-tered routing(LEACH-based) networks; however the challenging problem in se-cure hierarchical routing protocols remains unsolved. SecLEACH doesn X  X  manage to authenticate the CHs; thus attacks on CHs cannot be defended at all. 3.1 Random Key Pre-distribution in Nodes In our solution, we propose to generate a pool of random keys with their indexes. We calculate a key index ring for each node using the node X  X  id as seed, and then the key index ring as well as the real keys are assigned to each node prior to the network deployment. Thus several components need to be added to each node: a PseudoRandom Sequence number Generator(PRSG), which is used to calculate the key index ring; a PseudoRandom number Generator(PRG), which is for generating a nonce for validating CHs; a Neighbor Table (NT) to register the neighbors X  information, and a Malicious cluster Head Table(MHT) to record the suspicious intruding CHs. Assume a N-node WSN. The pre-distributed random key strategy [12]used in our protocol is composed of the following steps: 1. Generate a pool of P random keys V = { v 1 p , ...v p p } and its corresponding 2. Generate k indexes using PRSG with a node X  X  id as the seed, draw the Every node can calculate any other X  X  key ring using the node X  X  id, and thus it can get the shared keys. This key discovery p rocedure requires no message exchange; therefore it will not cause extra traffic an d downgrade the security level. A unique key shared between the BS and the node also needs to be pre-deployed used for the direct communication between BS and CHs. 3.2 Cluster Head Selection Cluster head selection is the core of clustered routing protocol. There are three methods that have been widely applied to select CHs: a node itself decides whether to become a CH or not(such a s LEACH); nodes cooperate to elect CHs(such as TEEN [13]); the BS decides the CHs(such as LEACH-C [7]). Sev-eral elements should be taken into consi deration here, such as the remaining energy level, the location, the distance between nodes and the BS, etc. In order to determine how to select CHs, we need to consider these elements and do tradeoff analysis among all t hese elements [14]. For example, if only taking energy into account, we should choose the node with highest rest energy level as the CH. Despite all the tradeoffs, it is impor tant for a secure cluster head selection algorithm to choose CH randomly, so that even when a malicious node manages to become a CH, it can X  X  be a CH forever.

Based on the above discussion, our cluste r head selection algorithm is proposed as follow. The basic idea of this algorithm is that each node generates a random number between 1 and 0. If this number is less than C(n), the node elects itself to be the CH. C(n) is defined as follow: where p is the percentage of CHs; r represents the current round number;  X  is the percentage of remaining energy and initial energy; i is the sum of rounds that a node is idle, and it is reset to 0 when the node becomes CH. G is the collection of nodes that haven X  X  been CHs in the lately 1 /p round.
This algorithm takes both randomicity and energy into consideration, and fundamentally guarantees that nodes that haven X  X  been CHs recently are able to become CHs randomly. 3.3 Cluster Formation Once a node elects itself as a CH, it will start to build their clusters. Steps are given in detail below. In step 1, a self-elected CH H broadcasts its id id H to inform the whole network. When the non-CH nodes A i receive the message (step 2.1), they compute the set of H  X  X  key index ring (using PRSG with H  X  X  id as the seed) and choose one or more(  X  ) CHs with which they share at least a key to validate, based on the concrete demands (which will be discussed later in section 3.3). If there X  X e mo re than one shared keys between H and A i ,the key for current communication key ( r ) will be calculated by the operation XOR of all the shared keys. A i also generate a nonce and send it to the CH along with the MAC produced using key ( r ) ( val message). Note that A i can eavesdrop neighbors X  ids in this step as well, and record them as their neighbors. In step 2.2, CH H receives nodes A i  X  X  val messages. If the CH is a legitimate one, it can calculate the key index it shares with A i ,thusget key ( r ) (thesamewayas A i do). Then the CH can decrypt the messages using key ( r ) ,get nonce , and send it back to A i . Otherwise, the malicious CH has no way to calculate key ( r ) , unless it has all the pre-distributed keys shared with nodes A i .Node A i wait for H  X  X  to replyinstep2.3.Ifthe nonce in the reply is wrong or no reply is sent back, A i take H as a malicious CH and send this message ( mch message) to the neighbors (recorded in step 2.1) encrypted using th e key shared with neighbors, and then wait. If the reply is correct, A i just wait to get messages from others and transmit it to their neighbors. When A i receive more than mmch messages from different nodes suspecting the same CH, this CH will be recorded as an unauthentic CH, and it will not be chosen as the CH in the following rounds. Now, nodes A i choose an authentic CH and join in by sending a join  X  req message. CHs wait till the ordinary nodes validate MCHs i n a distributed way. After a CH receives all requirements(step 3), it sets up a TDMA(Time Division Multiple Ac-cess) schedule and transmits this schedule to the nodes in the cluster. Thus authentic clusters are formed without any participation of the BS.
 3.4 In-Cluster Communication After the cluster formation, members of clusters start to communicate according to their TDMA slot time. The messages sent from ordinary nodes to the CH are protected by same key calculated in step 2.1 ( key ( r ) ), while those between CHs and the BS are encrypted using the unique key key unq . 3.5 Security Analysis of WSN DID In this section, we analyze the security of WSN DID, and discuss how to obtain different security levels when given differ ent restriction of the networks. We bring forward the attacks considered in this paper: 1) exterior nodes intruding: when the exterior nodes launch attacks to the WSN, they X  X l pretend to be legitimate notes, especially CHs, and also eavesdr op them; 2) interior nodes corrupting: when the inner nodes are captured, they X  X l surrender all the information and keys, including PRSG, PRG and pre-distributed key ring, as well as the index ring. When more than one node are corrupted, they will collude. In this paper, we emphasize on when both of the two attacks mentioned above happen at the same time, for this is the worst attack of all. That is, corrupted nods collude with each other, giving the intruders all their keys and corresponding indexes, and the intruders pretend to be CHs. As for the corrupted nodes themselves work together to malign legitimate CHs, that X  X  equal to the above situation. The messages sent to or from the corrupt ed nodes also can be tampered. Since several strategies have been proposed to solve this problem [15], we won X  X  discuss it in our paper. Furthermore, because of the rotation of the CHs, even when the corrupted nodes manage to become CHs, they can X  X  be the CHs forever. Notations employed throughout this paper are given below.
 P : Size of the key pool; k : Size of the key pool for each node;
N : Network size, in nodes; c : Number of Cluster Head(CH); s : Number of nodes in each Cluster(N/c); m : Number of nodes cooperated to detect MCH; w : Number of intruding nodes; l : Number of rounds a MCH won X  X  be used; m : Number of corrupted nodes;  X  : Number of rounds a MCH won X  X  be used; In the rest of this section, we focus on how the different parameters X  values affect the security level when the attacks mentioned above are launched. In the setup phase, ordinary nodes receive all self-el ected CHs X  advertisement. When come to validation, nodes have several options. For the sake of energy saving, the non-CH nodes should choose the closest CH; while for the sake of security, the CH with whom they share the most keys should be chosen. When nodes are set to choose more than one CH in this step, such as  X  (  X   X  c ), the two options above can be combined. The value of parameter  X  affects node orphan rate (nodes not belong to any cluster are called orphans). The larger  X  is, the less possible that an ordinary node becomes an orphan. Because even when part of the CHs are proved to be malicious, there X  X e still legitimate ones left to join in. However, the traffic (energy consumpt ion) increases with  X  at the same time.

As for the messages exchanging among ordinary nodes, we show how the values of parameters m and l should be set to trade off the accuracy of intrusion detec-tion and the energy consumption. m ( m  X  k 2 N/P ) is called tolerance of intrusion, that is the amount of intruders the WSN can tolerate. Generally, the amount of corrupted nodes the WSN can bear is less than m ,thatis m  X  m  X  1. The rea-son is that if m is larger than m ,evenwhenthe m nodes collude to send bogus mch messages, other nodes will not be cheated. m essentially represents the times at most one node has to transmit about the same MCH with different finders. Besides, taking m and  X  into consideration together , we conclude that corrupted nodes are unable to incriminate more than  X  legitimate nodes in one round. Be-cause if a node receives more than  X  different mch messages from the same node, they record the node, and stop transmitti ng its messages. Apparently, the incre-ment of m also leads to more energy consumption. l determines the number of following rounds,in which a MCH will not be considered as a CH. The transmis-sion is also well suited for setting a TTL a ccording to clustered networks X  feature. In the worst situation where the CHs validated by A i are all proved to be MCHs, A i turn to sleep in this round.

Using node id as the seed to generate the key index ring for every node provides the same extra security benefits as stated in [12]. The data freshness can be guaranteed by adding a clock field to each message. The clock value is generated randomly at the begging of each round, and increased by 1 in the current round [11].
 Analysis of Immunity. Table 1 compares the perfo rmances of F-LEACH, Se-cLEACH and WSN DID in immunity. Since all of these protocols adapt single-hop communication between BS and CHs which is protected by the unique key shared only between them, none of the fo llowing attacks would cause serious damages to them. The following figure shows that although WSN DID is un-able to resist the selective forwarding attack while spreading mch messages, the damage caused by this vulnerability can be limited by setting a proper value of m .WSN DID, with respect to useful sensor data, is insusceptible to Selective Forwarding attack.
 Connectivity. Note that with pre-distributed random key as our basis, the communication between two arbitrary nodes is only possible if at least one com-mon key is shared between them. Obviously, for a given P, a larger k will lead to higher connectivity in Equation(2). While k=P, the connectivity equals 1. With the increment of k, the security decreases. That is because once few nodes are captured, the adversary almost obtains all the pre-distributed keys. The probability that two arbitrary nodes share at least one common key is: We can conclude from the above analysis that, the connectivity between two arbitrary nodes has no relationship with the size of the network ( n ). It depends on the size of the key pool ( P ) and the key ring ( k ) for each node. We assume  X  = k/P (0 &lt; X   X  1), Fig 1(a) shows the value of p con while 0 . 01  X   X   X  0 . 1, p =100, 1000, 10000 respectively. Each non-CH sends the mch message to  X  CHs. With different values of  X  , the orphan rate for each non-CH is as follow. Fig 1(b) shows the probability of becoming an orphan for each non-CH while P =1000,  X  =1, 2, 3 respectively. When  X   X  0 . 05, the orphan rate is negligible. The security of our network is approximately regarded as P sec =1  X  kP .That means while k/P is small, the network is in a high security level. Thus, when only take connectivity into account, we ca n get a well performed secure network through our pre-distributed random key strategy.
 Energy Consumption. For the sake of simplicity, we assume the size of our network is N, which is randomly deployed at M  X  M range. A BS locates outside the square. The node transmitting energy consumption model is as [7]. The energy consumption for sending a data packet with the length l is: The energy consumption for receivi ng a data packet with the length l is: The energy consumption for transmitting a data packet with the length l is : The energy consumption of a CH for one setup phase in WSN DID is: The energy consumption of a non-CH is: The average energy consum ption for each cluster is: The total energy consumption of the whole network in one setup phase is: We assume  X  =2  X  + wm ,where m  X  1 is the number of corrupted nodes that WSN DID can tolerate; w is the number of intruding nodes, meanwhile the number of legitimate CHs that m  X  1 corrupted nodes collude to frame, w  X   X  in this situation (each non-CH node is only allowed to verify  X  CHs). d 2 toN ode is the distance from a node to BS or to neighbor.
 We get the value of E total from (10) and (11). l here represents the length of all the command packets. In order to study the energy consumption increment, we compare our protocol with LEACH. In LEACH, the total energy consumption in once cluster setup phase is: Combining (10) and (12), we find that LEACH is a special case of WSN DID with  X  =0: The total energy consumption of LEACH in one frame is: Where l is the data packet length. We set different values of  X  to study the tradeoff between energy consumption and intrusion tolerant of WSN DID. Here we make the same assumption for our experiment as the original LEACH paper. We set BS at locations (50,175), N =100, M =100m, E elec =50nj/bit,  X  fs =10pj/bit/ m 2 ,  X  mp =0.0013pj/bit/ m 4 , E DA =5nj/bit/signal, d t oAll =141m, 75m &lt;d toBS &lt; 185m, l =36byte, l =500byte.
Figures show the energy consumption in once cluster setup with different number of CH ( c ), intruding nodes ( w ), CHs that each node verifies (  X  ), and corrupted nodes ( m ( m  X  1)) , respectively.

Fig. 2.(a) above shows that when  X  is fixed, the energy consumptions go up according to the number of intruding node s. However, they are lower than energy dissipation in LEACH communication step. we experiment the energy consump-tion based on w  X  X  variety when m is evaluated in Fig. 2.(b). Here we choose m and w some rather small values. For a WSN containing 100 nodes, four MCHs and 9 corrupted nodes(tolerated by the WSN) are serious intrusion for it. In WSN DID, nodes can detect and tolerate more. However, the energy dissipation is unacceptable.

Fig. 3.(a) shows the relationship between  X  and energy consumption. Com-pared with Fig. 2.(b), the slope is smaller. It indicates that when m is fixed, w has a greater effect than  X  on energy consumption. Fig. 3.(b) shows the impact on energy consumption caused by the number of corrupted nodes( m ). The re-sults shows either w or m infects the energy consumpt ion linearly. The increment of m , w or  X  in WSNs leads to more energy consumption in linear rule. They are significant factors in energy consumption formulas. In this paper, we present WSN DID, a secure clustered routing protocol with intrusion detection initiated by genera l nodes in WSN. These nodes bootstrap the immunity to intruding CHs with the pre-distributed random keys. WSN DID has different security levels depending on its emphasized parameters (such as  X  , w and m ) .Our experiments show the trade-o ff between network connectivity, energy consumption and security level under the different parameters. Though WSN DID provides more security mechanism, its energy consumption is linear with the security level in a small slope and does not exceed the classic clustered routing protocols.
 Acknowledgement. This work is partially supported by the National Natural Science Foundation of China unde r Grant Nos. 60503036 and 60473073, and Fok Ying Tong Education Fo undation under Grant No. 104027.

