 Many social networks are characterized by actors (nodes) holding quantitati ve opinions about movies, songs, sports, people, colleges, politicians, and so on. These opinions are influenced by network neighbors. Many models have been proposed for such opinion dy-namics, but the y have some limitations. Most consider the strength of edge influence as fixed. Some model a discrete decision or action on part of each actor, and an edge as causing an  X  X nfection X  (that is often permanent or self-resolving). Others model edge influence as a stochastic matrix to reuse the mathematics of eigensystems. Actors X  opinions are usually observ ed globally and synchronously . Analysis usually skirts transi ent effects and focuses on steady-state behavior. There is very little direct experimental validation of esti-mated influence models. Here we initiate an investigation into new models that seek to remo ve these limitations. Our main goal is to estimate, not assume, edge influence strengths from an observ ed se-ries of opinion values at nodes. We adopt a linear (but not stochas-tic) influence model. We make no assumptions about system sta-bility or convergence. Further , actors X  opinions may be observ ed in an asynchronous and incomplete fashion, after missing several time steps when an actor changed its opinion based on neighbors X  influence. We present no vel algorithms to estimate edge influence strengths while tackling these aggressi vely realistic assumptions. Experiments with Reddit, Twitter , and three social games we con-ducted on v olunteers establish the promise of our algorithms. Our opinion estimation errors are dramatically smaller than strong base-lines like the DeGroot, flocking, voter, and biased voter models. Our experiments also lend qualitati ve insights into asynchronous opinion updates and aggre gation.
Opinion formation and its propag ation is a crucial phenomenon in any social network and has been studied widely both from a com-putational perspecti ve as well by sociologists and psychologists. One of the ways opinion is thought to be formed (and hence propa-gated) is through a process called informational influence , where a user forms her opinion about a topic by learning information about that topic from her neighbors. Research on opinion propa-gation predominantly follows two kinds of models: discrete [5, 1, 16], where opinions are quantized/ordinal, and continuous [7, 10, 11]. A recent paper [6] seeks hybrid models.
Despite these advances, current understanding of opini on and in-fluence is limited in several ways. Many models assume that the weights of influence of the neighbors are identical, or set them arbi-trarily[5, 10, 16], without re gard to observ ed beha vior. Another im-plicit assumption made by many models [7, 10, 11] is that opinions converge and/or consensus or polarization is reached as a steady state. However, if one carefully looks into the recent scenario, in-formation is continuously fed into the system and opinion of people continuously unfurl. So unlik e the previous setting where most of the analysis is based on the steady state behavior of the system, the apparently long transient behavior of realistic systems need to be studied.

The feasibility and need for studying the transient behavior has arisen from the large amount of user generated content, e.g. tweets, which are now available for analysis. Subse quently , mark et survey has become a c ontinuous feature, for example, people X  s rating of leaders are collected almost every month rather than just before election, sentiment of people can be continuously asses sed from the comments/tweets they post. In such a setting it is now necessary to learn the underlying opinion dynamics. We initiate investigation into the following type of influence model. Agents have a quantitati ve opinion. They influence each other through edges of the social network. Influence is linear in nature, but not necessarily stochastic. In direct contrast to the majority of prior work, influence strengths along edges are not known a priori. In-stead, the state of opinion of different actors are observ ed at var-ious sampled instants of time. Our goal is to learn the parameters of the underlying linear opinion propag ation model. Note that our focus is on estimation errors of individual influence edges, rather than aggre gate behavior like bifurcation.

In another departure from prior work, we do not assume that these observ ations are collected at regular interv als, or at the same instants across all actors. Collecting the opinion of an individual as soon as it is updated (push mode) would capture the most informa-tion for influence estimation. However, in a practical setting, it may be only possible to collect it periodically (pull mode). E.g., opinion about political leaders may be collected in monthly surveys. But the number of updates in between may vary widely across actors and time. E.g., people may update their opinions much more fre-quently before and during an election. W e also do not make any assumptions about convergence to consensus, polarization, or frag-mentation. The observ ations may well include ones made during transient stages.

To the best of our knowledge, this is the first attempt at learning linear opinion propag ation dynamics from observed opinion values of the indi vidual agents without appealing to steady state behavior.
In addition to our theoretical investigation, we report on a series of experiments with five data sets to validate our influence model and estimation algorithms. Three of these were collected by run-ning controlled, in-house, social opinion exchange processes. Here we attempted to capture every opinion change of all participants, who were told to form opinions base solely on discussions with designated social network neighbors. This data will be made a vail-able. Two further data sets were collected from Reddit and Twitter . Here we encountered the more general and realistic setting where opinion values are collected periodically , but opinion propag ation may take place aperiodically .

Compared to several well-kno wn baselines such as the voter model, the biased voter model, the flocking model, and DeGroot X  s linear model, the models we propose here yield significantly smaller pre-diction error, smaller by factor of 2 X 15. T uning certain regulariza-tion parameters in our model shows clear signs of meaningful edge influence learning. We also present analysis of influence propag a-tion time horizons based on our models.
While they are often used interchangeably , Merriam-W ebster de-fines an opinion as  X  X  conclusion thought out yet open to dispute X  and a sentiment as  X  X  settled opinion reflecti ve of one X  s feelings X  [19]. In this work, we use the term opinion, in vie w of their dy-namic nature.

Not all influence is propag ated along social network edges; e x-ternal events also impact agents. However, Myers et al. [18] devel-oped a detailed model for blending external and social influence, and found that 71% of the information transfer volume (suitably characterized) in Twitter can be attrib uted to information dif fusion across social links. Here we will focus exclusi vely on influence conveyed by social links.
Discrete models assume that the opinions are discrete (binary or ordinal/quantized). The voter model [5] belongs to this category. At each step, a node is selected at random; this node chooses one of its neighbors uniformly at random (including itself) and adopts that opinion as its own. This model always lead to consensus which is rare in man y social scenarios. A modified version of the voter model is called label propag ation [25] where the node adopts the majority opinion from among its neighbors. These models are lim-ited to achie ve consensus.

One way to ov ercome such limitations is to incorporate stubborn agents [24]. Another way [1] is to have eac h agent adopt its neigh-bors X  opinion depending on the similarity with her own. This model leads to polarization instead of consensus. This was entirely a data-driven study with no rigorous analysis. A further unifying variation was analyzed by Lanchier [16]. In that model, an agent adopts an-other agent X  s opinion if those opinions are within a certain distance or difference called the confidence threshold. Lanchier showed that small (large) threshold values lead to polarization (consensus) with high probability . Kempe et al. [13] brought forward the concept of influence-selection whereby an agent is not only influenced by other agents which has similar opinion but also selects for interac-tion agents who are similar to itself. They proved that such behavior can stabilize ov er arbitrary graphs and precisely characteri ze the set of all stable equilibria.

Discrete opinions are a natural model for some applications, but not others. E.g., opinion about world population at a future date, or the concentration of atmospheric CO 2 , or the number/fraction of votes a politician might get, are all effectively continuous. Our present work is in the other category of continuous opinions. Many models for continuous opinion assume, like us, that neigh-bors influence linearly the opinion of an agent [7], reaching lim-ited consensus. Analysis is frequentl y grounded in the mathemat-ics of matrix eigensystems, physics and theoretical biology . They are based, for example, on bird flocking models [10] and Cellular Automata [11]. In the flocking model, a node i (agent) with opin-ion x i first selects the set of neighbors j having opinions x | x  X  x j | X   X  , and then updates its own opinion by averaging them.
There is also a large body of work (see [17, 3] and references therein) that has sought to characterize the convergence of bounded confidence dynamics to either absolute consensus or some cluster -ing (polari zation). But not all papers focus on convergence. Bindel et al. [2] state that in man y social settings consensus may never be attained. They characterize the cost of disagreements in a game-theoretic setting.

Of course, there are other occasions where only a discrete opin-ion model will fit, and network averaging in the continuous sense is not meaningful [4]. Agents must choose from a fixed discrete set of options. Various formulations of graphical games showed that characterizing stability even for a two-strate gy g ame is very diffi-cult.

We chose continuous opinions to enable some theoretical han-dle on our newly-introduced complications such as possible tran-sience and asynchronous observ ations. However, there are some important distinctions with earlier work. DeGroot [7] assumed a row-stochastic influence matrix with w ij  X  0 , and opinions in the range [0 , 1] (which stochastic updates preserv ed). In our case, opin-ions can be unbounded, updates are no stochastic (influence can be negative, and an agent X  s combination rule is not convex), and zero is a special opinion value separating two polarities of opinion.
A very recent paper [6] proposes a hybrid model between dis-crete and continuous. It proposes a biased voter model , which is a unification of the voter model with flocking. Each agent is driven by a mix of three forces: stubbornnes s (ignoring others X  opinions), DeGroot X  s permissi ve a veraging with neighbors, and biased con-formance, which chooses influencing agents biased to ward those whose opinions are already some what close to that of the base agent. A preliminary data study is used to justify the tension be-tween these forces, and the resulting model is analyzed to the fol-lowing two ends. First, even if an individual agent changes opinion continually , the relati ve frequencies of different opinions converge. Second, consensus still happens under certain conditions. This pa-per is not concerned with influence estimation on individual edges, which is our main goal.
Yet other works [21, 14] assume fixed topology and edge weights or propag ation rules, and seek to select an initial set of active (or  X  X nfected X ) so as to maximize some kind of cascading ef fect to the rest of the network. We do not seek to maximize influence; we ob-serve a dynamic influence process and estimate influence strength of all edges.
The vast majority of the work discussed above assume some kind of fixed influence strength on each edge. A notable exception [8], which, however, returns to the domain of some discrete action on part of one agent, that precipitates the same action in another agent at some subsequent time. Given the temporal ordering, influence propag ation is acyclic, an assumption at odds with any kind of re-ciprocal, continual influence. But this simpler setup allows them to p v,u from a form of soft-OR influence model at each node: p ( S ) = 1  X  Q v  X  S (1  X  p v,u ) , where S is the set of neighbors of u that have already committed the action, and p u ( S ) is compared to a threshold to decide if u should also commit it. Another notable example of influence estimation is by Shahrampour et al. [22], who provide a purely theoretical analysis of the online continuous case, but do not deal with asynchronous observ ations, or validate on real data.
In this section, we describe a new frame work for modeling opin-ion dynamics on a social network. Our choice of model is driven by study of short-term or transient behaviour of opinions in a so-cial network. In Section 3.1, we propose a general linear model for opinion propag ation, and then, in Section 3.2, we propose metrics for data-dri ven evaluation of opinion models using observ ed data. In the next Section 4 we will get to the parameter -learning algo-rithms, the central contribution of this paper .
DeGroot [7] defines opinion as the  X  X ubjecti ve probability X  a per-son assigns to an event. Thus, opinion of each person on a topic is a real number between 0 to 1 in his frame work. The DeGroot model proposes opinions of a person after one round of  X  X iscus-sion X  with others, to be a convex combination of others X  opinions with weights assigned to ea ch person. DeGroot described condi-tions under which persons discussing and maintaini ng these con-straints will asymptotically reach consensus.

In a departure from DeGroot, we define opinion as an arbitr ary real number describing a person X  s opinion / sentiment on an issue, real world event, product, etc. Our notion of opinion is more akin to opinion mining or sentiment analysis (see e.g. Pang et al. [19]), where the polarity (+ve or  X  v e) and magnitude of the opinion are important. For example, on a recently launc hed product, an opinion value of +1 , 0 and  X  1 could mean that the product is "good", "neu-tral" and "bad" respecti vely. Thus, for our model 0 (zero) becomes a natural threshold between "good" and "bad". Note that we are not imposing any bounds on the opinion values in the model, which allows us to define dynamics using arbitrary linear combination of other opinions, rather than just convex combinations.

We denote the opinion of a person i at time instant k as x Let G = ( V , E ) be a directed graph representing a social net-work where V is the set of vertices or nodes representing people who are forming and propag ating opinions. Opinions are propa-gated only through the set of edges: E  X  V  X  V , which represent connections between people. This is justifiable on many modern social networks as the platform allows posting messages only to the neighbors. Also, let N = | V | be the total number of people in the social network.

In this paper , we propose a linear opinion propagation model : opinion values of people evolve as a linear function of their own and their neighbors X  previous opinions. i.e., Here, k represents a discretized time index. We will elaborate more on the time indices in Section 4, where we describe various mod-eling scenarios. A i,j represents the weight or intensity with which formation of node i  X  s opinion at time ( k +1) , x i k +1 by node j  X  X  opinion x j k . The following constraint is naturally im-posed on weights, since node j cannot influence node i if they are not connected: Also, A i,i 6 = 0 represents the weight with which agent i influences itself. Thus A can be thought as a weighted adjacenc y matrix of the graph G with all the self edges present. Let x k = [ x denote the vector of all opinions at time k . We have the following equation representing the opinion dynamics: Note that for ( i, j )  X  E , A i,j can be either positi ve or negative. A negative A i,j implies that agent/node i does get influenced by j  X  X  opinion, but to the opposite polarity . As a common example from real life, person i may know that her taste in mo vies is the oppo-site of person j . Hence, person j liking a movie may negatively influence person i  X  s opinion about it. This effect is not possible in DeGroot X  s model [7], since A i,j s are restricted to be positi ve and sum to 1. On the other hand, this assumption keeps the opinions predicted by DeGroot X  s model at time k + 1 in the same range as the opinions in time k , thus imposing the bounds. The opinions pre-dicted by the proposed model do not have a fixed bound. Ho wever, it is easy to check that: where,  X  max ( A T A ) is the largest eigen value of A T A . Hence, p  X  max ( A T A ) imposes a dynamic bound on the predicted opin-ions.

Another aspect of our study is that we focus on short-term or bounded-horizon opinion dynamics, as opposed to asymptotic be-haviour of an opinion dynamics model. Therefore, we can allow the use of models for which p  X  max ( A T A ) 6 = 1 . In the familiar asymptotic scenario, p  X  max ( A T A ) &gt; 1 leads to divergence of opinions, while all opini ons shrink to 0 if p  X  max ( A T A ) &lt; 1 . The focus on short term dynamics is fueled by the thought that in-fluence of a person j on a person i , A ij changes with time. In the experiments, we try to predict the opinions of ( k + 1) th using opinions of previous k timepoints. Next we describe metrics for evaluating the quality of predictions using data from social net-works.
In this paper , we adopt a data-dri ven approach to opinion model-ing. To this end, we assume that we have access to actual opinions (ground truth) expressed by people interacting on social network (see Section 5). Given an algorithm that learns edge influence pa-rameters, and a data set with ground truth opinion values at some time steps, we need metrics by which to e valuate the algorithm.
As before, let x i k  X  R , i = 1 , . . . , N be the opinion values expressed by users at timepoints k = 1 , . . . , K . For real opin-ions, a natural measure of error is the squared error of the pre-dicted opinion with respect to the observ ed opinion. Thus error, e for all nodes at time k + 1 is given by: However, this error metric is sensiti ve to the scale of the input data. Hence we use the normalized error metric: where, x max = max( x i k ) ,  X  ( i ) N i =1 &amp;  X  ( k ) observ ed opinions, respecti vely.
Another metric which captures the polarity of the opinions is the quantized error. We define this as the fraction of times, the polar -ity of the predicted opinion matches the observ ed one. Thus the quantized error at time instant k + 1 is given by: where 1 (  X  ) is the indicator function. The product x i k +1 is positi ve only if x i k +1 and P N j =1 A ij x j k have the same sign.
The model proposed above is specified by the set of parame-is difficult to ascertain A i,j s manually . However, as described in Section 5, it is possible to obtain the opinions of various agents x k at different time instants (see Section 5). Thus, the problem of automatically learning A i,j -s given x i k -s is of importance. In this section, we explore various scenarios in which opinion data can be acquired and then describe methods of learning the model pa-rameters under such scenarios. The next section (4.1) describes the scenario where every expressed opinion is captured and processed, while Section 4.2 describes a scenario relevant to large social net-works with a large volume of opinions being exchanged, where it is not possible to record every exchange. The simplest approach to learning a linear model described in Section 3.1 is to use opinion extracted from the individual posts by the users. In this scenario, the opinions are posted asynchronously , i.e., at time k , if an agent ( j ) posts its opinion, another agent i may not post any opinion. Let S be the set of all time instants when an agent has posted its opinion. Moreo ver, let S i = { k | x S,  X  i = 1 , . . . , N , be the set of all time instants when agent i has expressed an opinion. Let x i k  X  , be the last posted opinion by an agent i before time k . where N ( i ) is the set of neighboring vertices of i , A vector i th row of A , and x k  X  is the column vector of all x call this model the asynchronous linear model (AsLM).

We assume that agent i forms its opinion at time k  X  S i based on previously posted opinions of its neighbors. Let D = { x S , i  X  V } be a dataset of all opinions posted by all agents in V . Assuming that x i k are plagued by additi ve zero mean gaussian noise, the loss incurred in predicting all observ ations by agent i is given by P k  X  S  X  || A i || 2 , we can estimate the optimal parameter A  X  following problem: Here,  X  is the user defined regularization param eter and A j th entry of vector A i . By solving | V | such optimization problems (one for each i ), we can obtain A  X  i , i = { 1 , . . . , | V |} , and thus estimate the entire adjacenc y matrix A  X  .

Let  X  x k  X  = I ij x k  X  ,  X  k  X  S i , where I ij is a N  X  N diago-nal matrix such that I ij ( j, j ) = 1 if ( i, j )  X  E . Also, let X [  X  x k  X  | k  X  S i ] T be a | S i |  X  N matrix with rows as  X  x  X  x = [ x i k | k  X  S i ] T is a | S i | X  1 column vector. The above problem is same as solving A  X  i = arg min A i ( k  X  x i  X  X i A is easy to check that this problem is solved when: || A || F = p tr ( A T A ) is the Frobenius norm of A , where tr (  X  ) in the trace operator . It is clear that increasing  X  decreases k A which can be thought of as a measure of complexity of the model (see e.g. [23]).
The previous section described an async hronous opinion propa-gation model. However, modeling every opinion expressed by the agents in a real social network is both computationally e xpensi ve and vulnerable to noise. For example, a 1% sample of tweets re-sults in  X  500 million tweets in a day, each potentially expressing an opinion. Moreo ver, opinion values extracted from each tweet may be noisy due to fluctuations in mood of the agent, reaction to a previous tweet, etc. A time average, say o ver successi ve windo ws of an hour or a day, of the opinions extracted from tweets of an agent is expected to be less severely affected by such problems. In this section, we describe the dynamics of time aggre gated opinion in two possible scenarios: periodic and aperiodic.
Following Section 3, let G = ( V , E ) be a graph representing a social network, where E also includes all self edges. Also, let y , i = 1 , . . . , | V | represent the time aggre gated opinion of i agent in the k th time window . For simplicity , we assume that all the opinions y i k are a vailable. This assumption is acceptable because one can always choose a suitable aggre gation interv al such that all agents have e xpressed at least one opinion in a time window . Un-der this assumption we can use the synchronous propag ation model described in equation 2 to model the dynamics of opinion propag a-tion: where y k is a vector of all time aggre gated opinions, y time window . A is the weighted adjacenc y matrix gov erning the dynamics of time aggre gated opinions. So, A i,j = 0 , if (( i, j ) 6 X  E )&amp;( i 6 = j ) .

A drawback of the above model is that it assumes opinions have been propag ated only once during a time window ( k to k + 1 ). For example, if the distance between i and j is greater than 1 , there is no way for y i k to influence y j k +1 . While this assumption was true for the scenario described in section 5.1, where every opinion prop-agation was considered, it is no longer valid in the time aggre gated opinions. This is because there can be multiple rounds of opinion passing in a single time window . It is common for the user not to post e very opinion she forms, or the analyst not be able to get hold of data at all time stamps or a combination of both.

To address this drawback, we propose the periodic synchr onous opinion propag ation model. In this model we assume that opinions are propag ated periodic ally, with a constant frequenc y, say t per time window . Thus, using simple calculations, we can write the propag ation model as: We refer to this model as the periodic linear model (PLM).
Following the assumptions laid out earlier in this section, we can write the regularized loss function for learning A as L ( A ) = P be obtained by minimizing L ( A ) . Unfortunately , L ( A ) is not con-vex in A . Hence the minimization can get stuck in local minimum. Also, we note that for most prediction tasks, we only need to es-timate M t = A t , since we only observ e opinions y k which are propag ated with the constant frequenc y of t per time window .
Let G t = ( V , E t ) be the graph generated by including all t -hop connections in the set of edges E t . Note that since the original graph has self-loops, E t contains edges which can be traversed in at most t hops in the original graph G = ( V , E ) . It is clear that M t ( i, j ) = 0 if ( i, j ) 6 X  E t . Hence, we can learn the optimal M by solving: One way of obtaining A  X  from M  X  t is to calculate A  X  = ( M using one of the root finding algorit hms [12]. However, the solu-tion in not unique. In general, there can be up to t distinct roots ( M t ) 1 /t , and there is no way of ascertaining which of them is the correct one, unless we have opinions for intermediate steps within a time window . Another problem is that, the roots ( M t ) comple x (i.e., with imaginary parts), thus making interpretation of entries of A difficult. In the next section, we describe the aperiodic synchronous update setting, where some of the above problems are addressed.
As in the previous section, we assume that time aggre gated opin-ions are propag ated synchronously . However, we assume that the number of times opinions are propag ated in each time aggre gated step can vary from one time window to another . The main moti-vation behind this assumption is that human activities happen in bursts. F or example, people post more messages on social network during the day, than at night. Hence, it is expected that opinions will propag ate further during a 6-hour time aggre gate during day than the same period during night.

As before, let y k denote the opinion vector for all agents at time k . Let t k , k = 1 , . . . , K be the number of times opinion propag ates during k th time aggre gate. The opinion dynamics is given by: Note that the model is characterized by parameters t k , k = 1 ,  X  X  X  , K , in addition to the weighted adjacenc y matrix parameters A . The set of parameters T K = { t k | k = 1 ,  X  X  X  , K } is called the skip set , with t denoting the number of iterations which has been  X  X kipped X  at k th time aggre gate. We denote the above model as aperiodic lin-ear model (ALM). Analogous to previous discussion, we can write the following optimization problem for learning the weighted adja-cency matrix parameter using the squared error as: Note that here we assume the skip set T K to be given. In practice, we can restrict each t k to take values from a set { 1 ,  X  X  X  , t search ov er all possible values of skip set will need search ov er O ( t K max ) combinations. In section 6.3, we study some heuristic methods for fixing T K .

The above optimization problem is an instance of non-con vex optimization problem in the matrix variable A . We find a local optimum for the above problem using projected gradient descent method, since the feasible set is convex. Let Y K = { y k 1 ,  X  X  X  , K } be the set of all opinions. Let f ( A ; Y K A k y k || 2 +  X  k A k 2 F . The gradient of f ( A ) w.r.t. A can be written as  X 
A f ( A ; Y K , T K ) = X The projected gradient descent algorithm for finding optimal A is described in Algorithm 1. Here, the gradient matrix  X  A f ( A ; Y is evaluated using expression in equation 12. LineS ear ch is a function which ensures that the function value satisfies sufficient descent condition after moving a step length s in the gradient di-rection. The projection step  X ( A, E ) ensures tha t resulting A is projected back to the feasible set, i.e. A ij = 0 if ( i, j ) 6 X  E . While in general the algorithm is not guaranteed to converge, in practice we see that it converges for all inputs.
 Algorithm 1: Lear ning A using projected gradient descent. Data : G = ( V , E ) .

Input : Opinion-v ectors: Y K , Skip-set T K , Starting point A
Output : Weighted-adjacenc y matrix: A initialize: A  X   X A 0 while ( || X  A f ( A ; Y K , T K ) ||  X   X  ) do
Retur n A
We collected five data sets to e valuate our algorithm, which can be made a vailable for further research. In each case, we needed the network topology , and opinion values of a set of users ov er a period of time. The five data sets, sketched in Table 1, can be placed in two groups. The first three were generated by us, in-house, through carefully controll ed and monitored social influence process. The last two are derived from Reddit and Twitter data, provided as-is. The distinction is that in the first three cases, we could read agent opinion values at the time granularity of our choice, so as not to miss any updates; whereas for the last two, we have no such control. The first three cases provide us with valuable insight, as in these cases we were able to capture all visible opinion values, while also minimizing the influence of external sources.
The set of agents in our controlled experiment was a class of 100 students in Information Retrie val course in Department of Com-puter Science and Engineering, Indian Institute of Technology Kharag-pur. The experiment was performed in a laboratory setting, where each student sat in front of a terminal and interacted with ten other randomly assigned students (designated social neighbors) through a Web interf ace (as shown in Figure 1) for a period of one hour.
The agents refined their opinions continuously by communicat-ing with their neighbors using the text box. To avoid externalities, participants were not allowed to access the Web, or discuss any-thing with each other verbally . All communication through the in-terface was recorded. Social neighbors were kept anonymous, so that the agents did not get biased by the real-life identity of another agent.

To collect one dataset, we started by broadcasting to agents a topic , posed in the form of a comparison between two entities A and B . The three topics given to the students were; compare two places to live ( Continents: Europe vs North America), tw o col-leges to attend ( Colleges: IIT, Delhi vs IIT, Bombay), and choices of occupation forming a startup or working at an established com-pany ( Occupation: Startup vs Job). These topics were chosen as most agents did not have a strong prior opinion, but had some knowledge about the subject. This was done to ensure that at least some of the agents would show changes in their opinion during the experiment. Every time an agent posted a message, the inter-face automatically reported the current opinion value, which was modeled as a real number in the range [  X  1 , 1] . The sign represents polarity of the opinion (e.g. if joining a startup is preferred then the opinion score assigned tends to  X  1 , while reverse is true for the alternate case), and the magnitude represents the degree of con-viction. Only the message from an agent, and not his/her current quantitati ve opinion, is shown to neighboring agents. Agent s were asked to make opinion messages self contained. Every experiment proceeded for one hour, after which the e xperi ment was terminated. At the end of a live experiment, we obtain one dataset, containing every visible timestamped opinion of every agent.
The Delhi Legislati ve Assembly elections of 2013 was a keenly contested e vent with three major parties (two old and one newly formed) winning roughly equal vote share. Hence there was a need for post-poll alliance, this triggered a huge discussion on social me-Figure 1: Web interf ace for opinion posting for the controlled ex-periment dia with people enthusiastically expressing a lot of opinions. This provided us with a very good opportunity to measure the perfor -mance of our system. For testing our system, we used the Twit-ter search API to collect tweets containing the following hashtags: #BJP , #APP , #Congress, and #Polls2013. The first three of these represent the hashtags for the three major parties competing in the elections, while the fourth was the most popular hashtag cor-responding to the e vent. W e gathered tweets during the period of 9th to 15th D ecember 2013. This period corresponds to the week following the declaration of results on 8th December 2013. We filtered down to the candidate set of agents in three steps. We started with about 905,000 tweets, posted by 201,000 users. To remo ve corporate accounts, bot accounts, and spammers, we fil-tered the set of users based on the number of followees, number of followers, and the number of tweets posted by the user . We only preserv ed those users who had between 100 and 10,000 friends, be-tween 50 and 1,000 followers, and between 200 and 10,000 tweets posted during the account X  s lifetime. This resulted in a set of 55,000 users. For these users, we collected the user IDs of all their fol-lowees, followers, and up to 3,200 most recent tweets using the Twitter REST API. We only collected tweets posted during the cho-sen week. With the information about both the followees and fol-lowers of the 55,000 users, we were able to create the complete fol-low network. Finally, from the 55,000 users, we selected the largest SCC such that each selected user has posted o ver 20 tweets. Thus we ended up selecting 548 users.
Since tweets are limited to only 140 characters, we grouped the tweets posted by every user during a single hour into a document. Each document is turned into an opinion score.  X  X pinion X  here con-notes a positi ve or negative attitude to the political developments after election, which was detected by subjecting these hourly doc-uments to a sentiment analysis tool specifically designed for Twit-ter [9]. For every document we finally get a single sentiment score in the range [  X  1 , 1] . The score represents the relati ve proportions of words with positi ve and negative connotations.

Section 6 describes how the hourly sentiment scored documents for the 548 users and their follower network was used to understand the flow of opinion using our algorithm.
Reddit is a social post curation website, where users submit con-tent in form of text posts or links to websites containing the content. More than 6% of online adult users use Reddit 2 . Content in Reddit is categorized by areas of interest called  X  X ubreddits X . Reddit boasts o ver seven thousand active subreddits 3 on topics as varied as music, politics, sports, worldne ws, programming, etc.

We collected data of Reddit users who posted content in the sub-reddit  X  X olitics X  during the period of July 1, 2012 to December 31, 2012. We cra wled all posts made by Reddit users during the above period in the subreddit politics. We obtained 120,141 posts made by 30,812 users.
The social network in Reddit is not explicit. We applied certain heuristics to recover and approximate the user network. We created an undirected network taking these  X  31,000 users as vertices, and assumed the e xistence of an edge between two users if there e xisted two subreddits (other than politics) where both posted during the given time period.

Similar to the case of the Twitter data, we randomly selected approximately 500 users such that the users have made more than 20 submissions during the gi ven period and the network between them forms a single connected component. We ended up selecting a subnet of 556 users for the subsequent experiments. Most of the posts made by users of Reddit are in well formed English. We used the standard linguistic analysis tool LIWC [20] to analyze sentiment scores from them. We computed the sentiment of a post as the difference between the positi ve emotion score and the negative emotion score, as returned by LIWC. The results were normalized by mapping the range of values obtained to the range [  X  1 , 1] using linear scaling.

Section 6 describes in more detail how the sentiment scored posts from the users were used to understand opinion propag ation in Red-dit.
In this section, we study and validate the models and methods proposed in this paper in a data driven manner . We report experi-mental results on the five datasets: for three of the dataset which have been produced at contr ol setting and where each and every opinion of the participants are recorded, we perform experiments assuming asynchronous scenario and for two of the social network based data set, we perform experiment assuming synchronous sce-nario. Three techniques proposed here: one for the asynchronous setting (AsLM) and two for Synchronous setting (ALM and PLM). Four baseline models, voter X  s model [5], biased voter X  s model [6], http: // pewinternet.org / Reports / 2013 / reddit. aspx http: // www.reddit.com / about / , as on June 7, 2014. flocking model [10, 6] and DeGr oot X  X  model [7]. To the best of our knowledge, this is the first work reporting a data-dri ven comparison of existing and new models for opinion dynamics using real-w orld as well as experi mental datasets. Section 6.1 compares the perfor -mance of proposed models and learni ng methods with the baselines using metric s defined in section 3.2. Sections 6.2 and 6.3 describe techniques for choosing best period (periodic case) and skip set (aperiodic case), respecti vely. Section 6.4, validates the learning al-gorithm and observ es its generalization ability .
For each of the models we perform a large number of experi-ments to chose the paramet ers so as to obtain the best result. In case of DeGroot model, we learn the parameters similar to our model. Side by side, we perform experiments on the three variations of the proposed scheme namely (a). AsLM (Asynchronous Linear Model) -here we consider that every opinion of each user is known, and the update of opinion can be different for different users. (b). PLM (Periodic Linear Model) -here we consider that the opinions are always updated synchronously after every (say) t time interv al. (c). ALM (Asynchronous Linear Model) -here we consider that the time interv al between any two opinion update varies. Since with the variation of time interv als, both ALM and PLM produce a lot of results, we report the best result here.
 Table 2 reports a comparati ve analysis of the prediction-error for (AsLM/ALM/PLM) and the four state of the art algorithms -the first six(fi ve) columns report the normalized mean square error (ac-tual opinion prediction error) while the rest report the quantized er-ror (polarity prediction error). We observ e that for these tw o datasets, the o verall performance of our schemes is substantially better than all the baselines. Out of the baseline, we see that ALM is perform-ing better than PLM which confirms our proposition that users sub-mit opinions at arbitrary instances.
 Performance Analysis -Normalized RMSE : The first six (five) columns of Table 2 give a comparati ve vie w of actual opinion-prediction error.
 Voter Model: Performance of Voter model is particularly poor. It relies on random opinion updates, thus e vidently loses information of actual dynamics. Moreo ver such versions of voter model keeps the set of opinions in a graph invariant throughout the process. This intrinsic property of voter model prevents the opinion-v alues from not growing in a larger space which thereby goes against the spirit of continuous opinion-model. Biased Voter Model attempts to ov ercome these by introducing node weights. However the per-formance of Biased Voter model is worse than ALM or PLM. A closer scrutin y reveals that, biased voter model parameterizes the node weights; however due to uniform edge weights, it is unable to capture the actual influence dynamics.
 Flocking Model: Note that the RMSE for flocking is substan-tially lower than other three baselines in most cases. But it per-forms poorly in predicting the polarity which is reflected in rel-atively higher values of quantized error. This is because flocking model assigns more weights to opinions  X  X lose X  to user X  s own opin-ion. In this model the  X  X loseness X  solely depends on the absolute difference in opinion-v alues and hence the polarity difference is ne-glected.
 DeGr oot Model: The performance of DeGroot model is fairly competiti ve for Reddit and Twitter . This is mainly because it in-corporates different edge weights that capture the actual dynam-ics of information-flo w from one node to another , which is heavily neglected in the other three baselines. The relati vely better perfor -mances of flocking and DeGroot model also reflects an inherent linearity in the dynamics that justifies our choice of a more generic linear model.
 ALM and PLM perform significantly better than all the baselines. A possible explanation can be that it captures the effect of intermit-tent observ ations i.e. the phenomenon of periodic/aperiodic obser-vations, which neither of the baseline-algorithms takes care of. Our model is also not limited to positi ve entries and row-stochasticity, which are the major features of DeGroot model. Being the most generic linear model it captures the negative influence, opinion fluc-tuation etc. It also allows formation of any generic linear combina-tions of opinions rather than convex combinations.
 Variation across the Datasets: From table 2 we observ e that the algorithms perform substantially better in Reddit than in Twitter . Note that in case of Reddit we have collected the e volution of general political opinion whereas in Twitter we concentrated on a specific event, corresponding to a legislati ve election. Reddit is a forum, where people actually join to form an opinion/impression. Therefore, it is natural that a user in Reddit view others X  post, form an opinion and write a well-thought post. Also since the users are more in e xploratory mode, a Reddit user can read and scrutinize any other peopl e X  X  comments, which evidently helps her to form an opinion. In our model we have tak en a decent estimate whereby two agents are neighbors if they have subscribed to three common sub-reddits, e ven then we find that the reach of each agent is a mag-nitude higher than that of Twitter .

On the other hand T witter is a popular social-netw ork site and we are looking into the data of a particular popular event. Since the underlying graph structure is sparse, an opinion may take time to propag ate and may get lost in the process [15]. Thus the effect of a distant node becomes almost negligible. Also since the e vent tracked is popular , much of the information may be coming from (outside) Twitter and a user X  s opinion may get influenced due to that [18]. Therefore, PLM/ALM which assume local influence perform worse in capturing the influence dynamics. Performance Analysis -Quantized Error: It is seen that the quantized error for Reddit is even smaller than Twitter , this happens because in Reddit the opinion is in general positi ve so the chance of making sign error diminishes while in Twitter , since we are con-sidering opinion pertaining to a particular event, there is a health y mix of positi ve and negative opinions and the mean of the opinion is around zero, so the vulnerability of the dataset is much higher . Figure 3: Error(%) vs Period( t ) for (a).Twitter and (b).Reddit datasets. Figure 4:  X   X  1 t vs Period( t ) for (a).Twitter and (b).Reddit datasets. From figure 2, we observ e that less than 10% posts in Reddit are negatively polarized. In such cases, analysis of continuous-opinion is important as a huge portion of the users are biased to wards par-ticular side. For the three social games, the performances of all the algorithms are substantially better . Our model gi ves a 100 % accu-racy in these three games. This is because the active and enthusias-tic participation of the users in the e xperiments lead to a uniformly polarized dataset of opinions with a nice dynamical flow. Hence all the algorithms are able capture the dynamics of the process with high prediction accurac y.
Figure 3 describes the variation of normalized error (NE) with respect to a gi ven period t . From the figure it is clear that in both the cases, the minimum error is reached at an interv al value greater than 1 ( 4 for Twitter and 2 for Reddit). The best period t that minimizes error gives a good estimate of the typical number of opinions posted by a user between two successi ve opinion aggre gations as part of our data processing steps. This hypothesis can be corroborated by defining the following two quantities, and visualizi ng their relation with the period t , as compared with error vs. t . This study is shown in Figures 4 and 5.
 Effecti ve Paths (  X  t ) -It measures the number of pairs which has more than t number of (weight ed) t -hop paths. It can be represented as where P t ( i, j ) is the number of t  X  hop paths between a pair ( i, j ) , 1 (  X  ) is an indicator function. A for getting factor ( 2 t ) to effectively model the increase in hop distance is added. t-opinion heter ogeneity E t -Here the idea is that if an agent influ-ences nodes at t hop distance, then its t -hop neighbors would ha ve similar value. The heterogeneity in value can be measured using
Figure 5: E t vs Period( t ) for (a).Twitter and (b).Reddit datasets. Dataset Normalized RMSE Quantized Error Synchronous scenario (P eriodic and Aperiodic) Twitter 7.26 7.16 17.49 22.98 10.20 9.49 7.85 7.84 14.78 15.33 12.96 24.09 Reddit 2.80 2.75 7.51 15.60 6.00 8.24 1.08 1.08 2.16 2.70 1.62 10 Asynchr onous scenario Continents 10.42 31.46 35.51 23.94 32.89 0 1.96 2.94 1.96 5.88 Colle ges 12.80 22.77 28.69 59.28 32.06 0 2.94 3.92 2.94 4.90 Occupation 10.36 23.06 30.32 33.28 31.64 0 2.94 6.86 0.98 7.84 section 6.1) the concept of Shannon entrop y. So to calculate E t we measure the opinion of the set comprising of the node and its t -distant neigh-bors. It can be represented as y (  X  ) is the opinion of j at time  X  , N is the total no. of nodes and K is the maximum time-stamp of opinions in the dataset.

In the following, we investigate the behavior of Twitter and Red-dit individually .
 Reddit: The second part of Figure 4 plots the variations of period t with  X   X  1 t . It is seen here that the number of effective paths reaches an optimal point around t = 2; interestingly the curve is exactly sim-ilar to the second part of Figure 3 which corresponds to the Twitter dataset. Side by side, when we measure the t -opinion diversity , we see that it quickly diverges beyond 3. So 2-3 is the effective hop where we find the influence of an agent is maximum after one post. Twitter: In case of Twitter , the first part of Figure 4 plotting the variations of period t vis-a-vis  X   X  1 t shows that at hop distance 4, the most number of effective paths are found which explains the value of 4. Also check the figure 5a, the 4 -opinion-heterogeneity is significantly low.
In this section, our objecti ve is to heuristically find the best choice of skip-set T K = { t k | k = 1 , . . . , K } . For this experiment, we ran-domly generate 500 skip-sets such that t k  X  { 1 , . . . , 6 } . For each of these, we compute the optimal A using algorithm 1, and calcu-late the resulting errors. The figures in this section explore corre-lation between these errors and some observ ed properties of skip sets.
 Variation of error w .r.t  X  T k : Let  X  T k = q 1 K P K k =1 where  X  = 1 K P K k =1 t k , be the standa rd deviation of skip-set T measuring the homogeneity of T k . Hence  X  T k = 0 corresponds to the periodic case. From figure 6 we see that  X  T k is correlated with error in a continuous manner , wi th the function reaching a minimum at a point different from 0 in both Twitter and Reddit datasets. Hence, the effect of bursty nature of human activity in these datasets is evident. Moreo ver the figure suggests that devia-tion from the optimal periodic skip, t , is an important parameter , leading to the next study .
 Variation of error w .r.t  X  T k : We define  X  T k = 1 K P k per ) 2 as the deviation from best periodic skip obtained in section 6.2. Hence for Twitter k best per = 2 and for Reddit k best 7 shows a similar variation of error w.r.t  X  T k . We observ e that the best accurac y of prediction is obtained at a non zero value of  X  This evidently supports the utility of aperiodic model in opinion propag ation. We observ e that in case of Reddit, the aperiodic skip giving minimum error is much further from periodic compared to Twitter . This might suggest a more burst nature of activity in Reddit than Twitter .
Table 3 shows variation of training set error (  X  TrainSet ror (  X  TestSet ) and the measure of model complexity ( Tr ( A the regularization parameter  X  . We note that at low values of  X  the training error  X  TrainSet is relati vely smaller for all datasets. But in such cases, the test-set error (  X  TestSet ) is high. This shows that at low values of regularizer (  X  ) the learning causes o verfitting the parame-ters. It is also evident from large values of Tr ( A T A ) which in turns means that the complexity of model is too high. However as the  X  value is increasing the linear model attempts to capture the dy-namics more and more efficiently and the  X  TestSet goes down. Large value of  X  penalizes the regularized loss too heavily and the resul-tant learning-performance becomes very poor. So there e xists an optimal regularizer value (  X  opt ) that gives a best-fit for the model. By tuning  X  , one can obtain the optimal value of  X  , that results in the least prediction error  X  TrainSet and corresponding the most effec-tive regularization-parameter (  X  opt ) for the model.
Continents
Occupation Table 3: Efficacy of Learning (Sec. 6.4) -Variation of errors  X  and  X  TestSet and model complexity (Tr ( A T A ) ) w.r.t regularizer (  X  ).  X  opt is indicated in bold font.
We presented a family of algorithms for estimating edge (so-cial link) influence strength in a social network from observing the state of quantitati ve opinions evolving along time at the nodes (rep-resenting actors or agents). Unlik e some earlier work on continu-ous opinion dynamics, we do not seek or depend on asymptotic or steady-state behavior. We also presented variations where opinion data is pre-aggre gated, and/or we cannot observe the global state of opinions at all times. Experiments with five data sets showed that our estimates of edge influence strength let us estimate node opinions much more accurately than several baseline models for influence propag ation. Other contrib utions include proposed met-rics to e valuate such influence estimation algorithms, along with three real-life data sets that we created.
 [1] R. Axelrod. The dissemination of culture: A model with [2] D. Bindel, J. Kleinber g, and S. Oren. How bad is forming [3] B. Chazelle. Natural algorithms and influence systems. [4] F. Chierichetti, J. Kleinber g, and S. Oren. On discrete [5] P. Clifford and A. Sudb ury. A model for spatial conflict. [6] A. Das, S. Gollapudi, and K. Munag ala. Modeling opinion [7] M. H. DeGroot. Reaching a consensus. Journal of the [8] A. Goyal, F. Bonchi, and L. V. Lakshmanan. Learning [9] A. Hannak, E. Anderson, L. F. Barrett, S. Lehmann, [10] R. Hegselmann and U. Krause. Opinion dynamics and [11] P. Holme and M. E. Newman. Nonequilibrium phase [12] B. Iannazzo. On the newton method for the matrix pth root. [13] D. Kempe, J. Kleinber g, S. Oren, and A. Slivkins. Selection [14] D. Kempe, J. Kleinber g, and E. Tardos. Influential nodes in a [15] H. Kwak, C. Lee, H. Park, and S. Moon. What is Twitter , a [16] N. Lanchier . Opinion dynamics with confidence threshold: [17] J. Lorenz. Heterogeneous bounds of confidence: Meet, [18] S. A. Myers, C. Zhu, and J. Leskov ec. Information diffusion [19] B. Pang and L. Lee. Opinion mining and sentiment analysis. [20] J. W. Pennebak er, M. E. Francis, and R. J. Booth. LIWC: [21] M. Richardson and P. Domingos. Mining the network value [22] S. Shahrampour , S. Rakhlin, and A. Jadbabaie. Online [23] J. F. Trevor Hastie, Robert Tibshirani. The Elements of [24] E. Yildiz, A. Ozdaglar , D. Acemoglu, A. Saberi, and [25] M. E. Yildiz, R. Pagliari, A. Ozdaglar , and A. Scaglione.
