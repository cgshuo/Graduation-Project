 With the ever-fast development of the Internet, all kinds of network service are rising today. For example, the Web service becomes more and more popular and general in the Internet. Because of the extensive public available, the Web service also becomes strengthen the security of Web severs and connected database, in addition to security techniques, such as access control policy, authentication and encryption, Intrusion Detection System (IDS) becomes an important and traditional security-barrier against network-based attacks. 
Among the malicious attacks, maybe DDoS/DoS and Probing attacks are the main threat. The DDoS/DoS attacks destroy the service availability directly, whenas Prob-using some given scanning policy. Both of two attacks are the TCP attacks mainly. According to the statistical data from Moore [1], the majority of DoS/DDoS attack this paper, we concentrate on the TCP attacks via extracting the TCP header informa-tion. 
There are two general approaches in Intrusion Detection: Misuse Intrusion Detec-tion (MID) and Anomaly Intrusion Detection (AID). Similar to virus detection, mis-from the known attacks. However, AID constructing the normal usage behavior pro-file, named historical or long-term behavior profile. And the analysis model looks for deviations of the short-term behavior profile from the normal. The deviations can be treated as the baselines of estimating the attack activities from normal behaviors. The Fig.1 describes the relation and contrast of main logical procedures in MID and AID. The two approaches are contrary as well as unitive some time. 
In this paper, we propose a new AID mechanism using the Vector Quantization (VQ) [2]. The normal network traffic usage profile can be modeled in the codebook of VQ from which the abnormal behavior deviation can be measured quantitatively well. Furthermore, in data processing, accordin g to the characters of DoS/DDoS and Prob-maximal abnormal attack characteristics. The evaluation bed used in this paper is the 1999 DARPA Intrusion Detection Evaluation Data Sets. 
The rest of paper is organized as follows: Section 2 explains the background and related work of AID, Section 3 proposes the new framework to construct the usage behavior profile and detect anomalies, and Section 4 illustrates the new method of ments. Finally, Section 6 gives conclusions. With the knowledge of normal behavior to detect novel intrusions, AID searches for anomalous behavior or deviations from the established baseline. If the deviations exceed activity. Generally, the AID is looked as the binary classification: the given data sample is judged as normal activity or intrusion activity according to the AID model. The most classical AID model comes from the earlier landmark paper of Dorothy Denning -An Intrusion Detection Model. [3] Denning describes building an "activity profile" of normal usage over an interval of time and proposed to employs statistics to construct a point of reference for normal behavior. Denning X  X  work inspires the statis-tical methodology in Anomaly/Intrusion Detection fields. 
However, as the attacks and intrusions become more complex, more and more ma-chine learning model and data mining model are proposed to solve the problems of network security, including general Clustering [4], Outlier Detection, Support Vector Machine [5], Hidden Markov Models [6] and Neural Network [7] and so on. How-ever, because of the complexities of algorithms, one of main universal shortcomings time style. Without maintaining the profiles of normal behavior, Clustering and Out-lier Detection [4] seem to be promising recently but these methods depend mightily audit data for the certain temporal space. These methods can not get higher detection the higher proportion attack traffic during some certain time interval. Other ap-proaches try to construct a certain profile according to different data objects in either host computer scope or network scope just as Table 1. SVM can achieve the higher embarrasses the efficiency and usability in actual application. The same problems arise to HMM and Neural Network, especially in case of the huge mount of network traffic audit data in the network-based intrusion detection. 
In our methodology, we concentrate on AID and propose a novel approach to es-tablish structural profiles of normal network traffic usage using VQ, and detect anomalies according to the deviations. Hereon, a codebook of VQ serves as the struc-However, our main aim is to implement a lightweight AID system based on the Quan-tization Vector to corporate with other Misuse Intrusion Detection systems (e.g. SNORT [8] ). Vector Quantization (VQ) [2] is an efficient coding technique, especially in data compressions of image and speech signal based on the similarity measures between feature vectors . Through the compression approach of VQ, it is easy to transmit and ogy of the input space partition according to the similarities of input feature vectors. In this way, Vector Quantization is an approach to data clustering of a data set.  X  Definition1. Vector Quantization can be defined as a mapping function from  X  Definition2. Given he input vector that VQ can compartmentalize the traffic feature vector space to groups comparing into the codebook. Consequently, through the codebook organization of VQ, we can get the usage profiles to character the network traffic.  X  Definition3. The usage profiles P of network traffic can be defined: All x with the profiles i P can be represented by i y . Here, we can understand that VQ clusters. 3.1 Codebook Design The first important step to implement Vector Quantization, codebook construction is the training processing by the normal network traffic with a certain algorithm.[2] The LBG algorithm [9] and Competitive Learning [10] are the most widely used approach to design codebook of VQ. Here, we use the Competitive Learning --Kohonen Learn-ing Algorithm (KLA) [11] to train the structural codebook of normal network traffic. The codebook can be treated as the dictionary of normal network traffic behavior [12] represented by one codeword, also known as the centroid. After training, the normal traffic behaviors have been compacted to the codebook and the similar behav-iors have been clustered together. The usage profiles are embodied in the codebook at last. 
The codewords close to the input vectors by iterations. The codebook construction processing is the coupling processing between the all codewords and the input vector of network traffic.  X  Definition4 : Every TCP Flow is a data point in the n-dimension feature space 0()1 t  X  &lt;&lt; . 
In this paper, the parameters of KLA used to train the codebook in this paper can be referred in the following Table2. 3.2 Detection The Vector Quantization framework for the TCP attack detection is described in the following Fig.2. After training, the codebook has been constructed for the normal network traffic. In other words, Voronoi partition [12] is formed in the normal traffic behavior space. Every codeword of codebook represents the centroid of the more similar group according to the minimum Euclidean distances among the input vectors neighbor searching. The anchor point named as the nearest neighbor codeword has been found for each input feature vector by exhaustively searching to compute its minimum Euclidean distance to all of the codewords in the codebook. The Quantiza-measure the similarity of short-term behavior in input space and long-term behavior embedded in codebook. attributes from IP packets, and then, the Date Normalization will be processed to quantitative attributes. In the paper, data preprocessing is focused on TCP traffic. 4.1 TCP Flow Feature Attribute learning algorithms in AID. Moreover, excellent detection models or algorithms must be combined with the rational feature vector extraction to improve the attack recogni-mum difference degree between usual usage behaviors and anomaly behaviors. A feature vector of the TCP traffic flow is shown in Table 3. 
There are nine flags involved in the connection establishment of TCP 3-way hand-shake protocol and the connection close of TCP 4-way handshake protocol. We de-corresponding flag is observed during the establishment-close process. Otherwise, the corresponding flag will set to 0. A decimal function with the non-superposed value is used to quantitate the whole connection process  X  
For example: There are two statuses according to one SYN probing attack (1) The target port is not open and the target computer responses a RST passive : ( 2) The target port is open and the target computer responses an ACK syn : The number 6 and 13 describe two abnormal TCP connection states in the process of SYN probing attack. Consider the situation that TCP protocol has the re-transmission mechanism and a TCP Flow aggregates some TCP connections so that the certain flag will repeatedly in a TCP Flow, we substituted the 32-bit number (4 bytes) for the 9-bit number, as in Fig 3. So if the occurrence time of one certain flag is less than 15, the exceeds 15. ( RST passive / RST active occurrence time is less than 3). discrepancy between the normal connection closed ( ACK fin ) and the connection re-jected abnormally ( RST ). The large discrepancy between normal feature attribute and abnormal can help to advance AID accuracy. 
The TCP Flow state is the most important feature attribute. Many attacks can result in the abnormal state of connection accord ing to the TCP protocol. Generally, 14 connection-closing states are summarized in AID model based on the data mining [4, 5]. We found that the method of tracking 14 connection states is clumsy relatively in data preprocessing program. What is more important, these 14 states cannot include attribute directly leading to the whole improvement of feature vector. 4.2 Time Window In order to get the correlation and statistical information in a certain time interval (2 seconds in this paper), a time window was designed as in Fig.4. The dashed denotes Whole cirle of flow is in the time window. In the data preprocessing the flows closed traffic statistical correlation and the data preprocessing. 5.1 Experiment Data Set We take a part of the 1999 DARPA Intrusion Detection Evaluation Data Sets of [13, 14] to estimate the structural Vector Quantization for AID off line. The codebook of Date Attack ID Week4 
Mon Wed 43.164334 Portsweep 3/3 (100%) 1.1281~1.2947 0.11% Week4 
Thu 44.080000 Ntinfoscan 9/15 (60%) 0.8793~0.9539 0.14% 
Fri 45.181011 Portsweep 5/5 (100%) 0.9012~1.2318 0.96% Week5 
Mon Week5 
Tue Week5 
Wed Week5 
Thu (The threshold of QE is 0.8) VQ is designed on the data set attack free in week 3 and week 1. However, consider general, we test for ten TCP attacks  X  DoS and Probing mainly  X  , 35 instance attacks total, as showed in Table 4. We filter out some other attacks out of the test traffic data according to the attack identification [13] of 1999 DARPA deliberately after the fea-ture vectors extracted. A detailed description of these attacks could be found in [13]. 5.2 Quantization Errors and Result We use Quantization Errors ( QEs ) to evaluate the on-detecting network traffic vectors. Fig.5 (a-d) presents the QEs distributions in outside traffic of 4 days in DARPA data set including one the training data Week1 Fri. and the three-day testing data. The DARPA data of week1 Fri. begins in 8:00 morning and ends about in 22:08 evening (22:04 about in week5 Mon.) after which few data can be observed in those two days. [13] 
From the Fig.5 (a), we can observe that QEs in training data is well regulated and don X  X  change with the large deviation. However, the strong contrast in Fig.5 (b) is the 18:04, Neptune attack (Syn-flood) can be viewed with QEs values ranging from 1.8038 to 2.3063 in Fig.5 (b). The same case happens in other day data which just can be viewed by Fig.5 (c) and Fig.5 (d). 
The overall outcome of evaluation is present in Table 5. The Detection Rate (DR) and False Positive Rate (FPR) are both presented for the whole day circumstances accordingly. Individuals in one attack circumstance are given singly for the better understand. Obviously, every attack with cer tain ID is composed of the attack multi-flows, from a few to the huge volume such as Neptune because many DoS/DDoS and multi-flows and get the higher DR with the lower FPR. The paper proposed an intrusion detectio n mechanism using the structural Vector Quantization, especially to detect DoS/DDoS and Probing attacks for web services. With the codebook, the normal usage profile of the temporal-spatial scale network traffic could be constructed quantitatively to describe the normal long-term behaviors. The evaluation experiments confirmed that our anomaly intrusion detection frame-work can achieve the higher detection rate with the lower false detection rate. 
