 We propose a novel statistical method to predict large scale dyadic response variables in the presence of covariate information. Our approach simultaneously incorporates the effect of covariates and estimates local structure that is induced by interactions among the dyads through a discrete latent factor model. The discovered la-tent factors provide a predictive model that is both accurate and interpretable. We illustrate our method by working in a framework of generalized linear models, which include commonly used re-gression techniques like linear regression, logistic regression and Poisson regression as special cases. We also provide scalable gen-eralized EM-based algorithms for model fitting using both "hard" and "soft" cluster assignments. We demonstrate the generality and efficacy of our approach through large scale simulation studies and analysis of datasets obtained from certain real-world movie recom-mendation and internet advertising applications.
 H.1.1 [ Information Systems ]: Models and Principles Algorithms, Theory, Experimentation Generalized linear regression, Co-clustering, Latent factor model-ing, Dyadic data
Predictive modeling for dyadic data is an important data mining problem encountered in several domains such as social networks, recommendation systems, internet advertising, etc. Such problems involve measurements on dyads , which are pairs of elements from two different sets. Often, a response variable y ij attached to dyads ( i, j ) measures interactions among elements in these two sets. Fre-quently, accompanying these response measurements are vectors of covariates x ij that provide additional information which may help in predicting the response. These covariates could be specific to individual elements in the sets or to pairs from the two sets. In most large scale applications, the data is sparse, high dimensional (i.e., large number of dyads), noisy, and heterogeneous; this makes statistical modeling a challenging task. We elucidate further with a real-world example.
 Consider an online movie recommendation application such as NetFlix, which involves predicting preference ratings of users for movies. This preference rating can be viewed as a dyadic response variable y ij ; it depends both on the user i and the movie j and captures interactions that exist among users and movies. Since both user and movie sets are large, the number of possible dyads is astronomical. However, most users rate only a small subset of movies, hence measurements (actual ratings provided by a user) are available only for a small fraction of possible dyads. In addi-tion to the known user-movie ratings, there also exists other pre-dictive information such as demographic information about users, movie content and other indicators of user-movie interactions, e.g., is the user X  X  favorite actor part of the movie cast? These predictive factors can be represented as a vector of covariates x ij with user-movie dyad ( i, j ) . Incorporating covariate information in the predictive model may improve performance in practice. It is also often the case that some lat ent unmeasured characteristics that are not captured by these covariates induce a local structure in our dyadic space (e.g., spatial correlations induced due to cul-tural similarities). The main contribution of this paper is to show that accounting for such local structures directly in the predictive model along with information in the covariates often leads to better predictions. In fact, the local structures in some cases may provide additional insights about the problem and may lead to models that are both accurate and interpretable.

The predictive problem discussed above is not specific to movie recommendation systems and arises in several other contexts.(e.g., click rate estimation for webpage-ad dyads in internet advertis-ing, estimating pr obabilitie s of a call between telephone dyads in telecommunication networks, etc.) Prior work provide solutions using both supervised and unsupervised learning approaches. The supervised learning approach involves building a regression or a classification model to predict the dyadic response y ij solely as a function of the available covariates x ij . It has been well-studied with considerable literature on selecting informative covariates and obtaining bounds on the generalization error [18]. However, in gen-eral, this approach disregards any local structure that might be in-duced on the dyadic space due to other latent unmeasured factors. In contrast, the unsupervised approach focuses exclusively on cap-turing local structures in the response measurements on dyads. The discovered latent structures (e.g., clusters, principal components) provide insights about the interactions in the dyadic space which are useful in the absence of informative covariates. In fact, these local structures provide a parsimonious model for succinctly cap-turing the interactions in the dyadic matrix. However, since this approach does not adjust for the effects of covariates, the resulting latent structure may contain redundant information.

In this paper, we propose a statistical method that combines the benefits of both supervised and unsupervised learning approaches; we simultaneously incorporate the effect of covariates as in super-vised learning and also account for any local structure that may be present in the data as in unsupervised learning. To achieve this, we model the response as a function of both covariates (captures global structure) and a discrete number of latent factors (captures local structure). Referring elements in the two sets that form the dyads as rows and columns, our model assumes that the row and column elements are separately assigned to a finite number of row and column clusters (or factors). The cross-product of these row and column clusters partition the dyadic matrix into a small num-ber of rectangular block clusters; these provide an estimate of our latent factors. The row-column decoupling strategy provides an efficient algorithm to estimate latent structures by iteratively per-forming separate row and column clusterings.

To provide further intuition about our met hod, we note that when the assignments are exclusive (i.e., "hard") as opposed to proba-bilistic (i.e., "soft"), each row and column is assigned to one and only one row and column cluster respectively. This partitions the dyadic matrix into a small number of rectangular blocks or co-clusters. In this case, the covariate information and local struc-tures are incorporated simultaneously by assuming that the mean (or some function of the mean) of the response variable is a sum of some unknown function of the covariates and a block-specific constant; both of which get estimated from the data. We note that for models solely based on covariates, the additional block-specific constant that is extracted by our method is assumed to be part of the noise model; by teasing out this extra information parsimo-niously through a piecewise constant function, we provide a model that may lead to better generalization in practice. Furthermore, the estimated blocks and the corresponding constants are often repre-sentative of some latent unmeasured factors that contributes to the interactions seen in our dyadic matrix. For instance, cultural pref-erences may cause users in a certain geographic region to provide higher ratings to certain class of movies. The clusters obtained from our method when subjected to further analysis and follow-ups with domain experts may discover such patterns. Thus, our model is both accurate in terms of predictions and interpretable in terms of the clusters obtained.

To illustrate our methodology, we confine ourselves to the frame-work of generalized linear models (GLMs), which provides a flexi-ble class of predictive methods based on exponential families. This class includes Gaussian, Poisson and Bernoulli distributions as spe-cial cases. Further, for this special class of statistical models, we model the latent factors through an approach that is related to co-clustering using Bregman divergences. The key step in our method-ology is to find a co-clustering that provides the best predictive per-formance after adjusting for the covariates ; this is accomplished through an iterative model fitting process in the generalized EM framework.
This paper provides a predictive modeling approach for dyadic data that simultaneously exploits information in the available co-variates and the local structure present in the dyadic response ma-trix. In particular, the current work makes the following key con-tributions.
 Table 2.1: Examples of exponential families and associated pa-rameters and cumulant functions. The natural statistic t ( x )= x for all three cases and  X  is assumed to be constant.
We begin with a brief review of (i) one parameter exponential families, generalized linear regression models, and (ii) co-clustering on dyadic data.
One-parameter exponential families provide a coherent frame-work to study commonly occurring prediction problems with uni-variate response. A random variable X with density f ( x ;  X  ) is said to belong to a one-parameter exponential family if Here, the unknown parameter (also called the natural parameter)  X   X   X  ; p 0 ( x ) is a probability measure that does not depend on  X  ;  X  (  X  ) is the cumulant generating function of X 1 , t ( x ) is some func-tion of x (in most examples, t ( x )= x ). In fact, E ( t ( X )) =  X  (  X  ) and Var ( t ( X )) =  X  (  X  ) . Table 2.1 shows three important exam-ples of exponential distributions and the associated parameters and cumulant functions.
To keep the exposition simple, dispersion parameter is assumed to be 1 .
 Table 2.2: Examples of generalized linear models for different types of response variables.
Generalized linear models (GLM) provides an abstract frame-work to study classification and regression problems that are com-monly encountered in practice. Least squares regression for contin-uous response and logistic regression for binary response are spe-cial cases. A GLM is characterized by two components. (i) The distribution of the response variable Y belongs to a mem-(ii) The mean  X  (  X  )=  X  (  X  ) is some unknown function of the
Thus, if the response Y follows a GLM, the conditional density f ( y ;  X  t x ) of y given x depends on the unknown parameter through the linear function  X  t x . Although predictive methods based on GLMs are in general effective, they fail to account for unobserved interactions that are often present in dyadic data after adjusting for the covariates; our method provides a solution to this problem. Before proceeding further, we provide background mate-rial on matrix co-clustering, which is closely related to our method. In fact, our method captures unaccounted interactions by perform-ing co-clustering in a latent space through a mixture model.
Co-clustering, or simultaneous clustering of both rows and columns, has become a method of choice for analyzing large and sparse data matrices[15, 2] due to its scalability and has been shown to be ef-fective for predicting missing values in dyadic data exploiting the interactions that are often present in the observed response val-ues. In particular, the Bregman co-clustering framework proposed in [2], presents a formulation from a matrix approximation point of view, wherein the row and column clusterings are chosen so as to minimize the error between the original matrix Y and a re-constructed matrix  X  Y (called the minimum Bregman information matrix) that depends only on the co-clustering, and certain sum-mary statistics of Y , e.g., co-cluster means. This formulation al-lows the approximation error to be measured as the weighted sum of element-wise Bregman divergence between the matrices Y  X  Y . This co-clustering formulation also permits an alternate inter-pretation in terms of a structured mixture model as presented in [17]. We briefly describe this connection.

For dyad ( i, j ) ,let  X  ( i ) and  X  ( j ) denote the row and column membership of the i th row and j th column respectively. We as-sume the cluster ids for rows and columns belong to the sets I =1 ,  X  X  X  ,k } and { J : J =1 ,  X  X  X  ,l } respectively. Whenever appropriate, I and J would be used as shorthand to mean  X  ( i )= I and  X  ( j )= J respectively. Now, consider a mixture model given by p ( y ij )= where  X  IJ denotes the prior probabilities associated with the latent variable pair ( I,J ) and  X  i,j,I,J is the corresponding natural param-eter that could have additive structural constraints, e.g.,  X   X  +  X  j +  X  I,J (accommodates row, column and co-cluster inter-actions) or  X  i,j,I,J =  X  I,J (accommodates only co-cluster inter-actions). Using the bijection result between (regular) exponential families and a special class of Bregman divergences [3] and the projection theorem characterizing the optimality of minimum Breg-man information matrix with respect to generalized additive models in the natural parameter space [17], it can be shown that maximiz-ing the log-likelihood of Y with respect to the appropriate choice of the mixture model eqn. (2.2) is analogous to minimizing the re-construction error in the Bregman co-clustering framework. The mixture model, in general, results in soft cluster assignments and is exactly equivalent to the  X  X ard X  Bregman co-clustering formula-tion when the dispersion of the mixture components is assumed to be zero.

We note that conditional on the latent variables  X  ( i ) , X  ( j ) ,the mixture model in eqn. (2.2) captures interactions through the block means; the main issue is to find an optimal clustering to adequately explain the local structure in our data. Also, omitting covariates may provide clusters that contain redundant information and in-ferior predictive performance; hence, the need to simultaneously adjust both for covariates and find an optimal clustering.
In this section, we describe our predictive discrete latent fac-tor (PDLF) model for dyadic response that simultaneously incor-porates information in the covariates within the GLM framework and accounts for unmeasured interactions via co-clustering meth-ods. We also present a generalized EM algorithm to estimate the model parameters which is guaranteed to monotonically increase the marginal likelihood until it attains a local maximum. Let Y =[ y ij ]  X  R m  X  n denote the response matrix and let X =[ x ij ]  X  R m  X  n  X  s denote the tensor corresponding to s pre-specified covariates with x ij  X  R s . Further, let W =[ w R m  X  n denote non-negative weights associated with the observa-tions in Y . 3
Given k  X  l blocks ( I,J ) with prior probabilities  X  IJ ,themarginal distribution of response given covariates is given as p ( y ij | x ij )=
Henceforth, we refer to each mixture component as a block to maintain the analogy with the hard assignment case.
In our examples, this is set to 1 for a valid observation and 0 for missing ones.
 where f  X  is an exponential family distribution with cumulant  X  (  X   X  R s denotes the regression coefficients associated with the pre-specified covariates,  X  IJ denotes the prior and  X  I,J denotes the in-teraction effects associated with the block ( I,J ) . Writing  X   X  t x ij +  X  I,J and comparing with eqn. (2.2), we see the difference between the usual co-clustering models and PDLF. The latter is a richer class which performs co-clustering on the residuals after ad-justing for the effect of covariates. Furthermore, the estimation of covariate effects and co-cluster means on the residuals are carried out simultaneously; the usual practice of detrending thedatafirstto remove covariate effects and clustering the residuals may provide suboptimal results since the effects are not orthogonal. We note than an alternate way of forming a mixture distribution that is often pursued in the statistics literature is through a s emi-parametric hi-erarchical model wherein g (  X  ij )=  X  t x ij +  X  ij ,and  X  clustering model, namely, a mixture of distributions. For instance, the marginal distribution of y ij is a mixture of Gaussians given by
P lar to eqn. (3.3). However, such an approach does not exploit the special structure of the dyadic data which is done by the block model in eqn. (3.3). In particular, the block model assumes that block membership of dyadic elements can be completely specified in terms of row and column memberships in the corresponding row and column clusters respectively. This is the key feature of our method which makes it scalable; we express a two-dimensional clustering problem in terms of two iterative one dimensional clus-terings. In fact, the co-clustering method could viewed as a process that iteratively clusters rows and columns; clustering on columns has a smoothing effect which enhances row clustering and vice versa. More specifically, there exist latent variables  X  ( i ) and  X  ( j ) attached to the i th row and j th column which take values in the cluster membership sets { I : I =1 ,  X  X  X  ,k } (row clusters) and {
J : J =1 ,  X  X  X  ,l } (column clusters). Thus, each observation is assumed to have been generated from a mixture distribution with k  X  l components, each of which corresponds to a particular choice of ( I,J ) . Further, the mean function of each component distribu-tion includes a term that models the dependence of response on co-variates. Thus, the dyads ( i, j ) are assigned to blocks ( I,J ) (frac-tional for soft clustering, degenerate for hard clustering) and within each block, the mean is some global function of the covariates, but adjusted by block-specific off-sets {  X  I,J } . Hence, we capture the local structure using a piecewise constant function with the row and cluster assignments imposing a block structure and simplifying the computations.
We present a generalized EM algorithm to fit the mixture model in eqn. (3.3) to the data. Throughout,  X  ij,IJ =  X  t x ij Assuming the observations are all generated from eqn. (3.3) with weights given by W , the incomplete data log-likelihood is given by the model parameters. As in the case of simple mixture models, this data log-likelihood is not a convex function of the parameters (  X  ,  X  ,  X  ) and cannot be readily optimized.

To facilitate maximization of log-likelihood defined in eqn. (3.4), we consider a complete data likelihood obtained by augmenting { y ij } ij with the latent variables {  X  ( i ) } i and {  X  ( j ) the analysis in [19], we consider the free-energy function, which is defined as the sum of the expected complete log-likelihood and the entropy of the latent variables with respect to an arbitrary distribu-tion  X  p ( {  X  ( i ) } i , {  X  ( j ) } j ) .

Since { y ij } ij are conditionally independent given the cluster as-signments, which are themselves independent for {  X  ( i ) , X  ( j ) for different values of ( i, j ) , it suffices to assume that Then, the free-energy function is given as F (  X  ,  X  ,  X  ,  X  p )= where E  X  p ij [log p ( y ij , X  ( i ) , X  ( j ))] =  X  ij,IJ )) and H (  X  p ij )=  X 
As proved in [19], EM procedure can also be viewed as a greedy maximization approach where one alternates between maximizing F w.r.t.  X  ,  X  ,  X  for a fixed  X  p (call it the M-step) and maximiz-ing  X  p for a fixed  X  ,  X  ,  X  (call it the E-step). This formulation of the EM algorithm leads to alternative maximization procedures. For instance, in our case, optimizing  X  p in terms of either or {  X  ( j ) } j holding the other fixed and alternating with the M-step would still increase the margin al likelihood at every iteration. In fact, the value of  X  p which maximizes F for fixed  X  ,  X  ,  X  is P ( {  X  ( i ) , X  ( j ) } ij |{ y ij } ij ,  X  ,  X  ,  X ) =  X  ,  X ) , where
P (  X  ( i )= I, X  ( j )= J | y ij ,  X  ,  X  ,  X )  X   X  IJ f  X  ( y This forms the basis of the classical EM algorithm in the context of mixture models but is too slow in practice for our problem, es-pecially when the number of { y ij } gets large. To expedite com-putations, we confine ourselves to the class of  X  p ij that factorize as,  X  p dure. This implicitly assumes that  X  ( i ) and  X  ( j ) are independent a-posteriori, an approximation that approaches the true posterior as the joint posterior of  X  ( i ) , X  ( j ) approaches degeneracy. The com-plete steps of the algorithm are given in table 1 and can be executed in any order. Under mild conditions, it can be shown that each of these steps monotonically increase the free energy function, with at least one step resulting in a strict increase, till a local optimum is attained. In particular, steps 4 and 5 in Algorithm 1 provide an iterative clustering scheme whereby rows are clustered exploiting the column clustering already obtained and vice versa. This charac-teristic of being able to assign each observed dyadic measurement to a block through a sequence of row and column clusterings is the key feature that makes our algorithm scalable and converge fast.
The generalized EM approach in Algorithm 1 provides closed form updates for the pri or block pr obabilities {  X  IJ } row and column cluster assignments, each of which only requires a computation time of O ( Nkl ) per iteration, where N denotes the number of observations in Y (i.e., elements such that w ij The regression coefficients  X  and interaction effects  X  , in general, do not have closed form updates, but can be readily computed us-ing convex optimization methods such as the Newton-Raphson X  X  method. In fact, since the generalized EM algorithm does not re-quire an exact optimization over each argument [10], it is sufficient Algorithm 1 Generalized EM Algorithm for PDLF Model to perform a few iterations of the Newton-Raphson X  X  method, each of which requires a computation time of O ( N ( kl + s 2 )) . Thus, as-suming a constant number of iterations, the overall algorithm only requires a computation time that is linear in the number of observa-tions. For special cases such as Gaussian and Poisson distributions, it turns out that the interaction effects  X  can be computed in closed form as in Table 3.3. This is possible due to the functional form of the cumulant which is given by  X  ( x )  X  x 2 for Gaussian and  X  ( x )  X  exp( x ) for the Poisson. For the Gaussian, the regres-sion coefficients  X  can also be computed in closed form using a weighted least squares regression on the residuals y ij  X 
In this section, we analyze a special case of our latent factor model where each row (column) is exclusively assigned to a sin-gle latent factor, i.e., a row (column) cluster, and describe a highly scalable algorithm for this setting.

For the special case corresponding to hard assignments, the la-tent factor model in eqn. (3.3) can be expressed as For every block ( I,J ) ,let X latent I,J denote a binary-valued co-variate that indicates if a dyad belongs to the IJ th block, i.e.,
We can now express the PDLF model in eqn. (4.6) as a generalized linear model over the initial set of covariates X  X  R m  X  n  X  s new set of latent covariates X latent  X  R m  X  n  X  kl associated with the k  X  l co-clusters, i.e., with  X  being the coefficients of the covariates X latent .However, unlike in a simple generalized linear model, the covariates are not known beforehand. Hence, the learning procedure in this case, involves two steps: (a) Discovering the  X  X ost informative X  set of latent covariates of (b) Fitting a GLM over the combination of covariates in X The above two steps, in fact, correspond to the generalized EM steps in Algorithm 1. To see the connection, consider the free en-ergy function in eqn. (3.5). Since each row (column) is exclusively assigned to a single row (column) cluster, the conditional entropy term vanishes and there is also no dependency of the assignments on the priors of the mixture components. Hence, the free energy function (up to an additive constant) for the hard assignment case is given by F hard (  X  ,  X  , X , X  )=
As in the case of the general PDLF model in eqn. (4.6), the above objective function can be optimized by a repeatedly maximizing over the parameters  X  ,  X  and the cluster assignments (  X ,  X  ) (i.e., latent covariates X latent ) until a local maximum of the likelihood function is attained. Algorithm 2 shows the detailed updates for this case.

Note that for any exponential family distribution f  X  , the update steps for the regression coefficients  X  and interaction effects  X  in Algorithm 2 can be combined into a single GLM regression. Since each row (column) is assigned to single row (column) cluster, the cluster assignments can also be performed quite efficiently requir-ing a computation time of only O ( N ( k + l )) per iteration.
Note that we need to ensure that the covariates in [ X , X latent linearly independent, possibly by excluding some of the co-cluster covariates, in order that the model is not over-parameterized. Algorithm 2 Hard PDLF Algorithm
Since the PDLF model combines ideas from GLMs and co-clustering, one would naturally expect these two methods to be special cases of the generalized EM algorithm for PDLF.

GLM. When k = l =1 , the entire dyadic space forms a single co-cluster so that there do not exist any latent covariates. Hence, the model in eqn. (4.7) reduces to a simple GLM.
 Co-clustering. In the absence of pre-specified covariates, the free energy function (up to an additive constant) in eqn. (4.8) reduces to Using the bijection between regul ar exponential families and Breg-man divergences [3], we can further rewrite it as where d  X  is the Bregman divergence corresponding to the Legen-dre conjugate of  X  and  X  y  X  ( i ) , X  ( j ) =  X  (  X   X  ( i maximization problem can now be cast as minimizing the matrix approximation error with respect to the original response a simple reconstruction based on block co-clustering (i.e., basis in [2]).
In this section, we provide empirical evidence to highlight the flexibility and efficacy of our PDLF approach. First, we describe controlled experiments on simulated data to analyze the predic-tive performance of our algorithms relative to other existing ap-proaches. Then, we present results on real-world datasets for movie-recommendations (MovieLens)[9] and ad click-analysis (Yahoo! internal dataset) to demonstrate the benefits of our approach for a variety of learning tasks such as relevance classification, imputa-tion of continuous missing values and feature discovery.
We first study the performance of our predictive modeling al-gorithms (Algorithms 1 and 2) on synthetic data generated from PDLF, and some simpler special cases of PDLF described in ta-ble 5.4.

Data Simulation. To choose realistic parameters for the genera-tive models, we analyzed a subsample of the MovieLens dataset consisting of 168 users, 197 movies and 2872 ratings (response variable) as well as attributes based on user demographics (e.g., age/gender/occupation) and movie genres (e.g., science-fiction). From this dataset, we obtained four important covariates and com-puted the corresponding linear regression coefficients (i.e., ing a Gaussian linear model for the ratings. We also independently co-clustered the response matrix (assuming k = l =5 ) with-out using the covariate information to obtain co-clusters, reason-able values for the co-clusters priors  X  , the row/column effects (say  X   X  R m and  X   X  R n ), and the co-cluster interaction effects (i.e.,  X  ). We consider five generative models based on various combina-tions of these parameters as shown in Table 5.4. In each case, we simulated 200 datasets from the model. 5
For our first experiment, we used the 200 datasets generated from the PDLF model, i.e., the mixture of generalized linear models M Our goal here is two-fold: a) To provide a sanity check on the PDLF model by fitting it to data where it should work and b)To compare
The data and the models can be downloaded from http://www.lans.ece.utexas.edu  X  srujana
Table 5.4: Generative models used for simulation studies the effectiveness of the generalized EM (or  X  X oft X ) algorithm (Al-gorithm 1) and the one that uses hard assignments (Algorithm 2) in estimating the true model parameters.

To each simulated data, we applied the PDLF algorithms corre-sponding to Gaussian distributions with k = l =5 . To avoid local optima, for each dataset, we repeated the algorithm with five differ-ent initializations and picked the best overall solution (we did not initialize with the true cluster assignments or true parameter values that were used in the simulations.) Table 5.5 show the true values of the covariate coefficients  X  and the 95% confidence intervals for the soft and hard PDLF algorithms. From the results, we observe that the true  X  values always lie in the 95% confidence interval for both the algorithms providing a sanity check on our code, model formulation and algorithms. In comparing the soft and hard PDLF algorithm, while the  X  values are similar (hard PDLF tends to have slightly higher variation in estimating  X  ), the dispersion parameter or variance of the Gaussian distribution is underestimated by hard PDLF providing evidence of overfitting. The 95% confidence in-tervals for  X  2 obtained from the soft PDLF algorithm includes the truth. To avoid the overfitting problem with hard PDLF, we imple-mented a hybrid PDLF whereby we start out with a soft PDLF but switch to the hard one after a few iterations. say that this amelio-rates the situation to some extent; recommended strategy if possible to implement.
 Table 5.5: 95% quantiles of the  X  values estimated using the  X  X oft X  and  X  X ard X  PDLF algorithms.
Next, we consider the various special cases of the PDLF model in eqn. (4.6) that arise from disregarding the contributions of the covariates, row/col effects or the interaction effects as listed in Ta-ble 5.4. For each of these models, there exists a simpler learning approach that captures the associated structural assumptions. In this experiment, we study the predictive performance of our PDLF algorithm when data is generated from a simpler model. This pro-vides an assessment of robustness and overfitting properties of the PDLF model. Table 5.6 shows the prediction error 6 (mean square error with five-fold cross validation) using different algorithms on data generated from models M 1  X  M 5 . From the table, we ob-serve that for each model, the test error using the PDLF algorithm is comparable to that of the special case algorithm appropriate for the model. This provides evidence on the robustness of the PDLF
Note that it is not fair to compare the log-likelihood or training error since the different algorithms involve varying number of pa-rameters. model. In fact, it shows that the presence of a few irrelevant fea-tures does not hurt the performance of PDLF and makes it a general tool to analyze dyadic response data.
 Table 5.7: Prediction error (mean square error with 5-fold cross-validation) using different algorithms with partial covari-ate information. k = l =5 where applicable.
In this study, we explore the benefits of our approach for rel-evance classification, which involves predicting a binary response (relevant or not) given a pair of objects that can be interpreted as the rows and columns of the response matrix. There are two objectives in conducting this experiment: a)We show an application of PDLF for binary response and b) We show that combining covariate in-formation and modeling local structure leads to better predictive performance relative to methods that do not account for both these information simultaneously.

For our experiments, we used a subset of the MovieLens dataset consisting of 459 users, 1410 movies and 20000 ratings (range 1-5) as well 23 attributes based on user demographics/movie genres and their interactions. We binarized the response variable by choosing ratings &gt; 3 as relevant and ratings  X  3 as not relevant. To pre-dict this binary-valued response, we consider a PDLF model based on Bernoulli (or logistic) distributions. For scalability, we restrict ourselves to the hard PDLF algorithm (Algorithm 2) with a fairly small number of row/column clusters k = l =5 . To evaluate our approach, we compare it against two methods that have been pre-viously used to analyze this data: a) Logistic regression which is a supervised learning method that only incorporates covariate effects and b) cross-associa tion learning [4] which is an unsupervised ap-proach to learn a dyadic matrix consisting of binary response vari-able for prediction purposes. Table 5.8 shows the misclassification error and Figure 5.1 shows the precision-recall curves obtained us-ing the different methods. We find better performance with PDLF, proving the benefit of simultaneously incorporating both covariate and cluster information for building effective predictive models for dyadic data.
 0 . 44  X  0 . 0004 0 . 41  X  0 . 0005 0 . 41  X  0 . 007 0 . 37 Table 5.8: Misclassification error (5-fold cross-validation) on MovieLens data. We choose k=l=5 for the both PDLF and cross-association learning.
This experiment focuses on the case where the dyadic response is continuous and the learning task can be viewed as predicting miss-ing values in a matrix. We used the same MovieLens dataset as in  X  0.0050 1.1566  X  0.0049 1.1520  X  0.0043  X  0.0030 0.7286  X  0.0030 0.7290  X  0.0032  X  0.0029 0.7312  X  0.0029 0.7337  X  0.0032  X  0.0048 1.1327  X  0.0048 1.1426  X  0.0049  X  0.0049 1.1458  X  0.0046 1.1448  X  0.0048 models M 1  X  M 5 . k = l =5 where applicable Figure 5.1: Precision-recall curves on MovieLens data. We choose k=l=5 for the both PDLF and cross-associations learn-ing. first case study. Since most of the existing techniques for address-ing this task such as singular va lue decomposition(SVD) [8], non-negative matrix factorization(NNMF) [13] and correlation-based methods [23] implicitly assume a G aussian generative model, we transformed the response, i.e., the rating values using y y ) to eliminate the skew and make the distribution more symmetric and close to Gaussian.

To predict this response, we use the hard PDLF algorithm (Al-gorithm 2) for Gaussian distributions with both row and column clusters set to 5 ; in addition we used covariates to account for the row and column effects. Table 5.9 shows the mean absolute er-ror in the predictions (after inverse transformation) obtained using PDLF, k -rank SVD ( k =5 ), k -rank NNMF (squared loss, k =5 ) bias adjusted co-clustering(COCLUST) (scheme C 5 ,squared loss, k = l =5 ) and simple linear regression (LINREG).
 Table 5.9: Mean absolute error (5-fold cross-validation) on MovieLens data. We choose k=l=5 for the both PDLF and co-clustering and k=5 for SVD and NNMF.
 As in the previous logistic regression example, we find that the PDLF model provides better predictive performance due of its flex-ibility to discover special clusters that have information not con-tained in the available covariates. For example, the PDLF model discovers a cluster containing not so well-known movies released in 1930 X  X  (shown in Table 5.10) while the co-clustering algorithm() without covariates only discovers groups that are predominantly characterized by the genre and rating levels, e.g. classic oscar-winning dramas. This demonstrates that other than providing ac-curate predictions, PDLF discovers clusters that are more informa-tive.
 Table 5.10: Examples of movie clusters obtained using PDLF and direct co-clustering.
 Table 5.11: Web-site and ip-domain clusters obtained using plain co-clustering
This experiment illustrates the utility of the pr oposed methodol-ogy for discovering hidden covariates. Specifically, we consider the task of predicting the number of times an ad served on a web-site is clicked from an ip (or ip-domain), which is useful for monitoring click volume and other related applications. For our experiment, we used a dataset consisting of 47903 ip-domains, 585 web-sites and 125208 ip-website dyads with click-counts and two covariates, ip-location and routing type. Since we deal with count data, we em-ploy a PDLF model based on a Poisson distribution with k = l =5 . Similar to the earlier experiment, additional covariates that adjust for row(ip) and column(website) effects are also included. As in the previous two experiments, the predictive performance of the hard PDLF algorithm, measured in this case by I-divergence be-tween observed and predicted (shown in Table 5.13) is better than a straightforward Poisson regression or the information-theoretic co-clustering [6] approach.
 The clusters from the PDLF algorithm were rigorously analyzed. Figure 5.2 shows the co-clusters obtained before and after adjusting for the covariates and the row/column effects and the corresponding interaction effects. On examining the first co-clustering, we find that co-clusters (shown in Table 5.11) identify a number of highly predictive factors including the ip-domain location. In contrast, the PDLF approach reveals co-clusters (shown in Table 5.12 with a different set of interactions. In p articular, the ip-domain clusters are no longer correlated with location and identify other interesting characteristics such as whether an ip-domain is a telecom company (column cluster 5) or a software/tech company (column cluster 3), which respectively happen to have positive interactions with inter-net portals (row cluster 4) and web media (row cluster 1). Table 5.12: Examples from web-site and ip-domain clusters ob-tained using PDLF.

From Section 4, we observe that the newly identified co-clusters can, in fact, be treated as new covariates allowing us to perform fea-ture selection to obtain a model which generalize better. Table 5.13 (last column) shows that the predictive accuracy improves slightly after we eliminate some of the co-cluster based covariates. 54 . 09  X  6 . 76 72 . 21  X  0 . 94 77 . 72  X  7 . 65 52 . 12 Table 5.13: I-divergence loss (5-fold cross-validation) on click-count dataset. We choose k=l=5 for the both PDLF and co-clustering. (a) Results using co-clustering (c) Interaction effects using co-clustering Figure 5.2: Co-clusters obtained using direct information-theoretic co-clustering and the hard PDLF method and the cor-responding interaction effects.

The proposed algorithm is quite efficient and can execute a single run of the algorithm (30 iterations) on this moderate sized dataset in about 40s in Matlab on a 1.86GHz Pentium M with 1GB RAM.
To briefly summarize the findings of this section. We provide sanity checks and a comparative analysis of soft and hard versions of PDLF through large scale simulations. We show both versions of the algorithm perform well with the hard version having a tendency to slightly overfit. We show that PDLF is robust in cases where a few covariates are not predictive and/or there is no local structure present in the data.

We conduct experiments on a publicly available MovieLens dataset using a logistic and Gaussian response model. We compare PDLF with existing supervised and unsupervised approaches that have been used to analyze this data and find superior performance. We also show that the clusters obtained from PDLF after adjusting for covariate effects are more informative. Finally, we conduct co-clustering analysis on a new real world dataset that is obtained from an application in internet advertising. The response variable in this case are click counts, hence we demonstrate PDLF on a Poisson model. This experiment is conducted on a much larger dataset and demonstrates the scalability of PDLF. Here again, simultaneous in-clusion of both covariates and latent factors provides better perfor-mance relative to cases which does not include both. In fact, the cluster obtained for this experiment after adjusting for covariates are much more informative; the ones obtained without adjusting for covariates contain redundant information.
In this section, we briefly discuss how our PDLF model is related to existing literature in the machine learning and statistics commu-nities. Our current work is primarily related to two active areas of research, namely (i) latent factor modeling of dyadic data, and (ii) hierarchical random effects modeling.

Latent Factor Modeling. In recent years, considerable research has been done on unsupervised learning methods in the context of dyadic data. Most methods of similar flavor such as singular value decomposition [ 8], non-negative matrix f actorization [13],proba-bilistic latent semantic analysis [12], cross-association learning [4], Bregman co-clustering [2] are matrix approximation techniques, which impose different constraints on the latent structure depend-ing on the choice of loss function. Among these approaches, co-clustering methods [15] based on iterative row and column cluster-ing, have become popular due to th eir scalability. For a detailed survey on co-clustering methods, we refer the reader to [15]. We note that none of these methods make use of additional covariates for modeling the response as we do in our PDLF model.

Recently, Long et al. [14] proposed a relational summary net-work (RSN) model for clustering over k -partite graphs describ-ing relations between k classes of entities. The RSN model con-siders not only pairwise interactions, but also allows for intrinsic attributes (covariates) associated with each entity. For the case k =2 , the data model associated with RSN (i.e., dyadic response and row/column predictors) is a special case of our data model. However, the RSN algorithm uses covariates only to influence the co-clustering, which is later used for predictive inference instead of directly leveraging the information contained in them. An im-portant fact to note here is that in the RSN approach, the row and column clusters are chosen so as to be similar not only in terms of the associated dyadic responses, but also the associated covariates values, whereas in our approach, the co-clusters are forced to be maximally predictive of the response given the covariates.
Random Effects Modeling. The proposed PDLF model can also be interpreted as a statistical model that approximates local structure via a piecewise constant function in case of hard assign-ments. The mixture model formulation helps in smoothing out edge-effects in a hard cluster assignment model and provides bet-ter performance. An alternate strategy that has been widely used in the statistics litera ture provides a more c ontinuous approxima-tion through a hierarchical random effects model [22]. However, such models are mainly used for explanatory analysis and are not well suited for prediction tasks. Models similar to ours have been studied for small problems in one dimension [1]. More recently, [20] proposed a block model for binary dyadic data which models incidence matrices in social networks where both row and column elements are the same. However, their method does not incorpo-rate covariates and was illustrated only on a small dataset. Another model of similar nature was proposed by [7] for spatial data. This method employs a one-dimensional discrete cluster model where the cluster assignment variables are modeled using a Potts alloca-tion model.

Other Work. In the context of recommender systems, [21] considered combining information in the local structure of prefer-ence ratings as well as demographic and content-based covariates using an ensemble-based approach. This ensemble method, how-ever, does not leverage the full potential of the underlying local structure and is not as interpretable as the PDLF model. Our cur-rent work is also related to recent work [5] on goal oriented or pre-dictive clustering, which uses a bottleneck-like method, where the rows are clustered to retain maximal information about the dyadic response. Unlike our method, this approach only involves single-sided clustering and does not take into account additional covariates that might be available.
To summarize, our current work provides a fairly general and scalable predictive modeling methodology for large, sparse, dyadic data that simultaneously combines information from the available covariates and discovers local structure by using a statistical model-based approach that combines ideas from supervised and unsuper-vised learning. We prove the efficacy of our approach through sim-ulation, analysis on a publicly available dataset and a new dataset in the domain of internet advertising. We find better predictive per-formance relative to simpler models and other existing approaches; we also demonstrate the interpretability of our approach by discov-ering meaningful clusters in our example datasets.

The hard PDLF approach, although scalable and fairly accurate in practice, showed signs of overfitting in our simulation experi-ments. We are currently exploring a hybrid algorithm which start with a hard PDLF, but switches to a soft PDLF after a few itera-tions. As is in the case of other statistical approaches, model and feature selection are critical to the predictive performance and these issues need to be further explored. We showed that our discrete la-tent factor model provide good approximations to account for the missing factors. However, this may involve choosing large values of k and l . An alternate strategy would be to work with a continu-ous latent factor model where the interactions are modeled through a distance function. Such strategies have been pursued recently for social network data [11]; generalization to dyadic data with ele-ments obtained from two different sets is challenging. Although the current work focuses on predictive discrete latent factors based on generalized linear models, in principle, the proposed method-ology could apply to non-linear predictive models where the mean is modeled using non-parametric methods like generalized additive models, splines, etc., but requires further investigation. [1] M. Aitkin. A general maximum likelihood analysis of [2] A. Banerjee, I. Dhillon, J. Ghosh, S. Merugu, and D. Modha. [3] A. Banerjee, S. Merugu, I. Dh illon, and J. Ghosh. Clustering [4] D. Chakrabarti, S. Papadimitriou, D. Modha, and [5] D. Chickering, D. Heckerman, C. Meek, J. C. Platt, and [6] I. Dhillon, S. Mallela, and D. Modha. Information-theoretic [7] C. Fernandez and P. J. Green. Modelling spatially correlated [8] G. Golub and C. Loan. Matrix Computations . John Hopkins [9] Movielens data set. [10] A. Gunawardana and W. Byrne. Convergence theorems for [11] P. Hoff, A. Raftery, and M. Handcock. Latent space [12] T. Hofmann. Probabilistic latent semantic indexing. In [13] D. L. Lee and S. Seung. Algorithms for non-negative matrix [14] B. Long, X. Wu, Z. Zhang, and P. S. Yu. Unsupervised [15] S. C. Madeira and A. L. Oliveira. Biclustering algorithms for [16] P. McCullagh and J. A. Nelder. Generalized Linear Models . [17] S. Merugu. Distributed Learning using Generative Models . [18] T. M. Mitchell. Machine Learning . McGraw-Hill Intl, 1997. [19] R. Neal and G. Hinton. A view of the EM algorithm that [20] K. Nowicki and T. A. B. Snijders. Estimation and prediction [21] M. Pazzani. A framework for collaborative, content-based [22] J. Rasbash and H. Goldstein. Efficient analysis of mixed [23] P. Resnick, N. Iacovou, M. Suchak, P. Bergstorm, and
