 Data in high dimensions is becoming ubiquitous, from image analysis and finances to computational biology and neuroscience. This data is often given or represented as samples embedded in a high dimensional Euclidean space, point cloud data , though it is assumed to belong to lower dimensional manifolds. Thus, in recent years, there have been significant efforts in the development of methods to analyze these point clouds and their underlying manifolds. These include numerous techniques for the estimation of the intrinsic dimension of the data and also its projection onto lower dimensional representations. These disciplines are often called manifold learning and dimensionality reduction . A few examples include [2, 3, 4, 9, 10, 11, 12, 16].
 The vast majority of the manifold learning and dimensionality reduction techniques developed in the literature assume, either explicitly or implicitly, that the given point cloud are samples of a unique manifold. It is very easy to realize that a significant part of the interesting data has mixed dimensionality and complexity. The work here presented deals with this more general case, where there are different dimensionalities/complexities present in the point cloud data. That is, we have samples not of a manifold but of a stratification . The main aim is to cluster the data according to the complexity (dimensionality) of the underlying possible multiple manifolds. Such clustering can be used both to better understand the varying dimensionality and complexity of the data, e.g., states in neural recordings or different human activities for video analysis, or as a pre-processing step for the above mentioned manifold learning and dimensionality reduction techniques.
 This clustering-by-dimensionality task has been recently explored in a handful of works. Barbar  X  a and Chen, [1], proposed a hard clustering technique based on the fractal dimension (box-counting). Starting from an initial clustering, they incrementally add points into the cluster for which the change in the fractal dimension after adding the point is the lowest. They also find the number of clusters and the intrinsic dimension of the underlying manifolds. Gionis et al. , [7], use local growth curves to estimate the local correlation dimension and density for each point. The new two-dimensional representation of the data is clustered using standard techniques. Souvenir and Pless, [14], use an Expectation Maximization (EM) type of technique, combined with weighted geodesic multidimen-sional scaling. The weights measure how well each point fits the underlying manifold defined by the current set of points in the cluster. After clustering, each cluster dimensionality is estimated following [10]. Huang et al. , [8], cluster linear subspaces with an algebraic geometric method based on polynomial differentiation and a Generalized PCA. They search for the best combination of lin-ear subspaces that explains the data, and find the number of linear subspaces and their intrinsic dimension. The work of Mordohai and Medioni, [11], estimates the local dimension using tensor voting.
 These recent works have clearly shown the necessity to go beyond manifold learning, into  X  X tratifi-cation learning. X  In our work, we do not assume linear subspaces, and we simultaneously estimate the soft clustering and the intrinsic dimension and density of the clusters. This collection of at-tributes is not shared by any of the pioneering works just described. Our approach is an extension of the Levina and Bickel X  X  local dimension estimator [10]. They proposed to compute the intrinsic dimension at each point using a Maximum Likelihood (ML) estimator based on a Poisson distribu-tion. The local estimators are then averaged, under the assumption of a single uniform manifold. We propose to compute a ML on the whole point cloud data at the same time (and not one for each point independently), and use a Poisson mixture model, which permits to have different classes, each one with their own dimension and sampling density. This technique automatically gives a soft clustering according to dimensionality and density, with an estimation of both quantities for each class. Our approach assumes that the number of classes is given, but we are discovering the actual number of underlying manifolds. If we search for a larger than needed number of classes, we obtain some classes with the same dimensionality and density or some classes with very few representatives, as shown in the examples later presented.
 The remainder of this paper is organized as follows: In Section 2 we review the method proposed by Levina and Bickel, [10], which gives a local estimation of the intrinsic dimension and has inspired our work. In Section 3 we present our core contribution of simultaneous soft clustering and dimen-sionality and density estimation. We present experiments with synthetic and real data in Section 4, and finally, some conclusions are presented in Section 5. Levina and Bickel (LB), [10], proposed a geometric and probabilistic method which estimates the local dimension (and density) of a point cloud data 1 . This is the approach we here extend, which is based on the idea that if we sample an m -dimensional manifold with T points, the proportion cloud, embedded in high dimensions D , is X = { x t  X  R D ; t = 1 ,...,T } , k is the number of points in
R m , and R k ( x t ) is the Euclidean distance from x t to its k -th nearest neighbor (kNN). Then, they consider the inhomogeneous process N ( R,x t ) , which counts the number of points falling into a small D -dimensional sphere B ( R,x t ) of radius R centered at x t . This is a binomial process, and some assumptions need to be done to proceed. First, if T  X   X  , k  X   X  , and k/T  X  0 , then we can approximate the binomial process by a Poisson process. Second, the density f ( x t ) is constant inside the sphere, a valid assumption for small R . With these assumptions, the rate  X  of the counting process N ( R,x t ) can be written as  X  ( R,x t ) = f ( x t ) V ( m ) mR m  X  1 . The log-likelihood of the process N ( R,x t ) is then given by where  X  ( x t ) := log f ( x t ) is the density parameter and the first integral is a Riemann-Stieltjes integral [13]. The maximum likelihood estimators satisfy  X  X / X  X  = 0 and  X  X / X  X  = 0 , leading to a computation for the local dimension at point x t , m ( x t ) , depending on all the neighbors within a distance R from x t [10]. In practice, it is more convenient to compute a fixed amount k of nearest neighbors. Thus, the local dimension at point x t is m ( x t ) = h 1 k  X  2 P k  X  1 j =1 log R k ( x t ) R estimator is asymptotically unbiased (see [10] for more details). If the data points belong to the same manifold, we can average over all m ( x t ) in order to obtain a more robust estimator. However, if there are two or more manifolds with different dimensions, the average does not make sense, unless we first cluster according to dimensionality and then we estimate the dimensionality for each cluster. We briefly toy with this idea now, as a warm up to our simultaneous soft clustering and estimation technique described in Section 3. 2.1 A two step clustering approach As a first simple approach to detect and cluster mixed dimensionality (and/or densities), we can combine a local dimensionality estimator such as the one just described and a clustering technique. For the second step we use the Information Bottleneck (IB) [17], which is an elegant framework to eventually combine several local dimension estimators and other possible features such as density [6]. The IB is a technique that allows to cluster (compress) a variable according to another related variable. Let X be the set of variables to be clustered and S the relevance variable that gives some information about X . An example is the information that different words provide about documents of different topics. We call  X  X the clustered version of X . The optimal  X  X is the one that minimizes p (  X  ) the probability density function. There is a trade-off, controlled by  X  , between compressing the representation and preserving the meaningful information. In our context, we want to cluster the data according to the intrinsic dimensionality (and/or density). Then, our relevant variable S will be the set of (quantized) estimated local intrinsic dimensions. For the joint distribution p ( x t ,s i ) , s  X  S , we use the histogram of local dimensions inside a ball of radius R 0 around x t , 2 computed by the LB technique.
 Examples of this technique will be presented in the experimental Section. Instead of a two-steps algorithm, with local dimensionality and/or density estimation followed by clustering, we now pro-pose a maximum likelihood technique that combines these steps. The core approach that we propose to study stratifications (mixed manifolds) is based on extending the LB technique [10]. Instead of modelling each point and its local ball of radius R as a Poisson process and computing the ML for each ball separately, we consider all the possible balls at the same time in the same ML function. As the probability density function for all the point cloud we consider a mixture of Poisson distributions with different parameters (dimension and density). Thus, we allow the presence of different intrinsic dimensions and densities in the dataset. These are automatically computed while being used for soft clustering.
 Let us denote by J the number of different Poisson distributions considered in the mixture, each one with a (possibly) different dimension m and density parameter  X  . We consider the vector set of parameters  X  = {  X  j = (  X  j , X  j ,m j ); j = 1 ,...,J } , where  X  j is the mixture coefficient for class j dimension. We denote by p (  X  ) the probability density function and by P (  X  ) the probability. As in the LB approach, the observable event will be y t = N ( R,x t ) , the number of points inside the ball B ( R,x t ) of radius R centered at point x t . The total number of observations is T 0 and Y = { y t ; t = 1 ,...,T 0 } is the observation sequence. If we consider every possible ball in the dataset then, T 0 coincides with the total number of points T in the point cloud. From now on, we will consider this case and T 0  X  T . The density function of the Poisson mixture model is given by p ( y t |  X  ) = the Expectation Maximization (EM) algorithm [5]. In our context, there are two kinds of unknown parameters: The membership function of an expert (class),  X  j , and the parameters of each expert, m j and  X  j . The membership information is originally unknown, thereby making the parameter estimation for each class difficult. The EM algorithm computes its expected value (E-step) and then this value is used for the parameter estimation procedure (M-step). These two steps are iterated. If Y contains T statistically independent variables, then the incomplete data log-likelihood is: where Z = { z t  X  C ; t = 1 ,...,T } is the missing data (hidden-state information), and the set of class labels is C = { C 1 ,C 2 ,...C J } . Here, z t = C j means that the j -th mixture generates y . We call Q the expectation of log p ( Z,Y |  X  ) with respect to Z . The EM algorithm is based on maximizing Q , since while improving (maximizing) the function Q at each iteration, the likelihood function L is also improved. The probability density that appears in the function Q can be written as p ( Z,Y |  X  ) = Q T t =1 p ( z t ,y t |  X  ) , and the complete-data log-likelihood becomes where a set of indicator variables  X  j t is used in order to indicate the status of the hidden variables: Considering the expectation, with respect to Z , E Z (  X  ) of (1) and setting  X  to a fixed known value  X  n (the value at step n of the algorithm), everywhere except for the log function, we get a function Q of  X  . We denote it by Q (  X  |  X  n ) , and it has the following form where is the probability that observation t belongs to mixture j . Finally, the probability density in (2) is steps. In the E-step, the function Q (  X  |  X  n ) is computed, for that, we determine the best guess of can be considered as a function of the only unknown,  X  , and it is maximized in order to compute the values of  X  n +1 , i.e., the maximum likelihood parameters  X  at step n + 1 ; this is called the M-step. The EM suffers from local maxima, hitting a local maximum can be prevented running the algorithm several times with different initializations. Different random subset of points, from the point cloud, may be used in each run. We have experimented with both approaches and the results are always similar if we initialize all the probabilities equally. The Algorithm PMM describes the main components of this proposed approach. The estimators  X  j n +1 , m j n +1 , and  X  j n +1 are obtained by multiplier that allows to introduce the constraint P J l =1  X  l = 1 . This gives equations (4)-(5), where we have used the same approach as in [10], by means of a k nearest neighbor graph. We now present a number of experimental results for the technique proposed in Section 3. We often compare it with the two-steps algorithm described in Section 2, and denote this algorithm by LD+IB. Algorithm PMM Poisson Mixture Model Require: The point cloud data, J (number of desired classes) and k (scale of observation). Ensure: Soft clustering according to dimensionality and density. 2: EM iterations on n , The distances are normalized so that the maximum distance is 1. The embedding dimension in all the experiments on synthetic data is 3, although the results were found to be consistent when we increased the embedding dimension.
 The first experiment consists of a mixture of a Swiss roll manifold (700 points) and a line (700 points) embedded in a three dimensional space. The algorithm (with J = 2 and k = 10 ) is able to separate both manifolds. The estimated parameters are collected in Table 1. For each table, we display the estimated dimension m , density  X  , and mixture coefficient  X  for each one of the classes. We also show the percentage of points of each manifold that are classified in each class (after thresholding the soft assignment). Figure 1(a) displays both manifolds  X  each point is colored according to the probability of belonging to each one of the two possible classes. Tables 1(a) and 1(c) contain the results for both PMM and LD+IB using J = 2 . Table 1(b) shows the results for the PMM algorithm with k = 10 and J = 3 . Note how the parameters of the first two classes are quite similar to the ones obtained with J = 2 , and the third class is marginal (very small  X  ). Figure 1(b) shows the PMM classification when J = 3 . Note that all the points of the line belong to the class of dimension 1. The points of the Swiss roll are mainly concentrated in the other class with dimension 2. A slight amount of Swiss roll points belong to a third class with roughly the same dimension as the second class. Actually, these points are located in the point cloud boundaries, where the underlying assumptions are not always valid.
 If we estimate the dimension of the mixture using the LB technique with k = 10 , we obtain 1.70 with a standard deviation of 5.31. If we use the method proposed by Costa and Hero [4], the estimated dimension is 2. In both cases, the estimated intrinsic dimension is the largest one present in the mixture, ignoring that the data actually lives in two manifolds of different intrinsic dimension. The same Table and Figure, second rows, show results for noisy data. We add to the point coordi-nates Gaussian noise with  X  = 0 . 6 . The results obtained with k = 10 are displayed in Tables 1(d), 1(e) and 1(f), and in Figures 1(d), 1(e) and 1(f). Note how the classification still separates the two different manifolds, although the line is much more affected by the noise and it does not look like a one dimensional manifold anymore. This is reflected also by the estimated dimension which now is bigger. This phenomena is related to the scale of observation and to the level of noise. If the level of noise is large  X  e.g., compared to the mean distance to the k nearest neighbors for a small k  X  intuitively the estimated intrinsic dimension will be closer to the embedding dimension (this behav-ior was experimentally verified). We can again compare the results with the ones obtained with the LB estimator alone: Estimated dimension 2.71 and standard deviation 1.12. Using Costa and Hero [4], the estimated dimension varies between 2 and 3 (depending on the number of bootstrap loops). Both techniques do not consider the possibility of mixed dimensionality.
 The experiment in Figure 2 illustrates how the soft clustering is done according to both dimension-ality and density. The data consists of 2500 points on the Swiss roll, 100 on a line with high density Table 1: Clustering results for the Swiss roll (SR) and a line ( k = 10 ), without noise (first row) and with noise (second row). Figure 1: Clustering of a line and a Swiss roll ( k = 10 ). First row without noise, second row with Gaussian noise (  X  = 0 . 6 ). Points colored according to the probability of belonging to each class. and 50 on another less dense line. We have set J = 4 and the algorithm gives an  X  X mpty class, X  thus discovering that three classes, with correct dimensionality and density, is enough for a good representation. The only errors are in the borders, as expected.
 In order to test the algorithm with real data, we first work with the MNIST database of handwritten digits, 3 which has a test set of 10.000 examples. Each digit is an image of 28  X  28 pixels and we treat the data as 784-dimensional vectors. We study the mixture of digits one and two and apply PMM and LD+IB with J = 2 and k = 10 . The results are shown in Figure 3. Note how the digits are well separated. 4 The LB estimator alone gives dimensions 9.13 for digits one , 13.02 for digits two , and 11.26 for the mixture of both digits. The Costa and Hero X  X  method, [4], gives 8, 11 and 9 respectively. Both methods assume a single intrinsic dimension and give an average of the dimensions of the underlying manifolds.
 Next, we experiment with 9-dimensional vectors formed of image patches of 3  X  3 pixels. If we impose J = 3 and use PMM, we obtain the results in Figure 4. Notice how roughly one class corresponds to patches in homogeneous zones (approximately constant gray value), a second class corresponds to textured zones and a third class to patches containing edges. The estimated dimen-sions in each region are in accordance to the estimated dimensions using Isomap or Costa and Hero X  X  technique in each region after separation. This experiment is just a proof of concept, in the future we will study how to adapt this clustering approach to image segmentation.
 Figure 4: Clustering of image patches of 3  X  3 pixels with PMM, colors indicating the different classes (complexity) ( J = 3 , k = 30 ). Left: original and segmented images of a house. Right: original and segmented images of a portion of biological tissue. Adding spatial regularization is the subject of current research.
 Finally, as an additional proof of the validity of our approach and its potential applications, we use the PMM framework to separate activities in video, Figure 5 (see also [14]). Each original frame is 480  X  640 , sub-sampled to 48  X  64 pixels, with 1673 frames. Four classes are present: standing, walking, jumping, and arms waving. The whole run took 361 seconds in Matlab, while the classification time (PMM) can be neglected compared to the kNN component.
 Figure 5: Classifying human activities in video ( k = 10 , J = 4 ). Four sample frames are shown followed by the classification results (confusion matrix). Visual analysis of the wrongly classified frames show that these are indeed very similar to the misclassified class members. Adding features, e.g., optical flow, will improve the results. In this paper we discussed the concept of  X  X tratification learning, X  where the point cloud data is not assumed to belong to a single manifold, as commonly done in manifold learning and dimensionality reduction. We extended the work in [10] in the sense that the maximum likelihood is computed once for the whole dataset, and the probability density function is a mixture of Poisson laws, each one modeling different intrinsic dimensions and densities. The soft clustering and the estimation are simultaneously computed. This framework has been contrasted with a more standard two-steps approach, a combination of the local estimator introduced in [10] with the Information Bottleneck clustering technique [17]. In both methods we need to compute a kNN-graph which is precisely the computationally more expensive part. The mixture of Poisson estimators is faster than the two-steps approach one, it uses an EM algorithm, linear in the number of classes and observations, which converges in a few iterations.
 The mixture of Poisson model is not only clustering according to dimensionality, but to density as well. The introduction of additional observations and estimates can also help to separate points that although have the same dimensionality and density, belong to different manifolds. We would also like to study the use of ellipsoids instead of balls in the counting process in order to better follow the geometry of the intrinsic manifolds. Another aspect to study is the use of metrics more adapted to the nature of the data instead of the Euclidean distance. At the theoretical level, the bias of the PMM model needs to be studied. Results in these directions will be reported elsewhere.

