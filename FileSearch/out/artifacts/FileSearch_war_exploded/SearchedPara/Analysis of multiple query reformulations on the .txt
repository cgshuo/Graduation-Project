 1. Introduction
People have used Web search engines for 10 years now, and in consequence they have become familiar with the simplicity of Web searching. The interface design of Web search engines appears to be fairly stan-dardized: a search box for 20 X 30 characters and a search button next to it. A common belief is that a Web search requires only that users type in one or several keywords representing their information need, click on a search button, and wait for mere seconds for thousands of search results. Before entering keywords into the search box, however, there is a critical Web searching step: a query must be formulated. Query formu-lation requires two kinds of mappings: a semantic mapping of the vocabulary users employ in articulating the task onto the system  X  s vocabulary and an action mapping or set of actions recognizable by a search sys-tem ( Marchionini, 1995 ). Semantic mappings are declarative and action mappings are procedural in nature.
While action mappings may be relatively easy in Web searching, semantic mappings remain difficult be-cause people need to specify not something they do know but something they do not ( Belkin, 1980; Taylor, 1968 ).

Information retrieval is an interactive and iterative process. Previously, Swanson (1977) pointed out the essential role of the trial-and-error process in information retrieval. According to Swanson, an initial re-quest is a guess about the attributes of desired documents, after which the response of the IR system is em-ployed to revise the initial guess for another try. Efthimiadis (1996) identifies two query formulation stages as the initial query formulation stage in which the search strategy is constructed and the query reformula-tion stage in which the initial query is adjusted manually or with the assistance of a system. It is often ar-gued that query reformulation is not any easier than initial query formulation given that information retrieval (IR) systems provide very little assistance. Users enter the keywords they know in their initial query. If the initial query does not return the expected search results, users must then submit their second best keywords. This reformulation process can be even more frustrating and complex than the initial for-mulation because users often experience difficulty in incorporating information from previously retrieved documents into their queries ( French, Brown, &amp; Kim, 1997 ).

Despite the perception that Web searching is simple and easy ( Fast &amp; Campbell, 2004 ), approximately half of all Web users find they must reformulate their initial queries: 52% of the users in the 1997 Excite data set and 45% of the users in the 2001 Excite data set ( Spink, Jansen, Wolfram, &amp; Saracevic, 2002 ) in fact made modifications to their initial query. Several studies have investigated patterns of query refor-however, none went on to examine query reformulations beyond the level of descriptive analysis.
This research therefore aims to identify the patterns of multiple query reformulations that focus on se-quences of query reformulation per search session. This article enlarges the scope of a preliminary study by the authors ( Rieh &amp; Xie, 2001 ) through the addition of data sets and enhanced data analysis. The article also differs from the previous paper in applying models of interactive information retrieval (IR) (e.g., Bel-kin, 1993, 1996; Ingwersen, 1992, 1996; Saracevic, 1996, 1997 ). The framework of interactive IR models allows investigation of query reformulations in terms of interacting with the system, interpreting search re-sults, and shifting strategies beyond comparison of search queries requested and search results received. The study thus has three objectives: 1. characterizing the facets of query reformulation in Web searching; 2. identifying the patterns of multiple query reformulation in terms of sequences; and 3. exploring the ways in which search engines can support query reformulation more effectively in Web searching. 2. Theoretical framework: models of interactive information retrieval
Since the 1990s the literature on IR interaction has been growing, and a number of interactive IR models have been proposed as alternative models for traditional IR models. The traditional model represents IR as the matching or comparing of elements and processes between system and user, but the weakness of this model is that the interaction is not directly depicted. Yet any observation of an IR session reveals the involvement of other activities than just matching: users interact with information in an IR system by for-mulating queries, by interpreting retrieved items, by changing strategies, by making judgments, and by using information. All these activities are dependent upon users  X  goals, intentions, knowledge, and informa-tion problem situations. Three comprehensive IR models have been proposed by pioneers in advancing the interactive viewpoint in information retrieval: (1) The cognitive IR model by Ingwersen (1992, 1996) ;(2)
The model of IR as a support for interaction with information by Belkin (1993, 1996) ; and (3) The stratified interaction model by Saracevic (1996, 1997) . Although their specific components differ, the three share a theme: users are not passive recipients of retrieved texts but are active seekers of information.
While all three IR models offer sound theoretical bases for this research with respect to interactive que-rying behavior, Saracevic  X  s (1996, 1997) stratified model ( Fig. 1 ) provides the most useful framework for this study. Saracevic considers user and system as the two distinguishable participants in information re-trieval and views interaction as a dialogue between participants. Saracevic (1997) defines interaction as the  X  X  X equence of processes occurring in several connected levels or strata X  X  (p. 316). On the user side, there intentions), and situational (interaction with given or problems-at-hand). The computer side also has three levels/strata: engineering (hardware and its various operational attributes), processing (software, algo-rithms, and the various approaches of texts and queries), and content (information resources and their var-ious representations). User and computer sides meet at a surface level via an interface. The surface level involves not only searching and matching but also other processes including understanding attributes, browsing information, navigating information resources, determining processes, visualizing results, obtain-ing feedback, and passing judgments. As interaction proceeds between these elements, a series of dynamic adaptations inclines toward the surface level, while the use of information inclines toward the situational level. Feedback plays a critical role in adaptation and change.

A significant problem of Web searching is that most interactions take place on the surface level only. In the current design of Web search engines, the system has no effective way to understand the user  X  s cognitive, affective, and situational levels. The system can understand the user  X  s knowledge structure (cognitive), in-tent (affective), and tasks (situational) based only on query characteristics. The user also can interact with the system only on the surface level with little understanding of the system  X  s engineering, processing, and content levels. That is, despite a complex IR in which exist many elements from both the user and system sides, the user and the system meet only on the surface or interface level interacting through queries and results displayed. This explains the significance of analysis of query formulation and reformulation in better understanding of the interactive nature of IR on the Web. 3. Previous research on query formulation and reformulation
When users conduct information searches, they must have search strategies that combine the choice of search terms, operators, and tactics ( Vakkari, 2003 ). A number of studies have examined moves and tactics in searching for various online databases such as INQUIRER ( Wildemuth, 2004 ), PsychINFO ( Vakkari, (1990) present the concept of semantic operators, which they define as  X  X  X oves and actions that change the content of the query X  X  (p. 121). Despite numerous studies on search tactics and moves, Wildemuth (2004) states that it is difficult to draw general conclusions because each study employed a different set of search move definitions.

On the other hand, little research to date has investigated tactics or strategies in Web searching. Most studies of Web queries use transaction logs submitted to search engines or Web sites ( Spink &amp; Jansen, 2004; Spink et al., 2002; Spink et al., 2001 ), and with only a few exceptions these tend to analyze logs quan-
Spink and her colleagues examined more than three million search queries from the Excite Web search en-gine. The trend they detected in Excite search queries can be summarized as follows: (1) the number of terms per query is slowly increasing (mean of 2.4 terms in 1997 and of 2.6 terms in 2001); (2) the number of queries per user remains short (mean of 2.5 queries in 1997 and of 2.3 queries in 2001); (3) users view 1.7 pages per query consistently over the years; and (4) more users submit Boolean queries over the years though the percentages remain small (5% of queries in 1997 and 10% in 2001). Silverstein, Henzinger, Mar-ais, and Morica (1999) analyzed nearly one billion queries captured by the Altavista search engine over a period of six weeks with results apparently consistent with those of Excite queries. Wang, Berry, and Yang (2003) analyzed longitudinal user queries submitted to an academic Web site during a four-year period (1997 X 2001), and concluded that query patterns between the academic Web site and search engines such as Excite and AltaVista showed similarities.
 Few studies have specifically investigated reformulations of Web queries. Spink, Wolfram, Jansen, and
Saracevic (2001) examined patterns of query reformulation employed by Excite users and found that about 35% of the queries that were modified had the same number of terms as the preceding query. Their analysis showed that there is little change in search topic. Lau and Horvitz (1999) analyzed a data set of 4960 queries on the Excite search engine and revealed that most actions are either new queries or requests for additional information. Relatively few users refine their searches by means of specialization, generalization, or refor-mulation. Bruza and Dennis (1997) categorized query reformulation into 11 types and found that users fre-quently repeated a query they had already submitted. They also found that other main categories of reformulation were, in order of frequency, term substitutions, additions, and deletions. They claim that users infrequently split compound terms, make changes to spelling, punctuation, or grammatical case, or use derivative forms of words and abbreviations.

In summary, search queries are an integral component of both online database searching and Web searching because users must express their information problems through a series of queries. In light of
Saracevic  X  s stratified model, entering a search query is most popular among users conducting surface-level dialogues with interactive IR systems. Users must enter queries in a format understandable by the IR sys-tem, and if the search results do not meet their expectations they must reformulate their queries. Previous studies on query analyses in Web searching primarily concerned with query formulation and reformulation cal in the sense that both query terms and search results are constantly selected, evaluated, and modified.
Therefore, it can be argued that sequencing search moves into search tactics can be viewed as a component of search quality ( Debowski, 2001 ). This leads to the belief that an understanding of query reformulation sequences poses a significant research problem. 4. Methodology 4.1. Web log analysis
In the realm of Web searching studies, Web log analysis is one of the primary research methods with which to capture user interactions with a Web search system. Although this method has commonly been used in library and experimental information retrieval systems ( Peters, 1993 ), it has evolved into the most reasonable and non-intrusive means of collecting user X  X ystem interaction from a large number of Web users ( Spink &amp; Jansen, 2004 ). Web server logs often include IP addresses (or domain names) of requesters, dates and times of requests, commands being requested, and results of requests. Log analysis proves to be useful in generating statistics on Web site usages in general and further can generate inferences about Web site design as well as test theoretical hypotheses about the effects of different design variables based on user behavioral data ( Burton &amp; Walther, 2001 ). In this study, the log analysis method was used because it pro-vides the most naturally-occurring and large-scale data set of query modifications. 4.2. Sampling and data collection
Data from search query logs were collected from the Excite Web search engine on October 9, 2000, from users who accepted cookies in their Web browser. The logs in this study were scrutinized by capturing query logs based on user IDs so that users  X  multiple visits to the Excite site could be saved. Further, the data set was narrowed down by selecting search sessions in which users submitted six or more unique queries per search session. Prior to analyzing the data, several steps had to be taken to maintain the characteristics of the data set intended for the study. Each query log was reviewed manually, after which judgments were made as to whether the logs could be included in the data set. The first step was to select search sessions in which users in fact reformulated their queries more than five times. The next step was to drop the search sessions which contained pornographic queries. Those cases were dropped because of the impossibility of characterizing reformulations of pornographic queries in terms of generalization or specification. The data were then randomly sampled over two time periods: the initial data set of 183 search sessions was analyzed ( Rieh &amp; Xie, 2001 ) and the subsequent data set included another 130 search sessions for further analysis. The final data set analyzed for this study was composed of 313 search sessions.

Fig. 2 shows a sample of query logs in which the date stamps, queries, and the URLs of search results that were clicked by the user. This particular example illustrates a case in which a user engaged in a search session for 30 min (10:05 X 10:34) on one topic in the process of which six different queries were submitted. 4.3. Data analysis
The basic unit of analysis was query modification. Because the focus of this study is on query reformu-lation, the data on visited sites were not included in the analysis. It was determined by the limitation of the data set in reflecting only what users clicked and not what they viewed. Three distinct categories of refor-mulation emerged from the data analysis: content, format, and resource. Content modifications refer to those instances in which users made changes to the meaning of a query. Format modifications include the cases in which users made changes without altering the meaning of the query by means of using oper-ators, rearranging the order of multiple terms, re-spelling query terms, re-spacing terms, etc. Resource mod-ifications were developed to code those instances in which users intended to make changes in types of information resources (e.g., news, images, and music files).

The distinction between content and format is rooted in Fidel  X  s (1990) conceptual and operational moves. Whereas Fidel developed those variables with respect to search results (e.g., whether the results pro-duced better recall or precision), the coding scheme of this study attempts to understand users  X  intentions toward a query  X  s meaning. That is, this study focuses on whether users attempted to narrow or broaden the meaning of their queries, as opposed to examining whether users wished to narrow or broaden the results as Fidel analyzed them.

Once the coding of facets was completed, each facet was further broken down into sub-facets. If more than one modification occurred in a single move, this move was coded into two facets. Table 1 presents definitions and examples of query reformulation sub-facets. In addition to categorizing types of reformu-lation, the sequences of multiple reformulations were analyzed to identify the patterns that emerged within a single search session. All modifications within the search session were numbered sequentially and labeled in terms of nine sub-facets. Such a sequential analysis made it possible to find out whether a user followed the particular reformulation patterns consistently within one search session.

To test the reliability of the coding categories, two authors independently coded 50 randomly selected cases based on a coding scheme that provided both definitions and examples. The inter-coder reliability for types of facets and patterns of query reformulations was .95 and .88 respectively according to Holsti  X  s (1969) reliability formula. 2 The high degree of reliability demonstrates the credibility of the study. 5. Results
Study results are reported in two sections. The first presents the facets of query reformulation and the second reports on the sequences of multiple query reformulations. The investigation of both the facets and the sequences enables a better understanding of the query reformulation. 5.1. Facets and sub-facets of Web query reformulation
As reported in Section 4.3 Data analysis, Web query reformulation is characterized as having three fac-ets: content, format, and resource. Table 2 shows that most query reformulations involve changes of con-tent given that content modifications account for 80.3% of query reformulations. About 14.4% of the query reformulations are related to format alone. Only 2.8% of the modifications are associated with resource reformulation, and the remaining 2.5% of the reformulations cannot be defined.

The three types of facets are further categorized into nine sub-facets, as presented in Table 3 . The results reveal that Web users do not always start with a general query and attempt to specify it. Rather, when reformulating previous queries users take various approaches including generalization, replacement with synonyms, parallel movement and specification. In fact, parallel movement is the most popular means of content reformulation: 51.4% of such movements turn out to be parallel movements while specification accounts for 29.1% and generalization 15.8%. Users do not often change a query by simply replacing it with a synonym: only 4.9% of all reformulations are related to patterns of replacement with a synonym.
With respect to the format facet, it was noted that term variations (37.5%) and error corrections (36.2%) occurred more frequently than did operator usages (26.3%). As seen in Table 3 , the resource facet plays a less important role in query reformulation. 5.2. Patterns of Web query reformulation
Analyses of sequential query reformulations identify the following eight types of patterns: specified reformulation; generalized reformulation; parallel reformulation; building-block reformulation; dynamic reformulation; multi-tasking reformulation; recurrent reformulation; format reformulation.

Each pattern along with definitions and examples will be discussed herein. In all examples, [ ] represents not being a part of the queries; the brackets are used to denote the pattern identified. The abbreviations of sub-facets presented in Table 3 are used within brackets. For instance, specialization is presented as [S] and generalization as [G].
 Specified reformulation refers to those sessions in which a user persists in specifying previous queries.
Adding more terms and combining concepts are the most frequently used specified reformulations. While some cases of this pattern contain only specifications, other cases involve other types of query reformula-tions including format change, synonym replacement, and parallel movement. In one example in which pre-vious queries were consistently specified by the addition of terms, the user began with a typical two-word query, Hp drivers . However, the user reformulated the query by specifying the previous query, finally reach-ing the very specific query, Download pavilion hp audio drivers 6740 : Hp drivers ! [S1] Download pavilion hp drivers ! [S2] Download pavilion hp modem drivers ! [S3] Download pavilion hp modem drivers 6740 ! [S4] Download pavilion hp audio drivers 6740 The following example is reflective of cases in which a user mixes parallel and specified reformulations.
The case was characterized as specified reformulation because the user  X  s eventual goal seemed to be to in-crease query specificity. The first query began with three terms, and the sixth query was composed of six terms including three original terms: mobile AND home AND manufacturers ! [S1] mobile AND home AND manufacturers AND wood ! [P2] wooden AND home AND Romania ! [P3] wood AND mobile AND home ! [S4] wood
AND mobile AND home AND manufacturer ! [S5] wood AND mobile AND home AND manufac-turer AND romania
Generalized reformulation refers to those sessions in which a user begins with a narrow concept and con-tinues on to generalize through successive trials. Deleting terms is the most popular move for generalized reformulation. In the following example, the user began with a typical two-term query and went on to mod-ify it for greater specificity than in the previous query. The user then realized that the query was too nar-rowly presented. In the next three queries, the user attempted to broaden the scope of query, with the final query being a single word: trajectory AND method ! [S1]  X  X  X verage trajectory method software X  X  ! [G2]  X  X  X verage trajectory method X  X  ! [G3]  X  X  X rajectory methods X  X  ! [O4] trajectory AND methods ! [G5] trajectory
Below is another example of generalized reformulation. Note that the user also tried other types of search tactics including parallel reformulation. This poses an interesting case because the user  X  s original topic was liberal feminism , and in the fourth query feminism was combined with freudian theory eventually to produce the single word freud as the final query: liberal feminism ! [G1] types of feminism ! [P2] definitions of feminism ! [P3] freudian theory and feminism ! [G4] freudian theory ! [G5] freud
Parallel reformulation refers to those sessions in which a user modifies the queries from one aspect of an entity to another or from one thing to another, both of which share common characteristics. Typical ap-proaches for parallel reformulation include using entities that share common characteristics, using associa-tive aspects of a topic, and using a certain type of information resource. Some sessions consist of parallel reformulations alone. Other cases of this pattern might also involve query reformulations that are format-related or synonym-replaced. When a user appears to concentrate on parallel reformulation through suc-cessive queries, this paper labels it as parallel reformulation.

The following is an example of parallel reformulation using entities that share common character-istics. Note that all six queries are various foundation names. This kind of parallel reformulation is noteworthy because apparently the user continuously reformulated queries not necessarily because the previous query failed but because browsing different Web sites for foundations was required:
Littauer Foundation ! [P1] John D. and Catherine T. MacArthur Foundation ! [P2] Marble Founda-tion ! [P3] J. Willard Marriott Foundation ! [P4] Mars Foundation ! [P5] Marpat Foundation
Unlike in the previous instance, the following example shows a user utilizing the associative aspects of a topic. In this case, it is evident that the user attempts to find information related to Islam. After reformu-lating the query five times, the number of terms in the first and the last queries remain the same: two. This user utilized the first word (Islamic or Islam) consistently while trying different second words to represent various sub-topics:
Islamic culture ! [P1] Islamic symbol ! [P2] Islamic religious symbol ! [S3] Islam.com ! [P4] Islamic religion ! [P5] Islam originals
The following is a similar example but reflects instances in which a user incorporates related terms while making slight modifications in the meaning: senior citizen inspirationals ! [P1] senior citizen newa ! [E2] senior citizen news ! [P3] senior citizen interests ! [P4] senior citizen puzzles
The example below presents another approach to parallel reformulation in which the user consistently retains a type of resource (images) while trying various terms along with the term image. The first reformu-lation presents a modification in format, while the next five reformulations show that the user attempted to obtain images of various topics: images of solarsystem ! [E1] images of solar system ! [P2] image of waterfall ! [P3] images of seas ! [P4] images of milkway ! [P5] images of earth quake ! [P6] images of forests
Building-block reformulation refers to sessions in which a user identifies and combines the concepts from the previous queries and uses them in subsequent queries. In the following example, wedding, decorations, invitations, and do it yourself are the four distinct terms; they were combined in various formats and the last query included all four concepts that have previously been attempted: weddings ! [S1] wedding decorations ! [P2] wedding favors ! [U3] invitations ! [S4] wedding invita-tions ! [P5] Do it yourself weddings ! [S6] do it yourself weddings invitations and decorations
Dynamic reformulation refers to those sessions in which a user employs inconsistent patterns to increase specificity or generality, moving around from one type of query reformulation to another. This pattern represents a more dynamic query reformulation process than found in other types of reformulation patterns.

Below is one example of dynamic reformulation in which a user started with a general one-term query, then specifying the query and later switching from specification to generalization, and then from general-ization back to specification: condo ! [S1] condo NY or CT ! [S2] condo NY or CT sales ! [G3] realestateNY or CT ! [E4] reale-state NY or CT ! [S5] Westcheter county NY Real Estate
The next example shows a dynamic reformulation in which a user switched from specified reformulation to parallel reformulation and then repeated the same process: SC Karate ! [S1] SC Karate Zombie squad ! [S2] SC Karate Zombie squad of Anderson ! [P3] SCSKA [South Carolina Sports Karate Association] ! [S4] SCSKA Anderson SC ! [S5] SCSKA Anderson SC Karate ! [P6] Ray Alexander family Karate
In another example of dynamic reformulation, four types of reformulation patterns occur. The user be-gan with a typical two-term query, specified it, made modifications in format, moved in parallel, specified again, and finally generalized. The user continued to specify and corrected an error at the end. In a com-parison of the first and last queries, only one word, colleges , was seen to have been added after trying eight different queries: athletic training ! [S1] athletic traiing programs ! [E2] athletic training programs ! [P3] athletic train-ing majors ! [S4] athletic training college majors ! [G5] athletic training ! [S6] athletic training clleges ! [E7] athletic training colleges The following example also shows that query reformulation is not always straightforward or well-planned.
In order to add two more terms to the initial query, this user had to go through a dynamic reformulation process involving specification, error correction, and generalization: pinnacle ! [S1] pinnacle spekers ! [E2] pinnacle speakers ! [S3] pinnacle cinema speakers ! [G4] audio ! [S5] pinnacle speaker systems
Multi-tasking reformulation refers to those sessions in which a user looks for two or more topics simulta-neously in the same search session. In the following example, the user moved between three or four topics with seven successive queries. This user kept the same query for jfk assassination, but made modifications regarding sports topics: jfk assassination ! [U1] Michael Jordan ! [P2] Espn.com ! [P3] Michael Jordan ! [P4] nfl football spreads ! [P5] Michael Jordan ! [U6] Jfk assassination
Recurrent reformulation represents cases in which a user enters exactly the same query that has been already used two or more steps previously. As the following example shows, the user employed the same query, matchmaker , four times over the nine queries submitted. Interestingly, the last and the first queries were identical: matchmaker ! [U1] weather ! [U2] matchm,aker ! [E3] matchmaker ! [U4] purdue ! [U5] dura-max ! [U6] Abercrombie ! [S7] Abercrombie and fitch ! [U7] matchmaker
Format reformulation refers to those sessions in which a user attempts to figure out how to formulate his/her queries correctly in terms of format. Format reformulation might include term variation, operator usage, operator change, and error correction. The following is an example of format formulation by term variation:  X  X  X -tranform properties X  X  ! [T1]  X  X  X tranform properties X  X  ! [T2]  X  X  X  Tranform properties X  X  ! [T3]  X  X  X  Tranform X  X  ! [T4]  X  X  X -Transform properties X  X  ! [G5]  X  X  X -Transform X  X 
Another example is format formulation by operator change: software + design + automobile ! [O1] software:design:automobile ! [O2] software X  X  X esign X  X  X utomo-bile ! [O3] software and design and automobile ! [O4] automobile and design and software ! [O5] automobile + design + software ! [O6] automobile and design and software ! [O7] automo-bile + design + software ! [O8] automobile and design and software
The following example illustrates format formulation by error correction:  X  X  X rbitrack X  X  ! [E1]  X  X  X rbatrack X  X  ! [E2]  X  X  X rba track X  X  ! [E3]  X  X  X rbi track X  X  ! [E4]  X  X  X rbitrek X  X  ! [E5]  X  X  X rbit track X  X  6. Model of Web query reformulation
The nature of information retrieval is interaction. IR interaction aids users in clarifying their informa-tion needs and finding the information that will best resolve their information problem. An examination of three major interactive IR models ( Ingwersen  X  s cognitive model, 1992, 1996 ; Belkin  X  s episode model, 1993, 1996 ; Saracevic  X  s stratified model, 1996, 1997 ) reveals that Saracevic  X  s model was the most applicable in understanding and interpreting query reformulation data. In Saracevic  X  s (1996, 1997) stratified model, there are three levels of IR interaction: cognitive, affective, and situational from the user side. The system side interplay between the surface and deeper levels of interaction. The deeper-level cognitive, affective, and sit-uational aspects are employed on the surface level to specify and modify queries. Query formulation and reformulation demonstrates just such an interplay. The deeper-level aspects of interaction can change fre-quently, which can lead to interaction on surface level, e.g., change in queries or tactics.
Adapting Saracevic  X  s stratified model (1997) , the authors develop a model of Web query reformulation face to express their needs in terms of query formulation and reformulation. Query reformulation is the product of user interaction with the cognitive, affective, and situation levels. More importantly, the prob-lems users encounter in the information retrieval process can to some extent be represented in the process of query reformulation (e.g., facets of query reformulation, patterns of query reformulation, frequency of query reformulation, etc.). Query reformulation is thus an essential element in understanding interactions in the information retrieval process. In the following paragraphs, the authors discuss the impact of the three levels of interactions on patterns of query reformulation on the user side. The characteristics of the three facets of query reformulation (e.g., content, format, and resource) and their implications for facets and pat-terns of query reformulation in design are discussed in the next section.

The query reformulation patterns identified in this study provide insights into the nature of IR interac-tion based on information needs expressed on the surface level. Four of the identified reformulation pat-terns X  X pecified reformulation, parallel reformulation, generalized reformulation, and building-block reformulation X  X re not necessarily new findings as they have already been identified in previous studies (e.g. Bruza &amp; Dennis, 1997; Lau &amp; Horvitz, 1999 ). Notably, however, this study has examined these pat-terns of query reformulation based on analysis of sequences of multiple queries rather than of just one query movement.

These four patterns are influenced by interactions on the cognitive, affective, and situational levels. For example, on the cognitive level the query reformulation process is directed by user interactions with texts, especially their interactions with search results. Users interact with the results of their searches, make relevance judgments, and reformulate queries accordingly by specifying their queries (specified reformula-tion), generalizing their queries (generalized reformulation), associating one query with another in terms of common characteristics (parallel reformulation), or combining their previous queries (building-block refor-mulation). Here is an example from the data. A user tried to download the hp audio driver 6740, started with a general search of hp drivers , and attempted to find specific information about that driver but appar-ently failed after interacting with the search results. Either the results did not cover the information or the user might not have been sufficiently patient in going over all the results. The user gradually specified the query until reaching the most specific one conveying relevant information. In these patterns, a user  X  s knowl-edge structure and status evolve in the process of query reformulation.

The more significant contributions of this study are the identification of three new query reformulation patterns that have not been extensively examined in previous studies: the dynamic reformulation, the multi-tasking reformulation, and the recurrent reformulation. These reformulation patterns are the products of interaction on the cognitive, affective, and situation levels as well.

Users tend to take the dynamic approach in query formulation when they encounter problems caused by the problematic situation that led to the search, by the results provided by the system, and/or by user inter-actions, beliefs, and motivations. For example, when a user conducted searches on New York and Connect-icut condos, interactions with the search results led first to specified reformulation and later to generalized reformulation. Eventually the user entered Westchester County NY Real Estate as a final query. This query information problem and intention that directed the search. There are few studies discussing this type of query reformulation pattern.

Another finding of interest in this study is the identification of the multi-tasking reformulation. Accord-ing to study results, many users do not engage in just one search topic, occasionally conducting multiple searches simultaneously. In one example, a user searched jfk assassination and Michael Jordan at the same time. Multi-tasking reformulation makes the three levels of interactions more complicated since users must manage interactions with the system for two or more topics simultaneously on the surface level. They must sions about how the situation can be resolved on the situational level. Spink, Park, Jansen, and Pedersen (in press) echo the finding of this study by pointing out that effective interactive IR is important for coordinat-ing switches between tasks and that multi-tasking information behavior is largely under-researched. More investigation is needed on patterns of multi-tasking reformulation.

The recurrent reformulation as noted by Bruza and Dennis (1997) was also identified in this study. No previous research has analyzed this reformulation in detail. In the example presented in the results section, matchmaker occurred at the beginning, middle, and end of the query reformulation process. Recurrent reformulation indicates that users attempt different queries, compare the search results corresponding to each query, and finally re-enter the previous query if it seems promising. The uncertainty as well as the interactive nature of information retrieval process forces users to examine their results repeatedly. 7. Implications for Web search engine design
A significant implication of this study is in its evidence of the complexity of query reformulation. The evidence was obtained by identifying a variety of patterns in multiple query reformulation. More impor-tantly, the results of this study demonstrate the importance of interactions in the process of query reformu-lation. A critical question in research on query reformulation and query expansion has been which levels of the reformulation process should be automatic, interactive, or manual (e.g., Bates, 1990 ). More importantly to address is the question of how to design Web search tools that facilitate collaboration between the system and the user  X  s cognitive involvement ( Xie, 2003 ). The findings of this study seem to provide a strong basis for seeking answers to those questions.

This study found that query reformulation can be characterized as possessing the facets of content, for-mat, and resource. The distinction between the three facets is important in terms of practical implications for the design of Web search tools. Among the three facets, resource reformulation was the least popular activity with Excite users. However, most current search engines provide multiple resource options in such a way that users can change the type of resource from Web to Images and from Images to News while retain-ing the same query. According to the findings of this study, such a feature may not be particularly beneficial as users rarely change the type of resource during the process of Web searching.

The results of this study also indicate that format reformulation should be considered separately from other types of content-related reformulation patterns when designing reformulation tools. This is because format reformulation can be reduced or minimized as query reformulations decrease the efficiency of the information retrieval process. Format reformulations normally occur when users are uncertain as to how to construct their query in a proper format or when they make an error in the query formulation pro-cess. In the example of a search for automobile design software , the user reformulated the query eight times to obtain the right format for operator usage. If the user were to know operator usage or could receive assistance from that system, the information retrieval process could be considerably more effective. There-fore, format reformulation is one of the areas in which systems can take control of user queries by correct-ing obviously erroneous queries.

On the other hand, some content reformulations can assist users in clarifying what they need to enter and how to compromise their need to find the best information. The nature of content reformulation tends to be highly interactive because users can keep changing their queries not only by entering new queries but also retrying previous queries or combining previous ones. Thus, Web users can benefit from an interactive search tool that will assist them in coming up with more appropriate queries, which better represent their information needs and that eventually lead them to obtain better search results.

This research indicates, however, that query reformulation patterns on the Web differ from those in tra-ditional IR systems: Web users demonstrate much more diverse reformulation patterns than those identi-fied in traditional IR systems (e.g., Vakkari, 2000; Wildemuth, 2004 ). In traditional information retrieval (IR) systems, a variety of techniques have been proposed to deal with the general problem of query formu-lation and reformulation. Relevance feedback is possibly the best-known technique for supporting query reformulation ( Salton &amp; Buckley, 1990 ). Belkin and his colleagues carried out a series of studies within the Text Retrieval Conference (TREC) Interactive Track in which they attempted to address this problem by integrating interface design with development of the relevance feedback that suggested both positive and understand and that in fact it was preferred over automatic query expansion by study participants. More recently, Jansen (2005) designed an automated assistance application that includes spelling, query refine-ment, results management, and relevance feedback, and found that users are willing to use automated assis-tance, especially after viewing results and locating relevant documents.

The current idea of developing a query reformulation tool is not entirely new in the world of Web search engines. Several Web search engines have already implemented features supporting query reformulations, such as query refinement (e.g., Altavista  X  s Refine Your Search) and spelling correction (e.g., Google  X  s Did
You Mean?). However, the evaluation study of a query refinement tool called ZOOM IN implemented in
According to the study, the major problem with the ZOOM IN tool was not related to the usability or effec-tiveness of its interface but to the usefulness of terms suggested in the tool. Existing query reformulation tools in Web search engines may be able to assist users only in respect to more focused query reformulation patterns such as format reformulation and specified reformulation while failing to fully supporting scat-tered patterns including dynamic, multi-tasking, and recurrent reformulations.

The results of this study demonstrate that it is important to develop search tools that can support the complex query reformulation behaviors that occur multiple times in the process of IR interaction. To better support various kinds of query reformulation patterns identified in this study, innovative search tools are needed that offer much more dynamic and interactive features. Based on the results of this study, an inter-active reformulation tool can be designed to promote and incorporate user involvement in the process of query reformulation. The authors propose the following functions:
Provide a secondary window in addition to the main window of a search engine in which user and system interact.
 Allow the tracking, editing, and storing of the queries deployed by users.
 Enable users to resubmit any queries that have been used at any point in the search process. Facilitate users in manipulating multiple queries in an efficient way.
 Assist users in reformulating queries by providing context-based term suggestions.

Provide the ability to select query terms from the term suggestion list and allow users to modify them. 8. Conclusion
This paper has demonstrated that interactive IR can be conceptualized as a useful framework for under-standing patterns of multiple query reformulation on the Web. Using the stratified model of IR interaction ( Saracevic, 1996, 1997 ), the results of this study reveal that although users seem to interact with a search engine on the surface level by submitting their queries to a search box, they are actually interacting with the search engine on the cognitive, affective, and situational levels in order to determine whether they want to submit new queries, add more words, delete words, replace words with synonyms, combine two previous queries, or simply re-enter previous queries.

The approach taken in this study differs from most of the previous studies on Web query transaction log analysis. The semantic meaning of Web queries was examined beyond facet analysis. To be specific, each search session was reviewed and then manually coded along with the facets of queries to identify the exten-sive patterns of query reformulation. Additionally, analyses focused on sequences of multiple query refor-mulations that helped better understand people  X  s interactions with multiple levels rather than examining two queries submitted next each other. In this article, the authors added 130 more search sessions to the previous data set ( N = 183) and were able to identify a few new types of reformulation patterns. For in-stance, building-block, multi-tasking, and recurrent reformulation are new patterns that were not found in the previous study ( Rieh &amp; Xie, 2001 ).

As discussed earlier in Section 4.1., Web log analysis has become a useful method of collecting and ana-lyzing user system interactions in non-intrusive and naturalistic environments. However, analyzing query reformulations based solely on transaction logs does have its limitations. While researchers can determine how users reformulate their queries, they are unable to understand why users reformulate their queries in their particular ways and the reasons that prompt users to reformulate their queries. The intentions and tasks of users are implicitly embedded in the queries, but there is as yet no way in which researchers can firmly relate query reformulations to specific intentions or change of intentions.

The formulation and reformulation of queries is one of the most difficult and challenging tasks on the user side, even in a Web searching environment that appears to be easy to learn and use. Therefore, under-standing query behaviors and designing search tools to support those behaviors remains a significant re-search problem. Further research should examine the factors that lead users to reformulate their queries. New research is needed so that more data can be gathered on the cognitive, affective, and situational levels.
Multiple data collection methods (transaction logs, thinking aloud, interviews, etc.) can be employed to fur-ther explore the patterns of Web query reformulation.
 Acknowledgement
The authors wish to thank Yong-Mi Kim for her assistance in data analysis and the two anonymous reviewers for their insightful comments on an earlier version of this paper.
 References
