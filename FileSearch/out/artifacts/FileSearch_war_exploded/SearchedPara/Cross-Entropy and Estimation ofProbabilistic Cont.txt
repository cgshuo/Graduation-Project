 Probabilistic context-free grammars are able to de-scribe hierarchical, tree-shaped structures underly-ing sentences, and are widely used in statistical nat-ural language processing; see for instance (Collins, 2003) and references therein. Probabilistic context-free grammars seem also more suitable than finite-state devices for language modeling, and several language models based on these grammars have been recently proposed in the literature; see for in-stance (Chelba and Jelinek, 1998), (Charniak, 2001) and (Roark, 2001).

Empirical estimation of probabilistic context-free grammars is usually carried out on tree banks, that is, finite samples of parse trees, through the max-imization of the likelihood of the sample itself. It is well-known that this method also minimizes the cross-entropy between the probability distribution induced by the tree bank, also called the empirical distribution, and the tree probability distribution in-duced by the estimated grammar.

In this paper we generalize the maximum like-lihood method, proposing an estimation technique that works on any unrestricted tree distribution de-fined over an infinite set of trees. This generalization is theoretically appealing, and allows us to prove un-expected properties of the already mentioned maxi-mum likelihood estimator for tree banks, that were not previously known in the literature on statistical natural language parsing. More specifically, we in-vestigate the following information theoretic quanti-ties  X  the cross-entropy between the unrestricted tree  X  the derivational entropy of the estimated prob-These two quantities are usually unrelated. We show that these two quantities take the same value when the probabilistic context-free grammar is trained us-ing the minimal cross-entropy criterion. We then translate back this property to the method of max-imum likelihood estimation. Our general estima-tion method also has practical applications in cases one uses a probabilistic context-free grammar to ap-proximate strictly more powerful rewriting systems, as for instance probabilistic tree adjoining gram-mars (Schabes, 1992).

Not much is found in the literature about the estimation of probabilistic grammars from infinite distributions. This line of research was started in (Nederhof, 2005), investigating the problem of training an input probabilistic finite automaton from an infinite tree distribution specified by means of an input probabilistic context-free grammar. The prob-lem we consider in this paper can then be seen as a generalization of the above problem, where the in-put model to be trained is a probabilistic context-free grammar and the input distribution is an unrestricted tree distribution. In (Chi, 1999) an estimator that maximizes the likelihood of a probability distribu-tion defined over a finite set of trees is introduced, as a generalization of the maximum likelihood es-timator. Again, the problems we consider here can be thought of as generalizations of such estimator to the case of distributions over infinite sets of trees or sentences.

The remainder of this paper is structured as fol-lows. Section 2 introduces the basic notation and definitions and Section 3 discusses our new esti-mation method. Section 4 presents our main re-sult, which is transferred in Section 5 to the method of maximum likelihood estimation. Section 6 dis-cusses some simple examples, and Section 7 closes with some further discussion. Throughout this paper we use standard notation and definitions from the literature on formal languages and probabilistic grammars, which we briefly sum-marize below. We refer the reader to (Hopcroft and Ullman, 1979) and (Booth and Thompson, 1973) for a more precise presentation.

A context-free grammar (CFG) is a tuple G = ( N,  X , R, S ) , where N is a finite set of nonterminal symbols,  X  is a finite set of terminal symbols dis-joint from N , S  X  N is the start symbol and R is a finite set of rules. Each rule has the form A  X   X  , where A  X  N and  X   X  (  X   X  N )  X  . We denote by L ( G ) and T ( G ) the set of all strings, resp., trees, generated by G . For t  X  T ( G ) , the yield of t is denoted by y ( t ) .

For a nonterminal A and a string  X  , we write f ( A,  X  ) to denote the number of occurrences of A in  X  . For a rule ( A  X   X  )  X  R and a tree t  X  T ( G ) , f ( A  X   X , t ) denotes the number of occurrences of A  X   X  in t . We let f ( A, t ) = P  X  f ( A  X   X , t ) .
A probabilistic context-free grammar (PCFG) is a pair G = ( G, p G ) , with G a CFG and p G a func-tion from R to the real numbers in the interval [0 , 1] . A PCFG is proper if for every A  X  N we have P  X  p G ( A  X   X  ) = 1 . The probability of t  X  T ( G ) is the product of the probabilities of all rules in t , counted with their multiplicity, that is, The probability of w  X  L ( G ) is the sum of the prob-abilities of all the trees that generate w , that is, A PCFG is consistent if P t  X  T ( G ) p G ( t ) = 1 .
In this paper we write log for logarithms in base 2 and ln for logarithms in the natural base e . We also assume 0  X  log 0 = 0 . We write E p to denote the expectation operator under distribution p . In case G is proper and consistent, we can define the deriva-tional entropy of G as the expectation of the infor-mation of parse trees in T ( G ) , computed under dis-tribution p G , that is, Similarly, for each A  X  N we also define the non-terminal entropy of A as Let T be an infinite set of (finite) trees with inter-nal nodes labeled by symbols in N , root nodes la-beled by S  X  N and leaf nodes labeled by symbols in  X  . We assume that the set of rules that are ob-served in the trees in T is drawn from some finite set R . Let p T be a probability distribution defined over T , that is, a function from T to set [0 , 1] such that The skeleton CFG underlying T is defined as G = ( N,  X , R, S ) . Note that we have T  X  T ( G ) and, in the general case, there might be trees in T ( G ) that do not appear in T . We wish anyway to approx-imate distribution p T the best we can, by turning G into some proper PCFG G = ( G, p G ) and set-ting parameters p G ( A  X   X  ) appropriately, for each ( A  X   X  )  X  R .

One possible criterion is to choose p G in such a way that the cross-entropy between p T and p G is minimized, where we now view p G as a probability distribution defined over T ( G ) . The cross-entropy between p T and p G is defined as the expectation un-der distribution p T of the information, computed un-der distribution p G , of the trees in T ( G ) Since G should be proper, the minimization of (5) is subject to the constraints P  X  p G ( A  X   X  ) = 1 , for each A  X  N .
 To solve the minimization problem above, we use Lagrange multipliers  X  A for each A  X  N and define the form We now view  X  as a function of all the  X  A and the p
G ( A  X   X  ) , and consider all the partial derivatives of  X  . For each A  X  N we have For each ( A  X   X  )  X  R we have  X  X  G ( A  X   X  )
We now need to solve a system of | N | + | R | equa-tions obtained by setting to zero all of the above par-tial derivatives. From each equation  X   X   X  X  we obtain We sum over all strings  X  such that ( A  X   X  )  X  R From each equation  X   X   X  X  P  X  p G ( A  X   X  ) = 1 for each A  X  N (our origi-nal constraints). Combining with (8) we obtain Replacing (9) into (7) we obtain, for every rule ( A  X   X  )  X  R , The equations in (10) define the desired estimator for our PCFG, assigning to each rule A  X   X  a prob-ability specified as the ratio between the expected number of A  X   X  and the expected number of A , under the distribution p T . We remark here that the minimization of the cross-entropy above is equiva-lent to the minimization of the Kullback-Leibler dis-tance between p T and p G , viewed as tree distribu-tions. Also, note that the likelihood of an infinite set of derivations would always be zero and therefore cannot be considered here.

To be used in the next section, we now show that the PCFG G obtained as above is consistent. The line of our argument below follows a proof provided in (Chi and Geman, 1998) for the maximum like-lihood estimator based on finite tree distributions. Without loss of generality, we assume that in G the start symbol S is never used in the right-hand side of a rule.

For each A  X  N , let q A be the probability that a derivation in G rooted in A fails to terminate. We can then write The inequality follows from the fact that the events considered in the right-hand side of (11) are not mu-tually exclusive. Combining (10) and (11) we obtain Summing over all nonterminals we have  X  X = X where f c ( B, t ) indicates the number of times a node labeled by nonterminal B appears in the derivation tree t as a child of some other node.

From our assumptions on the start symbol S , we have that S only appears at the root of the trees in T ( G ) . Then it is easy to see that, for every A 6 = S , we have E p E p T f c ( S, t ) = 0 and E p T f ( S, t ) = 1 . Using these relations in (12) we obtain from which we conclude q S = 0 , thus implying the consistency of G . In this section we present the main result of the pa-per. We show that, when G = ( G, p G ) is estimated by minimizing the cross-entropy in (5), then such cross-entropy takes the same value as the deriva-tional entropy of G , defined in (3).

In (Nederhof and Satta, 2004) relations are de-rived for the exact computation of H d ( p G ) . For later use, we report these relations below, under the as-sumption that G is consistent (see Section 3). We have Quantities H A ( p G ) , A  X  N , have been defined in (4). For each A  X  N , quantity out G ( A ) is the sum of the probabilities of all trees generated by G , hav-ing root labeled by S and having a yield composed of terminal symbols with an unexpanded occurrence of nonterminal A . Again, we assume that symbol S does not appear in any of the right-hand sides of the rules in R . This means that S only appears at the root of the trees in T ( G ) . Under this condi-tion, quantities out G ( A ) can be exactly computed by solving the following system of linear equations (see also (Nederhof, 2005)) for each A 6 = S We can now prove the equality where G is the PCFG estimated by minimizing the cross-entropy in (5), as described in Section 3. We start from the definition of cross-entropy
H ( p T || p G ) = From our estimator in (10) we can write Replacing (18) into (17) gives Comparing (19) with (13) we see that, in order to prove the equality in (16), we need to show relations for every A  X  N . We have already observed in Sec-tion 3 that, under our assumption on the start symbol S , we have We now observe that, for any A  X  N with A 6 = S and any t  X  T ( G ) , we have For each A  X  N with A 6 = S we can then write Once more we use relation (18), which replaced in (23) provides Notice that the linear system in (14) and (15) and the linear system in (21) and (24) are the same. Thus we conclude that quantities E p are the same for each A  X  N . This completes our proof of the equality in (16). Some examples will be discussed in Section 6.

Besides its theoretical significance, the equality in (16) can also be exploited in the computation of the cross-entropy in practical applications. In fact, cross-entropy is used as a measure of tightness in comparing different models. In case of estimation from an infinite distribution p T , the definition of the cross-entropy H ( p T || p G ) contains an infinite sum-mation, which is problematic for the computation of such quantity. In standard practice, this problem is overcome by generating a finite sample T ( n ) of large size n , through the distribution p T , and then comput-ing the approximation (Manning and Sch  X  utze, 1999)
H ( p T || p G )  X  X  X  where f ( t, T ( n ) ) indicates the multiplicity, that is, the number of occurrences, of t in T ( n ) . However, in practical applications n must be very large in order to have a small error. Based on the results in this section, we can instead compute the exact value of H ( p T || p G ) by computing the derivational entropy H d ( p G ) , using relation (13) and solving the linear system in (14) and (15), which takes cubic time in the number of nonterminals of the grammar. In natural language processing applications, the es-timation of a PCFG is usually carried out on the ba-sis of a finite sample of trees, called tree bank. The so-called maximum likelihood estimation (MLE) method is exploited, which maximizes the likeli-hood of the observed data. In this section we show that the MLE method is a special case of the esti-mation method presented in Section 3, and that the results of Section 4 also hold for the MLE method.
Let T be a tree sample, and let T be the under-lying set of trees. For t  X  T , we let f ( t, T ) be the multiplicity of t in T . We define and let f ( A, T ) = P  X  f ( A  X   X , T ) . We can in-duce from T a probability distribution p T , defined over T , by letting for each t  X  T Note that P t  X  T p T ( t ) = 1 . Distribution p T is called the empirical distribution of T .

Assume that the trees in T have internal nodes labeled by symbols in N , root nodes labeled by S and leaf nodes labeled by symbols in  X  . Let also R be the finite set of rules that are observed in T . We define the skeleton CFG underlying T as G = ( N,  X , R, S ) . In the MLE method we proba-bilistically extend the skeleton CFG G by means of a function p G that maximizes the likelihood of T , defined as subject to the usual properness conditions on p G . Such maximization provides the estimator (see for instance (Chi and Geman, 1998))
Let us consider the estimator in (10). If we replace distribution p T with our empirical distribution p T , we derive This is precisely the estimator in (28).

From relation (29) we conclude that the MLE method can be seen as a special case of the general estimator in Section 3, with the input distribution de-fined over a finite set of trees. We can also derive the well-known fact that, in the finite case, the maxi-mization of the likelihood p G ( T ) corresponds to the minimization of the cross-entropy H ( p T || p G ) .
Let now G = ( G, p G ) be a PCFG trained on T us-ing the MLE method. Again from relation (29) and Section 3 we have that G is consistent. This result has been firstly shown in (Chaudhuri et al., 1983) and later, with a different proof technique, in (Chi and Geman, 1998). We can then transfer the results of Section 4 to the supervised MLE method, show-ing the equality This result was not previously known in the litera-ture on statistical parsing of natural language. Some examples will be discussed in Section 6. In this section we discuss a simple example with the aim of clarifying the theoretical results in the previ-ous sections. For a real number q with 0 &lt; q &lt; 1 , Figure 1: Derivational entropy of G q and cross-entropies for three different corpora. consider the CFG G defined by the two rules S  X  aS and S  X  a , and let G q = ( G, p G,q ) be the proba-bilistic extension of G with p G,q ( S  X  aS ) = q and p
G,q ( S  X  a ) = 1  X  q . This grammar is unambigu-ous and consistent, and each tree t generated by G has probability p G,q ( t ) = q i  X  (1  X  q ) , where i  X  0 is the number of occurrences of rule S  X  aS in t .
We use below the following well-known relations ( 0 &lt; r &lt; 1 )
The derivational entropy of G q can be directly computed from its definition as H See Figure 1 for a plot of H d ( p G,q ) as a function of q .

If a tree bank is given, composed of occurrences of trees generated by G , the value of q can be es-timated by applying the MLE or, equivalently, by minimizing the cross-entropy. We consider here sev-eral tree banks, to exemplify the behaviour of the cross-entropy depending on the structure of the sam-ple of trees. The first tree bank T contains a single tree t with a single occurrence of rule S  X  aS and a single occurrence of rule S  X  a . We then have p
T ( t ) = 1 and p G,q ( t ) = q  X  (1  X  q ) . The cross-entropy between distributions p T and p G,q is then The cross-entropy H ( p T , p G,q ) , viewed as a func-tion of q , is a convex- X  function and is plotted in Figure 1 (line indicated by K d = 1 , see below). We can obtain its minimum by finding a zero for the first derivative which gives q = 0 . 5 . Note from Figure 1 that the minimum of H ( p T , p G,q ) crosses the line cor-responding to the derivational entropy, as should be expected from the result in Section 4.

More in general, for integers d &gt; 0 and K &gt; 0 , consider a tree sample T d,K consisting of d trees t i , 1  X  i  X  d . Each t i contains k i  X  0 occurrences of rule S  X  aS and one occurrence of rule S  X  a . Thus we have p T (1  X  q ) . We let P d i =1 k i = K . The cross-entropy is In Figure 1 we plot H ( p T 0 . 5 and in the case K these curves intersect with the curve corresponding to the derivational entropy H d ( p G,q ) at the points were they take their minimum values. We have shown in this paper that, when a PCFG is estimated from some tree distribution by minimiz-ing the cross-entropy, then the cross-entropy takes the same value as the derivational entropy of the PCFG itself. As a special case, this result holds for the maximum likelihood estimator, widely applied in statistical natural language parsing. The result also holds for the relative weighted frequency esti-mator introduced in (Chi, 1999) as a generalization of the maximum likelihood estimator, and for the es-timator introduced in (Nederhof, 2005) already dis-cussed in the introduction. In a journal version of the present paper, which is under submission, we have also extended the results of Section 4 to the unsuper-vised estimation of a PCFG from a distribution de-fined over an infinite set of (unannotated) sentences and, as a particular case, to the well-knonw inside-outside algorithm (Manning and Sch  X  utze, 1999).
In practical applications, the results of Section 4 can be exploited in the computation of model tight-ness. In fact, cross-entropy indicates how much the estimated model fits the observed data, and is com-monly exploited in comparison of different models on the same data set. We can then use the given relation between cross-entropy and derivational en-tropy to compute one of these two quantities from the other. For instance, in the case of the MLE method we can choose between the computation of the derivational entropy and the cross-entropy, de-pending basically on the instance of the problem at hand. As already mentioned, the computation of the derivational entropy requires cubic time in the num-ber of nonterminals of the grammar. If this num-ber is large, direct computation of (5) on the corpus might be more efficient. On the other hand, if the corpus at hand is very large, one might opt for direct computation of (3).
 Helpful comments from Zhiyi Chi, Alberto lavelli, Mark-Jan Nederhof and Khalil Simaan are grate-fully acknowledged.

