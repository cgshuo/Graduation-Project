 In the past years, kernel methods, like support vector machines (SVM), have achieved great success in many learning problems, such as classification and regression. For such tasks, the performance strongly depends on the choice of the kernels used. A good kernel function, which implicitly char-acterizes a suitable transformation of input data, can greatly benefit the accuracy of the predictor. However, when there are many available kernels, it is difficult for the user to pick out a suitable one. Kernel learning has been developed to jointly learn both a kernel function and an SVM classifier. Chapelle et al. [1] present several principles to tune parameters in kernel functions. In particular, when the learned kernel is restricted to be a linear combination of multiple basis kernels, the prob-lem of learning the combination coefficients as well as an SVM classifier is usually called multiple kernel learning (MKL). Lanckriet et al. [2] formulate the MKL problem as a quadratically con-strained quadratic programming problem, which implicitly uses an L 1 norm constraint to promote sparse combinations. To enhance the computational efficiency, different approaches for solving this MKL problem have been proposed using SMO-like strategies [3], semi-infinite linear program [4], gradient-based methods [5], and second-order optimization [6]. Some other subsequent work ex-plores more generality of multiple kernel learning by promoting non-sparse [7, 8] or group-sparse [9] combinations of basis kernels, or using other forms of learned kernels, e.g., a combination of an exponential number of kernels [10] or nonlinear combinations [11, 12, 13].
 Most existing MKL approaches employ the objective function used in SVM. With an acceptable empirical loss, they aim to find the kernel which leads to the largest margin of the SVM classi-fier. However, despite the substantial progress in both the algorithmic design and the theoretical understanding for the MKL problem, none of the approaches seems to reliably outperform baseline methods, like SVM with the uniform combination of basis kernels [13]. As will be shown in this paper, the large margin principle used in these methods causes the scaling problem and the initializa-tion problem, which can strongly affect final solutions of learned kernels as well as performances. It implicates that the large margin preference can not reliably result in a good kernel, and thus the margin itself is not a suitable measure of the goodness of a kernel.
 Motivated by the generalization bounds for SVM and kernel learning, we use the ratio between the margin of the SVM classifier and the radius of the minimum enclosing ball (MEB) of data in the feature space endowed with the learned kernel as a measure of the goodness of the kernel, and propose a new kernel learning formulation. Our formulation differs from the radius-based principle by Chapelle et al. [1]. Their principle is sensitive to kernel scalings when a nonzero empirical loss is allowed, also causing the same problems as the margin-based formulations. We prove that our formulation is invariant to scalings of learned kernels, and also invariant to initial scalings of basis kernels and to the types (e.g., L 1 or L 2 ) of norm constraints on kernel parameters for the MKL problem. Therefore our formulation completely addresses the scaling and initialization problems. Experiments show that our approach gives significant performance improvements both over SVM with the uniform combination of basis kernels and over other state-of-art kernel learning methods. Our proposed kernel learning problem can be reformulated to a tri-level optimization problem. We establish the differentiability of a general family of multilevel optimization problems. This enables us to generally tackle the radius of the minimal enclosing ball, or other complicated optimal value functions, in the kernel learning framework by simple gradient-based methods. We hope that our results will also benefit other learning problems.
 The paper is structured as follows. Section 2 shows problems in previous MKL formulations. In Section 3 we present a new kernel learning formulation and give discussions. Then, we study the differentiability of multilevel optimization problems and give an efficient algorithm in Section 4 and Section 5, respectively. Experiments are shown in Section 6. Finally, we close with a conclusion. labels y i  X  { X  1 } . Suppose we have a kernel family K = { k : X  X  X  X  R } , in which any kernel function k implicitly defines a transformation  X  (  X  ; k ) from the input space X to a feature space by the sign of which is used to classify data. The task of kernel learning (for binary classification) is to learn both a kernel function k  X  K and a classifier w and b .
 where  X  = [  X  i ] i is the kernel parameter. Then the problem of learning a kernel transfers to the prob-lem of learning a kernel parameter  X  . The most common used kernel form is a linear combination of multiple basis kernels, as 2.1 Problems in multiple kernel learning Most existing MKL approaches, e.g., [2, 4, 5], employ the equivalent objective function as in SVM: where  X  i is the hinge loss. This problem can be reformulated to For any kernel k , the optimal classifier w and b is actually the SVM classifier with the kernel k . Let  X  denote the margin of the SVM classifier in the feature space endowed with k . We have  X   X  2 = k w k 2 . Thus the term k w k 2 makes formulation (3) prefer the kernel that results in an SVM classifier with a larger margin (as well as an acceptable empirical loss). Here, a natural question is that for different kernels whether the margins of SVM classifiers can well measure the goodness of the kernels. To answer this question, we consider what happens when a kernel k is enlarged by a scalar a : k new = ak , where a &gt; 1 . The corresponding transformations satisfy  X  (  X  ; k new ) = k , let { w  X  , b  X  } denote the optimal solution of (5). For k new , we set w 2 = w  X  1 / C P i  X  i =  X  G ( k ) , which means the enlarged kernel gives a larger margin and a smaller objective value. As a consequence, on one hand, the large margin preference guides the scaling of the learned kernel to be as large as possible. On the other hand, any kernel, even the one resulting in a bad performance, can give an arbitrarily large margin by enlarging its scaling. This problem is called the scaling problem . It shows that the margin is not a suitable measure of the goodness of a kernel. In the linear combination case, the scaling problem causes that the kernel parameter  X  does not converge in the optimization. A remedy is to use a norm constraint on  X  . However, it has been shown in recent literature [7, 9] that different types of norm constraints fit different data sets. So users face the difficulty of choosing a suitable norm constraint. Even after a norm constraint is selected, the scaling problem also causes another problem about the initialization. Consider an L 1 norm constraint and a learned kernel which is a combination of two basis kernels, as To leave the empirical loss out of consideration, assume: (a) both k 1 and k 2 can lead to zero em-pirical loss, (b) k 1 results in a larger margin than k 2 . For simplicity, we further restrict  X  1 and  X  2 to be equal to 0 or 1 , to enable kernel selection. The MKL formulation (3), of course, will choose k MKL formulation (3) will select k 2 from { k new 1 , k 2 } . The example shows that the final solution can be greatly affected by the initial scalings of basis kernels, although a norm constraint is used. This problem is called the initialization problem . When the MKL framework is extended from the linear combination cases to the nonlinear cases, the scaling problem becomes more serious, as even a finite scaling of the learned kernel may not be generally guaranteed by a simple norm constraint on kernel parameters for some kernel forms. These problems implicate that the margin itself is not enough to measure the goodness of kernels. 2.2 Measuring the goodness of kernels with the radiuses of MEB Now we need to find a more reasonable way to measure the goodness of kernels. Below we in-troduce the generalization error bounds for SVM and kernel learning, which inspire us to con-sider the minimum enclosing ball to learn a kernel. For SVM with a fixed kernel, it is well known that the estimation error, which denotes the gap between the expected error and the em-pirical error, is bounded by p O ( R 2  X   X  2 ) /n , where R is the radius of the minimum enclosing ball (MEB) of data in the feature space endowed with the kernel used. For SVM with a ker-nel learned from a kernel family K , if we restrict that the radius of the minimum enclosing ball in the feature space endowed with the learned kernel to be no larger than R , then the theoret-ical results of Srebro and Ben-David [14] say: for any fixed margin  X  &gt; 0 and any fixed ra-dius R &gt; 0 , with probability at least 1  X   X  over a training set of size n , the estimation error is the pseudodimension [14] of the kernel family K . For example, d  X  of linear combination ker-nels is no larger than the number of basis kernels, and d  X  of the Gaussian kernels with a form of k state that the generalization error bounds for SVM with both fixed kernels and learned kernels de-pend on the ratio between the margin  X  and the radius R of the minimum enclosing ball of data. Although some new results of the generalization bounds for kernel learning, like [15], give different types of dependencies on d  X  , they also rely on the margin-and-radius ratio.
 In SVM with a fixed kernel, the radius R is a constant and we can safely minimize k w k 2 (as well as the empirical loss). However, in kernel learning, the radius R changes drastically from one kernel to another (An example is given in the supplemental materials: when we uniformly combine p basis kernel.). Thus we should also take the radius into account. As a result, we use the ratio between the margin  X  and the radius R to measure how good a kernel is for kernel learning. Given any kernel k , the radius of the minimum enclosing ball, denoted by R ( k ) , can be obtained by: This problem is a convex minimization problem, being equivalent to its dual problem, as Considering the ratio between the margin and the radius of MEB, we propose a new formulation, as where R 2 ( k ) k w k 2 is a radius-based regularizer that prefers a large ratio between the margin and the radius, and P i  X  i is the hinge loss which is an upper bound of empirical misclassified error. This optimization problem is called radius based kernel learning problem, referred to as RKL . Chapelle et al. [1] also utilize the radius of MEB to tune kernel parameters for hard margin SVM. Our formulation (9) is equivalent to theirs if  X  i is restricted to be zero. To give a soft margin version, they modify the kernel matrix K (  X  ) = K (  X  ) + 1 C I , resulting in a formulation equivalent to: The function R 2 ( k (  X  ) ) in the second term, which may become small, makes that minimizing the objective function can not reliably give a small empirical loss, even when C is large. Besides, when we reduce the scaling of a kernel by multiplying it with a small scalar a and substitute  X  w = w/ for w to keep the same  X  i , the objective function always decreases (due to the decrease of R 2 in the empirical loss term), still leading to scaling problems. Do et al. [16] recently propose to learn a linear kernel combination, as defined in (2), through Their objective function also can be always decreased by multiplying  X  with a large scalar. Thus their method does not address the scaling problem, also resulting in the initialization problem. If we mulation is equivalent to the margin-based formulation (3). Different from the above formulations, our formulation (9) is invariant to scalings of kernels. 3.1 Invariance to scalings of kernels Now we discuss the properties of formulation (9). The RKL problem can be reformulated to where G ( k ) = min Functional G ( k ) defines a measure of the goodness of kernel functions, which consider a trade-off between the margin-and-radius ratio and the empirical loss. This functional is invariant to the scaling of k , as stated by the following proposition.
 Proposition 1. For any kernel k and any scalar a &gt; 0 , equation G ( ak ) = G ( k ) holds. Proof. For the scaled kernel ak , equation R 2 ( ak ) = aR 2 ( k ) holds. Thereby, we get
G ( ak ) = min w,b, X  i a 2 R 2 ( k ) k w k 2 + C P i  X  i , s . t . y i (  X  Let  X  w  X  a = w replace w in (14), and then (14) becomes equivalent to (13). Thus G ( ak )= G ( k ) . For a parametric kernel form k (  X  ) , the RKL problem transfers to minimizing a function g (  X  ) . = to denote g (  X  ) in such case. Due to the scaling invariance, for any  X  and any a &gt; 0 , we have g norm constraints on  X  , as stated in the following. Proposition 2. Given any norm definition N (  X  ) and any set S  X  R , suppose there exists c &gt; 0 the problem of minimizing g linear (  X  ) s.t.  X  i  X  0 and N (  X  )  X  S . Then we have: (1) For any local of (b). (2) For any local (global) optimal solution of (b), denoted by  X  b ,  X  b is also the local (global) optimal solution of (a).
 Proof. The complete proof is given in the the supplemental materials. Here we only prove the equivalence of global optimal solutions of (a) and (b). On one hand, if  X  a is the global optimal g and thus c N (  X  )  X  a is the global optimal solution of (b). On the other hand, for any  X  (  X  i  X  0 ), g giving g linear (  X  b )  X  g linear (  X  ) . Thus  X  b is the global optimal solution of (a). As the problems of minimizing g linear (  X  ) under different types of norm constraints on  X  are all equivalent to the same problem without any norm constraint, they are equivalent to each other. Based on the above proposition, we can also get the another conclusion: in the linear combination case the minimization problem (12) is also invariant to the initial scalings of basis kernels (see below). Give a norm constraint N (  X  )  X  X  , which is by the same definition as in Proposition 2. Let (a) denote (1) Problem (a) and problem (b) have the same local and global optimums. (2) For any local (global) optimal solution of (b), denoted by  X  b , [ ca j  X  b j N ([ a Proof. By proposition 2, problems (b) is equivalent to the one without any norm constraint: mini-denoted by problem (d) (local and global optimal solutions of problems (c) and (d) have one-to-one correspondences due to the simple transform  X   X  j = a j  X  j ). Again, by Proposition 2, problem (d) is equivalent to the one with N (  X  )  X  S , which is indeed problem (a). So we have conclusion (1). By proper transformations of optimal solutions of these equivalent problems, we get conclusion (2). Note that in Proposition 3, optimal solutions of problems (a) and (b), which are with different initial scalings of basis kernels, actually result in the same kernel combinations up to the scalings. As shown in the above three propositions, our proposed formulation not only completely addresses scaling and initialization problems, but also is not sensitive to the types of norm constraints used. 3.2 Reformulation to a tri-level optimization problem The remaining task is to optimize the RKL problem (12). Given a parametric kernel form k (  X  ) , for any parameter  X  , to obtain the value of the objective function g (  X  ) = G ( k (  X  ) ) in (12), we need to solve the SVM-like problem in (13), which is a convex minimization problem and can be solved by its dual problem. Indeed, the whole RKL problem is transformed to a tri-level optimization problem: any  X  the calculation of a value of g (  X  ) requires solving a bi-level optimization problem. First, solve the MEB dual problem (17), and obtain the optimal value r 2 (  X  ) and the optimal solution, denoted by  X  . Then, take r 2 (  X  ) into the objective function of the SVM dual problem (16), solve it, and obtain the value of g (  X  ) , as well as the optimal solution of (16), denoted by  X   X  i . Unlike in other kernel learning approaches, here the optimization of the SVM dual problem relies on another optimal value function r 2 (  X  ) , making the RKL problem more challenging.
 its derivatives, then we can use a variety of gradient-based methods to solve the RKL problem. So in next section, we study the differentiability of a general family of multilevel optimization problems. The Danskin X  X  theorem [17] states the differentiability of the optimal value of a single-level op-timization problem, and has been applied in many MKL algorithms, e.g., [5, 12]. Unfortunately, it is not directly applicable to the optimal value of a multilevel optimization problem. Below we generalize the Danskin X  X  theorem and give new results about the multilevel optimization problem. Let Y be a metric space, and X , U and Z be normed spaces. Suppose: (1) The function g 1 ( x, u, z ) , (3) The function g 2 ( y, x, u ) ( g 2 : Y  X  X  X  U  X  Z ) is continuous on Y  X  X  X  U . (4) For all y  X  Y the function g 2 ( y,  X  ,  X  ) is continuously differentiable. (5) Sets  X  X  X  X and  X  Y  X  Y are compact. By these notations, we propose the following theorem about bi-level optimal value functions. Theorem 1. Let us define a bi-level optimal value function as where v 2 ( x, u ) is another optimal value function as has also a unique minimizer x  X  ( u ) over  X  X , then The proof is given in supplemental materials. To apply Theorem 1 to the objective function g (  X  ) in the RKL problem (15), we shall make sure the following two conditions are satisfied. First, both the MEB dual problem (17) and the SVM dual problem (16) must have unique optimal solutions. This can be guaranteed by that the kernel matrix K (  X  ) is strictly positive definite. Second, the kernel matrix K (  X  ) shall be continuously differentiable to  X  . Both conditions can be met in the linear combination case when each basis kernel matrix is strictly positive definite, and can also be easily satisfied in nonlinear cases, like in [11, 12]. If these two conditions are met, then g (  X  ) is continuously differentiable and where  X   X  i is the optimal solution of the SVM dual problem (16), and where  X   X  i is the optimal solution of the MEB dual problem (17). In above equations, the value of d X  is needed. It depends on the specific form of the parametric kernels, and the deriving of it K i,j . For the Gaussian kernel K i,j (  X  ) = e With the derivative of g (  X  ) , we use the standard gradient projection approach with the Armijo rule [18] for selecting step sizes to address the RKL problem. To compare with the most popu-lar kernel learning algorithm, simpleMKL [5], in experiments we employ the linear combination kernel form with nonnegative combination coefficients, as defined in (2). In addition, we also con-sider three types of norm constraints on kernel parameters (combination coefficients): L 1 , L 2 and no norm constraint. The L 1 and L 2 norm constraints are as P j  X  j = 1 and P j  X  2 j = 1 , respectively. The projection for the L 1 norm and nonnegative constraints can be efficiently done by the method of Duchi et al. [19]. The projection for only nonnegative constraints can be accomplished by set-ting negative elements to be zero. The projection for the L 2 norm and nonnegative constraints need another step after eliminating negative values: normalize  X  by multiplying it with k  X  k  X  1 2 . In our gradient projection algorithm, each calculation of the objective functions g (  X  ) needs solving an MEB problem (17) and an SVM problem (16), whereas the gradient calculation and projec-tion steps have ignorable time complexity compared to MEB and SVM solvers. The MEB and SVM problems have similar forms of objective functions and constraints, and both of them can be efficiently solved by SMO algorithms. Moreover, previous solutions  X   X  i and  X   X  i can be used as  X  X ot-start X  to accelerate the solvers. It is because optimal solutions of two problems are continuous to kernel parameter  X  according to Theorem 1. Thus when  X  moves a small step, the optimal solu-tions also will only change a little. In real experiments our approach usually achieves approximate convergence within one or two dozens of invocations of SVM and MEB solvers (For lack of space, examples of the convergence speed of our algorithm are shown in the supplemental materials). In linear combination cases, the RKL problem, as the radius-based formulation by Chapelle et al. [1], is not convex. Gradient-based methods only guarantee local optimums. The following states the nontrivial quality of local optimal solutions and their connections to related convex problems. Proposition 4. In linear combination cases, for any local optimal solution of the RKL problem, convex problem: min The proof can be found in the supplemental materials. The proposition also gives another possible way to address the RKL problem: iteratively solve the convex problem (23) with a search for C 1 and C 2 . However, it is difficult to find exact values of C 1 and C 2 by a grid search, and even a rough search will result in too high computational load. Besides, such method is also lack of extension ability to nonlinear parametric kernel forms. Then, in the experiments, we demonstrate that the gradient-based approach can give satisfactory performances, which are significantly better than ones of SVM with the uniform combination of basis kernels and of other kernel learning approaches. In this section, we illustrate the performances of our presented RKL approach, in comparison with SVM with the uniform combination of basis kernels (Unif), the margin-based MKL method using formulation (3) (MKL), and the kernel learning principle by Chapelle et al. [1] using formulation (10) (KL-C). The evaluation is made on eleven public available data sets from UCI repository [20] and LIBSVM Data [21] (see Table 1). All data sets have been normalized to be zero-means and unit-variances on every feature. The used basis kernels are the same as in SimpleMKL [5]: 10 nels of degree 1 to 10 . All kernel matrices have been normalized to unit trace, as in [5, 7]. Note that although our RKL formulation is theoretically invariant to the initial scalings, the normalization is still applied in RKL to avoid numerical problems caused by large value kernel matrices in SVM and MEB solvers. To show impacts of different norm constraints, we use three types of them: L 1 , L 2 and no norm constraint. With no norm constraint, only RKL can converge, and so only its results are reported. The SVM toolbox used is LIBSVM [21]. MKL with the L 1 norm constraint is solved by the code from SimpleMKL [5]. Other problems are solved by standard gradient-projection methods, where the calculation of gradients of the MKL formulation (3) and Chapelle X  X  formulation (10) is The trade-off coefficients C in SVM, MKL, KL-C and RKL are automatically determined by 3-fold cross-validations on training sets. In all methods, C is selected from the set S coef . = the training set and the remaining one as the test set. The average accuracies with standard deviations and average numbers of selected basis kernels are reported in Table 1. Table 1: The testing accuracies (Acc.) with standard deviations (in parentheses), and the average numbers of selected basis kernels (Nk). We set the numbers of our method to be bold if our method outperforms both Unif and other two kernel learning approaches under the same norm constraint. The results in Table 1 can be summarized as follows. (a) RKL gives the best results on most sets. Under L 1 norm constraints, RKL (Index 4) outperforms all other methods (Index 1, 2, 3) on 8 out of 11 sets, and also gives results equal to the best ones of other methods on the remaining 3 sets. In particular, RKL gains 5 or more percents of accuracies on Splice, Liver and Musk1 over MKL, and gains more than 9 percents on four sets over KL-C. Under L 2 norm constraints, the results are similar: RKL (Index 7) outperforms other methods (Index 5, 6) on 10 out of 11 sets, with only 1 inverse result. (b) Both MKL and KL-C are sensitive to the types of norm constraints (Compare Index 2 and 5 , as well as 3 and 6 ). As shown in recent literature [7, 9], for the MKL formulation, different types of norm constraints fit different data sets. However, RKL outperforms MKL (as well as KL-C) under both L 1 and L 2 norm constraints on most sets. (c) RKL is invariant to the types of norm constraints. See Index 4, 7 and 8. Most accuracy numbers of them are the same. Several exceptions with slight differences are possibly due to precisions of numerical computation. (d) For MKL, the L 1 norm constraint always results in sparse combinations, whereas the L 2 norm constraint always gives non-sparse results (see Index 2 and 5). (e) An interesting thing is that, our presented RKL gives sparse solutions on most sets, whatever types of norm constraints are used. As there usu-ally exist redundancies in the basis kernels, the searching for good kernels and small empirical loss often directly leads to sparse solutions. We notice that KL-C under L 2 norm constraints also slightly promotes sparsity (Index 6). Compared to KL-C under L 2 norm constraints, RKL provides not only higher performances but also more sparsity, which benefits both interpretability and computational efficiency in prediction. In this paper, we show that the margin term used in previous MKL formulations is not a suitable measure of the goodness of kernels, resulting in scaling and initialization problems. We propose a new formulation, called RKL, which uses the ratio between the margin and the radius of MEB to learn kernels. We prove that our formulation is invariant to kernel scalings, and also invariant to scalings of basis kernels and to the types of norm constraints for the MKL problem. Then, by establishing the differentiability of a general family of multilevel optimal value functions, we propose a gradient-based algorithm to address the RKL problem. We also provide the property of solutions of our algorithm. The experiments validate that our approach outperforms both SVM with the uniform combination of basis kernels and other state-of-art kernel learning methods. Acknowledgments The work is supported by the National Natural Science Foundation of China (NSFC) (Grant Nos. 60835002 and 61075004) and the National Basic Research Program (973 Program) (No. 2009CB320602).
