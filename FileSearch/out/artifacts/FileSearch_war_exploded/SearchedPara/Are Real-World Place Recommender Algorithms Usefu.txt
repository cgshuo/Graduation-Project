 Large scale virtual worlds such as massive multiplayer online games or 3D worlds gained tremendous popularity over the past few years. With the large and ever increasing amount of content available, vir-tual world users face the information overload problem. To tackle this issue, game-designers usually deploy recommendation services with the aim of making the virtual world a more joyful environment to be connected at. In this context, we present in this paper the re-sults of a project that aims at understanding the mobility patterns of virtual world users in order to derive place recommenders for helping them to explore content more efficiently. Our study fo-cus on the virtual world SecondLife, one of the largest and most prominent in recent years. Since SecondLife is comparable to real-world Location-based Social Networks (LBSNs), i.e., users can both check-in and share visited virtual places, a natural approach is to assume that place recommenders that are known to work well on real-world LBSNs will also work well on SecondLife. We have put this assumption to the test and found out that (i) while collabora-tive filtering algorithms have compatible performances in both en-vironments, (ii) existing place recommenders based on geographic metadata are not useful in SecondLife.
 H.3.3 [ Information Storage and Retrieval ]: Information Search and Retrieval X  Information filtering virtual environments; location-based recommendations
Location-based social networks (LBSN) enable users to check-in and share places and relevant content, such as photos, tips and com-ments that help others in exploring novel and interesting places they might not have been before. Foursquare 1 , for example, is a popular LBSN with millions of subscribers doing millions of check-ins ev-eryday all over the world. This vast amount of check-in data, pub-licly available through Foursquare X  X  data access APIs, has recently inspired many researchers to investigate human mobility patterns and behavior with the aim of assisting users, by means of person-alized recommendation services, in exploring their surroundings more efficiently [19, 20, 9].

Problem Statement. Virtual world environments, on the other hand, are interactive 3D worlds where millions of users all around the globe spend a lot of time every day to create and explore new content. Rules are typically drawn from reality, such as gravity, to-pography, locomotion, real-time actions, and communication. These systems gained tremendous popularity over the past few years and are poised for continued growth. Facebook, for example, recently bought Occulus VR that produces virtual reality headsets for allow-ing game players to immerse themselves in virtual worlds, which indicates that there are big plans for virtual worlds on the table With the massive amount of content available all the time, virtual world users, especially newbies and the inexperienced ones, typi-cally suffer from the information overload problem which under-mines their ability to find relevant and exciting content. To tackle this issue content suggestion services are typically provided to help people in exploring content more efficiently [17].

While there are many works on recommender systems for virtual worlds that focus on economical [6, 16] and social aspects of these systems [12, 11, 13], only a few of them try to understand mobil-ity patterns in virtual worlds (see e.g., [15, 1]). These latter works indicate a strong correlation between virtual and real world move-ment patterns and although they suggest that existing real world LBSN recommender approaches would perform similarly in virtual worlds, to the best of our knowledge there are no studies yet show-ing explicitly if this assumption really holds. The findings with this respect have important implications for recommender systems de-signers, because if this assumption holds, a whole suite of place recommendation algorithms can be transferred from the LBSN do-main to virtual worlds. If not, new algorithms need to be devised for characterizing the specificities of virtual world users mobility patterns. http://www.foursquare.com http://www.theguardian.com/technology/2014/jul/22/ facebook-oculus-rift-acquisition-virtual-reality Figure 1: Distribution of Check-Ins per Venue in Foursquare and SecondLife (log-log scale).

In this paper we compared the check-in behavior of users in the virtual world of SecondLife 3 (with over 7 million active users one of the largest virtual eviroments world wiede) and the real-world LBSN Foursquare and explored in detail the extent to which place recommender systems that are known to work well on real-world LBSNs are applicable to virtual worlds.

Research Question. The research question that this research was driven by is the following: Knowing that Foursquare and the virtual world of SecondLife are comparable environments, to what extent are current real-world LBSN place recommender algorithms applicable to SecondLife?
Results. Based on a number of experiments, we find that while both worlds are indeed comparable in some aspects, such as the check-in distributions of Foursquare and SecondLife users, recom-mender algorithms purely based on a distance function however are not suitable for the virtual world of SecondLife, i.e., they do not have comparable performances. We also evaluated state-of-the-art collaborative-filtering algorithms based on user-based k-nearest neighbors (KNN) and matrix factorization and found out that these algorithms have comparable performances in Foursquare and Sec-ondLife.

Contributions. The main contributions of this work are: (i) the study of current real-world LBSN recommender algorithms in the virtual world context and (ii) the insight that, although compara-ble in some aspects as suggested by related works, some of the as-sumptions upon which location recommenders of real-world LBSN recommenders operate, does not seem to hold in SecondLife. An-other contribution of this work is the introduction and provision of a novel data set that allows the study of human mobility patterns in virtual worlds.
In this section we describe in detail our experimental setup, i.e., the data sets and recommender approaches, as well as the evalua-tion protocol used to investigate our research question.
Our study relies on data from Foursquare containing the check-in history of 11 , 326 users collected from January 2011 to December 2011. This data set was collected and used by the authors of [5] and is publicly available under request at [4]. The SecondLife data http://www.secondlife.com The data set can be obtained for free per request.
 was collected from October 2014 to November 2014 containing the check-in history of 34 , 277 users 5 . Figure 1 depicts the distribution of check-ins per venue in Foursquare (a) and SecondLife (b) in log-log scale. Please note that they are very similar to each other, i.e., some venues are very popular and receive most of the check-ins, whereas the rest lies in the long tail of the distribution. The distributions of check-ins per user in both worlds follow a similar pattern, which we omitted due to space constraints.
A key feature of LBSNs is the availability of geographic meta-data about checked-in places. In Foursquare and SecondLife, for example, the lat-long coordinates of the checked-in places are avail-able. Several place recommender approaches have appeared that exploits geographic metadata of users and venues in order to im-prove the recommendation quality, under the assumption that users prefer to check-in venues that are nearby the venues they have vis-ited in the past [8, 2, 9, 19].

To test whether this assumption holds in SecondLife, we have chosen two state-of-the-art place recommenders, purely based on geographic distance (aka location-aware), proposed in [19] and [9]. Given that such recommenders work well in Foursquare, as demon-strated in the aforementioned works, it should also work in Sec-ondLife, assuming that the check-in behavior of users in both sys-tems are comparable.

The approaches proposed at [19, 9] assign higher weights to can-didate places that are nearby the places that the target user has al-ready checked-in. Ye at al. [19] assume that the pairwise distance distribution of check-ins per user follows a power-law and propose to learn the parameters of the distribution by a simple linear re-gression on a log-log transformation of the distribution. Thus, the probability of any pair of places x and y being checked-in is com-puted as follows: where a = 2 w 0 , b = w 1 and dist returns the distance between x and y (Great-Circle on Foursquare and Euclidian in SecondLife). Now, the probability that a given user u will check-in venue l is modelled as the conditional probability P ( l | L u ) , where L set of all venues checked-in by user u , computed as follows: A ranked list of venues is then generated using Equation 1 above and the top-N are recommended. We will refer to this method as LinearRegression .

A similar approach was proposed by [9] where Gaussian kernels were used for modeling the check-in behavior of users. The prob-ability that a given user u will check-in place l is then modeled
Similar to the real world, SecondLife offers since 2009 a location-based service which allows users to check-in places and share this information with friends in a Facebook-like social network called mySecondLife (see [12, 11] for more information). Figure 2: Results of the compared algorithms in terms or precision, recall and NDCG. as: We will refer to this method as GaussianKernel .

The algorithms above achieve better performance when com-bined with collaborative filtering-based algorithms such as the clas-sic user-based KNN or matrix factorization [2, 19]. These algo-rithms operate under the assumption that users who checked-in the same places in the past tend to check-in the same places in the future. Therefore, we also considered in our study two collabora-tive filtering algorithms that are solely based on the check-in his-tory of users (i.e. do not use geographic information, but only the user-place interactions in terms of check-ins) observed in the train-ing data, namely, the user-based KNN and a state-of-the-art based on matrix factorization known as BPRMF (Bayesian Personalized Ranking Matrix Factorization) [10].

To run the collaborative-filtering algorithms we have used the recommender systems library MyMediaLite [3] adopting the de-fault settings for the collaborative-filtering recommenders. The location-aware algorithms were implemented on top of MyMedi-aLite in order to reuse the evaluation functions available.
For computing the recommendations we considered only the users with 10 or more check-ins in distinct venues. We split the data ran-domly keeping 90% of users X  check-ins for training and the rest for testing. We repeated this process 5 times in order to measure some variability in the results. Table 1 summarizes the training data after this pre-processing. To evaluate the recommenders we have used prec@5, recall@5 and NDCG (Normalized Discounted Cumulative Gain), which are typical evaluation metrics in the rec-ommender systems field [7].
Figure 2 shows the results of the location-aware recommenders in comparison to the most popular recommender on both data sets. Figure 3: Comparison of pure CF-based algorithms for place rec-ommendations in SecondLife and Foursquare.
 The most popular simply recommend the most frequently checked-in venues for all users and is usually used as a baseline for testing new recommender algorithms. Please note that while in Foursquare the location-aware recommender is clearly better than the Most-Popular, in SecondLife the location-aware has worse or equal per-formance than the most popular approach.

In general, location algorithms based on geographic distances alone, like the ones we are using here, do not produce highly accu-rate recommendations. Instead, they are used as additional contex-tual signals on an ensemble of recommenders that usually include collaborative-filtering algorithms.

The fact that such location-aware algorithm is better than the most popular recommender in Foursquare provides a clear indica-tion about the importance of this kind of signal for predicting users X  check-in behavior, in contrast to SecondLife where this does not seem to be the case.

In order to better understand the aforementioned results, we plot-ted the pairwise distance distribution between the users X  check-ins in Figure 4. In the case of the Foursquare distribution (Fig-ure 4.a), there is a clear pattern indicating that users prefer to check-in venues within a small distance from his/her past check-ins. Please note that such pattern does not appear in the SecondLife distribu-tion (Figure 4.b). In fact, in SecondLife users seem to prefer vis-iting places that are farther apart from each other. A possible ex-planation to this lies in the fact that SecondLife users can easily teleport anywhere in the virtual world map, thus diminishing their distance dependence when deciding to visit a new place.

Figure 3 shows the results of the collaborative-filtering algo-rithms. Note that in this case the recommender performances are comparable. The best result comes from UserKNN, whereas BPRMF and the MostPopular have comparable performance. In case of Foursquare, the performance can be improved by combining the location-aware and collaborative filtering recommenders. As for SecondLife, this would probably not work, which suggests that new approaches for modeling the mobility patterns of SecondLife users are needed, putting, for instance, a higher preference to places which are farther away from each other.
Figure 4: Distribution of pairwise check-in distances per user.
Being rich data environments, many research works have ap-peared recently with the aim of using virtual worlds as proxies for studying and predicting real world social and behavioral character-istics of humans. But for this to work, it is required that human be-haviors in virtual spaces and their counterparts in the offline world are similar. This requirement is known as the Mapping Principle and has to be established on a case-by-case basis, i.e., not all virtual worlds and virtual behaviors map to the offline world [18]. In this paper, we also contribute to this strand of research by (i) compar-ing the check-in behavior of SecondLife and Foursquare users and (ii) evaluating the extent to which real-world LBSN recommender systems are useful in virtual worlds such as SecondLife. Our main findings are summarized below:
For future work we plan to investigate alternative approaches for modeling the distance dependence of users in virtual worlds, as well as other factors that influence virtual world users X  decision on checking-in a new place. In this context we plan to investigate recommender models for other interesting entities such as events [14] and along other virtual environments.

Acknowledgments. This work was carried out during the tenure of an ERCIM  X  X lain Bensoussan X  fellowship program. This work is also supported by the National Institute of Science and Tech-nology for Software Engineering (INES), funded by CNPq and FACEPE, grants 573964/2008-4 and APQ-1037-1.03/08. [1] M. Ahmad, C. Shen, J. Srivastava, and N. Contractor. [2] C. Cheng, H. Yang, I. King, and M. R. Lyu. Fused matrix [3] Z. Gantner, S. Rendle, C. Freudenthaler, and [4] H. Gao and H. Liu. Location-based social network data [5] H. Gao, J. Tang, and H. Liu. Exploring social-historical ties [6] G. Guo and M. Elgendi. A new recommender system for 3d [7] J. L. Herlocker, J. A. Konstan, L. G. Terveen, and J. T. Riedl. [8] B. Jie, Y. Zheng, and M. F. Mokbel. Location-based and [9] I. Nunes and L. Marinho. A gaussian kernel approach for [10] S. Rendle, C. Freudenthaler, Z. Gantner, and [11] M. Steurer and C. Trattner. Acquaintance or partner?: [12] M. Steurer and C. Trattner. Predicting interactions in online [13] M. Steurer and C. Trattner. Who will interact with whom? a [14] M. Steurer, C. Trattner, and F. Kappe. Success factors of [15] M. Szell, R. Sinatra, G. Petri, S. Thurner, and V. Latora. [16] C. Trattner, D. Parra, L. Eberhard, and X. Wen. Who will [17] C. V. D. Weth, V. Hegde, and M. Hauswirth. Virtual [18] D. Williams. The mapping principle, and a research [19] M. Ye, P. Yin, W.-C. Lee, and D. L. Lee. Exploiting [20] H. Yin, Y. Sun, B. Cui, Z. Hu, and Chen. Lcars: a
