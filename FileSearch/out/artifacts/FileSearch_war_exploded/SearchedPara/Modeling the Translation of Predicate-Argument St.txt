 Recent years have witnessed increasing efforts to-wards integrating predicate-argument structures into statistical machine translation (SMT) (Wu and Fung, 2009b; Liu and Gildea, 2010). In this paper, we take a step forward by introducing a novel approach to in-corporate such semantic structures into SMT. Given a source side predicate-argument structure, we at-tempt to translate each semantic frame (predicate and its associated arguments) into an appropriate tar-get string. We believe that the translation of predi-cates and reordering of arguments are the two central issues concerning the transfer of predicate-argument structure across languages.
 Unfortunately they are usually neither correctly translated nor translated at all in many SMT sys-tems according to the error study by Wu and Fung (2009a). This suggests that conventional lexical and phrasal translation models adopted in those SMT systems are not sufficient to correctly translate pred-icates in source sentences. Thus we propose a discriminative, feature-based predicate translation model that captures not only lexical information (i.e., surrounding words) but also high-level seman-tic contexts to correctly translate predicates.
Arguments contain information for questions of who , what , when , where , why , and how in sentences (Xue, 2008). One common error in translating ar-guments is about their reorderings: arguments are placed at incorrect positions after translation. In or-der to reduce such errors, we introduce a discrim-inative argument reordering model that uses the position of a predicate as the reference axis to es-timate positions of its associated arguments on the target side. In this way, the model predicts moving directions of arguments relative to their predicates with semantic features.

We integrate these two discriminative models into a state-of-the-art phrase-based system. Experimen-tal results on large-scale Chinese-to-English transla-tion show that both models are able to obtain signif-icant improvements over the baseline. Our analysis on system outputs further reveals that they can in-deed help reduce errors in predicate translations and argument reorderings.
The paper is organized as follows. In Section 2, we will introduce related work and show the signif-icant differences between our models and previous work. In Section 3 and 4, we will elaborate the pro-posed predicate translation model and argument re-ordering model respectively, including details about modeling, features and training procedure. Section 5 will introduce how to integrate these two models into SMT. Section 6 will describe our experiments and results. Section 7 will empirically discuss how the proposed models improve translation accuracy. Finally we will conclude with future research direc-tions in Section 8. Predicate-argument structures (PAS) are explored for SMT on both the source and target side in some previous work. As PAS analysis widely employs global and sentence-wide features, it is computa-tionally expensive to integrate target side predicate-argument structures into the dynamic programming style of SMT decoding (Wu and Fung, 2009b). Therefore they either postpone the integration of tar-get side PASs until the whole decoding procedure is completed (Wu and Fung, 2009b), or directly project semantic roles from the source side to the target side through word alignments during decoding (Liu and Gildea, 2010).

There are other previous studies that explore only source side predicate-argument structures. Komachi and Matsumoto (2006) reorder arguments in source language (Japanese) sentences using heuristic rules defined on source side predicate-argument structures in a pre-processing step. Wu et al. (2011) automate this procedure by automatically extracting reorder-ing rules from predicate-argument structures and ap-plying these rules to reorder source language sen-tences. Aziz et al. (2011) incorporate source lan-guage semantic role labels into a tree-to-string SMT system.

Although we also focus on source side predicate-argument structures, our models differ from the pre-vious work in two main aspects: 1) we propose two separate discriminative models to exploit predicate-argument structures for predicate translation and ar-gument reordering respectively; 2) we consider ar-gument reordering as an argument movement (rel-ative to its predicate) prediction problem and use a discriminatively trained classifier for such predic-tions.

Our predicate translation model is also related to previous discriminative lexicon translation models (Berger et al., 1996; Venkatapathy and Bangalore, 2007; Mauser et al., 2009). While previous models predict translations for all words in vocabulary, we only focus on verbal predicates. This will tremen-dously reduce the amount of training data required, which usually is a problem in discriminative lexi-con translation models (Mauser et al., 2009). Fur-thermore, the proposed translation model also dif-fers from previous lexicon translation models in that we use both lexical and semantic features. Our ex-perimental results show that semantic features are able to further improve translation accuracy. In this section, we present the features and the train-ing process of the predicate translation model. 3.1 Model Following the context-dependent word models in (Berger et al., 1996), we propose a discriminative predicate translation model. The essential compo-nent of our model is a maximum entropy classifier p ( e |C ( v )) that predicts the target translation e for a verbal predicate v given its surrounding context C ( v ) . The classifier can be formulated as follows. where f features. Given a source sentence which contains N verbal predicates { v i } N 1 , our predicate translation model M
Note that we do not restrict the target translation e to be a single word. We allow e to be a phrase of length up to 4 words so as to capture multi-word translations for a verbal predicate. For example, a Chinese verb  X  u 1 (issue) X  can be translated as  X  X o be issued X  or  X  X ave issued X  with modality words. This will increase the number of classes to be pre-dicted by the maximum entropy classifier. But ac-cording to our observation, it is still computation-ally tractable (see Section 3.3). If a verbal predicate is not translated, we set e = NULL so that we can also capture null translations for verbal predicates. 3.2 Features The apparent advantage of discriminative lexicon translation models over generative translation mod-els (e.g., conventional lexical translation model as described in (Koehn et al., 2003)) is that discrim-inative models allow us to integrate richer contexts (lexical, syntactic or semantic) into target translation prediction. We use two kinds of features to predict translations for verbal predicates: 1) lexical features and 2) semantic features. All features are in the fol-lowing binary form. f ( e, C ( v )) = where the symbol  X  is a placeholder for a possible target translation (up to 4 words), the symbol  X  indi-cates a contextual (lexical or semantic) element for the verbal predicate v , and the symbol  X  represents the value of  X  .

Lexical Features: The lexical element  X  is extracted from the surrounding words of verbal predicate v . We use the preceding 3 words and the succeeding 3 words to define the lexical con-text for the verbal predicate v . Therefore  X   X 
Semantic Features: The semantic element  X  is extracted from the surrounding arguments of ver-bal predicate v . In particular, we define a seman-tic window centered at the verbal predicate with 6 arguments { A A while A ent verbal predicates have different number of argu-ments in different linguistic scenarios. We observe on our training data that the number of arguments for 96.5% verbal predicates on each side (left/right) is not larger than 3. Therefore the defined 6-argument semantic window is sufficient to describe argument contexts for predicates.

For each argument A tic window, we use its semantic role (i.e., ARG0, ARGM-TMP and so on) A r define semantic context elements  X  . If an argument A the value of both A r
Figure 1 shows a Chinese sentence with its predicate-argument structure and English transla-tion. The verbal predicate  X  &gt;  X  /adjourn X  (in bold) has 4 arguments: one in an ARG0 agent role, one in an ARGM-ADV adverbial modifier role, one in an ARGM-TMP temporal modifier role and the last one in an ARG1 patient role. Table 1 shows several semantic feature examples of this verbal predicate. 3.3 Training In order to train the discriminative predicate transla-tion model, we first parse source sentences and la-beled semantic roles for all verbal predicates (see details in Section 6.1) in our word-aligned bilingual training data. Then we extract all training events for verbal predicates which occur at least 10 times in the training data. A training event for a verbal predi-cate v consists of all contextual elements C ( v ) (e.g., w translation e . Using these events, we train one max-imum entropy classifier per verbal predicate (16,121 We perform 100 iterations of the L-BFGS algorithm implemented in the training toolkit for each verbal predicate with both Gaussian prior and event cutoff set to 1 to avoid overfitting. After event cutoff, we have an average of 140 classes (target translations) per verbal predicate with the maximum number of classes being 9,226. The training takes an average of 52.6 seconds per verb. In order to expedite the train-ing, we run the training toolkit in a parallel manner. In this section we introduce the discriminative ar-gument reordering model, features and the training procedure. 4.1 Model Since the predicate determines what arguments are involved in its semantic frame and semantic frames tend to be cohesive across languages (Fung et al., 2006), the movements of predicate and its arguments across translations are like the motions of a planet and its satellites. Therefore we consider the reorder-ing of an argument as the motion of the argument relative to its predicate. In particular, we use the po-sition of the predicate as the reference axis. The mo-tion of associated arguments relative to the reference change across languages (NC); 2) moving from the left side of its predicate to the right side of the predi-cate after translation (L2R); and 3) moving from the right side of its predicate to the left side of the pred-icate after translation (R2L).

Let X  X  revisit Figure 1. The ARG0, ARGM-ADV and ARG1 are located at the same side of their predi-cate after being translated into English, therefore the reordering category of these three arguments is as-signed as  X  X C X . The ARGM-TMP is moved from the left side of  X  &gt;  X  /adjourn X  to the right side of  X  X djourn X  after translation, thus its reordering cate-gory is L2R.

In order to predict the reordering category for an argument, we propose a discriminative argu-ment reordering model that uses a maximum en-tropy classifier to calculate the reordering category m  X  { NC, L2R, R2L } for an argument A as fol-lows. p r ( m |C ( A )) = where C ( A ) indicates the surrounding context of A . The features f tion. We assume that motions of arguments are in-dependent on each other. Given a source sentence with labeled arguments { A argument reordering model M 4.2 Features The features f model still takes the binary form as in Eq. (3). Table 2 shows the features that are used in the argument reordering model. We extract features from both the source and target side. On the source side, the fea-tures include the verbal predicate, the semantic role of the argument, the head word and the boundary words of the argument. On the target side, the trans-lation of the verbal predicate, the translation of the head word of the argument, as well as the boundary words of the translation of the argument are used as features. 4.3 Training To train the argument reordering model, we first ex-tract features defined in the last section from our bilingual training data where source sentences are annotated with predicate-argument structures. We also study the distribution of argument reordering categories (i.e.,NC, L2R and R2L) in the training data, which is shown in Table 3. Most arguments, accounting for 82.43%, are on the same side of their verbal predicates after translation. The remaining src tgt arguments (17.57%) are moved either from the left side of their predicates to the right side after transla-tion (accounting for 11.19%) or from the right side to the left side of their translated predicates (ac-counting for 6.38%).

After all features are extracted, we use the maxi-mum entropy toolkit in Section 3.3 to train the maxi-mum entropy classifier as formulated in Eq. (4). We perform 100 iterations of L-BFGS. In this section, we elaborate how to integrate the two models into phrase-based SMT. In particular, we in-tegrate the models into a phrase-based system which uses bracketing transduction grammars (BTG) (Wu, 1997) for phrasal translation (Xiong et al., 2006). Since the system is based on a CKY-style decoder, the integration algorithms introduced here can be easily adapted to other CKY-based decoding sys-tems such as the hierarchical phrasal system (Chi-ang, 2007). 5.1 Integrating the Predicate Translation It is straightforward to integrate the predicate trans-lation model into phrase-based SMT (Koehn et al., 2003; Xiong et al., 2006). We maintain word alignments for each phrase pair in the phrase ta-ble. Given a source sentence with its predicate-argument structure, we detect all verbal predicates and load trained predicate translation classifiers for these verbs. Whenever a hypothesis covers a new verbal predicate v , we find the target translation e for v through word alignments and then calculate its translation probability p (1).
 The predicate translation model (as formulated in Eq. (2)) is integrated into the whole log-linear model just like the conventional lexical translation model in phrase-based SMT (Koehn et al., 2003). The two models are independently estimated but comple-mentary to each other. While the lexical translation model calculates the probability of a verbal predi-cate being translated given its local lexical context, the discriminative predicate translation model is able to employ both lexical and semantic contexts to pre-dict translations for verbs. 5.2 Integrating the Argument Reordering Before we introduce the integration algorithm for the argument reordering model, we define two functions A and N on a source sentence and its predicate-argument structure  X  as follows.  X  A ( i, j,  X  ) : from the predicate-argument struc- X  N ( i, k, j,  X  ) : the function finds all predicate-
We then define another function P the argument reordering model probability on all ar-guments which are found by the previous two func-tions A and N as follows.
 where B denotes either A or N .

Following (Chiang, 2007), we describe the algo-rithm in a deductive system. It is shown in Figure 2. The algorithm integrates the argument reordering model into a CKY-style decoder (Xiong et al., 2006). The item [ X, i, j ] denotes a BTG node X spanning from i to j on the source side. For notational con-venience, we only show the argument reordering model probability for each item, ignoring all other sub-model probabilities such as the language model probability. The Eq. (7) shows how we calculate the argument reordering model probability when a lex-ical rule is applied to translate a source phrase c to a target phrase e . The Eq. (8) shows how we com-pute the argument reordering model probability for a span ( i, j ) in a dynamic programming manner when a merging rule is applied to combine its two sub-spans in a straight ( X  X  [ X der ( X  X  h X ties P been already obtained for the two sub-spans ( i, k ) and ( k + 1 , j ) . In this way, we only need to calcu-late the probability P argument pairs that cross the two sub-spans. In this section, we present our experiments on Chinese-to-English translation tasks, which are trained with large-scale data. The experiments are aimed at measuring the effectiveness of the proposed discriminative predicate translation model and argu-ment reordering model. 6.1 Setup The baseline system is the BTG-based phrasal sys-consist of 3.8M sentence pairs with 96.9M Chinese words and 109.5M English words. We ran GIZA++ on these corpora in both directions and then applied the  X  X row-diag-final X  refinement rule to obtain word alignments. We then used all these word-aligned corpora to generate our phrase table. Our 5-gram language model was trained on the Xinhua section of the English Gigaword corpus (306 million words) using the SRILM toolkit (Stolcke, 2002) with modi-fied Kneser-Ney smoothing.

To train the proposed predicate translation model and argument reordering model, we first parsed all source sentences using the Berkeley Chinese parser (Petrov et al., 2006) and then ran the Chinese se-parse trees to annotate semantic roles for all verbal predicates. After we obtained semantic roles on the source side, we extracted features as described in Section 3.2 and 4.2 and used these features to train our two models as described in Section 3.3 and 4.3.
We used the NIST MT03 evaluation test data as our development set, and the NIST MT04, MT05 as the test sets. We adopted the case-insensitive BLEU-4 (Papineni et al., 2002) as the evaluation metric. Statistical significance in BLEU differences was tested by paired bootstrap re-sampling (Koehn, 2004). 6.2 Results Our first group of experiments is to investigate whether the predicate translation model is able to improve translation accuracy in terms of BLEU and whether semantic features are useful. The experi-mental results are shown in Table 4. From the table, we have the following two observations.  X  The proposed predicate translation models ( A ( i, j,  X  )) Model NIST04 NIST05 Base 35.52 33.80 Base+PTM (lex) 35.71+ 34.09+ Base+PTM (lex+sem) 36.10++** 34.35++*  X  When we integrate both lexical and semantic
Our second group of experiments is to validate whether the argument reordering model is capable of improving translation quality. Table 5 shows the results. We obtain an average improvement of 0.4 BLEU points on the two test sets over the base-line when we incorporate the proposed argument re-ordering model into our system. The improvements on the two test sets are both statistically significant ( p &lt; 0 . 01 ).

Finally, we integrate both the predicate translation model and argument reordering model into the final system. The two models collectively achieve an im-provement of up to 0.92 BLEU points over the base-line, which is shown in Table 5. In this section, we conduct some case studies to show how the proposed models improve translation accuracy by looking into the differences that they make on translation hypotheses.

Table 6 displays a translation example which shows the difference between the baseline and the system enhanced with the predicate translation model. There are two verbal predicates  X  ` /head to X  and  X   X  \ /attend X  in the source sentence. In order to get the most appropriate translations for these two verbal predicates, we should adopt differ-ent ways to translate them. The former should be translated as a corresponding verb word or phrase while the latter into a preposition word  X  X or X . Unfor-tunately, the baseline incorrectly translates the two verbs. Furthermore, such translation errors even re-sult in undesirable reorderings of neighboring words  X 
 X  |  X  /Bethlehem and  X   X  g /mass X . This indi-cates that verbal predicate translation errors may lead to more errors, such as inappropriate reorder-ings or lexical choices for neighboring words. On the contrary, we can see that our predicate transla-tion model is able to help select appropriate words for both verbs. The correct translations of these two verbs also avoid incorrect reorderings of neighbor-ing words.

Table 7 shows another example to demonstrate how the argument reordering model improve re-orderings. The verbal predicate  X  ? 1 /carry out X  has three arguments, ARG0, ARG-ADV and ARG1. The ARG1 argument should be moved from the right side of the predicate to its left side after trans-lation. The ARG0 argument can either stay on the left side or move to right side of the predicate. Ac-cording to the phrase alignments of the baseline, we clearly observe three serious translation errors: 1) the ARG0 argument is translated into separate groups which are not adjacent on the target side; 2) the predicate is not translated at all; and 3) the ARG1 argument is not moved to the left side of the predicate after translation. All of these 3 errors are avoided in the Base+ARM system output as a re-sult of the argument reordering model that correctly identifies arguments and moves them in the right di-rections. We have presented two discriminative models to incorporate source side predicate-argument struc-tures into SMT. The two models have been inte-grated into a phrase-based SMT system and evalu-ated on Chinese-to-English translation tasks using large-scale training data. The first model is the pred-icate translation model which employs both lexical and semantic contexts to translate verbal predicates. The second model is the argument reordering model which estimates the direction of argument move-ment relative to its predicate after translation. Ex-perimental results show that both models are able to significantly improve translation accuracy in terms of BLEU score.

In the future work, we will extend our predicate translation model to translate both verbal and nom-inal predicates. Nominal predicates also frequently occur in Chinese sentences and thus accurate trans-lations of them are desirable for SMT. We also want to address another translation issue of arguments as shown in Table 7: arguments are wrongly translated into separate groups instead of a cohesive unit (Wu and Fung, 2009a). We will build an argument seg-mentation model that follows (Xiong et al., 2011) to determine whether arguments should be translated as a unit or not.
