 Abstract Given a graph, how to find a small group of  X  X ateways X , that is a small subset of nodes that are crucial in connecting the source to the target? For instance, given a social network, who is the best person to introduce you to, say, Chris Ferguson, the poker champion? Or, given a network of people and skills, who is the best person to help you Gateway and Group-Gateway. For each scenario, we show that it is sub-modular and thus it can be solved near-optimally. We further give fast, scalable algorithms to find such gateways. Extensive experimental evaluations on real data sets demonstrate the effec-tiveness and efficiency of the proposed methods.
 Keywords Social network Gateway Graph mining Scalability Sub-modularity 1 Introduction What is the best gateway between a source node and a target node, in a network? This is a core problem that appears under several guises, with numerous generalizations. Motivating applications include the following: 1. In a corporate social network, which are the key people that bring or hold different 2. In an immunization setting, given a set of nodes that are infected, and a set of nodes we 3. Similarly, in a network setting, which are the gateway nodes we should best defend 4. Protein pathways: given a protein interaction network, we know that a certain protein 5. Given a graph of co-workers and their skills (keywords), whom should you contact to
The problem has several, natural generalizations: (a) we may be interested in the top k best gateways (in case our first few choices are unavailable); (b) we may have more than one source nodes, and more than one target nodes, as in the immunization setting above; (c) we may have a bi-partite graph with relationships (edges) between different node types, as in the last example above. Our main contributions in this paper are:  X  A novel  X  X ateway-ness X  score for a given source and target, that agrees with human intuition.  X  Two algorithms to find a set of nodes with the highest  X  X ateway-ness X  score, which (1)  X  Extensive experimental results on real data sets, showing the effectiveness and
The rest of the paper is organized as follows: We give the problem definitions in Sect. 2 ; present  X  X ateway-ness X  scores in Sect. 3 ; and deal with the computational issues in Sect. 4 . We evaluate the proposed methods in Sect. 5 . Finally, we review the related work in Sect. 6 and conclude in Sect. 7 . 2 Problem definitions Table 1 lists the main symbols we use throughout the paper. In this paper, we focus on directed weighted graphs. We represent the graph by its normalized adjacency matrix ( A ). Following standard notation, we use capital bold letters for matrices (e.g., A ), lower-case transpose with a prime (i.e., A 0 is the transpose of A ). We use arrowed lower-case letters for paths on the graph (e.g., p ), which are ordered sequences. We use parenthesized superscripts to represent source/target information for the corresponding variables. For brevity. A sink node i on the graph is a node without out-links (i.e., A (:, i ) = 0). We use the above notations, our problems can be formally defined as follows: Problem 1 ( Pair-Gateway ) Find: a set of at most k nodes which has the highest  X  X ate-way-ness X  score wrt s and t . Problem 2 ( Group-Gateway ) Given: a weighted directed graph A , a group of source nodes S ; a group of target nodes Find: a set of at most k nodes which has the highest  X  X ate-way-ness X  score wrt S and T :
In both Problem 1 (Pair-Gateway) and Problem 2 (Group-Gateway), there are two sub-problems: (1) how to define the  X  X ateway-ness X  score of a given subset of nodes I ; (2) how to find the subset of nodes with the highest  X  X ateway-ness X  score. In the next two sections, we present the solutions for each, respectively. 3 Proposed  X  X ateway-ness X  scores In this section, we present our definitions for  X  X ateway-ness X . We first focus on the case of a single source s and a single target t (Pair-Gateway). We then generalize to the case where both the source and the target are a group of nodes (Group-Gateway) 3.1 Node  X  X ateway-ness X  score Given a single source s and a single target t , we want to measure the  X  X ateway-ness X  score for a given set of nodes I : We first give the formal definitions in such a setting and then provide some intuitions for our definitions.

Formal definitions For a graph A , we can use random walk with restart to measure the proximity (i.e., relevance/closeness) from the source node s to the target node t , which is defined as follows: Consider a random particle that starts from node s . The particle iter-(1 -c ). The proximity score from node s to node t is defined as the steady-state probability of time that the particle starting from node s will spend on node t of the graph, after an infinite number of steps.

Intuitively, a set of nodes I are good gateways wrt s and t if they play an important role in the proximity measure from the source to the target. Therefore, our  X  X ateway-ness X  score can be defined as follows: where r I  X  s ; t  X  is the proximity score from source s to t after setting the subset of nodes indexed by I as sinks.

Intuitions Here, we provide some intuition of the  X  X ateway-ness X  score defined by ( 1 ), using the running example in Fig. 1 .
 u = t }, we can define its score by ( 2 ), where random particle will traverse this path, and (1 -c ) c l penalizes the length of the path. For A (4, 3) A (5, 4) A (12, 5) A (14, 12) A (20, 14). where A is the normalized adjacency matrix of the graph.
 With the above definitions for the path score, we have the following lemma: Lemma 1 Sum of Weighted Path Scores Let P be the set of all the paths from the source node s to the target node t, and Q be the set of all the paths from the source node s to the target node t which go through at least one node indexed by the subset I . Let r ( s , t ) be the proximity score defined by random walk with restart and g  X  s ; t ; I X  be the  X  X ateway-ness X  score defined by eq . (1). Then we have Proof Omitted for brevity. h
By ( 3 ), the  X  X ateway-ness X  score for a given set of nodes I accounts for all the paths from the source node s to the target node t which pass through one or more nodes in I . For score for I X f 2 g is the sum of the scores of all the paths from node 1 to node 20 that go through node 2 (e.g., the green path, the yellow path, and so on). 3.2 Group  X  X ateway-ness X  score Here we consider the case where the source and/or target consist of more than one nodes. Suppose we have a group of source nodes S and a group of target nodes T : Then, the  X  X ateway-ness X  score for a given set of nodes I can be defined in a similar way: as sinks (i.e., delete all out-edges, by setting A (:, i ) = 0 for all i 2I ).
Intuitively, the score defined by ( 4 ) accounts for all the paths from the source group to the target group 1 which go through at least one node in I : For example, given S X f 1 g and T X f 19 ; 20 g in Fig. 1 , the group  X  X ateway-ness X  score for I X f 5 ; 8 g corresponds to all the paths from node 1 to 19 or 20 (e.g., red, yellow and green solid lines, purple and blue dashed lines and so on). 4 BASSET: proposed fast solutions In this section, we address how to quickly find a subset of nodes of the highest  X  X ateway-ness X  score. We start by showing that the straight-forward methods (referred to as  X  X om-RWR X ) are computationally intractable. Then, we present the proposed BASSET (BASSET-N for Pair-Gateway and BASSET-G for Group-Gateway). For each case, we first present the algorithm and then analyze its effectiveness as well as its computational complexity. 4.1 Computational challenges Here, we present the computational challenges and the way we tackle them. For the sake of succinctness, we mainly focus on BASSET-N.

There are two main computational challenges in order to find a subset of nodes with the source to the target on different graphs, each of which is a perturbed version of the original graph. This essentially means that we cannot directly apply some powerful pre-compu-tational method to evaluate the proximity from the source to the target (after setting the methods, whose computational complexity is O ( m ). The challenges are compounded by the Putting these together, the straightforward way to find k nodes with the highest  X  X ateway-1,000,000 nodes, we want to find the best k = 5 gateway nodes. If computing each This is much longer than the age of the universe. 2 To tackle such challenges, we resort to two main ideas, which are summarized in Theorem 1. According to Theorem 1, in order to evaluate the  X  X ateway-ness X  score of a given set of nodes, we do not need to actually set these nodes as sinks and compute the proximity score on the new graph. Instead, we can compute it from the original graph. In this way, we can utilize methods based on pre-computation to accelerate the process. Furthermore, since g  X  s ; t ; I X  and g  X S ; T ; I X  are sub-modular wrt I ; we can develop some greedy algorithm to avoid exponential enumeration, and still get some near-optimal pointing out that the proposed methods (BASSET-N and BASSET-G) we will introduce are orthogonal to the specific way of normalization. For simplicity, we use column-nor-malization throughout this paper. Also, Q  X I ; I X  is a jIjjIj matrix, containing the ele-ments in the matrix Q which are at the rows/columns indexed by I : Similarly, Q  X  t ; I X  is a row vector with length jIj ; containing the elements in the matrix Q which are at the t th row and the columns indexed by I . Q  X I ; s  X  is a column vector with length jIj ; containing the elements in the matrix Q which are at the s th column and the rows indexed by I : Theorem 1 Core Theorem Let A be the normalized adjacency matrix of the graph, and Q = (1 -c )( I -c A ) -1 . For a given source s and target t, the  X  X ateway-ness X  score of a subset of nodes I defined in ( 1 ) satisfies the properties P1 and P2. For a given source group S properties P3 and P4, where s 6  X  t ; s ; t 6 2I ; S P1 . g  X  s ; t ; I X  X  Q  X  t ; I X  Q  X I ; I X  1 Q  X I ; s  X  ; P2 . g  X  s ; t ; I X  is sub-modular wrt the set I : P3 . g  X S ; T ; I X  X  P4 . g  X S ; T ; I X  is sub-modular wrt the set I : Proof See the  X  X  Appendix  X  X  . h
Intuition Here, we provide some intuition why g  X  s ; t ; I X  and g  X S ; T ; I X  are sub-modular. According to Lemma 1, for a given source s and a given target through some nodes in K but none of the nodes in I : Therefore, for a given set K ; if we J X f 2 ; 5 g : Then, if we have a new subset K X f 8 g ; the additional benefit for subset I accounts for all the paths from s = 1to s = 20 which go through node 8, but not node 5 (e.g., the green path, etc). While the additional benefit for subset J is 0, since all the paths from s = 1to t = 20 which go through node 8 must also go through some node in J (node 2). 4.2 BASSET-N for problem 1 4.2.1 BASSET-N algorithm steps 4 X 14, we find the rest of the nodes in a greedy way. That is, in each outer loop, we try to find one more node while keeping the current I unchanged. According to P1 of theorem 1, v ( i ) computed in step 7 is the gateway score for the subset J : 3 If the current subset of nodes I can completely disconnect the source and the target (by setting them as sinks), we will stop the algorithm (step 12). Therefore, Algorithum 1 always returns no more than k nodes. It is worth pointing out that in Algorithum 1 , all the proximity scores are computed from the original graph A . Therefore, we can utilize some powerful methods based on pre-computation to accelerate the whole process. To name a few, for a medium size graph A (e.g., a few thousands of nodes), we can pre-compute and store the matrix Q = (1 -c )( I -c A ) -1 ; for large unipartite graphs and bipartite graphs, we can use the NB_LIN and BB_LIN algorithms, respectively (Tong et al. 2008 ).
 4.2.2 Analysis of BASSET-N In this subsection, we analyze the effectiveness and the efficiency of Algorithum 1 . First, the effectiveness of the proposed BASSET-N is guaranteed by the following lemma. According to Lemma 2, although BASSET-N is a greedy algorithm, the results it outputs are near-optimal . Lemma 2 Effectiveness of BASSET-N Let I be the subset of nodes selected by Alg-is the base of the natural logarithm, and g  X  s ; t ; J X  are defined by ( 1 ). Proof It is easy to verify that the node i 0 selected in step 10 of Algorithum 1 satisfies i which completes the proof. h
Next, we analyze the efficiency of BASSET-N, which is given in Lemma 3 4 . We can draw the following two conclusions, according to Lemma 3: (1) the proposed BASSET-N achieves a significant speedup over the straight-forward method ( O  X  n k 4  X  vs. O  X  n k m  X  ). For example, in the graph with 100 nodes and 1,000 edges, in order to find the gateway with k = 5 nodes, BASSET-N is more than 6 orders of magnitude faster, and the speedup quickly increases wrt the size of the graph; (2) the proposed BASSET-N is applicable to large graphs since it is linear wrt the number of the nodes.
 Lemma 3 Efficiency of BASSET-N The computational complexity of Algorithum 1 is upper bounded by O  X  n k 4  X  : Proof The cost for steps 1 X 2 is constant. The cost for step 3 is O ( n ). At each inner loop more than k -1 iterations. Putting these together, the computational cost for BASSET-N is: which completes the proof. h 4.3 BASSET-G for problem 2 4.3.1 BASSET-G algorithm Our fast solution for Problem 2 is summarized in Algorithum 2 . It works in a similar way P way. That is, in each outer-loop, we try to find one more node while keeping the current I unchanged. If the current subset of the nodes I can completely disconnect the source group and the target group (by setting them as sinks), we will stop the algorithm (step 10). As in Algorithum 1 , all the proximity scores are computed from the original graph A . Therefore, we can again utilize those powerful pre-computation based methods to accelerate the whole process. 4.3.2 Analysis of BASSET-G The effectiveness and efficiency of the proposed BASSET-G are given in Lemma 4 and Lemma 5, respectively. Similar as BASSET-N, the proposed BASSET-G is (1) near-optimal ; and (2) fast and scalable for large graphs.
 Lemma 4 Effectiveness of BASSET-G Let I be the subset of nodes selected by Algorithum 2 and jIj X  k 0 : Then, g  X S ; T ; I X  X  1 1 = e  X  max jJj X  k 0 g  X S ; T ; J X  ; where g  X S ; T ; I X  ; and g  X S ; T ; J X  are defined by ( 4 ).
 Proof Similar as for Lemma 2. Omitted for brevity. h Lemma 5 Efficiency of BASSET-G The computational complexity of Algorithum 2 is upper bounded by O  X  n  X  max  X  k ; jSj ; jTj X  X  4  X  : Proof Similar as for Lemma 3. Omitted for brevity. h 5 Experimental evaluations In this section we present experimental results. All the experiments are designed to answer the following questions: 1 Effectiveness: how effective are the proposed  X  X ateway-ness X  scores in real graphs? 2 Efficiency: how fast and scalable are the proposed BASSET-N and BASSET-G? 5.1 Experimental setup Data sets We used six real data sets, which are summarized in Table 2 .

The first data set ( Karate ) is an un-weighted unipartite graph, which describes friend-ship among the 34 members of a karate club at a US university (Zachary 1977 ). Each node corresponding members are friends. Overall, we have n = 34 nodes and m = 156 edges.
The second data set ( PolBooks ) is a co-purchasing book network. 5 Each node is a political book and there is an edge between two books if purchased by the same person. Overall, we have n = 105 nodes and m = 882 edges.

The third data set ( MovieLens ) is from GroupLens project 6 . It contains 100,000 rating information from 943 users on 1,682 movies. Each user has rated at least 20 movies from 1 user-movie bipartite graph. We connect a user with a particular movie if s/he has given some positive ratings (4 or 5) to this movie. As the result, users who give only negative ratings and movies which receive only negative ratings are neglected. On the whole, there are 2,399 nodes (942 users, 1,447 movies) and 55,375 edges. The fourth data set ( AC ) and the fourth data set ( AA ) are both from DBLP. 7 The third data set ( AC ) is an un-weighted bipartite graph. We have two types of nodes: author and conference. The existence of the ence. Overall, we have 421,807 nodes and m = 2, 667, 199 edges.

The fifth data set ( AA ) is a co-authorship network, where each node is an author and the edge weight is the number of the co-authored papers between the two corresponding persons. Overall, we have n = 418,236 nodes and m = 2, 753, 798 edges.

The last data set ( NetFlix ) is from the Netflix prize 8 . Rows represent users and columns connect them with an edge. In total, we have 2,667,199 nodes (2,649,429 users and 17,770 movies), and 56,919,190 edges.

Parameter settings and machine configurations There is one parameter in BASSET-N and BASSET-G, the probability c for random walk with restart. We set c = 0.95, as suggested in (Tong et al. 2008 ). For the computational cost, we report the wall-clock time. All the experiments ran on the same machine with four 2.4GHz AMD CPUs and 48GB memory, running Linux (2.6 kernel). For each experiment, we run it 10 times and report the average.
 5.2 Effectiveness Here, we evaluate the effectiveness of the proposed  X  X ateway-ness X  scores. We first compare with several candidate methods in terms of separating the source from the target. And then, we present various case studies. 5.2.1 Quantitative comparisons The basic idea of the proposed  X  X ateway-ness X  scores is to find a subset of nodes which collectively play an important role in measuring the proximity from the source node (or assumption. We compare it with the following alternative choices: (a) selecting k nodes with the highest center-piece AND score (CePS-AND) (Tong and Faloutsos 2006 ); (b) selecting k nodes with the highest center-piece OR score (CePS-OR) (Tong and Faloutsos 2006 ); (c) randomly selecting k nodes (Rand); (d) randomly selecting k nodes from the neighboring nodes of the source node and the target node (Neighbor-Rand); (e) selecting k node t , 9 and then use the different methods to select a subset I with k nodes. Figure 2 presents the comparison results, where the x-axis is the number of nodes selected ( k ), and the y-axis is the normalized decay in terms of the proximity score from the source node s to chosen source-target pairs. From Fig. 2 , we can see that (1) the proposed BASSET-N we want to find a subset of k nodes which collectively has the highest score r  X I ; t  X  0 r  X I ; I X  1 r  X  s ; I X  0 : 5.2.2 Case studies Next, we will show some case studies, to demonstrate the effectiveness of BASSET-N and BASSET-G.
 Karate We start with Karate graph, which is widely used in social network analysis. In there are some  X  X ub X  nodes (e.g., nodes 33 and 34 in the left community; and nodes 1 and 4 in the right community). The two communities are connected by some  X  X ridging nodes X  (e.g., nodes 3, 10, 19, 20). Table 3 presents the resulting gateways of BASSET-N with the budget k = 5 for a few source-target pairs. The results are consistent with human intuition. belongs to, or are bridging nodes that connect the two communities when the source node and the target node belong to different communities. For example, if s = 1 and t = 33, the resulting nodes 3, 10, 11 are bridging nodes, while node 34 is the local center for the left community. Note that, we always return less than or equal to k = 5 nodes. For example, if s = 15 and t = 34, we only output one node (node 1) as the gateway. This is because all the paths from node 15 to node 34 must go through node 1.

PolBooks For this data set, the nodes are political books and the existence of the edge indicates the co-purchasing (by the same person) of the two books. Each book is annotated ( X  X osing Bin Laden X ) as the target node. Then, we ran the proposed BASSET-N to find the gateway with 10 nodes. The result is presented in Table 4 . The result is again consistent with human intuition, -the resulting gateway books are either popular books in one of the two communities ( X  X onservative X  vs.  X  X iberal X ) such as,  X  X ush country X  from  X  X onservative X , purchased by readers from both communities (e.g.,  X  X leeping with the devil X , etc).
MovieLens For this data set, we pick up a user who likes comedy but not horror movies (i.e., she has given positive ratings to some comedy movies, but has given negative ratings to some horror movies, or has never rated any horror movies) as the source node. We also BASSET-N to find the gateway with k = 10 nodes. Table 5 lists the resulting gateways for two such pairs of source-target. We can see that the resulting movies are either popular Lambs X  X ). Interestingly,  X  X  X hostbusters X  X , whose genre is both comedy and horror (therefore might be liked by both the source user and the target user), shows up in Table 5 a.
AC This is a bipartite graph. Given a source conference/author and a target conference/ author, we can run BASSET-N to find either the gateway conferences or the gateway authors (Table 6 ). Table 7 gives one such example when the source is  X  X LDB X  and the ( n node type. Again, we can see that the results make sense. The resulting gateway authors are either productive in one of the two fields: databases vs. statistics, (e.g., Prof. Michael I. mining (e.g., Dr. Rakesh Agrawal, Prof. Jiawei-Han), which is an intersection field between statistics and databases. We have similar observations for the resulting gateway conferences. For example,  X  X IGMOD X  and  X  X AI X  are isomorphic (i.e., have very similar neighbor sets) to  X  X LDB X  and  X  X IPS X , respectively; and  X  X DD X  is one major conference in data mining, which is a highly plausible major connection from  X  X LDB X  (databases) to  X  X IPS X  (statistics / machine learning).

AA We use this data set to perform case studies for the proposed BASSET-G. We choose (1) a group of people from a certain field (e.g.,  X  X ext X ,  X  X heory X , etc) as the source group S ; and (2) another group of people in some other field (e.g.,  X  X atabases X ,  X  X ioinfo-matics X , etc) as the target group T : Then, we ran the proposed BASSET-N to find the gateway with k = 10 nodes. Table 8 lists some results. They are all consistent with human intuition, -the resulting authors are either productive authors in one of the two fields, or multi-disciplinary, who have close collaborations to both the source and the target groups of authors. 5.3 Efficiency We will study the wall-clock running time of the proposed BASSET-N and BASSET-G here. Basically, we want to answer the following two questions: 1. (Speed) What is the speedup of the proposed BASSET-N and BASSET-G over the 2. (Scalability) How do BASSET-N and BASSET-G scale with the size of the graph
First, we compare BASSET-N and BASSET-G with two straightforward methods: (1)  X  X om-RWR X , where we use combinatorial enumeration to find the gateway and, for each enumeration, we compute the proximity from the new graph; and (2)  X  X om-Eval X , where we use combinatorial enumeration to find the gateway, and for each enumeration, we compute the proximity from the original graph. Figure 4 shows the comparison on two real data sets. We can draw the following conclusions. (1) Straightforward methods ( X  X om-RWR X  and  X  X om-Eval X ) are computationally intractable even for a small graph. For example, on the Karate data set with only 34 nodes, it takes more than 20,560 seconds and 100,000 seconds to find the k = 10 gateway by  X  X om-Eval X  and by  X  X om-RWR X , respectively. (2) The speedup of the proposed BASSET-N and BASSET-G over both  X  X om-Eval X  and  X  X om-RWR X  is significant -in most cases, we achieve several (up to 6) orders of magnitude speedups. (3) The speedup of the proposed BASSET-N and BASSET-G over both  X  X om-RWR X  and  X  X om-Eval X  quickly increases wrt the size of the gateway k . Note that we stop running the program if it takes more than 100,000 seconds (i.e., longer than a day).

Next, we evaluate the scalability of the proposed BASSET-N and BASSET-G wrt the following conclusions: (1) if we fix the number of nodes ( n ) in the graph, the wall-clock time of both BASSET-N and BASSET-G is almost constant wrt the number of edges ( m ); BASSET-N and BASSET-G is linear wrt the number of nodes ( n ). Therefore, they are suitable for large graphs. 6 Related work In this section, we review the related work, which can be categorized into four parts:
Betweenness centrality The proposed  X  X ateway-ness X  scores relate to measures of betweenness centrality, both those based on the shortest path (Freeman 1977 ), as well as those based on random walk (Newman 2005 ). When the gateway set size is k = 1, the proposed  X  X ateway-ness X  scores can be viewed as query-specific betweenness centrality measures. Moreover, in the proposed BASSET-N and BASSET-G, we aim to find a subset of nodes collectively , wherein traditional betweenness centrality, we usually calculate the score for each node independently (and then might pick k nodes with the highest individual scores).

Connection subgraphs In the proposed BASSET-N, the idea of finding a subset of nodes (Faloutsos et al. 2004 ; Koren et al. 2006 ; Tong and Faloutsos 2006 ). However, in con-nection subgraphs, we aim to find a subset of nodes which have strong connections among themselves for the purpose of visualization. While in the proposed BASSET-N, we im-plicity encourage the resulting subset of nodes to be disconnected with each other so that they are able to collectively disconnect the target node from the source node to the largest gateway with k = 1 for BASSET-N, it can be viewed as a normalized directed version of CePS-AND score (Tong and Faloutsos 2006 ). 10 Moreover, We allow the more general case where the source/target is a group of nodes in the proposed BASSET-G; however in connection subgraphs, the source/target is always a single node.

Graph proximity The basic idea of the proposed BASSET-N and BASSET-G is to find a source node (or the source group) to the target node (or the target group). Graph proximity itself is an important building block in many graph mining settings. Representative work includes the BANKS system (Aditya et al. 2002 ), link prediction (Liben-Nowell and Kleinberg 2003 ), content-based image retrieval (He et al. 2004 ), cross-modal correlation discovery (Pan et al. 2004 ), pattern matching (Tong et al. 2007 ), ObjectRank (Balmin et al. 2004 ), RelationalRank (Geerts et al. 2004 ), etc.

Other related work in graph mining In recent years, graph mining is a very hot research topic. Representative work includes pattern and law mining (Albert et al. 1999 ; Broder propagation (Kempe et al. 2003 ), fraud and anomaly detection (Neville et al. 2005 ; Noble and Cook 2003 ), recommendation (Agarwal and Merugu 2007 ; Cheng et al. 2007 ), community mining and graph partition (Backstrom et al. 2006 ; Chen et al. 2009 , Gibson et al. 1998 ; Girvan and Newman ; Karypis and Kumar 1999 ; Qian et al. 2009 ), near-clique detection (Pei et al. 2005 ), etc. 7 Conclusion In this paper, we study how to find good  X  X ateway X  nodes in a graph, given one or more source and target nodes. Our main contributions are: (a) we formulate the problem pre-cisely; (b) we develop BASSET-N and BASSET-G, two fast (up to 6 orders of magnitude of speedup) and scalable ( linear wrt the number of the nodes in the graph) algorithms to solve it in a provably near-optimal fashion, using sub-modularity. We applied the proposed BASSET-N and BASSET-G on real data sets to validate the effectiveness and efficiency. Appendix A proofs of the core theorem Here, we provide the detailed proof of Theorem 1 for completeness.
 Proof of P1 WLOG, we assume that I X f n k  X  1 ;::: n g . Let A and ~ A be the nor-malized adjacency matrices of the graph before/after we set the subset of nodes in I as sinks. Write A and ~ A in block form: where 0 is a matrix with all zero elements. Let ~ Q  X  X  1 c  X  X  I c ~ A  X  1 : We can also write ~ Q and Q in block form:
Applying the block matrix inverse lemma (Piegorsch 1990 )to ~ Q and Q , we get the following equations: Therefore, we have On the other hand, based on the properties of random walk with restart (Tong et al. we have which completes the proofs of P1. h Proof of P3 Since P1 holds, we have which completes the proofs of P3. h Proof of P2 Let I ; J ; K be three subsets and IJ : We will first prove by induction that, for any integer power j , the following inequality holds element-wise.
 j = 1, ..., j 0 , and we want to prove that it also holds for the case j = j 0 ? 1: In ( 12 ), the first inequality holds because of the induction assumption. The second inequality holds because A I A J 0 holds element-wise, and A I S K A J S K 0 holds element-wise.
 Since ~ Q  X  X  1 c  X  X  I c ~ A  X  1  X  X  1 c  X  Therefore, g  X  s ; t ; I X  is sub-modular, which completes the proof of P2. h Proof of P4 Since g  X S ; T ; I X  X  negative linear combination of sub-modular functions) , according to the linearity of sub-modular functions (Krause and Guestrin 2005 ), we have that g  X S ; T ; I X  is also sub-modular, which completes the proof of P4. h References
