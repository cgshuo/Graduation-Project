 Popularized Online Social Network (OSN) applications, especially the Social Network Sites (SNSs), provide people with great convenience for information sharing, collaborating and interacting. Trust in online social networks plays an important role for users to make trusted decisions when facing unfamiliar co-partners or environments. For example, the  X  X eb of Trust X  in Epinions.com builds a community of trusted members for users and makes personalized rec-ommendations. It is beneficial for the buyers to evaluate the trustworthiness of the unfamiliar recommenders, sellers or service providers before making pur-chase decisions. Given a pair of users who have no interaction experience, trust transitivity based trust inference can deduce the trust opinion between them by applying trust discounting and consensus operations to the trust propagation paths [7]. In the large-scale OSN, there are a great number of such paths and how to efficiently find appropriate trust inference paths emerges as a question.
Most existing trust inference path search approaches ignore the structure characteristics of the trust network, which makes the path search blind and cost expensive. Ant Colony Optimization (ACO)[1], inspired by the pheromone trail laying and following behavior of some ant species, is a metaheuristic for solv-ing hard combinatorial optimization problems. Similar to the ants that find the shortest paths connecting to the food, users in the ONS also want to find the most reliable trust inference path connecting to the target participants. However, the users flock with shared interests, pr eferences or opinions etc. and they com-pose the different communities. The stru cture of social networks attracts much attention and the research of community de tection in social networks derives [3]. The ideal communities in trust networks should be like this: the members in the same community trust each other and the distrust relationships do not appear in one community. We try to detect the communities in the trust network by trust and distrust relationships and cluster users as different colonies for ant colony optimization. Since users in one community have similar trusting and distrusting preferences, the clustering can help the path search have a clear sense of direction and tend to find trustworthy recommenders . Moreover, existing trust inference path search approaches do not accumula te and reuse search experience, so they cannot reduce the path search costs even for repeated path search requests. It also inspires us to utilize the ACO to solve this issue.

The main contribution of this paper includes a trust community detection methodandanACObasedTrustInferencePathSearchalgorithm(ACO-TIPS).
 The proposed trust community detection method utilizes Singular Value Decom-position (SVD) signs method [2] to process the trust relationship matrix to detect communities in the trust network and label them as colonies. For a given pair of source and target users, the ACO utilizes the pheromones of colonies close to the source user as experience information a nd the distances between the candidates and the target user in the singular vector space as heuristic information to find the optimal or near-optimal trust inference path solutions. Classical brute-force graph search based approaches are the mainstream in the field of the trust inference path search. J X sang et al. [7] used the Depth First Search algorithm to find all the possible paths connecting the source and target participants in the trust network. Similarly, Hang et al. [5] proposed CertProp with three search strategies ( shortest, fixed, selection ) to find the paths for trust evaluation. The trust inference requir es to find the best path connecting to each witness. Although the search algorithm is not detailed, the Depth First Search algorithm is obviously preferred to find all the possible paths. TidalTrust [4] utilizes a modified Breadth First Search to first find the trust inference path with the minimum depth and continue to find any other paths at the minimum depth. The trust inference paths with the maximum strength will be used in the calculation for inferring trust. In [13], the Breadth First Search algorithm is also used to find the trust propagation paths within the minimum depth for further trust evaluations. Ma et al. [11] proposed a bidirectional path search approach based on Dijkstra X  X  algorithm to find the trust inference path with the minimum deduced uncertainty.

There are also stochastic trust inference path search approaches. TrustWalker [6] performs random walks on the trust network to solve the recommendation issues for cold start users. Repeated random walks take into account both the trust values of the neighbors and the similarities between the target item and the items rated by the neighbors. Thus, it makes a good combination of trust based and collaborative filtering based recommendation. Liu et al. [10] modeled the optimal social trust path selection as the classical Multi-Con strained Optimal Path (MCOP) selection problem and proposed the Heuristic Social Context-Aware trust Network discovery algorithm (H-SCAN) based on the K-Best-First Search. This method shows better performance than Time-To-Live Breadth First Search, Random Walk Search and High Degree Search.

The brute-force search based approaches are computation costly and the path search experience cannot be accumulate d and reused for all the methods men-tioned above. So, given a pair of source and target participants, repeated requests for the trust path between them will lead to repeated path searches at the same or similar computation cost, unless the previous search results are saved. Obviously, it is infeasible to save such paths for the dynamic large-scale trust networks. 3.1 Trust Communities Detection The trust network can be formally described by a directed graph G = &lt;V,E&gt; , where V represents the set of participants and E represents the set of trust relationships. Binary trust relationships (i.e. trust and distrust relationships) are considered in this paper. So,  X  e v 1  X  v 2  X  E,  X  X  s e v v
The trust relationship matrix noted by T | V | X | V | =( t ij )isa | V | X | V | sparse matrix, where t ij = s e v adjacent matrix because it contains the  X  1 elements. So it not only describes how participants connect with others but also shows their opinions on trust worthiness. By decomposing this matrix with truncated SVD, we can cluster the participants by how they trust and distrust others and/or how they are trusted and distrusted by others with less dimensions. The decomposed trust relationship matrix with rank k can be represented by: Here T is the best possible rank k approximation to T and k&lt;rank ( T ). The value of k can be chosen by plotting the descending ordered singular values of T and finding the turning point of the line. Thus, the entries of S are the k dominant singular values and the rows of U and V can be regarded as the coordinates of the participants in the k dimensional spaces.

The SVD signs [2] is a clustering method which makes the singular value deposition of the adjacent matrix of the undirected graph and uses the sign patterns of the singular vectors to cluster the entries. In this paper, we apply this method to process the trust relationship matrix T so as to detect trust communities in the trust network. Since the matrix T is asymmetric, clustering methods by rows of U or V have different meanings. If the rows of U that have the same sign patterns on the k dimensions are classified into one cluster, this mayleadtoupto2 k clusters. It clusters the participants by how they trust and distrust others. Similarly, the sign patterns of the rows of V are also applicable and this clusters the participants by how they are trusted and distrusted by others.

For examples shown in Fig.1, trust and distrust relationships are distinguished as solid and dotted arrows. The left example shows that A and B both trust V ,V 3 ,V n and distrust V 2 ,V n  X  1 , and they are probably classified into the same cluster by using rows of U . In the example on the right side of Fig.1, A and B are both trusted by V 1 ,V 3 ,V n and distrusted by V 2 ,V n  X  1 . Thus, they are probably classified into the same cluster by using rows of V . For simplicity, we only use the sign patterns of the rows of U and ignore the rows of V . Given a pair of participants who have the similar trusted and distrusted participants, they may be classified into the same cluster, or to say, colony.

The instance in Fig.2 illustrates that, by building the trust relationship ma-trix and set k = 2, the ten vertices in the trust network are classified into three clusters according to the sign patterns ((  X  , +), (+ ,  X  )and(  X  ,  X  )) of the rows of U 10  X  2 (on the right side of Fig.2). In this clustering result, the trust rela-tionships lie between vertices in the same cluster and the distrust relationships lie between vertices in different clusters , which satisfies the expectation of ideal trust community. Thus, the SVD sign based trust community detection method is feasible.
 3.2 ACO with Multiple Colonies Following the subjective logic proposed by J X sang et al. [8], we infer the trust relationship of a pair of unfamiliar participants by applying the trust inference path (e.g. v 1  X  v 2  X  ...  X  v n ) with trust discounting operators  X  1: ... : n  X  1 n =  X  discounting operator . The Uncertainty Favoring Discounting operator (noted as  X  1 ) and Opposite Belief Favoring Discounting (noted as introduced in [8]. Here, only the last hop of the path is on functional trust and the former ones are on referral trust . Modified ACO is utilized in this paper to find appropriate trust inference paths.
 Transition possibilities of ants. With each participant labeled by a unique colony identifier, we can obtain the co ordinates of the colony centers in the k dimensional singular vector space. Given a pair of source and target par-ticipants v S and v T , the corresponding colony labels label ( v S )and label ( v T ) (belong to { label i | 1  X  i  X |{ label i }|} ), and the coordinates of the colony cen-ters center ( label i ). For each round of ACO, numbers of ants perform random walks from the source vertex. Each ant chooses its next hop by computing the transition possibilities for the successors of the current vertex. Without loss of generality, given the current vertex v A and its successors suc ( v A ), the transition possibility for the successor v B ( v B  X  suc ( v A )) can be obtained by the following equation where  X  v A  X  v B is the total amount of pheromone on e v A  X  v B and  X  v A  X  v B is the value of heuristic information. Parameters  X  and  X  determine the relative influence of the pheromone trails and the heuristic information. Since we consider multiple colonies, the pheromones of similar colonies are also utilized. w label i is the weight of the pheromone for label i . This pheromone weight is related to the distances between the source participant and each colony center in the k dimensional space. where pos ( v S ) are the coordinates of v S . Moreover, the value of heuristic informa-tion is also estimated by the distance be tween the coordinates of the successors and the target participant.
After the computation of transition possibilities for the successors, a random hop can be determined and the current vertex is updated. If the current vertex is the target participant, the ant stops and the path is recorded for further path selection.
 Selection of the optimal trust inference path. At the end of each round, all the found paths are compared by computing the deduced referral trust about the last recommender (i.e. the witness) as the quality of the path. Given a connecting opinion about the witness v ( i,n The first element in the round bracket denotes the index of the path and the second element denotes the inde x of the vertex along this path.

For each round of the ACO search, the optimal trust inference path among all the connecting paths found in this round is the path path k with the maximum described as to find path k that  X 
After the determination of the optimal trust inference path, we update the pheromones for colony label ( v S ) along this path by the following equation and ignore the rest found paths. where e v A  X  v B is an arbitrary edge of path k ,  X  is the evaporation rate of pheromones and e is the reinforcement factor to enhance the pheromones of the best path since the start of the algorithm.
 3.3 ACO Based Trust Inference Path Search Algorithm The overall trust inference path search algorithm first clusters the users by the trust community detection method. Then, by taking the clustered users as dif-ferent colonies, multiple rounds of ACO are performed to find the optimal or near-optimal trust inference path. The ACO-TIPS algorithm can improve the performance of each round of search gradually by utilizing, releasing and updat-ing pheromones. In order to simplify the trust inference path search problem, only one optimal trust propagation path is found for each search without con-sidering the fusions of multiple paths. The detailed algorithm is described in the Algorithm 1.
 Algorithm 1 ACO based Trust inference path search algorithm
In this algorithm, we address the exploit-vs-explore dilemma by introducing an exploring factor  X  (0 &lt; X &lt; 1). When computing the the transitive possibil-ities, the edges without pheromones share the possibility that equals to  X  and the ones with pheromones share the possibility that equals to 1  X   X  . This mech-anism is disabled when all the edges from the current vertex do or do not have pheromones. It protects the algorithm from the premature convergence at the initial rounds of searches and makes the subsequent searches able to find bet-ter paths. Moreover, the found path with the maximum deduced referral belief since the start of algorithm is rewarded by a strengthened reinforcement factor e strength . This can help the pheromones of the global best found path avoid to be submerged. Generally, the number of ants starts with a great number and then decreases gradually. After several rounds of trust inference path searches, it can find the trust inference path with high quality by one round of search with a small number of ants.

If we denote the number of ants as m and the maximum path depth as d (in this paper d = 7), in the worst case, the times of vertex scan would be m  X  ( d  X  1) in one round and the time complexity for one round of search is O ( m ). In this section, experiments are carried out on the Epinions data set to compare the performance of the proposed ACO-T IPS approach with the representative TidalTrust[4], CertProp(Sel.)[5] and H-SCAN[10] approaches on the path search efficiency and the applicability to the trust inference. 4.1 Data Set Description Epinions is a consumer reviews web site that helps people make informed buying decisions by valuable consumer insight and personalized recommendations. The extended Epinions data set released by [12] is available at trustlet.org which describes the trust and distrust relationships among users and their ratings on other user X  X  articles. The sampling method based on random walk introduced in [9] is utilized to scale down the original data set and the data set for experiments contains 33036 users who issued 84141 trust and distrust statements. 4.2 Methodology and Metrics First, the subjective opinion between arbitrary pair of users should be obtained. Given a pair of users ( v A and v B ), we count the number of the source user X  X  rat-ings on target user X  X  articles as th e number of observations (noted as n rating  X  0) can be obtained by:
Before the trust inference path search, the users are clustered by the trust community detection method with the left singular vector. The trust relation-ship matrix is reordered so that the rows corresponding to the users within the same cluster are together and the same reordering is also applied to the columns. The reordered trust relationship matrix is plotted in Fig.3. The blue dots rep-resent trust relationships and the red ones represent distrust relationships. The transverse lines are the borders of clust ers. In this figure, we can find that there are clusters where the users mainly trust each other in the same cluster and overall distrust the user s in some other clusters.
In order to validate the performance of ACO-TIPS in terms of trust inference path search efficiency and trust inferenc e accuracy, we use a standard Leave-one-out evaluation technique with 500 randomly chosen sample user pairs. Before the trust inference path search starts, the original trust statement is masked. All the comparative path search approaches are performed to find the trust inference path connecting the source user and the target user. When the path searches terminate, the number of the found paths and the scanned vertices per path are recorded as the metrics for the trus t inference path search efficiency. The approach with higher path discovery rate and lower scanned vertices per path shows better path search performance. Th en, the trust inference is performed by applying the found trust inference paths with trust discount operators  X  1 and  X  2 respectively. The deduced subjective o pinion is compared with the original subjective opinion obtained by the ground truth in terms of P-error and B-error introduced in [5] as the metrics for trus t inference accuracy. The lower errors in trust inference reflect better applicability of the path to trust inference.
In order to give a computation bound in the experiments, the maximum num-ber of scanned vertices is set to 5000 and the maximum depth of path is set to 7 according to the small world theory. For TidalTrust, CertProp(Sel.) and H-SCAN, repeated searches for the same user pair yield the same or similar results and costs, and thus they are performed only once. The proposed ACO-TIPS is performed in 40 rounds with decreased number of ants. We choose the mean performance of the last 5 rounds to make comparisons. 4.3 Results and Analysis Experiment results of the ACO-TIPS are illustrated in Fig.4a and Fig.4b. As we decrease the number of ants for each round, the number of scanned vertices per path also decreases. However, the path discovery rate (the number of searches that find at least one path divided by the number of samples), the P-errors and B-errors for  X  1 and  X  2 are all floating at a stable level.

The mean performance of the last 5 rounds of ACO-TIPS are compared with the performance of TidalTrust, CertProp(Sel.) and H-SCAN in Table.1. On trust inference path search, ACO-TIPS reaches the highest discovery rate 63.56% (9.59% higher than TidalTrust X  X  58%) a nd the lowest mean scanned vertices per path is 735.538 (38.9% less than TidalTrust X  X  1204). It means that ACO-TIPS can find the trust inference paths for the most number of samples with the lowest mean search cost. On trust inference, the P-errors and B-errors of ACO-TIPS for  X  1 and  X  2 are the lowest ones among those of the four trust inference path search approaches (P-error1, B-error1 , P-error2 and B-error2 of ACO-TIPS are 27.25%, 21.61%, 15.55% and 21.88% lower than those of TidalTrust respectively). This implies that the trust inference with the path found by ACO-TIPS reaches higher trust inference accuracy. Thanks to the pheromones released by the previous rounds of searches in ACO-TIPS, the subsequent rounds of searches can easily discover the trust in-ference paths with much less costs than previous ones. It implies that ACO-TIPS can accumulate and reuse former path se arch experience to speed up the path search. In ACO-TIPS, only the optimal path of each round is qualified to add pheromones. Furthermore, the optimal path since the start of the algorithm even gets additional pheromones. Therefore, ACO-TIPS tends to find better and bet-ter trust inference path after rounds of searches and make the trust inference more and more accurate until it finds the optimal path. In this paper, we propose a trust inference path search approach combining the trust community detection and the ACO with multiple colonies. The SVD sign clustering method is applied to detect tr ust communities according to how users trust and distrust others. Then, the trust communities are regarded as colonies in the ACO. By selecting the found path with the maximum deduced referral belief, the ACO-TIPS can accumulate an d reuse path search experience to find the optimal or near-optimal trust inference path efficiently. This optimal path can connect the source user to the target user with the most trustworthy witness, which leads to accurate tr ust inference results.

Since the trust network in the experiments is static, the so-called  X  X xploit X  or  X  X xplore X  period is transient. In fact, the evaporation of the pheromones and stochastic routing can make the ACO-TIPS applicable to the dynamic trust network, which needs to be further validat ed with suitable experiment environ-ments. Also, the idea of accumulating an d reusing experience in trust inference path search can be applied to the trust inference based recommendations for better accuracy and lower costs.
 Acknowledgments. This research is funded by the National Nature Science Foundation of China (No . 61272406) and the F undamental Research Funds for the Central Universities (HUST:2013TS101).
