 In this paper, we propose a new type of market model called the social domination game model. Given a set C of cus-tomers and a set P of products, this model simulates market competition among P and estimates market shares, consid-ering both the dominance relation between C and P and the influence relation among the members of C . With this model, we propose a greedy product positioning algorithm for designing a new product that approximately maximizes market share. Our experimental results show that the pro-posed algorithm creates a new product gaining up to 97.5% market share of the best product X  X  market share obtained by the exact method, while significantly outperforming the exact method in terms of running time, i.e. , by up to two orders of magnitude.
 H.2.8 [ Database Management ]: Database Applications X  Data Mining Domination game, influence propagation
Domination Game [8] provides an effective method of anal-ysis for determining how many customers a product may po-tentially attract. The goal is, given a market with compet-ing products, with varying attributes, to analyze customer decisions to purchase products such that all attributes sat-isfy his/her preference. Specifically, this model considers both products and customer preferences as points in a multi-dimensional attribute space, where each dimension repre-sents one attribute of a commodity. To determine whether a customer is willing to buy a product, dominance relation-ships between customers and products are defined such that a customer is dominated by a product if all attributes of the product are superior to the customer X  X  preferences. In this paper, we denote such modeling as  X  X ominance-based adoption X  model, as it assumes customer decisions are based on product dominance. In such model, to maximize market share, a company aims to design its product to dominate as many customer preference points as possible.

In a clear contrast, recent research suggests that user pur-chase decisions are not only affected by product attributes, but also significantly affected by social influences [1, 3, 5]. As an example, the bandwagon effect model [6] suggests that, people tend to consider not only quality but also so-cial trends as important factors that are created by infor-mation spread through society. Another example of ana-lytically modeling social influence is influence maximization framework [5], in which the objective is to find a small set of  X  X nfluential X  customers in a social network. In this paper, we call this direction of research  X  X nfluence-based adoption" model. While this model has been widely applied to iden-tify influential customers, no work has addressed how this line of research can be used for the purpose of generating influential products.

Motivated by these two lines of research, we aim at com-bining dominance-and influence-based models for the pur-pose of designing influential products. Toward this goal, we propose the Social Domination Game model, combining both dominance-based and influence-based adoption. Specif-ically, we extend the Domination Game model [8] on the concept of the Linear Threshold (LT) model [5], which is an influence diffusion model widely studied in viral marketing. Our model can be used as a practical tool that simulates the competition among products in a market. Every customer in the multi-dimensional space is matched with each vertex in a social graph of the LT model. However, unlike the LT model, the process by which diffusion occurs is modified dif-ferently in that our model handles not only influence-based adoption but also dominance-based adoption.

However, in our proposed model, it is still expensive to find the best position to gain the maximum market share in the multi-dimensional space. One example of data struc-tures for expediting such search is Customer Search Tree (CST) [8] of exploring all candidate positions that give the maximum market share in the multi-dimensional market. They also proposed an algorithm, CST-BFS on CST, to find the best position of products naively. However, CST-BFS still incurs exponential cost for high-dimensional data. To illus-trate, in our empirical evaluations, finding the best product for six-dimensional products for thousand customers was es-timated to take more than three years! Considering the scale and dynamic nature of product market, this algorithm is im-p ractical.

As a practical alternative, we thus design an efficient greedy algorithm, which we call Greedy Product Positioning ( GPP ) algorithm, on the social domination game model as a prac-tical approximation method. With this approximation, our algorithm finds near-optimal, i.e. , up to 97.5% of the opti-mal solution, solution while outperforming the exact method by two orders of magnitude, as we empirically report in Sec-tion 4.
This section introduces basic notations to address the influential product finding problem. Let D be a finite d -dimensional space. Let C be a finite set of n customer pref-erences. For simplicity, we assume that each customer has his/her own preference. A customer preference c in C is rep-resented by a point on D , i.e. , c = ( c [1] , . . . , c [ d ]). Let P be a finite set of m products. Similar to customer prefer-ences, a product p in P is represented by a point on D , i.e. , p = ( p [1] , . . . , p [ d ]).

In Section 2.1 and 2.2, we present two adoption models, dominance-based adoption model and influence-based adop-tion model to define when a customer c adopts a product p . In Section 2.3, to combine two adoption models, we propose the social domination game model.
We first present a dominance-based adoption model pro-posed in [8]. Given a d -dimensional space, we can employ a dominance relationship between customers and products. Given c  X  C and p  X  P , p dominates c on D , if and only if
With this concept of dominance, we compute the proba-bility that a customer c adopts a product p . Given a set P of products that dominate c , we assume that c has equal inter-ests with every member of P . If a customer c is dominated by k products including a product p , dominance-based prob-ability with which c adopts p , denoted by D ( c, p ), is defined by 1 /k . For example, Figure 1 depicts a market scenario with two products and seven customers. Because a cus-tomer c 2 is dominated by both products, c 2 is likely to be interested in them. The probability D ( c 2 , p 1 ) is 1 / 2. On the other hand, because a customer c 4 is dominated by only one product p 2 , the probability D ( c 4 , p 2 ) is 1.
We then present an influence-based adoption model pro-posed in [1, 3, 5]. Given a set C of customers, a social graph G = ( C , E ) can be represented by the relationship between customers, where ( c i , c j )  X  E is an edge between c i
According to neighbors of a customer c , we compute the probability with which c adopts a product p , imitating its neighbor X  X  adoption. A customer c tends to adopt a product p as more of its neighbors adopt a product p . Therefore, for a customer c , the proportion of neighbors that adopt a prod-uct p in neighbors of c is regarded as influence-based adop-tion probability, denoted by I ( c, p ). For example, assume that a customer c 1 has a total of ten customers as neighbors in a social graph G . If two neighbors of c 1 adopted a prod-uct p 1 and three neighbors of c 1 adopted a product p 2 , the probability I ( c 1 , p 1 ) is 2 / 10 and I ( c 1 , p 2 ) is 3 / 10.
Figure 1: Multi-dimensional space for a market
Based on the two models, we now propose a combined model. Following the convention of classic social influence model [3, 5], we refer customers adopting a product as be-ing active , otherwise they are referred to as being inactive . Once customers become active, they will not revert to being inactive and they will not adopt other products. We acti-vate a customer c using a product p if the weighted sum of its dominance-based adoption probability and its influence-based adoption probability is at least its threshold, i.e., where, for each customer, a bandwagon factor  X  c represents the tendency of a bandwagon effect [6] to occur, a threshold  X  represents the tendency to offer adoption resistance [7]. Quantifying bandwagon effects and adoption resistance were extensively studied [1, 4, 5, 6, 7].

The above equation describes the process of product adop-tions in the market. Given a customer set C and a prod-uct set P on the multi-dimensional space D , domination relationships between C and P determine dominance-based adoption probabilities. Any customer c for which (1  X   X  c D ( c, p ) reaches  X  c will make the earliest purchase even though they have not been affected by their neighbors. We call this type of customers early adopters . The influence diffusion starts with these early adopters as a seed set and continues along edges in a social graph G until no adoption occurs. At the end of the entire diffusion process, we define the market share of a product p as the total number of active customers who adopted a product p .
This section introduces the product positioning problem in the social domination game model. Section 3.1 defines the problem we solve and Section 3.2 discusses algorithms to solve product positioning problem.
Assume that we design a new product to place on the market. Our objective is to locate the new product on the position that gains the maximum market share in a multi-dimensional space of the social domination game model. In our proposed model, a new product can enter the mar-ket as one product point p = ( p [1] , ..., p [ d ]) on the multi-dimensional space D by determining its specifications of each attribute, and then we can estimate market share of the new product. We call this process  X  X roduct positioning X .
As mentioned in [8], we have two major constraints with p roduct positioning:
Definition 1. Effective Dominating Point (EDP): Given a sub-set S of a customer point set C , EDP of S is the point e to which points in S are combined in minimum coordinate values, i.e.,  X  i  X  [1 , d ] : e [ i ] = min c k  X  S c k [ i ] .
In this section, we discuss algorithms to solve product positioning. Section 3.2.1 introduces an existing algorithm as a baseline. Section 3.2.2 then proposes a new algorithm.
To find the best position for a new product, a straightfor-ward method is to search for all possible customer combi-nations for identifying all EDPs and find the position that gives the maximum market share. CST is a tree structure for searching all customer combinations, but using CST-BFS on CST is quite expensive and requires time exponential to dimensionality. Moreover, unlike the Dominance game , computing a market share in our proposed model is not in a polynomial time. Simulating the influence propagation on diffusion models to compute a market share has been proven to be NP-hard [3]. Although our problem is not sensitive to efficiency, exact methods are too impractical.
We propose the greedy product positioning ( GPP ) algorithm on the social domination game model to find the product po-sition that approximately maximizes market share. Assume a set S in which customer points are combined as a EDP. We add an additional customer point c into S , which results in the EDP of S  X  c to become the new product point that gives the maximum market share. Our algorithm repeats this step, called greedy selection , to add one customer point into S at a time until no more customer points can be added because of the hyperplane.

Lemma 1. Given a set S of points and two points c 1 and S  X  c 1 dominates the EDP e 2 of S  X  c 2 .

Proof. Assume that e 1 does not dominate e 2 . Then, for some dimension, e 1 [ i ] is larger than e 2 [ i ] . However, that is contradictory because e 1 [ i ] is smaller than or equal to e 2 [ i ] for every dimension i in all possible orders among Therefore, e 1 dominates e 2 .
 Algorithm 1 GPP al gorithm ( C , P )
Lemma 2 . If a product point p 1 dominates another prod-uct point p 2 and both points are on a hyperplane, p 2 gives no more market share than p 1 in the social domination game model.
 and R 2 is the region dominated by p 2 . For every customer, ity because R 1 completely covers R 2 . Further, by the same reasoning, a customer set C 1 for early adopters of p 1 in-cludes a customer set C 2 for early adopters of p 2 . It is straightforward to show that the sub-set C 2 cannot gain more market share than the super-set C 1 in even a fair environ-gives no more market share than p 1 .

Theorem 1 . Given a set S of customer points and two customer points c 1 and c 2 whose relation is that c 1 domi-nates c 2 , the EDP e 2 of S  X  c 2 gives no more market share than the EDP e 1 of S  X  c 1 .
 Proof. It is intuitively proven from Lemmas 1 and 2.
Algorithm 1 shows the pseudo-code of our proposed ap-p roach. According to Theorem 1, to find the product that has the maximum market share, we only need to consider the customer points that are not dominated by other cus-tomer points as greedy selections. These customer points are generally referred to as skyline [2] points. We first insert all skyline points of C into list  X  as candidates of further greedy selections for making the new product (line 3). We then search all customer points in  X  to carry out the first greedy selection (lines 5-21). If e is profitable, the market share of e is computed in the social domination game model and compared with the current maximum market share (lines 8-10). Otherwise,  X  removes the customer point c that is used for generating e , while we update the points that newly become skyline points by removing c (lines 14-17). The pro-cess for adding greedy selections to S continues until there is no candidate point c in  X  .
This section reports our experiment setting and results.
D atasets. We combined real-life social influence data with synthetic product data for the experiments. The multi-dimensional market space consists of synthetic datasets, cus-tomer points and product points in a [0, 1000] d space, where d is the dimensionality. These points have uniformly in-dependent distribution on the point range. On the other hand, because the influence propagation needs to reflect the unique characteristics of real-world networks, we used real social network data e.g. , Epinions 1 , the who-trust-whom so-cial network of general consumer review site Epinons.com. We applied the BFS-sampling method for extracting our so-cial graph from very large networks. We then conducted tests on accuracy and running time while varying the data size of a customer set, which ranged from 1K to 5K, and varying the dimensionality, which ranged from 2 to 6. The default setting is 1K customers and 2 dimensions. Before the entrance of the new product, the market already had three other competing products. During the diffusion pro-cess in our model, the same adoption rule was applied to every product. In our experiments, two customer parame-ters, bandwagon factor  X  c and threshold  X  c , were assigned independently at random in the interval [0,1] as existing general models [3, 5]. In specific applications [1], however, learning values of these parameters is also possible.
Baselines. We compared GPP with these three baselines: Running time. Figure 2 shows that GPP outperforms CST-BFS in terms of running time. The running time gap between two methods, GPP and CST-BFS , increases with the increase of both data size and dimensionality. In the test on varying dimensionality, we can predict that CST-BFS takes the impractical running time over three dimensions. Com-pared with CST-BFS , GPP tolerates more dimensions despite exponential running time with the increase of dimensional-ity. 1 E pinions social network. http://snap.stanford.edu Market share. Figure 3 shows the effectiveness of GPP . When data size increases, the accuracy also increases from 95.8% (1K) to 97.5% (3K) because the average market share increases but the market share gap between GPP and CST-BFS does not change much. Although the accuracy of GPP has been slightly decreased from 95.8% (2D) to 89.1% (3D) as the dimensionality increased from two to three, the accuracy is still high in GPP .
 This work was supported by the IT R&amp;D program of MKE/KEIT [10041244, SmartTV 2.0 Software Platform].
