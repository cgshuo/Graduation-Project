 Within text-to-speech programs, it is very impor-tant to deal with heterony ms, that is, words that are spelt the same but that have different readings, e.g. "bow" (a ribbon) and "bow" (of a ship). Reportedly, Japanese text-to-speech programs read sentences incorrectly more than 10 percent of the time. This problem is mainly caused by heteronyms and three studies have attempted to solve it (Yarowsky, 1996; Li and Takeuchi, 1997; and Umemura and Shimizu, 2000). corresponded directly to the sense tag or part-of-speech of that word. In other words, sense tagging and part-of-speech tagging can determine the read-ing of a word. However, proper names have the same sense tag, for example,  X  X ocation X  for land-marks and the same part-of-speech, the  X  X oun. X  Clearly then, reading proper names is outside the scope of previous studies. Also, the proper names of locations, people, orga nizations, and others are dominant sources of heteronyms. Here, we focus on proper names. Our proposal is similar to previ-ous studies in that both use machine learning. However, previous methods used expensive re-sources, e.g., a corpus in which words are manually tagged according to their pronunciation. Instead, we propose a method that automatically builds a pronunciation-tagged corpus using the Web as a source of training data for word pronun-ciation disambiguation. proposes solutions, and Sections 3 and 4 report experimental results. We offer our discussion in Section 5 and conclusions in Section 6. It is crucial to correctly read proper names in open-domain text-to-speech programs, for example, ap-plications that read Web pages or newspaper articles. To the best of our knowledge, no other studies have approached this problem. In this paper, we focus on the Japanese language. In this section, we first explain the Japanese writing system (Sec-tions 2.1), followed by our proposal, the basic method (Section 2.2), and the improved method (Section 2.3). 2.1 The Japanese writing system First, we should briefly explain the modern Japa-nese writing system. The Japanese language is rep-resented by three scripts: Script Sample KANJI  X  X  X  HIRAGANA (reading)  X  X  X  X  X  X  X  KATAKANA (reading)  X  X  X  X  X  X  ings for the word  X  X  X  X  .  X  The lower two sam-ples are representations of the same pronunciation of  X  oo daira.  X  sulting a dictionary (see Section 3.1 for the ex-periment). Therefore, in th is paper, we assume that listing is performed prior to disambiguation. 2.2 The basic method based on page hits The idea is based on the observation that proper names in Kanji often co-occur with their pro-nunciation in Hiragana (or Katakana) within a sin-gle Web page, as shown Figure 1 . In the figure, the name  X  X  X  X  X  in Kanji is indicated with an oval, and its pronunc iation in Katakana,  X  X  X  X  X   X  X  X  ,  X  is high-lighted with the dotted oval. which  X  X  X  X  X  and  X  X  X  X  X  X  X  X  X  co-occur. suggests to us the most common pronunciation. 
Figure 1 On the Web, words written in Kanji often co-occur with the pronunciation written in 
Our simple proposal to pick up the most fre-quent pronunciation achieves surprisingly high accuracy for open data, as Section 4 will later show. 2.3 The improved method using a classifier The basic method mentioned above merely selects the most frequent pronunciation and neglects all others. This is not disambiguation at all. word-sense disambiguation. The hit pages can pro-vide us with training data for reading a particular word. We feed the down loaded data into the learner of a classifier. We do not stick to a certain method of machine learning; any state-of-the-art method will work. The features used in classifica-tion will be explained in the latter half of this sub-section. Collecting training data from the Web Our input is a particular word, W, and the set of its readings, {R k | k=1~K}. 1,000. Thus, for each reading R k of W, we have, at most 1,000 training data T l (W). Training the classifier From the training data T l (W), we make feature vectors that are fed into the learner of the decision tree with the correct reading R k for the word in question, W. which hereafter is called the window size. ground the pronunciation disambiguation task to the real world through the Web. In other words, they give us knowledge about the problem at hand, i.e., how to read proper names in a real-world con-text. We conducted the experiments using proper loca-tion names. 3.1 Ambiguous name lists Japan Post openly provides postal address lists associated with pronunciations . proper location names and their pronunciations. As the breakdown of Table 2 shows, 5.7% of proper location names have multiple pronunciations, while 94.3% have a single pronunciation. The av-erage ambiguity is 2.26 for ambiguous types. Next, we took into consideration the frequency of each proper name on the Web. Frequency is surrogated by the page count when the query of a word itself is searched for using a search engine. About one quarter of the occurrences were found to be am-biguous. 
Table 2 Pronunciation ambiguities in Japanese Web page. If the pairing of a word W and its read-ing R do not occur on the Web, the proposal will not work. We checked this, and found that there was only one pair missing out of the 79,861 on our list. In this sense, the coverage is almost 100%. 3.2 Open Data We tested the performance of our proposed meth-ods on openly available data. which consists of sentences from Japanese news-papers. Every word is tagged with part-of-speech and pronunciation. heteronyms, that is, those that contain Kanji that can be found in the above-mentioned list of loca-tion heteronyms within the postal address data. There were 268 occurrences in total. There were 72 types of heteronyms. We conducted two experiments: (1) an open test; and (2) a study on the degree of ambiguity. 4.1 Open test We evaluated our proposals, i.e., the basic method and the improved method with the open data ex-plained in Section 3.1. Both methods achieved a high rate of accuracy. Basic method performance In the basic method, the most common pronuncia-tion on the Web is selected. The frequency is esti-mated by the page count of the query for the pairing of the word W and its pronunciation, R i . and Katakana pronunciation scripts. The average accuracy for the open data was 89.2% for Hiragana and 86.6% for Katakana ( Table 3 ). These results are very high, suggesting a strong bias of pronun-ciation distribution in the open data. Table 3 Open test accuracy for the basic method Performance of the improved method 
Table 4 shows the average results for all 268 occurrences. The accuracy of the basic method ( Table 3 ) was lower than that of our improved proposal in all window sizes, and it was outper-formed at a window size of ten by about 3.5% for both Hiragana and Katakana. 
Table 4 Open test accuracy for the improved 4.2 Degree of ambiguity Here, we examine the relationship between the degree of pronunciation ambiguity and pronuncia-tion accuracy using a cross-validation test for train-ing data 2 for the improved method with Hiragana. Average case We conducted the first experiment with twenty words 3 that were selected randomly from the Am-biguous Name List (Section 3.1). The average am-performance of the improved proposal. 
Class M=2 M=5 M=10 basic 2.1 89.2 % 90.9 % 92.3 % 67.5% (window size). The accuracy changes word by word, though the average was high about 90% of the time. racy of the basic method, i.e., the percentage for the most frequent pronunciation. The improved method achieves much better accuracy than the  X  X asic X  one. The most ambiguous case Next, we obtained the results ( Table 6 ) for the most ambiguous cases, where the degree of ambi-guity ranged from six to eleven 4 . The average am-biguity was 7.1. As we expected, the performances were poorer than the average cases ou tlined above, although they were still high, i.e., the average ranged from about 70% to about 80 %. Again, the improved method achieved much better accuracy than the  X  X asic X  method. 5 Transliteration (Knight and Graehl, 1998) is a mapping from one system of writing into another, automation of which has been actively studied be-tween English and other languages such as Arabic, Chinese, Korean, Thai, and Japanese. If there are multiple translation candidates, by incorporating context in a way similar to our proposal, one will be able to disambiguate them. This paper proposed a new method for reading proper names. In our proposed method, using Web pages containing Kanji and Hiragana (or Katakana) representations of the same proper names, we can learn how to read proper names with multiple read-ings via a state-of-the-art machine learner. Thus, the proposed process requires no human interven-tion. The current accuracy was around 90% for open data. 
