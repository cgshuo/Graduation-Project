 Bernhard Sch  X  olkopf 1 BS @ TUEBINGEN . MPG . DE MPI for Intelligent Systems and 2 Stanford University In recent years, there has been an increasing effort in uncovering, understanding, and controlling diffusion and propagation processes in a broad range of domains: in-formation propagation (Leskovec et al., 2007), social net-works (Kempe et al., 2003), viral marketing (Richardson &amp; Domingos, 2002), and epidemiology (Wallinga &amp; Te-unis, 2004). Diffusion networks have raised many re-search problems, ranging from network inference (Gomez-Rodriguez et al., 2010; 2011) to influence spread maxi-mization (Kempe et al., 2003). In this article, we pay at-tention to the latter problem, and we propose a method for continuous time influence maximization that accounts for the temporal dynamics of diffusion networks.
 Influence spread maximization tackles the problem of se-lecting the most influential source node set of a given size in a diffusion network. A diffusion process that starts in such an influential set of nodes is expected to reach the greatest number of nodes in the network. In information propagation, the problem reduces to choosing the set of blogs and news media sites that together are expected to spread a piece of news to the greatest number of sites. In viral marketing, it consists of identifying the most in-fluential set of trendsetters that together may influence the greatest number of customers. Finally, in epidemiology, the influence maximization problem reduces to finding the set of individuals that together are most likely to spread an ill-ness or virus to the greatest percentage of the population. In this latter case, the solution of the influence maximization problem helps towards developing vaccination and quaran-tine policies.
 In our work, we build on the fully continuous time model of diffusion recently introduced by Gomez-Rodriguez et al. (2011). This model accounts for temporally heterogeneous interactions within a diffusion network  X  it allows informa-tion (or influence) to spread at different rates across dif-ferent edges, as shown in real-world examples. We first describe how, given a set of source nodes, we can com-pute the average total number of infected nodes analyti-cally using the work of Kulkarni (1986). The key observa-tion is that the infection time of a node in a network with stochastic edge lengths is the length of the stochastic short-est path from the source nodes to the node. Later, we show that finding the optimal influential set of source nodes in the continuous time influence maximization problem is a NP-hard problem. We then provide an approximation al-gorithm that finds a suboptimal set of source nodes with provable guarantees in terms of the average total number of infected nodes.
 Related work. Richardson &amp; Domingos (2002) were the first to study influence maximization as an algorithmic pro-blem, motivated by marketing applications. In their work, they proposed heuristics for choosing a set of influential customers with a large overall effect on a network, and methods to infer the influence of each customer were de-veloped. Kempe et al. (2003) posed influence maximiza-tion in a social network as a discrete optimization problem. They showed that the optimal solution is NP-hard for se-veral models of influence, and obtained the first provable approximation guarantees for efficient algorithms based on a natural diminishing property of the problem, submodu-larity. Since then there have been substantial developments that build on their seminal work. Efficient influence maxi-mization that uses heuristics to speed up the optimization problem has been proposed (Chen et al., 2009; 2010) and influence maximization has been studied on the context of competing cascades (Bharathi et al., 2007) or under addi-tional constraints (Goyal et al., 2010).
 However, to the best of our knowledge, previous work on influence maximization has ignored the underlying tempo-ral dynamics governing diffusion networks  X  once a trans-mission occurs, it always occurs at the same rate or tem-poral scale. In contrast, we consider heterogeneous pair-wise transmission rates, found in many real-world exam-ples. In information propagation, news media sites and pro-fessional bloggers typically report news faster than people that maintain personal blogs. In epidemiology, people meet each other with different frequencies and then the pairwise transmission rates between individuals within a population differ. Finally, in viral marketing, some customers make up their minds about a product or service quicker than others, and then pass recommendations on at different rates. The main contribution of our work is twofold. First, it considers a novel continuous time formulation of the in-fluence maximization problem in which information or in-fluence can spread at different rates across different edges, as in real-world examples. Second, this continuous time approach allows us to analytically compute and efficiently optimize the influence ( i.e. , average total number of infec-tions), avoiding the use of heuristics (Chen et al., 2010; 2009) or Monte Carlo simulations (Kempe et al., 2003). In this section, we build on the fully continuous time model of diffusion recently proposed by Gomez-Rodriguez et al. (2011). We start by describing how the diffusion model accounts for pairwise interactions and then continue dis-cussing some basic assumptions about diffusion processes. We conclude with a statement of the continuous time in-fluence maximization problem.
 Pairwise transmission likelihood. In a diffusion network, we first need to model the pairwise interactions between nodes. We pay attention to the general case in which di-fferent pairwise interactions between nodes in the network occur at different rates. Define f ( t j | t i ;  X  i,j ditional likelihood of transmission between a node i and a node j , where t i and t j are infection times and  X  i,j the transmission rate. We assume that the likelihood de-pends on the pairwise transmission rate  X  i,j and the time difference ( t j  X  t i ) ( i.e. , it is time shift invariant). More-over, a node cannot be infected by a node infected later in time ( i.e. , t j &gt; t i ) and as  X  i,j  X  0 , the expected trans-mission time becomes arbitrarily long.
 In the remainder of the paper, we consider the exponential wise interactions for the sake of simplicity. The expo-nential model is a well-known parametric model for mo-deling diffusion and influence in social and information networks (Gomez-Rodriguez et al., 2010). However, our results can easily be extended to diffusion networks with phase-type pairwise transmission likelihoods. This is im-portant since the set of phase-type distributions is dense in the field of all positive-valued distributions and it can used to approximate power-laws, which have been also used for modeling diffusions in social networks (Gomez-Rodriguez &amp; Sch  X  olkopf, 2012), Rayleigh distributions, which have been used in epidemiology (Wallinga &amp; Teunis, 2004), and also subprobability distributions, which enable us to de-scribe two step traditional diffusion models (Kempe et al., 2003), in which with probability (1  X   X  ) an infection may never occur.
 Continuous time diffusion process. We consider diffu-sion and propagation processes that occur over static net-works with known (or inferred) connectivity and trans-mission rates. A diffusion process starts when a source node set A becomes infected at time t = 0 by action of an external source to the network. Then, source nodes try to infect their children ( i.e. , neighbors that they can reach directly through an outgoing edge). Once a child i gets infected at time t i , it tries to infect her own children, and so on. For some pairwise transmission likelihoods, it may happen that t i  X   X  and child i is never infected. Here, we assume that a node i becomes infected as soon as one of its parents ( i.e. , neighbors that are able to reach node i through an outgoing edge) infects it, and later infections by other parents do not contribute anymore towards the evo-lution of the diffusion process. As a consequence of this assumption, at any time t  X  0 there may be some nodes and edges in the network that are useless for the spread of the information (be it in the form of a meme, a sales deci-sion or a virus) towards a specific node n . If these nodes get infected and transmit the information to other nodes, this information can only reach n through previously in-fected nodes. Therefore, the infection time t n of node n does not depend on these nodes.
 Finally, given a diffusion process that started in the set of source nodes A , we define N ( A ; T ) as the number of nodes infected up to time T and then define the influence function  X  ( A ; T ) as the average total number of nodes infected up to time T , i.e. ,  X  ( A ; T ) = E N ( A ; T ) .
 Continuous time influence maximization problem. Our goal is to find the set of source nodes A in a diffusion net-work G that maximizes the influence function  X  ( A ; T ) . In other words, the set of source nodes A such that a diffusion process in G reaches, on average, the greatest number of nodes before a window cut off T . Thus, we aim to solve: where the source set A is the variable to optimize and the time horizon T and the source set cardinality k are cons-tants. We start this section by describing how to evaluate the in-fluence function  X  ( A ; T ) for any set of sources A in a net-work G using the work of Kulkarni (1986). The key ob-servation is that the infection time of a node in a network with stochastic edge lengths is the length of the stochas-tic shortest path from the source nodes to the node. Then, we show that the continuous time influence maximization problem defined by Eq. 1 is NP-hard. Finally, we show how to efficiently find a provable near-optimal solution to our maximization problem by exploiting a natural dimin-ishing returns property of our objective function. Evaluating the influence. The influence function depends on the probability of infection of every node in the network as follows: where t n is the infection time of node n , A is the set of source nodes, and T is the time horizon or time window cut-off. Therefore, we need to compute the probability of infection P ( t n  X  T | A ) for each node n in the network. Note that whenever n  X  A , the probability of infection P ( t n  X  T | A ) is trivially 1 . We will refer to node n as sink node.
 Revisiting the basic assumptions about a diffusion process that we presented in Section 2, we recall some definitions to describe its temporal evolution as in Kulkarni (1986). Given a diffusion network G = ( V,E ) , a set of nodes B  X  V , and a node n  X  V , we define the set of nodes blocked by or dominated by B : By definition, B  X  S n ( B ) and S n ( S n ( B )) = S n ( B ) . We now define the set  X   X  n as: In words, all nodes in X  X   X   X  n block only themselves re-lative to the sink node n . We can find all sets in  X   X  ficiently (Georgiadis et al., 2006; Provan &amp; Shier, 1996). In particular, we are able to find each X  X   X   X  n in time O ( | V | ) . However, in dense networks, |  X   X  n | can be exponen-tially large and lead to a worst-case non polynomial time al-gorithm. In order to illustrate this, we compute max n |  X  across 1 , 000 random source sets with | S | = 5 and | S | = 10 for several 256 -node hierarchical networks of increasing network density. We observe that max n |  X   X  n | &lt; 85 for all networks up to 2 edges per node in average. How-ever, max n |  X   X  n | grows quickly for higher network densi-ties ( e.g. , max n |  X   X  n | &lt; 7750 for a network with 2 . 5 edges per node in average). In order to overcome this draw-back, we will propose several speed-ups (LTP and LSN) that provide approximate solutions or sparsify the networks as in Mathioudakis et al. (2011).
 Given a diffusion process that starts in a set of source nodes A , a sink node n and any time t  X  0 , we denote the set of infected nodes as I ( t | A ) , the set of useless nodes as U n ( t | A ) , and the set of disabled nodes ( i.e. , infected or use-less) as X n ( t | A ) . Useless nodes are nodes that if they get infected and transmit the information to other nodes, this information can only reach the sink node n through pre-viously infected nodes. Figures 1(a) and 1(b) illustrate the set of infected nodes ( I ) and the set of useless nodes ( U for a diffusion process in a small network at two different times. Note that the set of disabled nodes ( X n ) is com-posed of the sets of infected ( I ) and useless nodes ( U and X n ( t | A ) = S n ( I ( t | A )) . Now, by studying the tem-poral evolution of X n ( t | A ) we will be able to compute P ( t n  X  T | A ) .
 First, for a diffusion process that starts in the set of source nodes A , it can be shown that the set of disabled nodes X n ( t | A ) at any time t  X  0 belongs to  X   X  n .
 Theorem 1. (Kulkarni (1986)) Given a set of source nodes A , a sink node n and any time t  X  0 , X n ( t | A )  X   X   X  Figure 1(c) enumerates all sets of disabled nodes X  X   X   X  such that A  X  X for the small network depicted in Fi-gures 1(a) and 1(b). They represent the states that we need to describe the evolution of a diffusion process that starts in the set of sources A relative to the sink node n . Now, assu-ming independent pairwise exponential transmission like-lihoods in the diffusion network, the following Th. applies: Theorem 2. (Kulkarni (1986)) Given a set of source nodes A , a sink node n and independent pairwise exponential is a continuous time Markov chain (CTMC) with state space { X : X  X   X   X  n ,A  X  X } and infinitesimal generator matrix Q = [ q ( D,B )] ( D,B  X  { X : X  X   X   X  n ,A  X  X } ) given by: q ( D,B ) = where C ( D ) is the unique minimal cut between D and  X  D = V \ D and C v ( D ) = { ( u,v )  X  C ( D ) } .
 Finally, let t n be the length of the fastest (shortest) di-rected path from any of the nodes in A to the sink node n in the directed acyclic graph (DAG) induced by the diffu-sion process on network G . By construction of the CTMC { X n ( t | A ) ,t  X  0 } in Theorem 2, where S 1 and S N denote respectively the first and last state of the CTMC. The length of the fastest (shortest) path is thus equivalent to the time until the CTMC { X n ( t | A ) ,t  X  0 } becomes absorbed in the final state S N starting from state S 1 ( i.e. , the state in which only the source nodes in A are infected). Then, computing the probability of in-fection of the sink node P ( t n  X  T | A ) reduces to compu-ting the distribution of time of the sink state of the CTMC. Such distributions are called continuous phase-type distri-butions. Their generator matrix Q and the cumulative den-sity function satisfy (Gikhman &amp; Skorokhod, 2004): P ( t n  X  T | A ) = 1  X  [1 0 ] 0 e ST 1 , where Q = where e ST denotes the exponential matrix, S is the subma-trix of Q that results from removing the column and row associated to the last state S N , and S 0 =  X  S 1 . By con-struction, { X n ( t | A ) ,t  X  0 } has the structure of a DAG and it is usually sparse. Then, S is upper triangular, sparse and e ST can be computed efficiently.
 As noted in Kulkarni (1986), this approach can be eas-ily extended to diffusion networks with phase-type trans-mission likelihoods, which can approximate power-laws, Rayleigh or subprobability distributions.
 Maximizing the influence. We have shown how to ana-lytically evaluate our objective function  X  ( A ; T ) for any set of sources A . However, optimizing  X  ( A ; T ) with respect to the set of sources A seems to be a cumbersome task and naive brute-force search over all k node sets is intractable even for relatively small networks. Indeed, we cannot ex-pect to find the optimal solution to the continuous time in-fluence maximization problem defined by Eq. 1 since it is NP-hard: Theorem 3. Given a network G = ( V,E ) , a set of nodes A  X  V and a time horizon T , the continuous time influence maximization problem defined by Eq. 1 is NP-hard.
 Proof. If we let T  X   X  , the independent cascade model is a particular case of our continuous time diffusion model. Then, our problem is NP-hard by applying Th. 2.4 in Kempe et al. (2003).
 By construction,  X  (  X  ,T ) = 0 and  X  ( A ; T )  X  0 . It also follows trivially that  X  ( A ; T ) is monotonically nondecrea-sing in the set of source nodes A , i.e. ,  X  ( A ; T )  X   X  ( A whenever A  X  A 0 . Fortunately, we now show that the ob-jective function  X  ( A ; T ) is a submodular function in the set of source nodes A . A set function F : 2 W  X  R mapping subsets of a finite set W to the real numbers is submodular if whenever A  X  B  X  W and s  X  W \ B , it holds that F ( A  X  X  s } )  X  F ( A )  X  F ( B  X  X  s } )  X  F ( B ) , i.e., adding s to the set A provides a bigger marginal gain than adding s to the set B . By this natural diminishing returns property, we are able to find a provable near-optimal solution to our problem: Theorem 4. Given a network G = ( V,E ) , a set of nodes A  X  V and a time horizon T , the influence function  X  ( A ; T ) is a submodular function in the set of nodes A . Proof. We follow the proof of Th. 2.2 in Kempe et al. (2003). For simplicity, we assume that the infection time of all nodes in A is t = 0 ; the results generalize tri-vially. Consider the probability distribution of all possible time differences between each pair of nodes in the network. Thus, given a sample  X  X  in the probability space, we de-fine  X   X  X  ( A ; T ) as the total number of nodes infected in a time less than or equal to T for  X  X  .
 Define R  X  X  ( k ; T ) as the set of nodes that can be reached from node k in a time shorter than T . It follows tri-vially that  X   X  X  ( A ; T ) = |  X  k  X  A R  X  X  ( k ; T ) | . Define R  X  X  ( k | N ; T ) as the set of nodes that can be reached from node k in a time shorter than T and at the same time can-not be reached in a time shorter than T from any node in the set of nodes N  X  V . It follows that | R  X  X  ( k | N ; T ) |  X  | R  X  X  ( k | N 0 ; T ) | for the sets of nodes N  X  N 0 . Consider now the sets of nodes A  X  A 0  X  V , and a node a such that a /  X  A 0 . Using the definition of submodularity,  X   X  X  ( A  X  X  a } ; T )  X   X   X  X  ( A ; T ) = | R  X  X  ( a | A ; T ) | and thus  X   X  X  ( A ; T ) is submodular. Then, it follows that  X  ( A ; T ) is also submodular.
 A well-known approximation algorithm to maximize mo-notonic submodular functions is the greedy algorithm . It adds nodes to the source node set A sequentially. In step k , it adds the node a which maximizes the marginal gain  X  ( A k  X  1  X  { a } ; T )  X   X  ( A k  X  1 ; T ) . The greedy algorithm finds a source node set which achieves at least a constant fraction (1  X  1 /e ) of the optimal (Nemhauser et al., 1978). Moreover, we can also use the submodularity of  X  ( A ; T ) to acquire a tight online bound on the solution quality ob-tained by any algorithm: Theorem 5 (Leskovec et al. (2007)) . For a source set  X  A  X  V with k sources and a node a  X  V \  X  A , let  X  a =  X  (  X  { a } ; T )  X   X  (  X  A ; T ) and a 1 ,...a k be the sequence of k nodes with  X  a in decreasing order. Then, max | A | X  k  X  ( A ; T )  X   X  (  X  Lazy evaluation (Leskovec et al., 2007) can be employed to speed-up the computation of the on-line bound for our algorithm, that we will refer as I NFLU M AX .
 Speeding-up I NFLU M AX . We can speed up our algorithm by implementing the following speed-ups: Lazy evaluation (LE, Leskovec et al. (2007)): it dramati-cally reduces the number of evaluations of marginal gains by exploiting the submodularity of  X  ( A ; T ) .
 Localized source nodes (LSN): for each node n , we speed up the computation of P ( t n  X  T | A ) by ignoring any a  X  A whose shortest path to n traverses more than m nodes. Limited transmission paths (LTP): for each node n , we speed up the computation of P ( t n  X  T | A ) by ignoring any path from a  X  A to n that traverses more than m nodes. LSN and LTP should be used with care since they provide an approximate P ( t n  X  T | A ) . In the remainder of this article, if not specified, we run I NFLU M AX with LE but avoid using LSN and LTP. We evaluate our algorithm I NFLU M AX on (i) synthetic net-works that mimic the structure of real networks and on (ii) real networks inferred from the MemeTracker dataset by using N ET R ATE  X  X  public implementation (Gomez-Rodriguez et al., 2011). We show that I NFLU M AX performs three state of the art algorithms: the traditional greedy algorithm (Kempe et al., 2003), PMIA (Chen et al., 2010) and SP1M (Chen et al., 2009). 4.1. Experiments on synthetic data Experimental setup. We perform experiments on two types of synthetic networks that mimic the structure of di-rected social networks: Kronecker (Leskovec et al., 2010) and Forest Fire (scale free) (Barab  X  asi &amp; Albert, 1999) networks. We consider three types of Kronecker net-works with very different structure: random (Erd  X  os &amp; R  X  enyi, 1960) (parameter matrix [0.5, 0.5; 0.5, 0.5]), hierar-chial (Clauset et al., 2008) ([0.9, 0.1; 0.1; 0.9]) and core-periphery (Leskovec et al., 2010) ([0.9, 0.5; 0.5, 0.3]). First, we generate a network G using one of the network models cited above. Then, we draw a transmission rate for each edge ( j,i )  X  G from a uniform distribution. We can control the transmission rate variance across edges in the network by tuning the parameters values of the distribu-tion. In social networks, transmission rates model how fast information spreads across the network. Given G and the transmission rates  X  j,i , our aim is to find the most influen-tial subset of k nodes, i.e. , the subset of nodes that maxi-mizes the spread of information up to a time T . In the tra-ditional greedy algorithm, PMIA and SP1M, we ignore any of the transmission rates and consider all network edges to be active with probability 1 , i.e. , we do not consider the temporal dynamics. We did not need to use Montecarlo in the traditional greedy algorithm since we assume all edges to be always active.
 Solution quality. First, we compare I NFLU M AX to ex-haustive search and several state of the art algorithms on a small network. By studying a small network in which exhaustive search can be run, we are able estimate exactly how far I NFLU M AX is from the NP-hard to find optimum. We then compare I NFLU M AX to the state of the art on different large networks. Running exhaustive search on large networks is computationally too expensive and we compute instead the tight on-line bound from Th. 5. We compare I NFLU M AX to several state of the art meth-ods on a small core-periphery Kronecker network with 35 nodes and 39 edges and transmission rates drawn from a uniform distribution  X   X  U (0 , 10) . We summarize the results in Table 1. In addition to I NFLU M AX and three state of the art methods, we also run a baseline that simply chooses the set of sources randomly. For all methods, we compute the influence they achieve by evaluating Eq. 2 for the set of sources selected by them. Surprisingly, I NFLU M
AX achieves in most cases the optimal influence that ex-haustive search gives but several order of magnitude faster. In other words, the solution given by I NFLU M AX may be in practice much closer to the NP-hard to find optimum than (1  X  1 /e ) , the theoretical guarantee given by Nemhauser et al. (1978), and it outperforms other methods by 20%. Now, we focus on different large synthetic networks. Fi-gure 2 shows the average total number of infected nodes against number of sources that I NFLU M AX achieves in comparison with the other methods on a 512 node ran-dom Kronecker network, a 1,024 node hierarchical Kro-necker network and a 1,024 node Forest Fire (scale free) network. All three networks have approximately 2 edges in average per node. We set the time horizon to T = 1 . 0 and the transmission rates are drawn from a uniform dis-tribution  X   X  U (0 , 5) . I NFLU M AX typically outperforms other methods by at least 20% by exploiting the temporal dynamics of the network. We also compare I NFLU M AX with the on-line bound from Th. 5. Fig. 3 shows the av-erage number of infected nodes against number of sources that I NFLU M AX achieves in comparison with the on-line bound for the small core-periphery Kronecker network and the large hierarchical Kronecker network that we used pre-viously. If we pay attention to the value of the bound on the small network for source set sizes significantly smaller than the number of nodes in the network, we observe that the bound value on the influence is not as close to the op-timal value given by exhaustive search as we could expect. That means that although the bound is not very tight on the large network, we may be actually achieving in practice an almost optimal value on that network too.
 Influence vs. time horizon. Intuitively, the smaller the time horizon, the more important the temporal dynamics become when choosing the subset of most influential nodes of a given size. Fig. 4(a) shows the average total number of infected nodes against time horizon for a hierarchical Kronecker network with 1,024 nodes and approx. 2 edges per node. We consider a source set of cardinality | A | = 10 and we draw the transmission rate of each edge from a uni-form distribution  X   X  U (0 , 5) . The experimental results for all transmission rates configurations confirm the initial intuition, i.e. , the difference between I NFLU M AX and other methods is greater for small time horizons.
 Running time. Fig. 4(b) shows the average computation time per source added of our algorithm implemented (i) with lazy evaluation, (ii) with lazy evaluation and localized source nodes with m = 6 hops and (iii) with lazy evalua-tion and limited transmission paths with m = 6 hops on a single CPU (2.3 Ghz Dual Core with 4 GB RAM). We use hierarchical Kronecker networks with an increasing num-ber of nodes but approximately the same network density since real networks are usually sparse. Remarkably, the number of hops that we use in localized source nodes and limited transmission paths result in an approximation error for the influence  X  ( A ; T ) of at most 10%, while achieving an speed-up of  X  5 x for the largest network (2,048 nodes). 4.2. Experiments on real data Experimental setup. We used the publicly available MemeTracker dataset, which contains more than 172 million news articles and blog posts (Leskovec et al., 2009). We trace the information in two different ways and then infer two different diffusion networks using N ET R ATE (Gomez-Rodriguez et al., 2011).
 First, we find more than 100,000 hyperlink cascades in the MemeTracker dataset. Each hyperlink cascade consists of a collection of time-stamped hyperlinks between sites (in blog posts) that refer to closely related pieces of informa-tion. From the hyperlink cascade data, we infer an under-lying diffusion networks with the top (in terms of hyper-links) 1,000 media sites and blogs. Second, we apply the MemeTracker methodology (Leskovec et al., 2009) to find 343 million short textual phrases. We cluster the phrases to aggregate different textual variants of the same phrase and consider the 12,000 largest clusters. Each phrase clus-ter is a MemeTracker cascade. Each cascade consists of a collection of time-stamps when sites (in blog posts) first mentioned any phrase in the cluster. From the Meme-Tracker cascades, we infer an underlying diffusion network with the top (in terms of phrases) 1,000 media sites and blogs. Then, we sparsify further the networks by keeping the 1,000 fastest edges since it has been shown that in the context of influence maximization, computations on spar-sified models give up little accuracy, but improves scalabil-ity (Mathioudakis et al., 2011).
 Solution quality. Fig. 5 shows the average total number of infected nodes against number of sources that I NFLU -M
AX achieves in comparison with other methods for both real networks, that were inferred from the hyperlink cas-cade and the MemeTracker cascade datasets, as described above. We set the time horizon to T = 1 . 0 . Again, I NFLU M
AX outperforms all other methods typically by  X  30 %, by considering the temporal dynamics of the diffusion. Fi-nally, we also compare I NFLU M AX with the on-line bound from Th. 5 for the real network that we inferred from the hyperlink cascade dataset in Fig. 3(c). Similarly to the syn-thetic networks, the bound is not as tight as expected. We have developed a method for influence maximization, I
NFLU M AX , that accounts for the temporal dynamics un-derlying diffusion processes. The method allows for varia-ble transmission (influence) rates between nodes of a net-work, as found in real-world scenarios. Perhaps surprising-ly, for the rather general case of continuous temporal dy-namics with variable transmission rates, we can evaluate the influence of any set of source nodes in a network analy-tically using the work of Kulkarni (1986). In this analytical framework, we find the near-optimal set of nodes that max-imizes influence by exploiting the submodularity of our ob-jective function. In addition, the reevaluation of influence for changes on the network is straightforward and the algo-rithm parallelizes naturally by sink and source nodes. We evaluated our algorithm on a wide range of synthetic diffusion networks with heterogeneous temporal dynamics which aim to mimic the structure of real-world social and information networks. Our algorithm is remarkably stable across different network topologies. It outperforms state of the art methods in terms of influence ( i.e. , average number of infected nodes) for different network topologies, time horizons and source set sizes. I NFLU M AX typically gives an influence gain of  X  25 % and it achieves the greatest im-provement for small time horizons; in such scenarios, the temporal dynamics play a dramatic role. We also evaluated I
NFLU M AX on two real diffusion networks that we inferred from the MemeTracker dataset using N ET R ATE . Again, it drastically outperformed the state of the art by  X  30 %. We believe that I NFLU M AX provides a novel view of the influence maximization problem by accounting for the un-derlying temporal dynamics of diffusion networks.
 Barab  X  asi, A.-L. and Albert, R. Emergence of scaling in random networks. Science , 286:509 X 512, 1999.
 Bharathi, S., Kempe, D., and Salek, M. Competitive in-fluence maximization in social networks. Internet and Network Economics , pp. 306 X 311, 2007.
 Chen, W., Wang, Y., and Yang, S. Efficient influence max-imization in social networks. In KDD , 2009.
 Chen, W., Wang, C., and Wang, Y. Scalable influence max-imization for prevalent viral marketing in large-scale so-cial networks. In KDD , 2010.
 Clauset, A., Moore, C., and Newman, M. E. J. Hierarchical structure and the prediction of missing links in networks. Nature , 453(7191):98 X 101, 2008.
 Erd  X  os, P. and R  X  enyi, A. On the evolution of random graphs.
Publication of the Mathematical Institute of the Hungar-ian Academy of Science , 5:17 X 67, 1960.
 Georgiadis, L., Werneck, R.F., Tarjan, R.E., et al. Finding dominators in practice. Journal of Graph Algorithms and Applications , 10(1):69 X 94, 2006.
 Gikhman, I.I. and Skorokhod, A.V. The theory of stochastic processes , volume 2. Springer Verlag, 2004.
 Gomez-Rodriguez, M. and Sch  X  olkopf, B. Submodular In-ference of Diffusion Networks from Multiple Trees. In ICML , 2012.
 Gomez-Rodriguez, M., Leskovec, J., and Krause, A. In-ferring Networks of Diffusion and Influence. In KDD , 2010.
 Gomez-Rodriguez, M., Balduzzi, D., and Sch  X  olkopf, B.
Uncovering the Temporal Dynamics of Diffusion Net-works. In ICML , 2011.
 Goyal, A., Bonchi, F., Lakshmanan, L.V.S., et al. Approxi-mation Analysis of Influence Spread in Social Networks. Arxiv preprint arXiv:1008.2005 , 2010.
 Kempe, D., Kleinberg, J. M., and Tardos,  X  E. Maximiz-ing the spread of influence through a social network. In KDD , 2003.
 Kulkarni, V.G. Shortest paths in networks with exponen-tially distributed arc lengths. Networks , 16(3):255 X 274, 1986.
 Leskovec, J., Krause, A., Guestrin, C., et al. Cost-effective outbreak detection in networks. In KDD , 2007.
 Leskovec, J., Backstrom, L., and Kleinberg, J. Meme-tracking and the dynamics of the news cycle. In KDD , 2009.
 Leskovec, J., Chakrabarti, D., Kleinberg, J., et al. Kro-necker graphs: An approach to modeling networks. JMLR , 11:985 X 1042, 2010.
 Mathioudakis, M., Bonchi, F., Castillo, C., et al. Sparsifi-cation of influence networks. In KDD , 2011.
 Nemhauser, GL, Wolsey, LA, and Fisher, ML. An anal-ysis of approximations for maximizing submodular set functions. Mathematical Programming , 14(1), 1978. Provan, J.S. and Shier, D.R. A paradigm for listing (s, t)-cuts in graphs. Algorithmica , 15(4):351 X 372, 1996. Richardson, M. and Domingos, P. Mining knowledge-sharing sites for viral marketing. In KDD , 2002.
 Wallinga, J. and Teunis, P. Different epidemic curves for severe acute respiratory syndrome reveal similar impacts of control measures. American Journal of Epidemiology ,
