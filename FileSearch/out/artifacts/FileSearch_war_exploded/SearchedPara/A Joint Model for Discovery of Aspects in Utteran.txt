 Virtual personal assistance (VPA) is a human to machine dialog system, which is designed to per-form tasks such as making reservations at restau-rants, checking flight statuses, or planning weekend activities. A typical spoken language understanding (SLU) module of a VPA (Bangalore, 2006; Tur and Mori, 2011) defines a structured representation for utterances, in which the constituents correspond to meaning representations in terms of slot/value pairs (see Table 1). While target domain corresponds to the context of an utterance in a dialog, the dialog act represents overall intent of an utterance. The slots are entities, which are semantic constituents at the word or phrase level. Learning each component is a challenging task not only because there are no a priori constraints on what a user might say, but also systems must generalize from a tractably small amount of labeled training data. In this paper, we argue that each of these components are interdepen-dent and should be modeled simultaneously. We build a joint understanding framework and introduce a multi-layer context model for semantic representa-tion of utterances of multiple domains.

Although different strategies can be applied, typically a cascaded approach is used where each semantic component is modeled sepa-rately/sequentially (Begeja et al., 2004), focusing less on interrelated aspects, i.e., dialog X  X  domain, user X  X  intentions, and semantic tags that can be shared across domains. Recent work on SLU (Jeong and Lee, 2008; Wang, 2010) presents joint modeling of two components, i.e., the domain and slot or dialog act and slot components together. Furthermore, most of these systems rely on labeled training utterances, focusing little on issues such as information sharing between the discourse and word level components across different domains, or variations in use of language. To deal with de-pendency and language variability issues, a model that considers dependencies between semantic components and utilizes information from large bodies of unlabeled text can be beneficial for SLU. In this paper, we present a novel generative Bayesian model that learns domain/dialog-act/slot semantic components as latent aspects of text ut-terances. Our approach can identify these semantic components simultaneously in a hierarchical frame-work that enables the learning of dependencies. We incorporate prior knowledge that we observe in web search query logs as constraints on these latent as-pects. Our model can discover associations between words within a multi-layered aspect model, in which some words are indicative of higher layer (meta) as-pects (domain or dialog act components), while oth-ers are indicative of lower layer specific entities.
The contributions of this paper are as follows: ( i ) construction of a novel Bayesian framework for semantic parsing of natural language (NL) utter-ances in a unifying framework in  X  4, ( ii ) representation of seed labeled data and informa-tion from web queries as informative prior to design a novel utterance understanding model in  X  3 &amp;  X  4, ( iii ) comparison of our results to supervised sequen-tial and joint learning methods on NL utterances in  X  5. We conclude that our generative model achieves noticeable improvement compared to discriminative models when labeled data is scarce. Language understanding has been well studied in the context of question/answering (Harabagiu and Hickl, 2006; Liang et al., 2011), entailment (Sam-mons et al., 2010), summarization (Hovy et al., 2005; Daum  X  e -III and Marcu, 2006), spoken lan-guage understanding (Tur and Mori, 2011; Dinarelli et al., 2009), query understanding (Popescu et al., 2010; Li, 2010; Reisinger and Pasca, 2011), etc. However data sources in VPA systems pose new challenges, such as variability and ambiguities in natural language, or short utterances that rarely con-tain contextual information, etc. Thus, SLU plays an important role in allowing any sophisticated spo-ken dialog system (e.g., DARPA Calo (Berry et al., 2011), Siri, etc.) to take the correct machine actions.
A common approach to building SLU framework is to model its semantic components separately, as-suming that the context (domain) is given a pri-ori . Earlier work takes dialog act identification as a classification task to capture the user X  X  intentions (Margolis et al., 2010) and slot filling as a sequence learning task specific to a given domain class (Wang et al., 2009; Li, 2010). Since these tasks are con-sidered as a pipeline, the errors of each component are transfered to the next, causing robustness issues. Ideally, these components should be modeled si-multaneously considering the dependencies between them. For example, in a local domain application, users may require information about a sub-domain ( movies, hotels, etc. ), and for each sub-domain, they may want to take different actions ( find a movie, call a restaurant or book a hotel) using domain specific attributes (e.g., cuisine type of a restaurant, titles for movies or star-rating of a hotel). There X  X  been little attention in the literature on modeling the dependen-cies of SLU X  X  correlated structures.

Only recent research has focused on the joint modeling of SLU (Jeong and Lee, 2008; Wang, 2010) taking into account the dependencies at learn-ing time. In (Jeong and Lee, 2008), a triangular chain conditional random fields (Tri-CRF) approach is presented to model two of the SLU X  X  components in a single-pass. Their discriminative approach rep-resents semantic slots and discourse-level utterance labels (domain or dialog act) in a single structure to encode dependencies. However, their model re-quires fully labeled utterances for training, which can be time consuming and expensive to generate for dynamic systems. Also, they can only learn depen-dencies between two components simultaneously.
Our approach differs from the earlier work-in that-we take the utterance understanding as a multi-layered learning problem, and build a hierarchical clustering model. Our joint model can discover domain D , and user X  X  act A as higher layer latent concepts of utterances in relation to lower layer la-tent semantic topics (slots) S such as named-entities (  X  X ew York X  ) or context bearing non-named enti-ties (  X  X egan X  ). Our work resembles the earlier work of PAM models (Mimno et al., 2007), i.e., directed acyclic graphs representing mixtures of hierarchical topic structures, where upper level topics are multi-nomial over lower level topics in a hierarchy. In an analogical way to earlier work, the D and A in our approach represent common co-occurrence patterns (dependencies) between semantic tags S (Fig. 2). Concretely, correlated topics eliminate assignment of semantic tags to segments in an utterance that belong to other domains, e.g., we can discover that  X  X how me vegan restaurants in San Francisco X  has a low probably of outputting a movie-actor slot. Be-ing generative, our model can incorporate unlabeled utterances and encode prior information of concepts. Here we define several abstractions of our joint model as depicted in Fig. 1. Our corpus mainly contains NL utterances ( X  show me the nearest dim-sum places  X ) and some keyword queries ( X  iron man 2 trailers  X ). We represent each utterance u as a vec-tor w u of N u word n-grams (segments), w uj , each of which are chosen from a vocabulary W of fixed-size V . We use entity lists obtained from web sources (explained next) to identify segments in the corpus. Our corpus contains utterances from K D =4 main domains :  X  { movies, hotels, restaurants, events } , as well as out-of-domain other class. Each utterance has one dialog act ( A ) associated with it. We assume a fixed number of possible dialog acts K A for each domain. Semantic Tags, slots ( S ) are lexical units (segments) of an utterance, which we classify into two types: domain-independent slots that are shared across all domains, ( e.g., location, time, year, etc. ), and domain-dependent slots, ( e.g. movie-name, actor-name, restaurant-name, etc. ). For tractability, we consider a fixed number of latent slot types K S . Our algorithm assigns domain/dialog-act/slot labels to each topic at each layer in the hierarchy using la-beled data (explained in  X  4.)
We represent domain and dialog act components as meta-variables of utterances. This is similar to author-topic models (Rosen-Zvi et al., 2004), that capture author-topic relations across documents. In that case, words are generated by first selecting an author uniformly from an observed author list and then selecting a topic from a distribution over words that is specific to that author. In our model, each utterance u is associated with domain and dialog act topics. A word w uj in u is generated by first selecting a domain and an act topic and then slot topic over words of u . The domain-dependent slots in utterances are usually not dependent on the di-alog act. For instance, while  X  X ind [ hugo ] trailer X  and  X  X how me where [ hugo ] is playing X  have both a movie-name slot ( X  hugo  X ), they have different di-alog acts, i.e., find-trailer and find-movie, respec-tively. We predict posterior probabilities for domain  X  P ( d  X  D | u ) dialog act  X  P ( a  X  A | ud ) and slots  X  P ( s j  X  S | w uj ,d,s j  X  1 ) of words w uj in sequence.
To handle language variability, and hence dis-cover correlation between hierarchical aspects of ut-terances 1 , we extract prior information from two web resources as follows: Web n-Grams ( G ) . Large-scale engines such as Bing or Google log more than 100M search queries each day. Each query in the search logs has an as-sociated set of URLs that were clicked after users entered a given query. The click information can be used to infer domain class labels, and there-fore, can provide (noisy) supervision in training do-main classifiers. For example, two queries ( X  cheap hotels Las Vegas  X  and  X  wine resorts in Napa  X ), which resulted in clicks on the same base URL (e.g., www.hotels.com) probably belong to the same do-main ( X  X otels X  in this case).
Given query logs, we compile sets of in-domain queries based on their base URLs 2 . Then, for each vocabulary item w j  X  W in our corpus, we calculate frequency of w j in each set of in-domain queries and represent each word (e.g.,  X  X oom X ) as a discrete normalized over domain and dialog act parameters in  X  4.
Entity Lists ( E ) . We limit our model to a set of named-entity slots ( e.g., movie-name, restaurant-name ) and non-named entity slots (e.g., restaurant-cuisine , hotel-rating ). For each entity slot, we ex-tract a large collection of entity lists through the url X  X  on the web that correspond to our domains, such as movie-names listed on IMDB, restaurant-names on OpenTable, or hotel-ratings on tripadvisor.com. We represent each entity list as observed nonuniform priors  X  E and inject them into our joint learning pro-cess as V sparse multinomial distributions over la-tent topics D , and S to  X  X uide X  the generation of utterances (Fig. 1 top-left table), explained in  X  4. The generative process of our multi-layer context model ( MCM ) (Fig. 1) is shown in Algorithm 1. Each utterance u is associated with d = 1 ..K D multino-mial domain-topic distributions  X  d D . Each domain d , is represented as a distribution over a = 1 ,..,K A dialog acts  X  da A (  X  d D  X   X  da A ). In our MCM model, we assume that each utterance is represented as a hidden Markov model with K S slot states. Each state gen-erates n-grams according to a multinomial n-gram distribution. Once domain D u and act A ud topics are sampled for u , a slot state topic S ujd is drawn to generate each segment w uj of u by considering the word-tag sequence frequencies based on a sim-ple HMM assumption, similar to the content models of (Sauper et al., 2011). Initial and transition prob-ability distributions over the HMM states are sam-pled from Dirichlet distribution over slots  X  ds S . Each slot state s generates words according to multino-mial word distribution  X  s S . We also keep track of the frequency of vocabulary terms w j  X  X  in a V  X  K D ma-trix M D . Every time a w j is sampled for a domain d , we increment its count, a degree of domain bearing words. Similarly, we keep track of dialog act and slot bearing words in V  X  K A and V  X  K S matrices, M A and M S (shown as red arrows in Fig 1). Being Bayesian, each distribution  X  d D ,  X  ad A , and  X  ds S is sam-pled from a Dirichlet prior distribution with different parameters, described next.
 Algorithm 1 Multi-Layer Context Model Generation In hierarchical topic models (Blei et al., 2003; Mimno et al., 2007), etc., topics are represented as distributions over words, and each document ex-presses an admixture of these topics, both of which have symmetric Dirichlet ( Dir ) prior distributions. Symmetric Dirichlet distributions are often used, since there is typically no prior knowledge favoring one component over another. In the topic model lit-erature, such constraints are sometimes used to de-terministically allocate topic assignments to known labels (Labeled Topic Modeling (Ramage et al., 2009)) or in terms of pre-learnt topics encoded as prior knowledge on topic distributions in documents (Reisinger and Pas  X ca, 2009). Similar to previous work, we define a latent topic per each known se-mantic component label, e.g., five domain topics for five defined domains. Different from earlier work though, we also inject knowledge that we extract from several resources including entity lists from web search query click logs as well as seed labeled training utterances as prior information. We con-strain the generation of the semantic components of our model by encoding prior knowledge in terms of asymmetric Dirichlet topic priors  X  =(  X m 1 ,...,  X m K ) where each k th topic has a prior weight  X  k =  X m k , with varying base measure m =( m 1 ,..., m k ) 3 .
We update parameter vectors of Dirichlet domain the concentration parameter for domain Dirichlet distribution and  X  u D = {  X  ud D } K D d =1 is the base mea-sure which we obtain from various resources. Be-cause base measure updates are dependent on prior knowledge of corpus words, each utterance u gets a different base measure. Similarly, we update the parameter vector of the Dirichlet dialog act and slot priors  X  u? A = { (  X  A  X   X  u 1 A ),...,(  X  A  X   X   X 
S = { (  X  S  X   X   X 
A = {  X 
Before describing base measure update for do-main, act and slot Dirichlet priors, we explain the constraining prior knowledge parameters below: tures are indicative of domain and slots and MCM utilizes these features while sampling topics. For instance, entities hotel-name  X  Hilton  X  and location  X  X ew York X  are discriminative features in classi-fying  X  X ind nice cheap double room in New York Hilton X  into correct domain ( hotel ) and slot ( hotel-name ) clusters. We represent entity lists correspond-ing to known domains as multinomial distributions  X 
E , where each  X  word w j used in the domain d . Some entities may belong to more than one domain, e.g.,  X  X otel Cali-fornia X  can either be a movie, or song or hotel name. ? Web n-Gram Context Base Measure (  X  j G ): As explained in  X  3, we use the web n-grams as ad-ditional information for calculating the base mea-sures of the Dirichlet topic distributions. Normal-ized word distributions  X  j G over domains were used as weights for domain and dialog act base measure. ? Corpus n-Gram Base Measure (  X  j C ): Sim-ilar to other measures, MCM also encodes n-gram constraints as word-frequency features extracted from labeled utterances. Concretely, we cal-culate the frequency of vocabulary items given domain-act label pairs from the training labeled ut-terances and convert there into probability mea-sures over domain-acts. We encode conditional probabilities {  X  ad | j C } X   X  j C as multinomial distribu-tions of words over domain-act pairs, e.g.,  X  ad | j P ( d=  X  X estaurant X  , a=  X  X ake-reservation X  |  X  X able X  ).
Base measure update: The  X  -base measures are used to shape Dirichlet priors  X  u? D ,  X  u? A and  X  u? S update the base measures of each sampled domain D u = d given each vocabulary w j as: In (1) we assume that entities ( E ) are more indica-tive of the domain compared to other n-grams ( G ) and should be more dominant in sampling decision for domain topics. Given an utterance u , we calcu-late its base measure  X  ud D = ( P N u j  X  dj D ) /N u .
Once the domain is sampled, we update the prior weight of dialog acts A ud = a : and slot components S ujd = s : Then we update their base measures for a given u as:  X  A = ( P 4.1 Inference and Learning The goal of inference is to predict the domain, user X  X  act and slot distributions over each segment given an utterance. The MCM has the following set of pa-rameters: domain-topic distributions  X  d D for each u , the act-topic distributions  X  da A for each domain topic d of u , local slot-topic distributions for each do-main  X  S , and  X  s S for slot-word distributions. Pre-vious work (Asuncion et al., 2009; Wallach et al., 2009) shows that the choice of inference method has negligible effect on the probability of testing doc-uments or inferred topics. Thus, we use Markov Chain Monte Carlo (MCMC) method,specifically Gibbs sampling, to model the posterior distribution P samples ( D u ,A ud ,S ujd ) drawn from this distribu-tion. For each utterance u , we sample a domain D u and act A ud and hyper-parameters  X  D and  X  A and their base measures  X  ud D ,  X  ua A (from Eq. 1,2):  X  The N d u is the number of occurrences of domain topic d in utterance u , N a | ud is the number of occur-rences of act a given d in u . During sampling of a slot state S ujd , we assume that utterance is generated by the HMM model associated with the assigned domain. For each segment w uj in u , we sample a slot state S ujd given the remaining slots and hyper-parameters  X  S ,  X  and base measure  X  us S (Eq. 3) by: N The N k ujd is the number of times segment w uj is generated from slot state s in all utterances as-signed to domain topic d , N D u ,s 1 s 2 is the num-ber of transitions from slot state s 1 to s 2 , where s 4.2 Semantic Structure Extraction with MCM During Gibbs sampling, we keep track of the fre-quency of draws of domain, dialog act and slot in-dicating n-grams w j , in M D , M A and M S matri-ces, respectively. These n-grams are context bearing words (examples are shown in Fig.1.). For given u the predicted domain d  X  u is determined by: d u = arg max d ] and predicted dialog act by arg max a  X  P ( a | ud  X  ) : For each segment w uj in u , its predicted slot are de-termined by arg max s P ( s j | w uj ,d  X  ,s j  X  1 ) : s uj = arg max s [ p ( S ujd  X  = s | . )  X  Q We performed several experiments to evaluate our proposed approach. Before presenting our results, we describe our datasets as well as two baselines. 5.1 Datasets, Labels and Tags Our dataset contains utterances obtained from di-alogs between human users and our personal assis-tant system. We use the transcribed text forms of the utterances obtained from (acoustic modeling en-gine) to train our models 4 . Thus, our dataset con-tains 18084 NL utterances, 5034 of which are used for measuring the performance of our models. The dataset consists of five domain classes, i.e, movie, restaurant, hotel, event, other , 42 unique dialog acts and 41 slot tags. Each utterance is labeled with a domain, dialog act and a sequence of slot tags cor-responding to segments in utterance (see examples in Table 1). Table 2 shows sample dialog act and slot labels. Annotation agreement, Kappa measure (Cohen, 1960), was around 85%.

We pulled a month of web query logs and ex-tracted over 2 million search queries from the movie, hotel, event, and restaurant domains. We also used generic web queries to compile a set of  X  X ther X  do-main queries. Our vocabulary consists of n-grams and segments (phrases) in utterances that are ex-tracted using web n-grams and entity lists of  X  3. We extract distributions of n-grams and entities to inject as prior weights for entity list base (  X  j E ) and web n-gram context base measures (  X  j G ) (see  X  4). 5.2 Baselines and Experiment Setup We evaluated two baselines and two variants of our joint SLU approach as follows: ? Sequence-SLU : A traditional approach to SLU extracts domain, dialog act and slots as seman-tic components of utterances using three sequential models. Typically, domain and dialog act detec-tion models are taken as query classification, where a given NL query is assigned domain and act la-bels. Among supervised query classification meth-ods, we used the Adaboost , utterance classifica-tion method that starts from a set of weak classifiers and builds a strong classifier by boosting the weak classifiers. Slot discovery is taken as a sequence la-beling task in which segments in utterances are la-beled (Li, 2010). For segment labeling we use Semi-Markov Conditional Random Fields ( Semi-CRF ) (Sarawagi and Cohen, 2004) method as a benchmark in evaluating semantic tagging performance. ? Tri-CRF : We used Triangular Chain CRF (Jeong and Lee, 2008) as our supervised joint model base-line. It is a state-of-the art method that learns the sequence labels and utterance class (domain or dia-log act) as meta-sequence in a joint framework. It encodes the inter-dependence between the slot se-quence s and meta-sequence label ( d or a ) using a triangular chain (dual-layer) structure. ? Base-MCM : Our first version injects an informa-tive prior for domain, dialog act and slot topic dis-tributions using information extracted from only la-beled training utterances and inject as prior con-straints (corpus n-gram base measure  X  j C ) during topic assignments. ? WebPrior-MCM : Our full model encodes distri-butions extracted from labeled training data as well as structured web logs as asymmetric Dirichlet pri-ors. We analyze performance gain by the informa-tion from web sources (  X  j G and  X  j E ) when injected into our approach compared to Base-MCM .

We inject dictionary constraints as features to train supervised discriminative methods, i.e., boosting and Semi-CRF in Sequence-SLU , and Tri-CRF models. For semantic tagging, dictionary constraints apply to the features between individual segments and their labels, and for utterance classifi-cation (to predict domain and dialog acts) they apply to the features between utterance and its label. Given a list of dictionaries, these constraints specify which label is more likely. For discriminative methods, we use several named entities, e.g., Movie-Name, Restaurant-Name, Hotel-Name, etc., non-named en-tities, e.g., Genre, Cuisine, etc., and domain inde-pendent dictionaries, e.g., Time, Location, etc. We train domain and dialog act classifiers via Icsiboost (Favre et al., 2007) with 10K iterations using lexical features (up to 3-n-grams) and con-straining dictionary features (all dictionaries). For feature templates of sequence learners, i.e., Semi-CRF and Tri-CRF, we use current word, bi-gram and dictionary features. For Base-MCM and WebPrior-MCM , we run Gibbs sampler for 2000 iterations with the first 500 samples as burn-in. 5.3 Evaluations and Discussions We evaluate the performance of our joint model on two experiments using two metrics. For domain and dialog act detection performance we present results in accuracy, and for slot detection we use the F1 pair-wise measure.

Experiment 1. Encoding Prior Knowledge: A common evaluation method in SLU tasks is to mea-sure the performance of each individual semantic model, i.e., domain, dialog act and semantic tagging (slot filling). Here, we not only want to demon-strate the performance of each component of MCM but also their performance under limited amount of labeled data. We randomly select subsets of labeled training data U i L  X  U L with different samples sizes, n
L = {  X   X  n L } , where n L represents the sample size of U L and  X  = { 10%,25%,.. } is the subset percentage. At each random selection, the rest of the utterances are used as unlabeled data to boost the performance of MCM . The supervised baselines do not leverage the unlabeled utterances.

The results reported in Figure 3 reveal both the strengths and some shortcomings of our ap-proach. When the number of labeled data is small ( n i L  X  25%* n L ), our WebPrior-MCM has a better performance on domain and act predic-tions compared to the two baselines. Compared to Sequence-SLU , we observe 4.5% and 3% perfor-mance improvement on the domain and dialog act models, whereas our gain is 2.6% and 1.7% over Tri-CRF models. As the percentage of labeled ut-terances in training data increase, Tri-CRF perfor-mance increases, however WebPrior-MCM is still comparable with Sequence-SLU . This is because we utilize domain priors obtained from the web sources as supervision during generative process as well as unlabeled utterances that enable handling language variability. Adding labeled data improves the performance of all models however supervised models benefit more compared to MCM models.

Although WebPrior-MCM  X  X  domain and dialog act performances are comparable (if not better than) the other baselines, it falls short on the semantic tagging model. This is partially due to the HMM assumption compared to the supervised conditional model X  X  used in the other baselines, i.e., Semi-CRF in Sequence-SLU and Tri-CRF ). Our work can be extended by replacing HMM assumption with CRF based sequence learner to enhance the capa-bility of the sequence tagging component of MCM .
Experiment 2. Less is More? Being Bayesian, our model can incorporate unlabeled data at train-ing time. Here, we evaluate the performance gain on domain, act and slot predictions as more unlabeled data is introduced at learning time. We use only 10% of the utterances as labeled data in this experiment and incrementally add unlabeled data (90% of la-beled data are treated as unlabeled).

The results are shown in Table 3. n % ( n =10,25,..) unlabeled data indicates that the WebPrior-MCM is trained using n % of unlabeled utterances along with training utterances. Adding unlabeled data has a positive impact on the performance of all three se-mantic components when WebPrior-MCM is used. The results show that our joint modeling approach has an advantage over the other joint models (i.e., Tri-CRF ) in that it can leverage unlabeled NL ut-terances. Our approach might be usefully extended into the area of understanding search queries, where an abundance of unlabeled queries is observed. In this work, we introduced a joint approach to spoken language understanding that integrates two properties ( i ) identifying user actions in multiple domains in relation to semantic units, ( ii ) utilizing large amounts of unlabeled web search queries that suggest the user X  X  hidden intentions. We proposed a semi-supervised generative joint learning approach tailored for injecting prior knowledge to enhance the semantic component extraction from utterances as a unifying framework. Experimental results using the new Bayesian model indicate that we can effectively learn and discover meta-aspects in natural language utterances, outperforming the supervised baselines, especially when there are fewer labeled and more unlabeled utterances.
