 1. Introduction
In the past several years, there have been increasing interests in how to present the results of a search engine to users. The majority of conventional search systems return a huge ranked list of the resultant web documents that match a user  X  s query. High recall and low precision of a search engine coupled with this huge list make it difficult for the users to find the information that they are looking for. Clustering is currently becoming one of the most crucial techniques for dealing with this problem on the Web. This approach organizes the documents into clusters divided by a variety of criteria, such as a subject, page  X  s URL, or a title.

A subject-based clustering for web documents has been extensively studied, and a wide range of ap-proaches for this has been carried out over the past years. A term-based clustering and a link-based clustering are two major approaches for an automatic subject clustering ( Wang &amp; Kitsuregawa, 2002 ). A term-based clustering is based on common terms shared among documents while a link-based approach is based on the assumption that a link can provide objective opinions for the subject of the pages it points to. There have been several researches to apply the clustering techniques to implementing a user interface of a web search engine ( Cutting, Karger, &amp; Pedersen, 1993 ; Karlgren, Bretan, Dewe, Hallberg, &amp; Wolkert, 1998 ; Zamir &amp; Etziono, 1999 ). By using this interface, the users can browse the retrieved documents accord-ing to their subjects.

Although the documents can be grouped successfully according to their subjects, there is a big difference in styles among the documents in a cluster ( Lee &amp; Myaeng, 2002 ). For instance, the documents grouped by a subject  X  golf games  X  vary widely in their styles such as homepages, news articles, collection of images and so on. When users want to find the documents related with  X  golf games  X  , they are looking for homepages sometimes, and news articles some other times. Therefore, a style or a genre of a document is considered as the second view of representing a document, besides a subject. Consequently, this genre information of a document can help users judge relevance in browsing the results of a search engine even in the topical clus-tering system. For this reason, an automatic genre classification for the web documents begins to attract considerable attention in recent years.
 Indeed, the studies of an automatic genre classification have a long history ( Biber, 1986, 1992, 1995 ; 2002 ; Michos, Stamatatos, Fakotakis, &amp; Kokkonakis, 1996 ; Stamatatos, Fakotakis, &amp; Kokkinakis, 2000a, 2000b ), but most of them serve for textual documents, not for web documents. Hence, their studies are performed based on a genre that is suitable for textual documents, and the features that are appropriate for textual documents are employed. Only a few studies ( Karlgren et al., 1998 ; Lee &amp; Myaeng, 2002 ) dealt with web documents structured with HTML tags and adopted the features specific to web documents. No detailed evaluation for them has been published.

In automatic genre classification, a document can be represented by the values of features that seem to express the attribute of a genre. A classifier can guess the genre of a new document based upon these values that it learned from a training corpus. Therefore, selecting features that can make a clear distinction among the genres is the core of automatic genre classification. In this work, we introduce as many features as pos-sible to classify genres for web documents. First, we employ the features borrowed from the previous stud-ies. These features are all extracted from general textual sources, which indicate the textual properties of documents such as the number of sentences, the frequency of a certain word, a lexical ambiguity, and so on.
Web documents are different from general textual documents in carrying URLs and HTML tags by which a style of a document can be predicted. For instance, a document would be a type of homepage if the document has  X  index.html  X  in its URL. In this paper, we newly suggest the sets of features specific to web documents extracting from URL and HTML tags. Furthermore, we demonstrate the contribution of not only content-text features but also meta-text features. To begin with, we propose genre categories for web documents in the basis of the results obtained by ( Dewe, Bretan, &amp; Karlgren, 1998 ). Based on these genre categories, we classify web documents by using the proposed features, evaluate the performance of these features, and discuss their characteristics. Finally, we conclude which are the appropriate features for automatic genre classification for web documents.
 This paper is organized as follows. First, we describe related works on automatic genre classification.
Then in Section 3, the genres for web documents are introduced and the sets of features used in classifying genre are proposed in Section 4. The experimental results and discussions are described in Section 5. Finally, we conclude by summarizing our contributions with the directions for future works. 2. Previous approaches to automatic web genre classification
Various types of features have been proposed for the automatic classification of text genres. Table 1 sum-maries all the previously used features and new features used in this study.

Karlgren and Cutting (1994) have adopted twenty simple features for genre classification: lexical count (e.g.  X  X  X herefore X  X ,  X  X  X e X  X , or  X  X  X hich X  X ), POS (part-of-speech) count (e.g. adverb, noun or present verb), and textual count (e.g. character count, long word count, characters per word, and words per sentence). Four years later, they proposed genre categories for web documents and built a balanced corpus based on these categories ( Karlgren et al., 1998 ). They use lexical terms, POS tags and general textual count as a feature.
Additionally, the number of images and the number of HREF links used in a document are adopted as the features for web documents. They mentioned using approximately forty features, but there are no reports on their performance.

Stamatatos and his colleagues have a series of studies on automatic genre classification. In Michos et al. (1996) , they define five genres of documents: public affairs, scientific, journalistic, everyday communication and literary. They also represent a document by four main features: formality, elegance, syntactic complex-ity and verbal complexity, and then each of the main features can be encoded as several style markers such as the number of words per sentence, verb X  X oun ratio, idiomatic expressions, and formal words, etc. In
Stamatatos et al. (2000b) , they implement a text genre detector using common word frequencies only. They collect 50 most frequent words from BNC (British National Corpus) that consists of written and spoken texts, and evaluate them on WSJ (Wall Street Journal) corpus. They also report that the most frequently used punctuation marks play an important role in discriminating a text genre. In Stamatatos et al. (2000a) , they employ natural language tools such as a syntactic parser for extracting features. Unlike the previous studies, they use the features extracted from a phrasal level and an analysis level, such as the ratio of NPs (noun phrase) to the total number of chunks, the average number of words included in NP and mor-phological ambiguities or syntactic ambiguities, and so on. They report that the result using these features is better than the one using the most-frequently used words. They use ten textual genres, and construct a corpus by downloading the documents from WWW sites. However, their documents are general textual ones consisting of spoken and written languages.

More recently, Lee and Myaeng (2002) present a method of automatic genre classification based on word statistics only. They use both genre-classified training corpus and subject-classified corpus in order to filter out the words from the feature set, which are more subject-dependent rather than genre-dependent. They build a genre corpus with the seven classes: reportages, editorials, research articles, reviews, homepages,
Q&amp;A, and Spec. 3. Web genre 3.1. Classes of web genre
It is not easy to find a well-established genre category for web documents. The only study available in the published works on this area is Dewe et al. (1998) . They classify web genres into two large categories X  X  X ex-tual and non-textual X  X  X nd then break them further into 11 categories: personal homepages, public/ commercial homepages, interactive pages, link collections, other listings and tables, error messages for non-textual documents: journalistic materials, reports, other running text, FAQs, and discussions for tex-tual documents.

Their work is our basis for defining the category for web genres. We slightly refine their categories by adding new ones and subdividing some of them into more elaborate categories. First of all, we would like to define two hyper-categories more accurately: textual and non-textual. A textual category is defined as the hyper-genre in which the documents has more words included in sentences (finished with final periods) than ones in non-sentences such as items, lists and phrases. A non-textual category is defined as vice versa.
Table 2 shows the categories of the genre we employ in this work. For the convenience of comparing our categories with those in Dewe et al. (1998) , we append the fourth column in Table 2 , their corresponding genres. The genres marked with asterisk (*) are newly added and those with dagger ( ) are subdivided in this work.

As the number of commercial homepages such as online shopping malls continues to grow steadily, users sometimes might want to filter them out or selectively sort them from the pages retrieved by a search engine.
Therefore, we subdivide public/commercial homepages of Dewe et al. (1998) into (B) public homepages and (C) commercial homepages separately even though a classifier cannot easily differentiate each other. The genre (D) is confined to the pages that include the collection of links pointing to the pages of various opin-ions, questions and answers. With the rapidly growing number of pages containing the collection of mul-timedia files such as image and sound, we newly define the genre (F). With respect to a textual genre, we subdivide  X  X  X eports X  X  of Dewe et al. (1998) into three classes (J), (K) and (L). The genre (J) is created for research papers with a fixed format. From a user  X  s point of view, it looks very useful to differentiate between the two genres (K) and (L) even though their documents have many properties in common. The growth of on-line shopping requires a genre for product specification (O). 3.2. Construction of genre corpus
As we were not able to acquire a public set of documents classified by a genre, we had to build a genre corpus by ourselves. The corpus is constructed by two graduate students in Computer Science. The col-lected documents are restricted to the written in Korean in this work even though the documents on the
Web are diverse with a wide range of languages. We extract the 10 most-frequently used content words from the KAIST Corpus (1996 X 1997) and acquire the 10 most popular search-terms from the portal sites ( http://www.naver.com ). We send these 20 queries to search service Google and collect 1000 documents (each 50-documents for every query, which are ranked from 30th to 80th in the Google  X  s resultant docu-ments). As Google ranks documents with their popularities, most of the top 30 retrieved documents tend to be assigned as the genre public/commercial homepages. Hence we exclude the top 30 retrieved documents from Google  X  s results for every query in order not to be biased in the distribution of the genres in the cor-pus. We remove the 28 inappropriate pages such as adult-only pages and error pages out of 1000 documents and assign the genres for the rest of them. Less than five documents are assigned for six genres ((A), (G), (H), (M), (N) and (P)). We cannot extract reliable features for representing genres from the very little num-ber of documents. Therefore, we make a simple survey that asks people which terms are brought up in their minds when they think of these six genres. We collect each 3-terms for every six genre. For example, the
 X  idea  X  for genre  X  discussion  X  . By querying these terms to Google, we supplement the documents into the six genres.

The total number of web documents collected is 1224. Since URL of a document is one of the features adopted in this work, not only the content of the document but also the domain that the document is fetched from are important. Hence, we guide the collectors not to gather the bulk of documents from a sin-gle domain. When we merge the documents collected by two collectors, we exclude a page if it already exists in the merged corpus. Besides, when more than five documents are fetched from the same domain and fallen into the same genre, we randomly select and remove one of the documents one by one until their number does not exceed five. After merging the documents, we double-check the assigned genres for the collected documents. We make another two students besides the collectors annotate the genre for the collected doc-uments by hand. When the genres annotated by three students including the collector for a document dis-agree each other, we adjust the genre for the document to the major one. Only eight documents are adjusted their genres by this double-check.

A document sometimes consists of two or three frames that are separate pages with their own URLs. In our corpus, the documents consist of separate frames (pages) whose number varies from 1 up to 4. There-fore, the total number of the documents is 1224 while the total number of the pages that we gather is 1328.
Furthermore, 45 documents out of 1224 are PDF/PS files and they are all included in the genre  X  research reports  X  . The rest are all HTML files. Table 3 shows the number of documents and the number of their source domains according to the genres. The total sum of the column  X  # of domain  X  in this table is 888, but the total number of unique domains regardless of a genre is 729. 4. Set of features for classifying web genre
We use five distinct sets of features to classify the genres. Each of them is extracted from URL, HTML tags, token information, lexical information, and structural information of documents, respectively.
Among them, URL and HTML tags, which we newly introduce as the source of features in this work, are the properties that only web documents contain. The token, lexical and structural information are the sources of the features for the genre classification widely used in the previous researches, and they are common for both textual documents and web documents. In order to extract the sets of features, we process each document with the following steps shown in Fig. 1 .

We keep URL information with the original web page. The pre-processor extracts the texts from a web document if it is an application file such as pdf, doc, or ppt. is handled in this step. After HTML parsing, we can extract a set of features related with HTML tags such as the number of links or the number of input text box. The token information such as the number of sentences and the average number of words per sentence can be gathered from an output of the sen-tence-boundary detector. In addition, the features related with the POS token should be extracted after the morphological analysis. In the case of Korean, a word is composed of a content word and function word(s) without delimiters such as space. A morphological analyzer can separate a content word from func-tion words. That is the reason why the features related with the lexical information should be extracted after the morphological analysis. By using a syntactic parser, phrase and chunk information can be col-lected. In the following subsections, we will explain the sets of features in detail.
 4.1. URL
HTTP URL defines the location of a document on the Web. It mainly consists of a name of the host (domain), a directory path and a filename. The general form of URL is as follows ( Berners-Lee, Masinter, &amp; McCahill, 1994 ): in this work as it can be variable depending on a search query sent to a database. We can define a depth of
URL as the number of directories included in &lt; path &gt;. The URL can denote the characteristics of the doc-uments. For example, the documents of entrance sites are often located right under the root host ( Kraaij,
Westerveld, &amp; Hiemstra, 2002 ), so their URL depth is zero. Table 4 shows the URL-related features and their descriptions. The attribute U3 can tell us weather the document belongs to a user of a UNIX system. The U4 feature checks the filename of a document. The listed filenames are typically used as a filename of an entrance site. The U5 feature can divide domain area of the document according to the domain name of the host. The features from UL1 to UL35 are determined by collecting lexical terms, which occur more than three times in URL strings of the training corpus. 4.2. HTML tags
The attribute HREF of an anchor tag is one of the most widely used notions in subject clustering of web documents ( Wang &amp; Kitsuregawa, 2002 ). To put it more concretely, the number of common links between the documents is adopted as one of the features. Instead of using the number of common links, we adopt the proportion of the frequency of links to the total number of characters in a document (feature H3 in
Table 5 ). With regard to the features H1 and H2 in Table 5 , we subdivide the links into those to the same domain and others to the different domain. Whether more links point to the same domain or to the different domain can provide us a clue to the characteristics of a genre. For instance, the documents in the genre
 X  bulletin collections  X  may have more links to the same domain than to the different domain while vice versa in the genre  X  link collections  X  . For 72 HTML tags used in the training corpus, we employ the proportion of their frequencies to the total frequencies of tags used in a document as a set of features. The features and their descriptions are described in Table 5 . 4.3. Token information
Token information includes basic frequencies for the text token and the pos token, which most previous works employed. In general, letters, digits, punctuations, and symbols mingle in a document. Moreover, a
Korean document consists of heterogeneous character sets such as hangul (Korean alphabets), hanja (Chi-nese letters), and alphabets. The features from F8 to F13 are adopted based on the assumption that two distinct styles of documents may differ in the ratio of usage of different character sets.

After the morphological analysis, we can extract the features related with POS and dictionary informa-tion (from T1 to T15 in Table 6 ). The feature T10 is proposed in Stamatatos et al. (2000a) for the first time.
The features from T11 to T15 can be extracted from a dictionary. 4.4. Lexical information Lexical information is the most commonly used feature for classifying genres in the previous studies.
Since Korean has a great number of function words, which play an important role in a sentence, we want to verify their performance in classifying genres. We separate the features of function words from those of content words. The features S1 and S2 in Table 7 are introduced by Stamatatos et al. (2000a) . They report that these features are the valuable markers that indicate the percentage of high-frequency words and the percentage of unusual words included in a document, respectively.
 4.5. Structural information
Using NLP tools, we can analyze the syntactic structure of a sentence. From the result of the syntactic analysis, we can gather the number of phrases and the average number of words in a phrase shown in Table 8 . Chunks (or multi-word expressions) such as date, time and address are also adopted as useful features in this work.
 5. Experimental results and discussion 5.1. Classifier and experimental environments
We use TiMBL version 4.0 ( Daelemans, Zavrel, van der Sloot, &amp; van den Bosch, 2001 ) as a classifier in the experiments. TiMBL is based on memory-based learning, which is a direct descendant of the classical k -
Nearest Neighbor approach to classification. As the value 1 is chosen for k in this experiment, the genre of a test document can be decided as the same genre as that of the document that is the most similar to the test document among the training corpus. For evaluation, we adopt leave-one-out cross validation that TiMBL 4.0 supports.

Generally speaking, the textual representation of web documents consists of an anchor text text ( Kraaij et al., 2002 ). The title and meta content are also useful texts as you can easily expect. In this paper, we divide the text of web document into three separate segments; title &amp; meta content, and body text. Depending on which segment of a document is dealt with, the experiments are carried out on the seven cases; TM (Title and Meta content), ANCH (Anchor text), BODY (Body text), and their four combinations X  X  X M+ANCH, ANCH+BODY, TM+BODY, and TM+ANCH+BODY. The purpose of combining the segments is that we want to know which text segment is the most useful for automatic genre classification. 5.2. Experimental results on each feature set
The results summarized in Table 9 show the performance of each set of features under the given seven combinations of textual segments. The accuracy in the table is the ratio of the number of documents cor-rectly identified by the classifier. As URL and HTML tags are considered independent of the textual seg-ments, their results remain equal to seven different textual segments.

The first interesting finding in Table 9 is that the result of the segments including BODY (Body text) outperforms those without BODY for most sets of features except S (Usual/Unusual) and V (Vocabulary richness). With respect to the subject clustering of web documents, body texts are sometimes excluded from the source of features ( Wang &amp; Kitsuregawa, 2002 ). Moreover, Pierre (2000) reports that including body texts in the source of features deteriorates the accuracy of automatic clustering. On the other hand, the overall text including the body is essential for genre classification because the statistics that are acquired by scanning a document from beginning to end can imply the property of a certain genre.

Comparing rows in Table 9 , we find that the results of all sets of features except H (HTML tags) are below 50% when used exclusively. The output of H ranks the best, and MP (Most frequently used Punc-tuation marks) is the second best. MP has already been known as one of the useful features for genre clas-sification ( Stamatatos et al., 2000b ). The result of MF (Most frequently used Function words) is quite better than MC (Most frequently used Content words), which means the function words play a more important role than the content words do in identifying a genre. The result of V (Vocabulary richness) occupies the worst position. Tweedie and Baayen (1998) report that vocabulary richness is unstable for the texts shorter than 1000 words. The average number of words for our training documents is 1623 while it is only 650 when excluding the documents in the genre  X  research reports  X  .

Now, we will take a close look at the performance of the feature sets U (Url), UL (Url Lexical) and H (HTML tags) that we focus on in this work. First, with respect to the feature set U, the genres  X  research can interpret this in the following way. The half of the documents in  X  research reports  X  in our training corpus has the value  X  DOC  X  for the feature U2, and many documents in this genre have the value  X  ac.kr  X  for the feature U5. Most of the documents in  X  product specifications  X  are characterized by having the value  X  OUT-
PUT  X  for the feature U2 and the deepest URL depth to other genres. This might be inferred from the fact that a document containing a product specification is usually retrieved by running the script with user  X  s query as you experienced. Most of the documents in both  X  public homepages  X  and  X  commercial homepages  X  have zero URL depth and use pre-defined filenames for U4, thus it would be quite confusing for a classifier to distinguish the documents in the former from those in the latter.

The feature set UL can identify the genres FAQs and  X  product specifications  X  very well because 36 docu-ments out of 54 in FAQs include the term  X  faq  X  in their URLs, which means many authors tend to name the
FAQ page using the term  X  faq  X  . In the case of product specifications , 47 documents out of 114 adopt one of the terms  X  detail  X  ,  X  item  X  , and  X  product  X  in their URLs.

Here, we would like to know why the feature set H perform outstandingly better than the others. When two documents of the same genre are collected from the same domain, we assume that it is highly possible for their HTML tags to be almost identical even though other features such as the number of words or the most frequently used punctuations are quite different. In other words, the distance between the values of
HTML tags features of two documents in this case is far closer than that between other features. In our training corpus, 711 out of 1224 documents are fetched from the domain that the other documents are also fetched from. That is, 711 documents share their domains with the other documents while 513 documents do not. Let us investigate closely the performance of the features of these 711 documents only. Table 10 illustrates the performance of the feature set H comparing with those of U, UL and MP on these 711 doc-uments only. The feature set U and UL are also related with the domain, and the MP ranks the next best to the set H. In the case of H, 496 out of 711 documents are correctly classified. Among 496 documents, 369 (74%) have the same domains as their nearest documents determined by the classifier among the training corpus. It is surprisingly higher than the results of MP, U and UL. In addition, 52 (24%) of 215 documents, which are misclassified out of 711, are deemed to be the nearest to the documents collected from the same domain. This result is also quite higher than the others. This seems to be compatible with the assumption that the usage patterns of HTML tags are very similar among the documents that are collected from the same domain. This fact may become the advantage and the disadvantage at the same time when using the features HTML tags. 5.3. Experimental results on all feature sets Table 11 shows the results of selective experiments, which we have done only on the text segments of ANCH+BODY and TM+ANCH+BODY.

When we compare the performance of the web-specific features with the common textual features, we find that the former (features (1) in Table 11 ) is slightly better than the latter (features (2) in Table 11 ).
When using all sets of features X  X  X otal number of features is 329 X  X  X e can get approximately 74% of accuracy.

Applying a feature selection method, which is a forward sequential selection 1994 ), we can decide the best combination of feature sets (features (4) in Table 11 ). The accuracy of the best combination can be improved up to 75.7%. We can easily guess that the accuracy can be improved considerably only if we apply the feature selection to every single feature not to the feature set, but we will leave this as a future study. The excluded sets from this combination are F (Frequency), P (Phrase), MC (Most frequently used Content words) and V (Vocabulary richness).
 Table 12 depicts the confusion matrix for the result of (ANCH+BODY) using the feature set (4) in
Table 11 . The figures in the column  X  A  X  in Table 12 indicate the number of documents guessed by a classifier as the genre  X  A  X  while the figures in the row  X  A  X  indicate the actual numbers of documents included in the genre  X  A  X  . The accuracies of textual genres are better than those of non-textual ones on the whole. The pre-best. The documents in the genre  X  research reports  X  have distinctive values for most feature sets, so it is easy to detect them from the documents in other genres. Most news articles are of stereotyped format, and the documents in the genre  X  journalistic materials  X  can also be well classified. In the case of  X  discussions  X  ,we found that many documents in this genre accidentally have a very similar format with each other even though they are gathered from different domains. We presume that this is the reason for discussions to become one of the best genres.

The genres  X  input pages  X  (H),  X  simple tables/lists  X  (G) and  X  others  X  (P) occupy the lowest position. In par-the documents in these genres. Indeed many web documents contain tables, input windows within their pages by default. Consequently, we must look into more carefully whether or not these classes are indispen-sable for the web genres.
 The genre  X  public  X  and  X  commercial homepages  X  are very confusable as we expect, and so are the genre confusable ones and it is left as a further study. 6. Conclusion In this paper, we propose the multiple sets of features for classifying the genres for web documents.
Contrary to subject clustering, the overall features from text including the body are essential for genre classification. In addition, punctuation marks and function words are attested to be adequate features for the genre classification. Web documents are different from the textual documents in carrying URL and
HTML tags. The features extracted from document  X  s URL and HTML tags are appropriate for identifying the genres of documents. Through the experimental results, we have grasped the general idea of their contribution to genre classification. The best combination of feature sets included URL, HTML tags, token information, most frequently used function words, most frequently used punctuation marks and chunks.
The features suggested in this paper are more or less language-independent. Therefore, we can apply these features into other languages without a little modification.

The following are left as future studies. As web documents are often with a wide range of styles, it is not easy to confine them to a single genre. For this reason, a classifier should be able to assign multiple genres into a document as the case may be. In addition, efficiencies for on-line genre classification for the web doc-uments will be taken into account.
 References
