 Supervised document classification is a well-studied task. Research has been performed across many document types with a variety of classification tasks. Examples are topic classification of newswire ar-ticles (Yang and Liu, 1999), sentiment classifica-tion of movie reviews (Pang et al., 2002), and satire classification of news articles (Burfoot and Baldwin, 2009). This and other work has established the use-fulness of document classifiers as stand-alone sys-tems and as components of broader NLP systems.
This paper deals with methods relevant to super-vised document classification in domains with net-work structures, where collective classification can yield better performance than approaches that con-sider documents in isolation. Simply put, a network structure is any set of relationships between docu-ments that can be used to assist the document clas-sification process. Web encyclopedias and scholarly publications are two examples of document domains where network structures have been used to assist classification (Gantner and Schmidt-Thieme, 2009; Cao and Gao, 2005).

The contribution of this research is in four parts: (1) we introduce an approach that gives better than state of the art performance for collective classifica-tion on the ConVote corpus of congressional debate transcripts (Thomas et al., 2006); (2) we provide a comparative overview of collective document classi-fication techniques to assist researchers in choosing an algorithm for collective document classification tasks; (3) we demonstrate effective novel approaches for incorporating the outputs of SVM classifiers into collective classifiers; and (4) we demonstrate effec-tive novel feature models for iterative local classifi-cation of debate transcript data.

In the next section (Section 2) we provide a for-mal definition of collective classification and de-scribe the ConVote corpus that is the basis for our experimental evaluation. Subsequently, we describe and critique the established benchmark approach for congressional floor-debate transcript classification, before describing approaches based on three alterna-tive collective classification algorithms (Section 3). We then present an experimental evaluation (Sec-tion 4). Finally, we describe related work (Section 5) and offer analysis and conclusions (Section 6). 2.1 Collective Classification Given a network and an object o in the network, there are three types of correlations that can be used to infer a label for o : (1) the correlations between the label of o and its observed attributes; (2) the cor-relations between the label of o and the observed at-tributes and labels of nodes connected to o ; and (3) the correlations between the label of o and the un-observed labels of objects connected to o (Sen et al., 2008).

Standard approaches to classification generally ignore any network information and only take into account the correlations in (1). Each object is clas-sified as an individual instance with features derived from its observed attributes. Collective classification takes advantage of the network by using all three sources. Instances may have features derived from their source objects or from other objects. Classifi-cation proceeds in a joint fashion so that the label given to each instance takes into account the labels given to all of the other instances.

Formally, collective classification takes a graph, made up of nodes V = { V 1 ,...,V n } and edges E . The task is to label the nodes V i  X  V from a label set L = { L 1 ,...,L q } , making use of the graph in the form of a neighborhood function N = { N 1 ,...,N n } , where N i  X  X  \{ V i } . 2.2 The ConVote Corpus ConVote, compiled by Thomas et al. (2006), is a corpus of U.S. congressional debate transcripts. It consists of 3,857 speeches organized into 53 debates on specific pieces of legislation. Each speech is tagged with the identity of the speaker and a  X  X or X  or  X  X gainst X  label derived from congressional voting records. In addition, places where one speaker cites another have been annotated, as shown in Figure 1.
We apply collective classification to ConVote de-bates by letting V refer to the individual speakers in a debate and populating N using the citation graph be-tween speakers. We set L = { y,n } , corresponding to  X  X or X  and  X  X gainst X  votes respectively. The text of each instance is the concatenation of the speeches by a speaker within a debate. This results in a corpus of 1,699 instances with a roughly even class distri-bution. Approximately 70% of these are connected , i.e. they are the source or target of one or more cita-tions. The remainder are isolated . In this section we describe techniques for perform-ing collective classification on the ConVote cor-pus. We differentiate between dual-classifier and iterative-classifier approaches.

Dual-classifier approach: This approach uses a collective classification algorithm that takes inputs from two classifiers: (1) a content-only classifier that determines the likelihood of a y or n label for an in-stance given its text content; and (2) a citation clas-sifier that determines, based on citation information, whether a given pair of instances are  X  X ame class X  or  X  X ifferent class X .

Let  X  denote a set of functions representing the classification preferences produced by the content-only and citation classifiers:  X  For each V i  X  X  ,  X  i  X   X  is a function  X  i : L X   X  For each ( V i ,V j )  X  E ,  X  ij  X   X  is a function
Later in this section we will describe three collec-tive classification algorithms capable of performing overall classification based on these inputs: (1) the minimum-cut approach, which is the benchmark for collective classification with ConVote, established by Thomas et al.; (2) loopy belief propagation; and (3) mean-field. We will show that these latter two techniques, which are both approximate solutions for Markov random fields, are superior to minimum-cut for the task.

Figure 2 gives a visual overview of the dual-classifier approach.

Iterative-classifier approach: This approach incorporates content-only and citation features into a single local classifier that works on the assump-tion that correct neighbor labels are already known. This approach represents a marked deviation from the dual-classifier approach and offers unique ad-vantages. It is fully described in Section 3.4.
Figure 3 gives a visual overview of the iterative-classifier approach.

For a detailed introduction to collective classifica-tion see Sen et al. (2008). Debate 006 3.1 Dual-classifier Approach with Thomas et al. use linear kernel SVMs as their base classifiers. The content-only classifier is trained to predict y or n based on the unigram presence fea-tures found in speeches. The citation classifier is trained to predict  X  X ame class X  or  X  X ifferent class X  labels based on the unigram presence features found in the context windows (30 tokens before, 20 tokens after) surrounding citations for each pair of speakers in the debate.

The decision plane distance computed by the content-only SVM is normalized to a positive real number and stripped of outliers: where  X  i is the standard deviation of the decision plane distance, d i , over all of the instances in the debate and  X  i ( n ) = 1  X   X  i ( y ) . The citation classifier output is processed similarly: 1  X  ij ( y,y ) = where  X  ij is the standard deviation of the decision plane distance, d ij over all of the citations in the de-bate and  X  ij ( n,n ) =  X  ij ( y,y ) . The  X  and  X  vari-ables are free parameters.

A given class assignment v is assigned a cost that is the sum of per-instance and per-pair class costs derived from the content-only and citation classifiers respectively: c ( v ) = X where v i is the label of node V i and  X  v i denotes the complement class of v i .
The cost function is modeled in a flow graph where extra source and sink nodes represent the y and n labels respectively. Each node in V is con-nected to the source and sink with capacities  X  i ( y ) and  X  i ( n ) respectively. Pairs classified in the  X  X ame class X  class are linked with capacities defined by  X  .
An exact optimum and corresponding overall classification is efficiently computed by finding the minimum-cut of the flow graph (Blum and Chawla, 2001). The free parameters are tuned on a set of held-out data.

Thomas et al. demonstrate improvements over content-only classification, without attempting to show that the approach does better than any alter-natives; the main appeal is the simplicity of the flow graph model. There are a number of theoretical lim-itations to the approach, which we now discuss.
As Thomas et al. point out, the model has no way of representing the  X  X ifferent class X  output from the citation classifier and these citations must be dis-carded. This, to us, is the most significant problem with the model. Inspection of the corpus shows that approximately 80% of citations indicate agreement, meaning that for the present task the impact of dis-carding this information may not be large. However, the primary utility in collective approaches lies in their ability to fill in gaps in information not picked up by content-only classification. All available link information should be applied to this end, so we need models capable of accepting both positive and negative information.
 The normalization techniques used for converting SVM outputs to graph weights are somewhat arbi-trary. The use of standard deviations appears prob-lematic as, intuitively, the strength of a classification should be independent of its variance. As a case in point, consider a set of instances in a debate all clas-sified as similarly weak positives by the SVM. Use of  X  i as defined above would lead to these being er-roneously assigned the maximum score because of their low variance.

The minimum-cut approach places instances in either the positive or negative class depending on which side of the cut they fall on. This means that no measure of classification confidence is avail-able. This extra information is useful at the very least to give a human user an idea of how much to trust the classification. A measure of classification confidence may also be necessary for incorporation into a broader system, e.g., a meta-classifier (An-dreevskaia and Bergler, 2008; Li and Zong, 2008).
Tuning the  X  and  X  parameters is likely to become a source of inaccuracy in cases where the tuning and test debates have dissimilar link structures. For ex-ample, if the tuning debates tend to have fewer, more accurate links the  X  parameter will be higher. This will not produce good results if the test debates have more frequent, less accurate links. 3.2 Heuristics for Improving Minimum-cut Bansal et al. (2008) offer preliminary work describ-ing additions to the Thomas et al. minimum-cut ap-proach to incorporate  X  X ifferent class X  citation clas-sifications. They use post hoc adjustments of graph capacities based on simple heuristics. Two of the three approaches they trial appear to offer perfor-mance improvements:
The SetTo heuristic: This heuristic works through E in order and tries to force V i and V j into different classes for every  X  X ifferent class X  ( d ij &lt; 0 ) citation classifier output where i &lt; j . It does this by altering the four relevant content-only preferences,  X  loss of generality that the largest of these values is  X  ( y ) . If this preference is respected, it follows that V j should be put into class n . Bansal et al. instanti-ate this chain of reasoning by setting:  X   X  0 i ( y ) = max(  X , X  i ( y ))  X   X  0 j ( n ) = max(  X , X  j ( n )) where  X  0 is the replacement content-only function,  X  is a free parameter  X  ( . 5 , 1] ,  X  0 i ( n ) = 1  X   X  0 and  X  0 j ( y ) = 1  X   X  0 j ( y ) .

The IncBy heuristic: This heuristic is a more conservative version of the SetTo heuristic. Instead of replacing the content-only preferences with fixed constants, it increments and decrements the previous values so they are somewhat preserved:  X   X  0 i ( y ) = min(1 , X  i ( y ) +  X  )  X   X  0 j ( n ) = min(1 , X  j ( n ) +  X  )
There are theoretical shortcomings with these ap-proaches. The most obvious problem is the arbitrary nature of the manipulations, which produce a flow graph that has an indistinct relationship to the out-puts of the two classifiers.

Bensal et al. trial a range of  X  values, with vary-ing impacts on performance. No attempt is made to demonstrate a method for choosing a good  X  value. It is not clear that the tuning approach used to set  X  and  X  would be successful here. In any case, having a third parameter to tune would make the process more time-consuming and increase the risks of in-correct tuning, described above.

As Bansal et al. point out, proceeding through E in order means that earlier changes may be undone for speakers who have multiple  X  X ifferent class X  ci-tations.

Finally, we note that the confidence of the cita-tion classifier is not embodied in the graph structure. The most marginal  X  X ifferent class X  citation, classi-fied just on the negative side of the decision plane, is treated identically to the most confident one furthest from the decision plane. 3.3 Dual-classifier Approach with Markov A pairwise Markov random field (Taskar et al., 2002) is given by the pair ( G,  X ) , where G and  X  are as previously defined,  X  being re-termed as a set of clique potentials . Given an assignment v to the nodes V , the pairwise Markov random field is asso-ciated with the probability distribution: where: and v 0 i denotes the label of V i for an alternative as-signment in v 0 .
 In general, exact inference over a pairwise Markov random field is known to be NP-hard. There are certain conditions under which exact inference is tractable, but real-world data is not guaranteed to satisfy these. A class of approximate inference al-gorithms known as variational methods (Jordan et al., 1999) solve this problem by substituting a sim-pler  X  X rial X  distribution which is fitted to the Markov random field distribution.

Loopy Belief Propagation: Applied to a pair-wise Markov random field, loopy belief propagation is a message passing algorithm that can be concisely expressed as the following set of equations: m where m i  X  j is a message sent by V i to V j and  X  is a normalization constant that ensures that each mes-sage and each set of marginal probabilities sum to 1. The algorithm proceeds by making each node com-municate with its neighbors until the messages sta-bilize. The marginal probability is then derived by calculating b i ( v i ) .

Mean-Field: The basic mean-field algorithm can be described with the equation: b ( v j ) =  X  X  j ( v j ) Y where  X  is a normalization constant that ensures P v j b j ( v j ) = 1 . The algorithm computes the fixed point equation for every node and continues to do so until the marginal probabilities b j ( v j ) stabilize.
Mean-field can be shown to be a variational method in the same way as loopy belief propagation, using a simpler trial distribution. For details see Sen et al. (2008).

Probabilistic SVM Normalisation: Unlike minimum-cut, the Markov random field approaches have inherent support for the  X  X ifferent class X  out-put of the citation classifier. This allows us to ap-ply a more principled SVM normalisation technique. Platt (1999) describes a technique for converting the output of an SVM classifier to a calibrated posterior probability. Platt finds that the posterior can be fit using a parametric form of a sigmoid:
This is equivalent to assuming that the output of the SVM is proportional to the log odds of a positive example. Experimental analysis shows error rate is improved over a plain linear SVM and probabilities are of comparable quality to those produced using a regularized likelihood kernel method.

By applying this technique to the base classifiers, we can produce new, simpler  X  functions,  X  i ( y ) = P i and  X  ij ( y,y ) = P ij where P i is the probabilis-tic normalized output of the content-only classifier and P ij is the probabilistic normalized output of the citation classifier.
 This approach addresses the problems with the Thomas et al. method where the use of standard deviations can produce skewed normalizations (see Section 3.1). By using probabilities we also open up the possibility of replacing the SVM classifiers with any other model than can be made to produce a probability. Note also that there are no parameters to tune. 3.4 Iterative Classifier Approach The dual-classifier approaches described above rep-resent global attempts to solve the collective classifi-cation problem. We can choose to narrow our focus to the local level, in which we aim to produce the best classification for a single instance with the as-sumption that all other parts of the problem (i.e. the correct labeling of the other instances) are solved.
The Iterative Classification Algorithm (Bilgic et al., 2007), defined in Algorithm 1, is a simple tech-nique for performing collective classification using such a local classifier. After bootstrapping with a content-only classifier, it repeatedly generates new estimates for v i based on its current knowledge of N i . The algorithm terminates when the predictions stabilize or a fixed number of iterations is com-pleted. Each iteration is completed using a newly generated ordering O , over the instances V .
We propose three feature models for the local classifier.

Citation presence and Citation count: Given that the majority of citations represent the  X  X ame class X  relationship (see Section 3.1), we can an-ticipate that content-only classification performance will be improved if we add features to represent the presence of neighbours of each class.

We define the function c ( i,l ) = P v giving the number of neighbors for node V i with la-bel l , where  X  is the Kronecker delta. We incorporate these citation count values, one for the supporting Algorithm 1 Iterative Classification Algorithm for each node V i  X  X  do { bootstrapping } end for repeat { iterative classification } until labels have stabilized or maximum iterations reached class and one for the opposing class, obtaining a new u ,u 2 i ,...,u j i are the elements of ~u i , the binary un-igram feature vector used by the content-only clas-sifier to represent instance i .

Alternatively, we can represent neighbor labels using binary citation presence values where any non-zero count becomes a 1 in the feature vector.
Context window: We can adopt a more nu-anced model for citation information if we incor-porate the citation context window features into the feature vector. This is, in effect, a synthesis of the content-only and citation feature models. Con-text window features come from the product space L  X  C , where C is the set of unigrams used in ci-tation context windows and ~c i denotes the context window features for instance i . The new feature vec-tor becomes: ( u 1 i ,u 2 i ,...,u j i ,c 1 i ,c 2 i ,...,c approach implements the intuition that speakers in-dicate their voting intentions by the words they use to refer to speakers whose vote is known. Because neighbor relations are bi-directional the reverse is also true: Speakers indicate other speakers X  voting intentions by the words they use to refer to them.
As an example, consider the context window fea-ture AGREE-FOR , indicating the presence of the agree unigram in the citation window I agree with the gentleman from Louisiana , where the label for the gentleman from Louisiana instance is y . This feature will be correctly correlated with the y label. Similarly, if the unigram were disagree the feature would be correlated with the n label. In this section we compare the performance of our dual-classifier and iterative-classifier approaches. We also evaluate the performance of the three fea-ture models for local classification.

All accuracies are given as the percentages of instances correctly classified. Results are macro-averaged using 10  X  10-fold cross validation, i.e. 10 runs of 10-fold cross validation using different randomly assigned data splits.

Where quoted, statistical significance has been calculated using a two-tailed paired t -test measured over all 100 pairs with 10 degrees of freedom. See Bouckaert (2003) for an experimental justification for this approach.

Note that the results presented in this section are not directly comparable with those reported by Thomas et al. and Bansal et al. because their exper-iments do not use cross-validation. See Section 4.3 for further discussion of experimental configuration. 4.1 Local Classification We evaluate three models for local classification: ci-tation presence features, citation count features and context window features. In each case the SVM classifier is given feature vectors with both content-only and citation information, as described in Sec-tion 3.4.

Table 1 shows that context window performs the best with 89.66% accuracy, approximately 1.5% ahead of citation count and 3.5% ahead of citation presence. All three classifiers significantly improve on the content-only classifier.

These relative scores seem reasonable. Knowing the words used in citations of each class is better than knowing the number of citations in each class, and better still than only knowing which classes of citations exist.

These results represent an upper-bound for the performance of the iterative classifier, which re-lies on iteration to produce the reliable information about citations given here by oracle. 4.2 Collective Classification Table 2 shows overall results for the three collective classification algorithms. The iterative classifier was run separately with citation count and context win-dow citation features, the two best performing local classification methods, both with a threshold of 30 iterations.

Results are shown for connected instances, iso-lated instances, and all instances. Collective clas-sification techniques can only have an impact on connected instances, so these figures are most im-portant. The figures for all instances show the per-formance of the classifiers in our real-world task, where both connected and isolated instances need to be classified and the end-user may not distinguish between the two types.

Each of the four collective classifiers outperform the minimum-cut benchmark over connected in-stances, with the iterative classifier (context win-dow) (79.05%) producing the smallest gain of less than 1% and mean-field doing best with a nearly 6% gain (84.13%). All show a statistically signif-icant improvement over the content-only classifier. Mean-field shows a statistically significant improve-ment over minimum-cut.

The dual-classifier approaches based on loopy belief propagation and mean-field do better than the iterative-classifier approaches by an average of about 3%.

Iterative classification performs slightly better with citation count features than with context win-dow features, despite the fact that the context win-dow model performs better in the local classifier evaluation. We speculate that this may be due to ci-tation count performing better when given incorrect neighbor labels. This is an aspect of local classi-fier performance we do not otherwise measure, so a clear conclusion is not possible. Given the closeness of the results it is also possible that natural statistical variation is the cause of the difference.
The performance of the minimum-cut method is not reliably enhanced by either the SetTo or IncBy heuristics. Only IncBy (.15) gives a very small im-provement (0.14%) over plain minimum-cut. All of the other combinations tried diminished perfor-mance slightly. 4.3 A Note on Error Propagation and Early in our experimental work we noticed that per-formance often varied greatly depending on the de-bates that were allocated to training, tuning and test-ing. This observation is supported by the per-fold scores that are the basis for the macro-average per-formance figures reported in Table 2, which tend to have large standard deviations. The absolute standard deviations over the 100 evaluations for the minimum-cut and mean-field methods were 11.19% and 8.94% respectively. These were significantly larger than the standard deviation for the content-only baseline, which was 7.34%. This leads us to conclude that the performance of collective classifi-cation methods is highly variable.

Bilgic and Getoor (2008) offer a possible expla-nation for this. They note that the cost of incor-rectly classifying a given instance can be magnified in collective classification, because errors are prop-agated throughout the network. The extent to which this happens may depend on the random interaction between base classification accuracy and network structure. There is scope for further work to more fully explain this phenomenon.

From these statistical and theoretical factors we infer that more reliable conclusions can be drawn from collective classification experiments that use cross-validation instead of a single, fixed data split. Somasundaran et al. (2009) use ICA to improve sen-timent polarity classification of dialogue acts in a corpus of multi-party meeting transcripts. Link fea-tures are derived from annotations giving frame re-lations and target relations. Respectively, these re-late dialogue acts based on the sentiment expressed and the object towards which the sentiment is ex-pressed. Somasundaran et al. provides another ar-gument for the usefulness of collective classification (specifically ICA), in this case as applied at a dia-logue act level and relying on a complex system of annotations for link information.

Somasundaran and Wiebe (2009) propose an un-supervised method for classifying the stance of each contribution to an online debate concerning the mer-its of competing products. Concessions to other stances are modeled, but there are no overt citations in the data that could be used to induce the network structure required for collective classification.
Pang and Lee (2005) use metric labeling to per-form multi-class collective classification of movie reviews. Metric labeling is a multi-class equiva-lent of the minimum-cut technique in which opti-mization is done over a cost function incorporat-ing content-only and citation scores. Links are con-structed between test instances and a set of k near-est neighbors drawn only from the training set. Re-stricting the links in this way means the optimization problem is simple. A similarity metric is used to find nearest neighbors.

The Pang and Lee method is an instance of im-plicit link construction, an approach which is be-yond the scope of this paper but nevertheless an im-portant area for future research. A similar technique is used in a variation on the Thomas et al. experi-ment where additional links between speeches are inferred via a similarity metric (Burfoot, 2008). In cases where both citation and similarity links are present, the overall link score is taken as the sum of the two scores. This seems counter-intuitive, given that the two links are unlikely to be independent. In the framework of this research, the approach would be to train a link meta-classifier to take scores from both link classifiers and output an overall link prob-ability.

Within NLP, the use of LBP has not been re-stricted to document classification. Examples of other applications are dependency parsing (Smith and Eisner, 2008) and alignment (Cromires and Kurohashi, 2009). Conditional random fields (CRFs) are an approach based on Markov random fields that have been popular for segmenting and labeling sequence data (Lafferty et al., 2001). We rejected linear-chain CRFs as a candidate approach for our evaluation on the grounds that the arbitrar-ily connected graphs used in collective classification can not be fully represented in graphical format, i.e. Connected Isolated All linear-chain CRFs do not scale to the complexity of graphs used in this research. By applying alternative models, we have demon-strated the best recorded performance for collective classification of ConVote using bag-of-words fea-tures, beating the previous benchmark by nearly 6%. Moreover, each of the three alternative approaches trialed are theoretically superior to the minimum-cut approach approach for three main reasons: (1) they support multi-class classification; (2) they support negative and positive citations; (3) they require no parameter tuning.

The superior performance of the dual-classifier approach with loopy belief propagation and mean-field suggests that either algorithm could be consid-ered as a first choice for collective document classi-fication. Their advantage is increased by their abil-ity to output classification confidences as probabili-ties, while minimum-cut and the local formulations only give absolute class assignments. We do not dis-miss the iterative-classifier approach entirely. The most compelling point in its favor is its ability to unify content only and citation features in a single classifier. Conceptually speaking, such an approach should allow the two types of features to inter-relate in more nuanced ways. A case in point comes from our use of a fixed size context window to build a citation classifier. Future approaches may be able to do away with this arbitrary separation of features by training a local classifier to consider all words in terms of their impact on content-only classification and their relations to neighbors.

Probabilistic SVM normalization offers a conve-nient, principled way of incorporating the outputs of an SVM classifier into a collective classifier. An op-portunity for future work is to consider normaliza-tion approaches for other classifiers. For example, confidence-weighted linear classifiers (Dredze et al., 2008) have been shown to give superior performance to SVMs on a range of tasks and may therefore be a better choice for collective document classification.
Of the three models trialled for local classifiers, context window features did best when measured in an oracle experiment, but citation count features did better when used in a collective classifier. We con-clude that context window features are a more nu-anced and powerful approach that is also more likely to suffer from data sparseness. Citation count fea-tures would have been the less effective in a scenario where the fact of the citation existing was less infor-mative, for example, if a citation was 50% likely to indicate agreement rather than 80% likely. There is much scope for further research in this area.
