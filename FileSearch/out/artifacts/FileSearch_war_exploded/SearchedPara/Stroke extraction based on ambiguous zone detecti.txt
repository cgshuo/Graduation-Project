 ORIGINAL PAPER Zhewen Su  X  Zhongsheng Cao  X  Yuanzhen Wang Abstract A method of stroke extraction based on ambigu-ous zone detection is presented to facilitate the recovery of dynamic information from static handwritten Chinese char-acter images. First, ambiguous zones are detected using fea-turepointsoftheskeletonandthecontourinformationaround them. Then, a graph is built to represent each character, and the continuity of sub-strokes is analyzed using Bayesian classification. Several constraint conditions are proposed to search stroke paths in the graph and two criteria are also uti-lized to deal with multi-traced sub-strokes. Finally, strokes are reconstructed by B-spline interpolation. Experimental results show that the proposed method can detect the ambig-uous zones accurately, and is feasible and effective for stroke extraction.
 Keywords Stroke extraction  X  Ambiguous zone  X  Dynamic information  X  Thinning algorithm 1 Introduction Computer analysis and recognition of handwriting is divided into two categories: online and offline. Online handwriting recognition has better recognition performance than offline recognition because of the more abundant dynamic infor-mation available [ 21 ]. The procedure of recovering dynamic information can be treated as to convert a two-dimensional character image into a one-dimensional signal sequence [ 10 ]. It bridges the gap between online and offline and enables the application of online methods to offline data.

AsChinesecharactersarestronglyhierarchical,ithasbeen generally recognized that the decomposition of Chinese char-acters into a set of basic elements is a feasible way for struc-tural analysis (such as radicals [ 24 , 25 ], which are extracted using non-linear active shape models for handwritten recog-nition). In our previous works [ 2 ], we have proposed a hier-archical model for dynamic information recovery, in which, strokes are located at the lowest layer as the basic recovering primitives. In this paper, we are concerned with the prob-lem of extracting strokes from the viewpoint of recovering dynamic information. The definition of stroke varies from context to context, e.g., natural stroke [ 8 ], line stroke [ 15 ], trated and compared these concepts. Out of consideration for consistency with online applications, the stroke in this con-text is defined as a part of writing trajectory delimited by a pen-down at one end and a pen-up at the other end, coming close to the definition of natural stroke .

Generally, the methods of stroke extraction can be clas-sified into two major categories: thinning [ 16 , 17 , 22 ] and non-thinning [ 1 , 6 , 13 , 27 ]. The intrinsic problem of thinning-based methods is that they may produce spurious branches or skeleton deformations. Although some techniques, such as maximum circle criterion [ 17 ] and double threshold method [ 22 ], have been proposed to solve this problem, the results are not as ideal as people want, even bring some other distor-tions. On the other hand, methods without thinning process are also used to extract strokes. Lee and Wu X  X  algorithm [ 13 ] integrated all levels of contour information; Su and Wang [ 27 ] employed a directional filtering technique for stroke extraction; Fan and Wu [ 6 ] extracted strokes based on a spe-cial skeleton without including fork points by a run-length codingtechnique;CaoandTan[ 1 ]proposedamodelofstroke extraction using degree information and the stroke continu-ation property.

For both the categories of algorithms, one of the primary reasons for erroneous results is that they cannot resolve ambi-guities and uncertainties at the intersection regions effec-tively. Because, in these areas (called ambiguous zones ), the original odometric information has been lost or ambiguous. The writing trajectory of a stroke is located by the symmetric points of the local symmetries of the contour. However, when the stroke is interfered (crossing or touching) with itself or other strokes, the local symmetries of the intersection regions are degraded, which makes the information about the original pen-tip movement at these regions ambiguous (as shown in Fig. 1 ). Thus, an ambiguous zone is not associated with any pixel on the contour conceptually.

In order to identify and interpret ambiguous zones, many researchers have proposed various algorithms. Plamondon and Privitera [ 20 ] detected interference zones by scanning the image with a moving window of a pre-fixed initial size from the top left side of the image. The main drawback of the method is that the localization of the window heavily relies on the procedure of dominant point detection which is per-formed by a curvature estimation algorithm. As we know, the existing algorithms of curvature estimation are unreli-able, and they often give results far from human perception when working on the points without sufficiently large regions of support. Besides, the scanning process is really time-con-suming.

Fan and Wu [ 6 ] detected junction areas by checking the relationships between different types of runs. Su and Wang [ 27 ] decomposed a character into different directional stroke segments by a set of Gabor filters, and ambiguous zones are achieved by comparing the reconstructed image with the originalone.Nonetheless,boththemethodsaremoresuitable for the characters with strokes that have distinct directional features, like printed characters. In addition, several meth-ods [ 13 , 28 ] based on analysis of regularity and singularity have been proposed recently, in which, singular regions cor-respond to end, intersection and turn regions.

To solve the problems mentioned above, in this paper, we first propose a novel algorithm that utilizes the feature points inthethinnedimageandthesurroundingcontourinformation for ambiguous zone detection. The algorithm does not exploit any curvature estimation algorithms, with reduced computa-tional complexity, high accuracy and noise tolerance. After the detection of ambiguous zones, a character is split into two parts: sub-strokes and ambiguous zones. The Sample Points of Writing Trajectories (SPWTs) of sub-strokes are obtained bythemethodoftracingthedoubleboundarycourse.Agraph is built to model each character, and we determine the con-tinuous pairs of sub-strokes by a Bayesian classifier. Then, the problem of stroke extraction is converted into searching paths in the graph, satisfying a certain number of conditions. The final strokes are reconstructed by B-spline interpolation. Figure 2 shows the flow of the algorithm.

The rest of the paper is organized as follows. In Sect. 2 , the algorithm of ambiguous zone detection is introduced. Section 3 describes the process of stroke extraction. The experimental results and discussions are given in Sect. 4 . Finally, the conclusions of the paper are presented in Sect. 5 . 2 Ambiguous zone Generally, ambiguous zones are defined as the parts of a char-acter with intersections of stroke, where the odometric infor-mation is lost and any explicit clues about the original writing trajectory cannot be obtained. In this section, we will explain how to detect ambiguous zones in a handwritten Chinese character image. After thinning, feature points are extracted from the skeleton (here, we use the terms skeletonization and thinning , skeleton and thinned result synonymously), where candidate fork points (CFPs) indicate the presence of ambiguous zones in the image. In the detecting process, we approximate the ambiguous zone with a polygon whose ver-tices adhere to the contour points with the local minimum distance to the corresponding CFP.

Before our discussions, some terminologies have to be introduced first. We assume the image considered in this paper has been denoized and binarized. Let f ( x , y ) be the function of the original or thinned character image, whose foreground and background pixels have values 1 and 0, respectively. For an arbitrary pixel P in the image, its 8-neighbors and 4-neighbors are shown in Fig. 3 . 2.1 Fork point A fork point is referred to as the point of the ideal skeleton, where three or more skeleton segments meet, and it corre-sponds to an ambiguous zone in the image uniquely. How-ever, we cannot obtain the ideal skeleton that fully conforms to human perception since the limitations of most thinning algorithms. Actually, a fork point often corresponds to sev-eral pixels in the thinned image, and these pixels are called CFPs.

The set of CFPs and end points (that have only one fore-ground pixel in their 8-neighbors) reflects the geometrical and structural features of the skeleton, as shown in Fig. 4 b. By following [ 17 ], we define the set of CFPs S f and the set of end points S e as: S S where N c ( p ) = 1 2 7 i = 0 | p i + 1  X  p i | ( p 8 = p
Generally, an ambiguous zone will be split into one or more CFPs after thinning, while some abrupt turnings of strokes with large curvatures can cause CFPs as well. These CFPs, called spurious candidate fork points (SCFPs), do not correspond to any ambiguous zones (see Fig. 7 ). We use the double threshold method mentioned in [ 22 ] to identify SCFPs. This method can be outlined as follows.

Suppose p is such a CFP of S f that N b ( p ) = 3, and e is an end point of S e . If there is a branch b between p and e , satisfying one of the following two conditions, then p is a SCFP. 1. the length of b , denoted by L b ,issmallerthan d l ; 2. L b is between d l and d h , and for each pixel p i in b , Here, w = 2 N / L is the estimated average stroke width, N is the number of foreground pixels, and L is the total length contour of input image; d l is a low threshold which is small enough so that the branch shorter than d l must correspond to a SCFP, while d h is a high threshold which is large enough so that no SCFP involved in the branch longer than d h .In experiments, we set d l = 0.8 w and d h = 2.5 w .

A critical problem has to be addressed is that the sec-ond condition above may not be necessary. Because, strokes in these areas are not eroded or overlapped, which means the measurement about the shortest distance to the contour is worthless, and the constraint of d c ( p i )/ N p &gt; max d c ( p i )&gt;w does not always work. The SCFP cannot be detected when b is long enough. We will solve this problem in the process of ambiguous zone detection.

As a fork point corresponds to an ambiguous zone in the image uniquely, the set of fork points can provide useful clues for ambiguity detection. However, it seems impossible to extract fork points directly from the image, thus we hope to find a correspondence between S f and the set of fork points. Let S 1 be the set of SCFPs, and S 2 = S f  X  S 1 , then the corre-spondence can be treated as a partition of S 2 , denoted as S For each element e of S a , e is a subset of S 2 corresponding to an ambiguous zone z uniquely, so that all the CFPs within z are contained in e .

In general, thinning is an iterative process that removes the boundary pixels of the object region until only unit (one) pixel-width thinned skeleton remains without any topologi-cal structure alterations. In the thinning procedure, while the skeleton segments of non-ambiguous zones are generated after about w/ 2 times of iterations, the ink-blobs of ambigu-ous zones are still preserved (as shown in Fig. 5 b). Therefore, the CFPs within the same ink-blob always correspond to the same fork point. In [ 11 ], Kim et al. applied a thinning algo-rithm with limited iterations, called half-thinning , to detect degraded regions. Using this method, we construct S a as fol-lows. 1. Suppose p 0 and p 1 are two CFPs of S 2 , if there is a 2. Let S 3 be the set of contour pixels after half-thinning,
Using the set of S a , we obtain the approximate position of each fork point as follows. For an arbitrary element e in S ,(1)if | e |= 1, the point of e is chosen; (2) if | e |= 2, the centre point of the line between the two points of e is chosen; (3) if | e | &gt; 2, a polygon, whose vertices correspond to the points of e , is built and the centroid of the polygon is chosen (see Fig. 6 ). 2.2 Ambiguous zone detection Since the odometric information of ambiguous zones has been lost, it is an extremely difficult work to determine the exact configurations of these areas. In fact, all we need to do is to distinguish the ambiguous zones from the other parts of strokes,andthewritingtrajectoriesinthesezonesareinferred from the other parts. Intuitively, each ambiguous zone can be approximated by a polygon whose vertices correspond to the contour points with dramatic changes in curvature. There-fore, some of the existing algorithms [ 13 , 20 ] take corner detection or maximum curvature point extraction as a pre-processing step for ambiguous zone detection.

Basedonthedefinitionofforkpoint,itcanbeassumedthat all the fork points are inside their corresponding ambiguous zones and close to the centroids of the approximated poly-gons. Then, the vertices of the approximated polygons can be achieved as the local minimum distance points by calcu-lating the distances from the fork points to their surrounding points on the contour. From this point of view, we present a novel algorithm for ambiguous zone detection. Before the detailed discussion, some concepts about contour following should be presented.
 Definition 1 A contour pixel is defined as a foreground pixel that has at least one background pixel in its 4-neighbors. Let C denotes the set of contour points.

Acontour followingalgorithmis referredtoas aprocedure to arrange the pixels of each contour into a circular link list [ 4 ]. The link list, always represented by the Freeman-chain code [ 7 ], is used to facilitate the tracing procedure of ambig-uous zone detection and SPWT extraction. In this study, we conform to the traditional assumption that each contour is a set of points associated with each other in a form of closed loop. Then the link list can be obtained by depth-first search-ing of a simple cycle with all the pixels visited. During con-tour following, we define the tracing direction as: clockwise for exterior contours and counter-clockwise for interior con-tours.
 Definition 2 For an arbitrary contour C , its tracing sequen-ce is represented as (..., c i  X  n ,..., c i  X  1 , c i , c ...) , then c m -step successor, denoted as pred ( c i , n ) and succ ( contour segment from c i to c j , and LCS ( c i , c j ) denotes the length of the segment. For an positive variable L , F w ( pred ( c i , i 0 ) and B w ( c i , L ) = succ ( c i , i 1 the maximum integers satisfying LCS ( F w ( c i , L ), c i and LCS ( c i , B w ( c i , L )) &lt; L .
For each element e in S a ,let p c be the approximate posi-tion of the corresponding fork point of e . S c ={ c | d ( &lt; d between two pixels p c and c , and d r is a threshold satisfying that all the points of the ambiguous zone are included in the circle whose center is p c and radius equal to d r .Thesetof the vertices of the ambiguous zone, denoted as S z , is initially empty. The detection process is described as follows. Step 1 If d ( p m , p c )&lt; d m , then if the straight line p does not intersect any contours at interior points, then p appended into S z ;elsegotoStep3,where p d m is a threshold that restricts the size of the ambiguous zone, and we set d m = 1 . 4 w in our experiments.
 Step 2 Given a step parameter L th , S c = S c  X  CS ( F w L to Step 1.
 Step 3 If one of the following two conditions is satisfied, then all the CFPs in e are marked as SCFPs; else return the polygon whose vertices are restricted to be the points of S (a) | S z | &lt; 3; (b) | S z |= 3 and there are two vertices v 0 and v 1 of S
The whole detecting procedure is shown in Fig. 6 , where the black squares represent the vertices of the approximated polygon of the ambiguous zone. In order to get a better under-standing of the algorithm above, some remarks have to been given here. 1. The step parameter L th could be dynamically changed where  X  is the interior angle between the sides of d and L which can be approximated by sin  X  = 1 , cos  X  = 0 ( d  X  w/ 2 ) sin  X  = w 2 d , cos  X  = X  (2) In order to avoid corner detection involved in the second
Then, the condition is restricted to be | LCS (v o ,v 1 )  X  L arc (v 0 ,v 1 ) | where d 1 = d (v 0 ,v 1 )/ 2,and C th isathresholdusedtorestrict the difference between LCS (v 0 ,v 1 ) and L arc (v 0 ,v 1 it as 0.05 in experiments. 3 Stroke extraction In this section, we will introduce the process of stroke extrac-tion. In this paper, a sub-stroke is defined as a stroke segment separated by a series of ambiguous zones, and a stroke is con-sidered as the concatenation of sub-strokes and ambiguous zones. A graph is constructed from the set of sub-strokes and ambiguous zones, and then the problem of stroke extraction is reduced to searching a certain number of stroke paths in the graph. On the basis of the observation that people usu-ally write a stroke in a consecutive movement, ambiguous zones are interpreted by continuity analysis using Bayesian classification, and the inference about the writing trajecto-ries in ambiguous zones is made from the sub-strokes jointed with these parts. Finally, B-spline interpolation is applied to reconstruct the strokes. 3.1 Character graph representation After all the ambiguous zones are detected, a character is divided into two types of regions: sub-stroke and ambiguous zone. We build an undirected graph G = ( V , E ) to model each character, where V and E are the sets of nodes (here we use node for graph G to distinguish from vertex for polygon) and edges, respectively. Each node in G represents one of the sub-strokes or ambiguous zones of the character. If an ambiguous zone z and a sub-stroke R , with the corresponding nodes of v and v j respectively, are jointed with each other, there is an edge between v i and v j , denoted as (v i ,v j )  X  E ,asshown in Fig. 8 .

If R is jointed with z at its both ends (as the sub-stroke g and the ambiguous zone h in Fig. 9 a), there are two (parallel) edges between v i and v j , which means that G is a multigraph. The following steps (like continuity analysis and stroke path searching) would be more complicated if they are performed in a multigraph. In order to simplify our analysis procedure, one of the parallel edges is removed by appending a vir-tual node to G . The virtual node v n corresponds to R , with (v Fig. 9 b, where k is a virtual node.

A node with degree three or more represents an ambiguous zone, while a node with degree less than three corresponds to a sub-stroke. According to the degree infor-mation, sub-strokes can be divided into three types: jointed with ambiguous zone(s) at one end (degree 1), at both ends (degree 2), and without any jointed ambiguous zones (degree 0). 3.2 Extraction of SPWTs Inmanyliteratures[ 4 , 20 ],apracticablewaytoreducethedis-tortions at stroke intersections is to trace the double boundary courses of stroke contours and recover writing trajectories by the set of sample points obtained from the tracing procedure. In this paper, we adapted the technique to our application of extracting SPWTs from sub-strokes. The whole process is performed by following three steps: 1. Localization of starting pointers : The tracing proce-dure is conducted by two pointers on the double boundary course of the stroke contour, and the first step is to locate their starting positions. In [ 20 ], the candidate starting points were obtained by detecting the maximum values from the domi-nant points of the contour, whereas Chouinard and Plamon-don [ 4 ] used two distinct methods: to locate line ends and to search for the smallest line width. According to the types of sub-strokes, some principles are employed to local the starting pointers in our method.

If the sub-stroke ss is jointed with ambiguous zone(s), the vertices of ambiguous zone at (one of) the junction(s) are chosen, as shown in Fig. 10 .

If ss is a sub-stroke without any jointed ambiguous zones (an isolated sub-stroke, in other words), the contour of ss is approximated by a polygon, and the center point P 1 of the curve that corresponds to the longest edge of the polygon is selected to be one of the starting pointers. The other pointer P 2 is defined as the intersection point of a line orthogonal to the tangent at P 1 with the opposite side of the contour, as shown in Fig. 11 .
At the same time, the tracing directions of the starting pointers can be determined. It should be emphasized that the isolated sub-stroke has to be traced twice along opposite directions (as the arrows shown in Fig. 11 ). 2. Movement of pointers : Suppose p 0 and p 1 are the current pointers, and trace along the direction of contour following and the counter direction, respectively. Let d s d ( p 0 , p 1 ) , p 0 = B w ( p 0 , d s ) , p 1 = F w ( p 1 , d ( p 0 , p 1 ) , d 1 = d ( p 0 , p 1 ) , and d 2 = d ( p 0 , (a) If d 0  X  d 1 and d 0  X  d 2 , then p 0 = p 0 , p 1 = p (b) If d 1  X  d 0 and d 1  X  d 2 , then p 0 = p 0 ;else (c) If d 2  X  d 0 and d 2  X  d 1 , then p 1 = p 1 . 3. Termination condition : The tracing procedure will be terminated if there is a traced pixel or a contour pixel of other sub-strokes contained in CS ( p i , p i )( i = 0 , 1 ) .
Each time the pointers are relocated, the center point of the straight line between p 0 and p 1 is recorded as a SPWT (see Fig. 10 ), and the sequence of SPWTs will be used to reconstruct strokes in the following sections.

It should be noted that if several ambiguous zones gather in a small area, some of the sub-strokes delimited by those ambiguous zones may be not long enough for making a cor-rect determination of continuity in the next step. A feasible solution of this problem is to merge those nodes of G whose corresponding ambiguous zones are close to each other into a new one. Suppose z 0 and z 1 are two ambiguous zones jointed by a sub-stroke ss .Let S w be the set of the SPWTs in ss ,if |
S w | &lt; 3, then replace the corresponding nodes of z 0 with a new node, and the connection relations among these nodes and the others in G are preserved. In particular, z z are jointed with each other directly, then | S w |= 0. 3.3 Continuity analysis Thecontinuityanalysisofsub-strokesistodeterminewhether or not a pair of sub-strokes jointed with the same ambiguous zone is contiguous in the writing sequence of a stroke, which plays a key role in the interpretation of ambiguous zone. Generally, studies in this area can be divided into two main categories: local analysis [ 20 ] and global search [ 10 ]. The main drawback of local analysis is the difficulty of design-ing general heuristic rules that have all the cases covered, and the global search is also limited to huge computational cost [ 21 ]. In contrast, the method of statistical analysis is a proper way to estimate continuous pairs, since it can be performed in a systematic and trainable manner to adapt to various writing styles with limited computational complexity. In this study, we treat the continuity analysis as a classification problem, and solve it using Bayesian classification.
 Definition 3 Given a pair of sub-strokes v i and v j , jointed with the same ambiguous zone v a .If v i and v j belong to the same stroke and their trajectories are contiguous, then the pair of v i and v j is continuous at v a , denoted as C (v or C (v j ,v a ,v i ) .
 Definition 4 Given a sub-stroke v d , jointed with an ambig-uous zone v a . If there is no sub-stroke v satisfying C (v v) , then v d is terminated at v a , denoted as T (v d ,v a ) Definition 5 Given a sub-stroke v m , jointed with an ambig-uous zone v a . If there are n ( n &gt; 1 ) sub-strokes v v  X  1  X  V , satisfying C (v m ,v a ,v i )( 0  X  i  X  n  X  1 ) , then is multi-traced at v a . 3.3.1 Feature extraction There are a lot of features involved in the process of con-tinuity analysis, such as orientation difference, width com-parison, curvature variation, domain knowledge on Chinese character, etc. On the basis of the observation that a continu-ous pair of sub-strokes is usually generated by a consecutive movement, several measurements are made to estimate the difference between each pair of sub-strokes in this study, including (a) stroke width: sub-strokes in a con-tinuous pair should have approximately the same width; (b) deviation angle: there is a small deviation angle between a continuous pair of sub-strokes; (c) alteration in curvature: human normally writes characters in the smooth way and the curvature cannot be abruptly changed.

Due to the instability of thinned result, we extract fea-tures from the SPWT sequence of sub-stroke. Suppose v i is a sub-stroke jointed with an ambiguous zone v a , the SPWT sequence of v i (started from the end of the junction) is rep-feature extraction is determining a support segment from the sequence, which can be seen as to find a subsequence of Sq started from the first SPWT p i , 0 (as the segment should be close to v a as much as possible). Thus, the length of sup-port segment (the sum of Euclidean distance from SPWT to SPWT) determines the feature resolution. On the one hand, we desire the length of support segment is as short as possi-ble. Because the shorter it is, the closer to our expectation the measurements of feature made on the segment (like tangent direction, curvature, etc.) get. On the other hand, segments without long enough length cause inaccurate measurements as well. Based on the discussions above, we give several constraints for the determination of support segment as fol-lows.

Let V ( p i , j , p i , k ) (0  X  j , k  X  m , j = k ) represents the direction angle from p i , j to p i , k , and  X  ( L ) = 1 E ( X ,  X ) = min ( |  X   X   X  | , 2  X   X  X   X   X   X  | ). (9) The support segment is represented as ( p i , 0 , p i , 1 where g i ( 2  X  g i  X  m ) is the maximum integer satisfying the following three conditions: (b) for k = 1 ,..., g i , E ( V ( p i , k  X  1 , p i , k ),  X  (c) for k = 1 ,..., g i , E ( V ( p i , k  X  1 , p i , k ),
After the determination of support segment, we estimate the mean tangent direction of the support segment of v i as  X  =  X  is taken into consideration as well. Suppose T 0 and T 1 are the vertices of ambiguous zone at the junction of v i and v a Fig. 12 ), the mean stroke width w i of the support segment can be approximated as w
For twosub-strokes v i and v j jointedwiththesameambig-uous zone v a , a 5-dimensional feature vector, X = { x 0 x , x 4 } , is exploited to characterize the attributes as follows: 1. x 0 denotes the degree of v a ; 2. x 1 depicts the angle deviation  X  i , j between v i and 3. let  X  m ( i , j ) be the minimum angle deviation between 4. x 3 describes the width difference between v i and v j 5. x 4 estimates the variation of curvature by
Using the features above, we build a Bayesian classifier for continuity analysis in the next section. 3.3.2 Bayesian classification In continuity analysis, we attempt to deduce the original motion intention of the writer from the detailed information of involved sub-strokes. As indicated before, a stroke can be seen as the sequence alternated between sub-strokes and ambiguous zones, represented as ( v s 0 , v a 0 , v s v , ... , v s n , v a n , v s strokes, v a i is an ambiguous zone, and v s search, the continuity of the pair of sub-strokes ( v s i determined by the evaluation on the whole stroke. However, for an arbitrary sub-stroke in the sequence v s j , the larger | i  X  j | is, the less helpful to the estimation of continuity v j become, or even in some cases the influence is negative. Actually, the detailed information of the joint sub-strokes is convincing enough to make the correct estimation of conti-nuity in most cases. From this point of view, one intuitive method is to assign a continuous score for each pair of sub-strokes using a decision function (like [ 20 ]). However, it is difficult to design a general decision function. Therefore, in our method, a Bayesian classifier is built to retrieve the conti-nuity of sub-stroke, in which statistical analysis is exploited to adapt to different handwriting styles.

A Bayesian belief network is a graphical model that rep-resents probabilistic dependence relationships among vari-ables of interest. In our application, the feature vector X and the class label attribute C (the propositions on node C are described as c = ( c 0 , c 1 ) representing the classes  X  X ontinu-ous X  and  X  X iscontinuous X , respectively) are taken as the sys-tem variables, after discretization of the continuous attributes ( x 1 , x 2 , x 3 , x 4 ). There are many methods of Bayesian struc-ture learning mentioned in [ 18 ], but they all suffer from huge computations. In order to improve the processing speed, we establish several possible structures of the Bayesian network based on the understanding of these variables in advance, and select the most likely one with the classical scoring criterion function proposed in [ 5 ] maximized (as shown in Fig. 13 ).
Since the degree of ambiguous zone reflects the local con-figuration around the area, the other variables are influenced by x 0 . Besides, the feature variables x 1 , x 2 , x 3 and x influenced by the class label attribute C as well. Furthermore, there is no correlation between the changes in curvature and width, thus x 4 and x 3 are independent to each other, and obvi-ously the variable x 2 is dependent of x 1 . Given the evidence of all the feature variables, the posterior probability of the proposition c i ( i = 0 , 1 ) on the node C can be calculated as P (
The conditional probability tables for each variable are calculated from a set of manual labeled samples collected from a standard handwritten Chinese character database, and the details will be given in Sect. 4 . 3.4 Search path Now that the continuity of sub-stroke has been retrieved, the problem of stroke extraction is transformed to that of search-ing all the simple paths in the Graph G with a certain number of conditions satisfied.

A simple path L = (v 0 ,v 1 ,...,v n ) in G is a stroke path , if the following two conditions are satisfied: 1. if n = 0, Deg (v 0 ) = 0, in other words, v 0 is an isolated 2. if n &gt; 0, then the two constraints below should be sub-
End constraint :(Deg (v 0 ) = 1or(Deg (v 0 )&gt; 2 and T ( v ))) and (Deg (v n ) = 1or(Deg (v n )&gt; 2 and T (v n  X  1
Non-end constraint : For each i = 1 , 2 ,..., n  X  1, Deg (v ) = 2or(Deg (v
There are five stroke paths in Fig. 8 , represented as ( a , d ,
Let S sp be the set of stroke paths and S s be the set of strokes. In most cases, | S sp |=| S s | , namely, the correspon-dence between S sp and S s is one-to-one. However, if there are some multi-traced sub-strokes in a character (as shown in Fig. 14 ), an individual stroke may be segmented into two or more stroke paths or some redundant stroke paths may also be embodied in S sp , especially in cursive handwritings, which lead to | S sp | &gt; | S s | . To cope with the problem, two criteria have to been taken.

Smoothest criterion : Suppose a simple path L = (v 0 , v ,...,v &gt; 2 and Deg (v n )&gt; 2; (2) v 1 and v n  X  1 are multi-traced at v sub-stroke.

If L is a sub-path of m +1 stroke paths: L 0 , L 1 ,..., L ( 0  X  i  X  m ) can be represented as ( f B ={ b paths m + 1 = r  X  q . However, according to our experience in writing Chinese characters, the number of strokes is always max ( r , q ) , which is less than m + 1. We assume that r based on the constraint that all the nodes have to be visited, the total number of combinations of different stroke paths is cp = We use the SLALOM approximation proposed in [ 9 ] to esti-mate the global smoothness of each of these cp combinations and choose the smoothest one.

Y-junction criterion : The cursively handwriting is a fun-damental factor contributing to multi-traced sub-strokes, in which Y-junctions are the most popular cases. Generally, the leg of Y-junction always corresponds to a double-traced sub-stroke. Consider Fig. 14 b as an example, the two stroke path L 1 ={ v 0 ,v 1 ,v 2 } and L 2 ={ v 0 ,v 1 ,v 3 } form a Y-junction, where v 0 is a double-traced sub-stroke. In terms of the generic patterns of Chinese handwriting, the writing trajectories generated by L 1 and L 2 are consecutive with-out any pen-up or pen-down between them (the arrows in Fig. 14 b show the possible writing directions of L 1 and L As regards the definition of stroke, L 1 and L 2 belong to the samestroke.Forgeneralization,let L = (v 0 ,v 1 ,...,v m ) L = (v 0 ,v 1 ,...,v n ) be two distinct stroke paths, if there is e e , and Deg ( e 0 ) = 1, L and L belong to the same stroke. To reconstruct the writing trajectory of each stroke, the B-spline interpolation is applied to each concatenation of the SPWT sequences of sub-strokes on stroke paths, as shown in Fig. 10 . The representation in this way is not only close to the original pen-tip movement of strokes, but also less sensitive to the noise on contour. 3.5 Correction A fundamental requirement for the algorithms of stroke extraction is that the connectivity of original strokes should be preserved. Unfortunately, there is an interstice between a pair of jointed sub-strokes with one of them terminated. To treat this case, an additional point would be appended to the SPWT sequence of the terminated sub-stroke (as the unfilled circle in Fig. 10 ). Let v d be a sub-stroke, v a be an ambiguous zone with T (v sequence of v d . For simplification, the method of cubic poly-nomial is adopted in this paper. The SPWT sequence of v d (started from the end of the junction of v d and v a ) is rep-resented as ( p 0 , p 1 ,..., p m ) and g is the maximum inte-ger with the two conditions below satisfied: 1) g  X  m ;2) for p 0 , p 1 ,..., p g , the horizontal or vertical coordinates are monotonic.Theparametersofthepolynomialareobtainedby nonlinear least squares estimation for each of p i ( 0  X  i
Assume that the curve intersects a stroke v c at the point p ,if p i is inside of the ambiguous zone (see Fig. 15 a), then p is appended to the SPWT sequence of v d ; else the centroid of the ambiguous zone p c is chosen (see Fig. 15 b). 4 Experiments and discussion To validate the effectiveness of the proposed method, a series of experiments have been conducted on a test set of images from HIT-MW database [ 26 ]. The set contains 7,631 char-acters and each test sample was normalized to be 100  X  100 pixels after segmenting. The experiments were executed on a PC with P4 1.8 Ghz processor and 512M memory under the development environment of Visual C++.NET. We divide the whole experiments into two parts: ambiguous zone detection and stroke extraction.

In the experiments, an efficient thinning algorithm has to been adopted for detection of CFPs and thinning-based stroke extraction. There are many thinning algorithms men-tioned in [ 12 ], and the method proposed in [ 23 ]isexploitedin this paper. This choice is our preference, and other thinning algorithms are feasible as well. 4.1 Ambiguous zone detection In this part of experiments, 200 handwritten Chinese char-acter images have been used to evaluate the performance of ambiguous zone detection, which embody 1,038 ambiguous zones totally. We compared our algorithm with the approach of window-scanning proposed in [ 20 ], and the results are summarized in Table 1 . From the table, it can be concluded that our algorithm is more accurate and effective than the method of window-scanning.

Some failures of the proposed method originate mainly from the following two reasons. One is that no CFP can be detected in some ambiguous zones with L-touching rela-tions among strokes. The other is some missing errors in the procedure of SCFP detection, which are always caused by some excessively long spurious branches. In fact, for the second case, the final stroke extraction will be not influenced. Because the abrupt turns with SCFPs can be seen as special cases of Y-junction, and the small branches are treated as the legs of Y-junction, which can be solved by Y-junction Criterion.

One issue has to be addressed is that the approach of window-scanning [ 20 ] is designed for characters of simple structure, thus may not be suitable for some complex char-acters such as Chinese. In fact, a set of handwritten Eng-lish word images has also been tested in our experiments. Although the results on this set show that the accuracy in ambiguous zone detection of the approach of window-scan-ning [ 20 ] is improved, the proposed method still has the bet-ter performance especially at the time cost. Since English words are beyond the scope of this paper, only the compara-tive results of Chinese characters are given. 4.2 Stroke extraction Experiments in this part aimed at testing the feasibility of stroke extraction. First, 400 character images were collected as the training samples for the continuity analysis of sub-strokes. After ambiguous zone detection, we gained a total of 8,433 candidate pairs of sub-strokes. Consequently, each pair of sub-strokes was classified into two groups manually according to their continuities. There are 2,744 continuous pairs of sub-strokes and 5,689 discontinuous pairs. Then, we calculated the probability assignments associated with all the possible network structures, and the most likely one is chosen by maximizing the scoring criterion function.

In the testing phase, we chose 500 handwritten Chinese character images randomly from the set of testing samples, containing 2,853 ambiguous zones and 11,683 pairs of sub-strokes. It is necessary to emphasize that the strokes here, as the basic primitives for recovering dynamic information, are different from the strokes defined in some of the existing strokeextractionalgorithms[ 1 , 6 , 13 , 16 , 17 , 27 ].Althoughthe original information about strokes has been lost in offline environment, the extracted strokes should conform to human perception of the definition of stroke. For comparison, we implemented a typical thinning based method proposed in [ 22 ] as well. This method combines both the global search and local analysis of contiguous probability together for dyn-amic information recovery. As the stroke is a part of writing trajectory without directional information, it is not difficult to adapt this method to the application of stroke extraction with all the edges in the graph covered. Some experimental results are shown in Fig. 16 . As is expected, the results of the thinning based method (Fig. 16 c) contain numerous arti-facts, mainly located in regions of ambiguity. In contrast, the results from the proposed method (Fig. 16 b) have preserved most of the original patterns, which is more conformable to human cognition.

Compared with the thinning based method, there are four advantages of our method: (1) The strokes yielded by our method are much smoother, especially in the ambiguous zones; (2) some detailed information is preserved. Consider the handwritten Chinese character  X  X ian X  in the third row of Fig. 16 as an example, the small hook at the end of the 4th stroke is kept in our method, however it has been ignored by the thinning based method in the process of spurious seg-ment identification (see the 5th stroke extracted by the thin-ning based method); (3) better performance in the continuous analysis. Although the method in [ 22 ] has sufficient accu-racy for single-stroke images, some principles (e.g., Node Traversal Rule) are not suitable for multi-stroke cases; (4) more close to the original trajectory and suitable for recover-ing dynamic information. The cursive segments are merged into one stroke by Y-junction Criterion, e.g., the 2nd stroke of the character  X  X ian X  in the 3rd row and the 12th stroke of the character  X  X ing X  in the last row of Fig. 16 b.
The processing time of our method is proportional to the length-to-width ratio of strokes. Hence, the interval of SPWT extraction can affect the processing speed in some sense. When dealing with characters with dispersed ambigu-ous zones, the computational cost can be reduced by increas-ing the interval, and with the quality of extracted strokes preserved. The comparisons of continuity analysis, stroke extraction and time cost are given in Table 2 . In conclu-sion, the proposed method exhibits better performance in the accuracy,continuity,andnoise-toleranceofstrokeextraction, although it consumes a little more processing time. 4.3 Discussion Though the proposed method works excellently on most of the tested images, some improvements should still be made in the future work. First, some individual strokes are extracted as one stroke for their L-touching relations. There is no sig-nificant difference between L-touching and L-turning in the sense of continuity analysis of sub-strokes, and the correct discrimination depends on the comprehensive understanding of the structure of Chinese characters.

Another problem is that there are multi-interpretations in the continuity analysis of sub-strokes. The evaluation of the continuity made by the Bayesian classifier is based on the statistical analysis of training data, which may conflict with human perception when the probabilities of  X  X ontinuous X  and  X  X iscontinuous X  are very close to each other. Besides, due to the randomness and unpredictability of handwriting, it is very difficult to collect enough training samples to deal with some special cases. Many researchers have taken great efforts to solve this serious problem, but most of them are lim-ited to the single-stroke images [ 21 , 22 , 20 ]. In addition, sev-eral methods using dynamic exemplars have been proposed recently [ 19 ]. However, the computational cost of searching the best matching results is huge, and it is obviously unprac-tical to build a general template library. Therefore, the inter-pretation of ambiguity is still one of the most challenging topics. The problem involves human visual understanding, and the resolutions rely, to some degree, on the prior knowl-edge about Chinese handwriting. All of these problems will be the topics for our future study. 5 Conclusions In this paper, a method of stroke extraction based on ambigu-ous zone detection has been developed. Different from other methods of stroke extraction, our method is exploited as a preprocessing step to recover dynamic information from sta-tic handwritten Chinese character images. First, ambiguous zones were detected using the feature points in the skeleton and the contour information around them. Then, a graph was built to model each character and the continuity of sub-stroke was retrieved by a Bayesian classification. Finally, we pro-posed several constraints and criteria to search stroke paths in the graph, and applied B-spline interpolation to reconstruct strokes. Experimental results show that the proposed method is effective and accurate both for ambiguous zone detection and stroke extraction. References
