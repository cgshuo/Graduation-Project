 This paper proposes the integration of semantic information drawn from a web application X  X  domain knowledge into all phases of the web usage mining process (preprocessing, pat-tern discovery, and recommendation/prediction). The goal is to have an intelligent semantics-aware web usage mining framework. This is accomplished by using semantic infor-mation in the sequential pattern mining algorithm to prune the search space and partially relieve the algorithm from support counting. In addition, semantic information is used in the prediction phase with low order Markov models, for less space complexity and accurate prediction, that will help solve ambiguous predictions problem.

Experimental results show that semantics-aware sequen-tial pattern mining algorithms can perform 4 times faster than regular non-semantics-aware algorithms with only 26% of the memory requirement.
 Categories and Subject Descriptors: H.2.8 [Database Management]: data mining; H.4.2 [Information Systems Ap-plications]: decision support; J.1 [Administrative Data Pro-cessing]: Marketing General Terms: Algorithms Keywords: Association Rules, Domain Ontology, Markov Model, Semantic Relatedness, Semantic Web, Sequential Pat-tern Mining, Web Usage Mining.
Web usage mining is concerned with finding user naviga-tional patterns on the world wide web by extracting knowl-edge from web logs. Finding frequent user X  X  web access se-quences is done by applying sequential pattern mining tech- X  This research was supported by the Natural Science and Engineering Research Council (NSERC) of Canada under an operating grant (OGP-0194134) and a University of Windsor grant.
 niques on the web log [1]. Its best characteristic is that it fits the problem of mining the web log directly. On the other hand, current sequential pattern mining techniques suffer from a number of drawbacks [4], some of which include: (1) Support counting has to be maintained at all times during mining, which adds to the memory size required, (2) the sequence data base is scanned on nearly every pass of the algorithm or a large data structure has to be maintained in memory all the time, and, (3) most importantly they do not incorporate semantic information into the mining process and do not provide a way for predicting future user access patterns or, at least, user X  X  next page request, as a direct re-sult of mining. Predicting user X  X  next page request usually takes place as an addistional phase after mining the web log.
This paper proposes to integrate semantic information, in the form of domain ontology from an e-Commerce applica-tion (e.g., eMart online catalogue) into the pattern discovery and prediction phases of web usage mining, for intelligent and better performing web usage mining.

This paper contributes to research as follows: 1. It provides a complete generic framework (called Se-2. It proposes to incorporate semantic information in the 3. It introduces a novel method for enriching the Markov Section 3 surveys related work. The integration of semantic information into the second phase of web usage mining is http://www.wsmo.org/TR/d3/d3.4/v0.2/#ontology www.ebay.com described in Section 4. In Section 5, semantic-aware next page request prediction is introduced, then a combination of both systems into one framework in SemAware is provided in Section 6. Section 7 describes experimental results. Finally, future work and conclusions are given in Section 8.
Pirolli and Pitkow X  X  research in [5], in addition to Sarukkai in [7], lead to the use of higher order Markov models for link prediction. The order of a Markov model corresponds to the number of prior events used in predicting a future event. So, a k th -order Markov model predicts the probability of the next event by looking at the past k events.

Using Markov models for prediction suffers from a number of drawbacks. As the order of the Markov model increases, so does the number of states and the model complexity. On the other hand, reducing the number of states leads to inac-curate transition probability matrix and lower coverage, thus less predictive power. As a solution to this tradeoff problem, the All-K th-Order Markov model [6] was proposed, such that if the k th -order Markov model cannot make the pre-diction then the (k-1) th -order Markov model is tried and so on. The problem with this model is the large number of states. Selective Markov models SMM [2], that only store some of the states within the model, have been proposed as a better solution to the mentioned tradeoff problem. This proposed solution may not be feasible when it comes to very large data sets. In order to overcome the problems associ-ated with All-K th-order and SMM, Khalil et al. [3] combine lower order all-K th Markov models with association rules to give more predictive power for a Markov model while at the same time retain small space complexity. In case predic-tion is ambiguous (i.e., two or more predictive pages hav-ing the same conditional probability), then association rules are constructed and consulted to resolve the ambiguity. In our proposed model semantic information is associated with the Markov model, during its creation to provide informed prediction without unjustified contradictions. To our knowl-edge semantic distance, or domain knowledge in general, has never been used to prune states in a Markov model or prune the search space in sequential pattern mining algorithms.
SemAware integrates semantic information into sequential pattern mining, this information is used during the pruning process to reduce the search space and minimize the num-ber of candidate frequent sequences, minimizing as well the number of database scans and support counting processes. Assume an e-Commerce application web site similar to Amazon.com, as an example web site to mine its server-side web log, call it eMart . Assume also that domain knowledge is available in the form of domain ontology provided by the ontology engineer during the design of the web site. A core ontology with axioms is defined by Stumme et al. [9] as a structure O := ( C ,  X  C , R , X ,  X  R , A ) consisting of:
Objects representing products in eMart , and dealt with in the mining process, are instances of concepts (also called classes ) represented formally in the underlying domain on-tology using a standard ontology framework, and an on-tology representation language like OWL 3 . Each web page in eMart is annotated with semantic information, during the development of the website, thus showing what ontol-ogy class it is an instance of.

Definition 1. A semantic object o i is represented as a tu-ple &lt; pg , ins i &gt; ,where pg represents the web page which contains the object/product, usually an URL address of the page, and ins i is an instance of a class c  X  X  , from the pro-vided ontology O , that represents the product being refer-enced, where i is an index for an enumeration of the objects in the sequence, from the web access sequence database be-ing mined.

During preprocessing, a simple parser goes through the web log and extracts all the ontology instances represented by web pages in the log, converting the web log to a sequence of semantic objects.

Definition 2. The Semantic Distance M o i ,o j is a measure of the distance in the ontology O between the two classes of which o i and o j are instances.
 In other words, it is the measure in units of semantic relat-edness between any two objects o i and o j .Inthispaper, semantic distance is achieved during preprocessing by com-puting the topological distance, in separating edges, between the two classes in the ontology.

Definition 3. A Semantic Distance Matrix M is an n  X  n matrix of all the semantic distances between the n objects represented by web pages in the sequence database. M is not necessarily symmetric, as the semantic distance between two ontology concepts (e.g., Digital Camera and Batteries ) is not always the same from both directions.
Definition 4. Maximum Semantic Distance  X  is a value which represents the maximum allowed semantic distance between any two semantic objects.
 Maximum semantic distance can be user-specified (i.e., a user with enough knowledge of the used ontology can specify this value) or it can be automatically calculated from the minimum support value specified for the mining algorithm, by applying it as a restriction on the number of edges in the ontology graph,  X  = min sup  X |R| .

Given the above definitions, we propose SemAwareSPM in Algorithm 1 for semantics-aware sequential pattern min-ing, and SemApJoin as a replacement generate-and-test pro-cedure [4], that uses semantic distance to prune candidate sequences, such that if the semantic distance between the two ( k-1 )-sequences is more than an allowed maximum se-mantic distance  X  , then the candidate k -sequence is pruned Algorithm 1 Semantics-aware SPM from the search space without the need for support count-ing. Figure 1 shows the details of SemApJoin which replaces Apriori-generate function in AprioriAll-sem (a semantics-aware variation of AprioriAll [1]). It uses semantic distance for pruning candidate sequences, such that a semantic ob-ject is not affixed to the sequence if its semantic distance from the last object in the current sequence is more than
A Markov process can be used to model the transitions between different web pages [7], or semantic objects in the sequence database. All transition probabilities are stored in an n  X  n transition probability matrix P ,where n is the num-ber of states in the model. Semantic information can be used in a Markov model as a proposed solution to provide seman-tically meaningful and accurate predictions without using complicated All-K th-order or SMM. The semantic distance matrix M is directly combined with the transition matrix P of a Markov model of the given sequence database, into a weight matrix W . This weight matrix is consulted by the predictor software, instead of P , to determine future page view transitions for caching or prefetching. http://www.w3.org/TR/owl-features/ Figure 2: Example transition probability matrix for a1 st -order Markov model.

Definition 5. The Weight Matrix W is an n  X  n matrix, which is the result of combining the semantic distance ma-trix M with the Markov transition probability matrix P ,as follows, Consider the transition probability matrix P in Figure 2. Assume that the user went through this sequence of page views &lt; beac &gt; , there is a 100% chance that the user will next view page b ,because P S 3 = c,S 2 = b =1.

A problem with using Markov models is ambiguous pre-dictions , that is when the system reaches a contradiction, such that there is a 50-50 chance of moving from the cur-rent state to any of the next two states. For example, notice, in Figure 2 that Pr ( c | a )= Pr ( d | a ), which means that there is an equal probability a user will view page c or d after viewing page a . Thus, the prediction capability of the sys-tem will not be accurate in terms of which is more relevant to predict after page a , and the prediction will be ambigu-ous. The proposed solution utilizes the semantic distance matrix to solve this problem. The transition matrix can be combined with the semantic distance matrix, resulting with W matrix according to equation (1). The resulting matrix provides weights for moving from one state to another, that can be used in place of transition probabilities, with no am-biguous predictions.
In light of the two proposed systems  X  X emantics-aware sequential pattern mining and semantics-aware next page request prediction X  a third system can be introduced, that combines sequential pattern mining and Markov models, in SemAware architecture as described by Algorithm 2. This combination is supposed to save overall mining time while running SemAware . Semantic-rich association rules are rules that carry semantic information in them, such that the rec-ommendation engine can make better informed decisions. Such rules are used to provide more accurate recommenda-tion than regular association rules, by overcoming ambigu-ous predictions problem. For example, consider the follow-ing two semantic-rich association rules. Algorithm 2 SemAware Framework Such that M o 2 ,o 5 &lt;M o 2 ,o 4 , meaning that o 5 is semantically closer to o 2 than o 4 is. Then, the recommendation engine will prefer o 5 over o 4 and the page( s ) representing product o 5 will be recommended.

Such association rules can also be used for more intelligent user behavior analysis, a capability that is not provided by regular association rules. An example of such capability is the generalization  X  X sers who rent a movie will also buy a snack X , which is a taxonomic abstraction resulting from mapping the representative frequent sequence to the ontol-ogy, and looking at higher levels in the concept hierarchy for generalization. This is referred to as concept generaliza-tion , and it allows the decision maker to make generaliza-tions from frequent user sequences, within the limits of the domain ontology available.
GSP-sem and AprioriAll-sem , semantics-aware variations of GSP [8] and AprioriAll [1] sequential pattern mining algo-rithms, were tested on two synthetic data sets. A medium sized data set, described as C10T6N40S4D50K [1], and a large sized data set described as C15T8N100S4D100K. These are mined at low minimum support of 1%, while the maxi-mum semantic distance is fixed at  X  =10. Semantic distances are entered as random numbers into the semantic distance matrix. Experimentation was made for CPU execution time and physical memory usage. It was found that semantic-aware algorithms, namely, GSP-sem and AprioriAll-sem ,re-quire on the average only 26% of the search space, although the semantic distance matrix is stored in the form of a di-rect access 2-dimensional array. A good increase in mining speed was also noticed. GSP-sem and AprioriAll-sem are 3-4 times faster than the other algorithms.

To test the scalability of the semantic algorithms against different values for  X  , a sparse synthetic data set is used, C8T5S4N100D200K. The results showed enhanced perfor-mance at smaller values for  X  , as expected, the result of pruning more candidate sequences during mining. To find the optimal value for  X  , that will produce mining results sim-ilar to non-semantic-aware algorithms, a real web log was constructed to resemble a web log of eMart , with 50,000 transactions and 100 unique web pages. The semantic dis-tance matrix was produced manually, from a given ontology, and fed to GSP-sem to mine the data set. It was found that values for  X  between3and4allow GSP-sem to produce same frequent sequences as GSP, and yet still use 38% less memory, and run 2.8 times faster than GSP.
SemAware is introduced as a comprehensive generic frame-work that integrates semantic information into all phases of web usage mining. Semantic information can be integrated into the pattern discovery phase, such that a semantic dis-tance matrix is used in the adopted sequential pattern min-ing algorithm to prune the search space and partially relieve the algorithm from support counting. A 1 st -order Markov model is also built during the mining process and enriched with semantic information, to be used for next page request prediction, as a solution to ambiguous predictions problem and providing an informed lower order Markov model with-out the need for complex higher order Markov models.
Future work includes (1) applying semantic-aware tech-niques introduced in this paper to pattern-growth sequen-tial pattern mining algorithms [4]. (2) Using the semantic distance matrix as a measure for pruning states in SMM [2]. (3) Investigating more into concept generalization, and the effect of semantics inclusion on answering more complex pattern queries with improved accuracy.
