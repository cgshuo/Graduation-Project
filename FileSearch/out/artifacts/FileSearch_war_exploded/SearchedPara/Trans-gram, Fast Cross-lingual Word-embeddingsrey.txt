 Word-embeddings are a representation of words with fixed-sized vectors. It is a distributed rep-resentation (Hinton, 1984) in the sense that there is not necessarily a one-to-one correspondence be-tween vector dimensions and linguistic properties. The linguistic properties are distributed along the dimensions of the space.

A popular method to compute word-embeddings is the Skip-gram model (Mikolov et al., 2013a). This algorithm learns high-quality word vectors with a computation cost much lower than previous methods. This allows the processing of very important amounts of data. For instance, a 1.6 billion words dataset can be processed in less than one day.

Several authors came up with different methods to align word-embeddings across two languages (Klementiev et al., 2012; Mikolov et al., 2013b; Lauly et al., 2014; Gouws et al., 2015).
In this article, we introduce a new method called Trans-gram, which learns word embed-dings aligned across many languages, in a simple and efficient fashion, using only sentence align-ments rather than word alignments. We compare our method with previous approaches on a cross-lingual document classification task and on a word translation task and obtain state of the art results on these tasks. Additionally, word-embeddings for twenty-one languages are learned simultaneously -to our knowledge -for the first time, in less than two and a half hours. Furthermore, we illustrate some interesting properties that are captured such as cross-lingual analogies, e.g ~ rey es  X  ~ Mann de + femme fr  X  ~ regina it which can be used for dis-ambiguation. A number of methods have been explored to train and align bilingual word-embeddings. These methods pursue two objectives: first, similar rep-resentations (i.e. spatially close) must be assigned to similar words (i.e.  X  X emantically close X ) within each language -this is the mono-lingual objec-tive ; second, similar representations must be as-signed to similar words across languages -this is the cross-lingual objective .

The simplest approach consists in separating the mono-lingual optimization task from the cross-lingual optimization task. This is for example the case in (Mikolov et al., 2013b). The idea is to sep-arately train two sets of word-embeddings for each language and then to do a parametric estimation of the mapping between word-embeddings across languages. This method was further extended by (Faruqui and Dyer, 2014). Even though those al-gorithms proved to be viable and fast, it is not clear whether or not a simple mapping between whole languages exists. Moreover, they require word alignments which are a rare and expensive resource.
Another approach consists in focusing entirely on the cross-lingual objective. This was explored in (Hermann and Blunsom, 2013; Lauly et al., 2014) where every couple of aligned sentences is transformed into two fixed-size vectors. Then, the model minimizes the Euclidean distance between both vectors. This idea allows processing corpus aligned at sentence-level rather than word-level. However, it does not leverage the abundance of ex-isting mono-lingual corpora .

A popular approach is to jointly optimize the mono-lingual and cross-lingual objectives simul-taneously. This is mostly done by minimizing the sum of mono-lingual loss functions for each lan-guage and the cross-lingual loss function. (Kle-mentiev et al., 2012) proved this approach to be useful by obtaining state-of-the-art results on sev-eral tasks. (Gouws et al., 2015) extends their work with a more computationally-efficient implemen-tation. 3.1 Skip-gram We briefly introduce the Skip-gram algorithm, as we will need it for further explanations. Skip-gram allows to train word embeddings for a lan-guage using mono-lingual data. This method uses a dual representation for words. Each word w has two embeddings: a target vector, ~w (  X  R D ), and a context vector, tries to estimate the probability of a word w to appear in the context of a word c . More pre-cisely we are learning the embeddings ~w ,  X  ( ~w  X  tion.

A simplified version of the loss function mini-mized by Skip-gram is the following: where C is the set of sentences constituting the training corpus, and s [ w  X  l : w + l ] is a word win-dow on the sentence s centered around w . For the sake of simplicity this equation does not include the  X  X egative-sampling X  term, see (Mikolov et al., 2013a) for more details.

Skip-gram can be seen as a materialization of the distributional hypothesis (Harris, 1968):  X  X ords used in similar contexts have similar meanings X . We will now see how to extend this idea to cross-lingual contexts. 3.2 Trans-gram In this section we introduce Trans-gram, a new method to compute aligned word-embeddings for a variety of languages.

Our method will minimize the summation of mono-lingual losses and cross-lingual losses. Like in BilBOWA (Gouws et al., 2015), we use Skip-gram as a mono-lingual loss. Assuming we are trying to learn aligned word vectors for languages e (e.g. English) and f (e.g. French), we note J e and J f the two mono-lingual losses.

In BilBOWA, the cross-lingual loss function is a distance between bag-of-words representa-tions of two aligned sentences. But as (Levy and Goldberg, 2014) showed that the Skip-gram loss function extracts interesting linguistic features, we wanted to use a loss function for the cross-lingual objective that will be closer to Skip-gram than Bil-BOWA.

Therefore, we introduce a new task, Trans-gram, similar to Skip-gram. Each English sen-tence s e in our aligned corpus A e,f is aligned with a French sentence s f . In Skip-gram, the context picked for a target word w e in a sentence s e is the set of words c e appearing in the window centered around w e : s e [ w e  X  l : w e + l ] . In Trans-gram, the context picked for a target word w e in a sentence s e will be all the words c f appearing in s f . The loss can thus be written as:
This loss isn X  X  symmetric with respect to the lan-guages. We, therefore, use two cross-lingual ob-jectives:  X  e,f aligning e  X  X  target vectors and f  X  X  context vectors and  X  f,e aligning f  X  X  target vectors and e  X  X  context vectors. By comparison BilBOWA only aligns e  X  X  target vectors and f  X  X  target vec-tors. The figure 1 illustrates the four objectives.
Notice that we make the assumption that the meaning of a word is uniformly distributed in the whole sentence. This assumption, although a naive one, gave us in practice excellent results. Also our method uses only sentence-aligned cor-pus and not word-aligned corpus which are rarer.
To add a third language i (e.g. Italian), we just have to add 3 new objectives ( J i ,  X  e,i and  X  i,e ) to the global loss. If available we could also add  X  f,i or  X  i,f but in our case we only used corpora aligned with English. objective per language ( J e and J objectives (  X  is extracted (red). In our experiments, we used the Europarl (Koehn, 2005) aligned corpora. Europarl-v7 has two pe-culiarities: firstly, the corpora are aligned at sentence-level; secondly each pair of languages contains English as one of its members: for in-stance, there is no French/Italian pair. In other words, English is used as a pivot language. No bi-lingual lexicons nor other bi-lingual datasets aligned at the word level were used.

Using only the Europarl-v7 texts as both mono-lingual and bilingual data, it took 10 minutes to align 2 languages, and two and a half hours to align the 21 languages of the corpus, in a 40 dimensional space on a 6 core computer. We also computed 300 dimensions vectors using the Wikipedia extracts provided by (Al-Rfou et al., 2013) as monolingual data for each language. The training time was 21 hours. 5.1 Reuters Cross-lingual Document We used a subset of the English and German sec-tions of the Reuters RCV1/RCV2 corpora (Lewis and Li, 2004) (10000 documents each), as in (Kle-mentiev et al., 2012), and we replicated the exper-imental setting. In the English dataset, there are four topics: CCAT (Corporate/Industrial), ECAT (Economics), GCAT (Government/Social), and MCAT (Markets). We used these topics as our la-bels and we only selected documents labeled with a single topic. We trained our classifier on the ar-ticles of one language, where each document was represented using an IDF weighted sum of the vec-tors of its words, we then tested it on the articles of the other language. The classifier used was an averaged perceptron, and we used the implemen-vectors were computed on the Europarl-v7 paral-lel corpus with size 40 like other methods. For this task only the target vectors where used.

We report the percentage precision obtained with our method, in comparison with other meth-ods, in Table 1. The table also include results obtained with 300 dimensions vectors trained by Trans-gram with the Europarl-v7 as parallel cor-pus and the Wikipedia as mono-lingual corpus. The previous state of the art results were detained (Gouws et al., 2015) with BilBOWA and (Lauly et al., 2014) with their Bilingual Auto-encoder model. This model learns word embeddings dur-ing a translation task that uses an encoder-decoder approach. We also report the scores from Kle-mentiev et al. who introduced the task and the BiCVM model scores from (Hermann and Blun-som, 2013).

The results show an overall significant improve-ment over the other methods, with the added ad-vantage of being computationally efficient. 5.2 P@k Word Translation Next we evaluated our method on a word transla-tion task, introduced in (Mikolov et al., 2013b) and used in (Gouws et al., 2015). The words were ex-pus. The experiments were done for two sets of translation: English to Spanish and Spanish to En-glish. (Mikolov et al., 2013b) extracted the top 6 K most frequent words and translated them with Google Translate. They used the top 5 K pairs to train a translation matrix, and evaluated their method on the remaining 1 K . As our English and Spanish vectors are already aligned we don X  X  need the 5 K training pairs and use only the 1 K test pairs.
 The reported score, the translation precision P @ k , is the fraction of test-pairs where the tar-get translation (Google Translate) is one of the k translations proposed by our model. For a given English word, w , our model takes its target vectors ~w and proposes the k closest Spanish word using the co-similarity of their vectors to ~w . We com-pare ourselves to the  X  X ranslation matrix X  method and to the BilBowa aligned vectors. We also re-port the scores obtained by a trivial algorithm that uses edit-distance to determine the closest transla-tion and by the Bing Translator service. 6.1 Cross-lingual disambiguation We now present the task of cross-lingual dis-ambiguation as an example of possible uses of aligned multilingual vectors. The goal of this task is to find a suitable representation of each sense of a given polysemous word. The idea of our method is to look for a language in which the undesired senses are represented by unambiguous words and then to perform some arithmetic operation.

Let X  X  illustrate the process with a concrete ex-ample: consider the French word  X  X rain X , train fr . The three closest Polish words to ~ train fr translate in English into  X  X ow X ,  X  X  train X  and  X  X hen X . This seems a poor matching. In fact, train fr is polyse-mous. It can name a line of railroad cars, but it is also used to form progressive tenses. The French  X  X l est en train de manger X  translates into  X  X e is eat ing  X , or in Italian  X  sta mangiando X .

As the Italian word  X  X ta X  is used to form pro-gressive tenses, it X  X  a good candidate to disam-biguate train fr . Let X  X  introduce the vector ~v = ~ train fr  X  ~ sta it . Now the three polish words clos-est to ~v translate in English into  X  X  train X ,  X  X  train X  and  X  X ailroad X . Therefore ~v is a better representa-tion for the railroad sense of train fr . 6.2 Transfer of linguistic features Another interesting property of the vectors gener-ated by Trans-gram is the transfer of linguistic fea-tures through a pivot language that does not pos-sess these features.

Let X  X  illustrate this by focusing on Latin lan-guages, which possess some features that En-glish does not, like rich conjugations. For ex-ample, in French and Italian the infinitives of  X  X at X  are manger fr and mangiare it , and the first plural persons are mangeons fr and mangiamo it . Actually in our models we observe the follow-ing alignments: ~ manger fr  X  ~ mangiare it and mangeons fr  X  ~ mangiamo it . It is thus remark-able to see that features not present in English match in languages aligned through English as the only pivot language. We also found similar transfers for the genders of adjectives and are cur-rently studying other similar properties captured by Trans-gram. In this paper we provided the following contri-butions: Trans-gram, a new method to compute cross-lingual word-embeddings in a single word space; state of the art results on cross-lingual NLP tasks; a sketch of a cross-lingual calculus to help disambiguate polysemous words; the exhibition of linguistic features transfers through a pivot-language not possessing those features.

We are still exploring promising properties of the generated vectors and their applications in other NLP tasks (Sentiment Analysis, NER...).
