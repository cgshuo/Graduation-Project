 Just one day before 911 event, a paper appeared in the Forbes ASAP [23], stated that the second generation of the Internet would happened in 2004 or 2005, and it would Global Grid instead of World Wide Web. Unlike the current World Wide Web, the Great Global Grid will be primarily a visual medium. The grid will be everywhere in our daily lives--automobile dashboards, wristwatches, PDAs, cell phones, appliances, game boys, cash registers, even on the walls of public spaces. Actually, the idea of grid computing can be traced back to metacomputing [14]. With the appearance of Globus [13][14], more and more attentions are put to the grid computing [1][3][15][17][21][25][31]. Grid computing visions to have all the re-sources and services over internet as a utility just like the way we use electricity and power station. We need not to know the type of machines providing the information, just as we do not know the type of electricity. 
There are lots of potential applications of grid computing. Besides traditional dis-tributed supercomputing, such as TeraGrid [35], IPG [26], GIG [22], UK e-Science [38], and ChinaGrid [6][20][39], computer supported cooperative work (CSCW), high throughput computing with massive simulation and parameter study, remote low-cost software access or software leasing, data intensive computing, such as Euro-pean DataGrid project [8], and on-demand computing are all the promising driven mainstream IT infrastructure for business applications. and to provide transparent way to access resources and services over internet, we till know still could not see the very perspective of using grid computing. Some even now, we could not have the "dial tone" of the world's aggregating computing power, able to leverage existing excess computing power through private grids. In maybe five years, we may see massive public grids on controlled basis--meaning inside a VPN or a secure environment [11]. 
To achieve above goals, we need to analysis the current challenges and barriers in developing, deploying, promoting, and using of grid computing. In this talk, I briefly based on my discussions with various peoples, including grid middleware developers, grid administrators, grid application developers, and grid users. Challenge 1: There is no clear standard to follow In order to masks the heterogeneous features of different resources in grid environ-ment, standard is the very first thing needs to be worked out. From the very beginning of Global Grid Forum (GGF) [12], standard is the most important task for GGF. Till now, Open Grid Systems Architecture (OGSA) [29][37] is now accepted by more and more people, more and more voices from industries advocate Web Services Resource Framework (WSRF) [7]. Even though, there are still different tones for the future standards of grid computing. Without the widely accepted standards, the more grid applications are developed, the more resource islands will incur. Challenge 2: Still lots of debate on what grid computing is, and what is not puting has been constant changing. One popular the definition from Globus team is that grid computing  X  X nables coordinated resource sharing and problem solving in dynamic, multi-institutional virtual organizations X  [17]. But due to the challenge 4 below, more and more people in grid computing area turn their attention from grid computing to services computing. Also wi th the success stealing of individual com-puter cycles, more and more peer-to-peer style computing paradigm are utilized to fulfill the requirement of high throughput computing, such as SETI@Home [33]. Now, more and more debates are raised for what indeed the grid computing is. Maybe the following words from UK Prime Minister Tony Blair are a possible under-standing of what the grid computing from ordinary users, grid  X  X ntends to make ac-cess to computing power, scientific data repositories and experimental facilities as easy as the Web makes access to information X  [4]. Challenge 3: Grid application development is still difficult These interfaces are not designed for grid a pplication developers. Most of grid appli-some senses embarrasses the widely use of grid computing. To provide a MPI-like grid application programming language is not enough, as many scientists are not fa-miliar with parallel programming language, and more and more grid applications are not scientific computing anymore. The ideal way for the grid computing application application development toolkit is needed. Challenge 4: Application area is limited and significant applications are lacked For most scientific applications, more and more super clusters can meet the require-ments of applications. For medium size scientific computations, it is much easier and efficient to own and use a local super cluste r. For special applications, such as global weather modeling and bioinformatics, a special designed super computer is needed, such as Earth-Simulator [9], Blue-Gene [5]. 
Due to the network latency and delay, a global super computer is not the most op-timized project than others in performance/ price ratio. Especially for data processing dataset remotely, as data storage is inexpensive than data transfer. Services computing services are a much easier way to use than to own. Challenge 5: Lots of efforts should be done to make a software package or a service useable over grid One major resource for the researchers is existing software package. Many existing software packages are running on a dedicate platform, such as SMP cluster, or over a dedicate operating system. Sometimes, it is very difficult to have them reusable over grid environment due to various reasons, such as lack of source code, copyright is-sues. Although there are some software vendors put their efforts on this issue, such as Oracle 10g [30], this figure with grid-enable software packages is far behind the de-velopment of grid middleware. For the time being, these software packages are en-directed to the grid node providing the services. Although this method solves the problem in some extend, in order to have more collaborative researches over grid, one versions. Challenge 6: Centralized management of grid computing Currently, most of grid computing projects are in centralized management scheme. organizations or institutions are limited, centralized management can be easily used to manage all the resources and services within a grid domain. The second is most grid middleware use  X  X ublish-find-bind X  web services scheme [40]. All the resources and services need to be registered to the Universal Discovery, Description and Integration (UDDI) center. This UDDI center becomes the central management point of grid system. 
This single domain scheme restricts the scalability of grid entities joining the ef-fort, and also will be the single point of failure of the whole grid system. ChinaGrid Support Platform (CGSP) [20] from ChinaGrid project is a first step towards multi-domain web services architecture. Therefore a domain manager is the key design philosophy in CGSP. Each domain manages the resources and services within the domain, and all the domain mangers among all the domains work collaboratively to exchange information and scheduling resources. Challenge 7: Lack of resource sharin g between variant types of services Each type of service has its own standard and protocol. Major grid computing appli-sons. One reason is that most grid appli cations are developed for different areas. Dif-ferent grid applications have different focus, sharing computing power, or sharing platforms. The resources or services for a particular grid platform could not be shard by other grid platforms. WSRF is a major effort to standardize the grid platform and the way to encapsulate and publish resources and services among different grid plat-form. But still, more and more computation oriented or data processing oriented grid applications still doubt the efficiency of using web services for computation and data processing. Challenge 8: Lack of security/t rust between different services The US Department of Energy (DoE) Office of Advanced Scientific Computing Re-search published a report which provides a good summary of the requirements for grid security [2]. The grid requires a security infrastructure with the following proper-ties: ease of use by users; conformation with the VO security needs while at the same appropriate authentication and encryption of all interactions. 
The Grid Security Infrastructure (GSI) [16] and MyProxy [27] are two primarily GSI do not provide an adequate solution to group oriented grid security applications. GSI cannot easily achieve a common key for a VO wide encrypted communication. remote user and its client system environment. For example, consider that WS-security [28] can achieve message encryption between a resource provider and a user. However, there is no way for a stakeholder in the resource provider to know whether or not the remote client environment is compromised (perhaps by a malicious code) even though it knows that such a compromise is equivalent to the nullification of the channel encryption service [24]. Trusted computing [36], which is an integrity protec-ence collaborations. Challenge 9: Business model of grid is ambiguous On-demand computing is often used as an example of a business model that can be used for grid computing. The model is that computing power is offered by companies or centers with idle computing power to companies that need computing power. This would be one of the first areas, where grid computing would have a major impact on business. Due to the network costs, this is not a good model in general [18]. Only for very compute intensive applications, like rendering, it makes sense. In most other cases, a Beowulf cluster [34], with faster network connections than WANs, is a more inexpensive choice. For 1 US$ one can get 1 GB sent over the WAN, or 10 Tops tera-CPU instructions, or 8 hours of CPU time, or 1 GB disk space, or 10 M database accesses, or 10 TB of disk bandwidth. It is fine to send a Gbyte of data over the net-work if it saves years of computation. But it is not economic to send a Kbyte question if the answer could be computed locally in a second. On-Demand computing is only economical for very CPU-intensive applications: about a CPU-day per Gbyte of net-work traffic. Challenge 10: Management and administration of grid is the most challenged one All above challenges are technical issues for grid computing. However, grid comput-ing is not only a technical concern. It is a huge project across many organizations and institutes in a geographically distributed environment. Therefore, management and when the design purpose for grid computing project is a production grid. UK e-center, grid support center, grid training center, grid software verification center. 
Also, there are huge resources and services existing in the grid environment. All these resources and services needed to be manageable. There are lots of software packages for monitoring the hardware resources, but seldom has functionality of monitoring services over the grid environment. How to monitor and manage these services efficiently and in real-time within grid domain is also a challenge. have been addressed. In one word, there is a long way to go for grid computing being widely accepted by end users. To end of this paper, I would like to quote a very inter-esting passage from [32] to state the metrics for the success of grid computing: 
The Grid can be considered a success when there are no more  X  X rid X  papers, but only footnote in the work that states,  X  X his work was achieved using the Grid X . 
The Grid can be considered a success when a supercomputer centers do not give a user the choice of using their machines or using the Grid, they just use the Grid. 
The Grid can be considered a success wh en a SuperComputing (SC) demo can be run any time of the year. 
Besides the above metrics, I would like to add two more metrics to further extend the success of grid computing from scientific computation area to service computing area: 
The Grid can be considered a success when it becomes a common tool to build various applications, and just like webpage, the people using grid to deign their appli-cations are not computer scientists. 
The Grid can be considered a success when a software package or a service can just be uploaded to the grid and become a grid wide service just like we use memory sticks, although they are produced from different manufactures, they can be immedi-ately recognized by various computers. 
